Implementation smell,Namespace,Class,File,Method,Description
Long Method,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The method has 294 lines of code.
Long Method,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The method has 138 lines of code.
Long Method,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,Connect,The method has 121 lines of code.
Long Method,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The method has 256 lines of code.
Long Method,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ConnectSocks5,The method has 120 lines of code.
Long Method,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The method has 370 lines of code.
Long Method,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The method has 233 lines of code.
Long Method,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The method has 151 lines of code.
Long Method,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The method has 200 lines of code.
Long Method,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The method has 207 lines of code.
Complex Method,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,Cyclomatic complexity of the method is 8
Complex Method,Renci.SshNet,SftpClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SftpClient.NET.cs,InternalSynchronizeDirectories,Cyclomatic complexity of the method is 13
Complex Method,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,Cyclomatic complexity of the method is 58
Complex Method,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ReceiveMessage,Cyclomatic complexity of the method is 11
Complex Method,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,OnNewKeysReceived,Cyclomatic complexity of the method is 8
Complex Method,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ConnectSocks4,Cyclomatic complexity of the method is 11
Complex Method,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ConnectSocks5,Cyclomatic complexity of the method is 57
Complex Method,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ConnectHttp,Cyclomatic complexity of the method is 10
Complex Method,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,Dispose,Cyclomatic complexity of the method is 11
Complex Method,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,Cyclomatic complexity of the method is 17
Complex Method,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivRem,Cyclomatic complexity of the method is 10
Complex Method,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GreatestCommonDivisor,Cyclomatic complexity of the method is 9
Complex Method,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,Cyclomatic complexity of the method is 11
Complex Method,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToString,Cyclomatic complexity of the method is 10
Complex Method,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToString,Cyclomatic complexity of the method is 12
Complex Method,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Parse,Cyclomatic complexity of the method is 38
Complex Method,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,Cyclomatic complexity of the method is 11
Complex Method,Renci.SshNet.Messages.Transport,ServiceAcceptMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Transport\ServiceAcceptMessage.cs,LoadData,Cyclomatic complexity of the method is 8
Complex Method,Renci.SshNet.Messages.Transport,ServiceRequestMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Transport\ServiceRequestMessage.cs,SaveData,Cyclomatic complexity of the method is 8
Complex Method,Renci.SshNet.Messages.Authentication,RequestMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Authentication\RequestMessage.cs,SaveData,Cyclomatic complexity of the method is 8
Complex Method,Renci.SshNet.Messages.Connection,GlobalRequestMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Connection\GlobalRequestMessage.cs,LoadData,Cyclomatic complexity of the method is 12
Complex Method,Renci.SshNet.Messages.Connection,GlobalRequestMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Connection\GlobalRequestMessage.cs,SaveData,Cyclomatic complexity of the method is 14
Complex Method,Renci.SshNet.NetConf,NetConfSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Netconf\NetConfSession.cs,OnDataReceived,Cyclomatic complexity of the method is 9
Complex Method,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,Cyclomatic complexity of the method is 9
Complex Method,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,Cyclomatic complexity of the method is 23
Complex Method,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,Cyclomatic complexity of the method is 23
Complex Method,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,Cyclomatic complexity of the method is 12
Complex Method,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,Cyclomatic complexity of the method is 29
Complex Method,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,Cyclomatic complexity of the method is 18
Complex Method,Renci.SshNet.Sftp,SftpFileStream,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpFileStream.cs,SftpFileStream,Cyclomatic complexity of the method is 39
Complex Method,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,Write,Cyclomatic complexity of the method is 12
Complex Method,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,Load,Cyclomatic complexity of the method is 23
Complex Method,Renci.SshNet.Sftp,SubsystemSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SubsystemSession.cs,WaitHandle,Cyclomatic complexity of the method is 8
Long Parameter List,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The method has 51 parameters.
Long Parameter List,Renci.SshNet,SftpClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SftpClient.NET.cs,BeginSynchronizeDirectories,The method has 5 parameters.
Long Parameter List,Renci.SshNet,KeyboardInteractiveConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\KeyboardInteractiveConnectionInfo.cs,KeyboardInteractiveConnectionInfo,The method has 6 parameters.
Long Parameter List,Renci.SshNet,KeyboardInteractiveConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\KeyboardInteractiveConnectionInfo.cs,KeyboardInteractiveConnectionInfo,The method has 7 parameters.
Long Parameter List,Renci.SshNet,KeyboardInteractiveConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\KeyboardInteractiveConnectionInfo.cs,KeyboardInteractiveConnectionInfo,The method has 5 parameters.
Long Parameter List,Renci.SshNet,KeyboardInteractiveConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\KeyboardInteractiveConnectionInfo.cs,KeyboardInteractiveConnectionInfo,The method has 6 parameters.
Long Parameter List,Renci.SshNet,KeyboardInteractiveConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\KeyboardInteractiveConnectionInfo.cs,KeyboardInteractiveConnectionInfo,The method has 7 parameters.
Long Parameter List,Renci.SshNet,KeyboardInteractiveConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\KeyboardInteractiveConnectionInfo.cs,KeyboardInteractiveConnectionInfo,The method has 8 parameters.
Long Parameter List,Renci.SshNet,PasswordConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PasswordConnectionInfo.cs,PasswordConnectionInfo,The method has 7 parameters.
Long Parameter List,Renci.SshNet,PasswordConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PasswordConnectionInfo.cs,PasswordConnectionInfo,The method has 8 parameters.
Long Parameter List,Renci.SshNet,PasswordConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PasswordConnectionInfo.cs,PasswordConnectionInfo,The method has 6 parameters.
Long Parameter List,Renci.SshNet,PasswordConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PasswordConnectionInfo.cs,PasswordConnectionInfo,The method has 7 parameters.
Long Parameter List,Renci.SshNet,PasswordConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PasswordConnectionInfo.cs,PasswordConnectionInfo,The method has 8 parameters.
Long Parameter List,Renci.SshNet,PasswordConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PasswordConnectionInfo.cs,PasswordConnectionInfo,The method has 7 parameters.
Long Parameter List,Renci.SshNet,PasswordConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PasswordConnectionInfo.cs,PasswordConnectionInfo,The method has 8 parameters.
Long Parameter List,Renci.SshNet,PasswordConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PasswordConnectionInfo.cs,PasswordConnectionInfo,The method has 6 parameters.
Long Parameter List,Renci.SshNet,PasswordConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PasswordConnectionInfo.cs,PasswordConnectionInfo,The method has 7 parameters.
Long Parameter List,Renci.SshNet,PasswordConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PasswordConnectionInfo.cs,PasswordConnectionInfo,The method has 8 parameters.
Long Parameter List,Renci.SshNet,PasswordConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PasswordConnectionInfo.cs,PasswordConnectionInfo,The method has 9 parameters.
Long Parameter List,Renci.SshNet,PrivateKeyConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyConnectionInfo.cs,PrivateKeyConnectionInfo,The method has 7 parameters.
Long Parameter List,Renci.SshNet,PrivateKeyConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyConnectionInfo.cs,PrivateKeyConnectionInfo,The method has 8 parameters.
Long Parameter List,Renci.SshNet,PrivateKeyConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyConnectionInfo.cs,PrivateKeyConnectionInfo,The method has 6 parameters.
Long Parameter List,Renci.SshNet,PrivateKeyConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyConnectionInfo.cs,PrivateKeyConnectionInfo,The method has 7 parameters.
Long Parameter List,Renci.SshNet,PrivateKeyConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyConnectionInfo.cs,PrivateKeyConnectionInfo,The method has 8 parameters.
Long Parameter List,Renci.SshNet,PrivateKeyConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyConnectionInfo.cs,PrivateKeyConnectionInfo,The method has 9 parameters.
Long Parameter List,Renci.SshNet,ScpClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ScpClient.cs,InternalDownload,The method has 5 parameters.
Long Parameter List,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The method has 14 parameters.
Long Parameter List,Renci.SshNet,Shell,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Shell.cs,Shell,The method has 11 parameters.
Long Parameter List,Renci.SshNet,SshClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshClient.cs,CreateShell,The method has 10 parameters.
Long Parameter List,Renci.SshNet,SshClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshClient.cs,CreateShell,The method has 9 parameters.
Long Parameter List,Renci.SshNet,SshClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshClient.cs,CreateShell,The method has 11 parameters.
Long Parameter List,Renci.SshNet,SshClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshClient.cs,CreateShell,The method has 10 parameters.
Long Parameter List,Renci.SshNet,SshClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshClient.cs,CreateShellStream,The method has 6 parameters.
Long Parameter List,Renci.SshNet,SshClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshClient.cs,CreateShellStream,The method has 7 parameters.
Long Parameter List,Renci.SshNet.Channels,ChannelSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelSession.cs,SendPseudoTerminalRequest,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Common,ASCIIEncoding,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\ASCIIEncoding.cs,GetBytes,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Common,ASCIIEncoding,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\ASCIIEncoding.cs,GetChars,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Parse,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography,SymmetricCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\SymmetricCipher.cs,EncryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography,SymmetricCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\SymmetricCipher.cs,DecryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security,DsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\DsaKey.cs,DsaKey,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security,RsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\RsaKey.cs,RsaKey,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Messages.Authentication,RequestMessageHost,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Authentication\RequestMessageHost.cs,RequestMessageHost,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Messages.Authentication,RequestMessagePublicKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Authentication\RequestMessagePublicKey.cs,RequestMessagePublicKey,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Messages.Connection,PseudoTerminalRequestInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Connection\ChannelRequest\PseudoTerminalInfo.cs,PseudoTerminalRequestInfo,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,Arc4Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\Arc4Cipher.cs,EncryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,Arc4Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\Arc4Cipher.cs,DecryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,Arc4Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\Arc4Cipher.cs,ProcessBytes,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,EncryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,DecryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,EncryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,DecryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,CipherMode,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CipherMode.cs,EncryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,CipherMode,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CipherMode.cs,DecryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,EncryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DecryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers.Modes,CbcCipherMode,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\Modes\CbcCipherMode.cs,EncryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers.Modes,CbcCipherMode,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\Modes\CbcCipherMode.cs,DecryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers.Modes,CfbCipherMode,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\Modes\CfbCipherMode.cs,EncryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers.Modes,CfbCipherMode,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\Modes\CfbCipherMode.cs,DecryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers.Modes,CtrCipherMode,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\Modes\CtrCipherMode.cs,EncryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers.Modes,CtrCipherMode,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\Modes\CtrCipherMode.cs,DecryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers.Modes,OfbCipherMode,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\Modes\OfbCipherMode.cs,EncryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Security.Cryptography.Ciphers.Modes,OfbCipherMode,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\Modes\OfbCipherMode.cs,DecryptBlock,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Sftp,SftpFileAttributes,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpFileAttributes.cs,SftpFileAttributes,The method has 7 parameters.
Long Parameter List,Renci.SshNet.Sftp,SftpFileStream,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpFileStream.cs,SftpFileStream,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Sftp,SftpFileStream,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpFileStream.cs,SftpFileStream,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Sftp,SftpFileStream,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpFileStream.cs,BeginRead,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Sftp,SftpFileStream,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpFileStream.cs,BeginWrite,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Sftp,SftpFileSytemInformation,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpFileSystemInformation.cs,SftpFileSytemInformation,The method has 11 parameters.
Long Parameter List,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestOpen,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestRead,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestWrite,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,FStatVfsRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\ExtendedRequests\FStatVfsRequest.cs,FStatVfsRequest,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,HardLinkRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\ExtendedRequests\HardLinkRequest.cs,HardLinkRequest,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpUnblockRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpUnblockRequest.cs,SftpUnblockRequest,The method has 7 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpBlockRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpBlockRequest.cs,SftpBlockRequest,The method has 7 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,PosixRenameRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\ExtendedRequests\PosixRenameRequest.cs,PosixRenameRequest,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpFSetStatRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpFSetStatRequest.cs,SftpFSetStatRequest,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpFStatRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpFStatRequest.cs,SftpFStatRequest,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpLinkRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpLinkRequest.cs,SftpLinkRequest,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpLStatRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpLStatRequest.cs,SftpLStatRequest,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpMkDirRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpMkDirRequest.cs,SftpMkDirRequest,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpMkDirRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpMkDirRequest.cs,SftpMkDirRequest,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpOpenDirRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpOpenDirRequest.cs,SftpOpenDirRequest,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpOpenRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpOpenRequest.cs,SftpOpenRequest,The method has 7 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpOpenRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpOpenRequest.cs,SftpOpenRequest,The method has 8 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpReadDirRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpReadDirRequest.cs,SftpReadDirRequest,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpReadLinkRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpReadLinkRequest.cs,SftpReadLinkRequest,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpReadRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpReadRequest.cs,SftpReadRequest,The method has 7 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpRealPathRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpRealPathRequest.cs,SftpRealPathRequest,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpRemoveRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpRemoveRequest.cs,SftpRemoveRequest,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpRenameRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpRenameRequest.cs,SftpRenameRequest,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpRmDirRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpRmDirRequest.cs,SftpRmDirRequest,The method has 5 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpSetStatRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpSetStatRequest.cs,SftpSetStatRequest,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpStatRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpStatRequest.cs,SftpStatRequest,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpSymLinkRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpSymLinkRequest.cs,SftpSymLinkRequest,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,SftpWriteRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpWriteRequest.cs,SftpWriteRequest,The method has 6 parameters.
Long Parameter List,Renci.SshNet.Sftp.Requests,StatVfsRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\ExtendedRequests\StatVfsRequest.cs,StatVfsRequest,The method has 6 parameters.
Long Statement,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,Authenticate,The length of the statement  "		var method = this.AuthenticationMethods.Where (a => allowedAuthentications.Contains (a.Name) && !triedAuthentications.Contains (a.Name)).FirstOrDefault (); " is 155.
Long Statement,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,Authenticate,The length of the statement  "		if (authenticated == AuthenticationResult.PartialSuccess || (method.AllowedAuthentications != null && method.AllowedAuthentications.Count () < allowedAuthentications.Count ())) { " is 178.
Long Statement,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,Authenticate,The length of the statement  "		if (authenticated == AuthenticationResult.Failure && (triedAuthentications.Count () == allowedAuthentications.Count ())) { " is 122.
Long Statement,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,Session_UserAuthenticationBannerReceived,The length of the statement  "		this.AuthenticationBanner (this' new AuthenticationBannerEventArgs (this.Username' e.Message.Message' e.Message.Language)); " is 123.
Long Statement,Renci.SshNet,SftpClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SftpClient.NET.cs,EndSynchronizeDirectories,The length of the statement  "		throw new ArgumentException ("Either the IAsyncResult object did not come from the corresponding async method on this type' or EndExecute was called multiple times with the same IAsyncResult."); " is 194.
Long Statement,Renci.SshNet,KeyboardInteractiveAuthenticationMethod,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\KeyboardInteractiveAuthenticationMethod.cs,Session_MessageReceived,The length of the statement  "		var eventArgs = new AuthenticationPromptEventArgs (this.Username' informationRequestMessage.Instruction' informationRequestMessage.Language' informationRequestMessage.Prompts); " is 176.
Long Statement,Renci.SshNet,PasswordAuthenticationMethod,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PasswordAuthenticationMethod.cs,Session_MessageReceived,The length of the statement  "				this._session.SendMessage (new RequestMessagePassword (ServiceName.Connection' this.Username' this._password' eventArgs.NewPassword)); " is 134.
Long Statement,Renci.SshNet,PrivateKeyAuthenticationMethod,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyAuthenticationMethod.cs,Authenticate,The length of the statement  "		var message = new RequestMessagePublicKey (ServiceName.Connection' this.Username' keyFile.HostKey.Name' keyFile.HostKey.Data); " is 126.
Long Statement,Renci.SshNet,PrivateKeyAuthenticationMethod,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyAuthenticationMethod.cs,Authenticate,The length of the statement  "			var signatureMessage = new RequestMessagePublicKey (ServiceName.Connection' this.Username' keyFile.HostKey.Name' keyFile.HostKey.Data); " is 135.
Long Statement,Renci.SshNet,NetConfClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\NetConfClient.cs,SendCloseRpc,The length of the statement  "	rpc.LoadXml ("<?xml version=\"1.0\" encoding=\"UTF-8\"?><rpc message-id=\"6666\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"><close-session/></rpc>"); " is 156.
Long Statement,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The length of the statement  "			throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName)); " is 128.
Long Statement,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,Connect,The length of the statement  "				throw new SshConnectionException (string.Format (CultureInfo.CurrentCulture' "Server version '{0}' is not supported."' version)' DisconnectReason.ProtocolVersionNotSupported); " is 175.
Long Statement,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,Connect,The length of the statement  "			this.SocketWrite (Encoding.UTF8.GetBytes (string.Format (CultureInfo.InvariantCulture' "{0}\x0D\x0A"' this.ClientVersion))); " is 124.
Long Statement,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,SendMessage,The length of the statement  "		throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' "Payload cannot be more then {0} bytes."' Session.MAXIMUM_PAYLOAD_SIZE)); " is 153.
Long Statement,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,SendMessage,The length of the statement  "			throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' "Packet is too big. Maximum packet size is {0} bytes."' Session.MAXIMUM_PACKET_SIZE)); " is 166.
Long Statement,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ReceiveMessage,The length of the statement  "		throw new SshConnectionException (string.Format (CultureInfo.CurrentCulture' "Bad packet length {0}"' packetLength)' DisconnectReason.ProtocolError); " is 149.
Long Statement,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,OnKeyExchangeInitReceived,The length of the statement  "		if (messageMetadata.Activated == true && messageMetadata.Number > 2 && (messageMetadata.Number < 20 || messageMetadata.Number > 30)) " is 132.
Long Statement,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,OnKeyExchangeInitReceived,The length of the statement  "	this._keyExchange = this.ConnectionInfo.KeyExchangeAlgorithms [keyExchangeAlgorithmName].CreateInstance<KeyExchange> (); " is 120.
Long Statement,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ConnectHttp,The length of the statement  "	this.SocketWrite (encoding.GetBytes (string.Format ("CONNECT {0}:{1} HTTP/1.0\r\n"' this.ConnectionInfo.Host' this.ConnectionInfo.Port))); " is 138.
Long Statement,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ConnectHttp,The length of the statement  "		var authorization = string.Format ("Proxy-Authorization: Basic {0}\r\n"' Convert.ToBase64String (encoding.GetBytes (string.Format ("{0}:{1}"' this.ConnectionInfo.ProxyUsername' this.ConnectionInfo.ProxyPassword)))); " is 215.
Long Statement,Renci.SshNet,Shell,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Shell.cs,Start,The length of the statement  "	this._channel.SendPseudoTerminalRequest (this._terminalName' this._columns' this._rows' this._width' this._height' this._terminalModes); " is 136.
Long Statement,Renci.SshNet,SshClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshClient.cs,CreateShell,The length of the statement  "	return new Shell (this.Session' input' output' extendedOutput' terminalName' columns' rows' width' height' terminalModes' bufferSize); " is 134.
Long Statement,Renci.SshNet,SshClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshClient.cs,CreateShell,The length of the statement  "	return this.CreateShell (input' output' extendedOutput' terminalName' columns' rows' width' height' terminalModes' 1024); " is 121.
Long Statement,Renci.SshNet,SshClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshClient.cs,CreateShell,The length of the statement  "	return this.CreateShell (this._inputStream' output' extendedOutput' terminalName' columns' rows' width' height' terminalModes' bufferSize); " is 139.
Long Statement,Renci.SshNet,SshClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshClient.cs,CreateShell,The length of the statement  "	return this.CreateShell (encoding' input' output' extendedOutput' terminalName' columns' rows' width' height' terminalModes' 1024); " is 131.
Long Statement,Renci.SshNet,SshCommand,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshCommand.cs,EndExecute,The length of the statement  "	throw new ArgumentException ("Either the IAsyncResult object did not come from the corresponding async method on this type' or EndExecute was called multiple times with the same IAsyncResult."); " is 194.
Long Statement,Renci.SshNet,SshCommand,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshCommand.cs,Session_Disconnected,The length of the statement  "	this._exception = new SshConnectionException ("An established connection was aborted by the software in your host machine."' DisconnectReason.ConnectionLost); " is 158.
Long Statement,Renci.SshNet,SshCommand,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshCommand.cs,WaitHandle,The length of the statement  "		throw new SshOperationTimeoutException (string.Format (CultureInfo.CurrentCulture' "Command '{0}' has timed out."' this.CommandText)); " is 134.
Long Statement,Renci.SshNet.Channels,Channel,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\Channel.cs,OnChannelRequest,The length of the statement  "			throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "Request '{0}' is not supported."' e.Message.RequestName)); " is 135.
Long Statement,Renci.SshNet.Channels,Channel,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\Channel.cs,AdjustDataWindow,The length of the statement  "		this.SendMessage (new ChannelWindowAdjustMessage (this.RemoteChannelNumber' this._initialWindowSize - this.LocalWindowSize)); " is 125.
Long Statement,Renci.SshNet.Channels,ChannelDirectTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelDirectTcpip.cs,Open,The length of the statement  "	this.SendMessage (new ChannelOpenMessage (this.LocalChannelNumber' this.LocalWindowSize' this.PacketSize' new DirectTcpipChannelInfo (remoteHost' port' ep.Address.ToString ()' (uint)ep.Port))); " is 193.
Long Statement,Renci.SshNet.Channels,ChannelDirectTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelDirectTcpip.cs,Bind,The length of the statement  "				if (exp.SocketErrorCode == SocketError.WouldBlock || exp.SocketErrorCode == SocketError.IOPending || exp.SocketErrorCode == SocketError.NoBufferSpaceAvailable) { " is 161.
Long Statement,Renci.SshNet.Channels,ChannelForwardedTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelForwardedTcpip.cs,Bind,The length of the statement  "		this.SendMessage (new ChannelOpenConfirmationMessage (this.RemoteChannelNumber' this.LocalWindowSize' this.PacketSize' this.LocalChannelNumber)); " is 145.
Long Statement,Renci.SshNet.Channels,ChannelForwardedTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelForwardedTcpip.cs,Bind,The length of the statement  "			if (exp.SocketErrorCode == SocketError.WouldBlock || exp.SocketErrorCode == SocketError.IOPending || exp.SocketErrorCode == SocketError.NoBufferSpaceAvailable) { " is 161.
Long Statement,Renci.SshNet.Channels,ChannelSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelSession.cs,Open,The length of the statement  "			throw new SshException (string.Format (CultureInfo.CurrentCulture' "Failed to open a channel after {0} attempts."' this._failedOpenAttempts)); " is 142.
Long Statement,Renci.SshNet.Channels,ChannelSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelSession.cs,SendPseudoTerminalRequest,The length of the statement  "	this.SendMessage (new ChannelRequestMessage (this.RemoteChannelNumber' new PseudoTerminalRequestInfo (environmentVariable' columns' rows' width' height' terminalModeValues))); " is 175.
Long Statement,Renci.SshNet.Channels,ChannelSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelSession.cs,SendX11ForwardingRequest,The length of the statement  "	this.SendMessage (new ChannelRequestMessage (this.RemoteChannelNumber' new X11ForwardingRequestInfo (isSingleConnection' protocol' cookie' screenNumber))); " is 155.
Long Statement,Renci.SshNet.Channels,ChannelSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelSession.cs,SendEnvironmentVariableRequest,The length of the statement  "	this.SendMessage (new ChannelRequestMessage (this.RemoteChannelNumber' new EnvironmentVariableRequestInfo (variableName' variableValue))); " is 138.
Long Statement,Renci.SshNet.Channels,ChannelSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelSession.cs,SendExecRequest,The length of the statement  "	this.SendMessage (new ChannelRequestMessage (this.RemoteChannelNumber' new ExecRequestInfo (command' this.ConnectionInfo.Encoding))); " is 133.
Long Statement,Renci.SshNet.Channels,ChannelSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelSession.cs,SendWindowChangeRequest,The length of the statement  "	this.SendMessage (new ChannelRequestMessage (this.RemoteChannelNumber' new WindowChangeRequestInfo (columns' rows' width' height))); " is 132.
Long Statement,Renci.SshNet.Channels,ChannelSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelSession.cs,SendExitSignalRequest,The length of the statement  "	this.SendMessage (new ChannelRequestMessage (this.RemoteChannelNumber' new ExitSignalRequestInfo (signalName' coreDumped' errorMessage' language))); " is 148.
Long Statement,Renci.SshNet.Channels,ChannelSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelSession.cs,SendChannelOpenMessage,The length of the statement  "		this.SendMessage (new ChannelOpenMessage (this.LocalChannelNumber' this.LocalWindowSize' this.PacketSize' new SessionChannelOpenInfo ())); " is 138.
Long Statement,Renci.SshNet.Common,AsyncResult,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\AsyncResult.cs,SetAsCompleted,The length of the statement  "	Int32 prevState = Interlocked.Exchange (ref this._completedState' completedSynchronously ? _stateCompletedSynchronously : _stateCompletedAsynchronously); " is 153.
Long Statement,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Log,The length of the statement  "	if (value._sign == -1 || baseValue == 1.0d || baseValue == -1.0d || baseValue == Double.NegativeInfinity || double.IsNaN (baseValue)) " is 133.
Long Statement,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,ReadInteger,The length of the statement  "	//return (int)(data[0] << 56 | data[1] << 48 | data[2] << 40 | data[3] << 32 | data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]); " is 135.
Long Statement,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,Write,The length of the statement  "	Buffer.BlockCopy (identifier.Identifiers' 2 * sizeof(ulong)' temp' 1 * sizeof(ulong)' (identifier.Identifiers.Length - 2) * sizeof(ulong)); " is 139.
Long Statement,Renci.SshNet.Common,PipeStream,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\PipeStream.cs,Read,The length of the statement  "		throw new ArgumentException (String.Format (CultureInfo.CurrentCulture' "count({0}) > mMaxBufferLength({1})"' count' _maxBufferLength)); " is 136.
Long Statement,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadBytes,The length of the statement  "	// Note that this also prevents allocating non-relevant lengths' such as if length is greater than _data.Count but less than int.MaxValue. " is 138.
Long Statement,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt64,The length of the statement  "	return ((ulong)data [0] << 56 | (ulong)data [1] << 48 | (ulong)data [2] << 40 | (ulong)data [3] << 32 | (ulong)data [4] << 24 | (ulong)data [5] << 16 | (ulong)data [6] << 8 | data [7]); " is 185.
Long Statement,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadInt64,The length of the statement  "	return (int)(data [0] << 56 | data [1] << 48 | data [2] << 40 | data [3] << 32 | data [4] << 24 | data [5] << 16 | data [6] << 8 | data [7]); " is 141.
Long Statement,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadAsciiString,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "Strings longer than {0} is not supported."' int.MaxValue)); " is 136.
Long Statement,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadString,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "Strings longer than {0} is not supported."' int.MaxValue)); " is 136.
Long Statement,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadBinaryString,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "Strings longer than {0} is not supported."' int.MaxValue)); " is 136.
Long Statement,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessWord,The length of the statement  "	this.X [this._offset++] = (input [inOff] & 0xff) | ((input [inOff + 1] & 0xff) << 8) | ((input [inOff + 2] & 0xff) << 16) | ((input [inOff + 3] & 0xff) << 24); " is 159.
Long Statement,Renci.SshNet.Security.Cryptography,DsaDigitalSignature,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\DsaDigitalSignature.cs,Sign,The length of the statement  "	return r.ToByteArray ().Reverse ().TrimLeadingZero ().Concat (s.ToByteArray ().Reverse ().TrimLeadingZero ()).ToArray (); " is 121.
Long Statement,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessWord,The length of the statement  "	this._hashValue [this._offset++] = (input [inOff] & 0xff) | ((input [inOff + 1] & 0xff) << 8) | ((input [inOff + 2] & 0xff) << 16) | ((input [inOff + 3] & 0xff) << 24); " is 168.
Long Statement,Renci.SshNet.Security,KeyExchangeEllipticCurveDiffieHellman,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\KeyExchangeEllipticCurveDiffieHellman.cs,Start,The length of the statement  "	BigInteger.TryParse ("00FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF"' System.Globalization.NumberStyles.AllowHexSpecifier' CultureInfo.CurrentCulture' out p); " is 179.
Long Statement,Renci.SshNet.Security,KeyExchangeEllipticCurveDiffieHellman,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\KeyExchangeEllipticCurveDiffieHellman.cs,Start,The length of the statement  "	BigInteger.TryParse ("00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7634D81F4372DDF581A0DB248B0A77AECEC196ACCC52973"' System.Globalization.NumberStyles.AllowHexSpecifier' CultureInfo.CurrentCulture' out n); " is 211.
Long Statement,Renci.SshNet.Security,KeyExchangeEllipticCurveDiffieHellman,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\KeyExchangeEllipticCurveDiffieHellman.cs,Start,The length of the statement  "	BigInteger.TryParse ("00036B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296"' System.Globalization.NumberStyles.AllowHexSpecifier' CultureInfo.CurrentCulture' out G); " is 181.
Long Statement,Renci.SshNet.Messages.Connection,ChannelOpenMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Connection\ChannelOpen\ChannelOpenMessage.cs,LoadData,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "Channel type '{0}' is not supported."' channelName)); " is 130.
Long Statement,Renci.SshNet.Messages,Message,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Message.cs,GetBytes,The length of the statement  "	var messageAttribute = this.GetType ().GetCustomAttributes (typeof(MessageAttribute)' true).SingleOrDefault () as MessageAttribute; " is 131.
Long Statement,Renci.SshNet.Messages,Message,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Message.cs,GetBytes,The length of the statement  "		throw new SshException (string.Format (CultureInfo.CurrentCulture' "Type '{0}' is not a valid message type."' this.GetType ().AssemblyQualifiedName)); " is 150.
Long Statement,Renci.SshNet.Messages,Message,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Message.cs,ToString,The length of the statement  "	var messageAttribute = this.GetType ().GetCustomAttributes (typeof(MessageAttribute)' true).SingleOrDefault () as MessageAttribute; " is 131.
Long Statement,Renci.SshNet.NetConf,NetConfSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Netconf\NetConfSession.cs,OnDataReceived,The length of the statement  "		this._usingFramingProtocol = (this.ServerCapabilities.SelectSingleNode ("/nc:hello/nc:capabilities/nc:capability[text()='urn:ietf:params:netconf:base:1.1']"' ns) != null); " is 171.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,SubWord,The length of the statement  "	return (uint)S [x & 255] | (((uint)S [(x >> 8) & 255]) << 8) | (((uint)S [(x >> 16) & 255]) << 16) | (((uint)S [(x >> 24) & 255]) << 24); " is 137.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The length of the statement  "	C0 = (uint)S [r0 & 255] ^ (((uint)S [(r1 >> 8) & 255]) << 8) ^ (((uint)S [(r2 >> 16) & 255]) << 16) ^ (((uint)S [r3 >> 24]) << 24) ^ KW [r * 4 + 0]; " is 148.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The length of the statement  "	C1 = (uint)S [r1 & 255] ^ (((uint)S [(r2 >> 8) & 255]) << 8) ^ (((uint)S [(r3 >> 16) & 255]) << 16) ^ (((uint)S [r0 >> 24]) << 24) ^ KW [r * 4 + 1]; " is 148.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The length of the statement  "	C2 = (uint)S [r2 & 255] ^ (((uint)S [(r3 >> 8) & 255]) << 8) ^ (((uint)S [(r0 >> 16) & 255]) << 16) ^ (((uint)S [r1 >> 24]) << 24) ^ KW [r * 4 + 2]; " is 148.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The length of the statement  "	C3 = (uint)S [r3 & 255] ^ (((uint)S [(r0 >> 8) & 255]) << 8) ^ (((uint)S [(r1 >> 16) & 255]) << 16) ^ (((uint)S [r2 >> 24]) << 24) ^ KW [r * 4 + 3]; " is 148.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The length of the statement  "	C0 = (uint)Si [r0 & 255] ^ (((uint)Si [(r3 >> 8) & 255]) << 8) ^ (((uint)Si [(r2 >> 16) & 255]) << 16) ^ (((uint)Si [r1 >> 24]) << 24) ^ KW [0 * 4 + 0]; " is 152.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The length of the statement  "	C1 = (uint)Si [r1 & 255] ^ (((uint)Si [(r0 >> 8) & 255]) << 8) ^ (((uint)Si [(r3 >> 16) & 255]) << 16) ^ (((uint)Si [r2 >> 24]) << 24) ^ KW [0 * 4 + 1]; " is 152.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The length of the statement  "	C2 = (uint)Si [r2 & 255] ^ (((uint)Si [(r1 >> 8) & 255]) << 8) ^ (((uint)Si [(r0 >> 16) & 255]) << 16) ^ (((uint)Si [r3 >> 24]) << 24) ^ KW [0 * 4 + 2]; " is 152.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The length of the statement  "	C3 = (uint)Si [r3 & 255] ^ (((uint)Si [(r2 >> 8) & 255]) << 8) ^ (((uint)Si [(r1 >> 16) & 255]) << 16) ^ (((uint)Si [r0 >> 24]) << 24) ^ KW [0 * 4 + 3]; " is 152.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,Arc4Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\Arc4Cipher.cs,ProcessBytes,The length of the statement  "		outputBuffer [i + outputOffset] = (byte)(inputBuffer [i + inputOffset] ^ this._engineState [(this._engineState [this._x] + this._engineState [this._y]) & 0xff]); " is 161.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The length of the statement  "		newKey [i] = (int)((uint)((i1 & 0x00fc0000) << 6) | (uint)((i1 & 0x00000fc0) << 10) | ((uint)(i2 & 0x00fc0000) >> 10) | ((uint)(i2 & 0x00000fc0) >> 6)); " is 152.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The length of the statement  "		newKey [i + 1] = (int)((uint)((i1 & 0x0003f000) << 12) | (uint)((i1 & 0x0000003f) << 16) | ((uint)(i2 & 0x0003f000) >> 4) | (uint)(i2 & 0x0000003f)); " is 149.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,RsaCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\RsaCipher.cs,Transform,The length of the statement  "		BigInteger blindedInput = BigInteger.PositiveMod ((BigInteger.ModPow (random' this._key.Exponent' this._key.Modulus) * input)' this._key.Modulus); " is 146.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb0 (this._workingKey [0] ^ this._x0' this._workingKey [1] ^ this._x1' this._workingKey [2] ^ this._x2' this._workingKey [3] ^ this._x3); " is 137.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb1 (this._workingKey [4] ^ this._x0' this._workingKey [5] ^ this._x1' this._workingKey [6] ^ this._x2' this._workingKey [7] ^ this._x3); " is 137.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb2 (this._workingKey [8] ^ this._x0' this._workingKey [9] ^ this._x1' this._workingKey [10] ^ this._x2' this._workingKey [11] ^ this._x3); " is 139.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb3 (this._workingKey [12] ^ this._x0' this._workingKey [13] ^ this._x1' this._workingKey [14] ^ this._x2' this._workingKey [15] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb4 (this._workingKey [16] ^ this._x0' this._workingKey [17] ^ this._x1' this._workingKey [18] ^ this._x2' this._workingKey [19] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb5 (this._workingKey [20] ^ this._x0' this._workingKey [21] ^ this._x1' this._workingKey [22] ^ this._x2' this._workingKey [23] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb6 (this._workingKey [24] ^ this._x0' this._workingKey [25] ^ this._x1' this._workingKey [26] ^ this._x2' this._workingKey [27] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb7 (this._workingKey [28] ^ this._x0' this._workingKey [29] ^ this._x1' this._workingKey [30] ^ this._x2' this._workingKey [31] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb0 (this._workingKey [32] ^ this._x0' this._workingKey [33] ^ this._x1' this._workingKey [34] ^ this._x2' this._workingKey [35] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb1 (this._workingKey [36] ^ this._x0' this._workingKey [37] ^ this._x1' this._workingKey [38] ^ this._x2' this._workingKey [39] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb2 (this._workingKey [40] ^ this._x0' this._workingKey [41] ^ this._x1' this._workingKey [42] ^ this._x2' this._workingKey [43] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb3 (this._workingKey [44] ^ this._x0' this._workingKey [45] ^ this._x1' this._workingKey [46] ^ this._x2' this._workingKey [47] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb4 (this._workingKey [48] ^ this._x0' this._workingKey [49] ^ this._x1' this._workingKey [50] ^ this._x2' this._workingKey [51] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb5 (this._workingKey [52] ^ this._x0' this._workingKey [53] ^ this._x1' this._workingKey [54] ^ this._x2' this._workingKey [55] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb6 (this._workingKey [56] ^ this._x0' this._workingKey [57] ^ this._x1' this._workingKey [58] ^ this._x2' this._workingKey [59] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb7 (this._workingKey [60] ^ this._x0' this._workingKey [61] ^ this._x1' this._workingKey [62] ^ this._x2' this._workingKey [63] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb0 (this._workingKey [64] ^ this._x0' this._workingKey [65] ^ this._x1' this._workingKey [66] ^ this._x2' this._workingKey [67] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb1 (this._workingKey [68] ^ this._x0' this._workingKey [69] ^ this._x1' this._workingKey [70] ^ this._x2' this._workingKey [71] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb2 (this._workingKey [72] ^ this._x0' this._workingKey [73] ^ this._x1' this._workingKey [74] ^ this._x2' this._workingKey [75] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb3 (this._workingKey [76] ^ this._x0' this._workingKey [77] ^ this._x1' this._workingKey [78] ^ this._x2' this._workingKey [79] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb4 (this._workingKey [80] ^ this._x0' this._workingKey [81] ^ this._x1' this._workingKey [82] ^ this._x2' this._workingKey [83] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb5 (this._workingKey [84] ^ this._x0' this._workingKey [85] ^ this._x1' this._workingKey [86] ^ this._x2' this._workingKey [87] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb6 (this._workingKey [88] ^ this._x0' this._workingKey [89] ^ this._x1' this._workingKey [90] ^ this._x2' this._workingKey [91] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb7 (this._workingKey [92] ^ this._x0' this._workingKey [93] ^ this._x1' this._workingKey [94] ^ this._x2' this._workingKey [95] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb0 (this._workingKey [96] ^ this._x0' this._workingKey [97] ^ this._x1' this._workingKey [98] ^ this._x2' this._workingKey [99] ^ this._x3); " is 141.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb1 (this._workingKey [100] ^ this._x0' this._workingKey [101] ^ this._x1' this._workingKey [102] ^ this._x2' this._workingKey [103] ^ this._x3); " is 145.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb2 (this._workingKey [104] ^ this._x0' this._workingKey [105] ^ this._x1' this._workingKey [106] ^ this._x2' this._workingKey [107] ^ this._x3); " is 145.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb3 (this._workingKey [108] ^ this._x0' this._workingKey [109] ^ this._x1' this._workingKey [110] ^ this._x2' this._workingKey [111] ^ this._x3); " is 145.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb4 (this._workingKey [112] ^ this._x0' this._workingKey [113] ^ this._x1' this._workingKey [114] ^ this._x2' this._workingKey [115] ^ this._x3); " is 145.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb5 (this._workingKey [116] ^ this._x0' this._workingKey [117] ^ this._x1' this._workingKey [118] ^ this._x2' this._workingKey [119] ^ this._x3); " is 145.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb6 (this._workingKey [120] ^ this._x0' this._workingKey [121] ^ this._x1' this._workingKey [122] ^ this._x2' this._workingKey [123] ^ this._x3); " is 145.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The length of the statement  "	Sb7 (this._workingKey [124] ^ this._x0' this._workingKey [125] ^ this._x1' this._workingKey [126] ^ this._x2' this._workingKey [127] ^ this._x3); " is 145.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,BytesToWord,The length of the statement  "	return (((src [srcOff] & 0xff) << 24) | ((src [srcOff + 1] & 0xff) << 16) | ((src [srcOff + 2] & 0xff) << 8) | ((src [srcOff + 3] & 0xff))); " is 140.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The length of the statement  "		result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)]; " is 211.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The length of the statement  "		result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)]; " is 363.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_0,The length of the statement  "	return gSBox1 [0x000 + 2 * (x & 0xff)] ^ gSBox1 [0x001 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 16) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 24) & 0xff)]; " is 197.
Long Statement,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_3,The length of the statement  "	return gSBox1 [0x000 + 2 * ((int)((uint)x >> 24) & 0xff)] ^ gSBox1 [0x001 + 2 * (x & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 16) & 0xff)]; " is 197.
Long Statement,Renci.SshNet.Sftp,SftpFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpFile.cs,ToString,The length of the statement  "	return string.Format (CultureInfo.CurrentCulture' "Name {0}' Length {1}' User ID {2}' Group ID {3}' Accessed {4}' Modified {5}"' this.Name' this.Length' this.UserId' this.GroupId' this.LastAccessTime' this.LastWriteTime); " is 221.
Long Statement,Renci.SshNet.Sftp,SftpFileStream,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpFileStream.cs,Seek,The length of the statement  "				if (newPosn >= (this._position - this._bufferPosn) && newPosn < (this._position - this._bufferPosn + this._bufferLen)) { " is 120.
Long Statement,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,Load,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "Message type '{0}' is not supported."' messageType)); " is 130.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,GetCanonicalPath,The length of the statement  "	if (fullPath.EndsWith ("/."' StringComparison.InvariantCultureIgnoreCase) || fullPath.EndsWith ("/.."' StringComparison.InvariantCultureIgnoreCase) || fullPath.Equals ("/"' StringComparison.InvariantCultureIgnoreCase) || fullPath.IndexOf ('/') < 0) " is 248.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,GetCanonicalPath,The length of the statement  "		return string.Format (CultureInfo.InvariantCulture' "{0}{1}{2}"' canonizedPath' slash' pathParts [pathParts.Length - 1]); " is 121.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,OnChannelOpen,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "Server SFTP version {0} is not supported."' this.ProtocolVersion)); " is 144.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestSetStat,The length of the statement  "		var request = new SftpSetStatRequest (this.ProtocolVersion' this.NextRequestId' path' this.Encoding' attributes' response =>  { " is 127.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestRename,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "SSH_FXP_RENAME operation is not supported in {0} version that server operates in."' this.ProtocolVersion)); " is 184.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestRename,The length of the statement  "		var request = new SftpRenameRequest (this.ProtocolVersion' this.NextRequestId' oldPath' newPath' this.Encoding' response =>  { " is 126.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestReadLink,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "SSH_FXP_READLINK operation is not supported in {0} version that server operates in."' this.ProtocolVersion)); " is 186.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestSymLink,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "SSH_FXP_SYMLINK operation is not supported in {0} version that server operates in."' this.ProtocolVersion)); " is 185.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestSymLink,The length of the statement  "		var request = new SftpSymLinkRequest (this.ProtocolVersion' this.NextRequestId' linkpath' targetpath' this.Encoding' response =>  { " is 131.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestPosixRename,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "SSH_FXP_EXTENDED operation is not supported in {0} version that server operates in."' this.ProtocolVersion)); " is 186.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestPosixRename,The length of the statement  "		var request = new PosixRenameRequest (this.ProtocolVersion' this.NextRequestId' oldPath' newPath' this.Encoding' response =>  { " is 127.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestPosixRename,The length of the statement  "			throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "Extension method {0} currently not supported by the server."' request.Name)); " is 154.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestStatVfs,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "SSH_FXP_EXTENDED operation is not supported in {0} version that server operates in."' this.ProtocolVersion)); " is 186.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestStatVfs,The length of the statement  "			throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "Extension method {0} currently not supported by the server."' request.Name)); " is 154.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestFStatVfs,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "SSH_FXP_EXTENDED operation is not supported in {0} version that server operates in."' this.ProtocolVersion)); " is 186.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestFStatVfs,The length of the statement  "			throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "Extension method {0} currently not supported by the server."' request.Name)); " is 154.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,HardLink,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "SSH_FXP_EXTENDED operation is not supported in {0} version that server operates in."' this.ProtocolVersion)); " is 186.
Long Statement,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,HardLink,The length of the statement  "			throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "Extension method {0} currently not supported by the server."' request.Name)); " is 154.
Long Statement,Renci.SshNet.Sftp.Requests,SftpRequest,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Requests\SftpRequest.cs,Complete,The length of the statement  "		throw new InvalidOperationException (string.Format ("Response of type '{0}' is not expected."' response.GetType ().Name)); " is 122.
Long Statement,Renci.SshNet.Sftp.Responses,StatVfsReplyInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Responses\ExtendedReplies\StatVfsReplyInfo.cs,LoadData,The length of the statement  "	this.Information = new SftpFileSytemInformation (this.ReadUInt64 ()' this.ReadUInt64 ()' this.ReadUInt64 ()' this.ReadUInt64 ()' this.ReadUInt64 ()' this.ReadUInt64 ()' this.ReadUInt64 ()' this.ReadUInt64 ()' this.ReadUInt64 ()' this.ReadUInt64 ()' this.ReadUInt64 ()); " is 269.
Complex Conditional,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,OnKeyExchangeInitReceived,The conditional expression  "messageMetadata.Activated == true && messageMetadata.Number > 2 && (messageMetadata.Number < 20 || messageMetadata.Number > 30)"  is complex.
Complex Conditional,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Log,The conditional expression  "value._sign == -1 || baseValue == 1.0d || baseValue == -1.0d || baseValue == Double.NegativeInfinity || double.IsNaN (baseValue)"  is complex.
Complex Conditional,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToString,The conditional expression  "this._sign == 1 && radix > 10 && (last < '0' || last > '9')"  is complex.
Complex Conditional,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The conditional expression  "((KC != 4) && (KC != 6) && (KC != 8)) || ((KC * 4) != key.Length)"  is complex.
Complex Conditional,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,GetCanonicalPath,The conditional expression  "fullPath.EndsWith ("/."' StringComparison.InvariantCultureIgnoreCase) || fullPath.EndsWith ("/.."' StringComparison.InvariantCultureIgnoreCase) || fullPath.Equals ("/"' StringComparison.InvariantCultureIgnoreCase) || fullPath.IndexOf ('/') < 0"  is complex.
Magic Number,Renci.SshNet,CipherInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\CipherInfo.cs,CipherInfo,The following statement contains a magic number: this.Cipher = (key' iv) => (cipher (key.Take (this.KeySize / 8).ToArray ()' iv));  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Timeout = TimeSpan.FromSeconds (30);  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.RetryAttempts = 10;  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.MaxSessions = 10;  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.Encryptions = new Dictionary<string' CipherInfo> () {  	{  		"aes256-ctr"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"3des-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"aes256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"blowfish-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new BlowfishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish192-cbc"'  		new CipherInfo (192' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	{  		"twofish256-cbc"'  		new CipherInfo (256' (key' iv) =>  {  			return new TwofishCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"serpent256-cbc"' typeof(CipherSerpent256CBC)}'  	////{"serpent192-cbc"' typeof(...)}'  	////{"serpent128-cbc"' typeof(...)}'  	{  		"arcfour"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' false);  		})  	}'  	{  		"arcfour128"'  		new CipherInfo (128' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	{  		"arcfour256"'  		new CipherInfo (256' (key' iv) =>  {  			return new Arc4Cipher (key' true);  		})  	}'  	////{"idea-cbc"' typeof(...)}'  	{  		"cast128-cbc"'  		new CipherInfo (128' (key' iv) =>  {  			return new CastCipher (key' new CbcCipherMode (iv)' null);  		})  	}'  	////{"rijndael-cbc@lysator.liu.se"' typeof(...)}'                  	{  		"aes128-ctr"'  		new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  	{  		"aes192-ctr"'  		new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CtrCipherMode (iv)' null);  		})  	}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: this.HmacAlgorithms = new Dictionary<string' HashInfo> () {  	{  		"hmac-md5"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key);  		})  	}'  	{  		"hmac-sha1"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key);  		})  	}'  	{  		"hmac-sha2-256"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key);  		})  	}'  	{  		"hmac-sha2-256-96"'  		new HashInfo (32 * 8' key =>  {  			return new HMac<SHA256Hash> (key' 96);  		})  	}'  	//{"hmac-sha2-512"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key); }) }'  	//{"hmac-sha2-512-96"' new HashInfo(64 * 8' (key)=>{ return new HMac<SHA512Hash>(key' 96); }) }'  	//{"umac-64@openssh.com"' typeof(HMacSha1)}'  	{  		"hmac-ripemd160"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-ripemd160@openssh.com"'  		new HashInfo (160' key =>  {  			return new HMac<RIPEMD160Hash> (key);  		})  	}'  	{  		"hmac-md5-96"'  		new HashInfo (16 * 8' key =>  {  			return new HMac<MD5Hash> (key' 96);  		})  	}'  	{  		"hmac-sha1-96"'  		new HashInfo (20 * 8' key =>  {  			return new HMac<SHA1Hash> (key' 96);  		})  	}'  //{"none"' typeof(...)}'  };  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: return new HMac<SHA256Hash> (key' 96);  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: return new HMac<MD5Hash> (key' 96);  
Magic Number,Renci.SshNet,ConnectionInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ConnectionInfo.cs,ConnectionInfo,The following statement contains a magic number: return new HMac<SHA1Hash> (key' 96);  
Magic Number,Renci.SshNet,HashInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\HashInfo.cs,HashInfo,The following statement contains a magic number: this.HashAlgorithm = key => (hash (key.Take (this.KeySize / 8).ToArray ()));  
Magic Number,Renci.SshNet,PrivateKeyAuthenticationMethod,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyAuthenticationMethod.cs,Authenticate,The following statement contains a magic number: foreach (var keyFile in this.KeyFiles) {  	this._authenticationCompleted.Reset ();  	this._isSignatureRequired = false;  	var message = new RequestMessagePublicKey (ServiceName.Connection' this.Username' keyFile.HostKey.Name' keyFile.HostKey.Data);  	if (this.KeyFiles.Count < 2) {  		//  If only one key file provided then send signature for very first request  		var signatureData = new SignatureData (message' session.SessionId).GetBytes ();  		message.Signature = keyFile.HostKey.Sign (signatureData);  	}  	//  Send public key authentication request  	session.SendMessage (message);  	session.WaitHandle (this._authenticationCompleted);  	if (this._isSignatureRequired) {  		this._authenticationCompleted.Reset ();  		var signatureMessage = new RequestMessagePublicKey (ServiceName.Connection' this.Username' keyFile.HostKey.Name' keyFile.HostKey.Data);  		var signatureData = new SignatureData (message' session.SessionId).GetBytes ();  		signatureMessage.Signature = keyFile.HostKey.Sign (signatureData);  		//  Send public key authentication request with signature  		session.SendMessage (signatureMessage);  	}  	session.WaitHandle (this._authenticationCompleted);  	if (this._authenticationResult == AuthenticationResult.Success) {  		break;  	}  }  
Magic Number,Renci.SshNet,PrivateKeyAuthenticationMethod,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyAuthenticationMethod.cs,Authenticate,The following statement contains a magic number: if (this.KeyFiles.Count < 2) {  	//  If only one key file provided then send signature for very first request  	var signatureData = new SignatureData (message' session.SessionId).GetBytes ();  	message.Signature = keyFile.HostKey.Sign (signatureData);  }  
Magic Number,Renci.SshNet,ScpClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ScpClient.cs,ScpClient,The following statement contains a magic number: this.BufferSize = 1024 * 16;  
Magic Number,Renci.SshNet,ScpClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ScpClient.cs,ScpClient,The following statement contains a magic number: this.BufferSize = 1024 * 16;  
Magic Number,Renci.SshNet,ScpClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ScpClient.cs,ScpClient,The following statement contains a magic number: if (_byteToChar == null) {  	_byteToChar = new char[128];  	var ch = '\0';  	for (int i = 0; i < 128; i++) {  		_byteToChar [i] = ch++;  	}  }  
Magic Number,Renci.SshNet,ScpClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ScpClient.cs,ScpClient,The following statement contains a magic number: if (_byteToChar == null) {  	_byteToChar = new char[128];  	var ch = '\0';  	for (int i = 0; i < 128; i++) {  		_byteToChar [i] = ch++;  	}  }  
Magic Number,Renci.SshNet,ScpClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ScpClient.cs,ScpClient,The following statement contains a magic number: _byteToChar = new char[128];  
Magic Number,Renci.SshNet,ScpClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ScpClient.cs,ScpClient,The following statement contains a magic number: for (int i = 0; i < 128; i++) {  	_byteToChar [i] = ch++;  }  
Magic Number,Renci.SshNet,ScpClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ScpClient.cs,ReadByte,The following statement contains a magic number: while (b < 0) {  	Thread.Sleep (100);  	b = stream.ReadByte ();  }  
Magic Number,Renci.SshNet,ScpClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ScpClient.cs,ReadByte,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Renci.SshNet,ScpClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\ScpClient.cs,ReadString,The following statement contains a magic number: if (b == 1 || b == 2) {  	hasError = true;  	b = ReadByte (stream);  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: if (!string.IsNullOrEmpty (cipherName) && !string.IsNullOrEmpty (salt)) {  	if (string.IsNullOrEmpty (passPhrase))  		throw new SshPassPhraseNullOrEmptyException ("Private key is encrypted but passphrase is empty.");  	byte[] binarySalt = new byte[salt.Length / 2];  	for (int i = 0; i < binarySalt.Length; i++)  		binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  	CipherInfo cipher = null;  	switch (cipherName) {  	case "DES-EDE3-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-EDE3-CFB":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-CBC":  		cipher = new CipherInfo (64' (key' iv) =>  {  			return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-128-CBC":  		cipher = new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-192-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-256-CBC":  		cipher = new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	default:  		throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  	}  	decryptedData = DecryptKey (cipher' binaryData' passPhrase' binarySalt);  }  else {  	decryptedData = binaryData;  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: if (!string.IsNullOrEmpty (cipherName) && !string.IsNullOrEmpty (salt)) {  	if (string.IsNullOrEmpty (passPhrase))  		throw new SshPassPhraseNullOrEmptyException ("Private key is encrypted but passphrase is empty.");  	byte[] binarySalt = new byte[salt.Length / 2];  	for (int i = 0; i < binarySalt.Length; i++)  		binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  	CipherInfo cipher = null;  	switch (cipherName) {  	case "DES-EDE3-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-EDE3-CFB":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-CBC":  		cipher = new CipherInfo (64' (key' iv) =>  {  			return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-128-CBC":  		cipher = new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-192-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-256-CBC":  		cipher = new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	default:  		throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  	}  	decryptedData = DecryptKey (cipher' binaryData' passPhrase' binarySalt);  }  else {  	decryptedData = binaryData;  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: if (!string.IsNullOrEmpty (cipherName) && !string.IsNullOrEmpty (salt)) {  	if (string.IsNullOrEmpty (passPhrase))  		throw new SshPassPhraseNullOrEmptyException ("Private key is encrypted but passphrase is empty.");  	byte[] binarySalt = new byte[salt.Length / 2];  	for (int i = 0; i < binarySalt.Length; i++)  		binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  	CipherInfo cipher = null;  	switch (cipherName) {  	case "DES-EDE3-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-EDE3-CFB":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-CBC":  		cipher = new CipherInfo (64' (key' iv) =>  {  			return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-128-CBC":  		cipher = new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-192-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-256-CBC":  		cipher = new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	default:  		throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  	}  	decryptedData = DecryptKey (cipher' binaryData' passPhrase' binarySalt);  }  else {  	decryptedData = binaryData;  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: if (!string.IsNullOrEmpty (cipherName) && !string.IsNullOrEmpty (salt)) {  	if (string.IsNullOrEmpty (passPhrase))  		throw new SshPassPhraseNullOrEmptyException ("Private key is encrypted but passphrase is empty.");  	byte[] binarySalt = new byte[salt.Length / 2];  	for (int i = 0; i < binarySalt.Length; i++)  		binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  	CipherInfo cipher = null;  	switch (cipherName) {  	case "DES-EDE3-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-EDE3-CFB":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-CBC":  		cipher = new CipherInfo (64' (key' iv) =>  {  			return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-128-CBC":  		cipher = new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-192-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-256-CBC":  		cipher = new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	default:  		throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  	}  	decryptedData = DecryptKey (cipher' binaryData' passPhrase' binarySalt);  }  else {  	decryptedData = binaryData;  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: if (!string.IsNullOrEmpty (cipherName) && !string.IsNullOrEmpty (salt)) {  	if (string.IsNullOrEmpty (passPhrase))  		throw new SshPassPhraseNullOrEmptyException ("Private key is encrypted but passphrase is empty.");  	byte[] binarySalt = new byte[salt.Length / 2];  	for (int i = 0; i < binarySalt.Length; i++)  		binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  	CipherInfo cipher = null;  	switch (cipherName) {  	case "DES-EDE3-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-EDE3-CFB":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-CBC":  		cipher = new CipherInfo (64' (key' iv) =>  {  			return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-128-CBC":  		cipher = new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-192-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-256-CBC":  		cipher = new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	default:  		throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  	}  	decryptedData = DecryptKey (cipher' binaryData' passPhrase' binarySalt);  }  else {  	decryptedData = binaryData;  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: if (!string.IsNullOrEmpty (cipherName) && !string.IsNullOrEmpty (salt)) {  	if (string.IsNullOrEmpty (passPhrase))  		throw new SshPassPhraseNullOrEmptyException ("Private key is encrypted but passphrase is empty.");  	byte[] binarySalt = new byte[salt.Length / 2];  	for (int i = 0; i < binarySalt.Length; i++)  		binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  	CipherInfo cipher = null;  	switch (cipherName) {  	case "DES-EDE3-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-EDE3-CFB":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-CBC":  		cipher = new CipherInfo (64' (key' iv) =>  {  			return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-128-CBC":  		cipher = new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-192-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-256-CBC":  		cipher = new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	default:  		throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  	}  	decryptedData = DecryptKey (cipher' binaryData' passPhrase' binarySalt);  }  else {  	decryptedData = binaryData;  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: if (!string.IsNullOrEmpty (cipherName) && !string.IsNullOrEmpty (salt)) {  	if (string.IsNullOrEmpty (passPhrase))  		throw new SshPassPhraseNullOrEmptyException ("Private key is encrypted but passphrase is empty.");  	byte[] binarySalt = new byte[salt.Length / 2];  	for (int i = 0; i < binarySalt.Length; i++)  		binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  	CipherInfo cipher = null;  	switch (cipherName) {  	case "DES-EDE3-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-EDE3-CFB":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-CBC":  		cipher = new CipherInfo (64' (key' iv) =>  {  			return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-128-CBC":  		cipher = new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-192-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-256-CBC":  		cipher = new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	default:  		throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  	}  	decryptedData = DecryptKey (cipher' binaryData' passPhrase' binarySalt);  }  else {  	decryptedData = binaryData;  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: if (!string.IsNullOrEmpty (cipherName) && !string.IsNullOrEmpty (salt)) {  	if (string.IsNullOrEmpty (passPhrase))  		throw new SshPassPhraseNullOrEmptyException ("Private key is encrypted but passphrase is empty.");  	byte[] binarySalt = new byte[salt.Length / 2];  	for (int i = 0; i < binarySalt.Length; i++)  		binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  	CipherInfo cipher = null;  	switch (cipherName) {  	case "DES-EDE3-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-EDE3-CFB":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-CBC":  		cipher = new CipherInfo (64' (key' iv) =>  {  			return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-128-CBC":  		cipher = new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-192-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-256-CBC":  		cipher = new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	default:  		throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  	}  	decryptedData = DecryptKey (cipher' binaryData' passPhrase' binarySalt);  }  else {  	decryptedData = binaryData;  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: if (!string.IsNullOrEmpty (cipherName) && !string.IsNullOrEmpty (salt)) {  	if (string.IsNullOrEmpty (passPhrase))  		throw new SshPassPhraseNullOrEmptyException ("Private key is encrypted but passphrase is empty.");  	byte[] binarySalt = new byte[salt.Length / 2];  	for (int i = 0; i < binarySalt.Length; i++)  		binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  	CipherInfo cipher = null;  	switch (cipherName) {  	case "DES-EDE3-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-EDE3-CFB":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-CBC":  		cipher = new CipherInfo (64' (key' iv) =>  {  			return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-128-CBC":  		cipher = new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-192-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-256-CBC":  		cipher = new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	default:  		throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  	}  	decryptedData = DecryptKey (cipher' binaryData' passPhrase' binarySalt);  }  else {  	decryptedData = binaryData;  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: if (!string.IsNullOrEmpty (cipherName) && !string.IsNullOrEmpty (salt)) {  	if (string.IsNullOrEmpty (passPhrase))  		throw new SshPassPhraseNullOrEmptyException ("Private key is encrypted but passphrase is empty.");  	byte[] binarySalt = new byte[salt.Length / 2];  	for (int i = 0; i < binarySalt.Length; i++)  		binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  	CipherInfo cipher = null;  	switch (cipherName) {  	case "DES-EDE3-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-EDE3-CFB":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "DES-CBC":  		cipher = new CipherInfo (64' (key' iv) =>  {  			return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-128-CBC":  		cipher = new CipherInfo (128' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-192-CBC":  		cipher = new CipherInfo (192' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	case "AES-256-CBC":  		cipher = new CipherInfo (256' (key' iv) =>  {  			return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  		});  		break;  	default:  		throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  	}  	decryptedData = DecryptKey (cipher' binaryData' passPhrase' binarySalt);  }  else {  	decryptedData = binaryData;  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: for (int i = 0; i < binarySalt.Length; i++)  	binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: for (int i = 0; i < binarySalt.Length; i++)  	binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: for (int i = 0; i < binarySalt.Length; i++)  	binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: binarySalt [i] = Convert.ToByte (salt.Substring (i * 2' 2)' 16);  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: switch (cipherName) {  case "DES-EDE3-CBC":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "DES-EDE3-CFB":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "DES-CBC":  	cipher = new CipherInfo (64' (key' iv) =>  {  		return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-128-CBC":  	cipher = new CipherInfo (128' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-192-CBC":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-256-CBC":  	cipher = new CipherInfo (256' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  default:  	throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: switch (cipherName) {  case "DES-EDE3-CBC":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "DES-EDE3-CFB":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "DES-CBC":  	cipher = new CipherInfo (64' (key' iv) =>  {  		return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-128-CBC":  	cipher = new CipherInfo (128' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-192-CBC":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-256-CBC":  	cipher = new CipherInfo (256' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  default:  	throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: switch (cipherName) {  case "DES-EDE3-CBC":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "DES-EDE3-CFB":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "DES-CBC":  	cipher = new CipherInfo (64' (key' iv) =>  {  		return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-128-CBC":  	cipher = new CipherInfo (128' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-192-CBC":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-256-CBC":  	cipher = new CipherInfo (256' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  default:  	throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: switch (cipherName) {  case "DES-EDE3-CBC":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "DES-EDE3-CFB":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "DES-CBC":  	cipher = new CipherInfo (64' (key' iv) =>  {  		return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-128-CBC":  	cipher = new CipherInfo (128' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-192-CBC":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-256-CBC":  	cipher = new CipherInfo (256' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  default:  	throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: switch (cipherName) {  case "DES-EDE3-CBC":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "DES-EDE3-CFB":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "DES-CBC":  	cipher = new CipherInfo (64' (key' iv) =>  {  		return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-128-CBC":  	cipher = new CipherInfo (128' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-192-CBC":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-256-CBC":  	cipher = new CipherInfo (256' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  default:  	throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: switch (cipherName) {  case "DES-EDE3-CBC":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "DES-EDE3-CFB":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "DES-CBC":  	cipher = new CipherInfo (64' (key' iv) =>  {  		return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-128-CBC":  	cipher = new CipherInfo (128' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-192-CBC":  	cipher = new CipherInfo (192' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  case "AES-256-CBC":  	cipher = new CipherInfo (256' (key' iv) =>  {  		return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  	});  	break;  default:  	throw new SshException (string.Format (CultureInfo.CurrentCulture' "Private key cipher \"{0}\" is not supported."' cipherName));  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: cipher = new CipherInfo (192' (key' iv) =>  {  	return new TripleDesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  });  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: cipher = new CipherInfo (192' (key' iv) =>  {  	return new TripleDesCipher (key' new CfbCipherMode (iv)' new PKCS7Padding ());  });  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: cipher = new CipherInfo (64' (key' iv) =>  {  	return new DesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  });  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: cipher = new CipherInfo (128' (key' iv) =>  {  	return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  });  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: cipher = new CipherInfo (192' (key' iv) =>  {  	return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  });  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: cipher = new CipherInfo (256' (key' iv) =>  {  	return new AesCipher (key' new CbcCipherMode (iv)' new PKCS7Padding ());  });  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: switch (keyName) {  case "RSA":  	this._key = new RsaKey (decryptedData.ToArray ());  	this.HostKey = new KeyHostAlgorithm ("ssh-rsa"' this._key);  	break;  case "DSA":  	this._key = new DsaKey (decryptedData.ToArray ());  	this.HostKey = new KeyHostAlgorithm ("ssh-dss"' this._key);  	break;  case "SSH2 ENCRYPTED":  	var reader = new SshDataReader (decryptedData);  	var magicNumber = reader.ReadUInt32 ();  	if (magicNumber != 0x3f6ff9eb) {  		throw new SshException ("Invalid SSH2 private key.");  	}  	var totalLength = reader.ReadUInt32 ();  	//  Read total bytes length including magic number  	var keyType = reader.ReadString ();  	var ssh2CipherName = reader.ReadString ();  	var blobSize = (int)reader.ReadUInt32 ();  	byte[] keyData = null;  	if (ssh2CipherName == "none") {  		keyData = reader.ReadBytes (blobSize);  	}  	//else if (ssh2CipherName == "3des-cbc")  	//{  	//    var key = GetCipherKey(passPhrase' 192 / 8);  	//    var ssh2Сipher = new TripleDesCipher(key' null' null);  	//    keyData = ssh2Сipher.Decrypt(reader.ReadBytes(blobSize));  	//}  	else {  		throw new SshException (string.Format ("Cipher method '{0}' is not supported."' cipherName));  	}  	//  TODO:   Create two specific data types to avoid using SshDataReader class  	reader = new SshDataReader (keyData);  	var decryptedLength = reader.ReadUInt32 ();  	if (decryptedLength + 4 != blobSize)  		throw new SshException ("Invalid passphrase.");  	if (keyType == "if-modn{sign{rsa-pkcs1-sha1}'encrypt{rsa-pkcs1v2-oaep}}") {  		var exponent = reader.ReadBigIntWithBits ();  		//e  		var d = reader.ReadBigIntWithBits ();  		//d  		var modulus = reader.ReadBigIntWithBits ();  		//n  		var inverseQ = reader.ReadBigIntWithBits ();  		//u  		var q = reader.ReadBigIntWithBits ();  		//p  		var p = reader.ReadBigIntWithBits ();  		//q  		this._key = new RsaKey (modulus' exponent' d' p' q' inverseQ);  		this.HostKey = new KeyHostAlgorithm ("ssh-rsa"' this._key);  	}  	else if (keyType == "dl-modp{sign{dsa-nist-sha1}'dh{plain}}") {  		var zero = reader.ReadUInt32 ();  		if (zero != 0) {  			throw new SshException ("Invalid private key");  		}  		var p = reader.ReadBigIntWithBits ();  		var g = reader.ReadBigIntWithBits ();  		var q = reader.ReadBigIntWithBits ();  		var y = reader.ReadBigIntWithBits ();  		var x = reader.ReadBigIntWithBits ();  		this._key = new DsaKey (p' q' g' y' x);  		this.HostKey = new KeyHostAlgorithm ("ssh-dss"' this._key);  	}  	else {  		throw new NotSupportedException (string.Format ("Key type '{0}' is not supported."' keyType));  	}  	break;  default:  	throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "Key '{0}' is not supported."' keyName));  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,Open,The following statement contains a magic number: if (decryptedLength + 4 != blobSize)  	throw new SshException ("Invalid passphrase.");  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,DecryptKey,The following statement contains a magic number: using (var md5 = new MD5Hash ()) {  	var passwordBytes = Encoding.UTF8.GetBytes (passPhrase);  	//  Use 8 bytes binary salkt  	var initVector = passwordBytes.Concat (binarySalt.Take (8));  	var hash = md5.ComputeHash (initVector.ToArray ()).AsEnumerable ();  	cipherKey.AddRange (hash);  	while (cipherKey.Count < cipherInfo.KeySize / 8) {  		hash = hash.Concat (initVector);  		hash = md5.ComputeHash (hash.ToArray ());  		cipherKey.AddRange (hash);  	}  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,DecryptKey,The following statement contains a magic number: using (var md5 = new MD5Hash ()) {  	var passwordBytes = Encoding.UTF8.GetBytes (passPhrase);  	//  Use 8 bytes binary salkt  	var initVector = passwordBytes.Concat (binarySalt.Take (8));  	var hash = md5.ComputeHash (initVector.ToArray ()).AsEnumerable ();  	cipherKey.AddRange (hash);  	while (cipherKey.Count < cipherInfo.KeySize / 8) {  		hash = hash.Concat (initVector);  		hash = md5.ComputeHash (hash.ToArray ());  		cipherKey.AddRange (hash);  	}  }  
Magic Number,Renci.SshNet,PrivateKeyFile,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\PrivateKeyFile.cs,DecryptKey,The following statement contains a magic number: while (cipherKey.Count < cipherInfo.KeySize / 8) {  	hash = hash.Concat (initVector);  	hash = md5.ComputeHash (hash.ToArray ());  	cipherKey.AddRange (hash);  }  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,SendMessage,The following statement contains a magic number: ((uint)packetData.Length - 4).GetBytes ().CopyTo (packetData' 0);  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,SendMessage,The following statement contains a magic number: packetData [4] = paddingLength;  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,SendMessage,The following statement contains a magic number: messageData.CopyTo (packetData' 4 + 1);  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,SendMessage,The following statement contains a magic number: paddingBytes.CopyTo (packetData' 4 + 1 + messageData.Length);  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,SendMessage,The following statement contains a magic number: lock (this._socketLock) {  	if (this._socket == null || !this._socket.Connected)  		throw new SshConnectionException ("Client not connected.");  	//  Calculate packet hash  	var hashData = new byte[4 + packetData.Length];  	this._outboundPacketSequence.GetBytes ().CopyTo (hashData' 0);  	packetData.CopyTo (hashData' 4);  	//  Encrypt packet data  	if (this._clientCipher != null) {  		packetData = this._clientCipher.Encrypt (packetData);  	}  	if (packetData.Length > Session.MAXIMUM_PACKET_SIZE) {  		throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' "Packet is too big. Maximum packet size is {0} bytes."' Session.MAXIMUM_PACKET_SIZE));  	}  	if (this._clientMac == null) {  		this.SocketWrite (packetData);  	}  	else {  		var hash = this._clientMac.ComputeHash (hashData.ToArray ());  		var data = new byte[packetData.Length + this._clientMac.HashSize / 8];  		packetData.CopyTo (data' 0);  		hash.CopyTo (data' packetData.Length);  		this.SocketWrite (data);  	}  	this._outboundPacketSequence++;  	Monitor.Pulse (this._socketLock);  }  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,SendMessage,The following statement contains a magic number: lock (this._socketLock) {  	if (this._socket == null || !this._socket.Connected)  		throw new SshConnectionException ("Client not connected.");  	//  Calculate packet hash  	var hashData = new byte[4 + packetData.Length];  	this._outboundPacketSequence.GetBytes ().CopyTo (hashData' 0);  	packetData.CopyTo (hashData' 4);  	//  Encrypt packet data  	if (this._clientCipher != null) {  		packetData = this._clientCipher.Encrypt (packetData);  	}  	if (packetData.Length > Session.MAXIMUM_PACKET_SIZE) {  		throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' "Packet is too big. Maximum packet size is {0} bytes."' Session.MAXIMUM_PACKET_SIZE));  	}  	if (this._clientMac == null) {  		this.SocketWrite (packetData);  	}  	else {  		var hash = this._clientMac.ComputeHash (hashData.ToArray ());  		var data = new byte[packetData.Length + this._clientMac.HashSize / 8];  		packetData.CopyTo (data' 0);  		hash.CopyTo (data' packetData.Length);  		this.SocketWrite (data);  	}  	this._outboundPacketSequence++;  	Monitor.Pulse (this._socketLock);  }  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,SendMessage,The following statement contains a magic number: lock (this._socketLock) {  	if (this._socket == null || !this._socket.Connected)  		throw new SshConnectionException ("Client not connected.");  	//  Calculate packet hash  	var hashData = new byte[4 + packetData.Length];  	this._outboundPacketSequence.GetBytes ().CopyTo (hashData' 0);  	packetData.CopyTo (hashData' 4);  	//  Encrypt packet data  	if (this._clientCipher != null) {  		packetData = this._clientCipher.Encrypt (packetData);  	}  	if (packetData.Length > Session.MAXIMUM_PACKET_SIZE) {  		throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' "Packet is too big. Maximum packet size is {0} bytes."' Session.MAXIMUM_PACKET_SIZE));  	}  	if (this._clientMac == null) {  		this.SocketWrite (packetData);  	}  	else {  		var hash = this._clientMac.ComputeHash (hashData.ToArray ());  		var data = new byte[packetData.Length + this._clientMac.HashSize / 8];  		packetData.CopyTo (data' 0);  		hash.CopyTo (data' packetData.Length);  		this.SocketWrite (data);  	}  	this._outboundPacketSequence++;  	Monitor.Pulse (this._socketLock);  }  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,SendMessage,The following statement contains a magic number: packetData.CopyTo (hashData' 4);  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,SendMessage,The following statement contains a magic number: if (this._clientMac == null) {  	this.SocketWrite (packetData);  }  else {  	var hash = this._clientMac.ComputeHash (hashData.ToArray ());  	var data = new byte[packetData.Length + this._clientMac.HashSize / 8];  	packetData.CopyTo (data' 0);  	hash.CopyTo (data' packetData.Length);  	this.SocketWrite (data);  }  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,GetMessagesMetadata,The following statement contains a magic number: return new MessageMetadata[] {  	new MessageMetadata {  		Name = "SSH_MSG_NEWKEYS"'  		Number = 21'  		Enabled = false'  		Activated = false'  		Type = typeof(NewKeysMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_FAILURE"'  		Number = 82'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXINIT"'  		Number = 20'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_FAILURE"'  		Number = 92'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_FAILURE"'  		Number = 100'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelFailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EXTENDED_DATA"'  		Number = 95'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelExtendedDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_DATA"'  		Number = 94'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelDataMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_REQUEST"'  		Number = 50'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_REQUEST"'  		Number = 98'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_BANNER"'  		Number = 53'  		Enabled = false'  		Activated = false'  		Type = typeof(BannerMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_RESPONSE"'  		Number = 61'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationResponseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_FAILURE"'  		Number = 51'  		Enabled = false'  		Activated = false'  		Type = typeof(FailureMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DEBUG"'  		Number = 4'  		Enabled = false'  		Activated = false'  		Type = typeof(DebugMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_INIT"'  		Number = 30'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhInitMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_GLOBAL_REQUEST"'  		Number = 80'  		Enabled = false'  		Activated = false'  		Type = typeof(GlobalRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN"'  		Number = 90'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_OPEN_CONFIRMATION"'  		Number = 91'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelOpenConfirmationMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_INFO_REQUEST"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(InformationRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_UNIMPLEMENTED"'  		Number = 3'  		Enabled = false'  		Activated = false'  		Type = typeof(UnimplementedMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_REQUEST_SUCCESS"'  		Number = 81'  		Enabled = false'  		Activated = false'  		Type = typeof(RequestSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_SUCCESS"'  		Number = 99'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelSuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PASSWD_CHANGEREQ"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PasswordChangeRequiredMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_DISCONNECT"'  		Number = 1'  		Enabled = false'  		Activated = false'  		Type = typeof(DisconnectMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_REQUEST"'  		Number = 5'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceRequestMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REQUEST"'  		Number = 34'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeRequest)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_GROUP"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeGroup)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_SUCCESS"'  		Number = 52'  		Enabled = false'  		Activated = false'  		Type = typeof(SuccessMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_USERAUTH_PK_OK"'  		Number = 60'  		Enabled = false'  		Activated = false'  		Type = typeof(PublicKeyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_IGNORE"'  		Number = 2'  		Enabled = false'  		Activated = false'  		Type = typeof(IgnoreMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_WINDOW_ADJUST"'  		Number = 93'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelWindowAdjustMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_EOF"'  		Number = 96'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelEofMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_CHANNEL_CLOSE"'  		Number = 97'  		Enabled = false'  		Activated = false'  		Type = typeof(ChannelCloseMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_SERVICE_ACCEPT"'  		Number = 6'  		Enabled = false'  		Activated = false'  		Type = typeof(ServiceAcceptMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEXDH_REPLY"'  		Number = 31'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhReplyMessage)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_INIT"'  		Number = 32'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeInit)'  	}'  	new MessageMetadata {  		Name = "SSH_MSG_KEX_DH_GEX_REPLY"'  		Number = 33'  		Enabled = false'  		Activated = false'  		Type = typeof(KeyExchangeDhGroupExchangeReply)'  	}'  };  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ReceiveMessage,The following statement contains a magic number: if (packetLength < Math.Max ((byte)16' blockSize) - 4 || packetLength > Session.MAXIMUM_PACKET_SIZE - 4)  	throw new SshConnectionException (string.Format (CultureInfo.CurrentCulture' "Bad packet length {0}"' packetLength)' DisconnectReason.ProtocolError);  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ReceiveMessage,The following statement contains a magic number: if (packetLength < Math.Max ((byte)16' blockSize) - 4 || packetLength > Session.MAXIMUM_PACKET_SIZE - 4)  	throw new SshConnectionException (string.Format (CultureInfo.CurrentCulture' "Bad packet length {0}"' packetLength)' DisconnectReason.ProtocolError);  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ReceiveMessage,The following statement contains a magic number: if (packetLength < Math.Max ((byte)16' blockSize) - 4 || packetLength > Session.MAXIMUM_PACKET_SIZE - 4)  	throw new SshConnectionException (string.Format (CultureInfo.CurrentCulture' "Bad packet length {0}"' packetLength)' DisconnectReason.ProtocolError);  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ReceiveMessage,The following statement contains a magic number: if (this._serverMac != null) {  	serverHash = new byte[this._serverMac.HashSize / 8];  	bytesToRead += serverHash.Length;  }  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ReceiveMessage,The following statement contains a magic number: serverHash = new byte[this._serverMac.HashSize / 8];  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ReceiveMessage,The following statement contains a magic number: Buffer.BlockCopy (data' 5' messagePayload' 0' messagePayload.Length);  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ReceiveMessage,The following statement contains a magic number: if (this._serverMac != null) {  	var clientHashData = new byte[4 + data.Length];  	var lengthBytes = this._inboundPacketSequence.GetBytes ();  	lengthBytes.CopyTo (clientHashData' 0);  	data.CopyTo (clientHashData' 4);  	//  Calculate packet hash  	var clientHash = this._serverMac.ComputeHash (clientHashData);  	if (!serverHash.SequenceEqual (clientHash)) {  		throw new SshConnectionException ("MAC error"' DisconnectReason.MacError);  	}  }  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ReceiveMessage,The following statement contains a magic number: if (this._serverMac != null) {  	var clientHashData = new byte[4 + data.Length];  	var lengthBytes = this._inboundPacketSequence.GetBytes ();  	lengthBytes.CopyTo (clientHashData' 0);  	data.CopyTo (clientHashData' 4);  	//  Calculate packet hash  	var clientHash = this._serverMac.ComputeHash (clientHashData);  	if (!serverHash.SequenceEqual (clientHash)) {  		throw new SshConnectionException ("MAC error"' DisconnectReason.MacError);  	}  }  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ReceiveMessage,The following statement contains a magic number: data.CopyTo (clientHashData' 4);  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,OnKeyExchangeInitReceived,The following statement contains a magic number: foreach (var messageMetadata in this._messagesMetadata) {  	if (messageMetadata.Activated == true && messageMetadata.Number > 2 && (messageMetadata.Number < 20 || messageMetadata.Number > 30))  		messageMetadata.Enabled = false;  }  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,OnKeyExchangeInitReceived,The following statement contains a magic number: foreach (var messageMetadata in this._messagesMetadata) {  	if (messageMetadata.Activated == true && messageMetadata.Number > 2 && (messageMetadata.Number < 20 || messageMetadata.Number > 30))  		messageMetadata.Enabled = false;  }  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,OnKeyExchangeInitReceived,The following statement contains a magic number: foreach (var messageMetadata in this._messagesMetadata) {  	if (messageMetadata.Activated == true && messageMetadata.Number > 2 && (messageMetadata.Number < 20 || messageMetadata.Number > 30))  		messageMetadata.Enabled = false;  }  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,OnKeyExchangeInitReceived,The following statement contains a magic number: if (messageMetadata.Activated == true && messageMetadata.Number > 2 && (messageMetadata.Number < 20 || messageMetadata.Number > 30))  	messageMetadata.Enabled = false;  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,OnKeyExchangeInitReceived,The following statement contains a magic number: if (messageMetadata.Activated == true && messageMetadata.Number > 2 && (messageMetadata.Number < 20 || messageMetadata.Number > 30))  	messageMetadata.Enabled = false;  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,OnKeyExchangeInitReceived,The following statement contains a magic number: if (messageMetadata.Activated == true && messageMetadata.Number > 2 && (messageMetadata.Number < 20 || messageMetadata.Number > 30))  	messageMetadata.Enabled = false;  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ConnectSocks4,The following statement contains a magic number: this.SocketRead (2' ref dummyBuffer);  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ConnectSocks4,The following statement contains a magic number: this.SocketRead (4' ref dummyBuffer);  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ConnectSocks5,The following statement contains a magic number: if (this.SocketReadByte () != 5) {  	throw new ProxyException ("SOCKS5: Version 5 is expected.");  }  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ConnectSocks5,The following statement contains a magic number: switch (addressType) {  case 0x01:  	this.SocketRead (4' ref responseIp);  	break;  case 0x04:  	this.SocketRead (16' ref responseIp);  	break;  default:  	throw new ProxyException (string.Format ("Address type '{0}' is not supported."' addressType));  }  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ConnectSocks5,The following statement contains a magic number: switch (addressType) {  case 0x01:  	this.SocketRead (4' ref responseIp);  	break;  case 0x04:  	this.SocketRead (16' ref responseIp);  	break;  default:  	throw new ProxyException (string.Format ("Address type '{0}' is not supported."' addressType));  }  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ConnectSocks5,The following statement contains a magic number: this.SocketRead (4' ref responseIp);  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ConnectSocks5,The following statement contains a magic number: this.SocketRead (16' ref responseIp);  
Magic Number,Renci.SshNet,Session,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Session.cs,ConnectSocks5,The following statement contains a magic number: this.SocketRead (2' ref port);  
Magic Number,Renci.SshNet,SshClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshClient.cs,CreateShell,The following statement contains a magic number: return this.CreateShell (input' output' extendedOutput' terminalName' columns' rows' width' height' terminalModes' 1024);  
Magic Number,Renci.SshNet,SshClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshClient.cs,CreateShell,The following statement contains a magic number: return this.CreateShell (input' output' extendedOutput' string.Empty' 0' 0' 0' 0' null' 1024);  
Magic Number,Renci.SshNet,SshClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshClient.cs,CreateShell,The following statement contains a magic number: return this.CreateShell (encoding' input' output' extendedOutput' terminalName' columns' rows' width' height' terminalModes' 1024);  
Magic Number,Renci.SshNet,SshClient,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\SshClient.cs,CreateShell,The following statement contains a magic number: return this.CreateShell (encoding' input' output' extendedOutput' string.Empty' 0' 0' 0' 0' null' 1024);  
Magic Number,Renci.SshNet.Channels,ChannelDirectTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelDirectTcpip.cs,Bind,The following statement contains a magic number: try {  	var buffer = new byte[this.PacketSize - 9];  	while (this._socket != null && this._socket.CanRead ()) {  		try {  			var read = 0;  			this.InternalSocketReceive (buffer' ref read);  			if (read > 0) {  				this.SendMessage (new ChannelDataMessage (this.RemoteChannelNumber' buffer.Take (read).ToArray ()));  			}  			else {  				break;  			}  		}  		catch (SocketException exp) {  			if (exp.SocketErrorCode == SocketError.WouldBlock || exp.SocketErrorCode == SocketError.IOPending || exp.SocketErrorCode == SocketError.NoBufferSpaceAvailable) {  				// socket buffer is probably empty' wait and try again  				Thread.Sleep (30);  			}  			else if (exp.SocketErrorCode == SocketError.ConnectionAborted || exp.SocketErrorCode == SocketError.ConnectionReset) {  				break;  			}  			else  				throw;  			// throw any other error  		}  	}  }  catch (Exception exp) {  	exception = exp;  }  
Magic Number,Renci.SshNet.Channels,ChannelDirectTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelDirectTcpip.cs,Bind,The following statement contains a magic number: try {  	var buffer = new byte[this.PacketSize - 9];  	while (this._socket != null && this._socket.CanRead ()) {  		try {  			var read = 0;  			this.InternalSocketReceive (buffer' ref read);  			if (read > 0) {  				this.SendMessage (new ChannelDataMessage (this.RemoteChannelNumber' buffer.Take (read).ToArray ()));  			}  			else {  				break;  			}  		}  		catch (SocketException exp) {  			if (exp.SocketErrorCode == SocketError.WouldBlock || exp.SocketErrorCode == SocketError.IOPending || exp.SocketErrorCode == SocketError.NoBufferSpaceAvailable) {  				// socket buffer is probably empty' wait and try again  				Thread.Sleep (30);  			}  			else if (exp.SocketErrorCode == SocketError.ConnectionAborted || exp.SocketErrorCode == SocketError.ConnectionReset) {  				break;  			}  			else  				throw;  			// throw any other error  		}  	}  }  catch (Exception exp) {  	exception = exp;  }  
Magic Number,Renci.SshNet.Channels,ChannelDirectTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelDirectTcpip.cs,Bind,The following statement contains a magic number: while (this._socket != null && this._socket.CanRead ()) {  	try {  		var read = 0;  		this.InternalSocketReceive (buffer' ref read);  		if (read > 0) {  			this.SendMessage (new ChannelDataMessage (this.RemoteChannelNumber' buffer.Take (read).ToArray ()));  		}  		else {  			break;  		}  	}  	catch (SocketException exp) {  		if (exp.SocketErrorCode == SocketError.WouldBlock || exp.SocketErrorCode == SocketError.IOPending || exp.SocketErrorCode == SocketError.NoBufferSpaceAvailable) {  			// socket buffer is probably empty' wait and try again  			Thread.Sleep (30);  		}  		else if (exp.SocketErrorCode == SocketError.ConnectionAborted || exp.SocketErrorCode == SocketError.ConnectionReset) {  			break;  		}  		else  			throw;  		// throw any other error  	}  }  
Magic Number,Renci.SshNet.Channels,ChannelDirectTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelDirectTcpip.cs,Bind,The following statement contains a magic number: try {  	var read = 0;  	this.InternalSocketReceive (buffer' ref read);  	if (read > 0) {  		this.SendMessage (new ChannelDataMessage (this.RemoteChannelNumber' buffer.Take (read).ToArray ()));  	}  	else {  		break;  	}  }  catch (SocketException exp) {  	if (exp.SocketErrorCode == SocketError.WouldBlock || exp.SocketErrorCode == SocketError.IOPending || exp.SocketErrorCode == SocketError.NoBufferSpaceAvailable) {  		// socket buffer is probably empty' wait and try again  		Thread.Sleep (30);  	}  	else if (exp.SocketErrorCode == SocketError.ConnectionAborted || exp.SocketErrorCode == SocketError.ConnectionReset) {  		break;  	}  	else  		throw;  	// throw any other error  }  
Magic Number,Renci.SshNet.Channels,ChannelDirectTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelDirectTcpip.cs,Bind,The following statement contains a magic number: if (exp.SocketErrorCode == SocketError.WouldBlock || exp.SocketErrorCode == SocketError.IOPending || exp.SocketErrorCode == SocketError.NoBufferSpaceAvailable) {  	// socket buffer is probably empty' wait and try again  	Thread.Sleep (30);  }  else if (exp.SocketErrorCode == SocketError.ConnectionAborted || exp.SocketErrorCode == SocketError.ConnectionReset) {  	break;  }  else  	throw;  
Magic Number,Renci.SshNet.Channels,ChannelDirectTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelDirectTcpip.cs,Bind,The following statement contains a magic number: Thread.Sleep (30);  
Magic Number,Renci.SshNet.Channels,ChannelForwardedTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelForwardedTcpip.cs,Bind,The following statement contains a magic number: try {  	//  Get buffer in memory for data exchange  	buffer = new byte[this.PacketSize - 9];  	this.OpenSocket (connectedHost' connectedPort);  	//  Send channel open confirmation message  	this.SendMessage (new ChannelOpenConfirmationMessage (this.RemoteChannelNumber' this.LocalWindowSize' this.PacketSize' this.LocalChannelNumber));  }  catch (Exception exp) {  	//  Send channel open failure message  	this.SendMessage (new ChannelOpenFailureMessage (this.RemoteChannelNumber' exp.ToString ()' 2));  	throw;  }  
Magic Number,Renci.SshNet.Channels,ChannelForwardedTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelForwardedTcpip.cs,Bind,The following statement contains a magic number: try {  	//  Get buffer in memory for data exchange  	buffer = new byte[this.PacketSize - 9];  	this.OpenSocket (connectedHost' connectedPort);  	//  Send channel open confirmation message  	this.SendMessage (new ChannelOpenConfirmationMessage (this.RemoteChannelNumber' this.LocalWindowSize' this.PacketSize' this.LocalChannelNumber));  }  catch (Exception exp) {  	//  Send channel open failure message  	this.SendMessage (new ChannelOpenFailureMessage (this.RemoteChannelNumber' exp.ToString ()' 2));  	throw;  }  
Magic Number,Renci.SshNet.Channels,ChannelForwardedTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelForwardedTcpip.cs,Bind,The following statement contains a magic number: buffer = new byte[this.PacketSize - 9];  
Magic Number,Renci.SshNet.Channels,ChannelForwardedTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelForwardedTcpip.cs,Bind,The following statement contains a magic number: this.SendMessage (new ChannelOpenFailureMessage (this.RemoteChannelNumber' exp.ToString ()' 2));  
Magic Number,Renci.SshNet.Channels,ChannelForwardedTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelForwardedTcpip.cs,Bind,The following statement contains a magic number: while (this._socket != null && this._socket.CanRead ()) {  	try {  		int read = 0;  		this.InternalSocketReceive (buffer' ref read);  		if (read > 0) {  			this.SendMessage (new ChannelDataMessage (this.RemoteChannelNumber' buffer.Take (read).ToArray ()));  		}  		else {  			//  Zero bytes received when remote host shuts down the connection  			break;  		}  	}  	catch (SocketException exp) {  		if (exp.SocketErrorCode == SocketError.WouldBlock || exp.SocketErrorCode == SocketError.IOPending || exp.SocketErrorCode == SocketError.NoBufferSpaceAvailable) {  			// socket buffer is probably empty' wait and try again  			Thread.Sleep (30);  		}  		else if (exp.SocketErrorCode == SocketError.ConnectionAborted) {  			break;  		}  		else  			throw;  		// throw any other error  	}  }  
Magic Number,Renci.SshNet.Channels,ChannelForwardedTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelForwardedTcpip.cs,Bind,The following statement contains a magic number: try {  	int read = 0;  	this.InternalSocketReceive (buffer' ref read);  	if (read > 0) {  		this.SendMessage (new ChannelDataMessage (this.RemoteChannelNumber' buffer.Take (read).ToArray ()));  	}  	else {  		//  Zero bytes received when remote host shuts down the connection  		break;  	}  }  catch (SocketException exp) {  	if (exp.SocketErrorCode == SocketError.WouldBlock || exp.SocketErrorCode == SocketError.IOPending || exp.SocketErrorCode == SocketError.NoBufferSpaceAvailable) {  		// socket buffer is probably empty' wait and try again  		Thread.Sleep (30);  	}  	else if (exp.SocketErrorCode == SocketError.ConnectionAborted) {  		break;  	}  	else  		throw;  	// throw any other error  }  
Magic Number,Renci.SshNet.Channels,ChannelForwardedTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelForwardedTcpip.cs,Bind,The following statement contains a magic number: if (exp.SocketErrorCode == SocketError.WouldBlock || exp.SocketErrorCode == SocketError.IOPending || exp.SocketErrorCode == SocketError.NoBufferSpaceAvailable) {  	// socket buffer is probably empty' wait and try again  	Thread.Sleep (30);  }  else if (exp.SocketErrorCode == SocketError.ConnectionAborted) {  	break;  }  else  	throw;  
Magic Number,Renci.SshNet.Channels,ChannelForwardedTcpip,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelForwardedTcpip.cs,Bind,The following statement contains a magic number: Thread.Sleep (30);  
Magic Number,Renci.SshNet.Channels,ChannelSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Channels\ChannelSession.cs,OnClose,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Renci.SshNet.Common,ASCIIEncoding,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\ASCIIEncoding.cs,ASCIIEncoding,The following statement contains a magic number: if (_byteToChar == null) {  	_byteToChar = new char[128];  	var ch = '\0';  	for (byte i = 0; i < 128; i++) {  		_byteToChar [i] = ch++;  	}  }  
Magic Number,Renci.SshNet.Common,ASCIIEncoding,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\ASCIIEncoding.cs,ASCIIEncoding,The following statement contains a magic number: if (_byteToChar == null) {  	_byteToChar = new char[128];  	var ch = '\0';  	for (byte i = 0; i < 128; i++) {  		_byteToChar [i] = ch++;  	}  }  
Magic Number,Renci.SshNet.Common,ASCIIEncoding,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\ASCIIEncoding.cs,ASCIIEncoding,The following statement contains a magic number: _byteToChar = new char[128];  
Magic Number,Renci.SshNet.Common,ASCIIEncoding,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\ASCIIEncoding.cs,ASCIIEncoding,The following statement contains a magic number: for (byte i = 0; i < 128; i++) {  	_byteToChar [i] = ch++;  }  
Magic Number,Renci.SshNet.Common,ASCIIEncoding,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\ASCIIEncoding.cs,GetBytes,The following statement contains a magic number: for (int i = 0; i < charCount && i < chars.Length; i++) {  	var b = (byte)chars [i + charIndex];  	if (b > 127)  		b = (byte)this._fallbackChar;  	bytes [i + byteIndex] = b;  }  
Magic Number,Renci.SshNet.Common,ASCIIEncoding,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\ASCIIEncoding.cs,GetBytes,The following statement contains a magic number: if (b > 127)  	b = (byte)this._fallbackChar;  
Magic Number,Renci.SshNet.Common,ASCIIEncoding,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\ASCIIEncoding.cs,GetChars,The following statement contains a magic number: for (int i = 0; i < byteCount; i++) {  	var b = bytes [i + byteIndex];  	char ch;  	if (b > 127) {  		ch = this._fallbackChar;  	}  	else {  		ch = _byteToChar [b];  	}  	chars [i + charIndex] = ch;  }  
Magic Number,Renci.SshNet.Common,ASCIIEncoding,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\ASCIIEncoding.cs,GetChars,The following statement contains a magic number: if (b > 127) {  	ch = this._fallbackChar;  }  else {  	ch = _byteToChar [b];  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (value == 0) {  	this._sign = 0;  	this._data = _zero;  }  else if (value > 0) {  	this._sign = 1;  	uint low = (uint)value;  	uint high = (uint)(value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  else {  	this._sign = -1;  	value = -value;  	uint low = (uint)value;  	uint high = (uint)((ulong)value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (value == 0) {  	this._sign = 0;  	this._data = _zero;  }  else if (value > 0) {  	this._sign = 1;  	uint low = (uint)value;  	uint high = (uint)(value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  else {  	this._sign = -1;  	value = -value;  	uint low = (uint)value;  	uint high = (uint)((ulong)value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (value == 0) {  	this._sign = 0;  	this._data = _zero;  }  else if (value > 0) {  	this._sign = 1;  	uint low = (uint)value;  	uint high = (uint)(value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  else {  	this._sign = -1;  	value = -value;  	uint low = (uint)value;  	uint high = (uint)((ulong)value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (value == 0) {  	this._sign = 0;  	this._data = _zero;  }  else if (value > 0) {  	this._sign = 1;  	uint low = (uint)value;  	uint high = (uint)(value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  else {  	this._sign = -1;  	value = -value;  	uint low = (uint)value;  	uint high = (uint)((ulong)value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (value > 0) {  	this._sign = 1;  	uint low = (uint)value;  	uint high = (uint)(value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  else {  	this._sign = -1;  	value = -value;  	uint low = (uint)value;  	uint high = (uint)((ulong)value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (value > 0) {  	this._sign = 1;  	uint low = (uint)value;  	uint high = (uint)(value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  else {  	this._sign = -1;  	value = -value;  	uint low = (uint)value;  	uint high = (uint)((ulong)value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (value > 0) {  	this._sign = 1;  	uint low = (uint)value;  	uint high = (uint)(value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  else {  	this._sign = -1;  	value = -value;  	uint low = (uint)value;  	uint high = (uint)((ulong)value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (value > 0) {  	this._sign = 1;  	uint low = (uint)value;  	uint high = (uint)(value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  else {  	this._sign = -1;  	value = -value;  	uint low = (uint)value;  	uint high = (uint)((ulong)value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: this._data = new uint[high != 0 ? 2 : 1];  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: this._data = new uint[high != 0 ? 2 : 1];  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (value == 0) {  	this._sign = 0;  	this._data = _zero;  }  else {  	this._sign = 1;  	uint low = (uint)value;  	uint high = (uint)(value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (value == 0) {  	this._sign = 0;  	this._data = _zero;  }  else {  	this._sign = 1;  	uint low = (uint)value;  	uint high = (uint)(value >> 32);  	this._data = new uint[high != 0 ? 2 : 1];  	this._data [0] = low;  	if (high != 0)  		this._data [1] = high;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: this._data = new uint[high != 0 ? 2 : 1];  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: this._sign = (short)((bits [3] & _DECIMALSIGNMASK) != 0 ? -1 : 1);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (size > 2)  	this._data [2] = (uint)bits [2];  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (size > 2)  	this._data [2] = (uint)bits [2];  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (size > 2)  	this._data [2] = (uint)bits [2];  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: this._data [2] = (uint)bits [2];  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: this._data [2] = (uint)bits [2];  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (this._sign == 1) {  	while (value [len - 1] == 0)  		--len;  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	}  	size = len & 0x3;  	if (size > 0) {  		int idx = this._data.Length - 1;  		for (int i = 0; i < size; ++i)  			this._data [idx] |= (uint)(value [j++] << (i * 8));  	}  }  else {  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	uint word' borrow = 1;  	ulong sub = 0;  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  		sub = (ulong)word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [i] = ~word;  	}  	size = len & 0x3;  	if (size > 0) {  		word = 0;  		uint store_mask = 0;  		for (int i = 0; i < size; ++i) {  			word |= (uint)(value [j++] << (i * 8));  			store_mask = (store_mask << 8) | 0xFF;  		}  		sub = word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [this._data.Length - 1] = ~word & store_mask;  	}  	if (borrow != 0)  		//FIXME I believe this can't happen' can someone write a test for it?  		throw new Exception ("non zero final carry");  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (this._sign == 1) {  	while (value [len - 1] == 0)  		--len;  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	}  	size = len & 0x3;  	if (size > 0) {  		int idx = this._data.Length - 1;  		for (int i = 0; i < size; ++i)  			this._data [idx] |= (uint)(value [j++] << (i * 8));  	}  }  else {  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	uint word' borrow = 1;  	ulong sub = 0;  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  		sub = (ulong)word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [i] = ~word;  	}  	size = len & 0x3;  	if (size > 0) {  		word = 0;  		uint store_mask = 0;  		for (int i = 0; i < size; ++i) {  			word |= (uint)(value [j++] << (i * 8));  			store_mask = (store_mask << 8) | 0xFF;  		}  		sub = word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [this._data.Length - 1] = ~word & store_mask;  	}  	if (borrow != 0)  		//FIXME I believe this can't happen' can someone write a test for it?  		throw new Exception ("non zero final carry");  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (this._sign == 1) {  	while (value [len - 1] == 0)  		--len;  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	}  	size = len & 0x3;  	if (size > 0) {  		int idx = this._data.Length - 1;  		for (int i = 0; i < size; ++i)  			this._data [idx] |= (uint)(value [j++] << (i * 8));  	}  }  else {  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	uint word' borrow = 1;  	ulong sub = 0;  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  		sub = (ulong)word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [i] = ~word;  	}  	size = len & 0x3;  	if (size > 0) {  		word = 0;  		uint store_mask = 0;  		for (int i = 0; i < size; ++i) {  			word |= (uint)(value [j++] << (i * 8));  			store_mask = (store_mask << 8) | 0xFF;  		}  		sub = word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [this._data.Length - 1] = ~word & store_mask;  	}  	if (borrow != 0)  		//FIXME I believe this can't happen' can someone write a test for it?  		throw new Exception ("non zero final carry");  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (this._sign == 1) {  	while (value [len - 1] == 0)  		--len;  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	}  	size = len & 0x3;  	if (size > 0) {  		int idx = this._data.Length - 1;  		for (int i = 0; i < size; ++i)  			this._data [idx] |= (uint)(value [j++] << (i * 8));  	}  }  else {  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	uint word' borrow = 1;  	ulong sub = 0;  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  		sub = (ulong)word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [i] = ~word;  	}  	size = len & 0x3;  	if (size > 0) {  		word = 0;  		uint store_mask = 0;  		for (int i = 0; i < size; ++i) {  			word |= (uint)(value [j++] << (i * 8));  			store_mask = (store_mask << 8) | 0xFF;  		}  		sub = word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [this._data.Length - 1] = ~word & store_mask;  	}  	if (borrow != 0)  		//FIXME I believe this can't happen' can someone write a test for it?  		throw new Exception ("non zero final carry");  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (this._sign == 1) {  	while (value [len - 1] == 0)  		--len;  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	}  	size = len & 0x3;  	if (size > 0) {  		int idx = this._data.Length - 1;  		for (int i = 0; i < size; ++i)  			this._data [idx] |= (uint)(value [j++] << (i * 8));  	}  }  else {  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	uint word' borrow = 1;  	ulong sub = 0;  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  		sub = (ulong)word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [i] = ~word;  	}  	size = len & 0x3;  	if (size > 0) {  		word = 0;  		uint store_mask = 0;  		for (int i = 0; i < size; ++i) {  			word |= (uint)(value [j++] << (i * 8));  			store_mask = (store_mask << 8) | 0xFF;  		}  		sub = word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [this._data.Length - 1] = ~word & store_mask;  	}  	if (borrow != 0)  		//FIXME I believe this can't happen' can someone write a test for it?  		throw new Exception ("non zero final carry");  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (this._sign == 1) {  	while (value [len - 1] == 0)  		--len;  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	}  	size = len & 0x3;  	if (size > 0) {  		int idx = this._data.Length - 1;  		for (int i = 0; i < size; ++i)  			this._data [idx] |= (uint)(value [j++] << (i * 8));  	}  }  else {  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	uint word' borrow = 1;  	ulong sub = 0;  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  		sub = (ulong)word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [i] = ~word;  	}  	size = len & 0x3;  	if (size > 0) {  		word = 0;  		uint store_mask = 0;  		for (int i = 0; i < size; ++i) {  			word |= (uint)(value [j++] << (i * 8));  			store_mask = (store_mask << 8) | 0xFF;  		}  		sub = word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [this._data.Length - 1] = ~word & store_mask;  	}  	if (borrow != 0)  		//FIXME I believe this can't happen' can someone write a test for it?  		throw new Exception ("non zero final carry");  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (this._sign == 1) {  	while (value [len - 1] == 0)  		--len;  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	}  	size = len & 0x3;  	if (size > 0) {  		int idx = this._data.Length - 1;  		for (int i = 0; i < size; ++i)  			this._data [idx] |= (uint)(value [j++] << (i * 8));  	}  }  else {  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	uint word' borrow = 1;  	ulong sub = 0;  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  		sub = (ulong)word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [i] = ~word;  	}  	size = len & 0x3;  	if (size > 0) {  		word = 0;  		uint store_mask = 0;  		for (int i = 0; i < size; ++i) {  			word |= (uint)(value [j++] << (i * 8));  			store_mask = (store_mask << 8) | 0xFF;  		}  		sub = word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [this._data.Length - 1] = ~word & store_mask;  	}  	if (borrow != 0)  		//FIXME I believe this can't happen' can someone write a test for it?  		throw new Exception ("non zero final carry");  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (this._sign == 1) {  	while (value [len - 1] == 0)  		--len;  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	}  	size = len & 0x3;  	if (size > 0) {  		int idx = this._data.Length - 1;  		for (int i = 0; i < size; ++i)  			this._data [idx] |= (uint)(value [j++] << (i * 8));  	}  }  else {  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	uint word' borrow = 1;  	ulong sub = 0;  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  		sub = (ulong)word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [i] = ~word;  	}  	size = len & 0x3;  	if (size > 0) {  		word = 0;  		uint store_mask = 0;  		for (int i = 0; i < size; ++i) {  			word |= (uint)(value [j++] << (i * 8));  			store_mask = (store_mask << 8) | 0xFF;  		}  		sub = word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [this._data.Length - 1] = ~word & store_mask;  	}  	if (borrow != 0)  		//FIXME I believe this can't happen' can someone write a test for it?  		throw new Exception ("non zero final carry");  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (this._sign == 1) {  	while (value [len - 1] == 0)  		--len;  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	}  	size = len & 0x3;  	if (size > 0) {  		int idx = this._data.Length - 1;  		for (int i = 0; i < size; ++i)  			this._data [idx] |= (uint)(value [j++] << (i * 8));  	}  }  else {  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	uint word' borrow = 1;  	ulong sub = 0;  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  		sub = (ulong)word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [i] = ~word;  	}  	size = len & 0x3;  	if (size > 0) {  		word = 0;  		uint store_mask = 0;  		for (int i = 0; i < size; ++i) {  			word |= (uint)(value [j++] << (i * 8));  			store_mask = (store_mask << 8) | 0xFF;  		}  		sub = word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [this._data.Length - 1] = ~word & store_mask;  	}  	if (borrow != 0)  		//FIXME I believe this can't happen' can someone write a test for it?  		throw new Exception ("non zero final carry");  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (this._sign == 1) {  	while (value [len - 1] == 0)  		--len;  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	}  	size = len & 0x3;  	if (size > 0) {  		int idx = this._data.Length - 1;  		for (int i = 0; i < size; ++i)  			this._data [idx] |= (uint)(value [j++] << (i * 8));  	}  }  else {  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	uint word' borrow = 1;  	ulong sub = 0;  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  		sub = (ulong)word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [i] = ~word;  	}  	size = len & 0x3;  	if (size > 0) {  		word = 0;  		uint store_mask = 0;  		for (int i = 0; i < size; ++i) {  			word |= (uint)(value [j++] << (i * 8));  			store_mask = (store_mask << 8) | 0xFF;  		}  		sub = word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [this._data.Length - 1] = ~word & store_mask;  	}  	if (borrow != 0)  		//FIXME I believe this can't happen' can someone write a test for it?  		throw new Exception ("non zero final carry");  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (this._sign == 1) {  	while (value [len - 1] == 0)  		--len;  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	}  	size = len & 0x3;  	if (size > 0) {  		int idx = this._data.Length - 1;  		for (int i = 0; i < size; ++i)  			this._data [idx] |= (uint)(value [j++] << (i * 8));  	}  }  else {  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	uint word' borrow = 1;  	ulong sub = 0;  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  		sub = (ulong)word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [i] = ~word;  	}  	size = len & 0x3;  	if (size > 0) {  		word = 0;  		uint store_mask = 0;  		for (int i = 0; i < size; ++i) {  			word |= (uint)(value [j++] << (i * 8));  			store_mask = (store_mask << 8) | 0xFF;  		}  		sub = word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [this._data.Length - 1] = ~word & store_mask;  	}  	if (borrow != 0)  		//FIXME I believe this can't happen' can someone write a test for it?  		throw new Exception ("non zero final carry");  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (this._sign == 1) {  	while (value [len - 1] == 0)  		--len;  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	}  	size = len & 0x3;  	if (size > 0) {  		int idx = this._data.Length - 1;  		for (int i = 0; i < size; ++i)  			this._data [idx] |= (uint)(value [j++] << (i * 8));  	}  }  else {  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	uint word' borrow = 1;  	ulong sub = 0;  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  		sub = (ulong)word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [i] = ~word;  	}  	size = len & 0x3;  	if (size > 0) {  		word = 0;  		uint store_mask = 0;  		for (int i = 0; i < size; ++i) {  			word |= (uint)(value [j++] << (i * 8));  			store_mask = (store_mask << 8) | 0xFF;  		}  		sub = word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [this._data.Length - 1] = ~word & store_mask;  	}  	if (borrow != 0)  		//FIXME I believe this can't happen' can someone write a test for it?  		throw new Exception ("non zero final carry");  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (this._sign == 1) {  	while (value [len - 1] == 0)  		--len;  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	}  	size = len & 0x3;  	if (size > 0) {  		int idx = this._data.Length - 1;  		for (int i = 0; i < size; ++i)  			this._data [idx] |= (uint)(value [j++] << (i * 8));  	}  }  else {  	int full_words' size;  	full_words = size = len / 4;  	if ((len & 0x3) != 0)  		++size;  	this._data = new uint[size];  	uint word' borrow = 1;  	ulong sub = 0;  	int j = 0;  	for (int i = 0; i < full_words; ++i) {  		word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  		sub = (ulong)word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [i] = ~word;  	}  	size = len & 0x3;  	if (size > 0) {  		word = 0;  		uint store_mask = 0;  		for (int i = 0; i < size; ++i) {  			word |= (uint)(value [j++] << (i * 8));  			store_mask = (store_mask << 8) | 0xFF;  		}  		sub = word - borrow;  		word = (uint)sub;  		borrow = (uint)(sub >> 32) & 0x1u;  		this._data [this._data.Length - 1] = ~word & store_mask;  	}  	if (borrow != 0)  		//FIXME I believe this can't happen' can someone write a test for it?  		throw new Exception ("non zero final carry");  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: full_words = size = len / 4;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: for (int i = 0; i < full_words; ++i) {  	this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: for (int i = 0; i < full_words; ++i) {  	this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: for (int i = 0; i < full_words; ++i) {  	this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: this._data [i] = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (size > 0) {  	int idx = this._data.Length - 1;  	for (int i = 0; i < size; ++i)  		this._data [idx] |= (uint)(value [j++] << (i * 8));  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: for (int i = 0; i < size; ++i)  	this._data [idx] |= (uint)(value [j++] << (i * 8));  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: this._data [idx] |= (uint)(value [j++] << (i * 8));  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: full_words = size = len / 4;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: for (int i = 0; i < full_words; ++i) {  	word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	sub = (ulong)word - borrow;  	word = (uint)sub;  	borrow = (uint)(sub >> 32) & 0x1u;  	this._data [i] = ~word;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: for (int i = 0; i < full_words; ++i) {  	word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	sub = (ulong)word - borrow;  	word = (uint)sub;  	borrow = (uint)(sub >> 32) & 0x1u;  	this._data [i] = ~word;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: for (int i = 0; i < full_words; ++i) {  	word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	sub = (ulong)word - borrow;  	word = (uint)sub;  	borrow = (uint)(sub >> 32) & 0x1u;  	this._data [i] = ~word;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: for (int i = 0; i < full_words; ++i) {  	word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  	sub = (ulong)word - borrow;  	word = (uint)sub;  	borrow = (uint)(sub >> 32) & 0x1u;  	this._data [i] = ~word;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: word = (uint)value [j++] | (uint)(value [j++] << 8) | (uint)(value [j++] << 16) | (uint)(value [j++] << 24);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: borrow = (uint)(sub >> 32) & 0x1u;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (size > 0) {  	word = 0;  	uint store_mask = 0;  	for (int i = 0; i < size; ++i) {  		word |= (uint)(value [j++] << (i * 8));  		store_mask = (store_mask << 8) | 0xFF;  	}  	sub = word - borrow;  	word = (uint)sub;  	borrow = (uint)(sub >> 32) & 0x1u;  	this._data [this._data.Length - 1] = ~word & store_mask;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (size > 0) {  	word = 0;  	uint store_mask = 0;  	for (int i = 0; i < size; ++i) {  		word |= (uint)(value [j++] << (i * 8));  		store_mask = (store_mask << 8) | 0xFF;  	}  	sub = word - borrow;  	word = (uint)sub;  	borrow = (uint)(sub >> 32) & 0x1u;  	this._data [this._data.Length - 1] = ~word & store_mask;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: if (size > 0) {  	word = 0;  	uint store_mask = 0;  	for (int i = 0; i < size; ++i) {  		word |= (uint)(value [j++] << (i * 8));  		store_mask = (store_mask << 8) | 0xFF;  	}  	sub = word - borrow;  	word = (uint)sub;  	borrow = (uint)(sub >> 32) & 0x1u;  	this._data [this._data.Length - 1] = ~word & store_mask;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: for (int i = 0; i < size; ++i) {  	word |= (uint)(value [j++] << (i * 8));  	store_mask = (store_mask << 8) | 0xFF;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: for (int i = 0; i < size; ++i) {  	word |= (uint)(value [j++] << (i * 8));  	store_mask = (store_mask << 8) | 0xFF;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: word |= (uint)(value [j++] << (i * 8));  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: store_mask = (store_mask << 8) | 0xFF;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BigInteger,The following statement contains a magic number: borrow = (uint)(sub >> 32) & 0x1u;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,CompareTo,The following statement contains a magic number: if (this._data.Length > 2)  	return 1;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Log,The following statement contains a magic number: for (int curBit = 31; curBit >= 0; curBit--) {  	if ((value._data [length] & (1 << curBit)) != 0) {  		bitCount = curBit + length * 32;  		break;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Log,The following statement contains a magic number: for (int curBit = 31; curBit >= 0; curBit--) {  	if ((value._data [length] & (1 << curBit)) != 0) {  		bitCount = curBit + length * 32;  		break;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Log,The following statement contains a magic number: if ((value._data [length] & (1 << curBit)) != 0) {  	bitCount = curBit + length * 32;  	break;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Log,The following statement contains a magic number: bitCount = curBit + length * 32;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Log,The following statement contains a magic number: for (long curbit = bitlen; curbit >= 0; --curbit) {  	if ((value & testBit)._sign != 0)  		c += d;  	d *= 0.5;  	testBit = testBit >> 1;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Log,The following statement contains a magic number: d *= 0.5;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Log,The following statement contains a magic number: return (System.Math.Log (c) + System.Math.Log (2) * bitlen) / System.Math.Log (baseValue);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Log10,The following statement contains a magic number: return Log (value' 10);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	extra = TopByte (topWord);  	uint mask = 0x80u << ((extra - 1) * 8);  	if ((topWord & mask) != 0) {  		needExtraZero = true;  	}  }  else {  	extra = TopByte (topWord);  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (this._sign == 1) {  	int j = 0;  	int end = this._data.Length - 1;  	for (int i = 0; i < end; ++i) {  		uint word = this._data [i];  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	while (extra-- > 0) {  		res [j++] = (byte)topWord;  		topWord >>= 8;  	}  }  else {  	int j = 0;  	int end = this._data.Length - 1;  	uint carry = 1' word;  	ulong add;  	for (int i = 0; i < end; ++i) {  		word = this._data [i];  		add = (ulong)~word + carry;  		word = (uint)add;  		carry = (uint)(add >> 32);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  	}  	add = (ulong)~topWord + (carry);  	word = (uint)add;  	carry = (uint)(add >> 32);  	if (carry == 0) {  		int ex = FirstNonFFByte (word);  		bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  		int to = ex + (needExtra ? 1 : 0);  		if (to != extra)  			res = Resize (res' bytes + to);  		while (ex-- > 0) {  			res [j++] = (byte)word;  			word >>= 8;  		}  		if (needExtra)  			res [j++] = 0xFF;  	}  	else {  		res = Resize (res' bytes + 5);  		res [j++] = (byte)word;  		res [j++] = (byte)(word >> 8);  		res [j++] = (byte)(word >> 16);  		res [j++] = (byte)(word >> 24);  		res [j++] = 0xFF;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: for (int i = 0; i < end; ++i) {  	uint word = this._data [i];  	res [j++] = (byte)word;  	res [j++] = (byte)(word >> 8);  	res [j++] = (byte)(word >> 16);  	res [j++] = (byte)(word >> 24);  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: for (int i = 0; i < end; ++i) {  	uint word = this._data [i];  	res [j++] = (byte)word;  	res [j++] = (byte)(word >> 8);  	res [j++] = (byte)(word >> 16);  	res [j++] = (byte)(word >> 24);  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: for (int i = 0; i < end; ++i) {  	uint word = this._data [i];  	res [j++] = (byte)word;  	res [j++] = (byte)(word >> 8);  	res [j++] = (byte)(word >> 16);  	res [j++] = (byte)(word >> 24);  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: res [j++] = (byte)(word >> 8);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: res [j++] = (byte)(word >> 16);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: res [j++] = (byte)(word >> 24);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: while (extra-- > 0) {  	res [j++] = (byte)topWord;  	topWord >>= 8;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: topWord >>= 8;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: for (int i = 0; i < end; ++i) {  	word = this._data [i];  	add = (ulong)~word + carry;  	word = (uint)add;  	carry = (uint)(add >> 32);  	res [j++] = (byte)word;  	res [j++] = (byte)(word >> 8);  	res [j++] = (byte)(word >> 16);  	res [j++] = (byte)(word >> 24);  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: for (int i = 0; i < end; ++i) {  	word = this._data [i];  	add = (ulong)~word + carry;  	word = (uint)add;  	carry = (uint)(add >> 32);  	res [j++] = (byte)word;  	res [j++] = (byte)(word >> 8);  	res [j++] = (byte)(word >> 16);  	res [j++] = (byte)(word >> 24);  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: for (int i = 0; i < end; ++i) {  	word = this._data [i];  	add = (ulong)~word + carry;  	word = (uint)add;  	carry = (uint)(add >> 32);  	res [j++] = (byte)word;  	res [j++] = (byte)(word >> 8);  	res [j++] = (byte)(word >> 16);  	res [j++] = (byte)(word >> 24);  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: for (int i = 0; i < end; ++i) {  	word = this._data [i];  	add = (ulong)~word + carry;  	word = (uint)add;  	carry = (uint)(add >> 32);  	res [j++] = (byte)word;  	res [j++] = (byte)(word >> 8);  	res [j++] = (byte)(word >> 16);  	res [j++] = (byte)(word >> 24);  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: carry = (uint)(add >> 32);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: res [j++] = (byte)(word >> 8);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: res [j++] = (byte)(word >> 16);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: res [j++] = (byte)(word >> 24);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: carry = (uint)(add >> 32);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (carry == 0) {  	int ex = FirstNonFFByte (word);  	bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  	int to = ex + (needExtra ? 1 : 0);  	if (to != extra)  		res = Resize (res' bytes + to);  	while (ex-- > 0) {  		res [j++] = (byte)word;  		word >>= 8;  	}  	if (needExtra)  		res [j++] = 0xFF;  }  else {  	res = Resize (res' bytes + 5);  	res [j++] = (byte)word;  	res [j++] = (byte)(word >> 8);  	res [j++] = (byte)(word >> 16);  	res [j++] = (byte)(word >> 24);  	res [j++] = 0xFF;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (carry == 0) {  	int ex = FirstNonFFByte (word);  	bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  	int to = ex + (needExtra ? 1 : 0);  	if (to != extra)  		res = Resize (res' bytes + to);  	while (ex-- > 0) {  		res [j++] = (byte)word;  		word >>= 8;  	}  	if (needExtra)  		res [j++] = 0xFF;  }  else {  	res = Resize (res' bytes + 5);  	res [j++] = (byte)word;  	res [j++] = (byte)(word >> 8);  	res [j++] = (byte)(word >> 16);  	res [j++] = (byte)(word >> 24);  	res [j++] = 0xFF;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (carry == 0) {  	int ex = FirstNonFFByte (word);  	bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  	int to = ex + (needExtra ? 1 : 0);  	if (to != extra)  		res = Resize (res' bytes + to);  	while (ex-- > 0) {  		res [j++] = (byte)word;  		word >>= 8;  	}  	if (needExtra)  		res [j++] = 0xFF;  }  else {  	res = Resize (res' bytes + 5);  	res [j++] = (byte)word;  	res [j++] = (byte)(word >> 8);  	res [j++] = (byte)(word >> 16);  	res [j++] = (byte)(word >> 24);  	res [j++] = 0xFF;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (carry == 0) {  	int ex = FirstNonFFByte (word);  	bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  	int to = ex + (needExtra ? 1 : 0);  	if (to != extra)  		res = Resize (res' bytes + to);  	while (ex-- > 0) {  		res [j++] = (byte)word;  		word >>= 8;  	}  	if (needExtra)  		res [j++] = 0xFF;  }  else {  	res = Resize (res' bytes + 5);  	res [j++] = (byte)word;  	res [j++] = (byte)(word >> 8);  	res [j++] = (byte)(word >> 16);  	res [j++] = (byte)(word >> 24);  	res [j++] = 0xFF;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (carry == 0) {  	int ex = FirstNonFFByte (word);  	bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  	int to = ex + (needExtra ? 1 : 0);  	if (to != extra)  		res = Resize (res' bytes + to);  	while (ex-- > 0) {  		res [j++] = (byte)word;  		word >>= 8;  	}  	if (needExtra)  		res [j++] = 0xFF;  }  else {  	res = Resize (res' bytes + 5);  	res [j++] = (byte)word;  	res [j++] = (byte)(word >> 8);  	res [j++] = (byte)(word >> 16);  	res [j++] = (byte)(word >> 24);  	res [j++] = 0xFF;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: if (carry == 0) {  	int ex = FirstNonFFByte (word);  	bool needExtra = (word & (1 << (ex * 8 - 1))) == 0;  	int to = ex + (needExtra ? 1 : 0);  	if (to != extra)  		res = Resize (res' bytes + to);  	while (ex-- > 0) {  		res [j++] = (byte)word;  		word >>= 8;  	}  	if (needExtra)  		res [j++] = 0xFF;  }  else {  	res = Resize (res' bytes + 5);  	res [j++] = (byte)word;  	res [j++] = (byte)(word >> 8);  	res [j++] = (byte)(word >> 16);  	res [j++] = (byte)(word >> 24);  	res [j++] = 0xFF;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: while (ex-- > 0) {  	res [j++] = (byte)word;  	word >>= 8;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: word >>= 8;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: res = Resize (res' bytes + 5);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: res [j++] = (byte)(word >> 8);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: res [j++] = (byte)(word >> 16);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToByteArray,The following statement contains a magic number: res [j++] = (byte)(word >> 24);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToString,The following statement contains a magic number: return ToString (10' null);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToString,The following statement contains a magic number: if (format == null || format == "")  	return ToString (10' provider);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToString,The following statement contains a magic number: return ToString (10' provider);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToString,The following statement contains a magic number: switch (format [0]) {  case 'd':  case 'D':  case 'g':  case 'G':  case 'r':  case 'R':  	return ToStringWithPadding (format' 10' provider);  case 'x':  case 'X':  	return ToStringWithPadding (format' 16' null);  default:  	throw new FormatException (string.Format ("format '{0}' not implemented"' format));  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToString,The following statement contains a magic number: switch (format [0]) {  case 'd':  case 'D':  case 'g':  case 'G':  case 'r':  case 'R':  	return ToStringWithPadding (format' 10' provider);  case 'x':  case 'X':  	return ToStringWithPadding (format' 16' null);  default:  	throw new FormatException (string.Format ("format '{0}' not implemented"' format));  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToString,The following statement contains a magic number: return ToStringWithPadding (format' 10' provider);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToString,The following statement contains a magic number: return ToStringWithPadding (format' 16' null);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,CompareTo,The following statement contains a magic number: if (this._data.Length > 2)  	return this._sign;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Negative,The following statement contains a magic number: return ((v [7] & 0x80) != 0);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Exponent,The following statement contains a magic number: return (ushort)((((ushort)(v [7] & 0x7F)) << (ushort)4) | (((ushort)(v [6] & 0xF0)) >> 4));  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Exponent,The following statement contains a magic number: return (ushort)((((ushort)(v [7] & 0x7F)) << (ushort)4) | (((ushort)(v [6] & 0xF0)) >> 4));  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Exponent,The following statement contains a magic number: return (ushort)((((ushort)(v [7] & 0x7F)) << (ushort)4) | (((ushort)(v [6] & 0xF0)) >> 4));  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Exponent,The following statement contains a magic number: return (ushort)((((ushort)(v [7] & 0x7F)) << (ushort)4) | (((ushort)(v [6] & 0xF0)) >> 4));  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Mantissa,The following statement contains a magic number: return (ulong)((ulong)i1 | ((ulong)i2 << 32));  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,PopulationCount,The following statement contains a magic number: x = (x & 0x33333333) + ((x >> 2) & 0x33333333);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,PopulationCount,The following statement contains a magic number: x = (x + (x >> 4)) & 0x0F0F0F0F;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,PopulationCount,The following statement contains a magic number: x = x + (x >> 8);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,PopulationCount,The following statement contains a magic number: x = x + (x >> 16);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,MakeTwoComplement,The following statement contains a magic number: for (int i = 0; i < v.Length; ++i) {  	uint word = v [i];  	carry = (ulong)~word + carry;  	word = (uint)carry;  	carry = (uint)(carry >> 32);  	res [i] = word;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,MakeTwoComplement,The following statement contains a magic number: carry = (uint)(carry >> 32);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,MakeTwoComplement,The following statement contains a magic number: for (int i = 1; i < idx; ++i)  	mask = (mask << 8) | 0xFF;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,MakeTwoComplement,The following statement contains a magic number: mask = (mask << 8) | 0xFF;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToString,The following statement contains a magic number: if (this._sign == 1)  	a = this;  else {  	uint[] dt = this._data;  	if (radix > 10)  		dt = MakeTwoComplement (dt);  	a = new BigInteger (1' dt);  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToString,The following statement contains a magic number: if (radix > 10)  	dt = MakeTwoComplement (dt);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToString,The following statement contains a magic number: if (this._sign == -1 && radix == 10) {  	NumberFormatInfo info = null;  	if (provider != null)  		info = provider.GetFormat (typeof(NumberFormatInfo)) as NumberFormatInfo;  	if (info != null) {  		string str = info.NegativeSign;  		for (int i = str.Length - 1; i >= 0; --i)  			digits.Add (str [i]);  	}  	else {  		digits.Add ('-');  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,ToString,The following statement contains a magic number: if (this._sign == 1 && radix > 10 && (last < '0' || last > '9'))  	digits.Add ('0');  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Parse,The following statement contains a magic number: switch (style) {  case NumberStyles.None:  	break;  case NumberStyles.HexNumber:  case NumberStyles.AllowHexSpecifier:  	baseNumber = 16;  	break;  case NumberStyles.AllowCurrencySymbol:  case NumberStyles.AllowDecimalPoint:  case NumberStyles.AllowExponent:  case NumberStyles.AllowLeadingSign:  case NumberStyles.AllowLeadingWhite:  case NumberStyles.AllowParentheses:  case NumberStyles.AllowThousands:  case NumberStyles.AllowTrailingSign:  case NumberStyles.AllowTrailingWhite:  case NumberStyles.Any:  case NumberStyles.Currency:  case NumberStyles.Float:  case NumberStyles.Integer:  case NumberStyles.Number:  default:  	throw new NotSupportedException (string.Format ("Style '{0}' is not supported."' style));  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Parse,The following statement contains a magic number: baseNumber = 16;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Parse,The following statement contains a magic number: for (; i < len; i++) {  	c = s [i];  	if (c == '\0') {  		i = len;  		continue;  	}  	if (c >= '0' && c <= '9') {  		byte d = (byte)(c - '0');  		val = val * baseNumber + d;  		digits_seen = true;  	}  	else if (c >= 'A' && c <= 'F') {  		byte d = (byte)(c - 'A' + 10);  		val = val * baseNumber + d;  		digits_seen = true;  	}  	else if (!ProcessTrailingWhitespace (tryParse' s' i' ref exc))  		return false;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Parse,The following statement contains a magic number: if (c >= '0' && c <= '9') {  	byte d = (byte)(c - '0');  	val = val * baseNumber + d;  	digits_seen = true;  }  else if (c >= 'A' && c <= 'F') {  	byte d = (byte)(c - 'A' + 10);  	val = val * baseNumber + d;  	digits_seen = true;  }  else if (!ProcessTrailingWhitespace (tryParse' s' i' ref exc))  	return false;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Parse,The following statement contains a magic number: if (c >= 'A' && c <= 'F') {  	byte d = (byte)(c - 'A' + 10);  	val = val * baseNumber + d;  	digits_seen = true;  }  else if (!ProcessTrailingWhitespace (tryParse' s' i' ref exc))  	return false;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,AsUInt64,The following statement contains a magic number: if (this._data.Length > 2 || this._sign == -1)  	return false;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,AsUInt64,The following statement contains a magic number: val |= (((ulong)high) << 32);  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,BitScanBackward,The following statement contains a magic number: for (int i = 31; i >= 0; --i) {  	uint mask = 1u << i;  	if ((word & mask) == mask)  		return i;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,TopByte,The following statement contains a magic number: if ((x & 0xFFFF0000u) != 0) {  	if ((x & 0xFF000000u) != 0)  		return 4;  	return 3;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,TopByte,The following statement contains a magic number: if ((x & 0xFFFF0000u) != 0) {  	if ((x & 0xFF000000u) != 0)  		return 4;  	return 3;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,TopByte,The following statement contains a magic number: if ((x & 0xFF000000u) != 0)  	return 4;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,TopByte,The following statement contains a magic number: return 4;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,TopByte,The following statement contains a magic number: return 3;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,TopByte,The following statement contains a magic number: if ((x & 0xFF00u) != 0)  	return 2;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,TopByte,The following statement contains a magic number: return 2;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,FirstNonFFByte,The following statement contains a magic number: if ((word & 0xFF000000u) != 0xFF000000u)  	return 4;  else if ((word & 0xFF0000u) != 0xFF0000u)  	return 3;  else if ((word & 0xFF00u) != 0xFF00u)  	return 2;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,FirstNonFFByte,The following statement contains a magic number: if ((word & 0xFF000000u) != 0xFF000000u)  	return 4;  else if ((word & 0xFF0000u) != 0xFF0000u)  	return 3;  else if ((word & 0xFF00u) != 0xFF00u)  	return 2;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,FirstNonFFByte,The following statement contains a magic number: if ((word & 0xFF000000u) != 0xFF000000u)  	return 4;  else if ((word & 0xFF0000u) != 0xFF0000u)  	return 3;  else if ((word & 0xFF00u) != 0xFF00u)  	return 2;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,FirstNonFFByte,The following statement contains a magic number: return 4;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,FirstNonFFByte,The following statement contains a magic number: if ((word & 0xFF0000u) != 0xFF0000u)  	return 3;  else if ((word & 0xFF00u) != 0xFF00u)  	return 2;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,FirstNonFFByte,The following statement contains a magic number: if ((word & 0xFF0000u) != 0xFF0000u)  	return 3;  else if ((word & 0xFF00u) != 0xFF00u)  	return 2;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,FirstNonFFByte,The following statement contains a magic number: return 3;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,FirstNonFFByte,The following statement contains a magic number: if ((word & 0xFF00u) != 0xFF00u)  	return 2;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,FirstNonFFByte,The following statement contains a magic number: return 2;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,CoreAdd,The following statement contains a magic number: for (; i < sl; i++) {  	sum = sum + a [i] + b [i];  	res [i] = (uint)sum;  	sum >>= 32;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,CoreAdd,The following statement contains a magic number: sum >>= 32;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,CoreAdd,The following statement contains a magic number: for (; i < bl; i++) {  	sum = sum + a [i];  	res [i] = (uint)sum;  	sum >>= 32;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,CoreAdd,The following statement contains a magic number: sum >>= 32;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,CoreSub,The following statement contains a magic number: for (i = 0; i < sl; ++i) {  	borrow = (ulong)a [i] - b [i] - borrow;  	res [i] = (uint)borrow;  	borrow = (borrow >> 32) & 0x1;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,CoreSub,The following statement contains a magic number: borrow = (borrow >> 32) & 0x1;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,CoreSub,The following statement contains a magic number: for (; i < bl; i++) {  	borrow = (ulong)a [i] - borrow;  	res [i] = (uint)borrow;  	borrow = (borrow >> 32) & 0x1;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,CoreSub,The following statement contains a magic number: borrow = (borrow >> 32) & 0x1;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,CoreAdd,The following statement contains a magic number: for (i = 0; i < len; i++) {  	sum = sum + a [i];  	res [i] = (uint)sum;  	sum >>= 32;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,CoreAdd,The following statement contains a magic number: sum >>= 32;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,CoreSub,The following statement contains a magic number: for (i = 0; i < len; i++) {  	borrow = (ulong)a [i] - borrow;  	res [i] = (uint)borrow;  	borrow = (borrow >> 32) & 0x1;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,CoreSub,The following statement contains a magic number: borrow = (borrow >> 32) & 0x1;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: if ((value & 0xFFFF0000) == 0) {  	value <<= 16;  	shift += 16;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: if ((value & 0xFFFF0000) == 0) {  	value <<= 16;  	shift += 16;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: value <<= 16;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: shift += 16;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: if ((value & 0xFF000000) == 0) {  	value <<= 8;  	shift += 8;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: if ((value & 0xFF000000) == 0) {  	value <<= 8;  	shift += 8;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: value <<= 8;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: shift += 8;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: if ((value & 0xF0000000) == 0) {  	value <<= 4;  	shift += 4;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: if ((value & 0xF0000000) == 0) {  	value <<= 4;  	shift += 4;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: value <<= 4;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: shift += 4;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: if ((value & 0xC0000000) == 0) {  	value <<= 2;  	shift += 2;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: if ((value & 0xC0000000) == 0) {  	value <<= 2;  	shift += 2;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: value <<= 2;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: shift += 2;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Normalize,The following statement contains a magic number: if (shift > 0) {  	int rshift = 32 - shift;  	for (i = 0; i < l; i++) {  		uint ui = u [i];  		un [i] = (ui << shift) | carry;  		carry = ui >> rshift;  	}  }  else {  	for (i = 0; i < l; i++) {  		un [i] = u [i];  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,Unnormalize,The following statement contains a magic number: if (shift > 0) {  	int lshift = 32 - shift;  	uint carry = 0;  	for (int i = length - 1; i >= 0; i--) {  		uint uni = un [i];  		r [i] = (uni >> shift) | carry;  		carry = (uni << lshift);  	}  }  else {  	for (int i = 0; i < length; i++) {  		r [i] = un [i];  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: if (n <= 1) {  	// Divide by single digit  	//  	ulong rem = 0;  	uint v0 = v [0];  	q = new uint[m];  	r = new uint[1];  	for (int j = m - 1; j >= 0; j--) {  		rem *= _BASE;  		rem += u [j];  		ulong div = rem / v0;  		rem -= div * v0;  		q [j] = (uint)div;  	}  	r [0] = (uint)rem;  }  else if (m >= n) {  	int shift = GetNormalizeShift (v [n - 1]);  	uint[] un = new uint[m + 1];  	uint[] vn = new uint[n];  	Normalize (u' m' un' shift);  	Normalize (v' n' vn' shift);  	q = new uint[m - n + 1];  	r = null;  	// Main division loop  	//  	for (int j = m - n; j >= 0; j--) {  		ulong rr' qq;  		int i;  		rr = _BASE * un [j + n] + un [j + n - 1];  		qq = rr / vn [n - 1];  		rr -= qq * vn [n - 1];  		for (; ;) {  			// Estimate too big ?  			//  			if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  				qq--;  				rr += (ulong)vn [n - 1];  				if (rr < _BASE)  					continue;  			}  			break;  		}  		// Multiply and subtract  		//  		long b = 0;  		long t = 0;  		for (i = 0; i < n; i++) {  			ulong p = vn [i] * qq;  			t = (long)un [i + j] - (long)(uint)p - b;  			un [i + j] = (uint)t;  			p >>= 32;  			t >>= 32;  			b = (long)p - t;  		}  		t = (long)un [j + n] - b;  		un [j + n] = (uint)t;  		// Store the calculated value  		//  		q [j] = (uint)qq;  		// Add back vn[0..n] to un[j..j+n]  		//  		if (t < 0) {  			q [j]--;  			ulong c = 0;  			for (i = 0; i < n; i++) {  				c = (ulong)vn [i] + un [j + i] + c;  				un [j + i] = (uint)c;  				c >>= 32;  			}  			c += (ulong)un [j + n];  			un [j + n] = (uint)c;  		}  	}  	Unnormalize (un' out r' shift);  }  else {  	q = new uint[] {  		0  	};  	r = u;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: if (n <= 1) {  	// Divide by single digit  	//  	ulong rem = 0;  	uint v0 = v [0];  	q = new uint[m];  	r = new uint[1];  	for (int j = m - 1; j >= 0; j--) {  		rem *= _BASE;  		rem += u [j];  		ulong div = rem / v0;  		rem -= div * v0;  		q [j] = (uint)div;  	}  	r [0] = (uint)rem;  }  else if (m >= n) {  	int shift = GetNormalizeShift (v [n - 1]);  	uint[] un = new uint[m + 1];  	uint[] vn = new uint[n];  	Normalize (u' m' un' shift);  	Normalize (v' n' vn' shift);  	q = new uint[m - n + 1];  	r = null;  	// Main division loop  	//  	for (int j = m - n; j >= 0; j--) {  		ulong rr' qq;  		int i;  		rr = _BASE * un [j + n] + un [j + n - 1];  		qq = rr / vn [n - 1];  		rr -= qq * vn [n - 1];  		for (; ;) {  			// Estimate too big ?  			//  			if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  				qq--;  				rr += (ulong)vn [n - 1];  				if (rr < _BASE)  					continue;  			}  			break;  		}  		// Multiply and subtract  		//  		long b = 0;  		long t = 0;  		for (i = 0; i < n; i++) {  			ulong p = vn [i] * qq;  			t = (long)un [i + j] - (long)(uint)p - b;  			un [i + j] = (uint)t;  			p >>= 32;  			t >>= 32;  			b = (long)p - t;  		}  		t = (long)un [j + n] - b;  		un [j + n] = (uint)t;  		// Store the calculated value  		//  		q [j] = (uint)qq;  		// Add back vn[0..n] to un[j..j+n]  		//  		if (t < 0) {  			q [j]--;  			ulong c = 0;  			for (i = 0; i < n; i++) {  				c = (ulong)vn [i] + un [j + i] + c;  				un [j + i] = (uint)c;  				c >>= 32;  			}  			c += (ulong)un [j + n];  			un [j + n] = (uint)c;  		}  	}  	Unnormalize (un' out r' shift);  }  else {  	q = new uint[] {  		0  	};  	r = u;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: if (n <= 1) {  	// Divide by single digit  	//  	ulong rem = 0;  	uint v0 = v [0];  	q = new uint[m];  	r = new uint[1];  	for (int j = m - 1; j >= 0; j--) {  		rem *= _BASE;  		rem += u [j];  		ulong div = rem / v0;  		rem -= div * v0;  		q [j] = (uint)div;  	}  	r [0] = (uint)rem;  }  else if (m >= n) {  	int shift = GetNormalizeShift (v [n - 1]);  	uint[] un = new uint[m + 1];  	uint[] vn = new uint[n];  	Normalize (u' m' un' shift);  	Normalize (v' n' vn' shift);  	q = new uint[m - n + 1];  	r = null;  	// Main division loop  	//  	for (int j = m - n; j >= 0; j--) {  		ulong rr' qq;  		int i;  		rr = _BASE * un [j + n] + un [j + n - 1];  		qq = rr / vn [n - 1];  		rr -= qq * vn [n - 1];  		for (; ;) {  			// Estimate too big ?  			//  			if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  				qq--;  				rr += (ulong)vn [n - 1];  				if (rr < _BASE)  					continue;  			}  			break;  		}  		// Multiply and subtract  		//  		long b = 0;  		long t = 0;  		for (i = 0; i < n; i++) {  			ulong p = vn [i] * qq;  			t = (long)un [i + j] - (long)(uint)p - b;  			un [i + j] = (uint)t;  			p >>= 32;  			t >>= 32;  			b = (long)p - t;  		}  		t = (long)un [j + n] - b;  		un [j + n] = (uint)t;  		// Store the calculated value  		//  		q [j] = (uint)qq;  		// Add back vn[0..n] to un[j..j+n]  		//  		if (t < 0) {  			q [j]--;  			ulong c = 0;  			for (i = 0; i < n; i++) {  				c = (ulong)vn [i] + un [j + i] + c;  				un [j + i] = (uint)c;  				c >>= 32;  			}  			c += (ulong)un [j + n];  			un [j + n] = (uint)c;  		}  	}  	Unnormalize (un' out r' shift);  }  else {  	q = new uint[] {  		0  	};  	r = u;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: if (n <= 1) {  	// Divide by single digit  	//  	ulong rem = 0;  	uint v0 = v [0];  	q = new uint[m];  	r = new uint[1];  	for (int j = m - 1; j >= 0; j--) {  		rem *= _BASE;  		rem += u [j];  		ulong div = rem / v0;  		rem -= div * v0;  		q [j] = (uint)div;  	}  	r [0] = (uint)rem;  }  else if (m >= n) {  	int shift = GetNormalizeShift (v [n - 1]);  	uint[] un = new uint[m + 1];  	uint[] vn = new uint[n];  	Normalize (u' m' un' shift);  	Normalize (v' n' vn' shift);  	q = new uint[m - n + 1];  	r = null;  	// Main division loop  	//  	for (int j = m - n; j >= 0; j--) {  		ulong rr' qq;  		int i;  		rr = _BASE * un [j + n] + un [j + n - 1];  		qq = rr / vn [n - 1];  		rr -= qq * vn [n - 1];  		for (; ;) {  			// Estimate too big ?  			//  			if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  				qq--;  				rr += (ulong)vn [n - 1];  				if (rr < _BASE)  					continue;  			}  			break;  		}  		// Multiply and subtract  		//  		long b = 0;  		long t = 0;  		for (i = 0; i < n; i++) {  			ulong p = vn [i] * qq;  			t = (long)un [i + j] - (long)(uint)p - b;  			un [i + j] = (uint)t;  			p >>= 32;  			t >>= 32;  			b = (long)p - t;  		}  		t = (long)un [j + n] - b;  		un [j + n] = (uint)t;  		// Store the calculated value  		//  		q [j] = (uint)qq;  		// Add back vn[0..n] to un[j..j+n]  		//  		if (t < 0) {  			q [j]--;  			ulong c = 0;  			for (i = 0; i < n; i++) {  				c = (ulong)vn [i] + un [j + i] + c;  				un [j + i] = (uint)c;  				c >>= 32;  			}  			c += (ulong)un [j + n];  			un [j + n] = (uint)c;  		}  	}  	Unnormalize (un' out r' shift);  }  else {  	q = new uint[] {  		0  	};  	r = u;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: if (n <= 1) {  	// Divide by single digit  	//  	ulong rem = 0;  	uint v0 = v [0];  	q = new uint[m];  	r = new uint[1];  	for (int j = m - 1; j >= 0; j--) {  		rem *= _BASE;  		rem += u [j];  		ulong div = rem / v0;  		rem -= div * v0;  		q [j] = (uint)div;  	}  	r [0] = (uint)rem;  }  else if (m >= n) {  	int shift = GetNormalizeShift (v [n - 1]);  	uint[] un = new uint[m + 1];  	uint[] vn = new uint[n];  	Normalize (u' m' un' shift);  	Normalize (v' n' vn' shift);  	q = new uint[m - n + 1];  	r = null;  	// Main division loop  	//  	for (int j = m - n; j >= 0; j--) {  		ulong rr' qq;  		int i;  		rr = _BASE * un [j + n] + un [j + n - 1];  		qq = rr / vn [n - 1];  		rr -= qq * vn [n - 1];  		for (; ;) {  			// Estimate too big ?  			//  			if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  				qq--;  				rr += (ulong)vn [n - 1];  				if (rr < _BASE)  					continue;  			}  			break;  		}  		// Multiply and subtract  		//  		long b = 0;  		long t = 0;  		for (i = 0; i < n; i++) {  			ulong p = vn [i] * qq;  			t = (long)un [i + j] - (long)(uint)p - b;  			un [i + j] = (uint)t;  			p >>= 32;  			t >>= 32;  			b = (long)p - t;  		}  		t = (long)un [j + n] - b;  		un [j + n] = (uint)t;  		// Store the calculated value  		//  		q [j] = (uint)qq;  		// Add back vn[0..n] to un[j..j+n]  		//  		if (t < 0) {  			q [j]--;  			ulong c = 0;  			for (i = 0; i < n; i++) {  				c = (ulong)vn [i] + un [j + i] + c;  				un [j + i] = (uint)c;  				c >>= 32;  			}  			c += (ulong)un [j + n];  			un [j + n] = (uint)c;  		}  	}  	Unnormalize (un' out r' shift);  }  else {  	q = new uint[] {  		0  	};  	r = u;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: if (m >= n) {  	int shift = GetNormalizeShift (v [n - 1]);  	uint[] un = new uint[m + 1];  	uint[] vn = new uint[n];  	Normalize (u' m' un' shift);  	Normalize (v' n' vn' shift);  	q = new uint[m - n + 1];  	r = null;  	// Main division loop  	//  	for (int j = m - n; j >= 0; j--) {  		ulong rr' qq;  		int i;  		rr = _BASE * un [j + n] + un [j + n - 1];  		qq = rr / vn [n - 1];  		rr -= qq * vn [n - 1];  		for (; ;) {  			// Estimate too big ?  			//  			if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  				qq--;  				rr += (ulong)vn [n - 1];  				if (rr < _BASE)  					continue;  			}  			break;  		}  		// Multiply and subtract  		//  		long b = 0;  		long t = 0;  		for (i = 0; i < n; i++) {  			ulong p = vn [i] * qq;  			t = (long)un [i + j] - (long)(uint)p - b;  			un [i + j] = (uint)t;  			p >>= 32;  			t >>= 32;  			b = (long)p - t;  		}  		t = (long)un [j + n] - b;  		un [j + n] = (uint)t;  		// Store the calculated value  		//  		q [j] = (uint)qq;  		// Add back vn[0..n] to un[j..j+n]  		//  		if (t < 0) {  			q [j]--;  			ulong c = 0;  			for (i = 0; i < n; i++) {  				c = (ulong)vn [i] + un [j + i] + c;  				un [j + i] = (uint)c;  				c >>= 32;  			}  			c += (ulong)un [j + n];  			un [j + n] = (uint)c;  		}  	}  	Unnormalize (un' out r' shift);  }  else {  	q = new uint[] {  		0  	};  	r = u;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: if (m >= n) {  	int shift = GetNormalizeShift (v [n - 1]);  	uint[] un = new uint[m + 1];  	uint[] vn = new uint[n];  	Normalize (u' m' un' shift);  	Normalize (v' n' vn' shift);  	q = new uint[m - n + 1];  	r = null;  	// Main division loop  	//  	for (int j = m - n; j >= 0; j--) {  		ulong rr' qq;  		int i;  		rr = _BASE * un [j + n] + un [j + n - 1];  		qq = rr / vn [n - 1];  		rr -= qq * vn [n - 1];  		for (; ;) {  			// Estimate too big ?  			//  			if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  				qq--;  				rr += (ulong)vn [n - 1];  				if (rr < _BASE)  					continue;  			}  			break;  		}  		// Multiply and subtract  		//  		long b = 0;  		long t = 0;  		for (i = 0; i < n; i++) {  			ulong p = vn [i] * qq;  			t = (long)un [i + j] - (long)(uint)p - b;  			un [i + j] = (uint)t;  			p >>= 32;  			t >>= 32;  			b = (long)p - t;  		}  		t = (long)un [j + n] - b;  		un [j + n] = (uint)t;  		// Store the calculated value  		//  		q [j] = (uint)qq;  		// Add back vn[0..n] to un[j..j+n]  		//  		if (t < 0) {  			q [j]--;  			ulong c = 0;  			for (i = 0; i < n; i++) {  				c = (ulong)vn [i] + un [j + i] + c;  				un [j + i] = (uint)c;  				c >>= 32;  			}  			c += (ulong)un [j + n];  			un [j + n] = (uint)c;  		}  	}  	Unnormalize (un' out r' shift);  }  else {  	q = new uint[] {  		0  	};  	r = u;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: if (m >= n) {  	int shift = GetNormalizeShift (v [n - 1]);  	uint[] un = new uint[m + 1];  	uint[] vn = new uint[n];  	Normalize (u' m' un' shift);  	Normalize (v' n' vn' shift);  	q = new uint[m - n + 1];  	r = null;  	// Main division loop  	//  	for (int j = m - n; j >= 0; j--) {  		ulong rr' qq;  		int i;  		rr = _BASE * un [j + n] + un [j + n - 1];  		qq = rr / vn [n - 1];  		rr -= qq * vn [n - 1];  		for (; ;) {  			// Estimate too big ?  			//  			if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  				qq--;  				rr += (ulong)vn [n - 1];  				if (rr < _BASE)  					continue;  			}  			break;  		}  		// Multiply and subtract  		//  		long b = 0;  		long t = 0;  		for (i = 0; i < n; i++) {  			ulong p = vn [i] * qq;  			t = (long)un [i + j] - (long)(uint)p - b;  			un [i + j] = (uint)t;  			p >>= 32;  			t >>= 32;  			b = (long)p - t;  		}  		t = (long)un [j + n] - b;  		un [j + n] = (uint)t;  		// Store the calculated value  		//  		q [j] = (uint)qq;  		// Add back vn[0..n] to un[j..j+n]  		//  		if (t < 0) {  			q [j]--;  			ulong c = 0;  			for (i = 0; i < n; i++) {  				c = (ulong)vn [i] + un [j + i] + c;  				un [j + i] = (uint)c;  				c >>= 32;  			}  			c += (ulong)un [j + n];  			un [j + n] = (uint)c;  		}  	}  	Unnormalize (un' out r' shift);  }  else {  	q = new uint[] {  		0  	};  	r = u;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: if (m >= n) {  	int shift = GetNormalizeShift (v [n - 1]);  	uint[] un = new uint[m + 1];  	uint[] vn = new uint[n];  	Normalize (u' m' un' shift);  	Normalize (v' n' vn' shift);  	q = new uint[m - n + 1];  	r = null;  	// Main division loop  	//  	for (int j = m - n; j >= 0; j--) {  		ulong rr' qq;  		int i;  		rr = _BASE * un [j + n] + un [j + n - 1];  		qq = rr / vn [n - 1];  		rr -= qq * vn [n - 1];  		for (; ;) {  			// Estimate too big ?  			//  			if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  				qq--;  				rr += (ulong)vn [n - 1];  				if (rr < _BASE)  					continue;  			}  			break;  		}  		// Multiply and subtract  		//  		long b = 0;  		long t = 0;  		for (i = 0; i < n; i++) {  			ulong p = vn [i] * qq;  			t = (long)un [i + j] - (long)(uint)p - b;  			un [i + j] = (uint)t;  			p >>= 32;  			t >>= 32;  			b = (long)p - t;  		}  		t = (long)un [j + n] - b;  		un [j + n] = (uint)t;  		// Store the calculated value  		//  		q [j] = (uint)qq;  		// Add back vn[0..n] to un[j..j+n]  		//  		if (t < 0) {  			q [j]--;  			ulong c = 0;  			for (i = 0; i < n; i++) {  				c = (ulong)vn [i] + un [j + i] + c;  				un [j + i] = (uint)c;  				c >>= 32;  			}  			c += (ulong)un [j + n];  			un [j + n] = (uint)c;  		}  	}  	Unnormalize (un' out r' shift);  }  else {  	q = new uint[] {  		0  	};  	r = u;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: if (m >= n) {  	int shift = GetNormalizeShift (v [n - 1]);  	uint[] un = new uint[m + 1];  	uint[] vn = new uint[n];  	Normalize (u' m' un' shift);  	Normalize (v' n' vn' shift);  	q = new uint[m - n + 1];  	r = null;  	// Main division loop  	//  	for (int j = m - n; j >= 0; j--) {  		ulong rr' qq;  		int i;  		rr = _BASE * un [j + n] + un [j + n - 1];  		qq = rr / vn [n - 1];  		rr -= qq * vn [n - 1];  		for (; ;) {  			// Estimate too big ?  			//  			if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  				qq--;  				rr += (ulong)vn [n - 1];  				if (rr < _BASE)  					continue;  			}  			break;  		}  		// Multiply and subtract  		//  		long b = 0;  		long t = 0;  		for (i = 0; i < n; i++) {  			ulong p = vn [i] * qq;  			t = (long)un [i + j] - (long)(uint)p - b;  			un [i + j] = (uint)t;  			p >>= 32;  			t >>= 32;  			b = (long)p - t;  		}  		t = (long)un [j + n] - b;  		un [j + n] = (uint)t;  		// Store the calculated value  		//  		q [j] = (uint)qq;  		// Add back vn[0..n] to un[j..j+n]  		//  		if (t < 0) {  			q [j]--;  			ulong c = 0;  			for (i = 0; i < n; i++) {  				c = (ulong)vn [i] + un [j + i] + c;  				un [j + i] = (uint)c;  				c >>= 32;  			}  			c += (ulong)un [j + n];  			un [j + n] = (uint)c;  		}  	}  	Unnormalize (un' out r' shift);  }  else {  	q = new uint[] {  		0  	};  	r = u;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: for (int j = m - n; j >= 0; j--) {  	ulong rr' qq;  	int i;  	rr = _BASE * un [j + n] + un [j + n - 1];  	qq = rr / vn [n - 1];  	rr -= qq * vn [n - 1];  	for (; ;) {  		// Estimate too big ?  		//  		if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  			qq--;  			rr += (ulong)vn [n - 1];  			if (rr < _BASE)  				continue;  		}  		break;  	}  	// Multiply and subtract  	//  	long b = 0;  	long t = 0;  	for (i = 0; i < n; i++) {  		ulong p = vn [i] * qq;  		t = (long)un [i + j] - (long)(uint)p - b;  		un [i + j] = (uint)t;  		p >>= 32;  		t >>= 32;  		b = (long)p - t;  	}  	t = (long)un [j + n] - b;  	un [j + n] = (uint)t;  	// Store the calculated value  	//  	q [j] = (uint)qq;  	// Add back vn[0..n] to un[j..j+n]  	//  	if (t < 0) {  		q [j]--;  		ulong c = 0;  		for (i = 0; i < n; i++) {  			c = (ulong)vn [i] + un [j + i] + c;  			un [j + i] = (uint)c;  			c >>= 32;  		}  		c += (ulong)un [j + n];  		un [j + n] = (uint)c;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: for (int j = m - n; j >= 0; j--) {  	ulong rr' qq;  	int i;  	rr = _BASE * un [j + n] + un [j + n - 1];  	qq = rr / vn [n - 1];  	rr -= qq * vn [n - 1];  	for (; ;) {  		// Estimate too big ?  		//  		if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  			qq--;  			rr += (ulong)vn [n - 1];  			if (rr < _BASE)  				continue;  		}  		break;  	}  	// Multiply and subtract  	//  	long b = 0;  	long t = 0;  	for (i = 0; i < n; i++) {  		ulong p = vn [i] * qq;  		t = (long)un [i + j] - (long)(uint)p - b;  		un [i + j] = (uint)t;  		p >>= 32;  		t >>= 32;  		b = (long)p - t;  	}  	t = (long)un [j + n] - b;  	un [j + n] = (uint)t;  	// Store the calculated value  	//  	q [j] = (uint)qq;  	// Add back vn[0..n] to un[j..j+n]  	//  	if (t < 0) {  		q [j]--;  		ulong c = 0;  		for (i = 0; i < n; i++) {  			c = (ulong)vn [i] + un [j + i] + c;  			un [j + i] = (uint)c;  			c >>= 32;  		}  		c += (ulong)un [j + n];  		un [j + n] = (uint)c;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: for (int j = m - n; j >= 0; j--) {  	ulong rr' qq;  	int i;  	rr = _BASE * un [j + n] + un [j + n - 1];  	qq = rr / vn [n - 1];  	rr -= qq * vn [n - 1];  	for (; ;) {  		// Estimate too big ?  		//  		if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  			qq--;  			rr += (ulong)vn [n - 1];  			if (rr < _BASE)  				continue;  		}  		break;  	}  	// Multiply and subtract  	//  	long b = 0;  	long t = 0;  	for (i = 0; i < n; i++) {  		ulong p = vn [i] * qq;  		t = (long)un [i + j] - (long)(uint)p - b;  		un [i + j] = (uint)t;  		p >>= 32;  		t >>= 32;  		b = (long)p - t;  	}  	t = (long)un [j + n] - b;  	un [j + n] = (uint)t;  	// Store the calculated value  	//  	q [j] = (uint)qq;  	// Add back vn[0..n] to un[j..j+n]  	//  	if (t < 0) {  		q [j]--;  		ulong c = 0;  		for (i = 0; i < n; i++) {  			c = (ulong)vn [i] + un [j + i] + c;  			un [j + i] = (uint)c;  			c >>= 32;  		}  		c += (ulong)un [j + n];  		un [j + n] = (uint)c;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: for (int j = m - n; j >= 0; j--) {  	ulong rr' qq;  	int i;  	rr = _BASE * un [j + n] + un [j + n - 1];  	qq = rr / vn [n - 1];  	rr -= qq * vn [n - 1];  	for (; ;) {  		// Estimate too big ?  		//  		if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  			qq--;  			rr += (ulong)vn [n - 1];  			if (rr < _BASE)  				continue;  		}  		break;  	}  	// Multiply and subtract  	//  	long b = 0;  	long t = 0;  	for (i = 0; i < n; i++) {  		ulong p = vn [i] * qq;  		t = (long)un [i + j] - (long)(uint)p - b;  		un [i + j] = (uint)t;  		p >>= 32;  		t >>= 32;  		b = (long)p - t;  	}  	t = (long)un [j + n] - b;  	un [j + n] = (uint)t;  	// Store the calculated value  	//  	q [j] = (uint)qq;  	// Add back vn[0..n] to un[j..j+n]  	//  	if (t < 0) {  		q [j]--;  		ulong c = 0;  		for (i = 0; i < n; i++) {  			c = (ulong)vn [i] + un [j + i] + c;  			un [j + i] = (uint)c;  			c >>= 32;  		}  		c += (ulong)un [j + n];  		un [j + n] = (uint)c;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: for (int j = m - n; j >= 0; j--) {  	ulong rr' qq;  	int i;  	rr = _BASE * un [j + n] + un [j + n - 1];  	qq = rr / vn [n - 1];  	rr -= qq * vn [n - 1];  	for (; ;) {  		// Estimate too big ?  		//  		if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  			qq--;  			rr += (ulong)vn [n - 1];  			if (rr < _BASE)  				continue;  		}  		break;  	}  	// Multiply and subtract  	//  	long b = 0;  	long t = 0;  	for (i = 0; i < n; i++) {  		ulong p = vn [i] * qq;  		t = (long)un [i + j] - (long)(uint)p - b;  		un [i + j] = (uint)t;  		p >>= 32;  		t >>= 32;  		b = (long)p - t;  	}  	t = (long)un [j + n] - b;  	un [j + n] = (uint)t;  	// Store the calculated value  	//  	q [j] = (uint)qq;  	// Add back vn[0..n] to un[j..j+n]  	//  	if (t < 0) {  		q [j]--;  		ulong c = 0;  		for (i = 0; i < n; i++) {  			c = (ulong)vn [i] + un [j + i] + c;  			un [j + i] = (uint)c;  			c >>= 32;  		}  		c += (ulong)un [j + n];  		un [j + n] = (uint)c;  	}  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: for (; ;) {  	// Estimate too big ?  	//  	if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  		qq--;  		rr += (ulong)vn [n - 1];  		if (rr < _BASE)  			continue;  	}  	break;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: for (; ;) {  	// Estimate too big ?  	//  	if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  		qq--;  		rr += (ulong)vn [n - 1];  		if (rr < _BASE)  			continue;  	}  	break;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  	qq--;  	rr += (ulong)vn [n - 1];  	if (rr < _BASE)  		continue;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: if ((qq >= _BASE) || (qq * vn [n - 2] > (rr * _BASE + un [j + n - 2]))) {  	qq--;  	rr += (ulong)vn [n - 1];  	if (rr < _BASE)  		continue;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: for (i = 0; i < n; i++) {  	ulong p = vn [i] * qq;  	t = (long)un [i + j] - (long)(uint)p - b;  	un [i + j] = (uint)t;  	p >>= 32;  	t >>= 32;  	b = (long)p - t;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: for (i = 0; i < n; i++) {  	ulong p = vn [i] * qq;  	t = (long)un [i + j] - (long)(uint)p - b;  	un [i + j] = (uint)t;  	p >>= 32;  	t >>= 32;  	b = (long)p - t;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: p >>= 32;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: t >>= 32;  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: if (t < 0) {  	q [j]--;  	ulong c = 0;  	for (i = 0; i < n; i++) {  		c = (ulong)vn [i] + un [j + i] + c;  		un [j + i] = (uint)c;  		c >>= 32;  	}  	c += (ulong)un [j + n];  	un [j + n] = (uint)c;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: for (i = 0; i < n; i++) {  	c = (ulong)vn [i] + un [j + i] + c;  	un [j + i] = (uint)c;  	c >>= 32;  }  
Magic Number,Renci.SshNet.Common,BigInteger,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\BigInteger.cs,DivModUnsigned,The following statement contains a magic number: c >>= 32;  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,ReadInteger,The following statement contains a magic number: if (length > 4)  	throw new InvalidOperationException ("Integer type cannot occupy more then 4 bytes");  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,ReadInteger,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	result |= data [i] << shift;  	shift -= 8;  }  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,ReadInteger,The following statement contains a magic number: shift -= 8;  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,Write,The following statement contains a magic number: temp [0] = identifier.Identifiers [0] * 40 + identifier.Identifiers [1];  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,Write,The following statement contains a magic number: Buffer.BlockCopy (identifier.Identifiers' 2 * sizeof(ulong)' temp' 1 * sizeof(ulong)' (identifier.Identifiers.Length - 2) * sizeof(ulong));  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,Write,The following statement contains a magic number: Buffer.BlockCopy (identifier.Identifiers' 2 * sizeof(ulong)' temp' 1 * sizeof(ulong)' (identifier.Identifiers.Length - 2) * sizeof(ulong));  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,Write,The following statement contains a magic number: foreach (var subidentifier in temp) {  	var item = subidentifier;  	var buffer = new byte[8];  	var bufferIndex = buffer.Length - 1;  	var current = (byte)(item & 0x7F);  	do {  		buffer [bufferIndex] = current;  		if (bufferIndex < buffer.Length - 1)  			buffer [bufferIndex] |= (byte)0x80;  		item >>= 7;  		current = (byte)(item & 0x7F);  		bufferIndex--;  	}  	while (current > 0);  	for (int i = bufferIndex + 1; i < buffer.Length; i++) {  		bytes.Add (buffer [i]);  	}  }  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,Write,The following statement contains a magic number: foreach (var subidentifier in temp) {  	var item = subidentifier;  	var buffer = new byte[8];  	var bufferIndex = buffer.Length - 1;  	var current = (byte)(item & 0x7F);  	do {  		buffer [bufferIndex] = current;  		if (bufferIndex < buffer.Length - 1)  			buffer [bufferIndex] |= (byte)0x80;  		item >>= 7;  		current = (byte)(item & 0x7F);  		bufferIndex--;  	}  	while (current > 0);  	for (int i = bufferIndex + 1; i < buffer.Length; i++) {  		bytes.Add (buffer [i]);  	}  }  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,Write,The following statement contains a magic number: do {  	buffer [bufferIndex] = current;  	if (bufferIndex < buffer.Length - 1)  		buffer [bufferIndex] |= (byte)0x80;  	item >>= 7;  	current = (byte)(item & 0x7F);  	bufferIndex--;  }  while (current > 0);  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,Write,The following statement contains a magic number: item >>= 7;  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,GetLength,The following statement contains a magic number: if (length > 127) {  	int size = 1;  	int val = length;  	while ((val >>= 8) != 0)  		size++;  	var data = new byte[size];  	data [0] = (byte)(size | 0x80);  	for (int i = (size - 1) * 8' j = 1; i >= 0; i -= 8' j++) {  		data [j] = (byte)(length >> i);  	}  	return data;  }  else {  	return new byte[] {  		(byte)length  	};  }  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,GetLength,The following statement contains a magic number: if (length > 127) {  	int size = 1;  	int val = length;  	while ((val >>= 8) != 0)  		size++;  	var data = new byte[size];  	data [0] = (byte)(size | 0x80);  	for (int i = (size - 1) * 8' j = 1; i >= 0; i -= 8' j++) {  		data [j] = (byte)(length >> i);  	}  	return data;  }  else {  	return new byte[] {  		(byte)length  	};  }  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,GetLength,The following statement contains a magic number: if (length > 127) {  	int size = 1;  	int val = length;  	while ((val >>= 8) != 0)  		size++;  	var data = new byte[size];  	data [0] = (byte)(size | 0x80);  	for (int i = (size - 1) * 8' j = 1; i >= 0; i -= 8' j++) {  		data [j] = (byte)(length >> i);  	}  	return data;  }  else {  	return new byte[] {  		(byte)length  	};  }  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,GetLength,The following statement contains a magic number: if (length > 127) {  	int size = 1;  	int val = length;  	while ((val >>= 8) != 0)  		size++;  	var data = new byte[size];  	data [0] = (byte)(size | 0x80);  	for (int i = (size - 1) * 8' j = 1; i >= 0; i -= 8' j++) {  		data [j] = (byte)(length >> i);  	}  	return data;  }  else {  	return new byte[] {  		(byte)length  	};  }  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,GetLength,The following statement contains a magic number: while ((val >>= 8) != 0)  	size++;  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,GetLength,The following statement contains a magic number: for (int i = (size - 1) * 8' j = 1; i >= 0; i -= 8' j++) {  	data [j] = (byte)(length >> i);  }  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,GetLength,The following statement contains a magic number: for (int i = (size - 1) * 8' j = 1; i >= 0; i -= 8' j++) {  	data [j] = (byte)(length >> i);  }  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,GetLength,The following statement contains a magic number: i -= 8
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,ReadLength,The following statement contains a magic number: if (length > 127) {  	int size = length & 0x7f;  	// Note: The invalid long form "0xff" (see X.690 8.1.3.5c) will be caught here  	if (size > 4)  		throw new InvalidOperationException (string.Format ("DER length is '{0}' and cannot be more than 4 bytes."' size));  	length = 0;  	for (int i = 0; i < size; i++) {  		int next = this.ReadByte ();  		length = (length << 8) + next;  	}  	if (length < 0)  		throw new InvalidOperationException ("Corrupted data - negative length found");  	//if (length >= limit)   // after all we must have read at least 1 byte  	//    throw new IOException("Corrupted stream - out of bounds length found");  }  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,ReadLength,The following statement contains a magic number: if (length > 127) {  	int size = length & 0x7f;  	// Note: The invalid long form "0xff" (see X.690 8.1.3.5c) will be caught here  	if (size > 4)  		throw new InvalidOperationException (string.Format ("DER length is '{0}' and cannot be more than 4 bytes."' size));  	length = 0;  	for (int i = 0; i < size; i++) {  		int next = this.ReadByte ();  		length = (length << 8) + next;  	}  	if (length < 0)  		throw new InvalidOperationException ("Corrupted data - negative length found");  	//if (length >= limit)   // after all we must have read at least 1 byte  	//    throw new IOException("Corrupted stream - out of bounds length found");  }  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,ReadLength,The following statement contains a magic number: if (length > 127) {  	int size = length & 0x7f;  	// Note: The invalid long form "0xff" (see X.690 8.1.3.5c) will be caught here  	if (size > 4)  		throw new InvalidOperationException (string.Format ("DER length is '{0}' and cannot be more than 4 bytes."' size));  	length = 0;  	for (int i = 0; i < size; i++) {  		int next = this.ReadByte ();  		length = (length << 8) + next;  	}  	if (length < 0)  		throw new InvalidOperationException ("Corrupted data - negative length found");  	//if (length >= limit)   // after all we must have read at least 1 byte  	//    throw new IOException("Corrupted stream - out of bounds length found");  }  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,ReadLength,The following statement contains a magic number: if (size > 4)  	throw new InvalidOperationException (string.Format ("DER length is '{0}' and cannot be more than 4 bytes."' size));  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,ReadLength,The following statement contains a magic number: for (int i = 0; i < size; i++) {  	int next = this.ReadByte ();  	length = (length << 8) + next;  }  
Magic Number,Renci.SshNet.Common,DerData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\DerData.cs,ReadLength,The following statement contains a magic number: length = (length << 8) + next;  
Magic Number,Renci.SshNet.Common,ObjectIdentifier,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\ObjectIdentifier.cs,ObjectIdentifier,The following statement contains a magic number: if (identifiers.Length < 2)  	throw new ArgumentException ("identifiers");  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt16,The following statement contains a magic number: return (ushort)(data [0] << 8 | data [1]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt32,The following statement contains a magic number: return (uint)(data [0] << 24 | data [1] << 16 | data [2] << 8 | data [3]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt32,The following statement contains a magic number: return (uint)(data [0] << 24 | data [1] << 16 | data [2] << 8 | data [3]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt32,The following statement contains a magic number: return (uint)(data [0] << 24 | data [1] << 16 | data [2] << 8 | data [3]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt32,The following statement contains a magic number: return (uint)(data [0] << 24 | data [1] << 16 | data [2] << 8 | data [3]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt32,The following statement contains a magic number: return (uint)(data [0] << 24 | data [1] << 16 | data [2] << 8 | data [3]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt64,The following statement contains a magic number: return ((ulong)data [0] << 56 | (ulong)data [1] << 48 | (ulong)data [2] << 40 | (ulong)data [3] << 32 | (ulong)data [4] << 24 | (ulong)data [5] << 16 | (ulong)data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt64,The following statement contains a magic number: return ((ulong)data [0] << 56 | (ulong)data [1] << 48 | (ulong)data [2] << 40 | (ulong)data [3] << 32 | (ulong)data [4] << 24 | (ulong)data [5] << 16 | (ulong)data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt64,The following statement contains a magic number: return ((ulong)data [0] << 56 | (ulong)data [1] << 48 | (ulong)data [2] << 40 | (ulong)data [3] << 32 | (ulong)data [4] << 24 | (ulong)data [5] << 16 | (ulong)data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt64,The following statement contains a magic number: return ((ulong)data [0] << 56 | (ulong)data [1] << 48 | (ulong)data [2] << 40 | (ulong)data [3] << 32 | (ulong)data [4] << 24 | (ulong)data [5] << 16 | (ulong)data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt64,The following statement contains a magic number: return ((ulong)data [0] << 56 | (ulong)data [1] << 48 | (ulong)data [2] << 40 | (ulong)data [3] << 32 | (ulong)data [4] << 24 | (ulong)data [5] << 16 | (ulong)data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt64,The following statement contains a magic number: return ((ulong)data [0] << 56 | (ulong)data [1] << 48 | (ulong)data [2] << 40 | (ulong)data [3] << 32 | (ulong)data [4] << 24 | (ulong)data [5] << 16 | (ulong)data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt64,The following statement contains a magic number: return ((ulong)data [0] << 56 | (ulong)data [1] << 48 | (ulong)data [2] << 40 | (ulong)data [3] << 32 | (ulong)data [4] << 24 | (ulong)data [5] << 16 | (ulong)data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt64,The following statement contains a magic number: return ((ulong)data [0] << 56 | (ulong)data [1] << 48 | (ulong)data [2] << 40 | (ulong)data [3] << 32 | (ulong)data [4] << 24 | (ulong)data [5] << 16 | (ulong)data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt64,The following statement contains a magic number: return ((ulong)data [0] << 56 | (ulong)data [1] << 48 | (ulong)data [2] << 40 | (ulong)data [3] << 32 | (ulong)data [4] << 24 | (ulong)data [5] << 16 | (ulong)data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt64,The following statement contains a magic number: return ((ulong)data [0] << 56 | (ulong)data [1] << 48 | (ulong)data [2] << 40 | (ulong)data [3] << 32 | (ulong)data [4] << 24 | (ulong)data [5] << 16 | (ulong)data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt64,The following statement contains a magic number: return ((ulong)data [0] << 56 | (ulong)data [1] << 48 | (ulong)data [2] << 40 | (ulong)data [3] << 32 | (ulong)data [4] << 24 | (ulong)data [5] << 16 | (ulong)data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt64,The following statement contains a magic number: return ((ulong)data [0] << 56 | (ulong)data [1] << 48 | (ulong)data [2] << 40 | (ulong)data [3] << 32 | (ulong)data [4] << 24 | (ulong)data [5] << 16 | (ulong)data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadUInt64,The following statement contains a magic number: return ((ulong)data [0] << 56 | (ulong)data [1] << 48 | (ulong)data [2] << 40 | (ulong)data [3] << 32 | (ulong)data [4] << 24 | (ulong)data [5] << 16 | (ulong)data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadInt64,The following statement contains a magic number: return (int)(data [0] << 56 | data [1] << 48 | data [2] << 40 | data [3] << 32 | data [4] << 24 | data [5] << 16 | data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadInt64,The following statement contains a magic number: return (int)(data [0] << 56 | data [1] << 48 | data [2] << 40 | data [3] << 32 | data [4] << 24 | data [5] << 16 | data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadInt64,The following statement contains a magic number: return (int)(data [0] << 56 | data [1] << 48 | data [2] << 40 | data [3] << 32 | data [4] << 24 | data [5] << 16 | data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadInt64,The following statement contains a magic number: return (int)(data [0] << 56 | data [1] << 48 | data [2] << 40 | data [3] << 32 | data [4] << 24 | data [5] << 16 | data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadInt64,The following statement contains a magic number: return (int)(data [0] << 56 | data [1] << 48 | data [2] << 40 | data [3] << 32 | data [4] << 24 | data [5] << 16 | data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadInt64,The following statement contains a magic number: return (int)(data [0] << 56 | data [1] << 48 | data [2] << 40 | data [3] << 32 | data [4] << 24 | data [5] << 16 | data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadInt64,The following statement contains a magic number: return (int)(data [0] << 56 | data [1] << 48 | data [2] << 40 | data [3] << 32 | data [4] << 24 | data [5] << 16 | data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadInt64,The following statement contains a magic number: return (int)(data [0] << 56 | data [1] << 48 | data [2] << 40 | data [3] << 32 | data [4] << 24 | data [5] << 16 | data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadInt64,The following statement contains a magic number: return (int)(data [0] << 56 | data [1] << 48 | data [2] << 40 | data [3] << 32 | data [4] << 24 | data [5] << 16 | data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadInt64,The following statement contains a magic number: return (int)(data [0] << 56 | data [1] << 48 | data [2] << 40 | data [3] << 32 | data [4] << 24 | data [5] << 16 | data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadInt64,The following statement contains a magic number: return (int)(data [0] << 56 | data [1] << 48 | data [2] << 40 | data [3] << 32 | data [4] << 24 | data [5] << 16 | data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadInt64,The following statement contains a magic number: return (int)(data [0] << 56 | data [1] << 48 | data [2] << 40 | data [3] << 32 | data [4] << 24 | data [5] << 16 | data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Common,SshData,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Common\SshData.cs,ReadInt64,The following statement contains a magic number: return (int)(data [0] << 56 | data [1] << 48 | data [2] << 40 | data [3] << 32 | data [4] << 24 | data [5] << 16 | data [6] << 8 | data [7]);  
Magic Number,Renci.SshNet.Messages.Transport,KeyExchangeInitMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Transport\KeyExchangeInitMessage.cs,LoadData,The following statement contains a magic number: this.Cookie = this.ReadBytes (16);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,HashFinal,The following statement contains a magic number: this.Update ((byte)128);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,HashFinal,The following statement contains a magic number: UnpackWord (H1' output' 4);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,HashFinal,The following statement contains a magic number: UnpackWord (H2' output' 8);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,HashFinal,The following statement contains a magic number: UnpackWord (H3' output' 12);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,HashFinal,The following statement contains a magic number: UnpackWord (H4' output' 16);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,RIPEMD160Hash,The following statement contains a magic number: this._buffer = new byte[4];  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessWord,The following statement contains a magic number: this.X [this._offset++] = (input [inOff] & 0xff) | ((input [inOff + 1] & 0xff) << 8) | ((input [inOff + 2] & 0xff) << 16) | ((input [inOff + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessWord,The following statement contains a magic number: this.X [this._offset++] = (input [inOff] & 0xff) | ((input [inOff + 1] & 0xff) << 8) | ((input [inOff + 2] & 0xff) << 16) | ((input [inOff + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessWord,The following statement contains a magic number: this.X [this._offset++] = (input [inOff] & 0xff) | ((input [inOff + 1] & 0xff) << 8) | ((input [inOff + 2] & 0xff) << 16) | ((input [inOff + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessWord,The following statement contains a magic number: this.X [this._offset++] = (input [inOff] & 0xff) | ((input [inOff + 1] & 0xff) << 8) | ((input [inOff + 2] & 0xff) << 16) | ((input [inOff + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessWord,The following statement contains a magic number: this.X [this._offset++] = (input [inOff] & 0xff) | ((input [inOff + 1] & 0xff) << 8) | ((input [inOff + 2] & 0xff) << 16) | ((input [inOff + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessWord,The following statement contains a magic number: if (this._offset == 16) {  	ProcessBlock ();  }  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessLength,The following statement contains a magic number: if (this._offset > 14) {  	ProcessBlock ();  }  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessLength,The following statement contains a magic number: this.X [14] = (int)(bitLength & 0xffffffff);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessLength,The following statement contains a magic number: this.X [15] = (int)((ulong)bitLength >> 32);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessLength,The following statement contains a magic number: this.X [15] = (int)((ulong)bitLength >> 32);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,UnpackWord,The following statement contains a magic number: outBytes [outOff + 1] = (byte)((uint)word >> 8);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,UnpackWord,The following statement contains a magic number: outBytes [outOff + 2] = (byte)((uint)word >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,UnpackWord,The following statement contains a magic number: outBytes [outOff + 2] = (byte)((uint)word >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,UnpackWord,The following statement contains a magic number: outBytes [outOff + 3] = (byte)((uint)word >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,UnpackWord,The following statement contains a magic number: outBytes [outOff + 3] = (byte)((uint)word >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,RL,The following statement contains a magic number: return (x << n) | (int)((uint)x >> (32 - n));  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F1 (b' c' d) + this.X [0]' 11) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F1 (a' b' c) + this.X [1]' 14) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F1 (e' a' b) + this.X [2]' 15) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F1 (e' a' b) + this.X [2]' 15) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F1 (d' e' a) + this.X [3]' 12) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F1 (d' e' a) + this.X [3]' 12) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F1 (c' d' e) + this.X [4]' 5) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F1 (c' d' e) + this.X [4]' 5) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F1 (b' c' d) + this.X [5]' 8) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F1 (b' c' d) + this.X [5]' 8) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F1 (a' b' c) + this.X [6]' 7) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F1 (a' b' c) + this.X [6]' 7) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F1 (e' a' b) + this.X [7]' 9) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F1 (e' a' b) + this.X [7]' 9) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F1 (d' e' a) + this.X [8]' 11) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F1 (d' e' a) + this.X [8]' 11) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F1 (c' d' e) + this.X [9]' 13) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F1 (c' d' e) + this.X [9]' 13) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F1 (b' c' d) + this.X [10]' 14) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F1 (b' c' d) + this.X [10]' 14) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F1 (a' b' c) + this.X [11]' 15) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F1 (a' b' c) + this.X [11]' 15) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F1 (e' a' b) + this.X [12]' 6) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F1 (e' a' b) + this.X [12]' 6) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F1 (d' e' a) + this.X [13]' 7) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F1 (d' e' a) + this.X [13]' 7) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F1 (c' d' e) + this.X [14]' 9) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F1 (c' d' e) + this.X [14]' 9) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F1 (b' c' d) + this.X [15]' 8) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F1 (b' c' d) + this.X [15]' 8) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F5 (bb' cc' dd) + this.X [5] + unchecked((int)0x50a28be6)' 8) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F5 (bb' cc' dd) + this.X [5] + unchecked((int)0x50a28be6)' 8) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F5 (aa' bb' cc) + this.X [14] + unchecked((int)0x50a28be6)' 9) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F5 (aa' bb' cc) + this.X [14] + unchecked((int)0x50a28be6)' 9) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F5 (ee' aa' bb) + this.X [7] + unchecked((int)0x50a28be6)' 9) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F5 (ee' aa' bb) + this.X [7] + unchecked((int)0x50a28be6)' 9) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F5 (dd' ee' aa) + this.X [0] + unchecked((int)0x50a28be6)' 11) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F5 (cc' dd' ee) + this.X [9] + unchecked((int)0x50a28be6)' 13) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F5 (cc' dd' ee) + this.X [9] + unchecked((int)0x50a28be6)' 13) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F5 (bb' cc' dd) + this.X [2] + unchecked((int)0x50a28be6)' 15) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F5 (bb' cc' dd) + this.X [2] + unchecked((int)0x50a28be6)' 15) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F5 (aa' bb' cc) + this.X [11] + unchecked((int)0x50a28be6)' 15) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F5 (aa' bb' cc) + this.X [11] + unchecked((int)0x50a28be6)' 15) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F5 (ee' aa' bb) + this.X [4] + unchecked((int)0x50a28be6)' 5) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F5 (ee' aa' bb) + this.X [4] + unchecked((int)0x50a28be6)' 5) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F5 (dd' ee' aa) + this.X [13] + unchecked((int)0x50a28be6)' 7) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F5 (dd' ee' aa) + this.X [13] + unchecked((int)0x50a28be6)' 7) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F5 (cc' dd' ee) + this.X [6] + unchecked((int)0x50a28be6)' 7) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F5 (cc' dd' ee) + this.X [6] + unchecked((int)0x50a28be6)' 7) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F5 (bb' cc' dd) + this.X [15] + unchecked((int)0x50a28be6)' 8) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F5 (bb' cc' dd) + this.X [15] + unchecked((int)0x50a28be6)' 8) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F5 (aa' bb' cc) + this.X [8] + unchecked((int)0x50a28be6)' 11) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F5 (aa' bb' cc) + this.X [8] + unchecked((int)0x50a28be6)' 11) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F5 (ee' aa' bb) + this.X [1] + unchecked((int)0x50a28be6)' 14) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F5 (dd' ee' aa) + this.X [10] + unchecked((int)0x50a28be6)' 14) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F5 (dd' ee' aa) + this.X [10] + unchecked((int)0x50a28be6)' 14) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F5 (cc' dd' ee) + this.X [3] + unchecked((int)0x50a28be6)' 12) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F5 (cc' dd' ee) + this.X [3] + unchecked((int)0x50a28be6)' 12) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F5 (bb' cc' dd) + this.X [12] + unchecked((int)0x50a28be6)' 6) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F5 (bb' cc' dd) + this.X [12] + unchecked((int)0x50a28be6)' 6) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F2 (a' b' c) + this.X [7] + unchecked((int)0x5a827999)' 7) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F2 (a' b' c) + this.X [7] + unchecked((int)0x5a827999)' 7) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F2 (e' a' b) + this.X [4] + unchecked((int)0x5a827999)' 6) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F2 (e' a' b) + this.X [4] + unchecked((int)0x5a827999)' 6) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F2 (d' e' a) + this.X [13] + unchecked((int)0x5a827999)' 8) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F2 (d' e' a) + this.X [13] + unchecked((int)0x5a827999)' 8) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F2 (c' d' e) + this.X [1] + unchecked((int)0x5a827999)' 13) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F2 (b' c' d) + this.X [10] + unchecked((int)0x5a827999)' 11) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F2 (b' c' d) + this.X [10] + unchecked((int)0x5a827999)' 11) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F2 (a' b' c) + this.X [6] + unchecked((int)0x5a827999)' 9) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F2 (a' b' c) + this.X [6] + unchecked((int)0x5a827999)' 9) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F2 (e' a' b) + this.X [15] + unchecked((int)0x5a827999)' 7) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F2 (e' a' b) + this.X [15] + unchecked((int)0x5a827999)' 7) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F2 (d' e' a) + this.X [3] + unchecked((int)0x5a827999)' 15) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F2 (d' e' a) + this.X [3] + unchecked((int)0x5a827999)' 15) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F2 (c' d' e) + this.X [12] + unchecked((int)0x5a827999)' 7) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F2 (c' d' e) + this.X [12] + unchecked((int)0x5a827999)' 7) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F2 (b' c' d) + this.X [0] + unchecked((int)0x5a827999)' 12) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F2 (a' b' c) + this.X [9] + unchecked((int)0x5a827999)' 15) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F2 (a' b' c) + this.X [9] + unchecked((int)0x5a827999)' 15) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F2 (e' a' b) + this.X [5] + unchecked((int)0x5a827999)' 9) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F2 (e' a' b) + this.X [5] + unchecked((int)0x5a827999)' 9) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F2 (d' e' a) + this.X [2] + unchecked((int)0x5a827999)' 11) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F2 (d' e' a) + this.X [2] + unchecked((int)0x5a827999)' 11) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F2 (c' d' e) + this.X [14] + unchecked((int)0x5a827999)' 7) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F2 (c' d' e) + this.X [14] + unchecked((int)0x5a827999)' 7) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F2 (b' c' d) + this.X [11] + unchecked((int)0x5a827999)' 13) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F2 (b' c' d) + this.X [11] + unchecked((int)0x5a827999)' 13) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F2 (a' b' c) + this.X [8] + unchecked((int)0x5a827999)' 12) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F2 (a' b' c) + this.X [8] + unchecked((int)0x5a827999)' 12) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F4 (aa' bb' cc) + this.X [6] + unchecked((int)0x5c4dd124)' 9) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F4 (aa' bb' cc) + this.X [6] + unchecked((int)0x5c4dd124)' 9) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F4 (ee' aa' bb) + this.X [11] + unchecked((int)0x5c4dd124)' 13) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F4 (ee' aa' bb) + this.X [11] + unchecked((int)0x5c4dd124)' 13) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F4 (dd' ee' aa) + this.X [3] + unchecked((int)0x5c4dd124)' 15) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F4 (dd' ee' aa) + this.X [3] + unchecked((int)0x5c4dd124)' 15) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F4 (cc' dd' ee) + this.X [7] + unchecked((int)0x5c4dd124)' 7) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F4 (cc' dd' ee) + this.X [7] + unchecked((int)0x5c4dd124)' 7) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F4 (bb' cc' dd) + this.X [0] + unchecked((int)0x5c4dd124)' 12) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F4 (aa' bb' cc) + this.X [13] + unchecked((int)0x5c4dd124)' 8) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F4 (aa' bb' cc) + this.X [13] + unchecked((int)0x5c4dd124)' 8) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F4 (ee' aa' bb) + this.X [5] + unchecked((int)0x5c4dd124)' 9) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F4 (ee' aa' bb) + this.X [5] + unchecked((int)0x5c4dd124)' 9) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F4 (dd' ee' aa) + this.X [10] + unchecked((int)0x5c4dd124)' 11) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F4 (dd' ee' aa) + this.X [10] + unchecked((int)0x5c4dd124)' 11) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F4 (cc' dd' ee) + this.X [14] + unchecked((int)0x5c4dd124)' 7) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F4 (cc' dd' ee) + this.X [14] + unchecked((int)0x5c4dd124)' 7) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F4 (bb' cc' dd) + this.X [15] + unchecked((int)0x5c4dd124)' 7) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F4 (bb' cc' dd) + this.X [15] + unchecked((int)0x5c4dd124)' 7) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F4 (aa' bb' cc) + this.X [8] + unchecked((int)0x5c4dd124)' 12) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F4 (aa' bb' cc) + this.X [8] + unchecked((int)0x5c4dd124)' 12) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F4 (ee' aa' bb) + this.X [12] + unchecked((int)0x5c4dd124)' 7) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F4 (ee' aa' bb) + this.X [12] + unchecked((int)0x5c4dd124)' 7) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F4 (dd' ee' aa) + this.X [4] + unchecked((int)0x5c4dd124)' 6) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F4 (dd' ee' aa) + this.X [4] + unchecked((int)0x5c4dd124)' 6) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F4 (cc' dd' ee) + this.X [9] + unchecked((int)0x5c4dd124)' 15) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F4 (cc' dd' ee) + this.X [9] + unchecked((int)0x5c4dd124)' 15) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F4 (bb' cc' dd) + this.X [1] + unchecked((int)0x5c4dd124)' 13) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F4 (aa' bb' cc) + this.X [2] + unchecked((int)0x5c4dd124)' 11) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F4 (aa' bb' cc) + this.X [2] + unchecked((int)0x5c4dd124)' 11) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F3 (e' a' b) + this.X [3] + unchecked((int)0x6ed9eba1)' 11) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F3 (e' a' b) + this.X [3] + unchecked((int)0x6ed9eba1)' 11) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F3 (d' e' a) + this.X [10] + unchecked((int)0x6ed9eba1)' 13) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F3 (d' e' a) + this.X [10] + unchecked((int)0x6ed9eba1)' 13) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F3 (c' d' e) + this.X [14] + unchecked((int)0x6ed9eba1)' 6) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F3 (c' d' e) + this.X [14] + unchecked((int)0x6ed9eba1)' 6) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F3 (b' c' d) + this.X [4] + unchecked((int)0x6ed9eba1)' 7) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F3 (b' c' d) + this.X [4] + unchecked((int)0x6ed9eba1)' 7) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F3 (a' b' c) + this.X [9] + unchecked((int)0x6ed9eba1)' 14) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F3 (a' b' c) + this.X [9] + unchecked((int)0x6ed9eba1)' 14) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F3 (e' a' b) + this.X [15] + unchecked((int)0x6ed9eba1)' 9) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F3 (e' a' b) + this.X [15] + unchecked((int)0x6ed9eba1)' 9) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F3 (d' e' a) + this.X [8] + unchecked((int)0x6ed9eba1)' 13) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F3 (d' e' a) + this.X [8] + unchecked((int)0x6ed9eba1)' 13) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F3 (c' d' e) + this.X [1] + unchecked((int)0x6ed9eba1)' 15) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F3 (b' c' d) + this.X [2] + unchecked((int)0x6ed9eba1)' 14) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F3 (b' c' d) + this.X [2] + unchecked((int)0x6ed9eba1)' 14) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F3 (a' b' c) + this.X [7] + unchecked((int)0x6ed9eba1)' 8) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F3 (a' b' c) + this.X [7] + unchecked((int)0x6ed9eba1)' 8) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F3 (e' a' b) + this.X [0] + unchecked((int)0x6ed9eba1)' 13) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F3 (d' e' a) + this.X [6] + unchecked((int)0x6ed9eba1)' 6) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F3 (d' e' a) + this.X [6] + unchecked((int)0x6ed9eba1)' 6) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F3 (c' d' e) + this.X [13] + unchecked((int)0x6ed9eba1)' 5) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F3 (c' d' e) + this.X [13] + unchecked((int)0x6ed9eba1)' 5) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F3 (b' c' d) + this.X [11] + unchecked((int)0x6ed9eba1)' 12) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F3 (b' c' d) + this.X [11] + unchecked((int)0x6ed9eba1)' 12) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F3 (a' b' c) + this.X [5] + unchecked((int)0x6ed9eba1)' 7) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F3 (a' b' c) + this.X [5] + unchecked((int)0x6ed9eba1)' 7) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F3 (e' a' b) + this.X [12] + unchecked((int)0x6ed9eba1)' 5) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F3 (e' a' b) + this.X [12] + unchecked((int)0x6ed9eba1)' 5) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F3 (ee' aa' bb) + this.X [15] + unchecked((int)0x6d703ef3)' 9) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F3 (ee' aa' bb) + this.X [15] + unchecked((int)0x6d703ef3)' 9) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F3 (dd' ee' aa) + this.X [5] + unchecked((int)0x6d703ef3)' 7) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F3 (dd' ee' aa) + this.X [5] + unchecked((int)0x6d703ef3)' 7) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F3 (cc' dd' ee) + this.X [1] + unchecked((int)0x6d703ef3)' 15) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F3 (bb' cc' dd) + this.X [3] + unchecked((int)0x6d703ef3)' 11) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F3 (bb' cc' dd) + this.X [3] + unchecked((int)0x6d703ef3)' 11) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F3 (aa' bb' cc) + this.X [7] + unchecked((int)0x6d703ef3)' 8) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F3 (aa' bb' cc) + this.X [7] + unchecked((int)0x6d703ef3)' 8) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F3 (ee' aa' bb) + this.X [14] + unchecked((int)0x6d703ef3)' 6) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F3 (ee' aa' bb) + this.X [14] + unchecked((int)0x6d703ef3)' 6) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F3 (dd' ee' aa) + this.X [6] + unchecked((int)0x6d703ef3)' 6) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F3 (dd' ee' aa) + this.X [6] + unchecked((int)0x6d703ef3)' 6) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F3 (cc' dd' ee) + this.X [9] + unchecked((int)0x6d703ef3)' 14) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F3 (cc' dd' ee) + this.X [9] + unchecked((int)0x6d703ef3)' 14) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F3 (bb' cc' dd) + this.X [11] + unchecked((int)0x6d703ef3)' 12) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F3 (bb' cc' dd) + this.X [11] + unchecked((int)0x6d703ef3)' 12) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F3 (aa' bb' cc) + this.X [8] + unchecked((int)0x6d703ef3)' 13) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F3 (aa' bb' cc) + this.X [8] + unchecked((int)0x6d703ef3)' 13) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F3 (ee' aa' bb) + this.X [12] + unchecked((int)0x6d703ef3)' 5) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F3 (ee' aa' bb) + this.X [12] + unchecked((int)0x6d703ef3)' 5) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F3 (dd' ee' aa) + this.X [2] + unchecked((int)0x6d703ef3)' 14) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F3 (dd' ee' aa) + this.X [2] + unchecked((int)0x6d703ef3)' 14) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F3 (cc' dd' ee) + this.X [10] + unchecked((int)0x6d703ef3)' 13) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F3 (cc' dd' ee) + this.X [10] + unchecked((int)0x6d703ef3)' 13) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F3 (bb' cc' dd) + this.X [0] + unchecked((int)0x6d703ef3)' 13) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F3 (aa' bb' cc) + this.X [4] + unchecked((int)0x6d703ef3)' 7) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F3 (aa' bb' cc) + this.X [4] + unchecked((int)0x6d703ef3)' 7) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F3 (ee' aa' bb) + this.X [13] + unchecked((int)0x6d703ef3)' 5) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F3 (ee' aa' bb) + this.X [13] + unchecked((int)0x6d703ef3)' 5) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F4 (d' e' a) + this.X [1] + unchecked((int)0x8f1bbcdc)' 11) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F4 (c' d' e) + this.X [9] + unchecked((int)0x8f1bbcdc)' 12) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F4 (c' d' e) + this.X [9] + unchecked((int)0x8f1bbcdc)' 12) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F4 (b' c' d) + this.X [11] + unchecked((int)0x8f1bbcdc)' 14) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F4 (b' c' d) + this.X [11] + unchecked((int)0x8f1bbcdc)' 14) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F4 (a' b' c) + this.X [10] + unchecked((int)0x8f1bbcdc)' 15) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F4 (a' b' c) + this.X [10] + unchecked((int)0x8f1bbcdc)' 15) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F4 (e' a' b) + this.X [0] + unchecked((int)0x8f1bbcdc)' 14) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F4 (d' e' a) + this.X [8] + unchecked((int)0x8f1bbcdc)' 15) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F4 (d' e' a) + this.X [8] + unchecked((int)0x8f1bbcdc)' 15) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F4 (c' d' e) + this.X [12] + unchecked((int)0x8f1bbcdc)' 9) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F4 (c' d' e) + this.X [12] + unchecked((int)0x8f1bbcdc)' 9) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F4 (b' c' d) + this.X [4] + unchecked((int)0x8f1bbcdc)' 8) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F4 (b' c' d) + this.X [4] + unchecked((int)0x8f1bbcdc)' 8) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F4 (a' b' c) + this.X [13] + unchecked((int)0x8f1bbcdc)' 9) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F4 (a' b' c) + this.X [13] + unchecked((int)0x8f1bbcdc)' 9) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F4 (e' a' b) + this.X [3] + unchecked((int)0x8f1bbcdc)' 14) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F4 (e' a' b) + this.X [3] + unchecked((int)0x8f1bbcdc)' 14) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F4 (d' e' a) + this.X [7] + unchecked((int)0x8f1bbcdc)' 5) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F4 (d' e' a) + this.X [7] + unchecked((int)0x8f1bbcdc)' 5) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F4 (c' d' e) + this.X [15] + unchecked((int)0x8f1bbcdc)' 6) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F4 (c' d' e) + this.X [15] + unchecked((int)0x8f1bbcdc)' 6) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F4 (b' c' d) + this.X [14] + unchecked((int)0x8f1bbcdc)' 8) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F4 (b' c' d) + this.X [14] + unchecked((int)0x8f1bbcdc)' 8) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F4 (a' b' c) + this.X [5] + unchecked((int)0x8f1bbcdc)' 6) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F4 (a' b' c) + this.X [5] + unchecked((int)0x8f1bbcdc)' 6) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F4 (e' a' b) + this.X [6] + unchecked((int)0x8f1bbcdc)' 5) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F4 (e' a' b) + this.X [6] + unchecked((int)0x8f1bbcdc)' 5) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F4 (d' e' a) + this.X [2] + unchecked((int)0x8f1bbcdc)' 12) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F4 (d' e' a) + this.X [2] + unchecked((int)0x8f1bbcdc)' 12) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F2 (dd' ee' aa) + this.X [8] + unchecked((int)0x7a6d76e9)' 15) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F2 (dd' ee' aa) + this.X [8] + unchecked((int)0x7a6d76e9)' 15) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F2 (cc' dd' ee) + this.X [6] + unchecked((int)0x7a6d76e9)' 5) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F2 (cc' dd' ee) + this.X [6] + unchecked((int)0x7a6d76e9)' 5) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F2 (bb' cc' dd) + this.X [4] + unchecked((int)0x7a6d76e9)' 8) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F2 (bb' cc' dd) + this.X [4] + unchecked((int)0x7a6d76e9)' 8) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F2 (aa' bb' cc) + this.X [1] + unchecked((int)0x7a6d76e9)' 11) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F2 (ee' aa' bb) + this.X [3] + unchecked((int)0x7a6d76e9)' 14) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F2 (ee' aa' bb) + this.X [3] + unchecked((int)0x7a6d76e9)' 14) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F2 (dd' ee' aa) + this.X [11] + unchecked((int)0x7a6d76e9)' 14) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F2 (dd' ee' aa) + this.X [11] + unchecked((int)0x7a6d76e9)' 14) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F2 (cc' dd' ee) + this.X [15] + unchecked((int)0x7a6d76e9)' 6) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F2 (cc' dd' ee) + this.X [15] + unchecked((int)0x7a6d76e9)' 6) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F2 (bb' cc' dd) + this.X [0] + unchecked((int)0x7a6d76e9)' 14) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F2 (aa' bb' cc) + this.X [5] + unchecked((int)0x7a6d76e9)' 6) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F2 (aa' bb' cc) + this.X [5] + unchecked((int)0x7a6d76e9)' 6) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F2 (ee' aa' bb) + this.X [12] + unchecked((int)0x7a6d76e9)' 9) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F2 (ee' aa' bb) + this.X [12] + unchecked((int)0x7a6d76e9)' 9) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F2 (dd' ee' aa) + this.X [2] + unchecked((int)0x7a6d76e9)' 12) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F2 (dd' ee' aa) + this.X [2] + unchecked((int)0x7a6d76e9)' 12) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F2 (cc' dd' ee) + this.X [13] + unchecked((int)0x7a6d76e9)' 9) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F2 (cc' dd' ee) + this.X [13] + unchecked((int)0x7a6d76e9)' 9) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F2 (bb' cc' dd) + this.X [9] + unchecked((int)0x7a6d76e9)' 12) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F2 (bb' cc' dd) + this.X [9] + unchecked((int)0x7a6d76e9)' 12) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F2 (aa' bb' cc) + this.X [7] + unchecked((int)0x7a6d76e9)' 5) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F2 (aa' bb' cc) + this.X [7] + unchecked((int)0x7a6d76e9)' 5) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F2 (ee' aa' bb) + this.X [10] + unchecked((int)0x7a6d76e9)' 15) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F2 (ee' aa' bb) + this.X [10] + unchecked((int)0x7a6d76e9)' 15) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F2 (dd' ee' aa) + this.X [14] + unchecked((int)0x7a6d76e9)' 8) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F2 (dd' ee' aa) + this.X [14] + unchecked((int)0x7a6d76e9)' 8) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F5 (c' d' e) + this.X [4] + unchecked((int)0xa953fd4e)' 9) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F5 (c' d' e) + this.X [4] + unchecked((int)0xa953fd4e)' 9) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F5 (b' c' d) + this.X [0] + unchecked((int)0xa953fd4e)' 15) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F5 (a' b' c) + this.X [5] + unchecked((int)0xa953fd4e)' 5) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F5 (a' b' c) + this.X [5] + unchecked((int)0xa953fd4e)' 5) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F5 (e' a' b) + this.X [9] + unchecked((int)0xa953fd4e)' 11) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F5 (e' a' b) + this.X [9] + unchecked((int)0xa953fd4e)' 11) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F5 (d' e' a) + this.X [7] + unchecked((int)0xa953fd4e)' 6) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F5 (d' e' a) + this.X [7] + unchecked((int)0xa953fd4e)' 6) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F5 (c' d' e) + this.X [12] + unchecked((int)0xa953fd4e)' 8) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F5 (c' d' e) + this.X [12] + unchecked((int)0xa953fd4e)' 8) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F5 (b' c' d) + this.X [2] + unchecked((int)0xa953fd4e)' 13) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F5 (b' c' d) + this.X [2] + unchecked((int)0xa953fd4e)' 13) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F5 (a' b' c) + this.X [10] + unchecked((int)0xa953fd4e)' 12) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F5 (a' b' c) + this.X [10] + unchecked((int)0xa953fd4e)' 12) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F5 (e' a' b) + this.X [14] + unchecked((int)0xa953fd4e)' 5) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F5 (e' a' b) + this.X [14] + unchecked((int)0xa953fd4e)' 5) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F5 (d' e' a) + this.X [1] + unchecked((int)0xa953fd4e)' 12) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F5 (c' d' e) + this.X [3] + unchecked((int)0xa953fd4e)' 13) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F5 (c' d' e) + this.X [3] + unchecked((int)0xa953fd4e)' 13) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F5 (b' c' d) + this.X [8] + unchecked((int)0xa953fd4e)' 14) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a + F5 (b' c' d) + this.X [8] + unchecked((int)0xa953fd4e)' 14) + e;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F5 (a' b' c) + this.X [11] + unchecked((int)0xa953fd4e)' 11) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e + F5 (a' b' c) + this.X [11] + unchecked((int)0xa953fd4e)' 11) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F5 (e' a' b) + this.X [6] + unchecked((int)0xa953fd4e)' 8) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d + F5 (e' a' b) + this.X [6] + unchecked((int)0xa953fd4e)' 8) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: a = RL (a' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F5 (d' e' a) + this.X [15] + unchecked((int)0xa953fd4e)' 5) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: c = RL (c + F5 (d' e' a) + this.X [15] + unchecked((int)0xa953fd4e)' 5) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: e = RL (e' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F5 (c' d' e) + this.X [13] + unchecked((int)0xa953fd4e)' 6) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: b = RL (b + F5 (c' d' e) + this.X [13] + unchecked((int)0xa953fd4e)' 6) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: d = RL (d' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F1 (cc' dd' ee) + this.X [12]' 8) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F1 (cc' dd' ee) + this.X [12]' 8) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F1 (bb' cc' dd) + this.X [15]' 5) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F1 (bb' cc' dd) + this.X [15]' 5) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F1 (aa' bb' cc) + this.X [10]' 12) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F1 (aa' bb' cc) + this.X [10]' 12) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F1 (ee' aa' bb) + this.X [4]' 9) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F1 (ee' aa' bb) + this.X [4]' 9) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F1 (dd' ee' aa) + this.X [1]' 12) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F1 (cc' dd' ee) + this.X [5]' 5) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F1 (cc' dd' ee) + this.X [5]' 5) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F1 (bb' cc' dd) + this.X [8]' 14) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F1 (bb' cc' dd) + this.X [8]' 14) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F1 (aa' bb' cc) + this.X [7]' 6) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F1 (aa' bb' cc) + this.X [7]' 6) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F1 (ee' aa' bb) + this.X [6]' 8) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F1 (ee' aa' bb) + this.X [6]' 8) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F1 (dd' ee' aa) + this.X [2]' 13) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F1 (dd' ee' aa) + this.X [2]' 13) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F1 (cc' dd' ee) + this.X [13]' 6) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F1 (cc' dd' ee) + this.X [13]' 6) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F1 (bb' cc' dd) + this.X [14]' 5) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa + F1 (bb' cc' dd) + this.X [14]' 5) + ee;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee + F1 (aa' bb' cc) + this.X [0]' 15) + dd;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F1 (ee' aa' bb) + this.X [3]' 13) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd + F1 (ee' aa' bb) + this.X [3]' 13) + cc;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: aa = RL (aa' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F1 (dd' ee' aa) + this.X [9]' 11) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: cc = RL (cc + F1 (dd' ee' aa) + this.X [9]' 11) + bb;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: ee = RL (ee' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F1 (cc' dd' ee) + this.X [11]' 11) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: bb = RL (bb + F1 (cc' dd' ee) + this.X [11]' 11) + aa;  
Magic Number,Renci.SshNet.Security.Cryptography,RIPEMD160Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\RIPEMD160Hash.cs,ProcessBlock,The following statement contains a magic number: dd = RL (dd' 10);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,SHA2HashBase,The following statement contains a magic number: this._buffer = new byte[8];  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Finish,The following statement contains a magic number: this.Update ((byte)128);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessWord,The following statement contains a magic number: if (++_offset == 16) {  	ProcessBlock ();  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessLength,The following statement contains a magic number: if (_offset > 14) {  	this.ProcessBlock ();  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessLength,The following statement contains a magic number: this.X [14] = (ulong)hiW;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessLength,The following statement contains a magic number: this.X [15] = (ulong)lowW;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessBlock,The following statement contains a magic number: for (int ti = 16; ti <= 79; ++ti) {  	X [ti] = Sigma1 (X [ti - 2]) + X [ti - 7] + Sigma0 (X [ti - 15]) + X [ti - 16];  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessBlock,The following statement contains a magic number: for (int ti = 16; ti <= 79; ++ti) {  	X [ti] = Sigma1 (X [ti - 2]) + X [ti - 7] + Sigma0 (X [ti - 15]) + X [ti - 16];  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessBlock,The following statement contains a magic number: for (int ti = 16; ti <= 79; ++ti) {  	X [ti] = Sigma1 (X [ti - 2]) + X [ti - 7] + Sigma0 (X [ti - 15]) + X [ti - 16];  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessBlock,The following statement contains a magic number: for (int ti = 16; ti <= 79; ++ti) {  	X [ti] = Sigma1 (X [ti - 2]) + X [ti - 7] + Sigma0 (X [ti - 15]) + X [ti - 16];  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessBlock,The following statement contains a magic number: for (int ti = 16; ti <= 79; ++ti) {  	X [ti] = Sigma1 (X [ti - 2]) + X [ti - 7] + Sigma0 (X [ti - 15]) + X [ti - 16];  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessBlock,The following statement contains a magic number: for (int ti = 16; ti <= 79; ++ti) {  	X [ti] = Sigma1 (X [ti - 2]) + X [ti - 7] + Sigma0 (X [ti - 15]) + X [ti - 16];  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessBlock,The following statement contains a magic number: X [ti] = Sigma1 (X [ti - 2]) + X [ti - 7] + Sigma0 (X [ti - 15]) + X [ti - 16];  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessBlock,The following statement contains a magic number: X [ti] = Sigma1 (X [ti - 2]) + X [ti - 7] + Sigma0 (X [ti - 15]) + X [ti - 16];  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessBlock,The following statement contains a magic number: X [ti] = Sigma1 (X [ti - 2]) + X [ti - 7] + Sigma0 (X [ti - 15]) + X [ti - 16];  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessBlock,The following statement contains a magic number: X [ti] = Sigma1 (X [ti - 2]) + X [ti - 7] + Sigma0 (X [ti - 15]) + X [ti - 16];  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,ProcessBlock,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	// t = 8 * i  	h += Sum1 (e) + Ch (e' f' g) + K [t] + X [t++];  	d += h;  	h += Sum0 (a) + Maj (a' b' c);  	// t = 8 * i + 1  	g += Sum1 (d) + Ch (d' e' f) + K [t] + X [t++];  	c += g;  	g += Sum0 (h) + Maj (h' a' b);  	// t = 8 * i + 2  	f += Sum1 (c) + Ch (c' d' e) + K [t] + X [t++];  	b += f;  	f += Sum0 (g) + Maj (g' h' a);  	// t = 8 * i + 3  	e += Sum1 (b) + Ch (b' c' d) + K [t] + X [t++];  	a += e;  	e += Sum0 (f) + Maj (f' g' h);  	// t = 8 * i + 4  	d += Sum1 (a) + Ch (a' b' c) + K [t] + X [t++];  	h += d;  	d += Sum0 (e) + Maj (e' f' g);  	// t = 8 * i + 5  	c += Sum1 (h) + Ch (h' a' b) + K [t] + X [t++];  	g += c;  	c += Sum0 (d) + Maj (d' e' f);  	// t = 8 * i + 6  	b += Sum1 (g) + Ch (g' h' a) + K [t] + X [t++];  	f += b;  	b += Sum0 (c) + Maj (c' d' e);  	// t = 8 * i + 7  	a += Sum1 (f) + Ch (f' g' h) + K [t] + X [t++];  	e += a;  	a += Sum0 (b) + Maj (b' c' d);  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,AdjustByteCounts,The following statement contains a magic number: if (this._byteCount1 > 0x1fffffffffffffffL) {  	this._byteCount2 += (long)((ulong)this._byteCount1 >> 61);  	this._byteCount1 &= 0x1fffffffffffffffL;  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,AdjustByteCounts,The following statement contains a magic number: this._byteCount2 += (long)((ulong)this._byteCount1 >> 61);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sum0,The following statement contains a magic number: return ((x << 36) | (x >> 28)) ^ ((x << 30) | (x >> 34)) ^ ((x << 25) | (x >> 39));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sum0,The following statement contains a magic number: return ((x << 36) | (x >> 28)) ^ ((x << 30) | (x >> 34)) ^ ((x << 25) | (x >> 39));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sum0,The following statement contains a magic number: return ((x << 36) | (x >> 28)) ^ ((x << 30) | (x >> 34)) ^ ((x << 25) | (x >> 39));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sum0,The following statement contains a magic number: return ((x << 36) | (x >> 28)) ^ ((x << 30) | (x >> 34)) ^ ((x << 25) | (x >> 39));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sum0,The following statement contains a magic number: return ((x << 36) | (x >> 28)) ^ ((x << 30) | (x >> 34)) ^ ((x << 25) | (x >> 39));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sum0,The following statement contains a magic number: return ((x << 36) | (x >> 28)) ^ ((x << 30) | (x >> 34)) ^ ((x << 25) | (x >> 39));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sum1,The following statement contains a magic number: return ((x << 50) | (x >> 14)) ^ ((x << 46) | (x >> 18)) ^ ((x << 23) | (x >> 41));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sum1,The following statement contains a magic number: return ((x << 50) | (x >> 14)) ^ ((x << 46) | (x >> 18)) ^ ((x << 23) | (x >> 41));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sum1,The following statement contains a magic number: return ((x << 50) | (x >> 14)) ^ ((x << 46) | (x >> 18)) ^ ((x << 23) | (x >> 41));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sum1,The following statement contains a magic number: return ((x << 50) | (x >> 14)) ^ ((x << 46) | (x >> 18)) ^ ((x << 23) | (x >> 41));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sum1,The following statement contains a magic number: return ((x << 50) | (x >> 14)) ^ ((x << 46) | (x >> 18)) ^ ((x << 23) | (x >> 41));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sum1,The following statement contains a magic number: return ((x << 50) | (x >> 14)) ^ ((x << 46) | (x >> 18)) ^ ((x << 23) | (x >> 41));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sigma0,The following statement contains a magic number: return ((x << 63) | (x >> 1)) ^ ((x << 56) | (x >> 8)) ^ (x >> 7);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sigma0,The following statement contains a magic number: return ((x << 63) | (x >> 1)) ^ ((x << 56) | (x >> 8)) ^ (x >> 7);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sigma0,The following statement contains a magic number: return ((x << 63) | (x >> 1)) ^ ((x << 56) | (x >> 8)) ^ (x >> 7);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sigma0,The following statement contains a magic number: return ((x << 63) | (x >> 1)) ^ ((x << 56) | (x >> 8)) ^ (x >> 7);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sigma1,The following statement contains a magic number: return ((x << 45) | (x >> 19)) ^ ((x << 3) | (x >> 61)) ^ (x >> 6);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sigma1,The following statement contains a magic number: return ((x << 45) | (x >> 19)) ^ ((x << 3) | (x >> 61)) ^ (x >> 6);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sigma1,The following statement contains a magic number: return ((x << 45) | (x >> 19)) ^ ((x << 3) | (x >> 61)) ^ (x >> 6);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sigma1,The following statement contains a magic number: return ((x << 45) | (x >> 19)) ^ ((x << 3) | (x >> 61)) ^ (x >> 6);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,Sigma1,The following statement contains a magic number: return ((x << 45) | (x >> 19)) ^ ((x << 3) | (x >> 61)) ^ (x >> 6);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,UInt32_To_BE,The following statement contains a magic number: bs [off] = (byte)(n >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,UInt32_To_BE,The following statement contains a magic number: bs [++off] = (byte)(n >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,UInt32_To_BE,The following statement contains a magic number: bs [++off] = (byte)(n >> 8);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,UInt64_To_BE,The following statement contains a magic number: UInt32_To_BE ((uint)(n >> 32)' bs' off);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,UInt64_To_BE,The following statement contains a magic number: UInt32_To_BE ((uint)(n)' bs' off + 4);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,BE_To_UInt64,The following statement contains a magic number: return ((ulong)hi << 32) | (ulong)lo;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,BE_To_UInt64,The following statement contains a magic number: return ((ulong)hi << 32) | (ulong)lo;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,BE_To_UInt32,The following statement contains a magic number: n |= (uint)bs [++off] << 16;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,BE_To_UInt32,The following statement contains a magic number: n |= (uint)bs [++off] << 8;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,BE_To_UInt32,The following statement contains a magic number: n |= (uint)bs [1] << 16;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,BE_To_UInt32,The following statement contains a magic number: n |= (uint)bs [2] << 8;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,BE_To_UInt32,The following statement contains a magic number: n |= (uint)bs [2] << 8;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA2HashBase,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA2HashBase.cs,BE_To_UInt32,The following statement contains a magic number: n |= (uint)bs [3];  
Magic Number,Renci.SshNet.Security.Cryptography,SHA384Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA384Hash.cs,HashFinal,The following statement contains a magic number: SHA2HashBase.UInt64_To_BE (H2' output' 8);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA384Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA384Hash.cs,HashFinal,The following statement contains a magic number: SHA2HashBase.UInt64_To_BE (H3' output' 16);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA384Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA384Hash.cs,HashFinal,The following statement contains a magic number: SHA2HashBase.UInt64_To_BE (H4' output' 24);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA384Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA384Hash.cs,HashFinal,The following statement contains a magic number: SHA2HashBase.UInt64_To_BE (H5' output' 32);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA384Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA384Hash.cs,HashFinal,The following statement contains a magic number: SHA2HashBase.UInt64_To_BE (H6' output' 40);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA512Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA512Hash.cs,HashFinal,The following statement contains a magic number: SHA2HashBase.UInt64_To_BE (H2' output' 8);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA512Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA512Hash.cs,HashFinal,The following statement contains a magic number: SHA2HashBase.UInt64_To_BE (H3' output' 16);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA512Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA512Hash.cs,HashFinal,The following statement contains a magic number: SHA2HashBase.UInt64_To_BE (H4' output' 24);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA512Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA512Hash.cs,HashFinal,The following statement contains a magic number: SHA2HashBase.UInt64_To_BE (H5' output' 32);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA512Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA512Hash.cs,HashFinal,The following statement contains a magic number: SHA2HashBase.UInt64_To_BE (H6' output' 40);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA512Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA512Hash.cs,HashFinal,The following statement contains a magic number: SHA2HashBase.UInt64_To_BE (H7' output' 48);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA512Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA512Hash.cs,HashFinal,The following statement contains a magic number: SHA2HashBase.UInt64_To_BE (H8' output' 56);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToBigEndian,The following statement contains a magic number: buffer [0] = (byte)(number >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToBigEndian,The following statement contains a magic number: buffer [1] = (byte)(number >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToBigEndian,The following statement contains a magic number: buffer [2] = (byte)(number >> 8);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToBigEndian,The following statement contains a magic number: buffer [2] = (byte)(number >> 8);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToBigEndian,The following statement contains a magic number: buffer [3] = (byte)(number);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToBigEndian,The following statement contains a magic number: buffer [offset] = (byte)(number >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToBigEndian,The following statement contains a magic number: buffer [offset + 1] = (byte)(number >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToBigEndian,The following statement contains a magic number: buffer [offset + 2] = (byte)(number >> 8);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToBigEndian,The following statement contains a magic number: buffer [offset + 2] = (byte)(number >> 8);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToBigEndian,The following statement contains a magic number: buffer [offset + 3] = (byte)(number);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,BigEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [1] << 16;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,BigEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [2] << 8;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,BigEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [2] << 8;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,BigEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [3];  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,BigEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [offset + 1] << 16;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,BigEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [offset + 2] << 8;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,BigEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [offset + 2] << 8;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,BigEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [offset + 3];  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,BigEndianToUInt64,The following statement contains a magic number: return ((ulong)hi << 32) | (ulong)lo;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,BigEndianToUInt64,The following statement contains a magic number: return ((ulong)hi << 32) | (ulong)lo;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt64ToBigEndian,The following statement contains a magic number: UInt32ToBigEndian ((uint)(number >> 32)' buffer);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt64ToBigEndian,The following statement contains a magic number: UInt32ToBigEndian ((uint)(number)' buffer' 4);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt64ToBigEndian,The following statement contains a magic number: UInt32ToBigEndian ((uint)(number >> 32)' buffer' offset);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt64ToBigEndian,The following statement contains a magic number: UInt32ToBigEndian ((uint)(number)' buffer' offset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToLittleEndian,The following statement contains a magic number: buffer [1] = (byte)(number >> 8);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToLittleEndian,The following statement contains a magic number: buffer [2] = (byte)(number >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToLittleEndian,The following statement contains a magic number: buffer [2] = (byte)(number >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToLittleEndian,The following statement contains a magic number: buffer [3] = (byte)(number >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToLittleEndian,The following statement contains a magic number: buffer [3] = (byte)(number >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToLittleEndian,The following statement contains a magic number: buffer [offset + 1] = (byte)(number >> 8);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToLittleEndian,The following statement contains a magic number: buffer [offset + 2] = (byte)(number >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToLittleEndian,The following statement contains a magic number: buffer [offset + 2] = (byte)(number >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToLittleEndian,The following statement contains a magic number: buffer [offset + 3] = (byte)(number >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt32ToLittleEndian,The following statement contains a magic number: buffer [offset + 3] = (byte)(number >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,LittleEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [1] << 8;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,LittleEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [2] << 16;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,LittleEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [2] << 16;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,LittleEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [3] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,LittleEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [3] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,LittleEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [offset + 1] << 8;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,LittleEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [offset + 2] << 16;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,LittleEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [offset + 2] << 16;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,LittleEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [offset + 3] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,LittleEndianToUInt32,The following statement contains a magic number: n |= (uint)buffer [offset + 3] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,LittleEndianToUInt64,The following statement contains a magic number: return ((ulong)hi << 32) | (ulong)lo;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,LittleEndianToUInt64,The following statement contains a magic number: return ((ulong)hi << 32) | (ulong)lo;  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt64ToLittleEndian,The following statement contains a magic number: UInt32ToLittleEndian ((uint)(number >> 32)' buffer' 4);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt64ToLittleEndian,The following statement contains a magic number: UInt32ToLittleEndian ((uint)(number >> 32)' buffer' 4);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt64ToLittleEndian,The following statement contains a magic number: UInt32ToLittleEndian ((uint)(number >> 32)' buffer' offset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography,Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Cipher.cs,UInt64ToLittleEndian,The following statement contains a magic number: UInt32ToLittleEndian ((uint)(number >> 32)' buffer' offset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography,DsaDigitalSignature,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\DsaDigitalSignature.cs,Verify,The following statement contains a magic number: if (signature.Length != 40)  	throw new InvalidOperationException ("Invalid signature.");  
Magic Number,Renci.SshNet.Security.Cryptography,DsaDigitalSignature,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\DsaDigitalSignature.cs,Verify,The following statement contains a magic number: for (int i = 0' j = 20; i < 20; i++' j--) {  	rBytes [i] = signature [j - 1];  	sBytes [i] = signature [j + 20 - 1];  }  
Magic Number,Renci.SshNet.Security.Cryptography,DsaDigitalSignature,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\DsaDigitalSignature.cs,Verify,The following statement contains a magic number: for (int i = 0' j = 20; i < 20; i++' j--) {  	rBytes [i] = signature [j - 1];  	sBytes [i] = signature [j + 20 - 1];  }  
Magic Number,Renci.SshNet.Security.Cryptography,DsaDigitalSignature,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\DsaDigitalSignature.cs,Verify,The following statement contains a magic number: for (int i = 0' j = 20; i < 20; i++' j--) {  	rBytes [i] = signature [j - 1];  	sBytes [i] = signature [j + 20 - 1];  }  
Magic Number,Renci.SshNet.Security.Cryptography,DsaDigitalSignature,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\DsaDigitalSignature.cs,Verify,The following statement contains a magic number: sBytes [i] = signature [j + 20 - 1];  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,HashFinal,The following statement contains a magic number: this.Update ((byte)128);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,HashFinal,The following statement contains a magic number: if (this._offset > 14) {  	this.ProcessBlock ();  }  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,HashFinal,The following statement contains a magic number: this._hashValue [14] = (int)(bitLength & 0xffffffff);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,HashFinal,The following statement contains a magic number: this._hashValue [15] = (int)((ulong)bitLength >> 32);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,HashFinal,The following statement contains a magic number: this._hashValue [15] = (int)((ulong)bitLength >> 32);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,HashFinal,The following statement contains a magic number: this.UnpackWord (H2' output' 0 + 4);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,HashFinal,The following statement contains a magic number: this.UnpackWord (H3' output' 0 + 8);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,HashFinal,The following statement contains a magic number: this.UnpackWord (H4' output' 0 + 12);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,InternalInitialize,The following statement contains a magic number: for (i = 0; i < 4; i++) {  	this._buffer [i] = 0;  }  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessWord,The following statement contains a magic number: this._hashValue [this._offset++] = (input [inOff] & 0xff) | ((input [inOff + 1] & 0xff) << 8) | ((input [inOff + 2] & 0xff) << 16) | ((input [inOff + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessWord,The following statement contains a magic number: this._hashValue [this._offset++] = (input [inOff] & 0xff) | ((input [inOff + 1] & 0xff) << 8) | ((input [inOff + 2] & 0xff) << 16) | ((input [inOff + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessWord,The following statement contains a magic number: this._hashValue [this._offset++] = (input [inOff] & 0xff) | ((input [inOff + 1] & 0xff) << 8) | ((input [inOff + 2] & 0xff) << 16) | ((input [inOff + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessWord,The following statement contains a magic number: this._hashValue [this._offset++] = (input [inOff] & 0xff) | ((input [inOff + 1] & 0xff) << 8) | ((input [inOff + 2] & 0xff) << 16) | ((input [inOff + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessWord,The following statement contains a magic number: this._hashValue [this._offset++] = (input [inOff] & 0xff) | ((input [inOff + 1] & 0xff) << 8) | ((input [inOff + 2] & 0xff) << 16) | ((input [inOff + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessWord,The following statement contains a magic number: if (this._offset == 16) {  	ProcessBlock ();  }  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,UnpackWord,The following statement contains a magic number: outBytes [outOff + 1] = (byte)((uint)word >> 8);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,UnpackWord,The following statement contains a magic number: outBytes [outOff + 2] = (byte)((uint)word >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,UnpackWord,The following statement contains a magic number: outBytes [outOff + 2] = (byte)((uint)word >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,UnpackWord,The following statement contains a magic number: outBytes [outOff + 3] = (byte)((uint)word >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,UnpackWord,The following statement contains a magic number: outBytes [outOff + 3] = (byte)((uint)word >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,RotateLeft,The following statement contains a magic number: return (x << n) | (int)((uint)x >> (32 - n));  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + F (d' a' b) + this._hashValue [2] + unchecked((int)0x242070db))' S13) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: b = RotateLeft ((b + F (c' d' a) + this._hashValue [3] + unchecked((int)0xc1bdceee))' S14) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: a = RotateLeft ((a + F (b' c' d) + this._hashValue [4] + unchecked((int)0xf57c0faf))' S11) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: d = RotateLeft ((d + F (a' b' c) + this._hashValue [5] + unchecked((int)0x4787c62a))' S12) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + F (d' a' b) + this._hashValue [6] + unchecked((int)0xa8304613))' S13) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: b = RotateLeft ((b + F (c' d' a) + this._hashValue [7] + unchecked((int)0xfd469501))' S14) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: a = RotateLeft ((a + F (b' c' d) + this._hashValue [8] + unchecked((int)0x698098d8))' S11) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: d = RotateLeft ((d + F (a' b' c) + this._hashValue [9] + unchecked((int)0x8b44f7af))' S12) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + F (d' a' b) + this._hashValue [10] + unchecked((int)0xffff5bb1))' S13) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: b = RotateLeft ((b + F (c' d' a) + this._hashValue [11] + unchecked((int)0x895cd7be))' S14) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: a = RotateLeft ((a + F (b' c' d) + this._hashValue [12] + unchecked((int)0x6b901122))' S11) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: d = RotateLeft ((d + F (a' b' c) + this._hashValue [13] + unchecked((int)0xfd987193))' S12) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + F (d' a' b) + this._hashValue [14] + unchecked((int)0xa679438e))' S13) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: b = RotateLeft ((b + F (c' d' a) + this._hashValue [15] + unchecked((int)0x49b40821))' S14) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: d = RotateLeft ((d + G (a' b' c) + this._hashValue [6] + unchecked((int)0xc040b340))' S22) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + G (d' a' b) + this._hashValue [11] + unchecked((int)0x265e5a51))' S23) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: a = RotateLeft ((a + G (b' c' d) + this._hashValue [5] + unchecked((int)0xd62f105d))' S21) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: d = RotateLeft ((d + G (a' b' c) + this._hashValue [10] + unchecked((int)0x02441453))' S22) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + G (d' a' b) + this._hashValue [15] + unchecked((int)0xd8a1e681))' S23) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: b = RotateLeft ((b + G (c' d' a) + this._hashValue [4] + unchecked((int)0xe7d3fbc8))' S24) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: a = RotateLeft ((a + G (b' c' d) + this._hashValue [9] + unchecked((int)0x21e1cde6))' S21) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: d = RotateLeft ((d + G (a' b' c) + this._hashValue [14] + unchecked((int)0xc33707d6))' S22) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + G (d' a' b) + this._hashValue [3] + unchecked((int)0xf4d50d87))' S23) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: b = RotateLeft ((b + G (c' d' a) + this._hashValue [8] + unchecked((int)0x455a14ed))' S24) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: a = RotateLeft ((a + G (b' c' d) + this._hashValue [13] + unchecked((int)0xa9e3e905))' S21) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: d = RotateLeft ((d + G (a' b' c) + this._hashValue [2] + unchecked((int)0xfcefa3f8))' S22) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + G (d' a' b) + this._hashValue [7] + unchecked((int)0x676f02d9))' S23) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: b = RotateLeft ((b + G (c' d' a) + this._hashValue [12] + unchecked((int)0x8d2a4c8a))' S24) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: a = RotateLeft ((a + H (b' c' d) + this._hashValue [5] + unchecked((int)0xfffa3942))' S31) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: d = RotateLeft ((d + H (a' b' c) + this._hashValue [8] + unchecked((int)0x8771f681))' S32) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + H (d' a' b) + this._hashValue [11] + unchecked((int)0x6d9d6122))' S33) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: b = RotateLeft ((b + H (c' d' a) + this._hashValue [14] + unchecked((int)0xfde5380c))' S34) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: d = RotateLeft ((d + H (a' b' c) + this._hashValue [4] + unchecked((int)0x4bdecfa9))' S32) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + H (d' a' b) + this._hashValue [7] + unchecked((int)0xf6bb4b60))' S33) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: b = RotateLeft ((b + H (c' d' a) + this._hashValue [10] + unchecked((int)0xbebfbc70))' S34) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: a = RotateLeft ((a + H (b' c' d) + this._hashValue [13] + unchecked((int)0x289b7ec6))' S31) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + H (d' a' b) + this._hashValue [3] + unchecked((int)0xd4ef3085))' S33) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: b = RotateLeft ((b + H (c' d' a) + this._hashValue [6] + unchecked((int)0x04881d05))' S34) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: a = RotateLeft ((a + H (b' c' d) + this._hashValue [9] + unchecked((int)0xd9d4d039))' S31) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: d = RotateLeft ((d + H (a' b' c) + this._hashValue [12] + unchecked((int)0xe6db99e5))' S32) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + H (d' a' b) + this._hashValue [15] + unchecked((int)0x1fa27cf8))' S33) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: b = RotateLeft ((b + H (c' d' a) + this._hashValue [2] + unchecked((int)0xc4ac5665))' S34) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: d = RotateLeft ((d + K (a' b' c) + this._hashValue [7] + unchecked((int)0x432aff97))' S42) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + K (d' a' b) + this._hashValue [14] + unchecked((int)0xab9423a7))' S43) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: b = RotateLeft ((b + K (c' d' a) + this._hashValue [5] + unchecked((int)0xfc93a039))' S44) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: a = RotateLeft ((a + K (b' c' d) + this._hashValue [12] + unchecked((int)0x655b59c3))' S41) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: d = RotateLeft ((d + K (a' b' c) + this._hashValue [3] + unchecked((int)0x8f0ccc92))' S42) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + K (d' a' b) + this._hashValue [10] + unchecked((int)0xffeff47d))' S43) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: a = RotateLeft ((a + K (b' c' d) + this._hashValue [8] + unchecked((int)0x6fa87e4f))' S41) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: d = RotateLeft ((d + K (a' b' c) + this._hashValue [15] + unchecked((int)0xfe2ce6e0))' S42) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + K (d' a' b) + this._hashValue [6] + unchecked((int)0xa3014314))' S43) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: b = RotateLeft ((b + K (c' d' a) + this._hashValue [13] + unchecked((int)0x4e0811a1))' S44) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: a = RotateLeft ((a + K (b' c' d) + this._hashValue [4] + unchecked((int)0xf7537e82))' S41) + b;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: d = RotateLeft ((d + K (a' b' c) + this._hashValue [11] + unchecked((int)0xbd3af235))' S42) + a;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: c = RotateLeft ((c + K (d' a' b) + this._hashValue [2] + unchecked((int)0x2ad7d2bb))' S43) + d;  
Magic Number,Renci.SshNet.Security.Cryptography,MD5Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\MD5Hash.cs,ProcessBlock,The following statement contains a magic number: b = RotateLeft ((b + K (c' d' a) + this._hashValue [9] + unchecked((int)0xeb86d391))' S44) + c;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,SHA1Hash,The following statement contains a magic number: this._buffer = new byte[4];  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,HashFinal,The following statement contains a magic number: this.Update ((byte)128);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,HashFinal,The following statement contains a magic number: if (this._offset > 14) {  	this.ProcessBlock ();  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,HashFinal,The following statement contains a magic number: this._hashValue [14] = (uint)((ulong)bitLength >> 32);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,HashFinal,The following statement contains a magic number: this._hashValue [14] = (uint)((ulong)bitLength >> 32);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,HashFinal,The following statement contains a magic number: this._hashValue [15] = (uint)((ulong)bitLength);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,HashFinal,The following statement contains a magic number: UInt32ToBigEndian (H2' output' 4);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,HashFinal,The following statement contains a magic number: UInt32ToBigEndian (H3' output' 8);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,HashFinal,The following statement contains a magic number: UInt32ToBigEndian (H4' output' 12);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,HashFinal,The following statement contains a magic number: UInt32ToBigEndian (H5' output' 16);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,InternalInitialize,The following statement contains a magic number: for (i = 0; i < 4; i++) {  	this._buffer [i] = 0;  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessWord,The following statement contains a magic number: if (++this._offset == 16) {  	this.ProcessBlock ();  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: for (int i = 16; i < 80; i++) {  	uint t = _hashValue [i - 3] ^ _hashValue [i - 8] ^ _hashValue [i - 14] ^ _hashValue [i - 16];  	_hashValue [i] = t << 1 | t >> 31;  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: for (int i = 16; i < 80; i++) {  	uint t = _hashValue [i - 3] ^ _hashValue [i - 8] ^ _hashValue [i - 14] ^ _hashValue [i - 16];  	_hashValue [i] = t << 1 | t >> 31;  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: for (int i = 16; i < 80; i++) {  	uint t = _hashValue [i - 3] ^ _hashValue [i - 8] ^ _hashValue [i - 14] ^ _hashValue [i - 16];  	_hashValue [i] = t << 1 | t >> 31;  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: for (int i = 16; i < 80; i++) {  	uint t = _hashValue [i - 3] ^ _hashValue [i - 8] ^ _hashValue [i - 14] ^ _hashValue [i - 16];  	_hashValue [i] = t << 1 | t >> 31;  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: for (int i = 16; i < 80; i++) {  	uint t = _hashValue [i - 3] ^ _hashValue [i - 8] ^ _hashValue [i - 14] ^ _hashValue [i - 16];  	_hashValue [i] = t << 1 | t >> 31;  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: for (int i = 16; i < 80; i++) {  	uint t = _hashValue [i - 3] ^ _hashValue [i - 8] ^ _hashValue [i - 14] ^ _hashValue [i - 16];  	_hashValue [i] = t << 1 | t >> 31;  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: for (int i = 16; i < 80; i++) {  	uint t = _hashValue [i - 3] ^ _hashValue [i - 8] ^ _hashValue [i - 14] ^ _hashValue [i - 16];  	_hashValue [i] = t << 1 | t >> 31;  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: _hashValue [i] = t << 1 | t >> 31;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + F (B' C' D) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + F (B' C' D) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + F (A' B' C) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + F (A' B' C) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + F (E' A' B) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + F (E' A' B) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + F (D' E' A) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + F (D' E' A) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + F (C' D' E) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + F (C' D' E) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + F (B' C' D) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + F (B' C' D) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + F (A' B' C) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + F (A' B' C) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + F (E' A' B) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + F (E' A' B) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + F (D' E' A) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + F (D' E' A) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + F (C' D' E) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + F (C' D' E) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + F (B' C' D) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + F (B' C' D) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + F (A' B' C) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + F (A' B' C) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + F (E' A' B) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + F (E' A' B) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + F (D' E' A) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + F (D' E' A) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + F (C' D' E) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + F (C' D' E) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + F (B' C' D) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + F (B' C' D) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + F (A' B' C) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + F (A' B' C) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + F (E' A' B) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + F (E' A' B) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + F (D' E' A) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + F (D' E' A) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + F (C' D' E) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + F (C' D' E) + _hashValue [idx++] + Y1;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y2;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + G (B' C' D) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + G (B' C' D) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + G (A' B' C) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + G (A' B' C) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + G (E' A' B) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + G (E' A' B) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + G (D' E' A) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + G (D' E' A) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + G (C' D' E) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + G (C' D' E) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + G (B' C' D) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + G (B' C' D) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + G (A' B' C) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + G (A' B' C) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + G (E' A' B) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + G (E' A' B) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + G (D' E' A) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + G (D' E' A) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + G (C' D' E) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + G (C' D' E) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + G (B' C' D) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + G (B' C' D) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + G (A' B' C) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + G (A' B' C) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + G (E' A' B) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + G (E' A' B) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + G (D' E' A) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + G (D' E' A) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + G (C' D' E) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + G (C' D' E) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + G (B' C' D) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + G (B' C' D) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + G (A' B' C) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + G (A' B' C) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + G (E' A' B) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + G (E' A' B) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + G (D' E' A) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + G (D' E' A) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + G (C' D' E) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + G (C' D' E) + _hashValue [idx++] + Y3;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E += (A << 5 | (A >> 27)) + H (B' C' D) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B = B << 30 | (B >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D += (E << 5 | (E >> 27)) + H (A' B' C) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A = A << 30 | (A >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C += (D << 5 | (D >> 27)) + H (E' A' B) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: E = E << 30 | (E >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: B += (C << 5 | (C >> 27)) + H (D' E' A) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: D = D << 30 | (D >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: A += (B << 5 | (B >> 27)) + H (C' D' E) + _hashValue [idx++] + Y4;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The following statement contains a magic number: C = C << 30 | (C >> 2);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,BigEndianToUInt32,The following statement contains a magic number: n |= (uint)bs [++off] << 16;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,BigEndianToUInt32,The following statement contains a magic number: n |= (uint)bs [++off] << 8;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,UInt32ToBigEndian,The following statement contains a magic number: bs [off] = (byte)(n >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,UInt32ToBigEndian,The following statement contains a magic number: bs [++off] = (byte)(n >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,UInt32ToBigEndian,The following statement contains a magic number: bs [++off] = (byte)(n >> 8);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,SHA256Hash,The following statement contains a magic number: this._buffer = new byte[4];  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,HashFinal,The following statement contains a magic number: this.Update ((byte)128);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,HashFinal,The following statement contains a magic number: if (this._offset > 14) {  	this.ProcessBlock ();  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,HashFinal,The following statement contains a magic number: X [14] = (uint)((ulong)bitLength >> 32);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,HashFinal,The following statement contains a magic number: X [14] = (uint)((ulong)bitLength >> 32);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,HashFinal,The following statement contains a magic number: X [15] = (uint)((ulong)bitLength);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,HashFinal,The following statement contains a magic number: UInt32_To_BE ((uint)H2' output' 0 + 4);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,HashFinal,The following statement contains a magic number: UInt32_To_BE ((uint)H3' output' 0 + 8);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,HashFinal,The following statement contains a magic number: UInt32_To_BE ((uint)H4' output' 0 + 12);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,HashFinal,The following statement contains a magic number: UInt32_To_BE ((uint)H5' output' 0 + 16);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,HashFinal,The following statement contains a magic number: UInt32_To_BE ((uint)H6' output' 0 + 20);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,HashFinal,The following statement contains a magic number: UInt32_To_BE ((uint)H7' output' 0 + 24);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,HashFinal,The following statement contains a magic number: UInt32_To_BE ((uint)H8' output' 0 + 28);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,BE_To_UInt32,The following statement contains a magic number: n |= (uint)bs [++off] << 16;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,BE_To_UInt32,The following statement contains a magic number: n |= (uint)bs [++off] << 8;  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,UInt32_To_BE,The following statement contains a magic number: bs [off] = (byte)(n >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,UInt32_To_BE,The following statement contains a magic number: bs [++off] = (byte)(n >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,UInt32_To_BE,The following statement contains a magic number: bs [++off] = (byte)(n >> 8);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessWord,The following statement contains a magic number: if (++this._offset == 16) {  	ProcessBlock ();  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessLength,The following statement contains a magic number: if (this._offset > 14) {  	ProcessBlock ();  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessLength,The following statement contains a magic number: X [14] = (uint)((ulong)bitLength >> 32);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessLength,The following statement contains a magic number: X [14] = (uint)((ulong)bitLength >> 32);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessLength,The following statement contains a magic number: X [15] = (uint)((ulong)bitLength);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessBlock,The following statement contains a magic number: for (int ti = 16; ti <= 63; ti++) {  	X [ti] = Theta1 (X [ti - 2]) + X [ti - 7] + Theta0 (X [ti - 15]) + X [ti - 16];  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessBlock,The following statement contains a magic number: for (int ti = 16; ti <= 63; ti++) {  	X [ti] = Theta1 (X [ti - 2]) + X [ti - 7] + Theta0 (X [ti - 15]) + X [ti - 16];  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessBlock,The following statement contains a magic number: for (int ti = 16; ti <= 63; ti++) {  	X [ti] = Theta1 (X [ti - 2]) + X [ti - 7] + Theta0 (X [ti - 15]) + X [ti - 16];  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessBlock,The following statement contains a magic number: for (int ti = 16; ti <= 63; ti++) {  	X [ti] = Theta1 (X [ti - 2]) + X [ti - 7] + Theta0 (X [ti - 15]) + X [ti - 16];  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessBlock,The following statement contains a magic number: for (int ti = 16; ti <= 63; ti++) {  	X [ti] = Theta1 (X [ti - 2]) + X [ti - 7] + Theta0 (X [ti - 15]) + X [ti - 16];  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessBlock,The following statement contains a magic number: for (int ti = 16; ti <= 63; ti++) {  	X [ti] = Theta1 (X [ti - 2]) + X [ti - 7] + Theta0 (X [ti - 15]) + X [ti - 16];  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessBlock,The following statement contains a magic number: X [ti] = Theta1 (X [ti - 2]) + X [ti - 7] + Theta0 (X [ti - 15]) + X [ti - 16];  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessBlock,The following statement contains a magic number: X [ti] = Theta1 (X [ti - 2]) + X [ti - 7] + Theta0 (X [ti - 15]) + X [ti - 16];  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessBlock,The following statement contains a magic number: X [ti] = Theta1 (X [ti - 2]) + X [ti - 7] + Theta0 (X [ti - 15]) + X [ti - 16];  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessBlock,The following statement contains a magic number: X [ti] = Theta1 (X [ti - 2]) + X [ti - 7] + Theta0 (X [ti - 15]) + X [ti - 16];  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,ProcessBlock,The following statement contains a magic number: for (int i = 0; i < 8; ++i) {  	// t = 8 * i  	h += Sum1Ch (e' f' g) + K [t] + X [t];  	d += h;  	h += Sum0Maj (a' b' c);  	++t;  	// t = 8 * i + 1  	g += Sum1Ch (d' e' f) + K [t] + X [t];  	c += g;  	g += Sum0Maj (h' a' b);  	++t;  	// t = 8 * i + 2  	f += Sum1Ch (c' d' e) + K [t] + X [t];  	b += f;  	f += Sum0Maj (g' h' a);  	++t;  	// t = 8 * i + 3  	e += Sum1Ch (b' c' d) + K [t] + X [t];  	a += e;  	e += Sum0Maj (f' g' h);  	++t;  	// t = 8 * i + 4  	d += Sum1Ch (a' b' c) + K [t] + X [t];  	h += d;  	d += Sum0Maj (e' f' g);  	++t;  	// t = 8 * i + 5  	c += Sum1Ch (h' a' b) + K [t] + X [t];  	g += c;  	c += Sum0Maj (d' e' f);  	++t;  	// t = 8 * i + 6  	b += Sum1Ch (g' h' a) + K [t] + X [t];  	f += b;  	b += Sum0Maj (c' d' e);  	++t;  	// t = 8 * i + 7  	a += Sum1Ch (f' g' h) + K [t] + X [t];  	e += a;  	a += Sum0Maj (b' c' d);  	++t;  }  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Sum1Ch,The following statement contains a magic number: return (((x >> 6) | (x << 26)) ^ ((x >> 11) | (x << 21)) ^ ((x >> 25) | (x << 7))) + ((x & y) ^ ((~x) & z));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Sum1Ch,The following statement contains a magic number: return (((x >> 6) | (x << 26)) ^ ((x >> 11) | (x << 21)) ^ ((x >> 25) | (x << 7))) + ((x & y) ^ ((~x) & z));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Sum1Ch,The following statement contains a magic number: return (((x >> 6) | (x << 26)) ^ ((x >> 11) | (x << 21)) ^ ((x >> 25) | (x << 7))) + ((x & y) ^ ((~x) & z));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Sum1Ch,The following statement contains a magic number: return (((x >> 6) | (x << 26)) ^ ((x >> 11) | (x << 21)) ^ ((x >> 25) | (x << 7))) + ((x & y) ^ ((~x) & z));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Sum1Ch,The following statement contains a magic number: return (((x >> 6) | (x << 26)) ^ ((x >> 11) | (x << 21)) ^ ((x >> 25) | (x << 7))) + ((x & y) ^ ((~x) & z));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Sum1Ch,The following statement contains a magic number: return (((x >> 6) | (x << 26)) ^ ((x >> 11) | (x << 21)) ^ ((x >> 25) | (x << 7))) + ((x & y) ^ ((~x) & z));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Sum0Maj,The following statement contains a magic number: return (((x >> 2) | (x << 30)) ^ ((x >> 13) | (x << 19)) ^ ((x >> 22) | (x << 10))) + ((x & y) ^ (x & z) ^ (y & z));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Sum0Maj,The following statement contains a magic number: return (((x >> 2) | (x << 30)) ^ ((x >> 13) | (x << 19)) ^ ((x >> 22) | (x << 10))) + ((x & y) ^ (x & z) ^ (y & z));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Sum0Maj,The following statement contains a magic number: return (((x >> 2) | (x << 30)) ^ ((x >> 13) | (x << 19)) ^ ((x >> 22) | (x << 10))) + ((x & y) ^ (x & z) ^ (y & z));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Sum0Maj,The following statement contains a magic number: return (((x >> 2) | (x << 30)) ^ ((x >> 13) | (x << 19)) ^ ((x >> 22) | (x << 10))) + ((x & y) ^ (x & z) ^ (y & z));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Sum0Maj,The following statement contains a magic number: return (((x >> 2) | (x << 30)) ^ ((x >> 13) | (x << 19)) ^ ((x >> 22) | (x << 10))) + ((x & y) ^ (x & z) ^ (y & z));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Sum0Maj,The following statement contains a magic number: return (((x >> 2) | (x << 30)) ^ ((x >> 13) | (x << 19)) ^ ((x >> 22) | (x << 10))) + ((x & y) ^ (x & z) ^ (y & z));  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Theta0,The following statement contains a magic number: return ((x >> 7) | (x << 25)) ^ ((x >> 18) | (x << 14)) ^ (x >> 3);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Theta0,The following statement contains a magic number: return ((x >> 7) | (x << 25)) ^ ((x >> 18) | (x << 14)) ^ (x >> 3);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Theta0,The following statement contains a magic number: return ((x >> 7) | (x << 25)) ^ ((x >> 18) | (x << 14)) ^ (x >> 3);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Theta0,The following statement contains a magic number: return ((x >> 7) | (x << 25)) ^ ((x >> 18) | (x << 14)) ^ (x >> 3);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Theta0,The following statement contains a magic number: return ((x >> 7) | (x << 25)) ^ ((x >> 18) | (x << 14)) ^ (x >> 3);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Theta1,The following statement contains a magic number: return ((x >> 17) | (x << 15)) ^ ((x >> 19) | (x << 13)) ^ (x >> 10);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Theta1,The following statement contains a magic number: return ((x >> 17) | (x << 15)) ^ ((x >> 19) | (x << 13)) ^ (x >> 10);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Theta1,The following statement contains a magic number: return ((x >> 17) | (x << 15)) ^ ((x >> 19) | (x << 13)) ^ (x >> 10);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Theta1,The following statement contains a magic number: return ((x >> 17) | (x << 15)) ^ ((x >> 19) | (x << 13)) ^ (x >> 10);  
Magic Number,Renci.SshNet.Security.Cryptography,SHA256Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA256Hash.cs,Theta1,The following statement contains a magic number: return ((x >> 17) | (x << 15)) ^ ((x >> 19) | (x << 13)) ^ (x >> 10);  
Magic Number,Renci.SshNet.Security.Cryptography,HMac,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\HMac.cs,HashFinal,The following statement contains a magic number: return this._hash.Hash.Take (this.HashSize / 8).ToArray ();  
Magic Number,Renci.SshNet.Security,KeyExchangeDiffieHellmanGroupSha1,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\KeyExchangeDiffieHellmanGroupSha1.cs,Start,The following statement contains a magic number: this._group = new BigInteger (new byte[] {  	2  });  
Magic Number,Renci.SshNet.Security,DsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\DsaKey.cs,DsaKey,The following statement contains a magic number: this._privateKey = new BigInteger[5];  
Magic Number,Renci.SshNet.Security,DsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\DsaKey.cs,DsaKey,The following statement contains a magic number: if (this._privateKey.Length != 5)  	throw new InvalidOperationException ("Invalid private key.");  
Magic Number,Renci.SshNet.Security,DsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\DsaKey.cs,DsaKey,The following statement contains a magic number: this._privateKey = new BigInteger[5];  
Magic Number,Renci.SshNet.Security,DsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\DsaKey.cs,DsaKey,The following statement contains a magic number: this._privateKey [2] = g;  
Magic Number,Renci.SshNet.Security,DsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\DsaKey.cs,DsaKey,The following statement contains a magic number: this._privateKey [3] = y;  
Magic Number,Renci.SshNet.Security,DsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\DsaKey.cs,DsaKey,The following statement contains a magic number: this._privateKey [4] = x;  
Magic Number,Renci.SshNet.Security,RsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\RsaKey.cs,RsaKey,The following statement contains a magic number: if (this._privateKey.Length != 8)  	throw new InvalidOperationException ("Invalid private key.");  
Magic Number,Renci.SshNet.Security,RsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\RsaKey.cs,RsaKey,The following statement contains a magic number: this._privateKey = new BigInteger[8];  
Magic Number,Renci.SshNet.Security,RsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\RsaKey.cs,RsaKey,The following statement contains a magic number: this._privateKey [2] = d;  
Magic Number,Renci.SshNet.Security,RsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\RsaKey.cs,RsaKey,The following statement contains a magic number: this._privateKey [3] = p;  
Magic Number,Renci.SshNet.Security,RsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\RsaKey.cs,RsaKey,The following statement contains a magic number: this._privateKey [4] = q;  
Magic Number,Renci.SshNet.Security,RsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\RsaKey.cs,RsaKey,The following statement contains a magic number: this._privateKey [5] = PrimeExponent (d' p);  
Magic Number,Renci.SshNet.Security,RsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\RsaKey.cs,RsaKey,The following statement contains a magic number: this._privateKey [6] = PrimeExponent (d' q);  
Magic Number,Renci.SshNet.Security,RsaKey,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\RsaKey.cs,RsaKey,The following statement contains a magic number: this._privateKey [7] = inverseQ;  
Magic Number,Renci.SshNet.Security,KeyExchange,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\KeyExchange.cs,CreateServerCipher,The following statement contains a magic number: serverKey = this.GenerateSessionKey (this.SharedKey' this.ExchangeHash' serverKey' this._serverCipherInfo.KeySize / 8);  
Magic Number,Renci.SshNet.Security,KeyExchange,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\KeyExchange.cs,CreateClientCipher,The following statement contains a magic number: clientKey = this.GenerateSessionKey (this.SharedKey' this.ExchangeHash' clientKey' this._clientCipherInfo.KeySize / 8);  
Magic Number,Renci.SshNet.Security,KeyExchange,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\KeyExchange.cs,CreateServerHash,The following statement contains a magic number: serverKey = this.GenerateSessionKey (this.SharedKey' this.ExchangeHash' serverKey' this._serverHashInfo.KeySize / 8);  
Magic Number,Renci.SshNet.Security,KeyExchange,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\KeyExchange.cs,CreateClientHash,The following statement contains a magic number: clientKey = this.GenerateSessionKey (this.SharedKey' this.ExchangeHash' clientKey' this._clientHashInfo.KeySize / 8);  
Magic Number,Renci.SshNet.Security,KeyExchangeDiffieHellmanGroupExchangeSha1,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\KeyExchangeDiffieHellmanGroupExchangeSha1.cs,Start,The following statement contains a magic number: this.SendMessage (new KeyExchangeDhGroupExchangeRequest (1024' 1024' 1024));  
Magic Number,Renci.SshNet.Security,KeyExchangeDiffieHellmanGroupExchangeSha1,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\KeyExchangeDiffieHellmanGroupExchangeSha1.cs,Start,The following statement contains a magic number: this.SendMessage (new KeyExchangeDhGroupExchangeRequest (1024' 1024' 1024));  
Magic Number,Renci.SshNet.Security,KeyExchangeDiffieHellmanGroupExchangeSha1,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\KeyExchangeDiffieHellmanGroupExchangeSha1.cs,Start,The following statement contains a magic number: this.SendMessage (new KeyExchangeDhGroupExchangeRequest (1024' 1024' 1024));  
Magic Number,Renci.SshNet.Security,KeyExchangeDiffieHellmanGroupExchangeSha256,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\KeyExchangeDiffieHellmanGroupExchangeSha256.cs,Start,The following statement contains a magic number: this.SendMessage (new KeyExchangeDhGroupExchangeRequest (1024' 1024' 1024));  
Magic Number,Renci.SshNet.Security,KeyExchangeDiffieHellmanGroupExchangeSha256,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\KeyExchangeDiffieHellmanGroupExchangeSha256.cs,Start,The following statement contains a magic number: this.SendMessage (new KeyExchangeDhGroupExchangeRequest (1024' 1024' 1024));  
Magic Number,Renci.SshNet.Security,KeyExchangeDiffieHellmanGroupExchangeSha256,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\KeyExchangeDiffieHellmanGroupExchangeSha256.cs,Start,The following statement contains a magic number: this.SendMessage (new KeyExchangeDhGroupExchangeRequest (1024' 1024' 1024));  
Magic Number,Renci.SshNet.Messages.Connection,PseudoTerminalRequestInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Connection\ChannelRequest\PseudoTerminalInfo.cs,SaveData,The following statement contains a magic number: if (this.TerminalModeValues != null) {  	this.Write ((uint)this.TerminalModeValues.Count * (1 + 4) + 1);  	foreach (var item in this.TerminalModeValues) {  		this.Write ((byte)item.Key);  		this.Write (item.Value);  	}  	this.Write ((byte)0);  }  else {  	this.Write ((uint)0);  }  
Magic Number,Renci.SshNet.Messages.Connection,PseudoTerminalRequestInfo,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Messages\Connection\ChannelRequest\PseudoTerminalInfo.cs,SaveData,The following statement contains a magic number: this.Write ((uint)this.TerminalModeValues.Count * (1 + 4) + 1);  
Magic Number,Renci.SshNet.NetConf,NetConfSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Netconf\NetConfSession.cs,SendReceiveRpc,The following statement contains a magic number: if (_usingFramingProtocol) {  	StringBuilder command = new StringBuilder (rpc.InnerXml.Length + 10);  	command.AppendFormat ("\n#{0}\n"' rpc.InnerXml.Length);  	command.Append (rpc.InnerXml);  	command.Append ("\n##\n");  	this.SendData (Encoding.UTF8.GetBytes (command.ToString ()));  	this.WaitHandle (this._rpcReplyReceived' this._operationTimeout);  	reply.LoadXml (_rpcReply.ToString ());  }  else {  	this.SendData (Encoding.UTF8.GetBytes (rpc.InnerXml + _prompt));  	this.WaitHandle (this._rpcReplyReceived' this._operationTimeout);  	reply.LoadXml (_rpcReply.ToString ());  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,AesCipher,The following statement contains a magic number: if (!(keySize == 256 || keySize == 192 || keySize == 128))  	throw new ArgumentException (string.Format (CultureInfo.CurrentCulture' "KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,AesCipher,The following statement contains a magic number: if (!(keySize == 256 || keySize == 192 || keySize == 128))  	throw new ArgumentException (string.Format (CultureInfo.CurrentCulture' "KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,AesCipher,The following statement contains a magic number: if (!(keySize == 256 || keySize == 192 || keySize == 128))  	throw new ArgumentException (string.Format (CultureInfo.CurrentCulture' "KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: if ((inputOffset + (32 / 2)) > inputBuffer.Length) {  	throw new IndexOutOfRangeException ("input buffer too short");  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: if ((inputOffset + (32 / 2)) > inputBuffer.Length) {  	throw new IndexOutOfRangeException ("input buffer too short");  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: if ((outputOffset + (32 / 2)) > outputBuffer.Length) {  	throw new IndexOutOfRangeException ("output buffer too short");  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: if ((outputOffset + (32 / 2)) > outputBuffer.Length) {  	throw new IndexOutOfRangeException ("output buffer too short");  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: if ((inputOffset + (32 / 2)) > inputBuffer.Length) {  	throw new IndexOutOfRangeException ("input buffer too short");  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: if ((inputOffset + (32 / 2)) > inputBuffer.Length) {  	throw new IndexOutOfRangeException ("input buffer too short");  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: if ((outputOffset + (32 / 2)) > outputBuffer.Length) {  	throw new IndexOutOfRangeException ("output buffer too short");  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: if ((outputOffset + (32 / 2)) > outputBuffer.Length) {  	throw new IndexOutOfRangeException ("output buffer too short");  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if (((KC != 4) && (KC != 6) && (KC != 8)) || ((KC * 4) != key.Length))  	throw new ArgumentException ("Key length not 128/192/256 bits.");  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if (((KC != 4) && (KC != 6) && (KC != 8)) || ((KC * 4) != key.Length))  	throw new ArgumentException ("Key length not 128/192/256 bits.");  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if (((KC != 4) && (KC != 6) && (KC != 8)) || ((KC * 4) != key.Length))  	throw new ArgumentException ("Key length not 128/192/256 bits.");  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if (((KC != 4) && (KC != 6) && (KC != 8)) || ((KC * 4) != key.Length))  	throw new ArgumentException ("Key length not 128/192/256 bits.");  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: _rounds = KC + 6;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < key.Length; t++) {  	W [(t >> 2) * 4 + (t & 3)] = LittleEndianToUInt32 (key' i);  	i += 4;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < key.Length; t++) {  	W [(t >> 2) * 4 + (t & 3)] = LittleEndianToUInt32 (key' i);  	i += 4;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < key.Length; t++) {  	W [(t >> 2) * 4 + (t & 3)] = LittleEndianToUInt32 (key' i);  	i += 4;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < key.Length; t++) {  	W [(t >> 2) * 4 + (t & 3)] = LittleEndianToUInt32 (key' i);  	i += 4;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: W [(t >> 2) * 4 + (t & 3)] = LittleEndianToUInt32 (key' i);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: W [(t >> 2) * 4 + (t & 3)] = LittleEndianToUInt32 (key' i);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: W [(t >> 2) * 4 + (t & 3)] = LittleEndianToUInt32 (key' i);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: i += 4;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = KC; (i < k); i++) {  	uint temp = W [((i - 1) >> 2) * 4 + ((i - 1) & 3)];  	if ((i % KC) == 0) {  		temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  	}  	else if ((KC > 6) && ((i % KC) == 4)) {  		temp = SubWord (temp);  	}  	W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = KC; (i < k); i++) {  	uint temp = W [((i - 1) >> 2) * 4 + ((i - 1) & 3)];  	if ((i % KC) == 0) {  		temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  	}  	else if ((KC > 6) && ((i % KC) == 4)) {  		temp = SubWord (temp);  	}  	W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = KC; (i < k); i++) {  	uint temp = W [((i - 1) >> 2) * 4 + ((i - 1) & 3)];  	if ((i % KC) == 0) {  		temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  	}  	else if ((KC > 6) && ((i % KC) == 4)) {  		temp = SubWord (temp);  	}  	W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = KC; (i < k); i++) {  	uint temp = W [((i - 1) >> 2) * 4 + ((i - 1) & 3)];  	if ((i % KC) == 0) {  		temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  	}  	else if ((KC > 6) && ((i % KC) == 4)) {  		temp = SubWord (temp);  	}  	W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = KC; (i < k); i++) {  	uint temp = W [((i - 1) >> 2) * 4 + ((i - 1) & 3)];  	if ((i % KC) == 0) {  		temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  	}  	else if ((KC > 6) && ((i % KC) == 4)) {  		temp = SubWord (temp);  	}  	W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = KC; (i < k); i++) {  	uint temp = W [((i - 1) >> 2) * 4 + ((i - 1) & 3)];  	if ((i % KC) == 0) {  		temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  	}  	else if ((KC > 6) && ((i % KC) == 4)) {  		temp = SubWord (temp);  	}  	W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = KC; (i < k); i++) {  	uint temp = W [((i - 1) >> 2) * 4 + ((i - 1) & 3)];  	if ((i % KC) == 0) {  		temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  	}  	else if ((KC > 6) && ((i % KC) == 4)) {  		temp = SubWord (temp);  	}  	W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = KC; (i < k); i++) {  	uint temp = W [((i - 1) >> 2) * 4 + ((i - 1) & 3)];  	if ((i % KC) == 0) {  		temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  	}  	else if ((KC > 6) && ((i % KC) == 4)) {  		temp = SubWord (temp);  	}  	W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = KC; (i < k); i++) {  	uint temp = W [((i - 1) >> 2) * 4 + ((i - 1) & 3)];  	if ((i % KC) == 0) {  		temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  	}  	else if ((KC > 6) && ((i % KC) == 4)) {  		temp = SubWord (temp);  	}  	W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = KC; (i < k); i++) {  	uint temp = W [((i - 1) >> 2) * 4 + ((i - 1) & 3)];  	if ((i % KC) == 0) {  		temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  	}  	else if ((KC > 6) && ((i % KC) == 4)) {  		temp = SubWord (temp);  	}  	W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = KC; (i < k); i++) {  	uint temp = W [((i - 1) >> 2) * 4 + ((i - 1) & 3)];  	if ((i % KC) == 0) {  		temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  	}  	else if ((KC > 6) && ((i % KC) == 4)) {  		temp = SubWord (temp);  	}  	W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = KC; (i < k); i++) {  	uint temp = W [((i - 1) >> 2) * 4 + ((i - 1) & 3)];  	if ((i % KC) == 0) {  		temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  	}  	else if ((KC > 6) && ((i % KC) == 4)) {  		temp = SubWord (temp);  	}  	W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if ((i % KC) == 0) {  	temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  }  else if ((KC > 6) && ((i % KC) == 4)) {  	temp = SubWord (temp);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if ((i % KC) == 0) {  	temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  }  else if ((KC > 6) && ((i % KC) == 4)) {  	temp = SubWord (temp);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if ((i % KC) == 0) {  	temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  }  else if ((KC > 6) && ((i % KC) == 4)) {  	temp = SubWord (temp);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: temp = SubWord (Shift (temp' 8)) ^ rcon [(i / KC) - 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if ((KC > 6) && ((i % KC) == 4)) {  	temp = SubWord (temp);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if ((KC > 6) && ((i % KC) == 4)) {  	temp = SubWord (temp);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: W [(i >> 2) * 4 + (i & 3)] = W [((i - KC) >> 2) * 4 + ((i - KC) & 3)] ^ temp;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if (!isEncryption) {  	for (int j = 1; j < _rounds; j++) {  		for (int i = 0; i < 4; i++) {  			W [j * 4 + i] = InvMcol (W [j * 4 + i]);  		}  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if (!isEncryption) {  	for (int j = 1; j < _rounds; j++) {  		for (int i = 0; i < 4; i++) {  			W [j * 4 + i] = InvMcol (W [j * 4 + i]);  		}  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if (!isEncryption) {  	for (int j = 1; j < _rounds; j++) {  		for (int i = 0; i < 4; i++) {  			W [j * 4 + i] = InvMcol (W [j * 4 + i]);  		}  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 1; j < _rounds; j++) {  	for (int i = 0; i < 4; i++) {  		W [j * 4 + i] = InvMcol (W [j * 4 + i]);  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 1; j < _rounds; j++) {  	for (int i = 0; i < 4; i++) {  		W [j * 4 + i] = InvMcol (W [j * 4 + i]);  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 1; j < _rounds; j++) {  	for (int i = 0; i < 4; i++) {  		W [j * 4 + i] = InvMcol (W [j * 4 + i]);  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	W [j * 4 + i] = InvMcol (W [j * 4 + i]);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	W [j * 4 + i] = InvMcol (W [j * 4 + i]);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	W [j * 4 + i] = InvMcol (W [j * 4 + i]);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: W [j * 4 + i] = InvMcol (W [j * 4 + i]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: W [j * 4 + i] = InvMcol (W [j * 4 + i]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,Shift,The following statement contains a magic number: return (r >> shift) | (r << (32 - shift));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,FFmulX,The following statement contains a magic number: return ((x & m2) << 1) ^ (((x & m1) >> 7) * m3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,InvMcol,The following statement contains a magic number: return f2 ^ f4 ^ f8 ^ Shift (f2 ^ f9' 8) ^ Shift (f4 ^ f9' 16) ^ Shift (f9' 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,InvMcol,The following statement contains a magic number: return f2 ^ f4 ^ f8 ^ Shift (f2 ^ f9' 8) ^ Shift (f4 ^ f9' 16) ^ Shift (f9' 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,InvMcol,The following statement contains a magic number: return f2 ^ f4 ^ f8 ^ Shift (f2 ^ f9' 8) ^ Shift (f4 ^ f9' 16) ^ Shift (f9' 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,SubWord,The following statement contains a magic number: return (uint)S [x & 255] | (((uint)S [(x >> 8) & 255]) << 8) | (((uint)S [(x >> 16) & 255]) << 16) | (((uint)S [(x >> 24) & 255]) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,SubWord,The following statement contains a magic number: return (uint)S [x & 255] | (((uint)S [(x >> 8) & 255]) << 8) | (((uint)S [(x >> 16) & 255]) << 16) | (((uint)S [(x >> 24) & 255]) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,SubWord,The following statement contains a magic number: return (uint)S [x & 255] | (((uint)S [(x >> 8) & 255]) << 8) | (((uint)S [(x >> 16) & 255]) << 16) | (((uint)S [(x >> 24) & 255]) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,SubWord,The following statement contains a magic number: return (uint)S [x & 255] | (((uint)S [(x >> 8) & 255]) << 8) | (((uint)S [(x >> 16) & 255]) << 16) | (((uint)S [(x >> 24) & 255]) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,SubWord,The following statement contains a magic number: return (uint)S [x & 255] | (((uint)S [(x >> 8) & 255]) << 8) | (((uint)S [(x >> 16) & 255]) << 16) | (((uint)S [(x >> 24) & 255]) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,SubWord,The following statement contains a magic number: return (uint)S [x & 255] | (((uint)S [(x >> 8) & 255]) << 8) | (((uint)S [(x >> 16) & 255]) << 16) | (((uint)S [(x >> 24) & 255]) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,SubWord,The following statement contains a magic number: return (uint)S [x & 255] | (((uint)S [(x >> 8) & 255]) << 8) | (((uint)S [(x >> 16) & 255]) << 16) | (((uint)S [(x >> 24) & 255]) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,SubWord,The following statement contains a magic number: return (uint)S [x & 255] | (((uint)S [(x >> 8) & 255]) << 8) | (((uint)S [(x >> 16) & 255]) << 16) | (((uint)S [(x >> 24) & 255]) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,SubWord,The following statement contains a magic number: return (uint)S [x & 255] | (((uint)S [(x >> 8) & 255]) << 8) | (((uint)S [(x >> 16) & 255]) << 16) | (((uint)S [(x >> 24) & 255]) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,SubWord,The following statement contains a magic number: return (uint)S [x & 255] | (((uint)S [(x >> 8) & 255]) << 8) | (((uint)S [(x >> 16) & 255]) << 16) | (((uint)S [(x >> 24) & 255]) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,UnPackBlock,The following statement contains a magic number: C1 = LittleEndianToUInt32 (bytes' off + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,UnPackBlock,The following statement contains a magic number: C2 = LittleEndianToUInt32 (bytes' off + 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,UnPackBlock,The following statement contains a magic number: C3 = LittleEndianToUInt32 (bytes' off + 12);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,PackBlock,The following statement contains a magic number: UInt32ToLittleEndian (C1' bytes' off + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,PackBlock,The following statement contains a magic number: UInt32ToLittleEndian (C2' bytes' off + 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,PackBlock,The following statement contains a magic number: UInt32ToLittleEndian (C3' bytes' off + 12);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 ^= KW [0 * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 ^= KW [0 * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 ^= KW [0 * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 ^= KW [0 * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 ^= KW [0 * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 ^= KW [0 * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: for (r = 1; r < _rounds - 1;) {  	r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  	r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  	r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  	r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  	C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  	C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  	C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  	C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = T0 [r0 & 255] ^ T1 [(r1 >> 8) & 255] ^ T2 [(r2 >> 16) & 255] ^ T3 [r3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = T0 [r1 & 255] ^ T1 [(r2 >> 8) & 255] ^ T2 [(r3 >> 16) & 255] ^ T3 [r0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = T0 [r2 & 255] ^ T1 [(r3 >> 8) & 255] ^ T2 [(r0 >> 16) & 255] ^ T3 [r1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = T0 [r3 & 255] ^ T1 [(r0 >> 8) & 255] ^ T2 [(r1 >> 16) & 255] ^ T3 [r2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r0 = T0 [C0 & 255] ^ T1 [(C1 >> 8) & 255] ^ T2 [(C2 >> 16) & 255] ^ T3 [C3 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r1 = T0 [C1 & 255] ^ T1 [(C2 >> 8) & 255] ^ T2 [(C3 >> 16) & 255] ^ T3 [C0 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r2 = T0 [C2 & 255] ^ T1 [(C3 >> 8) & 255] ^ T2 [(C0 >> 16) & 255] ^ T3 [C1 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: r3 = T0 [C3 & 255] ^ T1 [(C0 >> 8) & 255] ^ T2 [(C1 >> 16) & 255] ^ T3 [C2 >> 24] ^ KW [r++ * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = (uint)S [r0 & 255] ^ (((uint)S [(r1 >> 8) & 255]) << 8) ^ (((uint)S [(r2 >> 16) & 255]) << 16) ^ (((uint)S [r3 >> 24]) << 24) ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = (uint)S [r0 & 255] ^ (((uint)S [(r1 >> 8) & 255]) << 8) ^ (((uint)S [(r2 >> 16) & 255]) << 16) ^ (((uint)S [r3 >> 24]) << 24) ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = (uint)S [r0 & 255] ^ (((uint)S [(r1 >> 8) & 255]) << 8) ^ (((uint)S [(r2 >> 16) & 255]) << 16) ^ (((uint)S [r3 >> 24]) << 24) ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = (uint)S [r0 & 255] ^ (((uint)S [(r1 >> 8) & 255]) << 8) ^ (((uint)S [(r2 >> 16) & 255]) << 16) ^ (((uint)S [r3 >> 24]) << 24) ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = (uint)S [r0 & 255] ^ (((uint)S [(r1 >> 8) & 255]) << 8) ^ (((uint)S [(r2 >> 16) & 255]) << 16) ^ (((uint)S [r3 >> 24]) << 24) ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = (uint)S [r0 & 255] ^ (((uint)S [(r1 >> 8) & 255]) << 8) ^ (((uint)S [(r2 >> 16) & 255]) << 16) ^ (((uint)S [r3 >> 24]) << 24) ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = (uint)S [r0 & 255] ^ (((uint)S [(r1 >> 8) & 255]) << 8) ^ (((uint)S [(r2 >> 16) & 255]) << 16) ^ (((uint)S [r3 >> 24]) << 24) ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = (uint)S [r0 & 255] ^ (((uint)S [(r1 >> 8) & 255]) << 8) ^ (((uint)S [(r2 >> 16) & 255]) << 16) ^ (((uint)S [r3 >> 24]) << 24) ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = (uint)S [r0 & 255] ^ (((uint)S [(r1 >> 8) & 255]) << 8) ^ (((uint)S [(r2 >> 16) & 255]) << 16) ^ (((uint)S [r3 >> 24]) << 24) ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C0 = (uint)S [r0 & 255] ^ (((uint)S [(r1 >> 8) & 255]) << 8) ^ (((uint)S [(r2 >> 16) & 255]) << 16) ^ (((uint)S [r3 >> 24]) << 24) ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = (uint)S [r1 & 255] ^ (((uint)S [(r2 >> 8) & 255]) << 8) ^ (((uint)S [(r3 >> 16) & 255]) << 16) ^ (((uint)S [r0 >> 24]) << 24) ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = (uint)S [r1 & 255] ^ (((uint)S [(r2 >> 8) & 255]) << 8) ^ (((uint)S [(r3 >> 16) & 255]) << 16) ^ (((uint)S [r0 >> 24]) << 24) ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = (uint)S [r1 & 255] ^ (((uint)S [(r2 >> 8) & 255]) << 8) ^ (((uint)S [(r3 >> 16) & 255]) << 16) ^ (((uint)S [r0 >> 24]) << 24) ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = (uint)S [r1 & 255] ^ (((uint)S [(r2 >> 8) & 255]) << 8) ^ (((uint)S [(r3 >> 16) & 255]) << 16) ^ (((uint)S [r0 >> 24]) << 24) ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = (uint)S [r1 & 255] ^ (((uint)S [(r2 >> 8) & 255]) << 8) ^ (((uint)S [(r3 >> 16) & 255]) << 16) ^ (((uint)S [r0 >> 24]) << 24) ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = (uint)S [r1 & 255] ^ (((uint)S [(r2 >> 8) & 255]) << 8) ^ (((uint)S [(r3 >> 16) & 255]) << 16) ^ (((uint)S [r0 >> 24]) << 24) ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = (uint)S [r1 & 255] ^ (((uint)S [(r2 >> 8) & 255]) << 8) ^ (((uint)S [(r3 >> 16) & 255]) << 16) ^ (((uint)S [r0 >> 24]) << 24) ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = (uint)S [r1 & 255] ^ (((uint)S [(r2 >> 8) & 255]) << 8) ^ (((uint)S [(r3 >> 16) & 255]) << 16) ^ (((uint)S [r0 >> 24]) << 24) ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = (uint)S [r1 & 255] ^ (((uint)S [(r2 >> 8) & 255]) << 8) ^ (((uint)S [(r3 >> 16) & 255]) << 16) ^ (((uint)S [r0 >> 24]) << 24) ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C1 = (uint)S [r1 & 255] ^ (((uint)S [(r2 >> 8) & 255]) << 8) ^ (((uint)S [(r3 >> 16) & 255]) << 16) ^ (((uint)S [r0 >> 24]) << 24) ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = (uint)S [r2 & 255] ^ (((uint)S [(r3 >> 8) & 255]) << 8) ^ (((uint)S [(r0 >> 16) & 255]) << 16) ^ (((uint)S [r1 >> 24]) << 24) ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = (uint)S [r2 & 255] ^ (((uint)S [(r3 >> 8) & 255]) << 8) ^ (((uint)S [(r0 >> 16) & 255]) << 16) ^ (((uint)S [r1 >> 24]) << 24) ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = (uint)S [r2 & 255] ^ (((uint)S [(r3 >> 8) & 255]) << 8) ^ (((uint)S [(r0 >> 16) & 255]) << 16) ^ (((uint)S [r1 >> 24]) << 24) ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = (uint)S [r2 & 255] ^ (((uint)S [(r3 >> 8) & 255]) << 8) ^ (((uint)S [(r0 >> 16) & 255]) << 16) ^ (((uint)S [r1 >> 24]) << 24) ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = (uint)S [r2 & 255] ^ (((uint)S [(r3 >> 8) & 255]) << 8) ^ (((uint)S [(r0 >> 16) & 255]) << 16) ^ (((uint)S [r1 >> 24]) << 24) ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = (uint)S [r2 & 255] ^ (((uint)S [(r3 >> 8) & 255]) << 8) ^ (((uint)S [(r0 >> 16) & 255]) << 16) ^ (((uint)S [r1 >> 24]) << 24) ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = (uint)S [r2 & 255] ^ (((uint)S [(r3 >> 8) & 255]) << 8) ^ (((uint)S [(r0 >> 16) & 255]) << 16) ^ (((uint)S [r1 >> 24]) << 24) ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = (uint)S [r2 & 255] ^ (((uint)S [(r3 >> 8) & 255]) << 8) ^ (((uint)S [(r0 >> 16) & 255]) << 16) ^ (((uint)S [r1 >> 24]) << 24) ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = (uint)S [r2 & 255] ^ (((uint)S [(r3 >> 8) & 255]) << 8) ^ (((uint)S [(r0 >> 16) & 255]) << 16) ^ (((uint)S [r1 >> 24]) << 24) ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = (uint)S [r2 & 255] ^ (((uint)S [(r3 >> 8) & 255]) << 8) ^ (((uint)S [(r0 >> 16) & 255]) << 16) ^ (((uint)S [r1 >> 24]) << 24) ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C2 = (uint)S [r2 & 255] ^ (((uint)S [(r3 >> 8) & 255]) << 8) ^ (((uint)S [(r0 >> 16) & 255]) << 16) ^ (((uint)S [r1 >> 24]) << 24) ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = (uint)S [r3 & 255] ^ (((uint)S [(r0 >> 8) & 255]) << 8) ^ (((uint)S [(r1 >> 16) & 255]) << 16) ^ (((uint)S [r2 >> 24]) << 24) ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = (uint)S [r3 & 255] ^ (((uint)S [(r0 >> 8) & 255]) << 8) ^ (((uint)S [(r1 >> 16) & 255]) << 16) ^ (((uint)S [r2 >> 24]) << 24) ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = (uint)S [r3 & 255] ^ (((uint)S [(r0 >> 8) & 255]) << 8) ^ (((uint)S [(r1 >> 16) & 255]) << 16) ^ (((uint)S [r2 >> 24]) << 24) ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = (uint)S [r3 & 255] ^ (((uint)S [(r0 >> 8) & 255]) << 8) ^ (((uint)S [(r1 >> 16) & 255]) << 16) ^ (((uint)S [r2 >> 24]) << 24) ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = (uint)S [r3 & 255] ^ (((uint)S [(r0 >> 8) & 255]) << 8) ^ (((uint)S [(r1 >> 16) & 255]) << 16) ^ (((uint)S [r2 >> 24]) << 24) ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = (uint)S [r3 & 255] ^ (((uint)S [(r0 >> 8) & 255]) << 8) ^ (((uint)S [(r1 >> 16) & 255]) << 16) ^ (((uint)S [r2 >> 24]) << 24) ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = (uint)S [r3 & 255] ^ (((uint)S [(r0 >> 8) & 255]) << 8) ^ (((uint)S [(r1 >> 16) & 255]) << 16) ^ (((uint)S [r2 >> 24]) << 24) ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = (uint)S [r3 & 255] ^ (((uint)S [(r0 >> 8) & 255]) << 8) ^ (((uint)S [(r1 >> 16) & 255]) << 16) ^ (((uint)S [r2 >> 24]) << 24) ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = (uint)S [r3 & 255] ^ (((uint)S [(r0 >> 8) & 255]) << 8) ^ (((uint)S [(r1 >> 16) & 255]) << 16) ^ (((uint)S [r2 >> 24]) << 24) ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = (uint)S [r3 & 255] ^ (((uint)S [(r0 >> 8) & 255]) << 8) ^ (((uint)S [(r1 >> 16) & 255]) << 16) ^ (((uint)S [r2 >> 24]) << 24) ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,EncryptBlock,The following statement contains a magic number: C3 = (uint)S [r3 & 255] ^ (((uint)S [(r0 >> 8) & 255]) << 8) ^ (((uint)S [(r1 >> 16) & 255]) << 16) ^ (((uint)S [r2 >> 24]) << 24) ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 ^= KW [_rounds * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 ^= KW [_rounds * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 ^= KW [_rounds * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 ^= KW [_rounds * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 ^= KW [_rounds * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 ^= KW [_rounds * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: for (r = _rounds - 1; r > 1;) {  	r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  	r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  	r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  	r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  	C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  	C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  	C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  	C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = Tinv0 [r0 & 255] ^ Tinv1 [(r3 >> 8) & 255] ^ Tinv2 [(r2 >> 16) & 255] ^ Tinv3 [r1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = Tinv0 [r1 & 255] ^ Tinv1 [(r0 >> 8) & 255] ^ Tinv2 [(r3 >> 16) & 255] ^ Tinv3 [r2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = Tinv0 [r2 & 255] ^ Tinv1 [(r1 >> 8) & 255] ^ Tinv2 [(r0 >> 16) & 255] ^ Tinv3 [r3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = Tinv0 [r3 & 255] ^ Tinv1 [(r2 >> 8) & 255] ^ Tinv2 [(r1 >> 16) & 255] ^ Tinv3 [r0 >> 24] ^ KW [r-- * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r0 = Tinv0 [C0 & 255] ^ Tinv1 [(C3 >> 8) & 255] ^ Tinv2 [(C2 >> 16) & 255] ^ Tinv3 [C1 >> 24] ^ KW [r * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r1 = Tinv0 [C1 & 255] ^ Tinv1 [(C0 >> 8) & 255] ^ Tinv2 [(C3 >> 16) & 255] ^ Tinv3 [C2 >> 24] ^ KW [r * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r2 = Tinv0 [C2 & 255] ^ Tinv1 [(C1 >> 8) & 255] ^ Tinv2 [(C0 >> 16) & 255] ^ Tinv3 [C3 >> 24] ^ KW [r * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: r3 = Tinv0 [C3 & 255] ^ Tinv1 [(C2 >> 8) & 255] ^ Tinv2 [(C1 >> 16) & 255] ^ Tinv3 [C0 >> 24] ^ KW [r * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = (uint)Si [r0 & 255] ^ (((uint)Si [(r3 >> 8) & 255]) << 8) ^ (((uint)Si [(r2 >> 16) & 255]) << 16) ^ (((uint)Si [r1 >> 24]) << 24) ^ KW [0 * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = (uint)Si [r0 & 255] ^ (((uint)Si [(r3 >> 8) & 255]) << 8) ^ (((uint)Si [(r2 >> 16) & 255]) << 16) ^ (((uint)Si [r1 >> 24]) << 24) ^ KW [0 * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = (uint)Si [r0 & 255] ^ (((uint)Si [(r3 >> 8) & 255]) << 8) ^ (((uint)Si [(r2 >> 16) & 255]) << 16) ^ (((uint)Si [r1 >> 24]) << 24) ^ KW [0 * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = (uint)Si [r0 & 255] ^ (((uint)Si [(r3 >> 8) & 255]) << 8) ^ (((uint)Si [(r2 >> 16) & 255]) << 16) ^ (((uint)Si [r1 >> 24]) << 24) ^ KW [0 * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = (uint)Si [r0 & 255] ^ (((uint)Si [(r3 >> 8) & 255]) << 8) ^ (((uint)Si [(r2 >> 16) & 255]) << 16) ^ (((uint)Si [r1 >> 24]) << 24) ^ KW [0 * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = (uint)Si [r0 & 255] ^ (((uint)Si [(r3 >> 8) & 255]) << 8) ^ (((uint)Si [(r2 >> 16) & 255]) << 16) ^ (((uint)Si [r1 >> 24]) << 24) ^ KW [0 * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = (uint)Si [r0 & 255] ^ (((uint)Si [(r3 >> 8) & 255]) << 8) ^ (((uint)Si [(r2 >> 16) & 255]) << 16) ^ (((uint)Si [r1 >> 24]) << 24) ^ KW [0 * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = (uint)Si [r0 & 255] ^ (((uint)Si [(r3 >> 8) & 255]) << 8) ^ (((uint)Si [(r2 >> 16) & 255]) << 16) ^ (((uint)Si [r1 >> 24]) << 24) ^ KW [0 * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = (uint)Si [r0 & 255] ^ (((uint)Si [(r3 >> 8) & 255]) << 8) ^ (((uint)Si [(r2 >> 16) & 255]) << 16) ^ (((uint)Si [r1 >> 24]) << 24) ^ KW [0 * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C0 = (uint)Si [r0 & 255] ^ (((uint)Si [(r3 >> 8) & 255]) << 8) ^ (((uint)Si [(r2 >> 16) & 255]) << 16) ^ (((uint)Si [r1 >> 24]) << 24) ^ KW [0 * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = (uint)Si [r1 & 255] ^ (((uint)Si [(r0 >> 8) & 255]) << 8) ^ (((uint)Si [(r3 >> 16) & 255]) << 16) ^ (((uint)Si [r2 >> 24]) << 24) ^ KW [0 * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = (uint)Si [r1 & 255] ^ (((uint)Si [(r0 >> 8) & 255]) << 8) ^ (((uint)Si [(r3 >> 16) & 255]) << 16) ^ (((uint)Si [r2 >> 24]) << 24) ^ KW [0 * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = (uint)Si [r1 & 255] ^ (((uint)Si [(r0 >> 8) & 255]) << 8) ^ (((uint)Si [(r3 >> 16) & 255]) << 16) ^ (((uint)Si [r2 >> 24]) << 24) ^ KW [0 * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = (uint)Si [r1 & 255] ^ (((uint)Si [(r0 >> 8) & 255]) << 8) ^ (((uint)Si [(r3 >> 16) & 255]) << 16) ^ (((uint)Si [r2 >> 24]) << 24) ^ KW [0 * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = (uint)Si [r1 & 255] ^ (((uint)Si [(r0 >> 8) & 255]) << 8) ^ (((uint)Si [(r3 >> 16) & 255]) << 16) ^ (((uint)Si [r2 >> 24]) << 24) ^ KW [0 * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = (uint)Si [r1 & 255] ^ (((uint)Si [(r0 >> 8) & 255]) << 8) ^ (((uint)Si [(r3 >> 16) & 255]) << 16) ^ (((uint)Si [r2 >> 24]) << 24) ^ KW [0 * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = (uint)Si [r1 & 255] ^ (((uint)Si [(r0 >> 8) & 255]) << 8) ^ (((uint)Si [(r3 >> 16) & 255]) << 16) ^ (((uint)Si [r2 >> 24]) << 24) ^ KW [0 * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = (uint)Si [r1 & 255] ^ (((uint)Si [(r0 >> 8) & 255]) << 8) ^ (((uint)Si [(r3 >> 16) & 255]) << 16) ^ (((uint)Si [r2 >> 24]) << 24) ^ KW [0 * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = (uint)Si [r1 & 255] ^ (((uint)Si [(r0 >> 8) & 255]) << 8) ^ (((uint)Si [(r3 >> 16) & 255]) << 16) ^ (((uint)Si [r2 >> 24]) << 24) ^ KW [0 * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C1 = (uint)Si [r1 & 255] ^ (((uint)Si [(r0 >> 8) & 255]) << 8) ^ (((uint)Si [(r3 >> 16) & 255]) << 16) ^ (((uint)Si [r2 >> 24]) << 24) ^ KW [0 * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = (uint)Si [r2 & 255] ^ (((uint)Si [(r1 >> 8) & 255]) << 8) ^ (((uint)Si [(r0 >> 16) & 255]) << 16) ^ (((uint)Si [r3 >> 24]) << 24) ^ KW [0 * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = (uint)Si [r2 & 255] ^ (((uint)Si [(r1 >> 8) & 255]) << 8) ^ (((uint)Si [(r0 >> 16) & 255]) << 16) ^ (((uint)Si [r3 >> 24]) << 24) ^ KW [0 * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = (uint)Si [r2 & 255] ^ (((uint)Si [(r1 >> 8) & 255]) << 8) ^ (((uint)Si [(r0 >> 16) & 255]) << 16) ^ (((uint)Si [r3 >> 24]) << 24) ^ KW [0 * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = (uint)Si [r2 & 255] ^ (((uint)Si [(r1 >> 8) & 255]) << 8) ^ (((uint)Si [(r0 >> 16) & 255]) << 16) ^ (((uint)Si [r3 >> 24]) << 24) ^ KW [0 * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = (uint)Si [r2 & 255] ^ (((uint)Si [(r1 >> 8) & 255]) << 8) ^ (((uint)Si [(r0 >> 16) & 255]) << 16) ^ (((uint)Si [r3 >> 24]) << 24) ^ KW [0 * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = (uint)Si [r2 & 255] ^ (((uint)Si [(r1 >> 8) & 255]) << 8) ^ (((uint)Si [(r0 >> 16) & 255]) << 16) ^ (((uint)Si [r3 >> 24]) << 24) ^ KW [0 * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = (uint)Si [r2 & 255] ^ (((uint)Si [(r1 >> 8) & 255]) << 8) ^ (((uint)Si [(r0 >> 16) & 255]) << 16) ^ (((uint)Si [r3 >> 24]) << 24) ^ KW [0 * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = (uint)Si [r2 & 255] ^ (((uint)Si [(r1 >> 8) & 255]) << 8) ^ (((uint)Si [(r0 >> 16) & 255]) << 16) ^ (((uint)Si [r3 >> 24]) << 24) ^ KW [0 * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = (uint)Si [r2 & 255] ^ (((uint)Si [(r1 >> 8) & 255]) << 8) ^ (((uint)Si [(r0 >> 16) & 255]) << 16) ^ (((uint)Si [r3 >> 24]) << 24) ^ KW [0 * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = (uint)Si [r2 & 255] ^ (((uint)Si [(r1 >> 8) & 255]) << 8) ^ (((uint)Si [(r0 >> 16) & 255]) << 16) ^ (((uint)Si [r3 >> 24]) << 24) ^ KW [0 * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C2 = (uint)Si [r2 & 255] ^ (((uint)Si [(r1 >> 8) & 255]) << 8) ^ (((uint)Si [(r0 >> 16) & 255]) << 16) ^ (((uint)Si [r3 >> 24]) << 24) ^ KW [0 * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = (uint)Si [r3 & 255] ^ (((uint)Si [(r2 >> 8) & 255]) << 8) ^ (((uint)Si [(r1 >> 16) & 255]) << 16) ^ (((uint)Si [r0 >> 24]) << 24) ^ KW [0 * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = (uint)Si [r3 & 255] ^ (((uint)Si [(r2 >> 8) & 255]) << 8) ^ (((uint)Si [(r1 >> 16) & 255]) << 16) ^ (((uint)Si [r0 >> 24]) << 24) ^ KW [0 * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = (uint)Si [r3 & 255] ^ (((uint)Si [(r2 >> 8) & 255]) << 8) ^ (((uint)Si [(r1 >> 16) & 255]) << 16) ^ (((uint)Si [r0 >> 24]) << 24) ^ KW [0 * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = (uint)Si [r3 & 255] ^ (((uint)Si [(r2 >> 8) & 255]) << 8) ^ (((uint)Si [(r1 >> 16) & 255]) << 16) ^ (((uint)Si [r0 >> 24]) << 24) ^ KW [0 * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = (uint)Si [r3 & 255] ^ (((uint)Si [(r2 >> 8) & 255]) << 8) ^ (((uint)Si [(r1 >> 16) & 255]) << 16) ^ (((uint)Si [r0 >> 24]) << 24) ^ KW [0 * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = (uint)Si [r3 & 255] ^ (((uint)Si [(r2 >> 8) & 255]) << 8) ^ (((uint)Si [(r1 >> 16) & 255]) << 16) ^ (((uint)Si [r0 >> 24]) << 24) ^ KW [0 * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = (uint)Si [r3 & 255] ^ (((uint)Si [(r2 >> 8) & 255]) << 8) ^ (((uint)Si [(r1 >> 16) & 255]) << 16) ^ (((uint)Si [r0 >> 24]) << 24) ^ KW [0 * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = (uint)Si [r3 & 255] ^ (((uint)Si [(r2 >> 8) & 255]) << 8) ^ (((uint)Si [(r1 >> 16) & 255]) << 16) ^ (((uint)Si [r0 >> 24]) << 24) ^ KW [0 * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = (uint)Si [r3 & 255] ^ (((uint)Si [(r2 >> 8) & 255]) << 8) ^ (((uint)Si [(r1 >> 16) & 255]) << 16) ^ (((uint)Si [r0 >> 24]) << 24) ^ KW [0 * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = (uint)Si [r3 & 255] ^ (((uint)Si [(r2 >> 8) & 255]) << 8) ^ (((uint)Si [(r1 >> 16) & 255]) << 16) ^ (((uint)Si [r0 >> 24]) << 24) ^ KW [0 * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,AesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\AesCipher.cs,DecryptBlock,The following statement contains a magic number: C3 = (uint)Si [r3 & 255] ^ (((uint)Si [(r2 >> 8) & 255]) << 8) ^ (((uint)Si [(r1 >> 16) & 255]) << 16) ^ (((uint)Si [r0 >> 24]) << 24) ^ KW [0 * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,Arc4Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\Arc4Cipher.cs,Arc4Cipher,The following statement contains a magic number: if (dischargeFirstBytes)  	this.Encrypt (new byte[1536]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,Arc4Cipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\Arc4Cipher.cs,Arc4Cipher,The following statement contains a magic number: this.Encrypt (new byte[1536]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,BlowfishCipher,The following statement contains a magic number: if (keySize < 1 || keySize > 448)  	throw new ArgumentException (string.Format ("KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,EncryptBlock,The following statement contains a magic number: for (int i = 1; i < _rounds; i += 2) {  	xr ^= F (xl) ^ this._p [i];  	xl ^= F (xr) ^ this._p [i + 1];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,EncryptBlock,The following statement contains a magic number: i += 2
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,EncryptBlock,The following statement contains a magic number: UInt32ToBigEndian (xl' outputBuffer' outputOffset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,DecryptBlock,The following statement contains a magic number: for (int i = _rounds; i > 0; i -= 2) {  	xr ^= F (xl) ^ this._p [i];  	xl ^= F (xr) ^ this._p [i - 1];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,DecryptBlock,The following statement contains a magic number: i -= 2
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,DecryptBlock,The following statement contains a magic number: UInt32ToBigEndian (xl' outputBuffer' outputOffset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,F,The following statement contains a magic number: return (((this._s0 [x >> 24] + this._s1 [(x >> 16) & 0xff]) ^ this._s2 [(x >> 8) & 0xff]) + this._s3 [x & 0xff]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,F,The following statement contains a magic number: return (((this._s0 [x >> 24] + this._s1 [(x >> 16) & 0xff]) ^ this._s2 [(x >> 8) & 0xff]) + this._s3 [x & 0xff]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,F,The following statement contains a magic number: return (((this._s0 [x >> 24] + this._s1 [(x >> 16) & 0xff]) ^ this._s2 [(x >> 8) & 0xff]) + this._s3 [x & 0xff]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < _pSize; i++) {  	// Get the 32 bits of the key' in 4 * 8 bit chunks  	uint data = 0x0000000;  	for (int j = 0; j < 4; j++) {  		// create a 32 bit block  		data = (data << 8) | (uint)key [keyIndex++];  		// wrap when we get to the end of the key  		if (keyIndex >= keyLength) {  			keyIndex = 0;  		}  	}  	// XOR the newly created 32 bit chunk onto the P-array  	this._p [i] ^= data;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < _pSize; i++) {  	// Get the 32 bits of the key' in 4 * 8 bit chunks  	uint data = 0x0000000;  	for (int j = 0; j < 4; j++) {  		// create a 32 bit block  		data = (data << 8) | (uint)key [keyIndex++];  		// wrap when we get to the end of the key  		if (keyIndex >= keyLength) {  			keyIndex = 0;  		}  	}  	// XOR the newly created 32 bit chunk onto the P-array  	this._p [i] ^= data;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,SetKey,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	// create a 32 bit block  	data = (data << 8) | (uint)key [keyIndex++];  	// wrap when we get to the end of the key  	if (keyIndex >= keyLength) {  		keyIndex = 0;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,SetKey,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	// create a 32 bit block  	data = (data << 8) | (uint)key [keyIndex++];  	// wrap when we get to the end of the key  	if (keyIndex >= keyLength) {  		keyIndex = 0;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,SetKey,The following statement contains a magic number: data = (data << 8) | (uint)key [keyIndex++];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,SetKey,The following statement contains a magic number: ProcessTable (this._p [_pSize - 2]' this._p [_pSize - 1]' this._s0);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,SetKey,The following statement contains a magic number: ProcessTable (this._s0 [_sboxSk - 2]' this._s0 [_sboxSk - 1]' this._s1);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,SetKey,The following statement contains a magic number: ProcessTable (this._s1 [_sboxSk - 2]' this._s1 [_sboxSk - 1]' this._s2);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,SetKey,The following statement contains a magic number: ProcessTable (this._s2 [_sboxSk - 2]' this._s2 [_sboxSk - 1]' this._s3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,ProcessTable,The following statement contains a magic number: for (int s = 0; s < size; s += 2) {  	xl ^= _p [0];  	for (int i = 1; i < _rounds; i += 2) {  		xr ^= F (xl) ^ _p [i];  		xl ^= F (xr) ^ _p [i + 1];  	}  	xr ^= _p [_rounds + 1];  	table [s] = xr;  	table [s + 1] = xl;  	xr = xl;  	// end of cycle swap  	xl = table [s];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,ProcessTable,The following statement contains a magic number: for (int s = 0; s < size; s += 2) {  	xl ^= _p [0];  	for (int i = 1; i < _rounds; i += 2) {  		xr ^= F (xl) ^ _p [i];  		xl ^= F (xr) ^ _p [i + 1];  	}  	xr ^= _p [_rounds + 1];  	table [s] = xr;  	table [s + 1] = xl;  	xr = xl;  	// end of cycle swap  	xl = table [s];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,ProcessTable,The following statement contains a magic number: s += 2
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,ProcessTable,The following statement contains a magic number: for (int i = 1; i < _rounds; i += 2) {  	xr ^= F (xl) ^ _p [i];  	xl ^= F (xr) ^ _p [i + 1];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,BlowfishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\BlowfishCipher.cs,ProcessTable,The following statement contains a magic number: i += 2
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastCipher,The following statement contains a magic number: if (!(keySize >= 40 && keySize <= 128 && keySize % 8 == 0))  	throw new ArgumentException (string.Format ("KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastCipher,The following statement contains a magic number: if (!(keySize >= 40 && keySize <= 128 && keySize % 8 == 0))  	throw new ArgumentException (string.Format ("KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastCipher,The following statement contains a magic number: if (!(keySize >= 40 && keySize <= 128 && keySize % 8 == 0))  	throw new ArgumentException (string.Format ("KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,EncryptBlock,The following statement contains a magic number: UInt32ToBigEndian (result [1]' outputBuffer' outputOffset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,DecryptBlock,The following statement contains a magic number: UInt32ToBigEndian (result [1]' outputBuffer' outputOffset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: if (key.Length < 11) {  	this._rounds = RED_ROUNDS;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [2] = S5 [z [0xA]] ^ S6 [z [0xB]] ^ S7 [z [0x5]] ^ S8 [z [0x4]] ^ S6 [z [0x6]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [3] = S5 [z [0xC]] ^ S6 [z [0xD]] ^ S7 [z [0x3]] ^ S8 [z [0x2]] ^ S7 [z [0x9]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [4] = S5 [z [0xE]] ^ S6 [z [0xF]] ^ S7 [z [0x1]] ^ S8 [z [0x0]] ^ S8 [z [0xC]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [5] = S5 [x [0x3]] ^ S6 [x [0x2]] ^ S7 [x [0xC]] ^ S8 [x [0xD]] ^ S5 [x [0x8]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [6] = S5 [x [0x1]] ^ S6 [x [0x0]] ^ S7 [x [0xE]] ^ S8 [x [0xF]] ^ S6 [x [0xD]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [7] = S5 [x [0x7]] ^ S6 [x [0x6]] ^ S7 [x [0x8]] ^ S8 [x [0x9]] ^ S7 [x [0x3]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [8] = S5 [x [0x5]] ^ S6 [x [0x4]] ^ S7 [x [0xA]] ^ S8 [x [0xB]] ^ S8 [x [0x7]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [9] = S5 [z [0x3]] ^ S6 [z [0x2]] ^ S7 [z [0xC]] ^ S8 [z [0xD]] ^ S5 [z [0x9]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [10] = S5 [z [0x1]] ^ S6 [z [0x0]] ^ S7 [z [0xE]] ^ S8 [z [0xF]] ^ S6 [z [0xc]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [11] = S5 [z [0x7]] ^ S6 [z [0x6]] ^ S7 [z [0x8]] ^ S8 [z [0x9]] ^ S7 [z [0x2]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [12] = S5 [z [0x5]] ^ S6 [z [0x4]] ^ S7 [z [0xA]] ^ S8 [z [0xB]] ^ S8 [z [0x6]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [13] = S5 [x [0x8]] ^ S6 [x [0x9]] ^ S7 [x [0x7]] ^ S8 [x [0x6]] ^ S5 [x [0x3]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [14] = S5 [x [0xA]] ^ S6 [x [0xB]] ^ S7 [x [0x5]] ^ S8 [x [0x4]] ^ S6 [x [0x7]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [15] = S5 [x [0xC]] ^ S6 [x [0xD]] ^ S7 [x [0x3]] ^ S8 [x [0x2]] ^ S7 [x [0x8]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._km [16] = S5 [x [0xE]] ^ S6 [x [0xF]] ^ S7 [x [0x1]] ^ S8 [x [0x0]] ^ S8 [x [0xD]];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [2] = (int)((S5 [z [0xA]] ^ S6 [z [0xB]] ^ S7 [z [0x5]] ^ S8 [z [0x4]] ^ S6 [z [0x6]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [3] = (int)((S5 [z [0xC]] ^ S6 [z [0xD]] ^ S7 [z [0x3]] ^ S8 [z [0x2]] ^ S7 [z [0x9]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [4] = (int)((S5 [z [0xE]] ^ S6 [z [0xF]] ^ S7 [z [0x1]] ^ S8 [z [0x0]] ^ S8 [z [0xC]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [5] = (int)((S5 [x [0x3]] ^ S6 [x [0x2]] ^ S7 [x [0xC]] ^ S8 [x [0xD]] ^ S5 [x [0x8]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [6] = (int)((S5 [x [0x1]] ^ S6 [x [0x0]] ^ S7 [x [0xE]] ^ S8 [x [0xF]] ^ S6 [x [0xD]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [7] = (int)((S5 [x [0x7]] ^ S6 [x [0x6]] ^ S7 [x [0x8]] ^ S8 [x [0x9]] ^ S7 [x [0x3]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [8] = (int)((S5 [x [0x5]] ^ S6 [x [0x4]] ^ S7 [x [0xA]] ^ S8 [x [0xB]] ^ S8 [x [0x7]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [9] = (int)((S5 [z [0x3]] ^ S6 [z [0x2]] ^ S7 [z [0xC]] ^ S8 [z [0xD]] ^ S5 [z [0x9]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [10] = (int)((S5 [z [0x1]] ^ S6 [z [0x0]] ^ S7 [z [0xE]] ^ S8 [z [0xF]] ^ S6 [z [0xc]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [11] = (int)((S5 [z [0x7]] ^ S6 [z [0x6]] ^ S7 [z [0x8]] ^ S8 [z [0x9]] ^ S7 [z [0x2]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [12] = (int)((S5 [z [0x5]] ^ S6 [z [0x4]] ^ S7 [z [0xA]] ^ S8 [z [0xB]] ^ S8 [z [0x6]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [13] = (int)((S5 [x [0x8]] ^ S6 [x [0x9]] ^ S7 [x [0x7]] ^ S8 [x [0x6]] ^ S5 [x [0x3]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [14] = (int)((S5 [x [0xA]] ^ S6 [x [0xB]] ^ S7 [x [0x5]] ^ S8 [x [0x4]] ^ S6 [x [0x7]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [15] = (int)((S5 [x [0xC]] ^ S6 [x [0xD]] ^ S7 [x [0x3]] ^ S8 [x [0x2]] ^ S7 [x [0x8]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,SetKey,The following statement contains a magic number: this._kr [16] = (int)((S5 [x [0xE]] ^ S6 [x [0xF]] ^ S7 [x [0x1]] ^ S8 [x [0x0]] ^ S8 [x [0xD]]) & 0x1f);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,F1,The following statement contains a magic number: I = I << Kri | (I >> (32 - Kri));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,F1,The following statement contains a magic number: return ((S1 [(I >> 24) & 0xff] ^ S2 [(I >> 16) & 0xff]) - S3 [(I >> 8) & 0xff]) + S4 [I & 0xff];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,F1,The following statement contains a magic number: return ((S1 [(I >> 24) & 0xff] ^ S2 [(I >> 16) & 0xff]) - S3 [(I >> 8) & 0xff]) + S4 [I & 0xff];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,F1,The following statement contains a magic number: return ((S1 [(I >> 24) & 0xff] ^ S2 [(I >> 16) & 0xff]) - S3 [(I >> 8) & 0xff]) + S4 [I & 0xff];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,F2,The following statement contains a magic number: I = I << Kri | (I >> (32 - Kri));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,F2,The following statement contains a magic number: return ((S1 [(I >> 24) & 0xff] - S2 [(I >> 16) & 0xff]) + S3 [(I >> 8) & 0xff]) ^ S4 [I & 0xff];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,F2,The following statement contains a magic number: return ((S1 [(I >> 24) & 0xff] - S2 [(I >> 16) & 0xff]) + S3 [(I >> 8) & 0xff]) ^ S4 [I & 0xff];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,F2,The following statement contains a magic number: return ((S1 [(I >> 24) & 0xff] - S2 [(I >> 16) & 0xff]) + S3 [(I >> 8) & 0xff]) ^ S4 [I & 0xff];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,F3,The following statement contains a magic number: I = I << Kri | (I >> (32 - Kri));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,F3,The following statement contains a magic number: return ((S1 [(I >> 24) & 0xff] + S2 [(I >> 16) & 0xff]) ^ S3 [(I >> 8) & 0xff]) - S4 [I & 0xff];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,F3,The following statement contains a magic number: return ((S1 [(I >> 24) & 0xff] + S2 [(I >> 16) & 0xff]) ^ S3 [(I >> 8) & 0xff]) - S4 [I & 0xff];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,F3,The following statement contains a magic number: return ((S1 [(I >> 24) & 0xff] + S2 [(I >> 16) & 0xff]) ^ S3 [(I >> 8) & 0xff]) - S4 [I & 0xff];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: for (int i = 1; i <= this._rounds; i++) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: for (int i = this._rounds; i > 0; i--) {  	Lp = Li;  	Rp = Ri;  	Li = Rp;  	switch (i) {  	case 1:  	case 4:  	case 7:  	case 10:  	case 13:  	case 16:  		Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  		break;  	case 2:  	case 5:  	case 8:  	case 11:  	case 14:  		Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  		break;  	case 3:  	case 6:  	case 9:  	case 12:  	case 15:  		Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following statement contains a magic number: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,Bits32ToInts,The following statement contains a magic number: b [offset + 3] = (int)(inData & 0xff);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,Bits32ToInts,The following statement contains a magic number: b [offset + 2] = (int)((inData >> 8) & 0xff);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,Bits32ToInts,The following statement contains a magic number: b [offset + 2] = (int)((inData >> 8) & 0xff);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,Bits32ToInts,The following statement contains a magic number: b [offset + 1] = (int)((inData >> 16) & 0xff);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,Bits32ToInts,The following statement contains a magic number: b [offset] = (int)((inData >> 24) & 0xff);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,IntsTo32bits,The following statement contains a magic number: return (uint)(((b [i] & 0xff) << 24) | ((b [i + 1] & 0xff) << 16) | ((b [i + 2] & 0xff) << 8) | ((b [i + 3] & 0xff)));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,IntsTo32bits,The following statement contains a magic number: return (uint)(((b [i] & 0xff) << 24) | ((b [i + 1] & 0xff) << 16) | ((b [i + 2] & 0xff) << 8) | ((b [i + 3] & 0xff)));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,IntsTo32bits,The following statement contains a magic number: return (uint)(((b [i] & 0xff) << 24) | ((b [i + 1] & 0xff) << 16) | ((b [i + 2] & 0xff) << 8) | ((b [i + 3] & 0xff)));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,IntsTo32bits,The following statement contains a magic number: return (uint)(((b [i] & 0xff) << 24) | ((b [i + 1] & 0xff) << 16) | ((b [i + 2] & 0xff) << 8) | ((b [i + 3] & 0xff)));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,IntsTo32bits,The following statement contains a magic number: return (uint)(((b [i] & 0xff) << 24) | ((b [i + 1] & 0xff) << 16) | ((b [i + 2] & 0xff) << 8) | ((b [i + 3] & 0xff)));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 0; j < 56; j++) {  	int l = pc1 [j];  	pc1m [j] = ((key [(uint)l >> 3] & bytebit [l & 07]) != 0);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 0; j < 56; j++) {  	int l = pc1 [j];  	pc1m [j] = ((key [(uint)l >> 3] & bytebit [l & 07]) != 0);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 0; j < 56; j++) {  	int l = pc1 [j];  	pc1m [j] = ((key [(uint)l >> 3] & bytebit [l & 07]) != 0);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: pc1m [j] = ((key [(uint)l >> 3] & bytebit [l & 07]) != 0);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: pc1m [j] = ((key [(uint)l >> 3] & bytebit [l & 07]) != 0);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	int l' m' n;  	if (encrypting) {  		m = i << 1;  	}  	else {  		m = (15 - i) << 1;  	}  	n = m + 1;  	newKey [m] = newKey [n] = 0;  	for (int j = 0; j < 28; j++) {  		l = j + totrot [i];  		if (l < 28) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 28; j < 56; j++) {  		l = j + totrot [i];  		if (l < 56) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 0; j < 24; j++) {  		if (pcr [pc2 [j]]) {  			newKey [m] |= bigbyte [j];  		}  		if (pcr [pc2 [j + 24]]) {  			newKey [n] |= bigbyte [j];  		}  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	int l' m' n;  	if (encrypting) {  		m = i << 1;  	}  	else {  		m = (15 - i) << 1;  	}  	n = m + 1;  	newKey [m] = newKey [n] = 0;  	for (int j = 0; j < 28; j++) {  		l = j + totrot [i];  		if (l < 28) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 28; j < 56; j++) {  		l = j + totrot [i];  		if (l < 56) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 0; j < 24; j++) {  		if (pcr [pc2 [j]]) {  			newKey [m] |= bigbyte [j];  		}  		if (pcr [pc2 [j + 24]]) {  			newKey [n] |= bigbyte [j];  		}  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	int l' m' n;  	if (encrypting) {  		m = i << 1;  	}  	else {  		m = (15 - i) << 1;  	}  	n = m + 1;  	newKey [m] = newKey [n] = 0;  	for (int j = 0; j < 28; j++) {  		l = j + totrot [i];  		if (l < 28) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 28; j < 56; j++) {  		l = j + totrot [i];  		if (l < 56) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 0; j < 24; j++) {  		if (pcr [pc2 [j]]) {  			newKey [m] |= bigbyte [j];  		}  		if (pcr [pc2 [j + 24]]) {  			newKey [n] |= bigbyte [j];  		}  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	int l' m' n;  	if (encrypting) {  		m = i << 1;  	}  	else {  		m = (15 - i) << 1;  	}  	n = m + 1;  	newKey [m] = newKey [n] = 0;  	for (int j = 0; j < 28; j++) {  		l = j + totrot [i];  		if (l < 28) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 28; j < 56; j++) {  		l = j + totrot [i];  		if (l < 56) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 0; j < 24; j++) {  		if (pcr [pc2 [j]]) {  			newKey [m] |= bigbyte [j];  		}  		if (pcr [pc2 [j + 24]]) {  			newKey [n] |= bigbyte [j];  		}  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	int l' m' n;  	if (encrypting) {  		m = i << 1;  	}  	else {  		m = (15 - i) << 1;  	}  	n = m + 1;  	newKey [m] = newKey [n] = 0;  	for (int j = 0; j < 28; j++) {  		l = j + totrot [i];  		if (l < 28) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 28; j < 56; j++) {  		l = j + totrot [i];  		if (l < 56) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 0; j < 24; j++) {  		if (pcr [pc2 [j]]) {  			newKey [m] |= bigbyte [j];  		}  		if (pcr [pc2 [j + 24]]) {  			newKey [n] |= bigbyte [j];  		}  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	int l' m' n;  	if (encrypting) {  		m = i << 1;  	}  	else {  		m = (15 - i) << 1;  	}  	n = m + 1;  	newKey [m] = newKey [n] = 0;  	for (int j = 0; j < 28; j++) {  		l = j + totrot [i];  		if (l < 28) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 28; j < 56; j++) {  		l = j + totrot [i];  		if (l < 56) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 0; j < 24; j++) {  		if (pcr [pc2 [j]]) {  			newKey [m] |= bigbyte [j];  		}  		if (pcr [pc2 [j + 24]]) {  			newKey [n] |= bigbyte [j];  		}  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	int l' m' n;  	if (encrypting) {  		m = i << 1;  	}  	else {  		m = (15 - i) << 1;  	}  	n = m + 1;  	newKey [m] = newKey [n] = 0;  	for (int j = 0; j < 28; j++) {  		l = j + totrot [i];  		if (l < 28) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 28; j < 56; j++) {  		l = j + totrot [i];  		if (l < 56) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 0; j < 24; j++) {  		if (pcr [pc2 [j]]) {  			newKey [m] |= bigbyte [j];  		}  		if (pcr [pc2 [j + 24]]) {  			newKey [n] |= bigbyte [j];  		}  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	int l' m' n;  	if (encrypting) {  		m = i << 1;  	}  	else {  		m = (15 - i) << 1;  	}  	n = m + 1;  	newKey [m] = newKey [n] = 0;  	for (int j = 0; j < 28; j++) {  		l = j + totrot [i];  		if (l < 28) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 28; j < 56; j++) {  		l = j + totrot [i];  		if (l < 56) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 0; j < 24; j++) {  		if (pcr [pc2 [j]]) {  			newKey [m] |= bigbyte [j];  		}  		if (pcr [pc2 [j + 24]]) {  			newKey [n] |= bigbyte [j];  		}  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	int l' m' n;  	if (encrypting) {  		m = i << 1;  	}  	else {  		m = (15 - i) << 1;  	}  	n = m + 1;  	newKey [m] = newKey [n] = 0;  	for (int j = 0; j < 28; j++) {  		l = j + totrot [i];  		if (l < 28) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 28; j < 56; j++) {  		l = j + totrot [i];  		if (l < 56) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 0; j < 24; j++) {  		if (pcr [pc2 [j]]) {  			newKey [m] |= bigbyte [j];  		}  		if (pcr [pc2 [j + 24]]) {  			newKey [n] |= bigbyte [j];  		}  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	int l' m' n;  	if (encrypting) {  		m = i << 1;  	}  	else {  		m = (15 - i) << 1;  	}  	n = m + 1;  	newKey [m] = newKey [n] = 0;  	for (int j = 0; j < 28; j++) {  		l = j + totrot [i];  		if (l < 28) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 28; j < 56; j++) {  		l = j + totrot [i];  		if (l < 56) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 0; j < 24; j++) {  		if (pcr [pc2 [j]]) {  			newKey [m] |= bigbyte [j];  		}  		if (pcr [pc2 [j + 24]]) {  			newKey [n] |= bigbyte [j];  		}  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	int l' m' n;  	if (encrypting) {  		m = i << 1;  	}  	else {  		m = (15 - i) << 1;  	}  	n = m + 1;  	newKey [m] = newKey [n] = 0;  	for (int j = 0; j < 28; j++) {  		l = j + totrot [i];  		if (l < 28) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 28; j < 56; j++) {  		l = j + totrot [i];  		if (l < 56) {  			pcr [j] = pc1m [l];  		}  		else {  			pcr [j] = pc1m [l - 28];  		}  	}  	for (int j = 0; j < 24; j++) {  		if (pcr [pc2 [j]]) {  			newKey [m] |= bigbyte [j];  		}  		if (pcr [pc2 [j + 24]]) {  			newKey [n] |= bigbyte [j];  		}  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if (encrypting) {  	m = i << 1;  }  else {  	m = (15 - i) << 1;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: m = (15 - i) << 1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 0; j < 28; j++) {  	l = j + totrot [i];  	if (l < 28) {  		pcr [j] = pc1m [l];  	}  	else {  		pcr [j] = pc1m [l - 28];  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 0; j < 28; j++) {  	l = j + totrot [i];  	if (l < 28) {  		pcr [j] = pc1m [l];  	}  	else {  		pcr [j] = pc1m [l - 28];  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 0; j < 28; j++) {  	l = j + totrot [i];  	if (l < 28) {  		pcr [j] = pc1m [l];  	}  	else {  		pcr [j] = pc1m [l - 28];  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if (l < 28) {  	pcr [j] = pc1m [l];  }  else {  	pcr [j] = pc1m [l - 28];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if (l < 28) {  	pcr [j] = pc1m [l];  }  else {  	pcr [j] = pc1m [l - 28];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: pcr [j] = pc1m [l - 28];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 28; j < 56; j++) {  	l = j + totrot [i];  	if (l < 56) {  		pcr [j] = pc1m [l];  	}  	else {  		pcr [j] = pc1m [l - 28];  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 28; j < 56; j++) {  	l = j + totrot [i];  	if (l < 56) {  		pcr [j] = pc1m [l];  	}  	else {  		pcr [j] = pc1m [l - 28];  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 28; j < 56; j++) {  	l = j + totrot [i];  	if (l < 56) {  		pcr [j] = pc1m [l];  	}  	else {  		pcr [j] = pc1m [l - 28];  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 28; j < 56; j++) {  	l = j + totrot [i];  	if (l < 56) {  		pcr [j] = pc1m [l];  	}  	else {  		pcr [j] = pc1m [l - 28];  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if (l < 56) {  	pcr [j] = pc1m [l];  }  else {  	pcr [j] = pc1m [l - 28];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if (l < 56) {  	pcr [j] = pc1m [l];  }  else {  	pcr [j] = pc1m [l - 28];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: pcr [j] = pc1m [l - 28];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 0; j < 24; j++) {  	if (pcr [pc2 [j]]) {  		newKey [m] |= bigbyte [j];  	}  	if (pcr [pc2 [j + 24]]) {  		newKey [n] |= bigbyte [j];  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int j = 0; j < 24; j++) {  	if (pcr [pc2 [j]]) {  		newKey [m] |= bigbyte [j];  	}  	if (pcr [pc2 [j + 24]]) {  		newKey [n] |= bigbyte [j];  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: if (pcr [pc2 [j + 24]]) {  	newKey [n] |= bigbyte [j];  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i != 32; i += 2) {  	int i1' i2;  	i1 = newKey [i];  	i2 = newKey [i + 1];  	newKey [i] = (int)((uint)((i1 & 0x00fc0000) << 6) | (uint)((i1 & 0x00000fc0) << 10) | ((uint)(i2 & 0x00fc0000) >> 10) | ((uint)(i2 & 0x00000fc0) >> 6));  	newKey [i + 1] = (int)((uint)((i1 & 0x0003f000) << 12) | (uint)((i1 & 0x0000003f) << 16) | ((uint)(i2 & 0x0003f000) >> 4) | (uint)(i2 & 0x0000003f));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i != 32; i += 2) {  	int i1' i2;  	i1 = newKey [i];  	i2 = newKey [i + 1];  	newKey [i] = (int)((uint)((i1 & 0x00fc0000) << 6) | (uint)((i1 & 0x00000fc0) << 10) | ((uint)(i2 & 0x00fc0000) >> 10) | ((uint)(i2 & 0x00000fc0) >> 6));  	newKey [i + 1] = (int)((uint)((i1 & 0x0003f000) << 12) | (uint)((i1 & 0x0000003f) << 16) | ((uint)(i2 & 0x0003f000) >> 4) | (uint)(i2 & 0x0000003f));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i != 32; i += 2) {  	int i1' i2;  	i1 = newKey [i];  	i2 = newKey [i + 1];  	newKey [i] = (int)((uint)((i1 & 0x00fc0000) << 6) | (uint)((i1 & 0x00000fc0) << 10) | ((uint)(i2 & 0x00fc0000) >> 10) | ((uint)(i2 & 0x00000fc0) >> 6));  	newKey [i + 1] = (int)((uint)((i1 & 0x0003f000) << 12) | (uint)((i1 & 0x0000003f) << 16) | ((uint)(i2 & 0x0003f000) >> 4) | (uint)(i2 & 0x0000003f));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i != 32; i += 2) {  	int i1' i2;  	i1 = newKey [i];  	i2 = newKey [i + 1];  	newKey [i] = (int)((uint)((i1 & 0x00fc0000) << 6) | (uint)((i1 & 0x00000fc0) << 10) | ((uint)(i2 & 0x00fc0000) >> 10) | ((uint)(i2 & 0x00000fc0) >> 6));  	newKey [i + 1] = (int)((uint)((i1 & 0x0003f000) << 12) | (uint)((i1 & 0x0000003f) << 16) | ((uint)(i2 & 0x0003f000) >> 4) | (uint)(i2 & 0x0000003f));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i != 32; i += 2) {  	int i1' i2;  	i1 = newKey [i];  	i2 = newKey [i + 1];  	newKey [i] = (int)((uint)((i1 & 0x00fc0000) << 6) | (uint)((i1 & 0x00000fc0) << 10) | ((uint)(i2 & 0x00fc0000) >> 10) | ((uint)(i2 & 0x00000fc0) >> 6));  	newKey [i + 1] = (int)((uint)((i1 & 0x0003f000) << 12) | (uint)((i1 & 0x0000003f) << 16) | ((uint)(i2 & 0x0003f000) >> 4) | (uint)(i2 & 0x0000003f));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i != 32; i += 2) {  	int i1' i2;  	i1 = newKey [i];  	i2 = newKey [i + 1];  	newKey [i] = (int)((uint)((i1 & 0x00fc0000) << 6) | (uint)((i1 & 0x00000fc0) << 10) | ((uint)(i2 & 0x00fc0000) >> 10) | ((uint)(i2 & 0x00000fc0) >> 6));  	newKey [i + 1] = (int)((uint)((i1 & 0x0003f000) << 12) | (uint)((i1 & 0x0000003f) << 16) | ((uint)(i2 & 0x0003f000) >> 4) | (uint)(i2 & 0x0000003f));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i != 32; i += 2) {  	int i1' i2;  	i1 = newKey [i];  	i2 = newKey [i + 1];  	newKey [i] = (int)((uint)((i1 & 0x00fc0000) << 6) | (uint)((i1 & 0x00000fc0) << 10) | ((uint)(i2 & 0x00fc0000) >> 10) | ((uint)(i2 & 0x00000fc0) >> 6));  	newKey [i + 1] = (int)((uint)((i1 & 0x0003f000) << 12) | (uint)((i1 & 0x0000003f) << 16) | ((uint)(i2 & 0x0003f000) >> 4) | (uint)(i2 & 0x0000003f));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i != 32; i += 2) {  	int i1' i2;  	i1 = newKey [i];  	i2 = newKey [i + 1];  	newKey [i] = (int)((uint)((i1 & 0x00fc0000) << 6) | (uint)((i1 & 0x00000fc0) << 10) | ((uint)(i2 & 0x00fc0000) >> 10) | ((uint)(i2 & 0x00000fc0) >> 6));  	newKey [i + 1] = (int)((uint)((i1 & 0x0003f000) << 12) | (uint)((i1 & 0x0000003f) << 16) | ((uint)(i2 & 0x0003f000) >> 4) | (uint)(i2 & 0x0000003f));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: for (int i = 0; i != 32; i += 2) {  	int i1' i2;  	i1 = newKey [i];  	i2 = newKey [i + 1];  	newKey [i] = (int)((uint)((i1 & 0x00fc0000) << 6) | (uint)((i1 & 0x00000fc0) << 10) | ((uint)(i2 & 0x00fc0000) >> 10) | ((uint)(i2 & 0x00000fc0) >> 6));  	newKey [i + 1] = (int)((uint)((i1 & 0x0003f000) << 12) | (uint)((i1 & 0x0000003f) << 16) | ((uint)(i2 & 0x0003f000) >> 4) | (uint)(i2 & 0x0000003f));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: i += 2
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: newKey [i] = (int)((uint)((i1 & 0x00fc0000) << 6) | (uint)((i1 & 0x00000fc0) << 10) | ((uint)(i2 & 0x00fc0000) >> 10) | ((uint)(i2 & 0x00000fc0) >> 6));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: newKey [i] = (int)((uint)((i1 & 0x00fc0000) << 6) | (uint)((i1 & 0x00000fc0) << 10) | ((uint)(i2 & 0x00fc0000) >> 10) | ((uint)(i2 & 0x00000fc0) >> 6));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: newKey [i] = (int)((uint)((i1 & 0x00fc0000) << 6) | (uint)((i1 & 0x00000fc0) << 10) | ((uint)(i2 & 0x00fc0000) >> 10) | ((uint)(i2 & 0x00000fc0) >> 6));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: newKey [i] = (int)((uint)((i1 & 0x00fc0000) << 6) | (uint)((i1 & 0x00000fc0) << 10) | ((uint)(i2 & 0x00fc0000) >> 10) | ((uint)(i2 & 0x00000fc0) >> 6));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: newKey [i + 1] = (int)((uint)((i1 & 0x0003f000) << 12) | (uint)((i1 & 0x0000003f) << 16) | ((uint)(i2 & 0x0003f000) >> 4) | (uint)(i2 & 0x0000003f));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: newKey [i + 1] = (int)((uint)((i1 & 0x0003f000) << 12) | (uint)((i1 & 0x0000003f) << 16) | ((uint)(i2 & 0x0003f000) >> 4) | (uint)(i2 & 0x0000003f));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,GenerateWorkingKey,The following statement contains a magic number: newKey [i + 1] = (int)((uint)((i1 & 0x0003f000) << 12) | (uint)((i1 & 0x0000003f) << 16) | ((uint)(i2 & 0x0003f000) >> 4) | (uint)(i2 & 0x0000003f));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,ValidateKey,The following statement contains a magic number: if (!(keySize == 64))  	throw new ArgumentException (string.Format ("KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = ((left >> 4) ^ right) & 0x0f0f0f0f;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: left ^= (work << 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = ((left >> 16) ^ right) & 0x0000ffff;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: left ^= (work << 16);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = ((right >> 2) ^ left) & 0x33333333;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: right ^= (work << 2);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = ((right >> 8) ^ left) & 0x00ff00ff;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: right ^= (work << 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: right = (right << 1) | (right >> 31);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: left = (left << 1) | (left >> 31);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: for (int round = 0; round < 8; round++) {  	uint fval;  	work = (right << 28) | (right >> 4);  	work ^= (uint)wKey [round * 4 + 0];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = right ^ (uint)wKey [round * 4 + 1];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	left ^= fval;  	work = (left << 28) | (left >> 4);  	work ^= (uint)wKey [round * 4 + 2];  	fval = SP7 [work & 0x3f];  	fval |= SP5 [(work >> 8) & 0x3f];  	fval |= SP3 [(work >> 16) & 0x3f];  	fval |= SP1 [(work >> 24) & 0x3f];  	work = left ^ (uint)wKey [round * 4 + 3];  	fval |= SP8 [work & 0x3f];  	fval |= SP6 [(work >> 8) & 0x3f];  	fval |= SP4 [(work >> 16) & 0x3f];  	fval |= SP2 [(work >> 24) & 0x3f];  	right ^= fval;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = (right << 28) | (right >> 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = (right << 28) | (right >> 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work ^= (uint)wKey [round * 4 + 0];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: fval |= SP5 [(work >> 8) & 0x3f];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: fval |= SP3 [(work >> 16) & 0x3f];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: fval |= SP1 [(work >> 24) & 0x3f];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = right ^ (uint)wKey [round * 4 + 1];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: fval |= SP6 [(work >> 8) & 0x3f];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: fval |= SP4 [(work >> 16) & 0x3f];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: fval |= SP2 [(work >> 24) & 0x3f];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = (left << 28) | (left >> 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = (left << 28) | (left >> 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work ^= (uint)wKey [round * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work ^= (uint)wKey [round * 4 + 2];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: fval |= SP5 [(work >> 8) & 0x3f];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: fval |= SP3 [(work >> 16) & 0x3f];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: fval |= SP1 [(work >> 24) & 0x3f];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = left ^ (uint)wKey [round * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = left ^ (uint)wKey [round * 4 + 3];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: fval |= SP6 [(work >> 8) & 0x3f];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: fval |= SP4 [(work >> 16) & 0x3f];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: fval |= SP2 [(work >> 24) & 0x3f];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: right = (right << 31) | (right >> 1);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: left = (left << 31) | (left >> 1);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = ((left >> 8) ^ right) & 0x00ff00ff;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: left ^= (work << 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = ((left >> 2) ^ right) & 0x33333333;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: left ^= (work << 2);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = ((right >> 16) ^ left) & 0x0000ffff;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: right ^= (work << 16);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: work = ((right >> 4) ^ left) & 0x0f0f0f0f;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: right ^= (work << 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,DesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\DesCipher.cs,DesFunc,The following statement contains a magic number: UInt32ToBigEndian (left' outBytes' outOff + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,RsaCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\RsaCipher.cs,Decrypt,The following statement contains a magic number: if (paddedBlock [0] != 1 && paddedBlock [0] != 2)  	throw new NotSupportedException ("Only block type 01 or 02 are supported.");  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,SerpentCipher,The following statement contains a magic number: if (!(keySize == 128 || keySize == 192 || keySize == 256))  	throw new ArgumentException (string.Format ("KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,SerpentCipher,The following statement contains a magic number: if (!(keySize == 128 || keySize == 192 || keySize == 256))  	throw new ArgumentException (string.Format ("KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,SerpentCipher,The following statement contains a magic number: if (!(keySize == 128 || keySize == 192 || keySize == 256))  	throw new ArgumentException (string.Format ("KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: this._x2 = BytesToWord (inputBuffer' inputOffset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: this._x1 = BytesToWord (inputBuffer' inputOffset + 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: this._x0 = BytesToWord (inputBuffer' inputOffset + 12);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb0 (this._workingKey [0] ^ this._x0' this._workingKey [1] ^ this._x1' this._workingKey [2] ^ this._x2' this._workingKey [3] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb0 (this._workingKey [0] ^ this._x0' this._workingKey [1] ^ this._x1' this._workingKey [2] ^ this._x2' this._workingKey [3] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [4] ^ this._x0' this._workingKey [5] ^ this._x1' this._workingKey [6] ^ this._x2' this._workingKey [7] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [4] ^ this._x0' this._workingKey [5] ^ this._x1' this._workingKey [6] ^ this._x2' this._workingKey [7] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [4] ^ this._x0' this._workingKey [5] ^ this._x1' this._workingKey [6] ^ this._x2' this._workingKey [7] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [4] ^ this._x0' this._workingKey [5] ^ this._x1' this._workingKey [6] ^ this._x2' this._workingKey [7] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [8] ^ this._x0' this._workingKey [9] ^ this._x1' this._workingKey [10] ^ this._x2' this._workingKey [11] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [8] ^ this._x0' this._workingKey [9] ^ this._x1' this._workingKey [10] ^ this._x2' this._workingKey [11] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [8] ^ this._x0' this._workingKey [9] ^ this._x1' this._workingKey [10] ^ this._x2' this._workingKey [11] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [8] ^ this._x0' this._workingKey [9] ^ this._x1' this._workingKey [10] ^ this._x2' this._workingKey [11] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [12] ^ this._x0' this._workingKey [13] ^ this._x1' this._workingKey [14] ^ this._x2' this._workingKey [15] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [12] ^ this._x0' this._workingKey [13] ^ this._x1' this._workingKey [14] ^ this._x2' this._workingKey [15] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [12] ^ this._x0' this._workingKey [13] ^ this._x1' this._workingKey [14] ^ this._x2' this._workingKey [15] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [12] ^ this._x0' this._workingKey [13] ^ this._x1' this._workingKey [14] ^ this._x2' this._workingKey [15] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [16] ^ this._x0' this._workingKey [17] ^ this._x1' this._workingKey [18] ^ this._x2' this._workingKey [19] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [16] ^ this._x0' this._workingKey [17] ^ this._x1' this._workingKey [18] ^ this._x2' this._workingKey [19] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [16] ^ this._x0' this._workingKey [17] ^ this._x1' this._workingKey [18] ^ this._x2' this._workingKey [19] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [16] ^ this._x0' this._workingKey [17] ^ this._x1' this._workingKey [18] ^ this._x2' this._workingKey [19] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [20] ^ this._x0' this._workingKey [21] ^ this._x1' this._workingKey [22] ^ this._x2' this._workingKey [23] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [20] ^ this._x0' this._workingKey [21] ^ this._x1' this._workingKey [22] ^ this._x2' this._workingKey [23] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [20] ^ this._x0' this._workingKey [21] ^ this._x1' this._workingKey [22] ^ this._x2' this._workingKey [23] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [20] ^ this._x0' this._workingKey [21] ^ this._x1' this._workingKey [22] ^ this._x2' this._workingKey [23] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [24] ^ this._x0' this._workingKey [25] ^ this._x1' this._workingKey [26] ^ this._x2' this._workingKey [27] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [24] ^ this._x0' this._workingKey [25] ^ this._x1' this._workingKey [26] ^ this._x2' this._workingKey [27] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [24] ^ this._x0' this._workingKey [25] ^ this._x1' this._workingKey [26] ^ this._x2' this._workingKey [27] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [24] ^ this._x0' this._workingKey [25] ^ this._x1' this._workingKey [26] ^ this._x2' this._workingKey [27] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [28] ^ this._x0' this._workingKey [29] ^ this._x1' this._workingKey [30] ^ this._x2' this._workingKey [31] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [28] ^ this._x0' this._workingKey [29] ^ this._x1' this._workingKey [30] ^ this._x2' this._workingKey [31] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [28] ^ this._x0' this._workingKey [29] ^ this._x1' this._workingKey [30] ^ this._x2' this._workingKey [31] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [28] ^ this._x0' this._workingKey [29] ^ this._x1' this._workingKey [30] ^ this._x2' this._workingKey [31] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb0 (this._workingKey [32] ^ this._x0' this._workingKey [33] ^ this._x1' this._workingKey [34] ^ this._x2' this._workingKey [35] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb0 (this._workingKey [32] ^ this._x0' this._workingKey [33] ^ this._x1' this._workingKey [34] ^ this._x2' this._workingKey [35] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb0 (this._workingKey [32] ^ this._x0' this._workingKey [33] ^ this._x1' this._workingKey [34] ^ this._x2' this._workingKey [35] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb0 (this._workingKey [32] ^ this._x0' this._workingKey [33] ^ this._x1' this._workingKey [34] ^ this._x2' this._workingKey [35] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [36] ^ this._x0' this._workingKey [37] ^ this._x1' this._workingKey [38] ^ this._x2' this._workingKey [39] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [36] ^ this._x0' this._workingKey [37] ^ this._x1' this._workingKey [38] ^ this._x2' this._workingKey [39] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [36] ^ this._x0' this._workingKey [37] ^ this._x1' this._workingKey [38] ^ this._x2' this._workingKey [39] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [36] ^ this._x0' this._workingKey [37] ^ this._x1' this._workingKey [38] ^ this._x2' this._workingKey [39] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [40] ^ this._x0' this._workingKey [41] ^ this._x1' this._workingKey [42] ^ this._x2' this._workingKey [43] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [40] ^ this._x0' this._workingKey [41] ^ this._x1' this._workingKey [42] ^ this._x2' this._workingKey [43] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [40] ^ this._x0' this._workingKey [41] ^ this._x1' this._workingKey [42] ^ this._x2' this._workingKey [43] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [40] ^ this._x0' this._workingKey [41] ^ this._x1' this._workingKey [42] ^ this._x2' this._workingKey [43] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [44] ^ this._x0' this._workingKey [45] ^ this._x1' this._workingKey [46] ^ this._x2' this._workingKey [47] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [44] ^ this._x0' this._workingKey [45] ^ this._x1' this._workingKey [46] ^ this._x2' this._workingKey [47] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [44] ^ this._x0' this._workingKey [45] ^ this._x1' this._workingKey [46] ^ this._x2' this._workingKey [47] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [44] ^ this._x0' this._workingKey [45] ^ this._x1' this._workingKey [46] ^ this._x2' this._workingKey [47] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [48] ^ this._x0' this._workingKey [49] ^ this._x1' this._workingKey [50] ^ this._x2' this._workingKey [51] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [48] ^ this._x0' this._workingKey [49] ^ this._x1' this._workingKey [50] ^ this._x2' this._workingKey [51] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [48] ^ this._x0' this._workingKey [49] ^ this._x1' this._workingKey [50] ^ this._x2' this._workingKey [51] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [48] ^ this._x0' this._workingKey [49] ^ this._x1' this._workingKey [50] ^ this._x2' this._workingKey [51] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [52] ^ this._x0' this._workingKey [53] ^ this._x1' this._workingKey [54] ^ this._x2' this._workingKey [55] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [52] ^ this._x0' this._workingKey [53] ^ this._x1' this._workingKey [54] ^ this._x2' this._workingKey [55] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [52] ^ this._x0' this._workingKey [53] ^ this._x1' this._workingKey [54] ^ this._x2' this._workingKey [55] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [52] ^ this._x0' this._workingKey [53] ^ this._x1' this._workingKey [54] ^ this._x2' this._workingKey [55] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [56] ^ this._x0' this._workingKey [57] ^ this._x1' this._workingKey [58] ^ this._x2' this._workingKey [59] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [56] ^ this._x0' this._workingKey [57] ^ this._x1' this._workingKey [58] ^ this._x2' this._workingKey [59] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [56] ^ this._x0' this._workingKey [57] ^ this._x1' this._workingKey [58] ^ this._x2' this._workingKey [59] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [56] ^ this._x0' this._workingKey [57] ^ this._x1' this._workingKey [58] ^ this._x2' this._workingKey [59] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [60] ^ this._x0' this._workingKey [61] ^ this._x1' this._workingKey [62] ^ this._x2' this._workingKey [63] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [60] ^ this._x0' this._workingKey [61] ^ this._x1' this._workingKey [62] ^ this._x2' this._workingKey [63] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [60] ^ this._x0' this._workingKey [61] ^ this._x1' this._workingKey [62] ^ this._x2' this._workingKey [63] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [60] ^ this._x0' this._workingKey [61] ^ this._x1' this._workingKey [62] ^ this._x2' this._workingKey [63] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb0 (this._workingKey [64] ^ this._x0' this._workingKey [65] ^ this._x1' this._workingKey [66] ^ this._x2' this._workingKey [67] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb0 (this._workingKey [64] ^ this._x0' this._workingKey [65] ^ this._x1' this._workingKey [66] ^ this._x2' this._workingKey [67] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb0 (this._workingKey [64] ^ this._x0' this._workingKey [65] ^ this._x1' this._workingKey [66] ^ this._x2' this._workingKey [67] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb0 (this._workingKey [64] ^ this._x0' this._workingKey [65] ^ this._x1' this._workingKey [66] ^ this._x2' this._workingKey [67] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [68] ^ this._x0' this._workingKey [69] ^ this._x1' this._workingKey [70] ^ this._x2' this._workingKey [71] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [68] ^ this._x0' this._workingKey [69] ^ this._x1' this._workingKey [70] ^ this._x2' this._workingKey [71] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [68] ^ this._x0' this._workingKey [69] ^ this._x1' this._workingKey [70] ^ this._x2' this._workingKey [71] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [68] ^ this._x0' this._workingKey [69] ^ this._x1' this._workingKey [70] ^ this._x2' this._workingKey [71] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [72] ^ this._x0' this._workingKey [73] ^ this._x1' this._workingKey [74] ^ this._x2' this._workingKey [75] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [72] ^ this._x0' this._workingKey [73] ^ this._x1' this._workingKey [74] ^ this._x2' this._workingKey [75] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [72] ^ this._x0' this._workingKey [73] ^ this._x1' this._workingKey [74] ^ this._x2' this._workingKey [75] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [72] ^ this._x0' this._workingKey [73] ^ this._x1' this._workingKey [74] ^ this._x2' this._workingKey [75] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [76] ^ this._x0' this._workingKey [77] ^ this._x1' this._workingKey [78] ^ this._x2' this._workingKey [79] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [76] ^ this._x0' this._workingKey [77] ^ this._x1' this._workingKey [78] ^ this._x2' this._workingKey [79] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [76] ^ this._x0' this._workingKey [77] ^ this._x1' this._workingKey [78] ^ this._x2' this._workingKey [79] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [76] ^ this._x0' this._workingKey [77] ^ this._x1' this._workingKey [78] ^ this._x2' this._workingKey [79] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [80] ^ this._x0' this._workingKey [81] ^ this._x1' this._workingKey [82] ^ this._x2' this._workingKey [83] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [80] ^ this._x0' this._workingKey [81] ^ this._x1' this._workingKey [82] ^ this._x2' this._workingKey [83] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [80] ^ this._x0' this._workingKey [81] ^ this._x1' this._workingKey [82] ^ this._x2' this._workingKey [83] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [80] ^ this._x0' this._workingKey [81] ^ this._x1' this._workingKey [82] ^ this._x2' this._workingKey [83] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [84] ^ this._x0' this._workingKey [85] ^ this._x1' this._workingKey [86] ^ this._x2' this._workingKey [87] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [84] ^ this._x0' this._workingKey [85] ^ this._x1' this._workingKey [86] ^ this._x2' this._workingKey [87] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [84] ^ this._x0' this._workingKey [85] ^ this._x1' this._workingKey [86] ^ this._x2' this._workingKey [87] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [84] ^ this._x0' this._workingKey [85] ^ this._x1' this._workingKey [86] ^ this._x2' this._workingKey [87] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [88] ^ this._x0' this._workingKey [89] ^ this._x1' this._workingKey [90] ^ this._x2' this._workingKey [91] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [88] ^ this._x0' this._workingKey [89] ^ this._x1' this._workingKey [90] ^ this._x2' this._workingKey [91] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [88] ^ this._x0' this._workingKey [89] ^ this._x1' this._workingKey [90] ^ this._x2' this._workingKey [91] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [88] ^ this._x0' this._workingKey [89] ^ this._x1' this._workingKey [90] ^ this._x2' this._workingKey [91] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [92] ^ this._x0' this._workingKey [93] ^ this._x1' this._workingKey [94] ^ this._x2' this._workingKey [95] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [92] ^ this._x0' this._workingKey [93] ^ this._x1' this._workingKey [94] ^ this._x2' this._workingKey [95] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [92] ^ this._x0' this._workingKey [93] ^ this._x1' this._workingKey [94] ^ this._x2' this._workingKey [95] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [92] ^ this._x0' this._workingKey [93] ^ this._x1' this._workingKey [94] ^ this._x2' this._workingKey [95] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb0 (this._workingKey [96] ^ this._x0' this._workingKey [97] ^ this._x1' this._workingKey [98] ^ this._x2' this._workingKey [99] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb0 (this._workingKey [96] ^ this._x0' this._workingKey [97] ^ this._x1' this._workingKey [98] ^ this._x2' this._workingKey [99] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb0 (this._workingKey [96] ^ this._x0' this._workingKey [97] ^ this._x1' this._workingKey [98] ^ this._x2' this._workingKey [99] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb0 (this._workingKey [96] ^ this._x0' this._workingKey [97] ^ this._x1' this._workingKey [98] ^ this._x2' this._workingKey [99] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [100] ^ this._x0' this._workingKey [101] ^ this._x1' this._workingKey [102] ^ this._x2' this._workingKey [103] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [100] ^ this._x0' this._workingKey [101] ^ this._x1' this._workingKey [102] ^ this._x2' this._workingKey [103] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [100] ^ this._x0' this._workingKey [101] ^ this._x1' this._workingKey [102] ^ this._x2' this._workingKey [103] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb1 (this._workingKey [100] ^ this._x0' this._workingKey [101] ^ this._x1' this._workingKey [102] ^ this._x2' this._workingKey [103] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [104] ^ this._x0' this._workingKey [105] ^ this._x1' this._workingKey [106] ^ this._x2' this._workingKey [107] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [104] ^ this._x0' this._workingKey [105] ^ this._x1' this._workingKey [106] ^ this._x2' this._workingKey [107] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [104] ^ this._x0' this._workingKey [105] ^ this._x1' this._workingKey [106] ^ this._x2' this._workingKey [107] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb2 (this._workingKey [104] ^ this._x0' this._workingKey [105] ^ this._x1' this._workingKey [106] ^ this._x2' this._workingKey [107] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [108] ^ this._x0' this._workingKey [109] ^ this._x1' this._workingKey [110] ^ this._x2' this._workingKey [111] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [108] ^ this._x0' this._workingKey [109] ^ this._x1' this._workingKey [110] ^ this._x2' this._workingKey [111] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [108] ^ this._x0' this._workingKey [109] ^ this._x1' this._workingKey [110] ^ this._x2' this._workingKey [111] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb3 (this._workingKey [108] ^ this._x0' this._workingKey [109] ^ this._x1' this._workingKey [110] ^ this._x2' this._workingKey [111] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [112] ^ this._x0' this._workingKey [113] ^ this._x1' this._workingKey [114] ^ this._x2' this._workingKey [115] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [112] ^ this._x0' this._workingKey [113] ^ this._x1' this._workingKey [114] ^ this._x2' this._workingKey [115] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [112] ^ this._x0' this._workingKey [113] ^ this._x1' this._workingKey [114] ^ this._x2' this._workingKey [115] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb4 (this._workingKey [112] ^ this._x0' this._workingKey [113] ^ this._x1' this._workingKey [114] ^ this._x2' this._workingKey [115] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [116] ^ this._x0' this._workingKey [117] ^ this._x1' this._workingKey [118] ^ this._x2' this._workingKey [119] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [116] ^ this._x0' this._workingKey [117] ^ this._x1' this._workingKey [118] ^ this._x2' this._workingKey [119] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [116] ^ this._x0' this._workingKey [117] ^ this._x1' this._workingKey [118] ^ this._x2' this._workingKey [119] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb5 (this._workingKey [116] ^ this._x0' this._workingKey [117] ^ this._x1' this._workingKey [118] ^ this._x2' this._workingKey [119] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [120] ^ this._x0' this._workingKey [121] ^ this._x1' this._workingKey [122] ^ this._x2' this._workingKey [123] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [120] ^ this._x0' this._workingKey [121] ^ this._x1' this._workingKey [122] ^ this._x2' this._workingKey [123] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [120] ^ this._x0' this._workingKey [121] ^ this._x1' this._workingKey [122] ^ this._x2' this._workingKey [123] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb6 (this._workingKey [120] ^ this._x0' this._workingKey [121] ^ this._x1' this._workingKey [122] ^ this._x2' this._workingKey [123] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [124] ^ this._x0' this._workingKey [125] ^ this._x1' this._workingKey [126] ^ this._x2' this._workingKey [127] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [124] ^ this._x0' this._workingKey [125] ^ this._x1' this._workingKey [126] ^ this._x2' this._workingKey [127] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [124] ^ this._x0' this._workingKey [125] ^ this._x1' this._workingKey [126] ^ this._x2' this._workingKey [127] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: Sb7 (this._workingKey [124] ^ this._x0' this._workingKey [125] ^ this._x1' this._workingKey [126] ^ this._x2' this._workingKey [127] ^ this._x3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: WordToBytes (this._workingKey [131] ^ this._x3' outputBuffer' outputOffset);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: WordToBytes (this._workingKey [130] ^ this._x2' outputBuffer' outputOffset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: WordToBytes (this._workingKey [130] ^ this._x2' outputBuffer' outputOffset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: WordToBytes (this._workingKey [129] ^ this._x1' outputBuffer' outputOffset + 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: WordToBytes (this._workingKey [129] ^ this._x1' outputBuffer' outputOffset + 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: WordToBytes (this._workingKey [128] ^ this._x0' outputBuffer' outputOffset + 12);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,EncryptBlock,The following statement contains a magic number: WordToBytes (this._workingKey [128] ^ this._x0' outputBuffer' outputOffset + 12);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 = this._workingKey [131] ^ BytesToWord (inputBuffer' inputOffset);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 = this._workingKey [130] ^ BytesToWord (inputBuffer' inputOffset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 = this._workingKey [130] ^ BytesToWord (inputBuffer' inputOffset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 = this._workingKey [129] ^ BytesToWord (inputBuffer' inputOffset + 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 = this._workingKey [129] ^ BytesToWord (inputBuffer' inputOffset + 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 = this._workingKey [128] ^ BytesToWord (inputBuffer' inputOffset + 12);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 = this._workingKey [128] ^ BytesToWord (inputBuffer' inputOffset + 12);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [124];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [125];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [126];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [127];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [120];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [121];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [122];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [123];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [116];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [117];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [118];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [119];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [112];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [113];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [114];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [115];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [108];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [109];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [110];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [111];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [104];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [105];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [106];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [107];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [100];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [101];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [102];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [103];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [96];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [97];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [98];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [99];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [92];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [93];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [94];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [95];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [88];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [89];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [90];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [91];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [84];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [85];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [86];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [87];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [80];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [81];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [82];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [83];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [76];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [77];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [78];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [79];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [72];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [73];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [74];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [75];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [68];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [69];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [70];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [71];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [64];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [65];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [66];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [67];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [60];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [61];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [62];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [63];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [56];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [57];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [58];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [59];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [52];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [53];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [54];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [55];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [48];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [49];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [50];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [51];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [44];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [45];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [46];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [47];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [40];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [41];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [42];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [43];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [36];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [37];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [38];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [39];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [32];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [33];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [34];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [35];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [28];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [29];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [30];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [31];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [24];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [25];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [26];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [27];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [20];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [21];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [22];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [23];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [16];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [17];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [18];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [19];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [12];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [13];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [14];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [15];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [8];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [9];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [10];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [11];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x0 ^= this._workingKey [4];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x1 ^= this._workingKey [5];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x2 ^= this._workingKey [6];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: this._x3 ^= this._workingKey [7];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: WordToBytes (this._x3 ^ this._workingKey [3]' outputBuffer' outputOffset);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: WordToBytes (this._x2 ^ this._workingKey [2]' outputBuffer' outputOffset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: WordToBytes (this._x2 ^ this._workingKey [2]' outputBuffer' outputOffset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: WordToBytes (this._x1 ^ this._workingKey [1]' outputBuffer' outputOffset + 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,DecryptBlock,The following statement contains a magic number: WordToBytes (this._x0 ^ this._workingKey [0]' outputBuffer' outputOffset + 12);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: for (off = key.Length - 4; off > 0; off -= 4) {  	kPad [length++] = BytesToWord (key' off);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: for (off = key.Length - 4; off > 0; off -= 4) {  	kPad [length++] = BytesToWord (key' off);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: off = key.Length - 4
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: off -= 4
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: if (off == 0) {  	kPad [length++] = BytesToWord (key' 0);  	if (length < 8) {  		kPad [length] = 1;  	}  }  else {  	throw new ArgumentException ("key must be a multiple of 4 bytes");  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: if (length < 8) {  	kPad [length] = 1;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: for (int i = 8; i < 16; i++) {  	kPad [i] = RotateLeft (kPad [i - 8] ^ kPad [i - 5] ^ kPad [i - 3] ^ kPad [i - 1] ^ PHI ^ (i - 8)' 11);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: for (int i = 8; i < 16; i++) {  	kPad [i] = RotateLeft (kPad [i - 8] ^ kPad [i - 5] ^ kPad [i - 3] ^ kPad [i - 1] ^ PHI ^ (i - 8)' 11);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: for (int i = 8; i < 16; i++) {  	kPad [i] = RotateLeft (kPad [i - 8] ^ kPad [i - 5] ^ kPad [i - 3] ^ kPad [i - 1] ^ PHI ^ (i - 8)' 11);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: for (int i = 8; i < 16; i++) {  	kPad [i] = RotateLeft (kPad [i - 8] ^ kPad [i - 5] ^ kPad [i - 3] ^ kPad [i - 1] ^ PHI ^ (i - 8)' 11);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: for (int i = 8; i < 16; i++) {  	kPad [i] = RotateLeft (kPad [i - 8] ^ kPad [i - 5] ^ kPad [i - 3] ^ kPad [i - 1] ^ PHI ^ (i - 8)' 11);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: for (int i = 8; i < 16; i++) {  	kPad [i] = RotateLeft (kPad [i - 8] ^ kPad [i - 5] ^ kPad [i - 3] ^ kPad [i - 1] ^ PHI ^ (i - 8)' 11);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: for (int i = 8; i < 16; i++) {  	kPad [i] = RotateLeft (kPad [i - 8] ^ kPad [i - 5] ^ kPad [i - 3] ^ kPad [i - 1] ^ PHI ^ (i - 8)' 11);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: kPad [i] = RotateLeft (kPad [i - 8] ^ kPad [i - 5] ^ kPad [i - 3] ^ kPad [i - 1] ^ PHI ^ (i - 8)' 11);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: kPad [i] = RotateLeft (kPad [i - 8] ^ kPad [i - 5] ^ kPad [i - 3] ^ kPad [i - 1] ^ PHI ^ (i - 8)' 11);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: kPad [i] = RotateLeft (kPad [i - 8] ^ kPad [i - 5] ^ kPad [i - 3] ^ kPad [i - 1] ^ PHI ^ (i - 8)' 11);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: kPad [i] = RotateLeft (kPad [i - 8] ^ kPad [i - 5] ^ kPad [i - 3] ^ kPad [i - 1] ^ PHI ^ (i - 8)' 11);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: kPad [i] = RotateLeft (kPad [i - 8] ^ kPad [i - 5] ^ kPad [i - 3] ^ kPad [i - 1] ^ PHI ^ (i - 8)' 11);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Buffer.BlockCopy (kPad' 8' w' 0' 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Buffer.BlockCopy (kPad' 8' w' 0' 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: for (int i = 8; i < amount; i++) {  	w [i] = RotateLeft (w [i - 8] ^ w [i - 5] ^ w [i - 3] ^ w [i - 1] ^ PHI ^ i' 11);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: for (int i = 8; i < amount; i++) {  	w [i] = RotateLeft (w [i - 8] ^ w [i - 5] ^ w [i - 3] ^ w [i - 1] ^ PHI ^ i' 11);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: for (int i = 8; i < amount; i++) {  	w [i] = RotateLeft (w [i - 8] ^ w [i - 5] ^ w [i - 3] ^ w [i - 1] ^ PHI ^ i' 11);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: for (int i = 8; i < amount; i++) {  	w [i] = RotateLeft (w [i - 8] ^ w [i - 5] ^ w [i - 3] ^ w [i - 1] ^ PHI ^ i' 11);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: for (int i = 8; i < amount; i++) {  	w [i] = RotateLeft (w [i - 8] ^ w [i - 5] ^ w [i - 3] ^ w [i - 1] ^ PHI ^ i' 11);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [i] = RotateLeft (w [i - 8] ^ w [i - 5] ^ w [i - 3] ^ w [i - 1] ^ PHI ^ i' 11);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [i] = RotateLeft (w [i - 8] ^ w [i - 5] ^ w [i - 3] ^ w [i - 1] ^ PHI ^ i' 11);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [i] = RotateLeft (w [i - 8] ^ w [i - 5] ^ w [i - 3] ^ w [i - 1] ^ PHI ^ i' 11);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [i] = RotateLeft (w [i - 8] ^ w [i - 5] ^ w [i - 3] ^ w [i - 1] ^ PHI ^ i' 11);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [0]' w [1]' w [2]' w [3]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [0]' w [1]' w [2]' w [3]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [2] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [3] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [4]' w [5]' w [6]' w [7]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [4]' w [5]' w [6]' w [7]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [4]' w [5]' w [6]' w [7]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [4]' w [5]' w [6]' w [7]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [4] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [5] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [6] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [7] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [8]' w [9]' w [10]' w [11]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [8]' w [9]' w [10]' w [11]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [8]' w [9]' w [10]' w [11]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [8]' w [9]' w [10]' w [11]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [8] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [9] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [10] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [11] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [12]' w [13]' w [14]' w [15]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [12]' w [13]' w [14]' w [15]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [12]' w [13]' w [14]' w [15]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [12]' w [13]' w [14]' w [15]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [12] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [13] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [14] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [15] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [16]' w [17]' w [18]' w [19]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [16]' w [17]' w [18]' w [19]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [16]' w [17]' w [18]' w [19]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [16]' w [17]' w [18]' w [19]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [16] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [17] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [18] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [19] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [20]' w [21]' w [22]' w [23]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [20]' w [21]' w [22]' w [23]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [20]' w [21]' w [22]' w [23]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [20]' w [21]' w [22]' w [23]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [20] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [21] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [22] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [23] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [24]' w [25]' w [26]' w [27]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [24]' w [25]' w [26]' w [27]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [24]' w [25]' w [26]' w [27]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [24]' w [25]' w [26]' w [27]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [24] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [25] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [26] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [27] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [28]' w [29]' w [30]' w [31]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [28]' w [29]' w [30]' w [31]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [28]' w [29]' w [30]' w [31]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [28]' w [29]' w [30]' w [31]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [28] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [29] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [30] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [31] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [32]' w [33]' w [34]' w [35]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [32]' w [33]' w [34]' w [35]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [32]' w [33]' w [34]' w [35]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [32]' w [33]' w [34]' w [35]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [32] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [33] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [34] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [35] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [36]' w [37]' w [38]' w [39]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [36]' w [37]' w [38]' w [39]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [36]' w [37]' w [38]' w [39]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [36]' w [37]' w [38]' w [39]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [36] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [37] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [38] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [39] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [40]' w [41]' w [42]' w [43]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [40]' w [41]' w [42]' w [43]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [40]' w [41]' w [42]' w [43]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [40]' w [41]' w [42]' w [43]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [40] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [41] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [42] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [43] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [44]' w [45]' w [46]' w [47]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [44]' w [45]' w [46]' w [47]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [44]' w [45]' w [46]' w [47]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [44]' w [45]' w [46]' w [47]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [44] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [45] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [46] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [47] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [48]' w [49]' w [50]' w [51]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [48]' w [49]' w [50]' w [51]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [48]' w [49]' w [50]' w [51]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [48]' w [49]' w [50]' w [51]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [48] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [49] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [50] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [51] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [52]' w [53]' w [54]' w [55]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [52]' w [53]' w [54]' w [55]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [52]' w [53]' w [54]' w [55]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [52]' w [53]' w [54]' w [55]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [52] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [53] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [54] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [55] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [56]' w [57]' w [58]' w [59]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [56]' w [57]' w [58]' w [59]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [56]' w [57]' w [58]' w [59]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [56]' w [57]' w [58]' w [59]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [56] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [57] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [58] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [59] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [60]' w [61]' w [62]' w [63]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [60]' w [61]' w [62]' w [63]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [60]' w [61]' w [62]' w [63]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [60]' w [61]' w [62]' w [63]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [60] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [61] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [62] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [63] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [64]' w [65]' w [66]' w [67]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [64]' w [65]' w [66]' w [67]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [64]' w [65]' w [66]' w [67]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [64]' w [65]' w [66]' w [67]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [64] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [65] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [66] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [67] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [68]' w [69]' w [70]' w [71]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [68]' w [69]' w [70]' w [71]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [68]' w [69]' w [70]' w [71]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [68]' w [69]' w [70]' w [71]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [68] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [69] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [70] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [71] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [72]' w [73]' w [74]' w [75]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [72]' w [73]' w [74]' w [75]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [72]' w [73]' w [74]' w [75]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [72]' w [73]' w [74]' w [75]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [72] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [73] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [74] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [75] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [76]' w [77]' w [78]' w [79]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [76]' w [77]' w [78]' w [79]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [76]' w [77]' w [78]' w [79]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [76]' w [77]' w [78]' w [79]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [76] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [77] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [78] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [79] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [80]' w [81]' w [82]' w [83]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [80]' w [81]' w [82]' w [83]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [80]' w [81]' w [82]' w [83]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [80]' w [81]' w [82]' w [83]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [80] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [81] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [82] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [83] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [84]' w [85]' w [86]' w [87]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [84]' w [85]' w [86]' w [87]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [84]' w [85]' w [86]' w [87]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [84]' w [85]' w [86]' w [87]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [84] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [85] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [86] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [87] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [88]' w [89]' w [90]' w [91]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [88]' w [89]' w [90]' w [91]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [88]' w [89]' w [90]' w [91]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [88]' w [89]' w [90]' w [91]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [88] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [89] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [90] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [91] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [92]' w [93]' w [94]' w [95]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [92]' w [93]' w [94]' w [95]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [92]' w [93]' w [94]' w [95]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [92]' w [93]' w [94]' w [95]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [92] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [93] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [94] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [95] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [96]' w [97]' w [98]' w [99]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [96]' w [97]' w [98]' w [99]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [96]' w [97]' w [98]' w [99]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [96]' w [97]' w [98]' w [99]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [96] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [97] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [98] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [99] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [100]' w [101]' w [102]' w [103]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [100]' w [101]' w [102]' w [103]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [100]' w [101]' w [102]' w [103]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb2 (w [100]' w [101]' w [102]' w [103]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [100] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [101] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [102] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [103] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [104]' w [105]' w [106]' w [107]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [104]' w [105]' w [106]' w [107]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [104]' w [105]' w [106]' w [107]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb1 (w [104]' w [105]' w [106]' w [107]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [104] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [105] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [106] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [107] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [108]' w [109]' w [110]' w [111]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [108]' w [109]' w [110]' w [111]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [108]' w [109]' w [110]' w [111]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb0 (w [108]' w [109]' w [110]' w [111]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [108] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [109] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [110] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [111] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [112]' w [113]' w [114]' w [115]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [112]' w [113]' w [114]' w [115]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [112]' w [113]' w [114]' w [115]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb7 (w [112]' w [113]' w [114]' w [115]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [112] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [113] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [114] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [115] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [116]' w [117]' w [118]' w [119]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [116]' w [117]' w [118]' w [119]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [116]' w [117]' w [118]' w [119]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb6 (w [116]' w [117]' w [118]' w [119]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [116] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [117] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [118] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [119] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [120]' w [121]' w [122]' w [123]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [120]' w [121]' w [122]' w [123]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [120]' w [121]' w [122]' w [123]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb5 (w [120]' w [121]' w [122]' w [123]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [120] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [121] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [122] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [123] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [124]' w [125]' w [126]' w [127]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [124]' w [125]' w [126]' w [127]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [124]' w [125]' w [126]' w [127]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb4 (w [124]' w [125]' w [126]' w [127]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [124] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [125] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [126] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [127] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [128]' w [129]' w [130]' w [131]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [128]' w [129]' w [130]' w [131]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [128]' w [129]' w [130]' w [131]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: Sb3 (w [128]' w [129]' w [130]' w [131]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [128] = this._x0;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [129] = this._x1;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [130] = this._x2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,MakeWorkingKey,The following statement contains a magic number: w [131] = this._x3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,RotateLeft,The following statement contains a magic number: return ((x << bits) | (int)((uint)x >> (32 - bits)));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,RotateRight,The following statement contains a magic number: return ((int)((uint)x >> bits) | (x << (32 - bits)));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,BytesToWord,The following statement contains a magic number: return (((src [srcOff] & 0xff) << 24) | ((src [srcOff + 1] & 0xff) << 16) | ((src [srcOff + 2] & 0xff) << 8) | ((src [srcOff + 3] & 0xff)));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,BytesToWord,The following statement contains a magic number: return (((src [srcOff] & 0xff) << 24) | ((src [srcOff + 1] & 0xff) << 16) | ((src [srcOff + 2] & 0xff) << 8) | ((src [srcOff + 3] & 0xff)));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,BytesToWord,The following statement contains a magic number: return (((src [srcOff] & 0xff) << 24) | ((src [srcOff + 1] & 0xff) << 16) | ((src [srcOff + 2] & 0xff) << 8) | ((src [srcOff + 3] & 0xff)));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,BytesToWord,The following statement contains a magic number: return (((src [srcOff] & 0xff) << 24) | ((src [srcOff + 1] & 0xff) << 16) | ((src [srcOff + 2] & 0xff) << 8) | ((src [srcOff + 3] & 0xff)));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,BytesToWord,The following statement contains a magic number: return (((src [srcOff] & 0xff) << 24) | ((src [srcOff + 1] & 0xff) << 16) | ((src [srcOff + 2] & 0xff) << 8) | ((src [srcOff + 3] & 0xff)));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,WordToBytes,The following statement contains a magic number: dst [dstOff + 3] = (byte)(word);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,WordToBytes,The following statement contains a magic number: dst [dstOff + 2] = (byte)((uint)word >> 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,WordToBytes,The following statement contains a magic number: dst [dstOff + 2] = (byte)((uint)word >> 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,WordToBytes,The following statement contains a magic number: dst [dstOff + 1] = (byte)((uint)word >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,WordToBytes,The following statement contains a magic number: dst [dstOff] = (byte)((uint)word >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,LT,The following statement contains a magic number: this._x3 = RotateLeft (x3' 7);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,LT,The following statement contains a magic number: this._x0 = RotateLeft (x0 ^ this._x1 ^ this._x3' 5);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,LT,The following statement contains a magic number: this._x2 = RotateLeft (x2 ^ this._x3 ^ (this._x1 << 7)' 22);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,LT,The following statement contains a magic number: this._x2 = RotateLeft (x2 ^ this._x3 ^ (this._x1 << 7)' 22);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,InverseLT,The following statement contains a magic number: this._x3 = x3 ^ x2 ^ x0 << 3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,InverseLT,The following statement contains a magic number: this._x2 = RotateRight (x2' 3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,SerpentCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\SerpentCipher.cs,InverseLT,The following statement contains a magic number: this._x0 = RotateRight (x0' 13);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: if (this._encryptionKey1 == null || this._encryptionKey2 == null || this._encryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._encryptionKey1 = this.GenerateWorkingKey (true' part1);  	this._encryptionKey2 = this.GenerateWorkingKey (false' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._encryptionKey3 = this.GenerateWorkingKey (true' part3);  	}  	else {  		this._encryptionKey3 = this._encryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: if (this._encryptionKey1 == null || this._encryptionKey2 == null || this._encryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._encryptionKey1 = this.GenerateWorkingKey (true' part1);  	this._encryptionKey2 = this.GenerateWorkingKey (false' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._encryptionKey3 = this.GenerateWorkingKey (true' part3);  	}  	else {  		this._encryptionKey3 = this._encryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: if (this._encryptionKey1 == null || this._encryptionKey2 == null || this._encryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._encryptionKey1 = this.GenerateWorkingKey (true' part1);  	this._encryptionKey2 = this.GenerateWorkingKey (false' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._encryptionKey3 = this.GenerateWorkingKey (true' part3);  	}  	else {  		this._encryptionKey3 = this._encryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: if (this._encryptionKey1 == null || this._encryptionKey2 == null || this._encryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._encryptionKey1 = this.GenerateWorkingKey (true' part1);  	this._encryptionKey2 = this.GenerateWorkingKey (false' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._encryptionKey3 = this.GenerateWorkingKey (true' part3);  	}  	else {  		this._encryptionKey3 = this._encryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: if (this._encryptionKey1 == null || this._encryptionKey2 == null || this._encryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._encryptionKey1 = this.GenerateWorkingKey (true' part1);  	this._encryptionKey2 = this.GenerateWorkingKey (false' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._encryptionKey3 = this.GenerateWorkingKey (true' part3);  	}  	else {  		this._encryptionKey3 = this._encryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: if (this._encryptionKey1 == null || this._encryptionKey2 == null || this._encryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._encryptionKey1 = this.GenerateWorkingKey (true' part1);  	this._encryptionKey2 = this.GenerateWorkingKey (false' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._encryptionKey3 = this.GenerateWorkingKey (true' part3);  	}  	else {  		this._encryptionKey3 = this._encryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: if (this._encryptionKey1 == null || this._encryptionKey2 == null || this._encryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._encryptionKey1 = this.GenerateWorkingKey (true' part1);  	this._encryptionKey2 = this.GenerateWorkingKey (false' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._encryptionKey3 = this.GenerateWorkingKey (true' part3);  	}  	else {  		this._encryptionKey3 = this._encryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: if (this._encryptionKey1 == null || this._encryptionKey2 == null || this._encryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._encryptionKey1 = this.GenerateWorkingKey (true' part1);  	this._encryptionKey2 = this.GenerateWorkingKey (false' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._encryptionKey3 = this.GenerateWorkingKey (true' part3);  	}  	else {  		this._encryptionKey3 = this._encryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: if (this._encryptionKey1 == null || this._encryptionKey2 == null || this._encryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._encryptionKey1 = this.GenerateWorkingKey (true' part1);  	this._encryptionKey2 = this.GenerateWorkingKey (false' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._encryptionKey3 = this.GenerateWorkingKey (true' part3);  	}  	else {  		this._encryptionKey3 = this._encryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: if (this.Key.Length == 24) {  	var part3 = new byte[8];  	Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  	this._encryptionKey3 = this.GenerateWorkingKey (true' part3);  }  else {  	this._encryptionKey3 = this._encryptionKey1;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: if (this.Key.Length == 24) {  	var part3 = new byte[8];  	Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  	this._encryptionKey3 = this.GenerateWorkingKey (true' part3);  }  else {  	this._encryptionKey3 = this._encryptionKey1;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: if (this.Key.Length == 24) {  	var part3 = new byte[8];  	Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  	this._encryptionKey3 = this.GenerateWorkingKey (true' part3);  }  else {  	this._encryptionKey3 = this._encryptionKey1;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: if (this.Key.Length == 24) {  	var part3 = new byte[8];  	Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  	this._encryptionKey3 = this.GenerateWorkingKey (true' part3);  }  else {  	this._encryptionKey3 = this._encryptionKey1;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,EncryptBlock,The following statement contains a magic number: Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: if (this._decryptionKey1 == null || this._decryptionKey2 == null || this._decryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._decryptionKey1 = this.GenerateWorkingKey (false' part1);  	this._decryptionKey2 = this.GenerateWorkingKey (true' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._decryptionKey3 = this.GenerateWorkingKey (false' part3);  	}  	else {  		this._decryptionKey3 = this._decryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: if (this._decryptionKey1 == null || this._decryptionKey2 == null || this._decryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._decryptionKey1 = this.GenerateWorkingKey (false' part1);  	this._decryptionKey2 = this.GenerateWorkingKey (true' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._decryptionKey3 = this.GenerateWorkingKey (false' part3);  	}  	else {  		this._decryptionKey3 = this._decryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: if (this._decryptionKey1 == null || this._decryptionKey2 == null || this._decryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._decryptionKey1 = this.GenerateWorkingKey (false' part1);  	this._decryptionKey2 = this.GenerateWorkingKey (true' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._decryptionKey3 = this.GenerateWorkingKey (false' part3);  	}  	else {  		this._decryptionKey3 = this._decryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: if (this._decryptionKey1 == null || this._decryptionKey2 == null || this._decryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._decryptionKey1 = this.GenerateWorkingKey (false' part1);  	this._decryptionKey2 = this.GenerateWorkingKey (true' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._decryptionKey3 = this.GenerateWorkingKey (false' part3);  	}  	else {  		this._decryptionKey3 = this._decryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: if (this._decryptionKey1 == null || this._decryptionKey2 == null || this._decryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._decryptionKey1 = this.GenerateWorkingKey (false' part1);  	this._decryptionKey2 = this.GenerateWorkingKey (true' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._decryptionKey3 = this.GenerateWorkingKey (false' part3);  	}  	else {  		this._decryptionKey3 = this._decryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: if (this._decryptionKey1 == null || this._decryptionKey2 == null || this._decryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._decryptionKey1 = this.GenerateWorkingKey (false' part1);  	this._decryptionKey2 = this.GenerateWorkingKey (true' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._decryptionKey3 = this.GenerateWorkingKey (false' part3);  	}  	else {  		this._decryptionKey3 = this._decryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: if (this._decryptionKey1 == null || this._decryptionKey2 == null || this._decryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._decryptionKey1 = this.GenerateWorkingKey (false' part1);  	this._decryptionKey2 = this.GenerateWorkingKey (true' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._decryptionKey3 = this.GenerateWorkingKey (false' part3);  	}  	else {  		this._decryptionKey3 = this._decryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: if (this._decryptionKey1 == null || this._decryptionKey2 == null || this._decryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._decryptionKey1 = this.GenerateWorkingKey (false' part1);  	this._decryptionKey2 = this.GenerateWorkingKey (true' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._decryptionKey3 = this.GenerateWorkingKey (false' part3);  	}  	else {  		this._decryptionKey3 = this._decryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: if (this._decryptionKey1 == null || this._decryptionKey2 == null || this._decryptionKey3 == null) {  	var part1 = new byte[8];  	var part2 = new byte[8];  	Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  	Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  	this._decryptionKey1 = this.GenerateWorkingKey (false' part1);  	this._decryptionKey2 = this.GenerateWorkingKey (true' part2);  	if (this.Key.Length == 24) {  		var part3 = new byte[8];  		Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  		this._decryptionKey3 = this.GenerateWorkingKey (false' part3);  	}  	else {  		this._decryptionKey3 = this._decryptionKey1;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: Buffer.BlockCopy (this.Key' 0' part1' 0' 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: Buffer.BlockCopy (this.Key' 8' part2' 0' 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: if (this.Key.Length == 24) {  	var part3 = new byte[8];  	Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  	this._decryptionKey3 = this.GenerateWorkingKey (false' part3);  }  else {  	this._decryptionKey3 = this._decryptionKey1;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: if (this.Key.Length == 24) {  	var part3 = new byte[8];  	Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  	this._decryptionKey3 = this.GenerateWorkingKey (false' part3);  }  else {  	this._decryptionKey3 = this._decryptionKey1;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: if (this.Key.Length == 24) {  	var part3 = new byte[8];  	Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  	this._decryptionKey3 = this.GenerateWorkingKey (false' part3);  }  else {  	this._decryptionKey3 = this._decryptionKey1;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: if (this.Key.Length == 24) {  	var part3 = new byte[8];  	Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  	this._decryptionKey3 = this.GenerateWorkingKey (false' part3);  }  else {  	this._decryptionKey3 = this._decryptionKey1;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,DecryptBlock,The following statement contains a magic number: Buffer.BlockCopy (this.Key' 16' part3' 0' 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,ValidateKey,The following statement contains a magic number: if (!(keySize == 128 || keySize == 128 + 64))  	throw new ArgumentException (string.Format ("KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,ValidateKey,The following statement contains a magic number: if (!(keySize == 128 || keySize == 128 + 64))  	throw new ArgumentException (string.Format ("KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TripleDesCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TripleDesCipher.cs,ValidateKey,The following statement contains a magic number: if (!(keySize == 128 || keySize == 128 + 64))  	throw new ArgumentException (string.Format ("KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: if (!(keySize == 128 || keySize == 192 || keySize == 256))  	throw new ArgumentException (string.Format ("KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: if (!(keySize == 128 || keySize == 192 || keySize == 256))  	throw new ArgumentException (string.Format ("KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: if (!(keySize == 128 || keySize == 192 || keySize == 256))  	throw new ArgumentException (string.Format ("KeySize '{0}' is not valid for this algorithm."' keySize));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	j = P [0 + i] & 0xff;  	m1 [0] = j;  	mX [0] = Mx_X (j) & 0xff;  	mY [0] = Mx_Y (j) & 0xff;  	j = P [(1 * 256) + i] & 0xff;  	m1 [1] = j;  	mX [1] = Mx_X (j) & 0xff;  	mY [1] = Mx_Y (j) & 0xff;  	gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  	gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  	gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  	gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	j = P [0 + i] & 0xff;  	m1 [0] = j;  	mX [0] = Mx_X (j) & 0xff;  	mY [0] = Mx_Y (j) & 0xff;  	j = P [(1 * 256) + i] & 0xff;  	m1 [1] = j;  	mX [1] = Mx_X (j) & 0xff;  	mY [1] = Mx_Y (j) & 0xff;  	gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  	gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  	gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  	gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	j = P [0 + i] & 0xff;  	m1 [0] = j;  	mX [0] = Mx_X (j) & 0xff;  	mY [0] = Mx_Y (j) & 0xff;  	j = P [(1 * 256) + i] & 0xff;  	m1 [1] = j;  	mX [1] = Mx_X (j) & 0xff;  	mY [1] = Mx_Y (j) & 0xff;  	gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  	gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  	gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  	gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	j = P [0 + i] & 0xff;  	m1 [0] = j;  	mX [0] = Mx_X (j) & 0xff;  	mY [0] = Mx_Y (j) & 0xff;  	j = P [(1 * 256) + i] & 0xff;  	m1 [1] = j;  	mX [1] = Mx_X (j) & 0xff;  	mY [1] = Mx_Y (j) & 0xff;  	gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  	gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  	gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  	gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	j = P [0 + i] & 0xff;  	m1 [0] = j;  	mX [0] = Mx_X (j) & 0xff;  	mY [0] = Mx_Y (j) & 0xff;  	j = P [(1 * 256) + i] & 0xff;  	m1 [1] = j;  	mX [1] = Mx_X (j) & 0xff;  	mY [1] = Mx_Y (j) & 0xff;  	gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  	gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  	gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  	gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	j = P [0 + i] & 0xff;  	m1 [0] = j;  	mX [0] = Mx_X (j) & 0xff;  	mY [0] = Mx_Y (j) & 0xff;  	j = P [(1 * 256) + i] & 0xff;  	m1 [1] = j;  	mX [1] = Mx_X (j) & 0xff;  	mY [1] = Mx_Y (j) & 0xff;  	gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  	gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  	gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  	gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	j = P [0 + i] & 0xff;  	m1 [0] = j;  	mX [0] = Mx_X (j) & 0xff;  	mY [0] = Mx_Y (j) & 0xff;  	j = P [(1 * 256) + i] & 0xff;  	m1 [1] = j;  	mX [1] = Mx_X (j) & 0xff;  	mY [1] = Mx_Y (j) & 0xff;  	gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  	gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  	gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  	gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	j = P [0 + i] & 0xff;  	m1 [0] = j;  	mX [0] = Mx_X (j) & 0xff;  	mY [0] = Mx_Y (j) & 0xff;  	j = P [(1 * 256) + i] & 0xff;  	m1 [1] = j;  	mX [1] = Mx_X (j) & 0xff;  	mY [1] = Mx_Y (j) & 0xff;  	gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  	gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  	gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  	gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	j = P [0 + i] & 0xff;  	m1 [0] = j;  	mX [0] = Mx_X (j) & 0xff;  	mY [0] = Mx_Y (j) & 0xff;  	j = P [(1 * 256) + i] & 0xff;  	m1 [1] = j;  	mX [1] = Mx_X (j) & 0xff;  	mY [1] = Mx_Y (j) & 0xff;  	gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  	gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  	gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  	gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	j = P [0 + i] & 0xff;  	m1 [0] = j;  	mX [0] = Mx_X (j) & 0xff;  	mY [0] = Mx_Y (j) & 0xff;  	j = P [(1 * 256) + i] & 0xff;  	m1 [1] = j;  	mX [1] = Mx_X (j) & 0xff;  	mY [1] = Mx_Y (j) & 0xff;  	gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  	gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  	gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  	gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	j = P [0 + i] & 0xff;  	m1 [0] = j;  	mX [0] = Mx_X (j) & 0xff;  	mY [0] = Mx_Y (j) & 0xff;  	j = P [(1 * 256) + i] & 0xff;  	m1 [1] = j;  	mX [1] = Mx_X (j) & 0xff;  	mY [1] = Mx_Y (j) & 0xff;  	gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  	gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  	gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  	gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	j = P [0 + i] & 0xff;  	m1 [0] = j;  	mX [0] = Mx_X (j) & 0xff;  	mY [0] = Mx_Y (j) & 0xff;  	j = P [(1 * 256) + i] & 0xff;  	m1 [1] = j;  	mX [1] = Mx_X (j) & 0xff;  	mY [1] = Mx_Y (j) & 0xff;  	gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  	gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  	gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  	gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	j = P [0 + i] & 0xff;  	m1 [0] = j;  	mX [0] = Mx_X (j) & 0xff;  	mY [0] = Mx_Y (j) & 0xff;  	j = P [(1 * 256) + i] & 0xff;  	m1 [1] = j;  	mX [1] = Mx_X (j) & 0xff;  	mY [1] = Mx_Y (j) & 0xff;  	gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  	gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  	gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  	gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: j = P [(1 * 256) + i] & 0xff;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: gMDS0 [i] = m1 [P_00] | mX [P_00] << 8 | mY [P_00] << 16 | mY [P_00] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: gMDS1 [i] = mY [P_10] | mY [P_10] << 8 | mX [P_10] << 16 | m1 [P_10] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: gMDS2 [i] = mX [P_20] | mY [P_20] << 8 | m1 [P_20] << 16 | mY [P_20] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: gMDS3 [i] = mX [P_30] | m1 [P_30] << 8 | mY [P_30] << 16 | mX [P_30] << 24;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,TwofishCipher,The following statement contains a magic number: this.k64Cnt = key.Length / 8;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: for (int r = 0; r < ROUNDS; r += 2) {  	t0 = Fe32_0 (gSBox' x0);  	t1 = Fe32_3 (gSBox' x1);  	x2 ^= t0 + t1 + gSubKeys [k++];  	x2 = (int)((uint)x2 >> 1) | x2 << 31;  	x3 = (x3 << 1 | (int)((uint)x3 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  	t0 = Fe32_0 (gSBox' x2);  	t1 = Fe32_3 (gSBox' x3);  	x0 ^= t0 + t1 + gSubKeys [k++];  	x0 = (int)((uint)x0 >> 1) | x0 << 31;  	x1 = (x1 << 1 | (int)((uint)x1 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: for (int r = 0; r < ROUNDS; r += 2) {  	t0 = Fe32_0 (gSBox' x0);  	t1 = Fe32_3 (gSBox' x1);  	x2 ^= t0 + t1 + gSubKeys [k++];  	x2 = (int)((uint)x2 >> 1) | x2 << 31;  	x3 = (x3 << 1 | (int)((uint)x3 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  	t0 = Fe32_0 (gSBox' x2);  	t1 = Fe32_3 (gSBox' x3);  	x0 ^= t0 + t1 + gSubKeys [k++];  	x0 = (int)((uint)x0 >> 1) | x0 << 31;  	x1 = (x1 << 1 | (int)((uint)x1 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: for (int r = 0; r < ROUNDS; r += 2) {  	t0 = Fe32_0 (gSBox' x0);  	t1 = Fe32_3 (gSBox' x1);  	x2 ^= t0 + t1 + gSubKeys [k++];  	x2 = (int)((uint)x2 >> 1) | x2 << 31;  	x3 = (x3 << 1 | (int)((uint)x3 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  	t0 = Fe32_0 (gSBox' x2);  	t1 = Fe32_3 (gSBox' x3);  	x0 ^= t0 + t1 + gSubKeys [k++];  	x0 = (int)((uint)x0 >> 1) | x0 << 31;  	x1 = (x1 << 1 | (int)((uint)x1 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: for (int r = 0; r < ROUNDS; r += 2) {  	t0 = Fe32_0 (gSBox' x0);  	t1 = Fe32_3 (gSBox' x1);  	x2 ^= t0 + t1 + gSubKeys [k++];  	x2 = (int)((uint)x2 >> 1) | x2 << 31;  	x3 = (x3 << 1 | (int)((uint)x3 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  	t0 = Fe32_0 (gSBox' x2);  	t1 = Fe32_3 (gSBox' x3);  	x0 ^= t0 + t1 + gSubKeys [k++];  	x0 = (int)((uint)x0 >> 1) | x0 << 31;  	x1 = (x1 << 1 | (int)((uint)x1 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: for (int r = 0; r < ROUNDS; r += 2) {  	t0 = Fe32_0 (gSBox' x0);  	t1 = Fe32_3 (gSBox' x1);  	x2 ^= t0 + t1 + gSubKeys [k++];  	x2 = (int)((uint)x2 >> 1) | x2 << 31;  	x3 = (x3 << 1 | (int)((uint)x3 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  	t0 = Fe32_0 (gSBox' x2);  	t1 = Fe32_3 (gSBox' x3);  	x0 ^= t0 + t1 + gSubKeys [k++];  	x0 = (int)((uint)x0 >> 1) | x0 << 31;  	x1 = (x1 << 1 | (int)((uint)x1 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: for (int r = 0; r < ROUNDS; r += 2) {  	t0 = Fe32_0 (gSBox' x0);  	t1 = Fe32_3 (gSBox' x1);  	x2 ^= t0 + t1 + gSubKeys [k++];  	x2 = (int)((uint)x2 >> 1) | x2 << 31;  	x3 = (x3 << 1 | (int)((uint)x3 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  	t0 = Fe32_0 (gSBox' x2);  	t1 = Fe32_3 (gSBox' x3);  	x0 ^= t0 + t1 + gSubKeys [k++];  	x0 = (int)((uint)x0 >> 1) | x0 << 31;  	x1 = (x1 << 1 | (int)((uint)x1 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: for (int r = 0; r < ROUNDS; r += 2) {  	t0 = Fe32_0 (gSBox' x0);  	t1 = Fe32_3 (gSBox' x1);  	x2 ^= t0 + t1 + gSubKeys [k++];  	x2 = (int)((uint)x2 >> 1) | x2 << 31;  	x3 = (x3 << 1 | (int)((uint)x3 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  	t0 = Fe32_0 (gSBox' x2);  	t1 = Fe32_3 (gSBox' x3);  	x0 ^= t0 + t1 + gSubKeys [k++];  	x0 = (int)((uint)x0 >> 1) | x0 << 31;  	x1 = (x1 << 1 | (int)((uint)x1 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: r += 2
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: x2 = (int)((uint)x2 >> 1) | x2 << 31;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: x3 = (x3 << 1 | (int)((uint)x3 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: x3 = (x3 << 1 | (int)((uint)x3 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: x0 = (int)((uint)x0 >> 1) | x0 << 31;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: x1 = (x1 << 1 | (int)((uint)x1 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: x1 = (x1 << 1 | (int)((uint)x1 >> 31)) ^ (t0 + 2 * t1 + gSubKeys [k++]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: Bits32ToBytes (x3 ^ gSubKeys [OUTPUT_WHITEN + 1]' outputBuffer' outputOffset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: Bits32ToBytes (x0 ^ gSubKeys [OUTPUT_WHITEN + 2]' outputBuffer' outputOffset + 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: Bits32ToBytes (x0 ^ gSubKeys [OUTPUT_WHITEN + 2]' outputBuffer' outputOffset + 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: Bits32ToBytes (x1 ^ gSubKeys [OUTPUT_WHITEN + 3]' outputBuffer' outputOffset + 12);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,EncryptBlock,The following statement contains a magic number: Bits32ToBytes (x1 ^ gSubKeys [OUTPUT_WHITEN + 3]' outputBuffer' outputOffset + 12);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: for (int r = 0; r < ROUNDS; r += 2) {  	t0 = Fe32_0 (gSBox' x2);  	t1 = Fe32_3 (gSBox' x3);  	x1 ^= t0 + 2 * t1 + gSubKeys [k--];  	x0 = (x0 << 1 | (int)((uint)x0 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  	x1 = (int)((uint)x1 >> 1) | x1 << 31;  	t0 = Fe32_0 (gSBox' x0);  	t1 = Fe32_3 (gSBox' x1);  	x3 ^= t0 + 2 * t1 + gSubKeys [k--];  	x2 = (x2 << 1 | (int)((uint)x2 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  	x3 = (int)((uint)x3 >> 1) | x3 << 31;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: for (int r = 0; r < ROUNDS; r += 2) {  	t0 = Fe32_0 (gSBox' x2);  	t1 = Fe32_3 (gSBox' x3);  	x1 ^= t0 + 2 * t1 + gSubKeys [k--];  	x0 = (x0 << 1 | (int)((uint)x0 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  	x1 = (int)((uint)x1 >> 1) | x1 << 31;  	t0 = Fe32_0 (gSBox' x0);  	t1 = Fe32_3 (gSBox' x1);  	x3 ^= t0 + 2 * t1 + gSubKeys [k--];  	x2 = (x2 << 1 | (int)((uint)x2 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  	x3 = (int)((uint)x3 >> 1) | x3 << 31;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: for (int r = 0; r < ROUNDS; r += 2) {  	t0 = Fe32_0 (gSBox' x2);  	t1 = Fe32_3 (gSBox' x3);  	x1 ^= t0 + 2 * t1 + gSubKeys [k--];  	x0 = (x0 << 1 | (int)((uint)x0 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  	x1 = (int)((uint)x1 >> 1) | x1 << 31;  	t0 = Fe32_0 (gSBox' x0);  	t1 = Fe32_3 (gSBox' x1);  	x3 ^= t0 + 2 * t1 + gSubKeys [k--];  	x2 = (x2 << 1 | (int)((uint)x2 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  	x3 = (int)((uint)x3 >> 1) | x3 << 31;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: for (int r = 0; r < ROUNDS; r += 2) {  	t0 = Fe32_0 (gSBox' x2);  	t1 = Fe32_3 (gSBox' x3);  	x1 ^= t0 + 2 * t1 + gSubKeys [k--];  	x0 = (x0 << 1 | (int)((uint)x0 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  	x1 = (int)((uint)x1 >> 1) | x1 << 31;  	t0 = Fe32_0 (gSBox' x0);  	t1 = Fe32_3 (gSBox' x1);  	x3 ^= t0 + 2 * t1 + gSubKeys [k--];  	x2 = (x2 << 1 | (int)((uint)x2 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  	x3 = (int)((uint)x3 >> 1) | x3 << 31;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: for (int r = 0; r < ROUNDS; r += 2) {  	t0 = Fe32_0 (gSBox' x2);  	t1 = Fe32_3 (gSBox' x3);  	x1 ^= t0 + 2 * t1 + gSubKeys [k--];  	x0 = (x0 << 1 | (int)((uint)x0 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  	x1 = (int)((uint)x1 >> 1) | x1 << 31;  	t0 = Fe32_0 (gSBox' x0);  	t1 = Fe32_3 (gSBox' x1);  	x3 ^= t0 + 2 * t1 + gSubKeys [k--];  	x2 = (x2 << 1 | (int)((uint)x2 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  	x3 = (int)((uint)x3 >> 1) | x3 << 31;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: for (int r = 0; r < ROUNDS; r += 2) {  	t0 = Fe32_0 (gSBox' x2);  	t1 = Fe32_3 (gSBox' x3);  	x1 ^= t0 + 2 * t1 + gSubKeys [k--];  	x0 = (x0 << 1 | (int)((uint)x0 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  	x1 = (int)((uint)x1 >> 1) | x1 << 31;  	t0 = Fe32_0 (gSBox' x0);  	t1 = Fe32_3 (gSBox' x1);  	x3 ^= t0 + 2 * t1 + gSubKeys [k--];  	x2 = (x2 << 1 | (int)((uint)x2 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  	x3 = (int)((uint)x3 >> 1) | x3 << 31;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: for (int r = 0; r < ROUNDS; r += 2) {  	t0 = Fe32_0 (gSBox' x2);  	t1 = Fe32_3 (gSBox' x3);  	x1 ^= t0 + 2 * t1 + gSubKeys [k--];  	x0 = (x0 << 1 | (int)((uint)x0 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  	x1 = (int)((uint)x1 >> 1) | x1 << 31;  	t0 = Fe32_0 (gSBox' x0);  	t1 = Fe32_3 (gSBox' x1);  	x3 ^= t0 + 2 * t1 + gSubKeys [k--];  	x2 = (x2 << 1 | (int)((uint)x2 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  	x3 = (int)((uint)x3 >> 1) | x3 << 31;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: r += 2
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: x1 ^= t0 + 2 * t1 + gSubKeys [k--];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: x0 = (x0 << 1 | (int)((uint)x0 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: x1 = (int)((uint)x1 >> 1) | x1 << 31;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: x3 ^= t0 + 2 * t1 + gSubKeys [k--];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: x2 = (x2 << 1 | (int)((uint)x2 >> 31)) ^ (t0 + t1 + gSubKeys [k--]);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: x3 = (int)((uint)x3 >> 1) | x3 << 31;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: Bits32ToBytes (x1 ^ gSubKeys [INPUT_WHITEN + 1]' outputBuffer' outputOffset + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: Bits32ToBytes (x2 ^ gSubKeys [INPUT_WHITEN + 2]' outputBuffer' outputOffset + 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: Bits32ToBytes (x2 ^ gSubKeys [INPUT_WHITEN + 2]' outputBuffer' outputOffset + 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: Bits32ToBytes (x3 ^ gSubKeys [INPUT_WHITEN + 3]' outputBuffer' outputOffset + 12);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,DecryptBlock,The following statement contains a magic number: Bits32ToBytes (x3 ^ gSubKeys [INPUT_WHITEN + 3]' outputBuffer' outputOffset + 12);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: if (k64Cnt > 4) {  	throw new ArgumentException ("Key size larger than 256 bits");  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0' p = 0; i < k64Cnt; i++) {  	p = i * 8;  	k32e [i] = BytesTo32Bits (key' p);  	k32o [i] = BytesTo32Bits (key' p + 4);  	sBoxKeys [k64Cnt - 1 - i] = RS_MDS_Encode (k32e [i]' k32o [i]);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0' p = 0; i < k64Cnt; i++) {  	p = i * 8;  	k32e [i] = BytesTo32Bits (key' p);  	k32o [i] = BytesTo32Bits (key' p + 4);  	sBoxKeys [k64Cnt - 1 - i] = RS_MDS_Encode (k32e [i]' k32o [i]);  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: p = i * 8;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: k32o [i] = BytesTo32Bits (key' p + 4);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < TOTAL_SUBKEYS / 2; i++) {  	q = i * SK_STEP;  	A = F32 (q' k32e);  	B = F32 (q + SK_BUMP' k32o);  	B = B << 8 | (int)((uint)B >> 24);  	A += B;  	gSubKeys [i * 2] = A;  	A += B;  	gSubKeys [i * 2 + 1] = A << SK_ROTL | (int)((uint)A >> (32 - SK_ROTL));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < TOTAL_SUBKEYS / 2; i++) {  	q = i * SK_STEP;  	A = F32 (q' k32e);  	B = F32 (q + SK_BUMP' k32o);  	B = B << 8 | (int)((uint)B >> 24);  	A += B;  	gSubKeys [i * 2] = A;  	A += B;  	gSubKeys [i * 2 + 1] = A << SK_ROTL | (int)((uint)A >> (32 - SK_ROTL));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < TOTAL_SUBKEYS / 2; i++) {  	q = i * SK_STEP;  	A = F32 (q' k32e);  	B = F32 (q + SK_BUMP' k32o);  	B = B << 8 | (int)((uint)B >> 24);  	A += B;  	gSubKeys [i * 2] = A;  	A += B;  	gSubKeys [i * 2 + 1] = A << SK_ROTL | (int)((uint)A >> (32 - SK_ROTL));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < TOTAL_SUBKEYS / 2; i++) {  	q = i * SK_STEP;  	A = F32 (q' k32e);  	B = F32 (q + SK_BUMP' k32o);  	B = B << 8 | (int)((uint)B >> 24);  	A += B;  	gSubKeys [i * 2] = A;  	A += B;  	gSubKeys [i * 2 + 1] = A << SK_ROTL | (int)((uint)A >> (32 - SK_ROTL));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < TOTAL_SUBKEYS / 2; i++) {  	q = i * SK_STEP;  	A = F32 (q' k32e);  	B = F32 (q + SK_BUMP' k32o);  	B = B << 8 | (int)((uint)B >> 24);  	A += B;  	gSubKeys [i * 2] = A;  	A += B;  	gSubKeys [i * 2 + 1] = A << SK_ROTL | (int)((uint)A >> (32 - SK_ROTL));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < TOTAL_SUBKEYS / 2; i++) {  	q = i * SK_STEP;  	A = F32 (q' k32e);  	B = F32 (q + SK_BUMP' k32o);  	B = B << 8 | (int)((uint)B >> 24);  	A += B;  	gSubKeys [i * 2] = A;  	A += B;  	gSubKeys [i * 2 + 1] = A << SK_ROTL | (int)((uint)A >> (32 - SK_ROTL));  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: B = B << 8 | (int)((uint)B >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: B = B << 8 | (int)((uint)B >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSubKeys [i * 2] = A;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSubKeys [i * 2 + 1] = A << SK_ROTL | (int)((uint)A >> (32 - SK_ROTL));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSubKeys [i * 2 + 1] = A << SK_ROTL | (int)((uint)A >> (32 - SK_ROTL));  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox = new int[4 * MAX_KEY_BITS];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: for (int i = 0; i < MAX_KEY_BITS; i++) {  	b0 = b1 = b2 = b3 = i;  	switch (k64Cnt & 3) {  	case 1:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  		break;  	case 0:  		/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  		b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  		b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  		b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  		goto case 3;  	case 3:  		b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  		b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  		b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  		b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  		goto case 2;  	case 2:  		gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  		gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  		gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  		gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  		break;  	}  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: goto case 3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: goto case 2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following statement contains a magic number: gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: goto case 3;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: goto case 2;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following statement contains a magic number: result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,RS_rem,The following statement contains a magic number: return ((x << 8) ^ (g3 << 24) ^ (g2 << 16) ^ (g3 << 8) ^ b);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,RS_rem,The following statement contains a magic number: return ((x << 8) ^ (g3 << 24) ^ (g2 << 16) ^ (g3 << 8) ^ b);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,RS_rem,The following statement contains a magic number: return ((x << 8) ^ (g3 << 24) ^ (g2 << 16) ^ (g3 << 8) ^ b);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,RS_rem,The following statement contains a magic number: return ((x << 8) ^ (g3 << 24) ^ (g2 << 16) ^ (g3 << 8) ^ b);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,LFSR2,The following statement contains a magic number: return (x >> 2) ^ (((x & 0x02) != 0) ? GF256_FDBK_2 : 0) ^ (((x & 0x01) != 0) ? GF256_FDBK_4 : 0);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,M_b1,The following statement contains a magic number: return (int)((uint)x >> 8) & 0xff;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,M_b2,The following statement contains a magic number: return (int)((uint)x >> 16) & 0xff;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,M_b3,The following statement contains a magic number: return (int)((uint)x >> 24) & 0xff;  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_0,The following statement contains a magic number: return gSBox1 [0x000 + 2 * (x & 0xff)] ^ gSBox1 [0x001 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 16) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 24) & 0xff)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_0,The following statement contains a magic number: return gSBox1 [0x000 + 2 * (x & 0xff)] ^ gSBox1 [0x001 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 16) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 24) & 0xff)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_0,The following statement contains a magic number: return gSBox1 [0x000 + 2 * (x & 0xff)] ^ gSBox1 [0x001 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 16) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 24) & 0xff)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_0,The following statement contains a magic number: return gSBox1 [0x000 + 2 * (x & 0xff)] ^ gSBox1 [0x001 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 16) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 24) & 0xff)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_0,The following statement contains a magic number: return gSBox1 [0x000 + 2 * (x & 0xff)] ^ gSBox1 [0x001 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 16) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 24) & 0xff)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_0,The following statement contains a magic number: return gSBox1 [0x000 + 2 * (x & 0xff)] ^ gSBox1 [0x001 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 16) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 24) & 0xff)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_0,The following statement contains a magic number: return gSBox1 [0x000 + 2 * (x & 0xff)] ^ gSBox1 [0x001 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 16) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 24) & 0xff)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_3,The following statement contains a magic number: return gSBox1 [0x000 + 2 * ((int)((uint)x >> 24) & 0xff)] ^ gSBox1 [0x001 + 2 * (x & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 16) & 0xff)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_3,The following statement contains a magic number: return gSBox1 [0x000 + 2 * ((int)((uint)x >> 24) & 0xff)] ^ gSBox1 [0x001 + 2 * (x & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 16) & 0xff)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_3,The following statement contains a magic number: return gSBox1 [0x000 + 2 * ((int)((uint)x >> 24) & 0xff)] ^ gSBox1 [0x001 + 2 * (x & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 16) & 0xff)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_3,The following statement contains a magic number: return gSBox1 [0x000 + 2 * ((int)((uint)x >> 24) & 0xff)] ^ gSBox1 [0x001 + 2 * (x & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 16) & 0xff)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_3,The following statement contains a magic number: return gSBox1 [0x000 + 2 * ((int)((uint)x >> 24) & 0xff)] ^ gSBox1 [0x001 + 2 * (x & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 16) & 0xff)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_3,The following statement contains a magic number: return gSBox1 [0x000 + 2 * ((int)((uint)x >> 24) & 0xff)] ^ gSBox1 [0x001 + 2 * (x & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 16) & 0xff)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Fe32_3,The following statement contains a magic number: return gSBox1 [0x000 + 2 * ((int)((uint)x >> 24) & 0xff)] ^ gSBox1 [0x001 + 2 * (x & 0xff)] ^ gSBox1 [0x200 + 2 * ((int)((uint)x >> 8) & 0xff)] ^ gSBox1 [0x201 + 2 * ((int)((uint)x >> 16) & 0xff)];  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,BytesTo32Bits,The following statement contains a magic number: return ((b [p] & 0xff)) | ((b [p + 1] & 0xff) << 8) | ((b [p + 2] & 0xff) << 16) | ((b [p + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,BytesTo32Bits,The following statement contains a magic number: return ((b [p] & 0xff)) | ((b [p + 1] & 0xff) << 8) | ((b [p + 2] & 0xff) << 16) | ((b [p + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,BytesTo32Bits,The following statement contains a magic number: return ((b [p] & 0xff)) | ((b [p + 1] & 0xff) << 8) | ((b [p + 2] & 0xff) << 16) | ((b [p + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,BytesTo32Bits,The following statement contains a magic number: return ((b [p] & 0xff)) | ((b [p + 1] & 0xff) << 8) | ((b [p + 2] & 0xff) << 16) | ((b [p + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,BytesTo32Bits,The following statement contains a magic number: return ((b [p] & 0xff)) | ((b [p + 1] & 0xff) << 8) | ((b [p + 2] & 0xff) << 16) | ((b [p + 3] & 0xff) << 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Bits32ToBytes,The following statement contains a magic number: b [offset + 1] = (byte)(inData >> 8);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Bits32ToBytes,The following statement contains a magic number: b [offset + 2] = (byte)(inData >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Bits32ToBytes,The following statement contains a magic number: b [offset + 2] = (byte)(inData >> 16);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Bits32ToBytes,The following statement contains a magic number: b [offset + 3] = (byte)(inData >> 24);  
Magic Number,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,Bits32ToBytes,The following statement contains a magic number: b [offset + 3] = (byte)(inData >> 24);  
Magic Number,Renci.SshNet.Sftp,SftpDataMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpDataMessage.cs,SftpDataMessage,The following statement contains a magic number: messageData.CopyTo (data' 4);  
Magic Number,Renci.SshNet.Sftp,SftpFileAttributes,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpFileAttributes.cs,SetPermissions,The following statement contains a magic number: if (mode < 0 || mode > 999) {  	throw new ArgumentOutOfRangeException ("mode");  }  
Magic Number,Renci.SshNet.Sftp,SftpFileStream,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpFileStream.cs,SftpFileStream,The following statement contains a magic number: if (bufferSize <= 0 || bufferSize > 16 * 1024) {  	throw new ArgumentOutOfRangeException ("bufferSize");  }  
Magic Number,Renci.SshNet.Sftp,SftpFileStream,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpFileStream.cs,SftpFileStream,The following statement contains a magic number: if (bufferSize <= 0 || bufferSize > 16 * 1024) {  	throw new ArgumentOutOfRangeException ("bufferSize");  }  
Magic Number,Renci.SshNet.Sftp,SftpFileStream,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpFileStream.cs,SftpFileStream,The following statement contains a magic number: this.Timeout = TimeSpan.FromSeconds (30);  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,ReadAttributes,The following statement contains a magic number: if ((flag & 0x00000008) == 0x00000008)//  SSH_FILEXFER_ATTR_ACMODTIME   {  	var time = this.ReadUInt32 ();  	accessTime = DateTime.FromFileTime ((time + 11644473600) * 10000000);  	time = this.ReadUInt32 ();  	modifyTime = DateTime.FromFileTime ((time + 11644473600) * 10000000);  }  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,ReadAttributes,The following statement contains a magic number: if ((flag & 0x00000008) == 0x00000008)//  SSH_FILEXFER_ATTR_ACMODTIME   {  	var time = this.ReadUInt32 ();  	accessTime = DateTime.FromFileTime ((time + 11644473600) * 10000000);  	time = this.ReadUInt32 ();  	modifyTime = DateTime.FromFileTime ((time + 11644473600) * 10000000);  }  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,ReadAttributes,The following statement contains a magic number: if ((flag & 0x00000008) == 0x00000008)//  SSH_FILEXFER_ATTR_ACMODTIME   {  	var time = this.ReadUInt32 ();  	accessTime = DateTime.FromFileTime ((time + 11644473600) * 10000000);  	time = this.ReadUInt32 ();  	modifyTime = DateTime.FromFileTime ((time + 11644473600) * 10000000);  }  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,ReadAttributes,The following statement contains a magic number: if ((flag & 0x00000008) == 0x00000008)//  SSH_FILEXFER_ATTR_ACMODTIME   {  	var time = this.ReadUInt32 ();  	accessTime = DateTime.FromFileTime ((time + 11644473600) * 10000000);  	time = this.ReadUInt32 ();  	modifyTime = DateTime.FromFileTime ((time + 11644473600) * 10000000);  }  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,ReadAttributes,The following statement contains a magic number: accessTime = DateTime.FromFileTime ((time + 11644473600) * 10000000);  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,ReadAttributes,The following statement contains a magic number: accessTime = DateTime.FromFileTime ((time + 11644473600) * 10000000);  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,ReadAttributes,The following statement contains a magic number: modifyTime = DateTime.FromFileTime ((time + 11644473600) * 10000000);  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,ReadAttributes,The following statement contains a magic number: modifyTime = DateTime.FromFileTime ((time + 11644473600) * 10000000);  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,Write,The following statement contains a magic number: if (attributes == null) {  	this.Write ((uint)0);  	return;  }  else {  	UInt32 flag = 0;  	if (attributes.IsSizeChanged && attributes.IsRegularFile) {  		flag |= 0x00000001;  	}  	if (attributes.IsUserIdChanged || attributes.IsGroupIdChanged) {  		flag |= 0x00000002;  	}  	if (attributes.IsPermissionsChanged) {  		flag |= 0x00000004;  	}  	if (attributes.IsLastAccessTimeChanged || attributes.IsLastWriteTimeChanged) {  		flag |= 0x00000008;  	}  	if (attributes.IsExtensionsChanged) {  		flag |= 0x80000000;  	}  	this.Write (flag);  	if (attributes.IsSizeChanged && attributes.IsRegularFile) {  		this.Write ((UInt64)attributes.Size);  	}  	if (attributes.IsUserIdChanged || attributes.IsGroupIdChanged) {  		this.Write ((UInt32)attributes.UserId);  		this.Write ((UInt32)attributes.GroupId);  	}  	if (attributes.IsPermissionsChanged) {  		this.Write (attributes.Permissions);  	}  	if (attributes.IsLastAccessTimeChanged || attributes.IsLastWriteTimeChanged) {  		uint time = (uint)(attributes.LastAccessTime.ToFileTime () / 10000000 - 11644473600);  		this.Write (time);  		time = (uint)(attributes.LastWriteTime.ToFileTime () / 10000000 - 11644473600);  		this.Write (time);  	}  	if (attributes.IsExtensionsChanged) {  		this.Write (attributes.Extensions);  	}  }  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,Write,The following statement contains a magic number: if (attributes == null) {  	this.Write ((uint)0);  	return;  }  else {  	UInt32 flag = 0;  	if (attributes.IsSizeChanged && attributes.IsRegularFile) {  		flag |= 0x00000001;  	}  	if (attributes.IsUserIdChanged || attributes.IsGroupIdChanged) {  		flag |= 0x00000002;  	}  	if (attributes.IsPermissionsChanged) {  		flag |= 0x00000004;  	}  	if (attributes.IsLastAccessTimeChanged || attributes.IsLastWriteTimeChanged) {  		flag |= 0x00000008;  	}  	if (attributes.IsExtensionsChanged) {  		flag |= 0x80000000;  	}  	this.Write (flag);  	if (attributes.IsSizeChanged && attributes.IsRegularFile) {  		this.Write ((UInt64)attributes.Size);  	}  	if (attributes.IsUserIdChanged || attributes.IsGroupIdChanged) {  		this.Write ((UInt32)attributes.UserId);  		this.Write ((UInt32)attributes.GroupId);  	}  	if (attributes.IsPermissionsChanged) {  		this.Write (attributes.Permissions);  	}  	if (attributes.IsLastAccessTimeChanged || attributes.IsLastWriteTimeChanged) {  		uint time = (uint)(attributes.LastAccessTime.ToFileTime () / 10000000 - 11644473600);  		this.Write (time);  		time = (uint)(attributes.LastWriteTime.ToFileTime () / 10000000 - 11644473600);  		this.Write (time);  	}  	if (attributes.IsExtensionsChanged) {  		this.Write (attributes.Extensions);  	}  }  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,Write,The following statement contains a magic number: if (attributes == null) {  	this.Write ((uint)0);  	return;  }  else {  	UInt32 flag = 0;  	if (attributes.IsSizeChanged && attributes.IsRegularFile) {  		flag |= 0x00000001;  	}  	if (attributes.IsUserIdChanged || attributes.IsGroupIdChanged) {  		flag |= 0x00000002;  	}  	if (attributes.IsPermissionsChanged) {  		flag |= 0x00000004;  	}  	if (attributes.IsLastAccessTimeChanged || attributes.IsLastWriteTimeChanged) {  		flag |= 0x00000008;  	}  	if (attributes.IsExtensionsChanged) {  		flag |= 0x80000000;  	}  	this.Write (flag);  	if (attributes.IsSizeChanged && attributes.IsRegularFile) {  		this.Write ((UInt64)attributes.Size);  	}  	if (attributes.IsUserIdChanged || attributes.IsGroupIdChanged) {  		this.Write ((UInt32)attributes.UserId);  		this.Write ((UInt32)attributes.GroupId);  	}  	if (attributes.IsPermissionsChanged) {  		this.Write (attributes.Permissions);  	}  	if (attributes.IsLastAccessTimeChanged || attributes.IsLastWriteTimeChanged) {  		uint time = (uint)(attributes.LastAccessTime.ToFileTime () / 10000000 - 11644473600);  		this.Write (time);  		time = (uint)(attributes.LastWriteTime.ToFileTime () / 10000000 - 11644473600);  		this.Write (time);  	}  	if (attributes.IsExtensionsChanged) {  		this.Write (attributes.Extensions);  	}  }  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,Write,The following statement contains a magic number: if (attributes == null) {  	this.Write ((uint)0);  	return;  }  else {  	UInt32 flag = 0;  	if (attributes.IsSizeChanged && attributes.IsRegularFile) {  		flag |= 0x00000001;  	}  	if (attributes.IsUserIdChanged || attributes.IsGroupIdChanged) {  		flag |= 0x00000002;  	}  	if (attributes.IsPermissionsChanged) {  		flag |= 0x00000004;  	}  	if (attributes.IsLastAccessTimeChanged || attributes.IsLastWriteTimeChanged) {  		flag |= 0x00000008;  	}  	if (attributes.IsExtensionsChanged) {  		flag |= 0x80000000;  	}  	this.Write (flag);  	if (attributes.IsSizeChanged && attributes.IsRegularFile) {  		this.Write ((UInt64)attributes.Size);  	}  	if (attributes.IsUserIdChanged || attributes.IsGroupIdChanged) {  		this.Write ((UInt32)attributes.UserId);  		this.Write ((UInt32)attributes.GroupId);  	}  	if (attributes.IsPermissionsChanged) {  		this.Write (attributes.Permissions);  	}  	if (attributes.IsLastAccessTimeChanged || attributes.IsLastWriteTimeChanged) {  		uint time = (uint)(attributes.LastAccessTime.ToFileTime () / 10000000 - 11644473600);  		this.Write (time);  		time = (uint)(attributes.LastWriteTime.ToFileTime () / 10000000 - 11644473600);  		this.Write (time);  	}  	if (attributes.IsExtensionsChanged) {  		this.Write (attributes.Extensions);  	}  }  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,Write,The following statement contains a magic number: if (attributes.IsLastAccessTimeChanged || attributes.IsLastWriteTimeChanged) {  	uint time = (uint)(attributes.LastAccessTime.ToFileTime () / 10000000 - 11644473600);  	this.Write (time);  	time = (uint)(attributes.LastWriteTime.ToFileTime () / 10000000 - 11644473600);  	this.Write (time);  }  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,Write,The following statement contains a magic number: if (attributes.IsLastAccessTimeChanged || attributes.IsLastWriteTimeChanged) {  	uint time = (uint)(attributes.LastAccessTime.ToFileTime () / 10000000 - 11644473600);  	this.Write (time);  	time = (uint)(attributes.LastWriteTime.ToFileTime () / 10000000 - 11644473600);  	this.Write (time);  }  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,Write,The following statement contains a magic number: if (attributes.IsLastAccessTimeChanged || attributes.IsLastWriteTimeChanged) {  	uint time = (uint)(attributes.LastAccessTime.ToFileTime () / 10000000 - 11644473600);  	this.Write (time);  	time = (uint)(attributes.LastWriteTime.ToFileTime () / 10000000 - 11644473600);  	this.Write (time);  }  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,Write,The following statement contains a magic number: if (attributes.IsLastAccessTimeChanged || attributes.IsLastWriteTimeChanged) {  	uint time = (uint)(attributes.LastAccessTime.ToFileTime () / 10000000 - 11644473600);  	this.Write (time);  	time = (uint)(attributes.LastWriteTime.ToFileTime () / 10000000 - 11644473600);  	this.Write (time);  }  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,Write,The following statement contains a magic number: time = (uint)(attributes.LastWriteTime.ToFileTime () / 10000000 - 11644473600);  
Magic Number,Renci.SshNet.Sftp,SftpMessage,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpMessage.cs,Write,The following statement contains a magic number: time = (uint)(attributes.LastWriteTime.ToFileTime () / 10000000 - 11644473600);  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,SendMessage,The following statement contains a magic number: messageData.CopyTo (data' 4);  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,OnDataReceived,The following statement contains a magic number: while (this._data.Count > 4 + 1) {  	//  Extract packet length  	var packetLength = (this._data [0] << 24 | this._data [1] << 16 | this._data [2] << 8 | this._data [3]);  	//  Check if complete packet data is available  	if (this._data.Count < packetLength + 4) {  		//  Wait for complete message to arrive first  		break;  	}  	this._data.RemoveRange (0' 4);  	//  Create buffer to hold packet data  	var packetData = new byte[packetLength];  	//  Cope packet data to array  	this._data.CopyTo (0' packetData' 0' packetLength);  	//  Remove loaded data from _data holder  	this._data.RemoveRange (0' packetLength);  	//  Load SFTP Message and handle it  	var response = SftpMessage.Load (this.ProtocolVersion' packetData' this.Encoding);  	try {  		var versionResponse = response as SftpVersionResponse;  		if (versionResponse != null) {  			this.ProtocolVersion = versionResponse.Version;  			this._supportedExtensions = versionResponse.Extentions;  			this._sftpVersionConfirmed.Set ();  		}  		else {  			this.HandleResponse (response as SftpResponse);  		}  	}  	catch (Exception exp) {  		this.RaiseError (exp);  		break;  	}  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,OnDataReceived,The following statement contains a magic number: while (this._data.Count > 4 + 1) {  	//  Extract packet length  	var packetLength = (this._data [0] << 24 | this._data [1] << 16 | this._data [2] << 8 | this._data [3]);  	//  Check if complete packet data is available  	if (this._data.Count < packetLength + 4) {  		//  Wait for complete message to arrive first  		break;  	}  	this._data.RemoveRange (0' 4);  	//  Create buffer to hold packet data  	var packetData = new byte[packetLength];  	//  Cope packet data to array  	this._data.CopyTo (0' packetData' 0' packetLength);  	//  Remove loaded data from _data holder  	this._data.RemoveRange (0' packetLength);  	//  Load SFTP Message and handle it  	var response = SftpMessage.Load (this.ProtocolVersion' packetData' this.Encoding);  	try {  		var versionResponse = response as SftpVersionResponse;  		if (versionResponse != null) {  			this.ProtocolVersion = versionResponse.Version;  			this._supportedExtensions = versionResponse.Extentions;  			this._sftpVersionConfirmed.Set ();  		}  		else {  			this.HandleResponse (response as SftpResponse);  		}  	}  	catch (Exception exp) {  		this.RaiseError (exp);  		break;  	}  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,OnDataReceived,The following statement contains a magic number: while (this._data.Count > 4 + 1) {  	//  Extract packet length  	var packetLength = (this._data [0] << 24 | this._data [1] << 16 | this._data [2] << 8 | this._data [3]);  	//  Check if complete packet data is available  	if (this._data.Count < packetLength + 4) {  		//  Wait for complete message to arrive first  		break;  	}  	this._data.RemoveRange (0' 4);  	//  Create buffer to hold packet data  	var packetData = new byte[packetLength];  	//  Cope packet data to array  	this._data.CopyTo (0' packetData' 0' packetLength);  	//  Remove loaded data from _data holder  	this._data.RemoveRange (0' packetLength);  	//  Load SFTP Message and handle it  	var response = SftpMessage.Load (this.ProtocolVersion' packetData' this.Encoding);  	try {  		var versionResponse = response as SftpVersionResponse;  		if (versionResponse != null) {  			this.ProtocolVersion = versionResponse.Version;  			this._supportedExtensions = versionResponse.Extentions;  			this._sftpVersionConfirmed.Set ();  		}  		else {  			this.HandleResponse (response as SftpResponse);  		}  	}  	catch (Exception exp) {  		this.RaiseError (exp);  		break;  	}  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,OnDataReceived,The following statement contains a magic number: while (this._data.Count > 4 + 1) {  	//  Extract packet length  	var packetLength = (this._data [0] << 24 | this._data [1] << 16 | this._data [2] << 8 | this._data [3]);  	//  Check if complete packet data is available  	if (this._data.Count < packetLength + 4) {  		//  Wait for complete message to arrive first  		break;  	}  	this._data.RemoveRange (0' 4);  	//  Create buffer to hold packet data  	var packetData = new byte[packetLength];  	//  Cope packet data to array  	this._data.CopyTo (0' packetData' 0' packetLength);  	//  Remove loaded data from _data holder  	this._data.RemoveRange (0' packetLength);  	//  Load SFTP Message and handle it  	var response = SftpMessage.Load (this.ProtocolVersion' packetData' this.Encoding);  	try {  		var versionResponse = response as SftpVersionResponse;  		if (versionResponse != null) {  			this.ProtocolVersion = versionResponse.Version;  			this._supportedExtensions = versionResponse.Extentions;  			this._sftpVersionConfirmed.Set ();  		}  		else {  			this.HandleResponse (response as SftpResponse);  		}  	}  	catch (Exception exp) {  		this.RaiseError (exp);  		break;  	}  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,OnDataReceived,The following statement contains a magic number: while (this._data.Count > 4 + 1) {  	//  Extract packet length  	var packetLength = (this._data [0] << 24 | this._data [1] << 16 | this._data [2] << 8 | this._data [3]);  	//  Check if complete packet data is available  	if (this._data.Count < packetLength + 4) {  		//  Wait for complete message to arrive first  		break;  	}  	this._data.RemoveRange (0' 4);  	//  Create buffer to hold packet data  	var packetData = new byte[packetLength];  	//  Cope packet data to array  	this._data.CopyTo (0' packetData' 0' packetLength);  	//  Remove loaded data from _data holder  	this._data.RemoveRange (0' packetLength);  	//  Load SFTP Message and handle it  	var response = SftpMessage.Load (this.ProtocolVersion' packetData' this.Encoding);  	try {  		var versionResponse = response as SftpVersionResponse;  		if (versionResponse != null) {  			this.ProtocolVersion = versionResponse.Version;  			this._supportedExtensions = versionResponse.Extentions;  			this._sftpVersionConfirmed.Set ();  		}  		else {  			this.HandleResponse (response as SftpResponse);  		}  	}  	catch (Exception exp) {  		this.RaiseError (exp);  		break;  	}  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,OnDataReceived,The following statement contains a magic number: while (this._data.Count > 4 + 1) {  	//  Extract packet length  	var packetLength = (this._data [0] << 24 | this._data [1] << 16 | this._data [2] << 8 | this._data [3]);  	//  Check if complete packet data is available  	if (this._data.Count < packetLength + 4) {  		//  Wait for complete message to arrive first  		break;  	}  	this._data.RemoveRange (0' 4);  	//  Create buffer to hold packet data  	var packetData = new byte[packetLength];  	//  Cope packet data to array  	this._data.CopyTo (0' packetData' 0' packetLength);  	//  Remove loaded data from _data holder  	this._data.RemoveRange (0' packetLength);  	//  Load SFTP Message and handle it  	var response = SftpMessage.Load (this.ProtocolVersion' packetData' this.Encoding);  	try {  		var versionResponse = response as SftpVersionResponse;  		if (versionResponse != null) {  			this.ProtocolVersion = versionResponse.Version;  			this._supportedExtensions = versionResponse.Extentions;  			this._sftpVersionConfirmed.Set ();  		}  		else {  			this.HandleResponse (response as SftpResponse);  		}  	}  	catch (Exception exp) {  		this.RaiseError (exp);  		break;  	}  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,OnDataReceived,The following statement contains a magic number: while (this._data.Count > 4 + 1) {  	//  Extract packet length  	var packetLength = (this._data [0] << 24 | this._data [1] << 16 | this._data [2] << 8 | this._data [3]);  	//  Check if complete packet data is available  	if (this._data.Count < packetLength + 4) {  		//  Wait for complete message to arrive first  		break;  	}  	this._data.RemoveRange (0' 4);  	//  Create buffer to hold packet data  	var packetData = new byte[packetLength];  	//  Cope packet data to array  	this._data.CopyTo (0' packetData' 0' packetLength);  	//  Remove loaded data from _data holder  	this._data.RemoveRange (0' packetLength);  	//  Load SFTP Message and handle it  	var response = SftpMessage.Load (this.ProtocolVersion' packetData' this.Encoding);  	try {  		var versionResponse = response as SftpVersionResponse;  		if (versionResponse != null) {  			this.ProtocolVersion = versionResponse.Version;  			this._supportedExtensions = versionResponse.Extentions;  			this._sftpVersionConfirmed.Set ();  		}  		else {  			this.HandleResponse (response as SftpResponse);  		}  	}  	catch (Exception exp) {  		this.RaiseError (exp);  		break;  	}  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,OnDataReceived,The following statement contains a magic number: while (this._data.Count > 4 + 1) {  	//  Extract packet length  	var packetLength = (this._data [0] << 24 | this._data [1] << 16 | this._data [2] << 8 | this._data [3]);  	//  Check if complete packet data is available  	if (this._data.Count < packetLength + 4) {  		//  Wait for complete message to arrive first  		break;  	}  	this._data.RemoveRange (0' 4);  	//  Create buffer to hold packet data  	var packetData = new byte[packetLength];  	//  Cope packet data to array  	this._data.CopyTo (0' packetData' 0' packetLength);  	//  Remove loaded data from _data holder  	this._data.RemoveRange (0' packetLength);  	//  Load SFTP Message and handle it  	var response = SftpMessage.Load (this.ProtocolVersion' packetData' this.Encoding);  	try {  		var versionResponse = response as SftpVersionResponse;  		if (versionResponse != null) {  			this.ProtocolVersion = versionResponse.Version;  			this._supportedExtensions = versionResponse.Extentions;  			this._sftpVersionConfirmed.Set ();  		}  		else {  			this.HandleResponse (response as SftpResponse);  		}  	}  	catch (Exception exp) {  		this.RaiseError (exp);  		break;  	}  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,OnDataReceived,The following statement contains a magic number: if (this._data.Count < packetLength + 4) {  	//  Wait for complete message to arrive first  	break;  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,OnDataReceived,The following statement contains a magic number: this._data.RemoveRange (0' 4);  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestRename,The following statement contains a magic number: if (this.ProtocolVersion < 2) {  	throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "SSH_FXP_RENAME operation is not supported in {0} version that server operates in."' this.ProtocolVersion));  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestReadLink,The following statement contains a magic number: if (this.ProtocolVersion < 3) {  	throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "SSH_FXP_READLINK operation is not supported in {0} version that server operates in."' this.ProtocolVersion));  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestSymLink,The following statement contains a magic number: if (this.ProtocolVersion < 3) {  	throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "SSH_FXP_SYMLINK operation is not supported in {0} version that server operates in."' this.ProtocolVersion));  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestPosixRename,The following statement contains a magic number: if (this.ProtocolVersion < 3) {  	throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "SSH_FXP_EXTENDED operation is not supported in {0} version that server operates in."' this.ProtocolVersion));  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestStatVfs,The following statement contains a magic number: if (this.ProtocolVersion < 3) {  	throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "SSH_FXP_EXTENDED operation is not supported in {0} version that server operates in."' this.ProtocolVersion));  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,RequestFStatVfs,The following statement contains a magic number: if (this.ProtocolVersion < 3) {  	throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "SSH_FXP_EXTENDED operation is not supported in {0} version that server operates in."' this.ProtocolVersion));  }  
Magic Number,Renci.SshNet.Sftp,SftpSession,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\SftpSession.cs,HardLink,The following statement contains a magic number: if (this.ProtocolVersion < 3) {  	throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "SSH_FXP_EXTENDED operation is not supported in {0} version that server operates in."' this.ProtocolVersion));  }  
Magic Number,Renci.SshNet.Sftp.Responses,SftpStatusResponse,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Sftp\Responses\SftpStatusResponse.cs,LoadData,The following statement contains a magic number: if (this.ProtocolVersion < 3) {  	return;  }  
Duplicate Code,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The method contains a code clone-set at the following line numbers (starting from the method definition): ((21' 51)' (33' 63))
Duplicate Code,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The method contains a code clone-set at the following line numbers (starting from the method definition): ((21' 40)' (45' 64))
Duplicate Code,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The method contains a code clone-set at the following line numbers (starting from the method definition): ((72' 102)' (84' 114))
Duplicate Code,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The method contains a code clone-set at the following line numbers (starting from the method definition): ((72' 91)' (96' 115))
Duplicate Code,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The method contains a code clone-set at the following line numbers (starting from the method definition): ((122' 152)' (134' 164))
Duplicate Code,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The method contains a code clone-set at the following line numbers (starting from the method definition): ((122' 141)' (146' 165))
Duplicate Code,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The method contains a code clone-set at the following line numbers (starting from the method definition): ((173' 203)' (185' 215))
Duplicate Code,Renci.SshNet.Security.Cryptography,SHA1Hash,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Hashes\SHA1Hash.cs,ProcessBlock,The method contains a code clone-set at the following line numbers (starting from the method definition): ((173' 192)' (197' 216))
Missing Default,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastEncipher,The following switch statement is missing a default case: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Missing Default,Renci.SshNet.Security.Cryptography.Ciphers,CastCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\CastCipher.cs,CastDecipher,The following switch statement is missing a default case: switch (i) {  case 1:  case 4:  case 7:  case 10:  case 13:  case 16:  	Ri = Lp ^ F1 (Rp' this._km [i]' this._kr [i]);  	break;  case 2:  case 5:  case 8:  case 11:  case 14:  	Ri = Lp ^ F2 (Rp' this._km [i]' this._kr [i]);  	break;  case 3:  case 6:  case 9:  case 12:  case 15:  	Ri = Lp ^ F3 (Rp' this._km [i]' this._kr [i]);  	break;  }  
Missing Default,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,SetKey,The following switch statement is missing a default case: switch (k64Cnt & 3) {  case 1:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	gSBox [i * 2] = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)];  	gSBox [i * 2 + 1] = gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)];  	gSBox [i * 2 + 0x200] = gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)];  	gSBox [i * 2 + 0x201] = gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
Missing Default,Renci.SshNet.Security.Cryptography.Ciphers,TwofishCipher,C:\repos\rhythmagency_rhythm.ssis\trunk\Rhythm.SSIS\3rdParty\sshnet-31793\Security\Cryptography\Ciphers\TwofishCipher.cs,F32,The following switch statement is missing a default case: switch (k64Cnt & 3) {  case 1:  	result = gMDS0 [(P [P_01 * 256 + b0] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + b1] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + b2] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + b3] & 0xff) ^ M_b3 (k0)];  	break;  case 0:  	/* 256 bits of key */b0 = (P [P_04 * 256 + b0] & 0xff) ^ M_b0 (k3);  	b1 = (P [P_14 * 256 + b1] & 0xff) ^ M_b1 (k3);  	b2 = (P [P_24 * 256 + b2] & 0xff) ^ M_b2 (k3);  	b3 = (P [P_34 * 256 + b3] & 0xff) ^ M_b3 (k3);  	goto case 3;  case 3:  	b0 = (P [P_03 * 256 + b0] & 0xff) ^ M_b0 (k2);  	b1 = (P [P_13 * 256 + b1] & 0xff) ^ M_b1 (k2);  	b2 = (P [P_23 * 256 + b2] & 0xff) ^ M_b2 (k2);  	b3 = (P [P_33 * 256 + b3] & 0xff) ^ M_b3 (k2);  	goto case 2;  case 2:  	result = gMDS0 [(P [P_01 * 256 + (P [P_02 * 256 + b0] & 0xff) ^ M_b0 (k1)] & 0xff) ^ M_b0 (k0)] ^ gMDS1 [(P [P_11 * 256 + (P [P_12 * 256 + b1] & 0xff) ^ M_b1 (k1)] & 0xff) ^ M_b1 (k0)] ^ gMDS2 [(P [P_21 * 256 + (P [P_22 * 256 + b2] & 0xff) ^ M_b2 (k1)] & 0xff) ^ M_b2 (k0)] ^ gMDS3 [(P [P_31 * 256 + (P [P_32 * 256 + b3] & 0xff) ^ M_b3 (k1)] & 0xff) ^ M_b3 (k0)];  	break;  }  
