Implementation smell,Namespace,Class,File,Method,Description
Long Statement,PlexService,PlexMediaServerService,C:\repos\cjmurph_PmsService\PlexService\PlexMediaServerService.cs,OnStart,The length of the statement  "                //use a reliable connection so the clients can be notified when the recieve timeout has elapsed and the connection is torn down. " is 128.
Long Statement,PlexService,PlexMediaServerService,C:\repos\cjmurph_PmsService\PlexService\PlexMediaServerService.cs,Connect,The length of the statement  "            var plexServiceChannelFactory = new ChannelFactory<PlexServiceCommon.Interface.ITrayInteraction>(plexServiceBinding' plexServiceEndpoint); " is 138.
Long Statement,PlexService,PlexMediaServerService,C:\repos\cjmurph_PmsService\PlexService\PlexMediaServerService.cs,Connect,The length of the statement  "                //If we lose connection to the service' set the object to null so we will know to reconnect the next time the tray icon is clicked " is 130.
Empty Catch Block,PlexService,PlexMediaServerService,C:\repos\cjmurph_PmsService\PlexService\PlexMediaServerService.cs,StartPlex,The method has an empty catch block.
Empty Catch Block,PlexService,PlexMediaServerService,C:\repos\cjmurph_PmsService\PlexService\PlexMediaServerService.cs,OnStop,The method has an empty catch block.
Empty Catch Block,PlexService,PlexMediaServerService,C:\repos\cjmurph_PmsService\PlexService\PlexMediaServerService.cs,Disconnect,The method has an empty catch block.
Magic Number,PlexService,PlexMediaServerService,C:\repos\cjmurph_PmsService\PlexService\PlexMediaServerService.cs,OnStart,The following statement contains a magic number: try              {                  if (_host != null) _host.Close();                    int port = SettingsHandler.Load().ServerPort;                  //sanity check the port setting                  if (port == 0)                      port = 8787;                    _address = string.Format(_baseAddress' port);                    Uri[] adrbase = { new Uri(_address) };                  _host = new ServiceHost(typeof(TrayInteraction)' adrbase);                    ServiceMetadataBehavior behave = new ServiceMetadataBehavior();                  _host.Description.Behaviors.Add(behave);                    //Setup a TCP binding with appropriate timeouts.                  //use a reliable connection so the clients can be notified when the recieve timeout has elapsed and the connection is torn down.                  NetTcpBinding netTcpB = new NetTcpBinding();                  netTcpB.OpenTimeout = _timeOut;                  netTcpB.CloseTimeout = _timeOut;                  netTcpB.ReceiveTimeout = TimeSpan.FromMinutes(10);                  netTcpB.ReliableSession.Enabled = true;                  netTcpB.ReliableSession.InactivityTimeout = TimeSpan.FromMinutes(5);                  _host.AddServiceEndpoint(typeof(PlexServiceCommon.Interface.ITrayInteraction)' netTcpB' _address);                  _host.AddServiceEndpoint(typeof(IMetadataExchange)'                  MetadataExchangeBindings.CreateMexTcpBinding()' "mex");                                    //once the host is opened' start plex                  //_host.Opened += (s' e) => System.Threading.Tasks.Task.Factory.StartNew(() => startPlex());                  // Open the ServiceHostBase to create listeners and start                   // listening for messages.                  _host.Open();              }              catch (Exception ex)              {                  TrayInteraction.WriteToLog(ex.Message);              }
Magic Number,PlexService,PlexMediaServerService,C:\repos\cjmurph_PmsService\PlexService\PlexMediaServerService.cs,OnStart,The following statement contains a magic number: try              {                  if (_host != null) _host.Close();                    int port = SettingsHandler.Load().ServerPort;                  //sanity check the port setting                  if (port == 0)                      port = 8787;                    _address = string.Format(_baseAddress' port);                    Uri[] adrbase = { new Uri(_address) };                  _host = new ServiceHost(typeof(TrayInteraction)' adrbase);                    ServiceMetadataBehavior behave = new ServiceMetadataBehavior();                  _host.Description.Behaviors.Add(behave);                    //Setup a TCP binding with appropriate timeouts.                  //use a reliable connection so the clients can be notified when the recieve timeout has elapsed and the connection is torn down.                  NetTcpBinding netTcpB = new NetTcpBinding();                  netTcpB.OpenTimeout = _timeOut;                  netTcpB.CloseTimeout = _timeOut;                  netTcpB.ReceiveTimeout = TimeSpan.FromMinutes(10);                  netTcpB.ReliableSession.Enabled = true;                  netTcpB.ReliableSession.InactivityTimeout = TimeSpan.FromMinutes(5);                  _host.AddServiceEndpoint(typeof(PlexServiceCommon.Interface.ITrayInteraction)' netTcpB' _address);                  _host.AddServiceEndpoint(typeof(IMetadataExchange)'                  MetadataExchangeBindings.CreateMexTcpBinding()' "mex");                                    //once the host is opened' start plex                  //_host.Opened += (s' e) => System.Threading.Tasks.Task.Factory.StartNew(() => startPlex());                  // Open the ServiceHostBase to create listeners and start                   // listening for messages.                  _host.Open();              }              catch (Exception ex)              {                  TrayInteraction.WriteToLog(ex.Message);              }
Magic Number,PlexService,PlexMediaServerService,C:\repos\cjmurph_PmsService\PlexService\PlexMediaServerService.cs,OnStart,The following statement contains a magic number: try              {                  if (_host != null) _host.Close();                    int port = SettingsHandler.Load().ServerPort;                  //sanity check the port setting                  if (port == 0)                      port = 8787;                    _address = string.Format(_baseAddress' port);                    Uri[] adrbase = { new Uri(_address) };                  _host = new ServiceHost(typeof(TrayInteraction)' adrbase);                    ServiceMetadataBehavior behave = new ServiceMetadataBehavior();                  _host.Description.Behaviors.Add(behave);                    //Setup a TCP binding with appropriate timeouts.                  //use a reliable connection so the clients can be notified when the recieve timeout has elapsed and the connection is torn down.                  NetTcpBinding netTcpB = new NetTcpBinding();                  netTcpB.OpenTimeout = _timeOut;                  netTcpB.CloseTimeout = _timeOut;                  netTcpB.ReceiveTimeout = TimeSpan.FromMinutes(10);                  netTcpB.ReliableSession.Enabled = true;                  netTcpB.ReliableSession.InactivityTimeout = TimeSpan.FromMinutes(5);                  _host.AddServiceEndpoint(typeof(PlexServiceCommon.Interface.ITrayInteraction)' netTcpB' _address);                  _host.AddServiceEndpoint(typeof(IMetadataExchange)'                  MetadataExchangeBindings.CreateMexTcpBinding()' "mex");                                    //once the host is opened' start plex                  //_host.Opened += (s' e) => System.Threading.Tasks.Task.Factory.StartNew(() => startPlex());                  // Open the ServiceHostBase to create listeners and start                   // listening for messages.                  _host.Open();              }              catch (Exception ex)              {                  TrayInteraction.WriteToLog(ex.Message);              }
