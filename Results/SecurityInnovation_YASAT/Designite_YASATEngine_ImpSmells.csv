Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,YASATEngine,Rule,C:\repos\SecurityInnovation_YASAT\YASATEngine\Rule.cs,Rule,The method has 5 parameters. Parameters: Title' Description' Pattern' Extensions' Guidance
Long Statement,YASATEngine,SourceCodeIssue,C:\repos\SecurityInnovation_YASAT\YASATEngine\SourceCodeIssue.cs,GenerateHTMLSnippet,The length of the statement  "            sb.Append("<strong>Offending Line: <br /><strong><code>" +  HtmlEncode(_offendingLine) + "</strong></code></strong><hr />"); " is 124.
Empty Catch Block,YASATEngine,SourceFile,C:\repos\SecurityInnovation_YASAT\YASATEngine\SourceFile.cs,SourceFile,The method has an empty catch block.
Magic Number,YASATEngine,ProjectInfo,C:\repos\SecurityInnovation_YASAT\YASATEngine\ProjectInfo.cs,EstimateCodeReviewTime,The following statement contains a magic number: int minutesPerPotentialIssue = 15;
Magic Number,YASATEngine,ProjectInfo,C:\repos\SecurityInnovation_YASAT\YASATEngine\ProjectInfo.cs,EstimateCodeReviewTime,The following statement contains a magic number: int linesPerHour = 1500;
Magic Number,YASATEngine,ProjectInfo,C:\repos\SecurityInnovation_YASAT\YASATEngine\ProjectInfo.cs,EstimateCodeReviewTime,The following statement contains a magic number: foreach (SourceFile file in files)              {                  minutes += file.issues.Count * minutesPerPotentialIssue;                  minutes += file.lines / linesPerHour * 60;              }
Magic Number,YASATEngine,ProjectInfo,C:\repos\SecurityInnovation_YASAT\YASATEngine\ProjectInfo.cs,EstimateCodeReviewTime,The following statement contains a magic number: switch (format.ToLower())              {                  case "m":                      ReturnTime = minutes;                      break;                  case "h":                      ReturnTime = minutes/60;                      break;                  case "d":                      ReturnTime = minutes/60/8;                      break;                  default:                      ReturnTime = minutes / 60;                      break;              }
Magic Number,YASATEngine,ProjectInfo,C:\repos\SecurityInnovation_YASAT\YASATEngine\ProjectInfo.cs,EstimateCodeReviewTime,The following statement contains a magic number: switch (format.ToLower())              {                  case "m":                      ReturnTime = minutes;                      break;                  case "h":                      ReturnTime = minutes/60;                      break;                  case "d":                      ReturnTime = minutes/60/8;                      break;                  default:                      ReturnTime = minutes / 60;                      break;              }
Magic Number,YASATEngine,ProjectInfo,C:\repos\SecurityInnovation_YASAT\YASATEngine\ProjectInfo.cs,EstimateCodeReviewTime,The following statement contains a magic number: switch (format.ToLower())              {                  case "m":                      ReturnTime = minutes;                      break;                  case "h":                      ReturnTime = minutes/60;                      break;                  case "d":                      ReturnTime = minutes/60/8;                      break;                  default:                      ReturnTime = minutes / 60;                      break;              }
Magic Number,YASATEngine,ProjectInfo,C:\repos\SecurityInnovation_YASAT\YASATEngine\ProjectInfo.cs,EstimateCodeReviewTime,The following statement contains a magic number: switch (format.ToLower())              {                  case "m":                      ReturnTime = minutes;                      break;                  case "h":                      ReturnTime = minutes/60;                      break;                  case "d":                      ReturnTime = minutes/60/8;                      break;                  default:                      ReturnTime = minutes / 60;                      break;              }
Missing Default,YASATEngine,RuleManager,C:\repos\SecurityInnovation_YASAT\YASATEngine\RuleManager.cs,GetRulesFromFile,The following switch statement is missing a default case: switch (reader.Name)                              {                                  case "Title":                                      r.Title = ReadElement(reader' "Title");                                      break;                                  case "Severity":                                      r.Severity = ReadElement(reader' "Severity");                                      break;                                  case "Type":                                      r.Type = ReadElement(reader' "Type");                                      break;                                  case "RegularExpressionPattern":                                      r.RegexSearchPattern = ReadElement(reader' "RegularExpressionPattern");                                      break;                                  case "Extensions":                                      r.AddExtensionList(ReadList(reader' "Extensions"' "Extension"));                                      break;                                  case "Guidance":                                      r.AddGuidanceList(ReadList(reader' "Guidance"' "Url"));                                      break;                                  case "Description":                                      r.Description = ReadElement(reader' "Description");                                      break;                              }
