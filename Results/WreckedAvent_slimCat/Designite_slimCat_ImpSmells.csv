Implementation smell,Namespace,Class,File,Method,Description
Long Method,slimCat.Services,ProfileService,C:\repos\WreckedAvent_slimCat\slimCat\Services\ProfileService.cs,GetProfileDataAsyncHandler,The method has 150 lines of code.
Long Method,slimCat.Views,UserbarView,C:\repos\WreckedAvent_slimCat\slimCat\Views\User Bar\UserbarView.xaml.cs,Connect,The method has 100 lines of code.
Complex Method,slimCat.Models,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,NewReportCommand,Cyclomatic complexity of the method is 8
Complex Method,slimCat.Models,CommandDefinitions,C:\repos\WreckedAvent_slimCat\slimCat\Models\CommandDefinitions.cs,CreateCommand,Cyclomatic complexity of the method is 12
Complex Method,slimCat.Services,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,NewReportCommand,Cyclomatic complexity of the method is 8
Complex Method,slimCat.Services,ChannelService,C:\repos\WreckedAvent_slimCat\slimCat\Services\ChannelService.cs,RequestNavigate,Cyclomatic complexity of the method is 10
Complex Method,slimCat.Services,ProfileService,C:\repos\WreckedAvent_slimCat\slimCat\Services\ProfileService.cs,GetProfileDataAsyncHandler,Cyclomatic complexity of the method is 14
Complex Method,slimCat.Services,TicketService,C:\repos\WreckedAvent_slimCat\slimCat\Services\TicketService.cs,GetNewTicket,Cyclomatic complexity of the method is 8
Complex Method,slimCat.Services,NotificationService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NotificationService.cs,HandleNewChannelMessage,Cyclomatic complexity of the method is 14
Complex Method,slimCat.Services,NotificationService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NotificationService.cs,HandleNewMessage,Cyclomatic complexity of the method is 9
Complex Method,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,ParseChunk,Cyclomatic complexity of the method is 13
Complex Method,slimCat.Utilities,BbFinder,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,Next,Cyclomatic complexity of the method is 10
Complex Method,slimCat.Utilities,DateTimeExtensions,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Extensions\DateTimeExtensions.cs,DateTimeToRough,Cyclomatic complexity of the method is 8
Complex Method,slimCat.Utilities,BbFlowConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbFlowConverter.cs,Convert,Cyclomatic complexity of the method is 10
Complex Method,slimCat.ViewModels,PmChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channels\PMChannelViewModel.cs,OnModelPropertyChanged,Cyclomatic complexity of the method is 11
Complex Method,slimCat.Views,ShortcutManager,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ShortcutManager.cs,OnLoaded,Cyclomatic complexity of the method is 9
Long Parameter List,slimCat.Models,CommandModel,C:\repos\WreckedAvent_slimCat\slimCat\Models\CommandModel.cs,CommandModel,The method has 5 parameters. Parameters: familiarName' serverName' paramaterNames' typeOfCommand' permissionLevel
Long Parameter List,slimCat.Services,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,ServerCommandService,The method has 5 parameters. Parameters: chatState' automation' notes' channels' friendRequestService
Long Parameter List,slimCat.Services,UserCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Character\FriendCommand.cs,UserCommandService,The method has 5 parameters. Parameters: chatState' api' logger' channels' iconService
Long Parameter List,slimCat.Services,ChatState,C:\repos\WreckedAvent_slimCat\slimCat\Models\ChatState.cs,ChatState,The method has 7 parameters. Parameters: container' regionManager' eventAggregator' chatModel' characterManager' connection' account
Long Parameter List,slimCat.Services,ProfileService,C:\repos\WreckedAvent_slimCat\slimCat\Services\ProfileService.cs,CreateModel,The method has 5 parameters. Parameters: profileText' tags' imageResponse' kinks' alts
Long Parameter List,slimCat.Services,FriendRequestService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FriendRequestService.cs,FriendRequestService,The method has 5 parameters. Parameters: browser' ticketService' account' events' characterManager
Long Parameter List,slimCat.Services,FlistService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FlistService.cs,FlistService,The method has 5 parameters. Parameters: model' eventagg' browser' ticketService' requestService
Long Parameter List,slimCat.Libraries,NonTopmostPopup,C:\repos\WreckedAvent_slimCat\slimCat\lib\NonTopmostPopup.cs,SetWindowPos,The method has 7 parameters. Parameters: hWnd' hwndInsertAfter' x' y' cx' cy' wFlags
Long Parameter List,slimCat.Utilities,CharacterExtensions,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Extensions\CharacterExtensions.cs,MeetsFilters,The method has 5 parameters. Parameters: character' genders' search' cm' channel
Long Parameter List,slimCat.Utilities,GeneralExtensions,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Extensions\GeneralExtensions.cs,MeetsFilters,The method has 5 parameters. Parameters: message' genders' search' cm' channel
Long Parameter List,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,HomeChannelViewModel,The method has 7 parameters. Parameters: name' chatState' automation' browser' settingsVm' helpVm' updateService
Long Identifier,slimCat.Models,ChannelSettingsModel,C:\repos\WreckedAvent_slimCat\slimCat\Models\ChannelSettingsModel.cs,,The length of the parameter joinLeaveNotifyOnlyForInteresting is 33.
Long Identifier,slimCat.Models,ChannelSettingsModel,C:\repos\WreckedAvent_slimCat\slimCat\Models\ChannelSettingsModel.cs,,The length of the parameter promoteDemoteNotifyOnlyForInteresting is 37.
Long Identifier,slimCat.Views,ShortcutManager,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ShortcutManager.cs,OnIsVisibleChanged,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Statement,slimCat.Models,UserCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\InviteCommand.cs,OnReportRequested,The length of the statement  "                $"Current Tab/Channel: {command.Get(Constants.Arguments.Channel)} | Reporting User: {command.Get(Constants.Arguments.Name)} | {command.Get(Constants.Arguments.Report)}"; " is 169.
Long Statement,slimCat.Models,UserCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\InviteCommand.cs,OnReportRequested,The length of the statement  "                    // we could just use _model.SelectedChannel' but the user might change tabs immediately after reporting' creating a race condition " is 130.
Long Statement,slimCat.Models,CommandDefinitions,C:\repos\WreckedAvent_slimCat\slimCat\Models\CommandDefinitions.cs,CreateCommand,The length of the statement  "            // error out if we have less arguments' but not if we are only missing the channel argument provided by the active channel " is 122.
Long Statement,slimCat.Services,UserCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Character\FriendCommand.cs,OnReportRequested,The length of the statement  "                $"Current Tab/Channel: {command.Get(Constants.Arguments.Channel)} | Reporting User: {command.Get(Constants.Arguments.Name)} | {command.Get(Constants.Arguments.Report)}"; " is 169.
Long Statement,slimCat.Services,UserCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Character\FriendCommand.cs,OnReportRequested,The length of the statement  "                    // we could just use _model.SelectedChannel' but the user might change tabs immediately after reporting' creating a race condition " is 130.
Long Statement,slimCat.Theme,EmbeddedTheme,C:\repos\WreckedAvent_slimCat\slimCat\Theme\EmbeddedTheme.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUpForName); " is 152.
Long Statement,slimCat.Theme,EmbeddedTheme,C:\repos\WreckedAvent_slimCat\slimCat\Theme\EmbeddedTheme.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUpForIcon); " is 152.
Long Statement,slimCat.Theme,EmbeddedTheme,C:\repos\WreckedAvent_slimCat\slimCat\Theme\EmbeddedTheme.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Image)(target)).PreviewMouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMemeExpand); " is 138.
Long Statement,slimCat,App,C:\repos\WreckedAvent_slimCat\slimCat\App.xaml.cs,OnStartup,The length of the statement  "                    $"slimCat will now exit. \nReason: Required theme file \"{file}\" is missing. This is likely due to a bad theme install.\n" + " is 125.
Long Statement,slimCat,App,C:\repos\WreckedAvent_slimCat\slimCat\App.xaml.cs,OnStartup,The length of the statement  "                Some other notes here: colors needs to be loaded in first due to themes.xaml using it. I've tried NOT using siteoforigin " is 120.
Long Statement,slimCat,App,C:\repos\WreckedAvent_slimCat\slimCat\App.xaml.cs,OnStartup,The length of the statement  "                in the pack and it did not work well at all' since it required the theme file to be built into the assembly (defeating the point). " is 130.
Long Statement,slimCat,Shell,C:\repos\WreckedAvent_slimCat\slimCat\Views\Full Screen\Shell.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/full%20screen/shell.xaml"' System.UriKind.Relative); " is 122.
Long Statement,slimCat.Views,SearchTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\SearchTabView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/channel%20bar/searchtabview.xaml"' System.UriKind.Relative); " is 130.
Long Statement,slimCat.Views,ChannelbarView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ChannelBarView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/channel%20bar/channelbarview.xaml"' System.UriKind.Relative); " is 131.
Long Statement,slimCat.Views,ChannelTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ChannelListView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/channel%20bar/channellistview.xaml"' System.UriKind.Relative); " is 132.
Long Statement,slimCat.Views,NotificationsTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\NotificationsTabView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/channel%20bar/notificationstabview.xaml"' System.UriKind.Relative); " is 137.
Long Statement,slimCat.Views,UsersTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ChannelUserListView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/channel%20bar/channeluserlistview.xaml"' System.UriKind.Relative); " is 136.
Long Statement,slimCat.Views,UsersTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ChannelUserListView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp); " is 145.
Long Statement,slimCat.Views,GlobalTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\GlobalUserListView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/channel%20bar/globaluserlistview.xaml"' System.UriKind.Relative); " is 135.
Long Statement,slimCat.Views,GlobalTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\GlobalUserListView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp); " is 145.
Long Statement,slimCat.Views,ManageListsTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ManageListsView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/channel%20bar/managelistsview.xaml"' System.UriKind.Relative); " is 132.
Long Statement,slimCat.Views,ManageListsTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ManageListsView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp); " is 145.
Long Statement,slimCat.Views,HomeHelpView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Home Channel\HomeHelpView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/home%20channel/homehelpview.xaml"' System.UriKind.Relative); " is 130.
Long Statement,slimCat.Views,HomeSettingsView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Home Channel\HomeSettingsView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/home%20channel/homesettingsview.xaml"' System.UriKind.Relative); " is 134.
Long Statement,slimCat.Views,BrowserButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\BrowserButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/browserbuttonview.xaml"' System.UriKind.Relative); " is 139.
Long Statement,slimCat.Views,ProfileButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\ProfileButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/profilebuttonview.xaml"' System.UriKind.Relative); " is 139.
Long Statement,slimCat.Views,AutoButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\AutoButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/autobuttonview.xaml"' System.UriKind.Relative); " is 136.
Long Statement,slimCat.Views,ChannelsButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\ChannelsButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/channelsbuttonview.xaml"' System.UriKind.Relative); " is 140.
Long Statement,slimCat.Views,ChatButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\ChatButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/chatbuttonview.xaml"' System.UriKind.Relative); " is 136.
Long Statement,slimCat.Views,CloseButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\CloseButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/closebuttonview.xaml"' System.UriKind.Relative); " is 137.
Long Statement,slimCat.Views,ChannelTypeButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\ChannelTypeSwitchButton.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/channeltypeswitchbutton.xaml"' System.UriKind.Relative); " is 145.
Long Statement,slimCat.Views,LogoutButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\LogoutButtionView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/logoutbuttionview.xaml"' System.UriKind.Relative); " is 139.
Long Statement,slimCat.Views,ChatSearchButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\ChatSearchButton.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/chatsearchbutton.xaml"' System.UriKind.Relative); " is 138.
Long Statement,slimCat.Views,UpDownButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\UpDownButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/updownbuttonview.xaml"' System.UriKind.Relative); " is 138.
Long Statement,slimCat.Views,MarkupButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\MarkupButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/markupbuttonview.xaml"' System.UriKind.Relative); " is 138.
Long Statement,slimCat.Views,ManageButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\ManageListsButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/managelistsbuttonview.xaml"' System.UriKind.Relative); " is 143.
Long Statement,slimCat.Views,PinButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\PinButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/pinbuttonview.xaml"' System.UriKind.Relative); " is 135.
Long Statement,slimCat.Views,GlobalButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\GlobalButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/globalbuttonview.xaml"' System.UriKind.Relative); " is 138.
Long Statement,slimCat.Views,MoreButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\MoreButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/morebuttonview.xaml"' System.UriKind.Relative); " is 136.
Long Statement,slimCat.Views,NotificationsButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\NotificationsButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/notificationsbuttonview.xaml"' System.UriKind.Relative); " is 145.
Long Statement,slimCat.Views,SearchButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\SearchButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/searchbuttonview.xaml"' System.UriKind.Relative); " is 138.
Long Statement,slimCat.Views,StatsButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\StatsButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/statsbuttonview.xaml"' System.UriKind.Relative); " is 137.
Long Statement,slimCat.Views,UserlistButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\UserListButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/userlistbuttonview.xaml"' System.UriKind.Relative); " is 140.
Long Statement,slimCat.Views,ChannelManagementView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ChannelManagementView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/channelmanagementview.xaml"' System.UriKind.Relative); " is 135.
Long Statement,slimCat.Views,ChannelSettingsView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ChannelSettingsView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/channelsettingsview.xaml"' System.UriKind.Relative); " is 133.
Long Statement,slimCat.Views,ChannelStatsView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ChannelStatsView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/channelstatsview.xaml"' System.UriKind.Relative); " is 130.
Long Statement,slimCat.Views,CharacterUpdateView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\CharacterUpdateView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/characterupdateview.xaml"' System.UriKind.Relative); " is 133.
Long Statement,slimCat.Views,CharacterUpdateView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\CharacterUpdateView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp); " is 145.
Long Statement,slimCat.Views,ChannelUpdateView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ChannelUpdateView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/channelupdateview.xaml"' System.UriKind.Relative); " is 131.
Long Statement,slimCat.Views,HistoryView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\HistoryMessageView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/historymessageview.xaml"' System.UriKind.Relative); " is 132.
Long Statement,slimCat.Views,CreateReportView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\CreateReportView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/createreportview.xaml"' System.UriKind.Relative); " is 130.
Long Statement,slimCat.Views,EditButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\EditButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/editbuttonview.xaml"' System.UriKind.Relative); " is 136.
Long Statement,slimCat.Views,FileButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\FileButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/filebuttonview.xaml"' System.UriKind.Relative); " is 136.
Long Statement,slimCat.Views,FolderButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\FolderButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/folderbuttonview.xaml"' System.UriKind.Relative); " is 138.
Long Statement,slimCat.Views,RestartButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\RestartButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/restartbuttonview.xaml"' System.UriKind.Relative); " is 139.
Long Statement,slimCat.Views,ObservingFlowDocumentReader,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ObservingFlowDocumentReader.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/observingflowdocumentreader.xaml"' System.UriKind.Relative); " is 141.
Long Statement,slimCat.Views,RightClickMenu,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\RightClickMenu.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/rightclickmenu.xaml"' System.UriKind.Relative); " is 128.
Long Statement,slimCat.Views,RightClickMenu,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\RightClickMenu.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.ScrollViewer)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.OnIsVisibleChanged); " is 151.
Long Statement,slimCat.Views,SearchBoxView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\SearchBoxView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/searchboxview.xaml"' System.UriKind.Relative); " is 127.
Long Statement,slimCat.Views,ChannelSelectView,C:\repos\WreckedAvent_slimCat\slimCat\Views\User Bar\UserbarChannelView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/user%20bar/userbarchannelview.xaml"' System.UriKind.Relative); " is 132.
Long Statement,slimCat.Views,ChannelTextBoxEntryView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ChannelTextBoxEntryView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/channeltextboxentryview.xaml"' System.UriKind.Relative); " is 137.
Long Statement,slimCat.Views,CharacterSelectView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Full Screen\CharacterSelectView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/full%20screen/characterselectview.xaml"' System.UriKind.Relative); " is 136.
Long Statement,slimCat.Views,ChatWrapperView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Full Screen\ChatWrapperView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/full%20screen/chatwrapperview.xaml"' System.UriKind.Relative); " is 132.
Long Statement,slimCat.Views,GeneralChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\GeneralChannelView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/channels/generalchannelview.xaml"' System.UriKind.Relative); " is 130.
Long Statement,slimCat.Views,GeneralChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\GeneralChannelView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnHeaderRowResizeRequested); " is 151.
Long Statement,slimCat.Views,GeneralChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\GeneralChannelView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.GridSplitter)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.OnHeaderRowDragging); " is 149.
Long Statement,slimCat.Views,GeneralChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\GeneralChannelView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.GridSplitter)(target)).DragCompleted += new System.Windows.Controls.Primitives.DragCompletedEventHandler(this.OnHeaderRowDragCompleted); " is 162.
Long Statement,slimCat.Views,GeneralChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\GeneralChannelView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested); " is 150.
Long Statement,slimCat.Views,LoginView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Full Screen\LoginView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/full%20screen/loginview.xaml"' System.UriKind.Relative); " is 126.
Long Statement,slimCat.Views,LoginView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Full Screen\LoginView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.PasswordBox)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.OnPasswordKeyDown); " is 124.
Long Statement,slimCat.Views,LoginView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Full Screen\LoginView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.PasswordBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.OnPasswordKeyDown); " is 122.
Long Statement,slimCat.Views,MessageView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ChannelMessageView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/channelmessageview.xaml"' System.UriKind.Relative); " is 132.
Long Statement,slimCat.Views,MessageView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ChannelMessageView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp); " is 145.
Long Statement,slimCat.Views,SettingsButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\SettingsButtonView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/buttons/settingsbuttonview.xaml"' System.UriKind.Relative); " is 140.
Long Statement,slimCat.Views,NotificationsView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ToastNotificationsView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/ui%20parts/toastnotificationsview.xaml"' System.UriKind.Relative); " is 136.
Long Statement,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/channels/pmchannelview.xaml"' System.UriKind.Relative); " is 125.
Long Statement,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.ListBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.OnSelected); " is 138.
Long Statement,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested); " is 150.
Long Statement,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp); " is 145.
Long Statement,slimCat.Views,PmSelectView,C:\repos\WreckedAvent_slimCat\slimCat\Views\User Bar\UserbarPMView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/user%20bar/userbarpmview.xaml"' System.UriKind.Relative); " is 127.
Long Statement,slimCat.Views,UserbarView,C:\repos\WreckedAvent_slimCat\slimCat\Views\User Bar\UserbarView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/user%20bar/userbarview.xaml"' System.UriKind.Relative); " is 125.
Long Statement,slimCat.Views,HomeChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Home Channel\HomeChannelView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/slimCat;component/views/home%20channel/homechannelview.xaml"' System.UriKind.Relative); " is 133.
Long Statement,slimCat.Views,HomeChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Home Channel\HomeChannelView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested); " is 150.
Long Statement,slimCat.Views,HomeChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Home Channel\HomeChannelView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp); " is 145.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\WreckedAvent_slimCat\slimCat\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,slimCat.Services,NotificationService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NotificationService.cs,DingTheCrapOutOfTheUser,The conditional expression  "(DateTime.Now - lastDingLinged) <= TimeSpan.FromSeconds(1)                  || !ApplicationSettings.AllowSound                  ||                  (ApplicationSettings.DisallowNotificationsWhenDnd &&                   ChatState.ChatModel.CurrentCharacter.Status == StatusType.Dnd)"  is complex.
Complex Conditional,slimCat.Utilities,BbCodePostConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodePostConverter.cs,Convert,The conditional expression  "values.Length == 3 && values[0] is string && values[1] is ICharacter && values[2] is MessageType"  is complex.
Complex Conditional,slimCat.ViewModels,GeneralChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channels\GeneralChannelViewModel.cs,SendMessage,The conditional expression  "(IsDisplayingChat && Message.Length > 4096)                  || (IsDisplayingAds && Message.Length > 50000)"  is complex.
Complex Conditional,slimCat.ViewModels,GeneralChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channels\GeneralChannelViewModel.cs,SendMessage,The conditional expression  "(isInCoolDownAd && IsDisplayingAds) || (isInCoolDownMessage && IsDisplayingChat)"  is complex.
Complex Conditional,slimCat.Views,ShortcutManager,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ShortcutManager.cs,OnKeyUp,The conditional expression  "e.Key == Key.Up && string.IsNullOrEmpty(vm.Message) && !string.IsNullOrWhiteSpace(vm.LastMessage) &&                       e.KeyboardDevice.Modifiers == ModifierKeys.None"  is complex.
Empty Catch Block,slimCat.Models,CharacterModel,C:\repos\WreckedAvent_slimCat\slimCat\Models\CharacterModel.cs,GetAvatar,The method has an empty catch block.
Empty Catch Block,slimCat.Models,MessageModel,C:\repos\WreckedAvent_slimCat\slimCat\Models\MessageModel.cs,MessageModel,The method has an empty catch block.
Empty Catch Block,slimCat.Services,ProfileService,C:\repos\WreckedAvent_slimCat\slimCat\Services\ProfileService.cs,GetProfileDataAsyncHandler,The method has an empty catch block.
Empty Catch Block,slimCat.Services,ProfileService,C:\repos\WreckedAvent_slimCat\slimCat\Services\ProfileService.cs,GetProfileDataAsyncHandler,The method has an empty catch block.
Empty Catch Block,slimCat.Services,NoteService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NoteService.cs,GetNotesAsyncHandler,The method has an empty catch block.
Empty Catch Block,slimCat.Services,SettingsService,C:\repos\WreckedAvent_slimCat\slimCat\Services\SettingsService.cs,ReadApplicationSettingsFromXml,The method has an empty catch block.
Empty Catch Block,slimCat.Services,SettingsService,C:\repos\WreckedAvent_slimCat\slimCat\Services\SettingsService.cs,ReadApplicationSettingsFromXml,The method has an empty catch block.
Empty Catch Block,slimCat.Services,SettingsService,C:\repos\WreckedAvent_slimCat\slimCat\Services\SettingsService.cs,ReadObjectFromXml,The method has an empty catch block.
Empty Catch Block,slimCat.Services,SettingsService,C:\repos\WreckedAvent_slimCat\slimCat\Services\SettingsService.cs,Serialize,The method has an empty catch block.
Empty Catch Block,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeColor,The method has an empty catch block.
Empty Catch Block,slimCat.Utilities,StringExtensions,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Extensions\StringExtensions.cs,FirstMatch,The method has an empty catch block.
Empty Catch Block,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,CheckForThemes,The method has an empty catch block.
Magic Number,slimCat.Models,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,InitialCharacterListCommand,The following statement contains a magic number: lock (chatStateLocker)              {                  var arr = (JsonArray) command[Constants.Arguments.MultipleCharacters];                  foreach (JsonArray character in arr)                  {                      ICharacter temp = new CharacterModel();                        temp.Name = (string) character[0]; // Character's name                        temp.Gender = ((string) character[1]).ParseGender(); // character's gender                        temp.Status = character[2].ToEnum<StatusType>();                        // Character's status                      temp.StatusMessage = (string) character[3]; // Character's status message                        CharacterManager.SignOn(temp);                  }              }
Magic Number,slimCat.Models,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,InitialCharacterListCommand,The following statement contains a magic number: lock (chatStateLocker)              {                  var arr = (JsonArray) command[Constants.Arguments.MultipleCharacters];                  foreach (JsonArray character in arr)                  {                      ICharacter temp = new CharacterModel();                        temp.Name = (string) character[0]; // Character's name                        temp.Gender = ((string) character[1]).ParseGender(); // character's gender                        temp.Status = character[2].ToEnum<StatusType>();                        // Character's status                      temp.StatusMessage = (string) character[3]; // Character's status message                        CharacterManager.SignOn(temp);                  }              }
Magic Number,slimCat.Models,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,NewReportCommand,The following statement contains a magic number: if (type.Equals("report"))              {                  // new report                  var report = command.Get("report");                  var callId = command.Get("callid");                  var logId = command.ContainsKey("logid") ? command["logid"] as int? : null;                    var reportIsClean = false;                    // "report" is in some sort of arbitrary and non-compulsory format                  // attempt to decipher it                  if (report == null) return;                    var rawReport = report.Split('|').Select(x => x.Trim()).ToList();                    var starters = new[] {"Current Tab/Channel:"' "Reporting User:"' string.Empty};                    // each section should start with one of these                  var reportData = new List<string>();                    for (var i = 0; i < rawReport.Count; i++)                  {                      if (rawReport[i].StartsWith(starters[i]))                          reportData.Add(rawReport[i].Substring(starters[i].Length).Trim());                  }                    if (reportData.Count == 3)                      reportIsClean = true;                    var reporterName = command.Get(Constants.Arguments.Character);                  var reporter = CharacterManager.Find(reporterName);                    if (reportIsClean)                  {                      Events.NewUpdate(new CharacterUpdateModel(                          reporter'                          new ReportFiledEventArgs                          {                              Reported = reportData[0]'                              Tab = reportData[1]'                              Complaint = reportData[2]'                              LogId = logId'                              CallId = callId                          }));                        reporter.LastReport = new ReportModel                      {                          Reporter = reporter'                          Reported = reportData[0]'                          Tab = reportData[1]'                          Complaint = reportData[2]'                          CallId = callId'                          LogId = logId                      };                  }                  else                  {                      Events.NewUpdate(new CharacterUpdateModel(                          reporter'                          new ReportFiledEventArgs                          {                              Complaint = report'                              CallId = callId'                              LogId = logId                          }));                        reporter.LastReport = new ReportModel                      {                          Reporter = reporter'                          Complaint = report'                          CallId = callId'                          LogId = logId                      };                  }              }              else if (type.Equals("confirm"))              {                  // someone else handling a report                  var handlerName = command.Get("moderator");                  var handled = command.Get(Constants.Arguments.Character);                  var handler = CharacterManager.Find(handlerName);                    Events.NewUpdate(                      new CharacterUpdateModel(                          handler' new ReportHandledEventArgs {Handled = handled}));              }
Magic Number,slimCat.Models,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,NewReportCommand,The following statement contains a magic number: if (type.Equals("report"))              {                  // new report                  var report = command.Get("report");                  var callId = command.Get("callid");                  var logId = command.ContainsKey("logid") ? command["logid"] as int? : null;                    var reportIsClean = false;                    // "report" is in some sort of arbitrary and non-compulsory format                  // attempt to decipher it                  if (report == null) return;                    var rawReport = report.Split('|').Select(x => x.Trim()).ToList();                    var starters = new[] {"Current Tab/Channel:"' "Reporting User:"' string.Empty};                    // each section should start with one of these                  var reportData = new List<string>();                    for (var i = 0; i < rawReport.Count; i++)                  {                      if (rawReport[i].StartsWith(starters[i]))                          reportData.Add(rawReport[i].Substring(starters[i].Length).Trim());                  }                    if (reportData.Count == 3)                      reportIsClean = true;                    var reporterName = command.Get(Constants.Arguments.Character);                  var reporter = CharacterManager.Find(reporterName);                    if (reportIsClean)                  {                      Events.NewUpdate(new CharacterUpdateModel(                          reporter'                          new ReportFiledEventArgs                          {                              Reported = reportData[0]'                              Tab = reportData[1]'                              Complaint = reportData[2]'                              LogId = logId'                              CallId = callId                          }));                        reporter.LastReport = new ReportModel                      {                          Reporter = reporter'                          Reported = reportData[0]'                          Tab = reportData[1]'                          Complaint = reportData[2]'                          CallId = callId'                          LogId = logId                      };                  }                  else                  {                      Events.NewUpdate(new CharacterUpdateModel(                          reporter'                          new ReportFiledEventArgs                          {                              Complaint = report'                              CallId = callId'                              LogId = logId                          }));                        reporter.LastReport = new ReportModel                      {                          Reporter = reporter'                          Complaint = report'                          CallId = callId'                          LogId = logId                      };                  }              }              else if (type.Equals("confirm"))              {                  // someone else handling a report                  var handlerName = command.Get("moderator");                  var handled = command.Get(Constants.Arguments.Character);                  var handler = CharacterManager.Find(handlerName);                    Events.NewUpdate(                      new CharacterUpdateModel(                          handler' new ReportHandledEventArgs {Handled = handled}));              }
Magic Number,slimCat.Models,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,NewReportCommand,The following statement contains a magic number: if (type.Equals("report"))              {                  // new report                  var report = command.Get("report");                  var callId = command.Get("callid");                  var logId = command.ContainsKey("logid") ? command["logid"] as int? : null;                    var reportIsClean = false;                    // "report" is in some sort of arbitrary and non-compulsory format                  // attempt to decipher it                  if (report == null) return;                    var rawReport = report.Split('|').Select(x => x.Trim()).ToList();                    var starters = new[] {"Current Tab/Channel:"' "Reporting User:"' string.Empty};                    // each section should start with one of these                  var reportData = new List<string>();                    for (var i = 0; i < rawReport.Count; i++)                  {                      if (rawReport[i].StartsWith(starters[i]))                          reportData.Add(rawReport[i].Substring(starters[i].Length).Trim());                  }                    if (reportData.Count == 3)                      reportIsClean = true;                    var reporterName = command.Get(Constants.Arguments.Character);                  var reporter = CharacterManager.Find(reporterName);                    if (reportIsClean)                  {                      Events.NewUpdate(new CharacterUpdateModel(                          reporter'                          new ReportFiledEventArgs                          {                              Reported = reportData[0]'                              Tab = reportData[1]'                              Complaint = reportData[2]'                              LogId = logId'                              CallId = callId                          }));                        reporter.LastReport = new ReportModel                      {                          Reporter = reporter'                          Reported = reportData[0]'                          Tab = reportData[1]'                          Complaint = reportData[2]'                          CallId = callId'                          LogId = logId                      };                  }                  else                  {                      Events.NewUpdate(new CharacterUpdateModel(                          reporter'                          new ReportFiledEventArgs                          {                              Complaint = report'                              CallId = callId'                              LogId = logId                          }));                        reporter.LastReport = new ReportModel                      {                          Reporter = reporter'                          Complaint = report'                          CallId = callId'                          LogId = logId                      };                  }              }              else if (type.Equals("confirm"))              {                  // someone else handling a report                  var handlerName = command.Get("moderator");                  var handled = command.Get(Constants.Arguments.Character);                  var handler = CharacterManager.Find(handlerName);                    Events.NewUpdate(                      new CharacterUpdateModel(                          handler' new ReportHandledEventArgs {Handled = handled}));              }
Magic Number,slimCat.Models,UserCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\InviteCommand.cs,OnJoinRequested,The following statement contains a magic number: if (isExact)              {                  channelName = channelName.Substring(1' channelName.Length - 2);              }              else              {                  guess =                      cm.AllChannels.OrderBy(channel => channel.Title)                          .FirstOrDefault(channel => channel.Title.StartsWith(channelName' true' null));              }
Magic Number,slimCat.Models,ChannelSettingsModel,C:\repos\WreckedAvent_slimCat\slimCat\Models\ChannelSettingsModel.cs,ChannelSettingsModel,The following statement contains a magic number: if (isPm)              {                  MessageNotifyLevel = (int) NotifyLevel.NotificationAndSound;                  MaxBackLogItems = 200;              }              else                  MaxBackLogItems = 100;
Magic Number,slimCat.Models,ChannelSettingsModel,C:\repos\WreckedAvent_slimCat\slimCat\Models\ChannelSettingsModel.cs,ChannelSettingsModel,The following statement contains a magic number: if (isPm)              {                  MessageNotifyLevel = (int) NotifyLevel.NotificationAndSound;                  MaxBackLogItems = 200;              }              else                  MaxBackLogItems = 100;
Magic Number,slimCat.Models,LatestConfig,C:\repos\WreckedAvent_slimCat\slimCat\Models\LatestConfig.cs,LatestConfig,The following statement contains a magic number: PublishDate = args[2];
Magic Number,slimCat.Models,LatestConfig,C:\repos\WreckedAvent_slimCat\slimCat\Models\LatestConfig.cs,LatestConfig,The following statement contains a magic number: ChangelogLink = args[3];
Magic Number,slimCat.Models,LatestConfig,C:\repos\WreckedAvent_slimCat\slimCat\Models\LatestConfig.cs,LatestConfig,The following statement contains a magic number: SlimCatChannelId = args[4];
Magic Number,slimCat.Models,LatestConfig,C:\repos\WreckedAvent_slimCat\slimCat\Models\LatestConfig.cs,LatestConfig,The following statement contains a magic number: UpdateImpactsTheme = bool.Parse(args[5]);
Magic Number,slimCat.Models,MessageModel,C:\repos\WreckedAvent_slimCat\slimCat\Models\MessageModel.cs,MessageModel,The following statement contains a magic number: var parts = fullText.Split(new[] { ": " }' 2' StringSplitOptions.RemoveEmptyEntries);
Magic Number,slimCat.Models,MessageModel,C:\repos\WreckedAvent_slimCat\slimCat\Models\MessageModel.cs,MessageModel,The following statement contains a magic number: if (parts.Length == 2)              {                  try                  {                      var nameBadge = parts[0];                      var message = parts[1];                        if (nameBadge.StartsWith(adSignifier)) nameBadge = nameBadge.Substring(adSignifier.Length);                        var format = DateTimeExtensions.GetTimestampFormat();                      var nameIdx = nameBadge.IndexOf(format.Trim().Last()) + 1;                        var name = nameBadge.Substring(nameIdx).Trim();                      var timeStamp = nameBadge.Substring(0' nameIdx).Trim();                          // parse our date' and set the date component based on the last write time of the log                      DateTime parsedDate;                      if (!DateTime.TryParseExact(timeStamp' format' CultureInfo.InvariantCulture' DateTimeStyles.None' out parsedDate)) return;                      parsedDate = new DateTime(dateOfLogs.Year' dateOfLogs.Month' dateOfLogs.Day' parsedDate.Hour' parsedDate.Minute' parsedDate.Second);                        PostedTime = parsedDate;                      Poster = getCharacter(name);                      Message = message;                      IsHistoryMessage = false;                  }                  catch                  {                  }              }
Magic Number,slimCat.Models,PmChannelModel,C:\repos\WreckedAvent_slimCat\slimCat\Models\PMChannelModel.cs,PmChannelModel,The following statement contains a magic number: updateTick = new Timer(1000);
Magic Number,slimCat.Models,PmChannelModel,C:\repos\WreckedAvent_slimCat\slimCat\Models\PMChannelModel.cs,PmChannelModel,The following statement contains a magic number: updateTick.Elapsed += (s' e) =>              {                  if (isTypingString.Length < 3)                      isTypingString.Append(".");                  else                  {                      isTypingString.Clear();                      isTypingString.Append(".");                  }                    OnPropertyChanged("TypingString");              };
Magic Number,slimCat.Models,ApplicationSettings,C:\repos\WreckedAvent_slimCat\slimCat\Models\ApplicationSettings.cs,ApplicationSettings,The following statement contains a magic number: RecentChannels = new List<string>(10);
Magic Number,slimCat.Models,ApplicationSettings,C:\repos\WreckedAvent_slimCat\slimCat\Models\ApplicationSettings.cs,ApplicationSettings,The following statement contains a magic number: RecentCharacters = new List<string>(20);
Magic Number,slimCat.Models,ApplicationSettings,C:\repos\WreckedAvent_slimCat\slimCat\Models\ApplicationSettings.cs,ApplicationSettings,The following statement contains a magic number: FontSize = 13;
Magic Number,slimCat.Models,ApplicationSettings,C:\repos\WreckedAvent_slimCat\slimCat\Models\ApplicationSettings.cs,ApplicationSettings,The following statement contains a magic number: EntryFontSize = 13;
Magic Number,slimCat.Models,ApplicationSettings,C:\repos\WreckedAvent_slimCat\slimCat\Models\ApplicationSettings.cs,ApplicationSettings,The following statement contains a magic number: AutoAwayTime = 60;
Magic Number,slimCat.Models,ApplicationSettings,C:\repos\WreckedAvent_slimCat\slimCat\Models\ApplicationSettings.cs,ApplicationSettings,The following statement contains a magic number: AutoIdleTime = 30;
Magic Number,slimCat.Models,ApplicationSettings,C:\repos\WreckedAvent_slimCat\slimCat\Models\ApplicationSettings.cs,ApplicationSettings,The following statement contains a magic number: ShowMoreInAdsLength = 400;
Magic Number,slimCat.Models,ApplicationSettings,C:\repos\WreckedAvent_slimCat\slimCat\Models\ApplicationSettings.cs,ApplicationSettings,The following statement contains a magic number: ChannelDisplayThreshold = 5;
Magic Number,slimCat.Models,ApplicationSettings,C:\repos\WreckedAvent_slimCat\slimCat\Models\ApplicationSettings.cs,ApplicationSettings,The following statement contains a magic number: PreloadMessageAmount = 10;
Magic Number,slimCat.Services,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,InitialCharacterListCommand,The following statement contains a magic number: lock (chatStateLocker)              {                  var arr = (JsonArray) command[Constants.Arguments.MultipleCharacters];                  foreach (JsonArray character in arr)                  {                      ICharacter temp = new CharacterModel();                        temp.Name = (string) character[0]; // Character's name                        temp.Gender = ((string) character[1]).ParseGender(); // character's gender                        temp.Status = character[2].ToEnum<StatusType>();                        // Character's status                      temp.StatusMessage = (string) character[3]; // Character's status message                        CharacterManager.SignOn(temp);                  }              }
Magic Number,slimCat.Services,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,InitialCharacterListCommand,The following statement contains a magic number: lock (chatStateLocker)              {                  var arr = (JsonArray) command[Constants.Arguments.MultipleCharacters];                  foreach (JsonArray character in arr)                  {                      ICharacter temp = new CharacterModel();                        temp.Name = (string) character[0]; // Character's name                        temp.Gender = ((string) character[1]).ParseGender(); // character's gender                        temp.Status = character[2].ToEnum<StatusType>();                        // Character's status                      temp.StatusMessage = (string) character[3]; // Character's status message                        CharacterManager.SignOn(temp);                  }              }
Magic Number,slimCat.Services,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,NewReportCommand,The following statement contains a magic number: if (type.Equals("report"))              {                  // new report                  var report = command.Get("report");                  var callId = command.Get("callid");                  var logId = command.ContainsKey("logid") ? command["logid"] as int? : null;                    var reportIsClean = false;                    // "report" is in some sort of arbitrary and non-compulsory format                  // attempt to decipher it                  if (report == null) return;                    var rawReport = report.Split('|').Select(x => x.Trim()).ToList();                    var starters = new[] {"Current Tab/Channel:"' "Reporting User:"' string.Empty};                    // each section should start with one of these                  var reportData = new List<string>();                    for (var i = 0; i < rawReport.Count; i++)                  {                      if (rawReport[i].StartsWith(starters[i]))                          reportData.Add(rawReport[i].Substring(starters[i].Length).Trim());                  }                    if (reportData.Count == 3)                      reportIsClean = true;                    var reporterName = command.Get(Constants.Arguments.Character);                  var reporter = CharacterManager.Find(reporterName);                    if (reportIsClean)                  {                      Events.NewUpdate(new CharacterUpdateModel(                          reporter'                          new ReportFiledEventArgs                          {                              Reported = reportData[0]'                              Tab = reportData[1]'                              Complaint = reportData[2]'                              LogId = logId'                              CallId = callId                          }));                        reporter.LastReport = new ReportModel                      {                          Reporter = reporter'                          Reported = reportData[0]'                          Tab = reportData[1]'                          Complaint = reportData[2]'                          CallId = callId'                          LogId = logId                      };                  }                  else                  {                      Events.NewUpdate(new CharacterUpdateModel(                          reporter'                          new ReportFiledEventArgs                          {                              Complaint = report'                              CallId = callId'                              LogId = logId                          }));                        reporter.LastReport = new ReportModel                      {                          Reporter = reporter'                          Complaint = report'                          CallId = callId'                          LogId = logId                      };                  }              }              else if (type.Equals("confirm"))              {                  // someone else handling a report                  var handlerName = command.Get("moderator");                  var handled = command.Get(Constants.Arguments.Character);                  var handler = CharacterManager.Find(handlerName);                    Events.NewUpdate(                      new CharacterUpdateModel(                          handler' new ReportHandledEventArgs {Handled = handled}));              }
Magic Number,slimCat.Services,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,NewReportCommand,The following statement contains a magic number: if (type.Equals("report"))              {                  // new report                  var report = command.Get("report");                  var callId = command.Get("callid");                  var logId = command.ContainsKey("logid") ? command["logid"] as int? : null;                    var reportIsClean = false;                    // "report" is in some sort of arbitrary and non-compulsory format                  // attempt to decipher it                  if (report == null) return;                    var rawReport = report.Split('|').Select(x => x.Trim()).ToList();                    var starters = new[] {"Current Tab/Channel:"' "Reporting User:"' string.Empty};                    // each section should start with one of these                  var reportData = new List<string>();                    for (var i = 0; i < rawReport.Count; i++)                  {                      if (rawReport[i].StartsWith(starters[i]))                          reportData.Add(rawReport[i].Substring(starters[i].Length).Trim());                  }                    if (reportData.Count == 3)                      reportIsClean = true;                    var reporterName = command.Get(Constants.Arguments.Character);                  var reporter = CharacterManager.Find(reporterName);                    if (reportIsClean)                  {                      Events.NewUpdate(new CharacterUpdateModel(                          reporter'                          new ReportFiledEventArgs                          {                              Reported = reportData[0]'                              Tab = reportData[1]'                              Complaint = reportData[2]'                              LogId = logId'                              CallId = callId                          }));                        reporter.LastReport = new ReportModel                      {                          Reporter = reporter'                          Reported = reportData[0]'                          Tab = reportData[1]'                          Complaint = reportData[2]'                          CallId = callId'                          LogId = logId                      };                  }                  else                  {                      Events.NewUpdate(new CharacterUpdateModel(                          reporter'                          new ReportFiledEventArgs                          {                              Complaint = report'                              CallId = callId'                              LogId = logId                          }));                        reporter.LastReport = new ReportModel                      {                          Reporter = reporter'                          Complaint = report'                          CallId = callId'                          LogId = logId                      };                  }              }              else if (type.Equals("confirm"))              {                  // someone else handling a report                  var handlerName = command.Get("moderator");                  var handled = command.Get(Constants.Arguments.Character);                  var handler = CharacterManager.Find(handlerName);                    Events.NewUpdate(                      new CharacterUpdateModel(                          handler' new ReportHandledEventArgs {Handled = handled}));              }
Magic Number,slimCat.Services,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,NewReportCommand,The following statement contains a magic number: if (type.Equals("report"))              {                  // new report                  var report = command.Get("report");                  var callId = command.Get("callid");                  var logId = command.ContainsKey("logid") ? command["logid"] as int? : null;                    var reportIsClean = false;                    // "report" is in some sort of arbitrary and non-compulsory format                  // attempt to decipher it                  if (report == null) return;                    var rawReport = report.Split('|').Select(x => x.Trim()).ToList();                    var starters = new[] {"Current Tab/Channel:"' "Reporting User:"' string.Empty};                    // each section should start with one of these                  var reportData = new List<string>();                    for (var i = 0; i < rawReport.Count; i++)                  {                      if (rawReport[i].StartsWith(starters[i]))                          reportData.Add(rawReport[i].Substring(starters[i].Length).Trim());                  }                    if (reportData.Count == 3)                      reportIsClean = true;                    var reporterName = command.Get(Constants.Arguments.Character);                  var reporter = CharacterManager.Find(reporterName);                    if (reportIsClean)                  {                      Events.NewUpdate(new CharacterUpdateModel(                          reporter'                          new ReportFiledEventArgs                          {                              Reported = reportData[0]'                              Tab = reportData[1]'                              Complaint = reportData[2]'                              LogId = logId'                              CallId = callId                          }));                        reporter.LastReport = new ReportModel                      {                          Reporter = reporter'                          Reported = reportData[0]'                          Tab = reportData[1]'                          Complaint = reportData[2]'                          CallId = callId'                          LogId = logId                      };                  }                  else                  {                      Events.NewUpdate(new CharacterUpdateModel(                          reporter'                          new ReportFiledEventArgs                          {                              Complaint = report'                              CallId = callId'                              LogId = logId                          }));                        reporter.LastReport = new ReportModel                      {                          Reporter = reporter'                          Complaint = report'                          CallId = callId'                          LogId = logId                      };                  }              }              else if (type.Equals("confirm"))              {                  // someone else handling a report                  var handlerName = command.Get("moderator");                  var handled = command.Get(Constants.Arguments.Character);                  var handler = CharacterManager.Find(handlerName);                    Events.NewUpdate(                      new CharacterUpdateModel(                          handler' new ReportHandledEventArgs {Handled = handled}));              }
Magic Number,slimCat.Services,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,LoginCommand,The following statement contains a magic number: var waitTimer = new Timer(200);
Magic Number,slimCat.Services,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,RequeueCommand,The following statement contains a magic number: if (retryAttempts >= 5) return;
Magic Number,slimCat.Services,ServerCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Channel\DisciplineCommand.cs,RequeueCommand,The following statement contains a magic number: var delay = new Timer(2000 ^ retryAttempts);
Magic Number,slimCat.Services,UserCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Character\FriendCommand.cs,OnJoinRequested,The following statement contains a magic number: if (isExact)              {                  channelName = channelName.Substring(1' channelName.Length - 2);              }              else              {                  guess =                      cm.AllChannels.OrderBy(channel => channel.Title)                          .FirstOrDefault(channel => channel.Title.StartsWith(channelName' true' null));              }
Magic Number,slimCat.Services,UserCommandService,C:\repos\WreckedAvent_slimCat\slimCat\Commands\Character\FriendCommand.cs,OnPrivRequested,The following statement contains a magic number: if (isExact)              {                  characterName = characterName.Substring(1' characterName.Length - 2);              }              else              {                  guess = characterManager.SortedCharacters.OrderBy(x => x.Name)                      .Where(x => !x.NameEquals(cm.CurrentCharacter.Name))                      .FirstOrDefault(c => c.Name.StartsWith(characterName' true' null));              }
Magic Number,slimCat.Services,ChannelListUpdaterService,C:\repos\WreckedAvent_slimCat\slimCat\Services\ChannelListUpdaterService.cs,ChannelListUpdaterService,The following statement contains a magic number: var timer = new Timer(60*1000*1);
Magic Number,slimCat.Services,ChannelListUpdaterService,C:\repos\WreckedAvent_slimCat\slimCat\Services\ChannelListUpdaterService.cs,ChannelListUpdaterService,The following statement contains a magic number: var timer = new Timer(60*1000*1);
Magic Number,slimCat.Services,ChannelListUpdaterService,C:\repos\WreckedAvent_slimCat\slimCat\Services\ChannelListUpdaterService.cs,ShouldUpdate,The following statement contains a magic number: return lastUpdate.AddHours(2) <= DateTime.Now;
Magic Number,slimCat.Services,IconService,C:\repos\WreckedAvent_slimCat\slimCat\Services\IconService.cs,HideWindow,The following statement contains a magic number: if (SettingsService.Preferences.ShowStillRunning)              {                  icon.ShowBalloonTip(                      5'                      "slimCat"'                      "slimCat is still running in the background." +                      "\nClick on this to silence this notification (forever and ever)."'                      ToolTipIcon.Info);              }
Magic Number,slimCat.Services,ProfileService,C:\repos\WreckedAvent_slimCat\slimCat\Services\ProfileService.cs,GetProfileDataAsyncHandler,The following statement contains a magic number: try              {                  var profileBody = string.Empty;                  var profileText = htmlDoc.DocumentNode.SelectNodes(ProfileBodySelector);                  if (profileText != null)                  {                      profileBody = WebUtility.HtmlDecode(profileText[0].InnerHtml);                      profileBody = profileBody.Replace("<br>"' "\n");                  }                    IEnumerable<ProfileTag> profileTags = new List<ProfileTag>();                  var statboxTags = htmlDoc.DocumentNode.SelectNodes(ProfileStatBoxSelector);                  if (statboxTags != null && statboxTags.Count != 0)                  {                      profileTags = statboxTags[0].ChildNodes                          .Where(x => x.Name == "span" || x.Name == "#text")                          .Select(x => x.InnerText.Trim().DoubleDecode())                          .Where(x => !string.IsNullOrWhiteSpace(x))                          .ToList()                          .Chunk(2)                          .Select(x => x.ToList())                          .Select(x => new ProfileTag                          {                              Label = x[0]'                              Value = x[1].Substring(1).Trim()                          });                  }                    var otherTags = htmlDoc.DocumentNode.SelectNodes(ProfileTagsSelector);                  if (otherTags != null)                  {                      profileTags = profileTags.Union(otherTags.SelectMany(selection =>                          selection.ChildNodes                              .Where(x => x.Name == "span" || x.Name == "#text")                              .Select(x => x.InnerText.Trim().DoubleDecode())                              .ToList()                              .Chunk(2)                              .Select(x => x.ToList())                              .Select(x => new ProfileTag                              {                                  Label = x[0].Replace(":"' "").Trim()'                                  Value = x[1]                              })));                  }                    IEnumerable<string> allAlts = new List<string>();                  var profileAlts = htmlDoc.DocumentNode.SelectNodes(ProfileAltsSelector);                  if (profileAlts != null)                  {                      allAlts = profileAlts[0].ChildNodes                          .Where(x => x.Name == "a")                          .Select(x => x.InnerText.Trim().DoubleDecode())                          .Where(x => !string.IsNullOrWhiteSpace(x))                          .ToList();                  }                    var allKinks = new List<ProfileKink>();                  var profileKinks = htmlDoc.DocumentNode.SelectNodes(ProfileKinksSelector);                  if (profileKinks != null)                  {                      allKinks = profileKinks.SelectMany(selection =>                      {                          var kind =                              (KinkListKind)                                  Enum.Parse(typeof (KinkListKind)' selection.Id.Substring("Character_Fetishlist".Length));                          return selection.Descendants()                              .Where(x => x.Name == "a")                              .Select(x =>                              {                                  var tagId = int.Parse(x.Id.Substring("Character_Listedfetish".Length));                                  var isCustomKink =                                      x.Attributes.First(y => y.Name.Equals("class")).Value.Contains("FetishGroupCustom");                                  var tooltip = x.Attributes.FirstOrDefault(y => y.Name.Equals("rel"));                                  var name = x.InnerText.Trim();                                    return new ProfileKink                                  {                                      Id = tagId'                                      IsCustomKink = isCustomKink'                                      Name = isCustomKink ? name.DoubleDecode() : string.Empty'                                      KinkListKind = kind'                                      Tooltip =                                          tooltip != null && isCustomKink ? tooltip.Value.DoubleDecode() : string.Empty                                  };                              });                      }).ToList();                  }                    var id = htmlDoc.DocumentNode.SelectSingleNode(ProfileIdSelector).Attributes["value"].Value;                    ApiProfileImagesResponse images;                  try                  {                      var imageResp = browser.GetResponse(Constants.UrlConstants.ProfileImages'                          new Dictionary<string' object> { { "character_id"' id } }' true);                      images = JsonConvert.DeserializeObject<ApiProfileImagesResponse>(imageResp);                      images.Images = images.Images.OrderBy(x => x.SortOrder).ToList();                  }                  catch                  {                      images = new ApiProfileImagesResponse                      {                          Images = new List<ApiProfileImage>()                      };                  }                    var profileData = CreateModel(profileBody' profileTags' images' allKinks' allAlts);                  SettingsService.SaveProfile(characterName' profileData);                    profileCache[characterName] = profileData;                    if (model != null)                      model.ProfileData = profileData;                    if (cm.CurrentCharacter.NameEquals(characterName))                      cm.CurrentCharacterData = profileData;              }              catch              {              }
Magic Number,slimCat.Services,ProfileService,C:\repos\WreckedAvent_slimCat\slimCat\Services\ProfileService.cs,GetProfileDataAsyncHandler,The following statement contains a magic number: try              {                  var profileBody = string.Empty;                  var profileText = htmlDoc.DocumentNode.SelectNodes(ProfileBodySelector);                  if (profileText != null)                  {                      profileBody = WebUtility.HtmlDecode(profileText[0].InnerHtml);                      profileBody = profileBody.Replace("<br>"' "\n");                  }                    IEnumerable<ProfileTag> profileTags = new List<ProfileTag>();                  var statboxTags = htmlDoc.DocumentNode.SelectNodes(ProfileStatBoxSelector);                  if (statboxTags != null && statboxTags.Count != 0)                  {                      profileTags = statboxTags[0].ChildNodes                          .Where(x => x.Name == "span" || x.Name == "#text")                          .Select(x => x.InnerText.Trim().DoubleDecode())                          .Where(x => !string.IsNullOrWhiteSpace(x))                          .ToList()                          .Chunk(2)                          .Select(x => x.ToList())                          .Select(x => new ProfileTag                          {                              Label = x[0]'                              Value = x[1].Substring(1).Trim()                          });                  }                    var otherTags = htmlDoc.DocumentNode.SelectNodes(ProfileTagsSelector);                  if (otherTags != null)                  {                      profileTags = profileTags.Union(otherTags.SelectMany(selection =>                          selection.ChildNodes                              .Where(x => x.Name == "span" || x.Name == "#text")                              .Select(x => x.InnerText.Trim().DoubleDecode())                              .ToList()                              .Chunk(2)                              .Select(x => x.ToList())                              .Select(x => new ProfileTag                              {                                  Label = x[0].Replace(":"' "").Trim()'                                  Value = x[1]                              })));                  }                    IEnumerable<string> allAlts = new List<string>();                  var profileAlts = htmlDoc.DocumentNode.SelectNodes(ProfileAltsSelector);                  if (profileAlts != null)                  {                      allAlts = profileAlts[0].ChildNodes                          .Where(x => x.Name == "a")                          .Select(x => x.InnerText.Trim().DoubleDecode())                          .Where(x => !string.IsNullOrWhiteSpace(x))                          .ToList();                  }                    var allKinks = new List<ProfileKink>();                  var profileKinks = htmlDoc.DocumentNode.SelectNodes(ProfileKinksSelector);                  if (profileKinks != null)                  {                      allKinks = profileKinks.SelectMany(selection =>                      {                          var kind =                              (KinkListKind)                                  Enum.Parse(typeof (KinkListKind)' selection.Id.Substring("Character_Fetishlist".Length));                          return selection.Descendants()                              .Where(x => x.Name == "a")                              .Select(x =>                              {                                  var tagId = int.Parse(x.Id.Substring("Character_Listedfetish".Length));                                  var isCustomKink =                                      x.Attributes.First(y => y.Name.Equals("class")).Value.Contains("FetishGroupCustom");                                  var tooltip = x.Attributes.FirstOrDefault(y => y.Name.Equals("rel"));                                  var name = x.InnerText.Trim();                                    return new ProfileKink                                  {                                      Id = tagId'                                      IsCustomKink = isCustomKink'                                      Name = isCustomKink ? name.DoubleDecode() : string.Empty'                                      KinkListKind = kind'                                      Tooltip =                                          tooltip != null && isCustomKink ? tooltip.Value.DoubleDecode() : string.Empty                                  };                              });                      }).ToList();                  }                    var id = htmlDoc.DocumentNode.SelectSingleNode(ProfileIdSelector).Attributes["value"].Value;                    ApiProfileImagesResponse images;                  try                  {                      var imageResp = browser.GetResponse(Constants.UrlConstants.ProfileImages'                          new Dictionary<string' object> { { "character_id"' id } }' true);                      images = JsonConvert.DeserializeObject<ApiProfileImagesResponse>(imageResp);                      images.Images = images.Images.OrderBy(x => x.SortOrder).ToList();                  }                  catch                  {                      images = new ApiProfileImagesResponse                      {                          Images = new List<ApiProfileImage>()                      };                  }                    var profileData = CreateModel(profileBody' profileTags' images' allKinks' allAlts);                  SettingsService.SaveProfile(characterName' profileData);                    profileCache[characterName] = profileData;                    if (model != null)                      model.ProfileData = profileData;                    if (cm.CurrentCharacter.NameEquals(characterName))                      cm.CurrentCharacterData = profileData;              }              catch              {              }
Magic Number,slimCat.Services,NoteService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NoteService.cs,GetNotesAsyncHandler,The following statement contains a magic number: {                  if (result != null && result.Count > 0)                  {                      Log($"parsing note history for {characterName}' {result.Count} items");                      result.Select(x =>                      {                          Log(x.InnerText);                          var isFuzzyTime = true;                          var split = x.InnerText.Split(new[] {"sent'"' "ago:"}' 3'                              StringSplitOptions.RemoveEmptyEntries);                          if (split.Length < 3)                          {                              split = amPmRegex.Split(x.InnerText' 3).ToArray();                              split[1] = split[1] + split[2];                              split[2] = split[3];                              split[3] = null;                                isFuzzyTime = false;                          }                            return new MessageModel(                              characters.Find(split[0].Trim())'                              HttpUtility.HtmlDecode(split[2])'                              isFuzzyTime ? FromFuzzyString(split[1].Trim()) : FromExactString(split[1].Trim()));                      })                          .Each(notes.Add);                  }                    noteCache.Add(characterName'                      new Conversation                      {                          Messages = notes'                          Subject = title'                          SourceId = sourceId                      });                    try                  {                      var model = container.Resolve<PmChannelModel>(characterName);                      Application.Current.Dispatcher.Invoke(() =>                      {                          model.Notes.Clear();                          model.Notes.AddRange(notes);                          model.NoteSubject = title;                      });                  }                  catch                  {                  }              }
Magic Number,slimCat.Services,NoteService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NoteService.cs,GetNotesAsyncHandler,The following statement contains a magic number: {                  if (result != null && result.Count > 0)                  {                      Log($"parsing note history for {characterName}' {result.Count} items");                      result.Select(x =>                      {                          Log(x.InnerText);                          var isFuzzyTime = true;                          var split = x.InnerText.Split(new[] {"sent'"' "ago:"}' 3'                              StringSplitOptions.RemoveEmptyEntries);                          if (split.Length < 3)                          {                              split = amPmRegex.Split(x.InnerText' 3).ToArray();                              split[1] = split[1] + split[2];                              split[2] = split[3];                              split[3] = null;                                isFuzzyTime = false;                          }                            return new MessageModel(                              characters.Find(split[0].Trim())'                              HttpUtility.HtmlDecode(split[2])'                              isFuzzyTime ? FromFuzzyString(split[1].Trim()) : FromExactString(split[1].Trim()));                      })                          .Each(notes.Add);                  }                    noteCache.Add(characterName'                      new Conversation                      {                          Messages = notes'                          Subject = title'                          SourceId = sourceId                      });                    try                  {                      var model = container.Resolve<PmChannelModel>(characterName);                      Application.Current.Dispatcher.Invoke(() =>                      {                          model.Notes.Clear();                          model.Notes.AddRange(notes);                          model.NoteSubject = title;                      });                  }                  catch                  {                  }              }
Magic Number,slimCat.Services,NoteService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NoteService.cs,GetNotesAsyncHandler,The following statement contains a magic number: {                  if (result != null && result.Count > 0)                  {                      Log($"parsing note history for {characterName}' {result.Count} items");                      result.Select(x =>                      {                          Log(x.InnerText);                          var isFuzzyTime = true;                          var split = x.InnerText.Split(new[] {"sent'"' "ago:"}' 3'                              StringSplitOptions.RemoveEmptyEntries);                          if (split.Length < 3)                          {                              split = amPmRegex.Split(x.InnerText' 3).ToArray();                              split[1] = split[1] + split[2];                              split[2] = split[3];                              split[3] = null;                                isFuzzyTime = false;                          }                            return new MessageModel(                              characters.Find(split[0].Trim())'                              HttpUtility.HtmlDecode(split[2])'                              isFuzzyTime ? FromFuzzyString(split[1].Trim()) : FromExactString(split[1].Trim()));                      })                          .Each(notes.Add);                  }                    noteCache.Add(characterName'                      new Conversation                      {                          Messages = notes'                          Subject = title'                          SourceId = sourceId                      });                    try                  {                      var model = container.Resolve<PmChannelModel>(characterName);                      Application.Current.Dispatcher.Invoke(() =>                      {                          model.Notes.Clear();                          model.Notes.AddRange(notes);                          model.NoteSubject = title;                      });                  }                  catch                  {                  }              }
Magic Number,slimCat.Services,NoteService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NoteService.cs,GetNotesAsyncHandler,The following statement contains a magic number: {                  if (result != null && result.Count > 0)                  {                      Log($"parsing note history for {characterName}' {result.Count} items");                      result.Select(x =>                      {                          Log(x.InnerText);                          var isFuzzyTime = true;                          var split = x.InnerText.Split(new[] {"sent'"' "ago:"}' 3'                              StringSplitOptions.RemoveEmptyEntries);                          if (split.Length < 3)                          {                              split = amPmRegex.Split(x.InnerText' 3).ToArray();                              split[1] = split[1] + split[2];                              split[2] = split[3];                              split[3] = null;                                isFuzzyTime = false;                          }                            return new MessageModel(                              characters.Find(split[0].Trim())'                              HttpUtility.HtmlDecode(split[2])'                              isFuzzyTime ? FromFuzzyString(split[1].Trim()) : FromExactString(split[1].Trim()));                      })                          .Each(notes.Add);                  }                    noteCache.Add(characterName'                      new Conversation                      {                          Messages = notes'                          Subject = title'                          SourceId = sourceId                      });                    try                  {                      var model = container.Resolve<PmChannelModel>(characterName);                      Application.Current.Dispatcher.Invoke(() =>                      {                          model.Notes.Clear();                          model.Notes.AddRange(notes);                          model.NoteSubject = title;                      });                  }                  catch                  {                  }              }
Magic Number,slimCat.Services,NoteService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NoteService.cs,GetNotesAsyncHandler,The following statement contains a magic number: {                  if (result != null && result.Count > 0)                  {                      Log($"parsing note history for {characterName}' {result.Count} items");                      result.Select(x =>                      {                          Log(x.InnerText);                          var isFuzzyTime = true;                          var split = x.InnerText.Split(new[] {"sent'"' "ago:"}' 3'                              StringSplitOptions.RemoveEmptyEntries);                          if (split.Length < 3)                          {                              split = amPmRegex.Split(x.InnerText' 3).ToArray();                              split[1] = split[1] + split[2];                              split[2] = split[3];                              split[3] = null;                                isFuzzyTime = false;                          }                            return new MessageModel(                              characters.Find(split[0].Trim())'                              HttpUtility.HtmlDecode(split[2])'                              isFuzzyTime ? FromFuzzyString(split[1].Trim()) : FromExactString(split[1].Trim()));                      })                          .Each(notes.Add);                  }                    noteCache.Add(characterName'                      new Conversation                      {                          Messages = notes'                          Subject = title'                          SourceId = sourceId                      });                    try                  {                      var model = container.Resolve<PmChannelModel>(characterName);                      Application.Current.Dispatcher.Invoke(() =>                      {                          model.Notes.Clear();                          model.Notes.AddRange(notes);                          model.NoteSubject = title;                      });                  }                  catch                  {                  }              }
Magic Number,slimCat.Services,NoteService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NoteService.cs,GetNotesAsyncHandler,The following statement contains a magic number: {                  if (result != null && result.Count > 0)                  {                      Log($"parsing note history for {characterName}' {result.Count} items");                      result.Select(x =>                      {                          Log(x.InnerText);                          var isFuzzyTime = true;                          var split = x.InnerText.Split(new[] {"sent'"' "ago:"}' 3'                              StringSplitOptions.RemoveEmptyEntries);                          if (split.Length < 3)                          {                              split = amPmRegex.Split(x.InnerText' 3).ToArray();                              split[1] = split[1] + split[2];                              split[2] = split[3];                              split[3] = null;                                isFuzzyTime = false;                          }                            return new MessageModel(                              characters.Find(split[0].Trim())'                              HttpUtility.HtmlDecode(split[2])'                              isFuzzyTime ? FromFuzzyString(split[1].Trim()) : FromExactString(split[1].Trim()));                      })                          .Each(notes.Add);                  }                    noteCache.Add(characterName'                      new Conversation                      {                          Messages = notes'                          Subject = title'                          SourceId = sourceId                      });                    try                  {                      var model = container.Resolve<PmChannelModel>(characterName);                      Application.Current.Dispatcher.Invoke(() =>                      {                          model.Notes.Clear();                          model.Notes.AddRange(notes);                          model.NoteSubject = title;                      });                  }                  catch                  {                  }              }
Magic Number,slimCat.Services,NoteService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NoteService.cs,GetNotesAsyncHandler,The following statement contains a magic number: {                  if (result != null && result.Count > 0)                  {                      Log($"parsing note history for {characterName}' {result.Count} items");                      result.Select(x =>                      {                          Log(x.InnerText);                          var isFuzzyTime = true;                          var split = x.InnerText.Split(new[] {"sent'"' "ago:"}' 3'                              StringSplitOptions.RemoveEmptyEntries);                          if (split.Length < 3)                          {                              split = amPmRegex.Split(x.InnerText' 3).ToArray();                              split[1] = split[1] + split[2];                              split[2] = split[3];                              split[3] = null;                                isFuzzyTime = false;                          }                            return new MessageModel(                              characters.Find(split[0].Trim())'                              HttpUtility.HtmlDecode(split[2])'                              isFuzzyTime ? FromFuzzyString(split[1].Trim()) : FromExactString(split[1].Trim()));                      })                          .Each(notes.Add);                  }                    noteCache.Add(characterName'                      new Conversation                      {                          Messages = notes'                          Subject = title'                          SourceId = sourceId                      });                    try                  {                      var model = container.Resolve<PmChannelModel>(characterName);                      Application.Current.Dispatcher.Invoke(() =>                      {                          model.Notes.Clear();                          model.Notes.AddRange(notes);                          model.NoteSubject = title;                      });                  }                  catch                  {                  }              }
Magic Number,slimCat.Services,NoteService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NoteService.cs,GetNotesAsyncHandler,The following statement contains a magic number: {                  if (result != null && result.Count > 0)                  {                      Log($"parsing note history for {characterName}' {result.Count} items");                      result.Select(x =>                      {                          Log(x.InnerText);                          var isFuzzyTime = true;                          var split = x.InnerText.Split(new[] {"sent'"' "ago:"}' 3'                              StringSplitOptions.RemoveEmptyEntries);                          if (split.Length < 3)                          {                              split = amPmRegex.Split(x.InnerText' 3).ToArray();                              split[1] = split[1] + split[2];                              split[2] = split[3];                              split[3] = null;                                isFuzzyTime = false;                          }                            return new MessageModel(                              characters.Find(split[0].Trim())'                              HttpUtility.HtmlDecode(split[2])'                              isFuzzyTime ? FromFuzzyString(split[1].Trim()) : FromExactString(split[1].Trim()));                      })                          .Each(notes.Add);                  }                    noteCache.Add(characterName'                      new Conversation                      {                          Messages = notes'                          Subject = title'                          SourceId = sourceId                      });                    try                  {                      var model = container.Resolve<PmChannelModel>(characterName);                      Application.Current.Dispatcher.Invoke(() =>                      {                          model.Notes.Clear();                          model.Notes.AddRange(notes);                          model.NoteSubject = title;                      });                  }                  catch                  {                  }              }
Magic Number,slimCat.Services,NoteService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NoteService.cs,FromFuzzyString,The following statement contains a magic number: foreach (var splitDate in split.Select(date =>                  Regex.Split(date' @"(\d+)"' RegexOptions.Compiled)                      .Where(x => !string.IsNullOrEmpty(x))                      .ToList()))              {                  int numberPart;                  int.TryParse(splitDate[0]' out numberPart);                    var datePart = splitDate[1];                    switch (datePart)                  {                      case "y":                          toReturn = toReturn.Subtract(TimeSpan.FromDays(365*numberPart));                          break;                      case "mo":                          toReturn = toReturn.Subtract(TimeSpan.FromDays(27*numberPart));                          break;                      case "d":                          toReturn = toReturn.Subtract(TimeSpan.FromDays(numberPart));                          break;                      case "h":                          toReturn = toReturn.Subtract(TimeSpan.FromHours(numberPart));                          break;                      case "m":                          toReturn = toReturn.Subtract(TimeSpan.FromMinutes(numberPart));                          break;                  }              }
Magic Number,slimCat.Services,NoteService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NoteService.cs,FromFuzzyString,The following statement contains a magic number: foreach (var splitDate in split.Select(date =>                  Regex.Split(date' @"(\d+)"' RegexOptions.Compiled)                      .Where(x => !string.IsNullOrEmpty(x))                      .ToList()))              {                  int numberPart;                  int.TryParse(splitDate[0]' out numberPart);                    var datePart = splitDate[1];                    switch (datePart)                  {                      case "y":                          toReturn = toReturn.Subtract(TimeSpan.FromDays(365*numberPart));                          break;                      case "mo":                          toReturn = toReturn.Subtract(TimeSpan.FromDays(27*numberPart));                          break;                      case "d":                          toReturn = toReturn.Subtract(TimeSpan.FromDays(numberPart));                          break;                      case "h":                          toReturn = toReturn.Subtract(TimeSpan.FromHours(numberPart));                          break;                      case "m":                          toReturn = toReturn.Subtract(TimeSpan.FromMinutes(numberPart));                          break;                  }              }
Magic Number,slimCat.Services,SettingsService,C:\repos\WreckedAvent_slimCat\slimCat\Services\SettingsService.cs,RetrieveProfile,The following statement contains a magic number: return toReturn.LastRetrieved.AddDays(7) < DateTime.Now ? null : toReturn;
Magic Number,slimCat.Services,SettingsService,C:\repos\WreckedAvent_slimCat\slimCat\Services\SettingsService.cs,SerializeObjectToXml,The following statement contains a magic number: try              {                  using (var fs = File.OpenWrite(fileName))                      root.Save(fs);              }              catch              {                  Thread.Sleep(250);                  using (var fs = File.OpenWrite(fileName))                      root.Save(fs);              }
Magic Number,slimCat.Services,TicketService,C:\repos\WreckedAvent_slimCat\slimCat\Services\TicketService.cs,GetNewTicket,The following statement contains a magic number: Log("Successfully got a new ticket: " + result.Ticket.Substring(result.Ticket.Length - 6));
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,SendMessage,The following statement contains a magic number: if (type.Length != 3)                  throw new ArgumentOutOfRangeException(nameof(type)' "Command type must be 3 characters long");
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,SendMessage,The following statement contains a magic number: if (commandType.Length > 3 || commandType.Length < 3)                  throw new ArgumentOutOfRangeException(nameof(commandType)' "Command type must be 3 characters long");
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,SendMessage,The following statement contains a magic number: if (commandType.Length > 3 || commandType.Length < 3)                  throw new ArgumentOutOfRangeException(nameof(commandType)' "Command type must be 3 characters long");
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,ConnectionMessageReceived,The following statement contains a magic number: if (e.Message.Length <= 3)              {                  events.GetEvent<ChatCommandEvent>().Publish(null);                  return;              }
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,ConnectionMessageReceived,The following statement contains a magic number: var commandType = e.Message.Substring(0' 3);
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,ConnectionMessageReceived,The following statement contains a magic number: message = message.Remove(0' 4);
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,AttemptReconnect,The following statement contains a magic number: events.GetEvent<ReconnectingEvent>().Publish((int) staggerTimer.Interval/1000);
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,DoReconnect,The following statement contains a magic number: if (retryAttemptCount >= 21)              {                  Exceptions.ShowErrorBox(                      "slimCat will now exit. \nReason: Reconnect Attempts exhausted. \n\n"                      + "Please wait a few minutes then restart the client."'                      "Reconnect attempts exhausted!");                    Environment.Exit(-2);              }
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,DoReconnect,The following statement contains a magic number: if (retryAttemptCount >= 21)              {                  Exceptions.ShowErrorBox(                      "slimCat will now exit. \nReason: Reconnect Attempts exhausted. \n\n"                      + "Please wait a few minutes then restart the client."'                      "Reconnect attempts exhausted!");                    Environment.Exit(-2);              }
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: const int oneSecond = 1000;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: if (retryAttemptCount == 0) return 5*oneSecond;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: if (retryAttemptCount <= 5) return (random.Next(10) + 5)*oneSecond;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: if (retryAttemptCount <= 5) return (random.Next(10) + 5)*oneSecond;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: if (retryAttemptCount <= 5) return (random.Next(10) + 5)*oneSecond;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: if (retryAttemptCount <= 10) return (random.Next(10) + 25)*oneSecond;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: if (retryAttemptCount <= 10) return (random.Next(10) + 25)*oneSecond;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: if (retryAttemptCount <= 10) return (random.Next(10) + 25)*oneSecond;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: if (retryAttemptCount <= 15) return (random.Next(10) + 60)*oneSecond;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: if (retryAttemptCount <= 15) return (random.Next(10) + 60)*oneSecond;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: if (retryAttemptCount <= 15) return (random.Next(10) + 60)*oneSecond;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: if (retryAttemptCount <= 20) return (random.Next(60) + 300)*oneSecond;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: if (retryAttemptCount <= 20) return (random.Next(60) + 300)*oneSecond;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: if (retryAttemptCount <= 20) return (random.Next(60) + 300)*oneSecond;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: return 60*60*oneSecond;
Magic Number,slimCat.Services,FchatService,C:\repos\WreckedAvent_slimCat\slimCat\Services\FchatService.cs,GetNextConnectDelay,The following statement contains a magic number: return 60*60*oneSecond;
Magic Number,slimCat.Services,LoggingService,C:\repos\WreckedAvent_slimCat\slimCat\Services\LoggingService.cs,GetLogs,The following statement contains a magic number: try              {                  var lines = File.ReadLines(file.FullName);                  var enumerable = lines as IList<string> ?? lines.ToList();                    var toSkip = Math.Max(enumerable.Count() - 25' 0);                    toReturn.RawLogs = enumerable.Skip(toSkip).ToList();                  toReturn.DateOfLog = file.LastWriteTime;              }              catch              {                  // file operations run the risk of exceptions                  return toReturn;              }
Magic Number,slimCat.Services,LoggingService,C:\repos\WreckedAvent_slimCat\slimCat\Services\LoggingService.cs,LogSpecial,The following statement contains a magic number: using (var writer = AccessLog(title' id))              {                  switch (kind)                  {                      case SpecialLogMessageKind.LineBreak:                          writer.WriteLine();                          break;                      case SpecialLogMessageKind.Header:                      {                          var head = string.Empty;                          while (head.Length < specialTitle.Length + 4)                          {                              head += "=";                          }                            writer.WriteLine();                          writer.WriteLine(head);                          writer.WriteLine("= " + specialTitle + " =");                          writer.WriteLine(head);                          writer.WriteLine();                            break;                      }                        case SpecialLogMessageKind.Section:                      {                          var head = string.Empty;                          while (head.Length < specialTitle.Length + 4)                          {                              head += "-";                          }                            writer.WriteLine();                          writer.WriteLine(head);                          writer.WriteLine("- " + specialTitle + " -");                          writer.WriteLine(head);                          writer.WriteLine();                            break;                      }                  }              }
Magic Number,slimCat.Services,LoggingService,C:\repos\WreckedAvent_slimCat\slimCat\Services\LoggingService.cs,LogSpecial,The following statement contains a magic number: using (var writer = AccessLog(title' id))              {                  switch (kind)                  {                      case SpecialLogMessageKind.LineBreak:                          writer.WriteLine();                          break;                      case SpecialLogMessageKind.Header:                      {                          var head = string.Empty;                          while (head.Length < specialTitle.Length + 4)                          {                              head += "=";                          }                            writer.WriteLine();                          writer.WriteLine(head);                          writer.WriteLine("= " + specialTitle + " =");                          writer.WriteLine(head);                          writer.WriteLine();                            break;                      }                        case SpecialLogMessageKind.Section:                      {                          var head = string.Empty;                          while (head.Length < specialTitle.Length + 4)                          {                              head += "-";                          }                            writer.WriteLine();                          writer.WriteLine(head);                          writer.WriteLine("- " + specialTitle + " -");                          writer.WriteLine(head);                          writer.WriteLine();                            break;                      }                  }              }
Magic Number,slimCat.Services,NotificationService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NotificationService.cs,NotificationService,The following statement contains a magic number: ToastManager = new ToastService              {                  AddNotification = notification =>                  {                      Dispatcher.Invoke(() => cm.Notifications.Backlog(notification' 100));                      loggingService.LogMessage("!Notifications"' notification);                  }'                  ShowToast = toast.ShowNotifications'                  FlashWindow = () => Dispatcher.Invoke(FlashWindow)'                  PlaySound = () => Dispatcher.Invoke(DingTheCrapOutOfTheUser)'                  Toast = toast              };
Magic Number,slimCat.Libraries,NonTopmostPopup,C:\repos\WreckedAvent_slimCat\slimCat\lib\NonTopmostPopup.cs,OnOpened,The following statement contains a magic number: if (GetWindowRect(hwnd' out rect))              {                  SetWindowPos(hwnd' -2' rect.Left' rect.Top' (int) Width' (int) Height' 0);              }
Magic Number,slimCat.Theme,EmbeddedTheme,C:\repos\WreckedAvent_slimCat\slimCat\Theme\EmbeddedTheme.xaml.cs,OnMouseRightButtonUpForName,The following statement contains a magic number: sender.TryOpenRightClickMenuCommand<Grid>(2);
Magic Number,slimCat.Theme,EmbeddedTheme,C:\repos\WreckedAvent_slimCat\slimCat\Theme\EmbeddedTheme.xaml.cs,OnMemeExpand,The following statement contains a magic number: if (image.Height == 50)              {                  image.Height = 100;                  image.Width = 100;              }              else              {                  image.Height = 50;                  image.Width = 50;              }
Magic Number,slimCat.Theme,EmbeddedTheme,C:\repos\WreckedAvent_slimCat\slimCat\Theme\EmbeddedTheme.xaml.cs,OnMemeExpand,The following statement contains a magic number: if (image.Height == 50)              {                  image.Height = 100;                  image.Width = 100;              }              else              {                  image.Height = 50;                  image.Width = 50;              }
Magic Number,slimCat.Theme,EmbeddedTheme,C:\repos\WreckedAvent_slimCat\slimCat\Theme\EmbeddedTheme.xaml.cs,OnMemeExpand,The following statement contains a magic number: if (image.Height == 50)              {                  image.Height = 100;                  image.Width = 100;              }              else              {                  image.Height = 50;                  image.Width = 50;              }
Magic Number,slimCat.Theme,EmbeddedTheme,C:\repos\WreckedAvent_slimCat\slimCat\Theme\EmbeddedTheme.xaml.cs,OnMemeExpand,The following statement contains a magic number: if (image.Height == 50)              {                  image.Height = 100;                  image.Width = 100;              }              else              {                  image.Height = 50;                  image.Width = 50;              }
Magic Number,slimCat.Theme,EmbeddedTheme,C:\repos\WreckedAvent_slimCat\slimCat\Theme\EmbeddedTheme.xaml.cs,OnMemeExpand,The following statement contains a magic number: if (image.Height == 50)              {                  image.Height = 100;                  image.Width = 100;              }              else              {                  image.Height = 50;                  image.Width = 50;              }
Magic Number,slimCat.Theme,EmbeddedTheme,C:\repos\WreckedAvent_slimCat\slimCat\Theme\EmbeddedTheme.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 138 "..\..\..\Theme\EmbeddedTheme.xaml"              ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUpForName);                            #line default              #line hidden              break;              case 2:                            #line 153 "..\..\..\Theme\EmbeddedTheme.xaml"              ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUpForIcon);                            #line default              #line hidden              break;              case 3:                            #line 171 "..\..\..\Theme\EmbeddedTheme.xaml"              ((System.Windows.Controls.Image)(target)).PreviewMouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMemeExpand);                            #line default              #line hidden              break;              }
Magic Number,slimCat.Theme,EmbeddedTheme,C:\repos\WreckedAvent_slimCat\slimCat\Theme\EmbeddedTheme.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 138 "..\..\..\Theme\EmbeddedTheme.xaml"              ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUpForName);                            #line default              #line hidden              break;              case 2:                            #line 153 "..\..\..\Theme\EmbeddedTheme.xaml"              ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUpForIcon);                            #line default              #line hidden              break;              case 3:                            #line 171 "..\..\..\Theme\EmbeddedTheme.xaml"              ((System.Windows.Controls.Image)(target)).PreviewMouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMemeExpand);                            #line default              #line hidden              break;              }
Magic Number,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeInlineContainer,The following statement contains a magic number: return                  new InlineUIContainer                  {                      Child = new ContentControl                      {                          ContentTemplate = Locator.Find<DataTemplate>(template)'                          Content = model'                          Margin = new Thickness(2' 0' 2' 0)                      }'                      BaselineAlignment = BaselineAlignment.TextBottom                  };
Magic Number,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeInlineContainer,The following statement contains a magic number: return                  new InlineUIContainer                  {                      Child = new ContentControl                      {                          ContentTemplate = Locator.Find<DataTemplate>(template)'                          Content = model'                          Margin = new Thickness(2' 0' 2' 0)                      }'                      BaselineAlignment = BaselineAlignment.TextBottom                  };
Magic Number,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeSmall,The following statement contains a magic number: toReturn.FontSize = ApplicationSettings.FontSize * 0.75;
Magic Number,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeBig,The following statement contains a magic number: toReturn.FontSize = ApplicationSettings.FontSize * 1.5;
Magic Number,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeCollapse,The following statement contains a magic number: var text = new TextBlock              {                  Foreground = Locator.Find<SolidColorBrush>("ForegroundBrush")'                  TextWrapping = TextWrapping.Wrap'                  Margin = new Thickness(25' 0' 0' 0)              };
Magic Number,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeQuote,The following statement contains a magic number: var text = new TextBlock              {                  Foreground = Locator.Find<SolidColorBrush>("ForegroundBrush")'                  Opacity = 0.8'                  Margin = new Thickness(50' 5' 0' 5)'                  TextWrapping = TextWrapping.Wrap              };
Magic Number,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeQuote,The following statement contains a magic number: var text = new TextBlock              {                  Foreground = Locator.Find<SolidColorBrush>("ForegroundBrush")'                  Opacity = 0.8'                  Margin = new Thickness(50' 5' 0' 5)'                  TextWrapping = TextWrapping.Wrap              };
Magic Number,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeQuote,The following statement contains a magic number: var text = new TextBlock              {                  Foreground = Locator.Find<SolidColorBrush>("ForegroundBrush")'                  Opacity = 0.8'                  Margin = new Thickness(50' 5' 0' 5)'                  TextWrapping = TextWrapping.Wrap              };
Magic Number,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeQuote,The following statement contains a magic number: var text = new TextBlock              {                  Foreground = Locator.Find<SolidColorBrush>("ForegroundBrush")'                  Opacity = 0.8'                  Margin = new Thickness(50' 5' 0' 5)'                  TextWrapping = TextWrapping.Wrap              };
Magic Number,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeHorizontalRule,The following statement contains a magic number: return new InlineUIContainer(new Line              {                  Stretch = Stretch.Fill'                  X2 = 1'                  Margin = new Thickness(0' 5' 0' 5)'                  Stroke = Locator.Find<SolidColorBrush>("HighlightBrush")              });
Magic Number,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeHorizontalRule,The following statement contains a magic number: return new InlineUIContainer(new Line              {                  Stretch = Stretch.Fill'                  X2 = 1'                  Margin = new Thickness(0' 5' 0' 5)'                  Stroke = Locator.Find<SolidColorBrush>("HighlightBrush")              });
Magic Number,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeHeading,The following statement contains a magic number: toReturn.FontSize *= 2;
Magic Number,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeIndentText,The following statement contains a magic number: return MakeBlockWithAlignment(arg' TextAlignment.Left'                  new Thickness(ApplicationSettings.AllowIndent ? 15 : 0' 0' 0' 0));
Magic Number,slimCat.Utilities,BbCodeBaseConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,MakeCenterText,The following statement contains a magic number: var padding = ApplicationSettings.AllowIndent ? 15 : 0;
Magic Number,slimCat.Utilities,BbFinder,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodeBaseConverter.cs,ReturnAsTextBetween,The following statement contains a magic number: if (end - start <= 1)                      end = start + 2;
Magic Number,slimCat.Utilities,BbCodePostConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodePostConverter.cs,Convert,The following statement contains a magic number: if (values.Length == 3 && values[0] is string && values[1] is ICharacter && values[2] is MessageType)              {                  inlines.Clear(); // simple insurance that there's no junk                    var text = (string) values[0]; // this is the beef of the message                  text = HttpUtility.HtmlDecode(text); // translate the HTML characters                  var user = (ICharacter) values[1]; // this is our poster's name                  var type = (MessageType) values[2]; // what kind of type our message is                    if (type == MessageType.Roll)                      return Parse(text);                    // this creates the name link                  var nameLink = MakeUsernameLink(user);                  inlines.Add(nameLink); // name first                    if (text[0] == '/')                  {                      var check = text.Substring(0' text.IndexOf(' ') + 1);                      Func<string' string> nonCommandCommand;                        if (CommandDefinitions.NonCommandCommands.TryGetValue(check' out nonCommandCommand))                      {                          var command = text[1];                          text = nonCommandCommand(text);                            if (command == 'm') // is an emote                          {                              inlines.Insert(0' new Run("*")); // push the name button to the second slot                              inlines[1].FontStyle = FontStyles.Italic;                              inlines.Add(new Italic(Parse(text)));                              inlines.Add(new Run("*"));                          }                          else if (command == 'w') // is a warn                          {                              var toAdd = Parse(text);                              toAdd.Foreground = Locator.Find<Brush>("ModeratorBrush");                              toAdd.FontWeight = FontWeights.Medium;                              inlines.Add(toAdd);                          }                          else if (command == 'p') // is a post                              inlines.Add(Parse(text));                            return inlines;                      }                        inlines.Add(new Run(" : "));                      inlines.Add(Parse(text));                      return inlines;                  }                    inlines.Add(new Run(" : "));                  inlines.Add(new Run(text));              }              else if (values.Length == 1 && values[0] is NotificationModel)              {                  inlines.Clear();                    if (values[0] is CharacterUpdateModel)                  {                      var notification = values[0] as CharacterUpdateModel;                      var user = notification.TargetCharacter;                      var text = HttpUtility.HtmlDecode(notification.Arguments.ToString());                        var nameLink = MakeUsernameLink(user);                        inlines.Add(nameLink);                      inlines.Add(new Run(" "));                      inlines.Add(Parse(text));                  }              }              else                  inlines.Clear();
Magic Number,slimCat.Utilities,BbCodePostConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodePostConverter.cs,Convert,The following statement contains a magic number: if (values.Length == 3 && values[0] is string && values[1] is ICharacter && values[2] is MessageType)              {                  inlines.Clear(); // simple insurance that there's no junk                    var text = (string) values[0]; // this is the beef of the message                  text = HttpUtility.HtmlDecode(text); // translate the HTML characters                  var user = (ICharacter) values[1]; // this is our poster's name                  var type = (MessageType) values[2]; // what kind of type our message is                    if (type == MessageType.Roll)                      return Parse(text);                    // this creates the name link                  var nameLink = MakeUsernameLink(user);                  inlines.Add(nameLink); // name first                    if (text[0] == '/')                  {                      var check = text.Substring(0' text.IndexOf(' ') + 1);                      Func<string' string> nonCommandCommand;                        if (CommandDefinitions.NonCommandCommands.TryGetValue(check' out nonCommandCommand))                      {                          var command = text[1];                          text = nonCommandCommand(text);                            if (command == 'm') // is an emote                          {                              inlines.Insert(0' new Run("*")); // push the name button to the second slot                              inlines[1].FontStyle = FontStyles.Italic;                              inlines.Add(new Italic(Parse(text)));                              inlines.Add(new Run("*"));                          }                          else if (command == 'w') // is a warn                          {                              var toAdd = Parse(text);                              toAdd.Foreground = Locator.Find<Brush>("ModeratorBrush");                              toAdd.FontWeight = FontWeights.Medium;                              inlines.Add(toAdd);                          }                          else if (command == 'p') // is a post                              inlines.Add(Parse(text));                            return inlines;                      }                        inlines.Add(new Run(" : "));                      inlines.Add(Parse(text));                      return inlines;                  }                    inlines.Add(new Run(" : "));                  inlines.Add(new Run(text));              }              else if (values.Length == 1 && values[0] is NotificationModel)              {                  inlines.Clear();                    if (values[0] is CharacterUpdateModel)                  {                      var notification = values[0] as CharacterUpdateModel;                      var user = notification.TargetCharacter;                      var text = HttpUtility.HtmlDecode(notification.Arguments.ToString());                        var nameLink = MakeUsernameLink(user);                        inlines.Add(nameLink);                      inlines.Add(new Run(" "));                      inlines.Add(Parse(text));                  }              }              else                  inlines.Clear();
Magic Number,slimCat.Utilities,BbCodePostConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbCodePostConverter.cs,Convert,The following statement contains a magic number: if (values.Length == 3 && values[0] is string && values[1] is ICharacter && values[2] is MessageType)              {                  inlines.Clear(); // simple insurance that there's no junk                    var text = (string) values[0]; // this is the beef of the message                  text = HttpUtility.HtmlDecode(text); // translate the HTML characters                  var user = (ICharacter) values[1]; // this is our poster's name                  var type = (MessageType) values[2]; // what kind of type our message is                    if (type == MessageType.Roll)                      return Parse(text);                    // this creates the name link                  var nameLink = MakeUsernameLink(user);                  inlines.Add(nameLink); // name first                    if (text[0] == '/')                  {                      var check = text.Substring(0' text.IndexOf(' ') + 1);                      Func<string' string> nonCommandCommand;                        if (CommandDefinitions.NonCommandCommands.TryGetValue(check' out nonCommandCommand))                      {                          var command = text[1];                          text = nonCommandCommand(text);                            if (command == 'm') // is an emote                          {                              inlines.Insert(0' new Run("*")); // push the name button to the second slot                              inlines[1].FontStyle = FontStyles.Italic;                              inlines.Add(new Italic(Parse(text)));                              inlines.Add(new Run("*"));                          }                          else if (command == 'w') // is a warn                          {                              var toAdd = Parse(text);                              toAdd.Foreground = Locator.Find<Brush>("ModeratorBrush");                              toAdd.FontWeight = FontWeights.Medium;                              inlines.Add(toAdd);                          }                          else if (command == 'p') // is a post                              inlines.Add(Parse(text));                            return inlines;                      }                        inlines.Add(new Run(" : "));                      inlines.Add(Parse(text));                      return inlines;                  }                    inlines.Add(new Run(" : "));                  inlines.Add(new Run(text));              }              else if (values.Length == 1 && values[0] is NotificationModel)              {                  inlines.Clear();                    if (values[0] is CharacterUpdateModel)                  {                      var notification = values[0] as CharacterUpdateModel;                      var user = notification.TargetCharacter;                      var text = HttpUtility.HtmlDecode(notification.Arguments.ToString());                        var nameLink = MakeUsernameLink(user);                        inlines.Add(nameLink);                      inlines.Add(new Run(" "));                      inlines.Add(Parse(text));                  }              }              else                  inlines.Clear();
Magic Number,slimCat.Utilities,DateTimeExtensions,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Extensions\DateTimeExtensions.cs,DateTimeInFutureToRough,The following statement contains a magic number: if (temp.Length < 2)                  temp.Append("0s ");
Magic Number,slimCat.Utilities,DateTimeExtensions,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Extensions\DateTimeExtensions.cs,DateTimeToRough,The following statement contains a magic number: var tolerance = returnSeconds ? 1 : 60;
Magic Number,slimCat.Utilities,BbFlowConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\BbFlowConverter.cs,Convert,The following statement contains a magic number: if (message != null)              {                  // we don't want to collapse only one small sentence                  const int wiggleRoom = 75;                    if (message.Type == MessageType.Ad &&                      text.Length > (ApplicationSettings.ShowMoreInAdsLength + wiggleRoom))                  {                      // try to find a nice sentence to break after                      var start = ApplicationSettings.ShowMoreInAdsLength;                      do                      {                          if (char.IsPunctuation(text[start]) && char.IsWhiteSpace(text[start + 1]))                              break;                          start--;                      } while (start != 0);                        // if we didn't find one' just aggressively break at our point                      if (start == 0)                      {                          start = ApplicationSettings.ShowMoreInAdsLength;                          do                          {                              if (char.IsWhiteSpace(text[start]))                                  break;                              start--;                          } while (start != 0);                      }                        if (start != 0)                      {                          var sb = new StringBuilder(text);                          sb.Insert(start + 1' "[collapse=Read More]");                          sb.Append("[/collapse]");                          text = sb.ToString();                      }                  }              }
Magic Number,slimCat.Utilities,CacheCount,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\CacheCount.cs,CacheCount,The following statement contains a magic number: updateTick = new Timer(updateResolution*1000);
Magic Number,slimCat.Utilities,CacheCount,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\CacheCount.cs,GetDisplayString,The following statement contains a magic number: if (Math.Abs(Average() - 0) > 0.01)              {                  toReturn.Append(" μ=");                  toReturn.Append($"{Average():0}");              }
Magic Number,slimCat.Utilities,CacheCount,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\CacheCount.cs,GetDisplayString,The following statement contains a magic number: if (Math.Abs(StdDev() - 0) > 0.01)              {                  toReturn.Append(" σ=");                  toReturn.Append($"{StdDev():0.##}");              }
Magic Number,slimCat.Utilities,CacheCount,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\CacheCount.cs,StabilityIndex,The following statement contains a magic number: var threshold = Average()/10;
Magic Number,slimCat.Utilities,CacheCount,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\CacheCount.cs,StabilityIndex,The following statement contains a magic number: return Math.Max(Math.Min(Math.Log10(threshold/StdDev())*100' 100)' 0);
Magic Number,slimCat.Utilities,CacheCount,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\CacheCount.cs,StabilityIndex,The following statement contains a magic number: return Math.Max(Math.Min(Math.Log10(threshold/StdDev())*100' 100)' 0);
Magic Number,slimCat.Utilities,CacheCount,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\CacheCount.cs,StdDev,The following statement contains a magic number: var squares = oldCounts.Select(x => Math.Pow(x - Average()' 2)).ToList();
Magic Number,slimCat.Utilities,CacheCount,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\CacheCount.cs,Update,The following statement contains a magic number: if (initialized)              {                  oldCount = newCount;                    // 60/updateres*30 returns how many update resolutions fit in 30 minutes                  if (oldCounts.Count > ((60/updateResolution)*30))                      oldCounts.RemoveAt(0);                    oldCounts.Add(oldCount);                    newCount = getNewCount();              }              else              {                  oldCount = newCount = getNewCount();                    if (!(oldCount == 0 || newCount == 0))                      initialized = true;              }
Magic Number,slimCat.Utilities,CacheCount,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\CacheCount.cs,Update,The following statement contains a magic number: if (initialized)              {                  oldCount = newCount;                    // 60/updateres*30 returns how many update resolutions fit in 30 minutes                  if (oldCounts.Count > ((60/updateResolution)*30))                      oldCounts.RemoveAt(0);                    oldCounts.Add(oldCount);                    newCount = getNewCount();              }              else              {                  oldCount = newCount = getNewCount();                    if (!(oldCount == 0 || newCount == 0))                      initialized = true;              }
Magic Number,slimCat.Utilities,CommaConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\CommaConverter.cs,Convert,The following statement contains a magic number: for (var i = 0; i < values.Count(); i++)              {                  parsed = values[i] as string;                    if (string.IsNullOrEmpty(parsed))                      continue;                    stringCount++;                  if (stringCount >= 2)                      toReturn.Append("' ");                    toReturn.Append(parsed);              }
Magic Number,slimCat.Utilities,GenderColorConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\GenderColorConverter.cs,Convert,The following statement contains a magic number: var stops = new List<GradientStop>              {                  new GradientStop(baseColor' 0.0)'                  new GradientStop(baseColor' 0.5)'                  new GradientStop(brightColor' 0.5)'                  new GradientStop(brightColor' 1.0)              };
Magic Number,slimCat.Utilities,GenderColorConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\GenderColorConverter.cs,Convert,The following statement contains a magic number: var stops = new List<GradientStop>              {                  new GradientStop(baseColor' 0.0)'                  new GradientStop(baseColor' 0.5)'                  new GradientStop(brightColor' 0.5)'                  new GradientStop(brightColor' 1.0)              };
Magic Number,slimCat.Utilities,KeepToCurrentScrollViewer,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\KeepToCurrentScrollViewer.cs,OnScrollChanged,The following statement contains a magic number: if (Math.Abs(difference - 0) > 0.01)              {                  if (hookedToBottom)                      scroller.ScrollToBottom();                  else if (distanceToBottom != 0.0d)                      scroller.ScrollToVerticalOffset(scroller.ExtentHeight - distanceToBottom);              }              else if (Math.Abs(e.VerticalOffset - scroller.ScrollableHeight) < 20)                  hookedToBottom = true;              else                  hookedToBottom = false;
Magic Number,slimCat.Utilities,KeepToCurrentScrollViewer,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\KeepToCurrentScrollViewer.cs,OnScrollChanged,The following statement contains a magic number: if (Math.Abs(difference - 0) > 0.01)              {                  if (hookedToBottom)                      scroller.ScrollToBottom();                  else if (distanceToBottom != 0.0d)                      scroller.ScrollToVerticalOffset(scroller.ExtentHeight - distanceToBottom);              }              else if (Math.Abs(e.VerticalOffset - scroller.ScrollableHeight) < 20)                  hookedToBottom = true;              else                  hookedToBottom = false;
Magic Number,slimCat.Utilities,Logging,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Logging.cs,LogObject,The following statement contains a magic number: lock (Locker)              {                  if (obj == null) return;                    var dict = obj as IDictionary<string' object>;                  if (dict != null)                  {                      if (dict.Keys.Count == 0)                      {                          Trace.WriteLine(useComma ? "{}'" : "{}");                          return;                      }                        if (dict.Keys.Count(x => x != Constants.Arguments.Command) == 1 && dict.Values.First() is string)                      {                          var temp = "{" + $" {dict.Keys.First()}: \"{dict.Values.First()}\" " + "}";                          Trace.WriteLine(temp + (useComma ? "'" : ""));                          return;                      }                        Trace.WriteLine("{");                      Trace.Indent();                        foreach (var pair in dict.Where(pair => pair.Key != Constants.Arguments.Command).Take(10))                      {                          Trace.Write($"{pair.Key}: ");                          LogObject(pair.Value' true);                      }                        if (dict.Keys.Count > 10)                          Trace.WriteLine("... ");                        Trace.Unindent();                        Trace.WriteLine(useComma ? "}'" : "}");                      Trace.Flush();                      return;                  }                    var arr = obj as JsonArray;                  if (arr != null)                  {                      if (arr.Count == 0)                      {                          Trace.WriteLine(useComma ? "[]'" : "[]");                          return;                      }                        if (arr.Count == 1)                      {                          Trace.WriteLine($"[ {arr[0]} ]" + (useComma ? "'" : ""));                          return;                      }                        Trace.WriteLine("[");                      Trace.Indent();                        foreach (var o in arr.Take(10))                          LogObject(o' true);                        if (arr.Count > 10)                          Trace.WriteLine(" ... ");                        Trace.Unindent();                      Trace.WriteLine(useComma ? "]'" : "]");                      Trace.Flush();                      return;                  }                    var isString = obj is string;                  var toWrite = isString ? "\"" + obj + "\"" : obj;                  Trace.WriteLine(toWrite + (useComma ? "'" : ""));                  Trace.Flush();              }
Magic Number,slimCat.Utilities,Logging,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Logging.cs,LogObject,The following statement contains a magic number: lock (Locker)              {                  if (obj == null) return;                    var dict = obj as IDictionary<string' object>;                  if (dict != null)                  {                      if (dict.Keys.Count == 0)                      {                          Trace.WriteLine(useComma ? "{}'" : "{}");                          return;                      }                        if (dict.Keys.Count(x => x != Constants.Arguments.Command) == 1 && dict.Values.First() is string)                      {                          var temp = "{" + $" {dict.Keys.First()}: \"{dict.Values.First()}\" " + "}";                          Trace.WriteLine(temp + (useComma ? "'" : ""));                          return;                      }                        Trace.WriteLine("{");                      Trace.Indent();                        foreach (var pair in dict.Where(pair => pair.Key != Constants.Arguments.Command).Take(10))                      {                          Trace.Write($"{pair.Key}: ");                          LogObject(pair.Value' true);                      }                        if (dict.Keys.Count > 10)                          Trace.WriteLine("... ");                        Trace.Unindent();                        Trace.WriteLine(useComma ? "}'" : "}");                      Trace.Flush();                      return;                  }                    var arr = obj as JsonArray;                  if (arr != null)                  {                      if (arr.Count == 0)                      {                          Trace.WriteLine(useComma ? "[]'" : "[]");                          return;                      }                        if (arr.Count == 1)                      {                          Trace.WriteLine($"[ {arr[0]} ]" + (useComma ? "'" : ""));                          return;                      }                        Trace.WriteLine("[");                      Trace.Indent();                        foreach (var o in arr.Take(10))                          LogObject(o' true);                        if (arr.Count > 10)                          Trace.WriteLine(" ... ");                        Trace.Unindent();                      Trace.WriteLine(useComma ? "]'" : "]");                      Trace.Flush();                      return;                  }                    var isString = obj is string;                  var toWrite = isString ? "\"" + obj + "\"" : obj;                  Trace.WriteLine(toWrite + (useComma ? "'" : ""));                  Trace.Flush();              }
Magic Number,slimCat.Utilities,Logging,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Logging.cs,LogObject,The following statement contains a magic number: lock (Locker)              {                  if (obj == null) return;                    var dict = obj as IDictionary<string' object>;                  if (dict != null)                  {                      if (dict.Keys.Count == 0)                      {                          Trace.WriteLine(useComma ? "{}'" : "{}");                          return;                      }                        if (dict.Keys.Count(x => x != Constants.Arguments.Command) == 1 && dict.Values.First() is string)                      {                          var temp = "{" + $" {dict.Keys.First()}: \"{dict.Values.First()}\" " + "}";                          Trace.WriteLine(temp + (useComma ? "'" : ""));                          return;                      }                        Trace.WriteLine("{");                      Trace.Indent();                        foreach (var pair in dict.Where(pair => pair.Key != Constants.Arguments.Command).Take(10))                      {                          Trace.Write($"{pair.Key}: ");                          LogObject(pair.Value' true);                      }                        if (dict.Keys.Count > 10)                          Trace.WriteLine("... ");                        Trace.Unindent();                        Trace.WriteLine(useComma ? "}'" : "}");                      Trace.Flush();                      return;                  }                    var arr = obj as JsonArray;                  if (arr != null)                  {                      if (arr.Count == 0)                      {                          Trace.WriteLine(useComma ? "[]'" : "[]");                          return;                      }                        if (arr.Count == 1)                      {                          Trace.WriteLine($"[ {arr[0]} ]" + (useComma ? "'" : ""));                          return;                      }                        Trace.WriteLine("[");                      Trace.Indent();                        foreach (var o in arr.Take(10))                          LogObject(o' true);                        if (arr.Count > 10)                          Trace.WriteLine(" ... ");                        Trace.Unindent();                      Trace.WriteLine(useComma ? "]'" : "]");                      Trace.Flush();                      return;                  }                    var isString = obj is string;                  var toWrite = isString ? "\"" + obj + "\"" : obj;                  Trace.WriteLine(toWrite + (useComma ? "'" : ""));                  Trace.Flush();              }
Magic Number,slimCat.Utilities,Logging,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Logging.cs,LogObject,The following statement contains a magic number: lock (Locker)              {                  if (obj == null) return;                    var dict = obj as IDictionary<string' object>;                  if (dict != null)                  {                      if (dict.Keys.Count == 0)                      {                          Trace.WriteLine(useComma ? "{}'" : "{}");                          return;                      }                        if (dict.Keys.Count(x => x != Constants.Arguments.Command) == 1 && dict.Values.First() is string)                      {                          var temp = "{" + $" {dict.Keys.First()}: \"{dict.Values.First()}\" " + "}";                          Trace.WriteLine(temp + (useComma ? "'" : ""));                          return;                      }                        Trace.WriteLine("{");                      Trace.Indent();                        foreach (var pair in dict.Where(pair => pair.Key != Constants.Arguments.Command).Take(10))                      {                          Trace.Write($"{pair.Key}: ");                          LogObject(pair.Value' true);                      }                        if (dict.Keys.Count > 10)                          Trace.WriteLine("... ");                        Trace.Unindent();                        Trace.WriteLine(useComma ? "}'" : "}");                      Trace.Flush();                      return;                  }                    var arr = obj as JsonArray;                  if (arr != null)                  {                      if (arr.Count == 0)                      {                          Trace.WriteLine(useComma ? "[]'" : "[]");                          return;                      }                        if (arr.Count == 1)                      {                          Trace.WriteLine($"[ {arr[0]} ]" + (useComma ? "'" : ""));                          return;                      }                        Trace.WriteLine("[");                      Trace.Indent();                        foreach (var o in arr.Take(10))                          LogObject(o' true);                        if (arr.Count > 10)                          Trace.WriteLine(" ... ");                        Trace.Unindent();                      Trace.WriteLine(useComma ? "]'" : "]");                      Trace.Flush();                      return;                  }                    var isString = obj is string;                  var toWrite = isString ? "\"" + obj + "\"" : obj;                  Trace.WriteLine(toWrite + (useComma ? "'" : ""));                  Trace.Flush();              }
Magic Number,slimCat.Utilities,StringExtensions,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Extensions\StringExtensions.cs,GetStringContext,The following statement contains a magic number: const int maxDistance = 150;
Magic Number,slimCat.Utilities,StringExtensions,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Extensions\StringExtensions.cs,IsUpdate,The following statement contains a magic number: if (!toReturn && Math.Abs(version - Constants.Version) < 0.001)                  toReturn = !updateIsDev && Constants.ClientVersion.Contains("dev");
Magic Number,slimCat.Utilities,MessageThicknessConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\MessageThicknessConverter.cs,Convert,The following statement contains a magic number: if (message.IsLastViewed) bottom = 2;                else if (message.Type == MessageType.Ad) bottom = 1;                else if (message.IsOfInterest)              {                  right = 8;                  bottom = 2;              }
Magic Number,slimCat.Utilities,MessageThicknessConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\MessageThicknessConverter.cs,Convert,The following statement contains a magic number: if (message.IsLastViewed) bottom = 2;                else if (message.Type == MessageType.Ad) bottom = 1;                else if (message.IsOfInterest)              {                  right = 8;                  bottom = 2;              }
Magic Number,slimCat.Utilities,MessageThicknessConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\MessageThicknessConverter.cs,Convert,The following statement contains a magic number: if (message.IsLastViewed) bottom = 2;                else if (message.Type == MessageType.Ad) bottom = 1;                else if (message.IsOfInterest)              {                  right = 8;                  bottom = 2;              }
Magic Number,slimCat.Utilities,ReduceRowConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\ReduceRowConverter.cs,Convert,The following statement contains a magic number: return Math.Max(((double) values[0]*0.8) - ((double) values[1]) - (System.Convert.ToDouble(parameter))' 0);
Magic Number,slimCat.Utilities,CommandParser,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\CommandParser.cs,CommandParser,The following statement contains a magic number: if (CommandDefinitions.Commands.TryGetValue(type' out model))              {                  if (type == "status")                  {                      arguments = trimmed.Split(new[] {' '}' 2' StringSplitOptions.RemoveEmptyEntries);                      return;                  }                    if (model.CommandType == CommandModel.CommandTypes.TwoArgs                      || model.CommandType == CommandModel.CommandTypes.TwoArgsAndChannel)                  {                      ParseMultipleArguments(trimmed);                      return;                  }              }
Magic Number,slimCat.Utilities,GeneralExtensions,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Extensions\GeneralExtensions.cs,GetScrollDistance,The following statement contains a magic number: if (linesPerTick < 1)                  linesPerTick = 10;
Magic Number,slimCat.Utilities,GeneralExtensions,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Extensions\GeneralExtensions.cs,UnixTimeToDateTime,The following statement contains a magic number: var epoch = new DateTime(1970' 1' 1' 0' 0' 0' 0);
Magic Number,slimCat.ViewModels,SearchTabViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channel Bar\SearchTabViewModel.cs,SaveSearchTerms,The following statement contains a magic number: saveTerms.Defer(TimeSpan.FromSeconds(3));
Magic Number,slimCat.ViewModels,ChannelsTabViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channel Bar\ChannelTabViewModel.cs,Update,The following statement contains a magic number: updateChannelList.Defer(TimeSpan.FromSeconds(0.25));
Magic Number,slimCat.ViewModels,ChannelViewModelBase,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Base Classes\ChannelViewModelBase.cs,ChannelViewModelBase,The following statement contains a magic number: errorRemoveTimer = new Timer(5000);
Magic Number,slimCat.ViewModels,ChannelViewModelBase,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Base Classes\ChannelViewModelBase.cs,ChannelViewModelBase,The following statement contains a magic number: saveMessageTimer = new Timer(10000) {AutoReset = false};
Magic Number,slimCat.ViewModels,GeneralChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channels\GeneralChannelViewModel.cs,SendAutoAd,The following statement contains a magic number: adFloodTimer.Interval = Model.Settings.AutopostTime*60*1000 + 2000;
Magic Number,slimCat.ViewModels,GeneralChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channels\GeneralChannelViewModel.cs,SendAutoAd,The following statement contains a magic number: adFloodTimer.Interval = Model.Settings.AutopostTime*60*1000 + 2000;
Magic Number,slimCat.ViewModels,GeneralChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channels\GeneralChannelViewModel.cs,SendAutoAd,The following statement contains a magic number: adFloodTimer.Interval = Model.Settings.AutopostTime*60*1000 + 2000;
Magic Number,slimCat.ViewModels,GeneralChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channels\GeneralChannelViewModel.cs,SendMessage,The following statement contains a magic number: if ((IsDisplayingChat && Message.Length > 4096)                  || (IsDisplayingAds && Message.Length > 50000))              {                  UpdateError("You expect me to post all of that?! How about you post less' huh?");                  return;              }
Magic Number,slimCat.ViewModels,GeneralChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channels\GeneralChannelViewModel.cs,SendMessage,The following statement contains a magic number: if ((IsDisplayingChat && Message.Length > 4096)                  || (IsDisplayingAds && Message.Length > 50000))              {                  UpdateError("You expect me to post all of that?! How about you post less' huh?");                  return;              }
Magic Number,slimCat.ViewModels,PmChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channels\PMChannelViewModel.cs,GetMatchRatio,The following statement contains a magic number: return 1 + Math.Log10((one/two) - 0.1) + 0.05;
Magic Number,slimCat.ViewModels,PmChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channels\PMChannelViewModel.cs,GetMatchRatio,The following statement contains a magic number: return 1 + Math.Log10((one/two) - 0.1) + 0.05;
Magic Number,slimCat.ViewModels,PmChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channels\PMChannelViewModel.cs,SendPrivateMessage,The following statement contains a magic number: if (Message.Length > 50000)              {                  UpdateError("I can't let you post that. That's way too big. Try again' buddy.");                  return;              }
Magic Number,slimCat.ViewModels,PmChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channels\PMChannelViewModel.cs,SendNote,The following statement contains a magic number: if (Message.Length > 200000)              {                  UpdateError("You expect me to post all of that? Try something shorter!");                  return;              }
Magic Number,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,HomeChannelViewModel,The following statement contains a magic number: try              {                  Model = Container.Resolve<GeneralChannelModel>(name);                  ConnectTime = 0;                  flavorText = new StringBuilder("Connecting");                  connectDotDot = new StringBuilder();                    this.updateService = updateService;                  HelpVm = helpVm;                    Container.RegisterType<object' HomeChannelView>(Model.Id' new InjectionConstructor(this));                  minuteOnlineCount = new CacheCount(OnlineCountPrime' 15' 1000*15);                    updateTimer.Enabled = true;                  updateTimer.Elapsed += (s' e) =>                  {                      OnPropertyChanged("RoughServerUpTime");                      OnPropertyChanged("RoughClientUpTime");                      OnPropertyChanged("LastMessageReceived");                  };                    updateTimer.Elapsed += UpdateConnectText;                  SettingsVm = settingsVm;                    Events.GetEvent<NewUpdateEvent>().Subscribe(param =>                  {                      var temp = param as CharacterUpdateModel;                      if (!(temp?.Arguments is LoginStateChangedEventArgs))                          return;                        OnPropertyChanged("OnlineCount");                      OnPropertyChanged("OnlineFriendsCount");                      OnPropertyChanged("OnlineBookmarksCount");                      OnPropertyChanged("OnlineCountChange");                  });                    Events.GetEvent<LoginAuthenticatedEvent>().Subscribe(LoggedInEvent);                  Events.GetEvent<LoginFailedEvent>().Subscribe(LoginFailedEvent);                  Events.GetEvent<ReconnectingEvent>().Subscribe(LoginReconnectingEvent);                    this.automation = automation;                  this.browser = browser;                    LoggingSection = "utility channel vm";                    Themes = new ObservableCollection<ThemeModel>();              }              catch (Exception ex)              {                  ex.Source = "Utility Channel ViewModel' init";                  Exceptions.HandleException(ex);              }
Magic Number,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,HomeChannelViewModel,The following statement contains a magic number: try              {                  Model = Container.Resolve<GeneralChannelModel>(name);                  ConnectTime = 0;                  flavorText = new StringBuilder("Connecting");                  connectDotDot = new StringBuilder();                    this.updateService = updateService;                  HelpVm = helpVm;                    Container.RegisterType<object' HomeChannelView>(Model.Id' new InjectionConstructor(this));                  minuteOnlineCount = new CacheCount(OnlineCountPrime' 15' 1000*15);                    updateTimer.Enabled = true;                  updateTimer.Elapsed += (s' e) =>                  {                      OnPropertyChanged("RoughServerUpTime");                      OnPropertyChanged("RoughClientUpTime");                      OnPropertyChanged("LastMessageReceived");                  };                    updateTimer.Elapsed += UpdateConnectText;                  SettingsVm = settingsVm;                    Events.GetEvent<NewUpdateEvent>().Subscribe(param =>                  {                      var temp = param as CharacterUpdateModel;                      if (!(temp?.Arguments is LoginStateChangedEventArgs))                          return;                        OnPropertyChanged("OnlineCount");                      OnPropertyChanged("OnlineFriendsCount");                      OnPropertyChanged("OnlineBookmarksCount");                      OnPropertyChanged("OnlineCountChange");                  });                    Events.GetEvent<LoginAuthenticatedEvent>().Subscribe(LoggedInEvent);                  Events.GetEvent<LoginFailedEvent>().Subscribe(LoginFailedEvent);                  Events.GetEvent<ReconnectingEvent>().Subscribe(LoginReconnectingEvent);                    this.automation = automation;                  this.browser = browser;                    LoggingSection = "utility channel vm";                    Themes = new ObservableCollection<ThemeModel>();              }              catch (Exception ex)              {                  ex.Source = "Utility Channel ViewModel' init";                  Exceptions.HandleException(ex);              }
Magic Number,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,HomeChannelViewModel,The following statement contains a magic number: try              {                  Model = Container.Resolve<GeneralChannelModel>(name);                  ConnectTime = 0;                  flavorText = new StringBuilder("Connecting");                  connectDotDot = new StringBuilder();                    this.updateService = updateService;                  HelpVm = helpVm;                    Container.RegisterType<object' HomeChannelView>(Model.Id' new InjectionConstructor(this));                  minuteOnlineCount = new CacheCount(OnlineCountPrime' 15' 1000*15);                    updateTimer.Enabled = true;                  updateTimer.Elapsed += (s' e) =>                  {                      OnPropertyChanged("RoughServerUpTime");                      OnPropertyChanged("RoughClientUpTime");                      OnPropertyChanged("LastMessageReceived");                  };                    updateTimer.Elapsed += UpdateConnectText;                  SettingsVm = settingsVm;                    Events.GetEvent<NewUpdateEvent>().Subscribe(param =>                  {                      var temp = param as CharacterUpdateModel;                      if (!(temp?.Arguments is LoginStateChangedEventArgs))                          return;                        OnPropertyChanged("OnlineCount");                      OnPropertyChanged("OnlineFriendsCount");                      OnPropertyChanged("OnlineBookmarksCount");                      OnPropertyChanged("OnlineCountChange");                  });                    Events.GetEvent<LoginAuthenticatedEvent>().Subscribe(LoggedInEvent);                  Events.GetEvent<LoginFailedEvent>().Subscribe(LoginFailedEvent);                  Events.GetEvent<ReconnectingEvent>().Subscribe(LoginReconnectingEvent);                    this.automation = automation;                  this.browser = browser;                    LoggingSection = "utility channel vm";                    Themes = new ObservableCollection<ThemeModel>();              }              catch (Exception ex)              {                  ex.Source = "Utility Channel ViewModel' init";                  Exceptions.HandleException(ex);              }
Magic Number,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,UpdateConnectText,The following statement contains a magic number: if (connectDotDot.Length >= 3)                  connectDotDot.Clear();
Magic Number,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,GetThemeModel,The following statement contains a magic number: return new ThemeModel              {                  Name = themeCsv[0]'                  Author = CharacterManager.Find(themeCsv[1])'                  Version = themeCsv[2]'                  ForegroundColor = GetColor(themeCsv[3])'                  HighlightColor = GetColor(themeCsv[4])'                  ContrastColor = GetColor(themeCsv[5])'                  BackgroundColor = GetColor(themeCsv[6])'                  DepressedColor = GetColor(themeCsv[7])'                  BrightBackgroundColor = GetColor(themeCsv[8])'                  Url = themeCsv.Count == 10 ? themeCsv[9] : string.Empty              };
Magic Number,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,GetThemeModel,The following statement contains a magic number: return new ThemeModel              {                  Name = themeCsv[0]'                  Author = CharacterManager.Find(themeCsv[1])'                  Version = themeCsv[2]'                  ForegroundColor = GetColor(themeCsv[3])'                  HighlightColor = GetColor(themeCsv[4])'                  ContrastColor = GetColor(themeCsv[5])'                  BackgroundColor = GetColor(themeCsv[6])'                  DepressedColor = GetColor(themeCsv[7])'                  BrightBackgroundColor = GetColor(themeCsv[8])'                  Url = themeCsv.Count == 10 ? themeCsv[9] : string.Empty              };
Magic Number,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,GetThemeModel,The following statement contains a magic number: return new ThemeModel              {                  Name = themeCsv[0]'                  Author = CharacterManager.Find(themeCsv[1])'                  Version = themeCsv[2]'                  ForegroundColor = GetColor(themeCsv[3])'                  HighlightColor = GetColor(themeCsv[4])'                  ContrastColor = GetColor(themeCsv[5])'                  BackgroundColor = GetColor(themeCsv[6])'                  DepressedColor = GetColor(themeCsv[7])'                  BrightBackgroundColor = GetColor(themeCsv[8])'                  Url = themeCsv.Count == 10 ? themeCsv[9] : string.Empty              };
Magic Number,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,GetThemeModel,The following statement contains a magic number: return new ThemeModel              {                  Name = themeCsv[0]'                  Author = CharacterManager.Find(themeCsv[1])'                  Version = themeCsv[2]'                  ForegroundColor = GetColor(themeCsv[3])'                  HighlightColor = GetColor(themeCsv[4])'                  ContrastColor = GetColor(themeCsv[5])'                  BackgroundColor = GetColor(themeCsv[6])'                  DepressedColor = GetColor(themeCsv[7])'                  BrightBackgroundColor = GetColor(themeCsv[8])'                  Url = themeCsv.Count == 10 ? themeCsv[9] : string.Empty              };
Magic Number,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,GetThemeModel,The following statement contains a magic number: return new ThemeModel              {                  Name = themeCsv[0]'                  Author = CharacterManager.Find(themeCsv[1])'                  Version = themeCsv[2]'                  ForegroundColor = GetColor(themeCsv[3])'                  HighlightColor = GetColor(themeCsv[4])'                  ContrastColor = GetColor(themeCsv[5])'                  BackgroundColor = GetColor(themeCsv[6])'                  DepressedColor = GetColor(themeCsv[7])'                  BrightBackgroundColor = GetColor(themeCsv[8])'                  Url = themeCsv.Count == 10 ? themeCsv[9] : string.Empty              };
Magic Number,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,GetThemeModel,The following statement contains a magic number: return new ThemeModel              {                  Name = themeCsv[0]'                  Author = CharacterManager.Find(themeCsv[1])'                  Version = themeCsv[2]'                  ForegroundColor = GetColor(themeCsv[3])'                  HighlightColor = GetColor(themeCsv[4])'                  ContrastColor = GetColor(themeCsv[5])'                  BackgroundColor = GetColor(themeCsv[6])'                  DepressedColor = GetColor(themeCsv[7])'                  BrightBackgroundColor = GetColor(themeCsv[8])'                  Url = themeCsv.Count == 10 ? themeCsv[9] : string.Empty              };
Magic Number,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,GetThemeModel,The following statement contains a magic number: return new ThemeModel              {                  Name = themeCsv[0]'                  Author = CharacterManager.Find(themeCsv[1])'                  Version = themeCsv[2]'                  ForegroundColor = GetColor(themeCsv[3])'                  HighlightColor = GetColor(themeCsv[4])'                  ContrastColor = GetColor(themeCsv[5])'                  BackgroundColor = GetColor(themeCsv[6])'                  DepressedColor = GetColor(themeCsv[7])'                  BrightBackgroundColor = GetColor(themeCsv[8])'                  Url = themeCsv.Count == 10 ? themeCsv[9] : string.Empty              };
Magic Number,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,GetThemeModel,The following statement contains a magic number: return new ThemeModel              {                  Name = themeCsv[0]'                  Author = CharacterManager.Find(themeCsv[1])'                  Version = themeCsv[2]'                  ForegroundColor = GetColor(themeCsv[3])'                  HighlightColor = GetColor(themeCsv[4])'                  ContrastColor = GetColor(themeCsv[5])'                  BackgroundColor = GetColor(themeCsv[6])'                  DepressedColor = GetColor(themeCsv[7])'                  BrightBackgroundColor = GetColor(themeCsv[8])'                  Url = themeCsv.Count == 10 ? themeCsv[9] : string.Empty              };
Magic Number,slimCat.ViewModels,HomeChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Home Channel\HomeChannelViewModel.cs,GetThemeModel,The following statement contains a magic number: return new ThemeModel              {                  Name = themeCsv[0]'                  Author = CharacterManager.Find(themeCsv[1])'                  Version = themeCsv[2]'                  ForegroundColor = GetColor(themeCsv[3])'                  HighlightColor = GetColor(themeCsv[4])'                  ContrastColor = GetColor(themeCsv[5])'                  BackgroundColor = GetColor(themeCsv[6])'                  DepressedColor = GetColor(themeCsv[7])'                  BrightBackgroundColor = GetColor(themeCsv[8])'                  Url = themeCsv.Count == 10 ? themeCsv[9] : string.Empty              };
Magic Number,slimCat.ViewModels,CharacterSelectViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Full Screen\CharacterSelectViewModel.cs,HandleLoginComplete,The following statement contains a magic number: if (!Characters.Any())              {                  Exceptions.ShowErrorBox(                      "slimCat will now exit. \nReason: No characters to connect with. \n\n"                      + "Please create a character to sign into f-chat."'                      "No characters for chat!");                    Environment.Exit(-3);              }
Magic Number,slimCat.ViewModels,UserbarViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\User Bar\UserbarViewModel.cs,UpdateConnectionBars,The following statement contains a magic number: if (difference.TotalSeconds > 5)                  ConnectionIsPerfect = false;
Magic Number,slimCat.ViewModels,UserbarViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\User Bar\UserbarViewModel.cs,UpdateConnectionBars,The following statement contains a magic number: if (difference.TotalSeconds > 10)                  ConnectionIsGood = false;
Magic Number,slimCat.ViewModels,UserbarViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\User Bar\UserbarViewModel.cs,UpdateConnectionBars,The following statement contains a magic number: if (difference.TotalSeconds > 20)                  ConnectionIsModerate = false;
Magic Number,slimCat.ViewModels,UserbarViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\User Bar\UserbarViewModel.cs,UpdateConnectionBars,The following statement contains a magic number: if (difference.TotalSeconds > 40)                  ConnectionIsConnected = false;
Magic Number,slimCat.Views,ChannelbarView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ChannelBarView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ManageListsButton = ((slimCat.Views.ManageButtonView)(target));              return;              case 2:              this.NotificationButton = ((slimCat.Views.NotificationsButtonView)(target));              return;              }
Magic Number,slimCat.Views,UsersTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ChannelUserListView.xaml.cs,OnMouseRightButtonUp,The following statement contains a magic number: sender.TryOpenRightClickMenuCommand<Grid>(2);
Magic Number,slimCat.Views,UsersTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ChannelUserListView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:              this.PopupAnchor = ((System.Windows.Controls.ListBox)(target));              return;              }
Magic Number,slimCat.Views,GlobalTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\GlobalUserListView.xaml.cs,OnMouseRightButtonUp,The following statement contains a magic number: sender.TryOpenRightClickMenuCommand<Grid>(2);
Magic Number,slimCat.Views,GlobalTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\GlobalUserListView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:              this.PopupAnchor = ((System.Windows.Controls.ListBox)(target));              return;              }
Magic Number,slimCat.Views,ManageListsTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ManageListsView.xaml.cs,OnMouseRightButtonUp,The following statement contains a magic number: sender.TryOpenRightClickMenuCommand<Grid>(2);
Magic Number,slimCat.Views,ManageListsTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ManageListsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:              this.PopupAnchor = ((System.Windows.Controls.StackPanel)(target));              return;              }
Magic Number,slimCat.Views,ObservingFlowDocumentReader,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ObservingFlowDocumentReader.xaml.cs,OnLoad,The following statement contains a magic number: if (LoadInReverse)              {                  var count = 0;                  var messages = messageSource                      .Reverse()                      .Select(x => x.View)                      .GetEnumerator();                    while (count <= ApplicationSettings.PreloadMessageAmount && messages.MoveNext())                  {                      count++;                      AddInReverseAsync(messages.Current' DispatcherPriority.DataBind);                  }                    if (count >= ApplicationSettings.PreloadMessageAmount)                  {                      var delayTimer = new DispatcherTimer(DispatcherPriority.DataBind)                      {                          Interval = TimeSpan.FromMilliseconds(450)                      };                      delayTimer.Tick += (o' args) =>                      {                          var batch = count + 25;                          while (count < batch)                          {                              if (messages.MoveNext())                              {                                  count++;                                  scroller?.StabilizeNextScroll();                                  AddInReverseAsync(messages.Current' DispatcherPriority.DataBind);                              }                              else                              {                                  delayTimer.Stop();                                  break;                              }                          }                      };                      delayTimer.Start();                  }                    loaded = true;                  return;              }
Magic Number,slimCat.Views,ObservingFlowDocumentReader,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ObservingFlowDocumentReader.xaml.cs,OnLoad,The following statement contains a magic number: if (LoadInReverse)              {                  var count = 0;                  var messages = messageSource                      .Reverse()                      .Select(x => x.View)                      .GetEnumerator();                    while (count <= ApplicationSettings.PreloadMessageAmount && messages.MoveNext())                  {                      count++;                      AddInReverseAsync(messages.Current' DispatcherPriority.DataBind);                  }                    if (count >= ApplicationSettings.PreloadMessageAmount)                  {                      var delayTimer = new DispatcherTimer(DispatcherPriority.DataBind)                      {                          Interval = TimeSpan.FromMilliseconds(450)                      };                      delayTimer.Tick += (o' args) =>                      {                          var batch = count + 25;                          while (count < batch)                          {                              if (messages.MoveNext())                              {                                  count++;                                  scroller?.StabilizeNextScroll();                                  AddInReverseAsync(messages.Current' DispatcherPriority.DataBind);                              }                              else                              {                                  delayTimer.Stop();                                  break;                              }                          }                      };                      delayTimer.Start();                  }                    loaded = true;                  return;              }
Magic Number,slimCat.Views,ObservingFlowDocumentReader,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ObservingFlowDocumentReader.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Root = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 2:              this.Messages = ((System.Windows.Documents.FlowDocument)(target));                            #line 13 "..\..\..\..\Views\UI Parts\ObservingFlowDocumentReader.xaml"              this.Messages.Loaded += new System.Windows.RoutedEventHandler(this.OnLoad);                            #line default              #line hidden                            #line 14 "..\..\..\..\Views\UI Parts\ObservingFlowDocumentReader.xaml"              this.Messages.PreviewMouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.OnMouseWheelPreview);                            #line default              #line hidden              return;              }
Magic Number,slimCat.Views,SearchBoxView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\SearchBoxView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Entry = ((slimCat.Views.ImageTextBox)(target));              return;              case 2:              this.FilterButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,slimCat.Views,ShortcutManager,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ShortcutManager.cs,OnKeyUp,The following statement contains a magic number: if (e.Key == Key.Return && e.KeyboardDevice.Modifiers == ModifierKeys.Control)              {                  var caretIndex = entry.CaretIndex;                  entry.Text = entry.Text.Insert(caretIndex' "\r");                  entry.CaretIndex = caretIndex + 1;              }              else if (e.Key == Key.Return)                  e.Handled = true; // don't do the funny business with inserting a new line              else if (e.Key == Key.Up && string.IsNullOrEmpty(vm.Message) && !string.IsNullOrWhiteSpace(vm.LastMessage) &&                       e.KeyboardDevice.Modifiers == ModifierKeys.None)              {                  vm.Message = vm.LastMessage;                  entry.ScrollToEnd();                  entry.CaretIndex = vm.Message.Length;              }              else if (AcceptedKeys.ContainsKey(e.Key) && e.KeyboardDevice.Modifiers == ModifierKeys.Control)              {                  e.Handled = true;                    var tupleData = AcceptedKeys[e.Key];                    var bbtag = tupleData.Item1;                  var useArgs = tupleData.Item2;                    if (!string.IsNullOrWhiteSpace(entry.SelectedText))                  {                      var selected = entry.SelectedText;                        if (!useArgs)                      {                          if (TogglingKeys.ContainsKey(e.Key))                          {                              var altbbtag = TogglingKeys[e.Key];                                var openingBb = $"[{bbtag}]";                              var openingAltBb = $"[{altbbtag}]";                              var closingBb = $"[/{bbtag}]";                              var closingAltBb = $"[/{altbbtag}]";                                if (selected.Contains(openingBb))                              {                                  entry.SelectedText = selected.Replace(openingBb' openingAltBb)                                      .Replace(closingBb' closingAltBb);                                  return;                              }                              if (selected.Contains(openingAltBb))                              {                                  entry.SelectedText = selected.Replace(openingAltBb' openingBb)                                      .Replace(closingAltBb' closingBb);                                  return;                              }                          }                          if (entry.SelectedText.Contains($"[{bbtag}]") && TogglingKeys.ContainsKey(e.Key))                          {                              entry.SelectedText = entry.SelectedText.Replace($"[{bbtag}]"' $"[{TogglingKeys[e.Key]}]");                              entry.SelectedText = entry.SelectedText.Replace($"[/{bbtag}]"'                                  $"[/{TogglingKeys[e.Key]}]");                          }                            entry.SelectedText = $"[{bbtag}]{selected}[/{bbtag}]";                      }                      else                      {                          var toEnter = $"[{bbtag}={selected}]";                          var caretIndex = entry.CaretIndex;                            entry.SelectedText = $"{toEnter}[/{bbtag}]";                          entry.CaretIndex = caretIndex + toEnter.Length;                      }                  }                  else                  {                      var caretIndex = entry.CaretIndex;                      var bbfragment = string.Format("[{0}][/{0}]"' bbtag);                      if (TogglingKeys.ContainsKey(e.Key) && caretIndex > 0)                      {                          var altbbtag = TogglingKeys[e.Key];                            var altbbfragment = string.Format("[{0}][/{0}]"' altbbtag);                            if (entry.Text.Contains(bbfragment))                          {                              entry.Text = ReplaceFirst(entry.Text' bbfragment' altbbfragment);                              entry.CaretIndex = caretIndex - (bbtag.Length - altbbtag.Length);                              return;                          }                            if (entry.Text.Contains(altbbtag))                          {                              entry.Text = ReplaceFirst(entry.Text' altbbfragment' bbfragment);                              entry.CaretIndex = caretIndex - (altbbtag.Length - bbtag.Length);                              return;                          }                      }                        entry.Text = entry.Text.Insert(caretIndex' bbfragment);                      entry.CaretIndex = caretIndex + bbtag.Length + 2;                        // 2 is a magic number representing the brackets around the BbCode                  }              }
Magic Number,slimCat.Views,GeneralChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\GeneralChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.HeaderRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.HeaderRowGrid = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.ChannelDescriptionExpander = ((System.Windows.Controls.Expander)(target));                            #line 35 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              this.ChannelDescriptionExpander.Collapsed += new System.Windows.RoutedEventHandler(this.OnChannelDescriptionCollapsed);                            #line default              #line hidden              return;              case 5:                            #line 84 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnHeaderRowResizeRequested);                            #line default              #line hidden                            #line 85 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.OnHeaderRowDragging);                            #line default              #line hidden                            #line 86 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragCompleted += new System.Windows.Controls.Primitives.DragCompletedEventHandler(this.OnHeaderRowDragCompleted);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:                            #line 129 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              case 8:              this.EntryBoxRowGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,slimCat.Views,GeneralChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\GeneralChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.HeaderRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.HeaderRowGrid = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.ChannelDescriptionExpander = ((System.Windows.Controls.Expander)(target));                            #line 35 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              this.ChannelDescriptionExpander.Collapsed += new System.Windows.RoutedEventHandler(this.OnChannelDescriptionCollapsed);                            #line default              #line hidden              return;              case 5:                            #line 84 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnHeaderRowResizeRequested);                            #line default              #line hidden                            #line 85 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.OnHeaderRowDragging);                            #line default              #line hidden                            #line 86 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragCompleted += new System.Windows.Controls.Primitives.DragCompletedEventHandler(this.OnHeaderRowDragCompleted);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:                            #line 129 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              case 8:              this.EntryBoxRowGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,slimCat.Views,GeneralChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\GeneralChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.HeaderRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.HeaderRowGrid = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.ChannelDescriptionExpander = ((System.Windows.Controls.Expander)(target));                            #line 35 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              this.ChannelDescriptionExpander.Collapsed += new System.Windows.RoutedEventHandler(this.OnChannelDescriptionCollapsed);                            #line default              #line hidden              return;              case 5:                            #line 84 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnHeaderRowResizeRequested);                            #line default              #line hidden                            #line 85 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.OnHeaderRowDragging);                            #line default              #line hidden                            #line 86 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragCompleted += new System.Windows.Controls.Primitives.DragCompletedEventHandler(this.OnHeaderRowDragCompleted);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:                            #line 129 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              case 8:              this.EntryBoxRowGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,slimCat.Views,GeneralChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\GeneralChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.HeaderRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.HeaderRowGrid = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.ChannelDescriptionExpander = ((System.Windows.Controls.Expander)(target));                            #line 35 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              this.ChannelDescriptionExpander.Collapsed += new System.Windows.RoutedEventHandler(this.OnChannelDescriptionCollapsed);                            #line default              #line hidden              return;              case 5:                            #line 84 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnHeaderRowResizeRequested);                            #line default              #line hidden                            #line 85 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.OnHeaderRowDragging);                            #line default              #line hidden                            #line 86 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragCompleted += new System.Windows.Controls.Primitives.DragCompletedEventHandler(this.OnHeaderRowDragCompleted);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:                            #line 129 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              case 8:              this.EntryBoxRowGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,slimCat.Views,GeneralChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\GeneralChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.HeaderRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.HeaderRowGrid = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.ChannelDescriptionExpander = ((System.Windows.Controls.Expander)(target));                            #line 35 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              this.ChannelDescriptionExpander.Collapsed += new System.Windows.RoutedEventHandler(this.OnChannelDescriptionCollapsed);                            #line default              #line hidden              return;              case 5:                            #line 84 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnHeaderRowResizeRequested);                            #line default              #line hidden                            #line 85 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.OnHeaderRowDragging);                            #line default              #line hidden                            #line 86 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragCompleted += new System.Windows.Controls.Primitives.DragCompletedEventHandler(this.OnHeaderRowDragCompleted);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:                            #line 129 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              case 8:              this.EntryBoxRowGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,slimCat.Views,GeneralChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\GeneralChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.HeaderRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.HeaderRowGrid = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.ChannelDescriptionExpander = ((System.Windows.Controls.Expander)(target));                            #line 35 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              this.ChannelDescriptionExpander.Collapsed += new System.Windows.RoutedEventHandler(this.OnChannelDescriptionCollapsed);                            #line default              #line hidden              return;              case 5:                            #line 84 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnHeaderRowResizeRequested);                            #line default              #line hidden                            #line 85 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.OnHeaderRowDragging);                            #line default              #line hidden                            #line 86 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragCompleted += new System.Windows.Controls.Primitives.DragCompletedEventHandler(this.OnHeaderRowDragCompleted);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:                            #line 129 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              case 8:              this.EntryBoxRowGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,slimCat.Views,GeneralChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\GeneralChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.HeaderRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.HeaderRowGrid = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.ChannelDescriptionExpander = ((System.Windows.Controls.Expander)(target));                            #line 35 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              this.ChannelDescriptionExpander.Collapsed += new System.Windows.RoutedEventHandler(this.OnChannelDescriptionCollapsed);                            #line default              #line hidden              return;              case 5:                            #line 84 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnHeaderRowResizeRequested);                            #line default              #line hidden                            #line 85 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.OnHeaderRowDragging);                            #line default              #line hidden                            #line 86 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragCompleted += new System.Windows.Controls.Primitives.DragCompletedEventHandler(this.OnHeaderRowDragCompleted);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:                            #line 129 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              case 8:              this.EntryBoxRowGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,slimCat.Views,MessageView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ChannelMessageView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Copy_BBcode = ((System.Windows.Controls.MenuItem)(target));              return;              case 2:                            #line 52 "..\..\..\..\Views\UI Parts\ChannelMessageView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp);                            #line default              #line hidden              return;              }
Magic Number,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,OnMouseRightButtonUp,The following statement contains a magic number: sender.TryOpenRightClickMenuCommand<Grid>(2);
Magic Number,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,OnProfileMouseWheelPreview,The following statement contains a magic number: scroller.ScrollToVerticalOffset(scroller.VerticalOffset -                                              GeneralExtensions.GetScrollDistance(e.Delta'                                                  ApplicationSettings.FontSize - 4));
Magic Number,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.CharacterStatusDisplayer = ((System.Windows.Controls.Expander)(target));              return;              case 4:              this.ProfileHeaderExpander = ((System.Windows.Controls.Expander)(target));              return;              case 5:                            #line 231 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.ListBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.OnSelected);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:              this.Reader = ((System.Windows.Controls.FlowDocumentReader)(target));                            #line 255 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.Reader.PreviewMouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.OnProfileMouseWheelPreview);                            #line default              #line hidden              return;              case 8:              this.ProfileParagraph = ((System.Windows.Documents.Paragraph)(target));                            #line 329 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.ProfileParagraph.Loaded += new System.Windows.RoutedEventHandler(this.CloseImage);                            #line default              #line hidden              return;              case 9:                            #line 511 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              }
Magic Number,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.CharacterStatusDisplayer = ((System.Windows.Controls.Expander)(target));              return;              case 4:              this.ProfileHeaderExpander = ((System.Windows.Controls.Expander)(target));              return;              case 5:                            #line 231 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.ListBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.OnSelected);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:              this.Reader = ((System.Windows.Controls.FlowDocumentReader)(target));                            #line 255 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.Reader.PreviewMouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.OnProfileMouseWheelPreview);                            #line default              #line hidden              return;              case 8:              this.ProfileParagraph = ((System.Windows.Documents.Paragraph)(target));                            #line 329 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.ProfileParagraph.Loaded += new System.Windows.RoutedEventHandler(this.CloseImage);                            #line default              #line hidden              return;              case 9:                            #line 511 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              }
Magic Number,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.CharacterStatusDisplayer = ((System.Windows.Controls.Expander)(target));              return;              case 4:              this.ProfileHeaderExpander = ((System.Windows.Controls.Expander)(target));              return;              case 5:                            #line 231 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.ListBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.OnSelected);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:              this.Reader = ((System.Windows.Controls.FlowDocumentReader)(target));                            #line 255 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.Reader.PreviewMouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.OnProfileMouseWheelPreview);                            #line default              #line hidden              return;              case 8:              this.ProfileParagraph = ((System.Windows.Documents.Paragraph)(target));                            #line 329 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.ProfileParagraph.Loaded += new System.Windows.RoutedEventHandler(this.CloseImage);                            #line default              #line hidden              return;              case 9:                            #line 511 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              }
Magic Number,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.CharacterStatusDisplayer = ((System.Windows.Controls.Expander)(target));              return;              case 4:              this.ProfileHeaderExpander = ((System.Windows.Controls.Expander)(target));              return;              case 5:                            #line 231 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.ListBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.OnSelected);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:              this.Reader = ((System.Windows.Controls.FlowDocumentReader)(target));                            #line 255 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.Reader.PreviewMouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.OnProfileMouseWheelPreview);                            #line default              #line hidden              return;              case 8:              this.ProfileParagraph = ((System.Windows.Documents.Paragraph)(target));                            #line 329 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.ProfileParagraph.Loaded += new System.Windows.RoutedEventHandler(this.CloseImage);                            #line default              #line hidden              return;              case 9:                            #line 511 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              }
Magic Number,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.CharacterStatusDisplayer = ((System.Windows.Controls.Expander)(target));              return;              case 4:              this.ProfileHeaderExpander = ((System.Windows.Controls.Expander)(target));              return;              case 5:                            #line 231 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.ListBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.OnSelected);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:              this.Reader = ((System.Windows.Controls.FlowDocumentReader)(target));                            #line 255 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.Reader.PreviewMouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.OnProfileMouseWheelPreview);                            #line default              #line hidden              return;              case 8:              this.ProfileParagraph = ((System.Windows.Documents.Paragraph)(target));                            #line 329 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.ProfileParagraph.Loaded += new System.Windows.RoutedEventHandler(this.CloseImage);                            #line default              #line hidden              return;              case 9:                            #line 511 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              }
Magic Number,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.CharacterStatusDisplayer = ((System.Windows.Controls.Expander)(target));              return;              case 4:              this.ProfileHeaderExpander = ((System.Windows.Controls.Expander)(target));              return;              case 5:                            #line 231 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.ListBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.OnSelected);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:              this.Reader = ((System.Windows.Controls.FlowDocumentReader)(target));                            #line 255 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.Reader.PreviewMouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.OnProfileMouseWheelPreview);                            #line default              #line hidden              return;              case 8:              this.ProfileParagraph = ((System.Windows.Documents.Paragraph)(target));                            #line 329 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.ProfileParagraph.Loaded += new System.Windows.RoutedEventHandler(this.CloseImage);                            #line default              #line hidden              return;              case 9:                            #line 511 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              }
Magic Number,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.CharacterStatusDisplayer = ((System.Windows.Controls.Expander)(target));              return;              case 4:              this.ProfileHeaderExpander = ((System.Windows.Controls.Expander)(target));              return;              case 5:                            #line 231 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.ListBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.OnSelected);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:              this.Reader = ((System.Windows.Controls.FlowDocumentReader)(target));                            #line 255 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.Reader.PreviewMouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.OnProfileMouseWheelPreview);                            #line default              #line hidden              return;              case 8:              this.ProfileParagraph = ((System.Windows.Documents.Paragraph)(target));                            #line 329 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.ProfileParagraph.Loaded += new System.Windows.RoutedEventHandler(this.CloseImage);                            #line default              #line hidden              return;              case 9:                            #line 511 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              }
Magic Number,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.CharacterStatusDisplayer = ((System.Windows.Controls.Expander)(target));              return;              case 4:              this.ProfileHeaderExpander = ((System.Windows.Controls.Expander)(target));              return;              case 5:                            #line 231 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.ListBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.OnSelected);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:              this.Reader = ((System.Windows.Controls.FlowDocumentReader)(target));                            #line 255 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.Reader.PreviewMouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.OnProfileMouseWheelPreview);                            #line default              #line hidden              return;              case 8:              this.ProfileParagraph = ((System.Windows.Documents.Paragraph)(target));                            #line 329 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.ProfileParagraph.Loaded += new System.Windows.RoutedEventHandler(this.CloseImage);                            #line default              #line hidden              return;              case 9:                            #line 511 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              }
Magic Number,slimCat.Views,UserbarView,C:\repos\WreckedAvent_slimCat\slimCat\Views\User Bar\UserbarView.xaml.cs,UserbarView,The following statement contains a magic number: minDragDistance = Math.Max(SystemParameters.MinimumVerticalDragDistance' 10);
Magic Number,slimCat.Views,UserbarView,C:\repos\WreckedAvent_slimCat\slimCat\Views\User Bar\UserbarView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\..\Views\User Bar\UserbarView.xaml"              ((slimCat.Views.UserbarView)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnMouseLeave);                            #line default              #line hidden              return;              case 2:              this.PopupAnchor = ((System.Windows.Controls.Border)(target));              return;              }
Magic Number,slimCat.Views,UserbarView,C:\repos\WreckedAvent_slimCat\slimCat\Views\User Bar\UserbarView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonDownEvent;                            #line 247 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.OnPreviewMouseClick);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseMoveEvent;                            #line 248 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.OnMouseMove);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.DropEvent;                            #line 249 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.OnPmModelDragDrop);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewDragEnterEvent;                            #line 250 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.CheckAsPm);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewDragOverEvent;                            #line 251 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.CheckAsPm);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 4:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonDownEvent;                            #line 266 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.OnPreviewMouseClick);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.DropEvent;                            #line 267 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.OnChannelModelDragDrop);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseMoveEvent;                            #line 268 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.OnMouseMove);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewDragEnterEvent;                            #line 269 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.CheckAsChannel);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewDragOverEvent;                            #line 270 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.CheckAsChannel);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Magic Number,slimCat.Views,UserbarView,C:\repos\WreckedAvent_slimCat\slimCat\Views\User Bar\UserbarView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonDownEvent;                            #line 247 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.OnPreviewMouseClick);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseMoveEvent;                            #line 248 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.OnMouseMove);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.DropEvent;                            #line 249 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.OnPmModelDragDrop);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewDragEnterEvent;                            #line 250 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.CheckAsPm);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewDragOverEvent;                            #line 251 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.CheckAsPm);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 4:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonDownEvent;                            #line 266 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.OnPreviewMouseClick);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.DropEvent;                            #line 267 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.OnChannelModelDragDrop);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseMoveEvent;                            #line 268 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.OnMouseMove);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewDragEnterEvent;                            #line 269 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.CheckAsChannel);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewDragOverEvent;                            #line 270 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.CheckAsChannel);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Magic Number,slimCat.Views,HomeChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Home Channel\HomeChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:                            #line 383 "..\..\..\..\Views\Home Channel\HomeChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              }
Magic Number,slimCat.Views,HomeChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Home Channel\HomeChannelView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:                            #line 383 "..\..\..\..\Views\Home Channel\HomeChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              }
Missing Default,slimCat.Services,NoteService,C:\repos\WreckedAvent_slimCat\slimCat\Services\NoteService.cs,FromFuzzyString,The following switch statement is missing a default case: switch (datePart)                  {                      case "y":                          toReturn = toReturn.Subtract(TimeSpan.FromDays(365*numberPart));                          break;                      case "mo":                          toReturn = toReturn.Subtract(TimeSpan.FromDays(27*numberPart));                          break;                      case "d":                          toReturn = toReturn.Subtract(TimeSpan.FromDays(numberPart));                          break;                      case "h":                          toReturn = toReturn.Subtract(TimeSpan.FromHours(numberPart));                          break;                      case "m":                          toReturn = toReturn.Subtract(TimeSpan.FromMinutes(numberPart));                          break;                  }
Missing Default,slimCat.Services,LoggingService,C:\repos\WreckedAvent_slimCat\slimCat\Services\LoggingService.cs,LogSpecial,The following switch statement is missing a default case: switch (kind)                  {                      case SpecialLogMessageKind.LineBreak:                          writer.WriteLine();                          break;                      case SpecialLogMessageKind.Header:                      {                          var head = string.Empty;                          while (head.Length < specialTitle.Length + 4)                          {                              head += "=";                          }                            writer.WriteLine();                          writer.WriteLine(head);                          writer.WriteLine("= " + specialTitle + " =");                          writer.WriteLine(head);                          writer.WriteLine();                            break;                      }                        case SpecialLogMessageKind.Section:                      {                          var head = string.Empty;                          while (head.Length < specialTitle.Length + 4)                          {                              head += "-";                          }                            writer.WriteLine();                          writer.WriteLine(head);                          writer.WriteLine("- " + specialTitle + " -");                          writer.WriteLine(head);                          writer.WriteLine();                            break;                      }                  }
Missing Default,slimCat.Theme,EmbeddedTheme,C:\repos\WreckedAvent_slimCat\slimCat\Theme\EmbeddedTheme.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 138 "..\..\..\Theme\EmbeddedTheme.xaml"              ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUpForName);                            #line default              #line hidden              break;              case 2:                            #line 153 "..\..\..\Theme\EmbeddedTheme.xaml"              ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUpForIcon);                            #line default              #line hidden              break;              case 3:                            #line 171 "..\..\..\Theme\EmbeddedTheme.xaml"              ((System.Windows.Controls.Image)(target)).PreviewMouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMemeExpand);                            #line default              #line hidden              break;              }
Missing Default,slimCat.Utilities,ChannelTypeToImageConverter,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Converters\ChannelTypeToImageConverter.cs,Convert,The following switch statement is missing a default case: switch (args)              {                  case ChannelType.PrivateMessage:                      uri = new Uri("pack://application:'''/icons/chat.png");                      break;                  case ChannelType.InviteOnly:                      uri = new Uri("pack://application:'''/icons/private_closed.png");                      break;                  case ChannelType.Private:                      uri = new Uri("pack://application:'''/icons/private_open.png");                      break;                  case ChannelType.Public:                      uri = new Uri("pack://application:'''/icons/public.png");                      break;              }
Missing Default,slimCat.Utilities,FilteredCollection<T;TR>,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\FilteredCollection.cs,OnCollectionChanged,The following switch statement is missing a default case: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                  {                      var items = e.NewItems.Cast<T>();                      if (IsFiltering)                          items = items.Where(ActiveFilter);                        items.Each(item => Collection.Add(item));                      break;                  }                    case NotifyCollectionChangedAction.Reset:                  {                      Collection.Clear();                      break;                  }                    case NotifyCollectionChangedAction.Remove:                  {                      e.OldItems.OfType<T>().Each(item => Collection.Remove(item));                      break;                  }              }
Missing Default,slimCat.Utilities,GeneralExtensions,C:\repos\WreckedAvent_slimCat\slimCat\Utilities\Extensions\GeneralExtensions.cs,NotifyWithSettings,The following switch statement is missing a default case: switch (notifyLevel)              {                  case ChannelSettingsModel.NotifyLevel.NoNotification:                      break;                  case ChannelSettingsModel.NotifyLevel.NotificationOnly:                      toasts.AddNotification(notification);                      break;                  case ChannelSettingsModel.NotifyLevel.NotificationAndToast:                      toasts.AddNotification(notification);                      toasts.FlashWindow();                      toasts.ShowToast();                      break;                  case ChannelSettingsModel.NotifyLevel.NotificationAndSound:                      toasts.AddNotification(notification);                      toasts.FlashWindow();                      toasts.PlaySound();                      toasts.ShowToast();                      break;              }
Missing Default,slimCat.ViewModels,ManageListsViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channel Bar\ManageListsViewModel.cs,ManageListsViewModel,The following switch statement is missing a default case: switch (thisArguments.ListArgument)                      {                          case ListKind.Interested:                              OnPropertyChanged("Interested");                              OnPropertyChanged("NotInterested");                              OnPropertyChanged("SearchResults");                              break;                          case ListKind.Ignored:                              OnPropertyChanged("Ignored");                              OnPropertyChanged("SearchResults");                              break;                          case ListKind.NotInterested:                              OnPropertyChanged("NotInterested");                              OnPropertyChanged("Interested");                              OnPropertyChanged("SearchResults");                              break;                          case ListKind.Bookmark:                              OnPropertyChanged("Bookmarks");                              OnPropertyChanged("SearchResults");                              break;                          case ListKind.Friend:                              OnPropertyChanged("Friends");                              OnPropertyChanged("SearchResults");                              break;                          case ListKind.SearchResult:                              OnPropertyChanged("SearchResults");                              OnPropertyChanged("HasSearchResults");                              break;                      }
Missing Default,slimCat.ViewModels,ChannelManagementViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\UI Parts\ChannelManagementViewModel.cs,UpdateDescription,The following switch statement is missing a default case: switch (e.PropertyName)                  {                      case "Description":                          description = model.Description;                          OnPropertyChanged("Description");                          break;                      case "Type":                          OnPropertyChanged("ToggleRoomTip");                          OnPropertyChanged("ToggleRoomTypeString");                          OnPropertyChanged("RoomTypeString");                          break;                      case "Mode":                          OnPropertyChanged("RoomModeString");                          break;                  }
Missing Default,slimCat.ViewModels,ChannelbarViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channel Bar\ChannelBarViewModel.cs,NavigateToTabEvent,The following switch statement is missing a default case: switch (args as string)              {                  case "Channels":                  {                      RegionManager.Regions[TabViewRegion].RequestNavigate(ChannelsTabViewModel.ChannelsTabView);                      break;                  }                    case "Users":                  {                      RegionManager.Regions[TabViewRegion].RequestNavigate(UsersTabViewModel.UsersTabView);                      break;                  }                    case "Notifications":                  {                      RegionManager.Regions[TabViewRegion].RequestNavigate(NotificationsTabViewModel.NotificationsTabView);                      HasUpdate = false;                      break;                  }                    case "Global":                  {                      RegionManager.Regions[TabViewRegion].RequestNavigate(GlobalTabViewModel.GlobalTabView);                      break;                  }                    case "ManageLists":                  {                      RegionManager.Regions[TabViewRegion].RequestNavigate(ManageListsViewModel.ManageListsTabView);                      break;                  }                    case "Search":                  {                      RegionManager.Regions[TabViewRegion].RequestNavigate(SearchTabViewModel.SearchTabView);                      break;                  }                    case "NoTab":                  {                      foreach (var view in RegionManager.Regions[TabViewRegion].Views)                          RegionManager.Regions[TabViewRegion].Remove(view);                        break;                  }              }
Missing Default,slimCat.ViewModels,GeneralChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channels\GeneralChannelViewModel.cs,OnModelPropertyChanged,The following switch statement is missing a default case: switch (e.PropertyName)              {                  case "Description":                      OnPropertyChanged("Description");                      ShowChannelDescription = ((GeneralChannelModel) Model).ShowChannelDescription;                      break;                  case "Type":                      OnPropertyChanged("ChannelTypeString"); // fixes laggy room type change                      break;                  case "Moderators":                      OnPropertyChanged("HasPermissions"); // fixes laggy permissions                      break;                  case "Mode":                      if (Model.Mode == ChannelMode.Ads && IsDisplayingChat)                          IsDisplayingChat = false;                        if (Model.Mode == ChannelMode.Chat && IsDisplayingAds)                          IsDisplayingChat = true;                        OnPropertyChanged("CanSwitch");                      break;                  case "IsSelected":                      if (Model.IsSelected)                      {                          if (isDisplayingChat && Model.Messages.Any())                              Model.Messages.Last().IsLastViewed = false;                          else if (IsDisplayingAds && Model.Ads.Any())                              Model.Ads.Last().IsLastViewed = false;                            var chanModel = (GeneralChannelModel) Model;                          if (!chanModel.ShowChannelDescription) break;                            ShowChannelDescription = false;                          chanModel.LastChannelDescription = chanModel.Description.GetHashCode();                            SettingsService.UpdateSettingsFile(                              ChannelSettings' ChatModel.CurrentCharacter.Name' Model.Title' Model.Id);                          break;                      }                        if (isDisplayingChat && Model.Messages.Any())                      {                          Model.Messages.Each(x => x.IsLastViewed = false);                          Model.Messages.Last().IsLastViewed = true;                      }                      else if (IsDisplayingAds && Model.Ads.Any())                      {                          Model.Ads.Each(x => x.IsLastViewed = false);                          Model.Ads.Last().IsLastViewed = true;                      }                      break;              }
Missing Default,slimCat.ViewModels,GeneralChannelViewModel,C:\repos\WreckedAvent_slimCat\slimCat\ViewModels\Channels\GeneralChannelViewModel.cs,OnPropertyChanged,The following switch statement is missing a default case: switch (e.PropertyName)              {                  case "Message":                      OnPropertyChanged("StatusString"); // keep the counter updated                      break;                  case "SearchSettings":                  {                      if (!SearchSettings.IsChangingSettings)                          updateSearch.Defer(Constants.SearchDebounce);                      break;                  }                  case "IsSearching":                  {                      messageManager.IsFiltering = isSearching;                      break;                  }              }
Missing Default,slimCat.Views,ChannelbarView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ChannelBarView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ManageListsButton = ((slimCat.Views.ManageButtonView)(target));              return;              case 2:              this.NotificationButton = ((slimCat.Views.NotificationsButtonView)(target));              return;              }
Missing Default,slimCat.Views,ChannelTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ChannelListView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.PopupAnchor = ((System.Windows.Controls.ListBox)(target));                            #line 104 "..\..\..\..\Views\Channel Bar\ChannelListView.xaml"              this.PopupAnchor.Loaded += new System.Windows.RoutedEventHandler(this.OnLoaded);                            #line default              #line hidden              return;              }
Missing Default,slimCat.Views,NotificationsTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\NotificationsTabView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              }
Missing Default,slimCat.Views,UsersTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ChannelUserListView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 2:              this.PopupAnchor = ((System.Windows.Controls.ListBox)(target));              return;              }
Missing Default,slimCat.Views,UsersTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ChannelUserListView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 42 "..\..\..\..\Views\Channel Bar\ChannelUserListView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp);                            #line default              #line hidden              break;              }
Missing Default,slimCat.Views,GlobalTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\GlobalUserListView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 2:              this.PopupAnchor = ((System.Windows.Controls.ListBox)(target));              return;              }
Missing Default,slimCat.Views,GlobalTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\GlobalUserListView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 42 "..\..\..\..\Views\Channel Bar\GlobalUserListView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp);                            #line default              #line hidden              break;              }
Missing Default,slimCat.Views,ManageListsTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ManageListsView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 2:              this.PopupAnchor = ((System.Windows.Controls.StackPanel)(target));              return;              }
Missing Default,slimCat.Views,ManageListsTabView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channel Bar\ManageListsView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 42 "..\..\..\..\Views\Channel Bar\ManageListsView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp);                            #line default              #line hidden              break;              }
Missing Default,slimCat.Views,HomeSettingsView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Home Channel\HomeSettingsView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ShowNotificationsCheckbox = ((System.Windows.Controls.CheckBox)(target));              return;              }
Missing Default,slimCat.Views,BrowserButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\BrowserButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BrowserButton = ((slimCat.Views.BrowserButtonView)(target));              return;              }
Missing Default,slimCat.Views,ProfileButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\ProfileButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ProfileButton = ((slimCat.Views.ProfileButtonView)(target));              return;              }
Missing Default,slimCat.Views,AutoButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\AutoButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.AutoButton = ((slimCat.Views.AutoButtonView)(target));              return;              }
Missing Default,slimCat.Views,ChannelsButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\ChannelsButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ChannelsButton = ((slimCat.Views.ChannelsButtonView)(target));              return;              }
Missing Default,slimCat.Views,ChatButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\ChatButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ChatButton = ((slimCat.Views.ChatButtonView)(target));              return;              }
Missing Default,slimCat.Views,CloseButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\CloseButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.CloseButton = ((slimCat.Views.CloseButtonView)(target));              return;              }
Missing Default,slimCat.Views,ChannelTypeButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\ChannelTypeSwitchButton.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ChannelTypeSwitchButton = ((slimCat.Views.ChannelTypeButtonView)(target));              return;              }
Missing Default,slimCat.Views,LogoutButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\LogoutButtionView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.LogoutButton = ((slimCat.Views.LogoutButtonView)(target));              return;              }
Missing Default,slimCat.Views,ChatSearchButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\ChatSearchButton.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ChatSearchButton = ((slimCat.Views.ChatSearchButtonView)(target));              return;              }
Missing Default,slimCat.Views,UpDownButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\UpDownButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.UpDownButton = ((slimCat.Views.UpDownButtonView)(target));              return;              }
Missing Default,slimCat.Views,MarkupButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\MarkupButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.MarkupButton = ((slimCat.Views.MarkupButtonView)(target));              return;              }
Missing Default,slimCat.Views,ManageButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\ManageListsButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ManageButton = ((slimCat.Views.ManageButtonView)(target));              return;              }
Missing Default,slimCat.Views,PinButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\PinButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.PinButton = ((slimCat.Views.PinButtonView)(target));              return;              }
Missing Default,slimCat.Views,GlobalButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\GlobalButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.GlobalButton = ((slimCat.Views.GlobalButtonView)(target));              return;              }
Missing Default,slimCat.Views,MoreButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\MoreButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.MoreButton = ((slimCat.Views.MoreButtonView)(target));              return;              }
Missing Default,slimCat.Views,NotificationsButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\NotificationsButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.NotificationsButton = ((slimCat.Views.NotificationsButtonView)(target));              return;              }
Missing Default,slimCat.Views,SearchButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\SearchButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.SearchButton = ((slimCat.Views.SearchButtonView)(target));              return;              }
Missing Default,slimCat.Views,StatsButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\StatsButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.StatsButton = ((slimCat.Views.StatsButtonView)(target));              return;              }
Missing Default,slimCat.Views,UserlistButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\UserListButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.UserlistButton = ((slimCat.Views.UserlistButtonView)(target));              return;              }
Missing Default,slimCat.Views,CharacterUpdateView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\CharacterUpdateView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 33 "..\..\..\..\Views\UI Parts\CharacterUpdateView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp);                            #line default              #line hidden              return;              }
Missing Default,slimCat.Views,EditButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\EditButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.EditButton = ((slimCat.Views.EditButtonView)(target));              return;              }
Missing Default,slimCat.Views,FileButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\FileButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.FileButton = ((slimCat.Views.FileButtonView)(target));              return;              }
Missing Default,slimCat.Views,FolderButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\FolderButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.FolderButton = ((slimCat.Views.FolderButtonView)(target));              return;              }
Missing Default,slimCat.Views,RestartButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\RestartButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.RestartButton = ((slimCat.Views.RestartButtonView)(target));              return;              }
Missing Default,slimCat.Views,ObservingFlowDocumentReader,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ObservingFlowDocumentReader.xaml.cs,OnMessagesUpdate,The following switch statement is missing a default case: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      e.NewItems.Cast<IViewableObject>()                          .Select(x => x.View)                          .Each(x => AddAtAsync(e.NewStartingIndex' x));                      break;                    case NotifyCollectionChangedAction.Reset:                      Dispatcher.Invoke(() => Messages.Blocks.Clear());                      break;                    case NotifyCollectionChangedAction.Remove:                      scroller.Stick();                      Messages.Blocks.RemoveAt(e.OldStartingIndex);                      scroller.ScrollToStick();                      break;              }
Missing Default,slimCat.Views,ObservingFlowDocumentReader,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ObservingFlowDocumentReader.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Root = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 2:              this.Messages = ((System.Windows.Documents.FlowDocument)(target));                            #line 13 "..\..\..\..\Views\UI Parts\ObservingFlowDocumentReader.xaml"              this.Messages.Loaded += new System.Windows.RoutedEventHandler(this.OnLoad);                            #line default              #line hidden                            #line 14 "..\..\..\..\Views\UI Parts\ObservingFlowDocumentReader.xaml"              this.Messages.PreviewMouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.OnMouseWheelPreview);                            #line default              #line hidden              return;              }
Missing Default,slimCat.Views,RightClickMenu,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\RightClickMenu.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 98 "..\..\..\..\Views\UI Parts\RightClickMenu.xaml"              ((System.Windows.Controls.ScrollViewer)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.OnIsVisibleChanged);                            #line default              #line hidden              return;              }
Missing Default,slimCat.Views,SearchBoxView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\SearchBoxView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Entry = ((slimCat.Views.ImageTextBox)(target));              return;              case 2:              this.FilterButton = ((System.Windows.Controls.Button)(target));              return;              }
Missing Default,slimCat.Views,ChannelTextBoxEntryView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ChannelTextBoxEntryView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Entry = ((slimCat.Views.ImageTextBox)(target));              return;              }
Missing Default,slimCat.Views,GeneralChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\GeneralChannelView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.HeaderRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.HeaderRowGrid = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.ChannelDescriptionExpander = ((System.Windows.Controls.Expander)(target));                            #line 35 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              this.ChannelDescriptionExpander.Collapsed += new System.Windows.RoutedEventHandler(this.OnChannelDescriptionCollapsed);                            #line default              #line hidden              return;              case 5:                            #line 84 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnHeaderRowResizeRequested);                            #line default              #line hidden                            #line 85 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.OnHeaderRowDragging);                            #line default              #line hidden                            #line 86 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).DragCompleted += new System.Windows.Controls.Primitives.DragCompletedEventHandler(this.OnHeaderRowDragCompleted);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:                            #line 129 "..\..\..\..\Views\Channels\GeneralChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              case 8:              this.EntryBoxRowGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Missing Default,slimCat.Views,LoginView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Full Screen\LoginView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 35 "..\..\..\..\Views\Full Screen\LoginView.xaml"              ((System.Windows.Controls.PasswordBox)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.OnPasswordKeyDown);                            #line default              #line hidden                            #line 36 "..\..\..\..\Views\Full Screen\LoginView.xaml"              ((System.Windows.Controls.PasswordBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.OnPasswordKeyDown);                            #line default              #line hidden              return;              }
Missing Default,slimCat.Views,MessageView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\ChannelMessageView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Copy_BBcode = ((System.Windows.Controls.MenuItem)(target));              return;              case 2:                            #line 52 "..\..\..\..\Views\UI Parts\ChannelMessageView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp);                            #line default              #line hidden              return;              }
Missing Default,slimCat.Views,SettingsButtonView,C:\repos\WreckedAvent_slimCat\slimCat\Views\UI Parts\Buttons\SettingsButtonView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.SettingsButton = ((slimCat.Views.SettingsButtonView)(target));              return;              }
Missing Default,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.CharacterStatusDisplayer = ((System.Windows.Controls.Expander)(target));              return;              case 4:              this.ProfileHeaderExpander = ((System.Windows.Controls.Expander)(target));              return;              case 5:                            #line 231 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.ListBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.OnSelected);                            #line default              #line hidden              return;              case 6:              this.PopupAnchor = ((slimCat.Views.ObservingFlowDocumentReader)(target));              return;              case 7:              this.Reader = ((System.Windows.Controls.FlowDocumentReader)(target));                            #line 255 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.Reader.PreviewMouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.OnProfileMouseWheelPreview);                            #line default              #line hidden              return;              case 8:              this.ProfileParagraph = ((System.Windows.Documents.Paragraph)(target));                            #line 329 "..\..\..\..\Views\Channels\PMChannelView.xaml"              this.ProfileParagraph.Loaded += new System.Windows.RoutedEventHandler(this.CloseImage);                            #line default              #line hidden              return;              case 9:                            #line 511 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              }
Missing Default,slimCat.Views,PmChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Channels\PMChannelView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 41 "..\..\..\..\Views\Channels\PMChannelView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp);                            #line default              #line hidden              break;              }
Missing Default,slimCat.Views,UserbarView,C:\repos\WreckedAvent_slimCat\slimCat\Views\User Bar\UserbarView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\..\Views\User Bar\UserbarView.xaml"              ((slimCat.Views.UserbarView)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnMouseLeave);                            #line default              #line hidden              return;              case 2:              this.PopupAnchor = ((System.Windows.Controls.Border)(target));              return;              }
Missing Default,slimCat.Views,UserbarView,C:\repos\WreckedAvent_slimCat\slimCat\Views\User Bar\UserbarView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 3:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonDownEvent;                            #line 247 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.OnPreviewMouseClick);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseMoveEvent;                            #line 248 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.OnMouseMove);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.DropEvent;                            #line 249 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.OnPmModelDragDrop);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewDragEnterEvent;                            #line 250 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.CheckAsPm);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewDragOverEvent;                            #line 251 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.CheckAsPm);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 4:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonDownEvent;                            #line 266 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.OnPreviewMouseClick);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.DropEvent;                            #line 267 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.OnChannelModelDragDrop);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseMoveEvent;                            #line 268 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.OnMouseMove);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewDragEnterEvent;                            #line 269 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.CheckAsChannel);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewDragOverEvent;                            #line 270 "..\..\..\..\Views\User Bar\UserbarView.xaml"              eventSetter.Handler = new System.Windows.DragEventHandler(this.CheckAsChannel);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Missing Default,slimCat.Views,HomeChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Home Channel\HomeChannelView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 2:              this.EntryBoxRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:                            #line 383 "..\..\..\..\Views\Home Channel\HomeChannelView.xaml"              ((System.Windows.Controls.GridSplitter)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.OnEntryBoxResizeRequested);                            #line default              #line hidden              return;              }
Missing Default,slimCat.Views,HomeChannelView,C:\repos\WreckedAvent_slimCat\slimCat\Views\Home Channel\HomeChannelView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 110 "..\..\..\..\Views\Home Channel\HomeChannelView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).MouseRightButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.OnMouseRightButtonUp);                            #line default              #line hidden              break;              }
