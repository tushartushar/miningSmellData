Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CallibrationApp,CalibrationUI,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\CalibrationUI.cs,setVoltageButton_Click,Cyclomatic complexity of the method is 28
Complex Method,CallibrationApp,CalibrationUI,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\CalibrationUI.cs,setCurrentButton_Click,Cyclomatic complexity of the method is 28
Long Statement,CallibrationApp,CalibrationUI,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\CalibrationUI.cs,HidBatteryAnalyzerManagerOnAnalogDataReceived,The length of the statement  "	ThreadHelperClass.SetText (this' voltageConstantlabel' _hidBatteryAnalyzerManager.VoltageConstant.ToString ("0.0000000")); " is 122.
Long Statement,CallibrationApp,CalibrationUI,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\CalibrationUI.cs,HidBatteryAnalyzerManagerOnAnalogDataReceived,The length of the statement  "	ThreadHelperClass.SetText (this' currentConstantLabel' _hidBatteryAnalyzerManager.CurrentConstant.ToString ("0.0000000")); " is 122.
Long Statement,CallibrationApp,CalibrationUI,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\CalibrationUI.cs,setVoltageButton_Click,The length of the statement  "		var result = MessageBox.Show ("Are you sure to Calibrate Voltage?"' "Warning!"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning); " is 129.
Long Statement,CallibrationApp,CalibrationUI,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\CalibrationUI.cs,setVoltageButton_Click,The length of the statement  "		_hidBatteryAnalyzerManager.CalibrateVoltage (_actualVoltage1' _deviceVoltageData1' _actualVoltage2' _deviceVoltageData2); " is 121.
Long Statement,CallibrationApp,CalibrationUI,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\CalibrationUI.cs,setVoltageButton_Click,The length of the statement  "		MessageBox.Show ("Voltage calibration was successfull!"' "Information"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 122.
Long Statement,CallibrationApp,CalibrationUI,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\CalibrationUI.cs,setCurrentButton_Click,The length of the statement  "		var result = MessageBox.Show ("Are you sure to Calibrate Current?"' "Warning!"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning); " is 129.
Long Statement,CallibrationApp,CalibrationUI,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\CalibrationUI.cs,setCurrentButton_Click,The length of the statement  "		_hidBatteryAnalyzerManager.CalibrateCurrent (_actualCurrent1' _deviceCurrentData1' _actualCurrent2' _deviceCurrentData2); " is 121.
Long Statement,CallibrationApp,CalibrationUI,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\CalibrationUI.cs,setCurrentButton_Click,The length of the statement  "		MessageBox.Show ("Current calibration was successfull!"' "Information"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 122.
Long Statement,CallibrationApp,HidBatteryAnalyzerManager,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\HidBatteryAnalyzerManager.cs,WriteVoltageCalibrationData,The length of the statement  "	Array.Copy (BitConverter.GetBytes (constant)' 0' calibrationData' WRITE_INDEX_OF_VOLTAGE_CONSTANT' SIZE_OF_VOLTAGE_CONSTANT); " is 125.
Long Statement,CallibrationApp,HidBatteryAnalyzerManager,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\HidBatteryAnalyzerManager.cs,WriteVoltageCalibrationData,The length of the statement  "	Array.Copy (BitConverter.GetBytes (vOffset)' 0' calibrationData' WRITE_INDEX_OF_VOLTAGE_OFFSET' SIZE_OF_VOLTAGE_OFFSET); " is 120.
Long Statement,CallibrationApp,HidBatteryAnalyzerManager,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\HidBatteryAnalyzerManager.cs,WriteVoltageCalibrationData,The length of the statement  "	Array.Copy (BitConverter.GetBytes ((short)(0))' 0' calibrationData' WRITE_INDEX_OF_CURRENT_OFFSET' SIZE_OF_CURRENT_OFFSET); " is 123.
Long Statement,CallibrationApp,HidBatteryAnalyzerManager,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\HidBatteryAnalyzerManager.cs,WriteCurrentCalibrationData,The length of the statement  "	Array.Copy (BitConverter.GetBytes ((short)(0))' 0' calibrationData' WRITE_INDEX_OF_VOLTAGE_OFFSET' SIZE_OF_VOLTAGE_OFFSET); " is 123.
Long Statement,CallibrationApp,HidBatteryAnalyzerManager,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\HidBatteryAnalyzerManager.cs,WriteCurrentCalibrationData,The length of the statement  "	Array.Copy (BitConverter.GetBytes (constant)' 0' calibrationData' WRITE_INDEX_OF_CURRENT_CONSTANT' SIZE_OF_CURRENT_CONSTANT); " is 125.
Long Statement,CallibrationApp,HidBatteryAnalyzerManager,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\HidBatteryAnalyzerManager.cs,WriteCurrentCalibrationData,The length of the statement  "	Array.Copy (BitConverter.GetBytes (cOffset)' 0' calibrationData' WRITE_INDEX_OF_CURRENT_OFFSET' SIZE_OF_CURRENT_OFFSET); " is 120.
Empty Catch Block,CallibrationApp,ThreadHelperClass,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\ThreadHelperClass.cs,SetText,The method has an empty catch block.
Magic Number,CallibrationApp,CalibrationUI,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\CalibrationUI.cs,CalibrationUI,The following statement contains a magic number: _hidBatteryAnalyzerManager = new HidBatteryAnalyzerManager (_hidDevice' 50);  
Magic Number,CallibrationApp,HidBatteryAnalyzerManager,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\HidBatteryAnalyzerManager.cs,HidBatteryAnalyzerManager,The following statement contains a magic number: _sizeOfVoltageBuffer = sizeOfBuffer * 25;  
Magic Number,CallibrationApp,HidBatteryAnalyzerManager,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\HidBatteryAnalyzerManager.cs,HidBatteryAnalyzerManager,The following statement contains a magic number: _requiredSizeOfVoltageBuffer = sizeOfBuffer * 25;  
Magic Number,CallibrationApp,HidBatteryAnalyzerManager,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\HidBatteryAnalyzerManager.cs,GetIntArray,The following statement contains a magic number: for (int i = 0; i < result.Length; i++) {  	result [i] = BitConverter.ToInt16 (bytes' startIndex + (i * 2));  }  
Magic Number,CallibrationApp,HidBatteryAnalyzerManager,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\HidBatteryAnalyzerManager.cs,GetIntArray,The following statement contains a magic number: result [i] = BitConverter.ToInt16 (bytes' startIndex + (i * 2));  
Magic Number,CallibrationApp,RingBuffer,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\RingBuffer.cs,PutBlocking,The following statement contains a magic number: lock (_lockObject) {  	for (int i = 0; i < length; i++) {  		while (LengthToRead == _bufferSize) {  			Monitor.Wait (_lockObject' 100);  		}  		_buffer [_writeIndex] = data [startIndex + i];  		_writeIndex = (_writeIndex + 1) % _bufferSize;  		LengthToRead++;  		Monitor.Pulse (_lockObject);  	}  }  
Magic Number,CallibrationApp,RingBuffer,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\RingBuffer.cs,PutBlocking,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	while (LengthToRead == _bufferSize) {  		Monitor.Wait (_lockObject' 100);  	}  	_buffer [_writeIndex] = data [startIndex + i];  	_writeIndex = (_writeIndex + 1) % _bufferSize;  	LengthToRead++;  	Monitor.Pulse (_lockObject);  }  
Magic Number,CallibrationApp,RingBuffer,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\RingBuffer.cs,PutBlocking,The following statement contains a magic number: while (LengthToRead == _bufferSize) {  	Monitor.Wait (_lockObject' 100);  }  
Magic Number,CallibrationApp,RingBuffer,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\RingBuffer.cs,PutBlocking,The following statement contains a magic number: Monitor.Wait (_lockObject' 100);  
Magic Number,CallibrationApp,RingBuffer,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\RingBuffer.cs,GetBlocking,The following statement contains a magic number: lock (_lockObject) {  	for (int i = 0; i < length; i++) {  		while (LengthToRead == 0) {  			Monitor.Wait (_lockObject' 100);  		}  		data [i] = _buffer [_readIndex];  		_readIndex = (_readIndex + 1) % _bufferSize;  		LengthToRead--;  		Monitor.Pulse (_lockObject);  	}  }  
Magic Number,CallibrationApp,RingBuffer,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\RingBuffer.cs,GetBlocking,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	while (LengthToRead == 0) {  		Monitor.Wait (_lockObject' 100);  	}  	data [i] = _buffer [_readIndex];  	_readIndex = (_readIndex + 1) % _bufferSize;  	LengthToRead--;  	Monitor.Pulse (_lockObject);  }  
Magic Number,CallibrationApp,RingBuffer,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\RingBuffer.cs,GetBlocking,The following statement contains a magic number: while (LengthToRead == 0) {  	Monitor.Wait (_lockObject' 100);  }  
Magic Number,CallibrationApp,RingBuffer,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\RingBuffer.cs,GetBlocking,The following statement contains a magic number: Monitor.Wait (_lockObject' 100);  
Missing Default,CallibrationApp,CalibrationUI,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\CalibrationUI.cs,setVoltageButton_Click,The following switch statement is missing a default case: switch (_voltageCalibrationStage) {  case CalibrationStage.Initial:  	var result = MessageBox.Show ("Are you sure to Calibrate Voltage?"' "Warning!"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning);  	if (result != DialogResult.Yes)  		return;  	actualVoltageTextBox.Text = "";  	setVoltageButton.Text = "Adjust Voltage1 (12 V)";  	actualVoltageTextBox.Enabled = true;  	_voltageCalibrationStage = CalibrationStage.Value1;  	break;  case CalibrationStage.Value1:  	if (!float.TryParse (actualVoltageTextBox.Text' out _actualVoltage1)) {  		MessageBox.Show ("Enter value in correct format"' "Error!"' MessageBoxButtons.OK' MessageBoxIcon.Error);  		return;  	}  	_deviceVoltageData1 = _hidBatteryAnalyzerManager.ActualVoltageValue;  	actualVoltageTextBox.Text = "";  	setVoltageButton.Text = "Adjust Voltage2 (24 V)";  	actualVoltageTextBox.Enabled = true;  	_voltageCalibrationStage = CalibrationStage.Value2;  	break;  case CalibrationStage.Value2:  	if (!float.TryParse (actualVoltageTextBox.Text' out _actualVoltage2)) {  		MessageBox.Show ("Enter value in correct format"' "Error!"' MessageBoxButtons.OK' MessageBoxIcon.Error);  		return;  	}  	_deviceVoltageData2 = _hidBatteryAnalyzerManager.ActualVoltageValue;  	actualVoltageTextBox.Text = "";  	setVoltageButton.Text = "Start Calibration";  	actualVoltageTextBox.Enabled = false;  	_voltageCalibrationStage = CalibrationStage.Initial;  	_hidBatteryAnalyzerManager.CalibrateVoltage (_actualVoltage1' _deviceVoltageData1' _actualVoltage2' _deviceVoltageData2);  	MessageBox.Show ("Voltage calibration was successfull!"' "Information"' MessageBoxButtons.OK' MessageBoxIcon.Information);  	break;  }  
Missing Default,CallibrationApp,CalibrationUI,C:\repos\jonayet_voltage_current_graph_app\CallibrationApp\CalibrationUI.cs,setCurrentButton_Click,The following switch statement is missing a default case: switch (_currentCalibrationStage) {  case CalibrationStage.Initial:  	var result = MessageBox.Show ("Are you sure to Calibrate Current?"' "Warning!"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning);  	if (result != DialogResult.Yes)  		return;  	actualCurrentTextBox.Text = "";  	//_hidBatteryAnalyzerManager.WriteVoltageCalibrationData(1' 0);  	setCurrentButton.Text = "Adjust Current1 (5 A)";  	actualCurrentTextBox.Enabled = true;  	_currentCalibrationStage = CalibrationStage.Value1;  	break;  case CalibrationStage.Value1:  	if (!float.TryParse (actualCurrentTextBox.Text' out _actualCurrent1)) {  		MessageBox.Show ("Enter value in correct format"' "Error!"' MessageBoxButtons.OK' MessageBoxIcon.Error);  		return;  	}  	_deviceCurrentData1 = _hidBatteryAnalyzerManager.ActualCurrentValue;  	actualCurrentTextBox.Text = "";  	setCurrentButton.Text = "Adjust Current2 (20 A)";  	actualCurrentTextBox.Enabled = true;  	_currentCalibrationStage = CalibrationStage.Value2;  	break;  case CalibrationStage.Value2:  	if (!float.TryParse (actualCurrentTextBox.Text' out _actualCurrent2)) {  		MessageBox.Show ("Enter value in correct format"' "Error!"' MessageBoxButtons.OK' MessageBoxIcon.Error);  		return;  	}  	_deviceCurrentData2 = _hidBatteryAnalyzerManager.ActualCurrentValue;  	actualCurrentTextBox.Text = "";  	setCurrentButton.Text = "Start Calibration";  	actualCurrentTextBox.Enabled = false;  	_currentCalibrationStage = CalibrationStage.Initial;  	_hidBatteryAnalyzerManager.CalibrateCurrent (_actualCurrent1' _deviceCurrentData1' _actualCurrent2' _deviceCurrentData2);  	MessageBox.Show ("Current calibration was successfull!"' "Information"' MessageBoxButtons.OK' MessageBoxIcon.Information);  	break;  }  
