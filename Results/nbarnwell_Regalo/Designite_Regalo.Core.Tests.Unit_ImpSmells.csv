Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Regalo.Core.Tests.Unit,AggregateTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\AggregateTests.cs,InvokingBehaviour_GivenAggregateWithInvariantLogic_ShouldFailIfInvariantIsNotSatisfied,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => user.ChangePassword("newpassword")' "Expected exception stating the new password must be different the the previous one.");" is 170.
Long Statement,Regalo.Core.Tests.Unit,AggregateTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\AggregateTests.cs,ApplyingEventsThatHaveBaseType_GivenAnyAggregateObject_ShouldCallAppropriateApplyMethodForEachTypeInEventTypeHierarchy,The length of the statement  "            var events = new object[] { new UserRegistered(user.Id)' new UserChangedPassword("newpassword")' new UserChangedPassword("newerpassword") };" is 140.
Long Statement,Regalo.Core.Tests.Unit,AggregateTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\AggregateTests.cs,ApplyingPreviouslyGeneratedEvents_GivenNewAggregateObject_ShouldBringAggregateBackToPreviousState,The length of the statement  "            var events = new object[] {new UserRegistered(user.Id)' new UserChangedPassword("newpassword")' new UserChangedPassword("newerpassword") };" is 139.
Long Statement,Regalo.Core.Tests.Unit,AggregateTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\AggregateTests.cs,ApplyingPreviouslyGeneratedEvents_GivenNewAggregateObject_ShouldBringAggregateBackToPreviousState,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => user.ChangePassword("newerpassword")' "Expected exception stating the new password must be different the the previous one' indicating that previous events have replayed successfully.");" is 232.
Long Statement,Regalo.Core.Tests.Unit,AggregateTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\AggregateTests.cs,ApplyingPreviousEvents_GivenEventsThatWouldNotSatisfyCurrentInvariantLogic_ShouldNotFail,The length of the statement  "            var events = new object[] {new UserRegistered(userId)' new UserChangedPassword("newpassword")' new UserChangedPassword("newpassword") };" is 136.
Long Statement,Regalo.Core.Tests.Unit,AggregateTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\AggregateTests.cs,ApplyingPreviousEvents_GivenEventsThatWouldNotSatisfyCurrentInvariantLogic_ShouldNotFail,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => user.ChangePassword("newpassword")' "Expected exception stating the new password must be different the the previous one' indicating that previous events have replayed successfully.");" is 230.
Long Statement,Regalo.Core.Tests.Unit,AggregateTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\AggregateTests.cs,InvokingBehaviourOnObjectWithNoIdThatDoesntSetTheId_ShouldFail,The length of the statement  "            var events = new object[] { /*new UserRegistered(user.Id)' */new UserChangedPassword("newpassword")' new UserChangedPassword("newpassword") };" is 142.
Long Statement,Regalo.Core.Tests.Unit,RepositoryTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\RepositoryTests.cs,GivenPopulatedEventStore_WhenLoadingAggregate_ThenRepositoryShouldRebuildThatAggregate,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => user.ChangePassword("newnewpassword")); // Should fail if the user's events were correctly applied" is 145.
Long Statement,Regalo.Core.Tests.Unit,RepositoryTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\RepositoryTests.cs,GivenNewAggreateWithNoEvents_WhenSaving_ThenShouldNotBotherCheckingConcurrency,The length of the statement  "            concurrencyMonitor.Verify(monitor => monitor.CheckForConflicts(It.IsAny<IEnumerable<object>>()' It.IsAny<IEnumerable<object>>())' Times.Never());" is 145.
Long Statement,Regalo.Core.Tests.Unit,RepositoryTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\RepositoryTests.cs,GivenNewAggreateWithNewEvents_WhenSaving_ThenShouldNotBotherCheckingConcurrency,The length of the statement  "            concurrencyMonitor.Verify(monitor => monitor.CheckForConflicts(It.IsAny<IEnumerable<object>>()' It.IsAny<IEnumerable<object>>())' Times.Never());" is 145.
Long Statement,Regalo.Core.Tests.Unit,RepositoryTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\RepositoryTests.cs,GivenAggregateWithUncommittedEvents_WhenSaved_ThenBaseVersionShouldMatchCurrentVersion,The length of the statement  "            Assert.AreEqual(currentVersion' user.BaseVersion' "User's base version has not been updated to match current version on successful save.");" is 139.
Long Statement,Regalo.Core.Tests.Unit,InMemoryEventStoreTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\InMemoryEventStoreTests.cs,GivenEventStorePopulatedWithEventsForMultipleAggregates_WhenLoadingEventsForAnAggregate_ThenShouldReturnEventsForThatAggregate,The length of the statement  "            CollectionAssert.AreEqual(user1.GetUncommittedEvents()' eventsForUser1' "Store didn't return user1's events properly."); " is 120.
Magic Number,Regalo.Core.Tests.Unit,AggregateTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\AggregateTests.cs,ApplyingEventsThatHaveBaseType_GivenAnyAggregateObject_ShouldCallAppropriateApplyMethodForEachTypeInEventTypeHierarchy,The following statement contains a magic number: Assert.AreEqual(3' user.ChangeCount);
Magic Number,Regalo.Core.Tests.Unit,InMemoryEventStoreTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\InMemoryEventStoreTests.cs,GivenEventStorePopulatedWithManyEventsForAnAggregate_WhenLoadingForSpecificVersion_ThenShouldOnlyLoadEventsUpToAndIncludingThatVersion,The following statement contains a magic number: IEnumerable<object> version3 = store.Load(id' ((Event)allEvents[2]).Version);
Magic Number,Regalo.Core.Tests.Unit,InMemoryEventStoreTests,C:\research\architectureSmells\repos\nbarnwell_Regalo\Regalo.Core.Tests.Unit\InMemoryEventStoreTests.cs,GivenEventStorePopulatedWithManyEventsForAnAggregate_WhenLoadingForSpecificVersion_ThenShouldOnlyLoadEventsUpToAndIncludingThatVersion,The following statement contains a magic number: CollectionAssert.AreEqual(allEvents.Take(3)' version3);
