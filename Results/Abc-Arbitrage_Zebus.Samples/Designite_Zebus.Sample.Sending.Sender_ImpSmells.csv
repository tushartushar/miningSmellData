Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Zebus.Sample.Sending.Sender,MessageHandler,C:\repos\Abc-Arbitrage_Zebus.Samples\src\2.Sending a command\Zebus.Sample.Sending.Sender\MessageHandler.cs,Handle,The length of the statement  "	_log.InfoFormat ("There is currently {0} things done ({1} just added)"' message.TotalThingsDoneCount' message.NewThingsDoneCount); " is 130.
Long Statement,Zebus.Sample.Sending.Sender,Publisher,C:\repos\Abc-Arbitrage_Zebus.Samples\src\2.Sending a command\Zebus.Sample.Sending.Sender\Publisher.cs,Run,The length of the statement  "	var busFactory = new BusFactory ().WithScan ().WithConfiguration ("tcp://localhost:129"' "Demo").WithPeerId ("Publisher.*"); " is 124.
Magic Number,Zebus.Sample.Sending.Sender,Publisher,C:\repos\Abc-Arbitrage_Zebus.Samples\src\2.Sending a command\Zebus.Sample.Sending.Sender\Publisher.cs,Run,The following statement contains a magic number: using (var bus = busFactory.CreateAndStartBus ())  	while (!cancellationToken.IsCancellationRequested) {  		_stopwatch.Restart ();  		bus.Send (new CountDoneThingsCommand (_random.Next (1' 100))).Wait (cancellationToken);  		// wait until the command has been fully handled  		_stopwatch.Stop ();  		_log.InfoFormat ("The command has been handled in {0}"' _stopwatch.Elapsed);  	}  
Magic Number,Zebus.Sample.Sending.Sender,Publisher,C:\repos\Abc-Arbitrage_Zebus.Samples\src\2.Sending a command\Zebus.Sample.Sending.Sender\Publisher.cs,Run,The following statement contains a magic number: while (!cancellationToken.IsCancellationRequested) {  	_stopwatch.Restart ();  	bus.Send (new CountDoneThingsCommand (_random.Next (1' 100))).Wait (cancellationToken);  	// wait until the command has been fully handled  	_stopwatch.Stop ();  	_log.InfoFormat ("The command has been handled in {0}"' _stopwatch.Elapsed);  }  
Magic Number,Zebus.Sample.Sending.Sender,Publisher,C:\repos\Abc-Arbitrage_Zebus.Samples\src\2.Sending a command\Zebus.Sample.Sending.Sender\Publisher.cs,Run,The following statement contains a magic number: bus.Send (new CountDoneThingsCommand (_random.Next (1' 100))).Wait (cancellationToken);  
