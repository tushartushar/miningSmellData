Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Antmicro.Migrant.Tests,DynamicType,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\DynamicType.cs,InnerCreateType,Cyclomatic complexity of the method is 11
Long Parameter List,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,SerializationTests,The method has 5 parameters. Parameters: useGeneratedSerializer' useGeneratedDeserializer' treatCollectionsAsUserObjects' supportForISerializable' useTypeStamping
Long Parameter List,Antmicro.Migrant.Tests,BaseTestWithSettings,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\BaseTestWithSettings.cs,BaseTestWithSettings,The method has 7 parameters. Parameters: useGeneratedSerializer' useGeneratedDeserializer' treatCollectionsAsUserObjects' supportForISerializable' supportForIXmlSerializable' useTypeStamping' forceStampVerification
Long Parameter List,Antmicro.Migrant.Tests,BlockingCollectionSerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\BlockingCollectionSerializationTests.cs,BlockingCollectionSerializationTests,The method has 5 parameters. Parameters: useGeneratedSerializer' useGeneratedDeserializer' supportForISerializable' supportForIXmlSerializable' useTypeStamping
Long Statement,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The length of the statement  "                notSoRandomTimes.Add(new DateTime(2000 + ZeroEvery(16) * Random.Next(100)' 1 + ZeroEvery(16) * Random.Next(12)' 1 + ZeroEvery(16) * Random.Next(28)' " is 148.
Long Statement,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,NextInt,The length of the statement  "            return (((Random.Next(int.MinValue' int.MaxValue)) & 0xFFFF) << 16) | ((Random.Next(int.MinValue' int.MaxValue)) & 0xFFFF); " is 123.
Long Statement,Antmicro.Migrant.Tests,LatePostSerializationMockA,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,PostSerialization,The length of the statement  "                throw new InvalidOperationException("Late post serialization hook happened earlier than immediate one on referenced class."); " is 125.
Long Statement,Antmicro.Migrant.Tests,LateDeserializationMockA,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,PostDeserialization,The length of the statement  "                throw new InvalidOperationException("Late post serialization hook happened earlier than immediate one on referenced class."); " is 125.
Long Statement,Antmicro.Migrant.Tests,SurrogateTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SurrogateTests.cs,ShouldNotGenerateGenericSurrogateTwice,The length of the statement  "            Assert.AreEqual(useGeneratedSerializer ? 2 : 0' serializerInstance.surrogatesForObjects.Count - surrogatesBeforeSerialization); " is 127.
Long Statement,Antmicro.Migrant.Tests,VersionToleranceTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\VersionToleranceTests.cs,TestBaseClassNameChanged,The length of the statement  "                                        DynamicType.CreateClass("A"' DynamicType.CreateClass("NewBaseA")' additionalTypes: new [] { DynamicType.CreateClass("BaseA") })' " is 128.
Long Statement,Antmicro.Migrant.Tests,VersionToleranceTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\VersionToleranceTests.cs,TestFieldMovedBetweenClasses,The length of the statement  "                                        DynamicType.CreateClass("A"' DynamicType.CreateClass("BaseA").WithField("a"' typeof(string))).WithField("b"' typeof(int))' " is 122.
Long Statement,Antmicro.Migrant.Tests,VersionToleranceTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\VersionToleranceTests.cs,TestFieldMovedBetweenClasses,The length of the statement  "                                        DynamicType.CreateClass("A"' DynamicType.CreateClass("BaseA")).WithField("a"' typeof(string)).WithField("b"' typeof(int))' " is 122.
Long Statement,Antmicro.Migrant.Tests,TwoDomainsDriver,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainsDriver.cs,PrepareDomains,The length of the statement  "            testsOnDomain1 = (InnerDriver)domain1.CreateInstanceAndUnwrap(typeof(InnerDriver).Assembly.FullName' typeof(InnerDriver).FullName);" is 131.
Long Statement,Antmicro.Migrant.Tests,TwoDomainsDriver,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainsDriver.cs,PrepareDomains,The length of the statement  "            testsOnDomain2 = (InnerDriver)domain2.CreateInstanceAndUnwrap(typeof(InnerDriver).Assembly.FullName' typeof(InnerDriver).FullName);" is 131.
Long Statement,Antmicro.Migrant.Tests,TwoDomainsDriver,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainsDriver.cs,SerializeAndDeserializeOnTwoAppDomains,The length of the statement  "                testsOnDomain2.DeserializeOnAppDomain(bytes' settings.GetSettings(allowGuidChange ? vtl | VersionToleranceLevel.AllowGuidChange : vtl));" is 136.
Long Statement,Antmicro.Migrant.Tests,TwoDomainTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainTests.cs,ShouldHandleFieldRemoval,The length of the statement  "            testsOnDomain2.DeserializeOnAppDomain(bytes' settings.GetSettingsAllowingGuidChange(Antmicro.Migrant.Customization.VersionToleranceLevel.AllowFieldRemoval));" is 157.
Long Statement,Antmicro.Migrant.Tests,TwoDomainTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainTests.cs,ShouldHandleFieldRemovalInStruct,The length of the statement  "            testsOnDomain2.DeserializeOnAppDomain(bytes' settings.GetSettingsAllowingGuidChange(Antmicro.Migrant.Customization.VersionToleranceLevel.AllowFieldRemoval));" is 157.
Long Statement,Antmicro.Migrant.Tests,TwoDomainTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainTests.cs,ShouldHandleFieldRemovalInStructNestedInClass,The length of the statement  "            var type1 = DynamicType.CreateClass("A").WithField<string>("a").WithField("b"' DynamicType.CreateStruct("B").WithField<string>("a").WithField<int>("b"));" is 153.
Long Statement,Antmicro.Migrant.Tests,TwoDomainTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainTests.cs,ShouldHandleFieldRemovalInStructNestedInClass,The length of the statement  "            var type2 = DynamicType.CreateClass("A").WithField<string>("a").WithField("b"' DynamicType.CreateStruct("B").WithField<int>("b"));" is 130.
Long Statement,Antmicro.Migrant.Tests,TwoDomainTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainTests.cs,ShouldHandleFieldRemovalInStructNestedInClass,The length of the statement  "            testsOnDomain2.DeserializeOnAppDomain(bytes' settings.GetSettingsAllowingGuidChange(Antmicro.Migrant.Customization.VersionToleranceLevel.AllowFieldRemoval));" is 157.
Long Statement,Antmicro.Migrant.Tests,TwoDomainTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainTests.cs,ShouldHandleFieldInsertion,The length of the statement  "            testsOnDomain2.DeserializeOnAppDomain(bytes' settings.GetSettingsAllowingGuidChange(Antmicro.Migrant.Customization.VersionToleranceLevel.AllowFieldAddition));" is 158.
Long Statement,Antmicro.Migrant.Tests,TwoDomainTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainTests.cs,ShouldHandleBaseClassAddition,The length of the statement  "            testsOnDomain2.DeserializeOnAppDomain(bytes' settings.GetSettingsAllowingGuidChange(Antmicro.Migrant.Customization.VersionToleranceLevel.AllowInheritanceChainChange));" is 167.
Long Statement,Antmicro.Migrant.Tests,TwoDomainTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainTests.cs,ShouldHandleBaseClassRemoval,The length of the statement  "            testsOnDomain2.DeserializeOnAppDomain(bytes' settings.GetSettingsAllowingGuidChange(Antmicro.Migrant.Customization.VersionToleranceLevel.AllowInheritanceChainChange));" is 167.
Long Statement,Antmicro.Migrant.Tests,TwoDomainTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainTests.cs,ShouldSerializeGenericTypeWithInterface,The length of the statement  "            testsOnDomain2.DeserializeOnAppDomain(bytes' settings.GetSettingsAllowingGuidChange(Antmicro.Migrant.Customization.VersionToleranceLevel.AllowInheritanceChainChange));" is 167.
Long Statement,Antmicro.Migrant.Tests,TwoDomainTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainTests.cs,ShouldHandleAssemblyVersionChange,The length of the statement  "            testsOnDomain2.DeserializeOnAppDomain(bytes' settings.GetSettingsAllowingGuidChange(Antmicro.Migrant.Customization.VersionToleranceLevel.AllowAssemblyVersionChange));" is 166.
Long Statement,Antmicro.Migrant.Tests,DynamicType,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\DynamicType.cs,InnerCreateType,The length of the statement  "                typeBuilder = module.Builder.DefineType(name' TypeAttributes.Interface | TypeAttributes.Public | TypeAttributes.Abstract);" is 122.
Long Statement,Antmicro.Migrant.Tests,TypeDescriptorComparisonTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TypeDescriptorComparisonTests.cs,ShouldDetectInsertionOfOverridingField,The length of the statement  "            var objCurr = DynamicType.CreateClass("A"' DynamicType.CreateClass("Base").WithField("a"' typeof(int))).WithField("a"' typeof(int)).Instantiate(); " is 146.
Long Statement,Antmicro.Migrant.Tests,TypeDescriptorComparisonTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TypeDescriptorComparisonTests.cs,ShouldDetectRemovalOfOverridingField,The length of the statement  "            var objPrev = DynamicType.CreateClass("A"' DynamicType.CreateClass("Base").WithField("a"' typeof(int))).WithField("a"' typeof(int)).Instantiate(); " is 146.
Long Statement,Antmicro.Migrant.Tests,TypeDescriptorComparisonTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TypeDescriptorComparisonTests.cs,ShouldHandleAssemblyVersionChange,The length of the statement  "            var objPrev = DynamicType.CreateClass("A").WithField("a"' DynamicType.CreateClass("C").WithField<int>("c")).Instantiate(new Version(1' 0)); " is 139.
Long Statement,Antmicro.Migrant.Tests,TypeDescriptorComparisonTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TypeDescriptorComparisonTests.cs,ShouldHandleAssemblyVersionChange,The length of the statement  "            var objCurr = DynamicType.CreateClass("A").WithField("a"' DynamicType.CreateClass("C").WithField<int>("c")).Instantiate(new Version(1' 1)); " is 139.
Empty Catch Block,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldFailWithSurrogateAndLatePostDeserializationHook,The method has an empty catch block.
Empty Catch Block,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokePostDeserializationEvenIfExceptionWasThrownDuringSerialization,The method has an empty catch block.
Empty Catch Block,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldNotSerializeIntPtr,The method has an empty catch block.
Empty Catch Block,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldNotSerializeSpinLock,The method has an empty catch block.
Empty Catch Block,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldDetectStreamShift,The method has an empty catch block.
Empty Catch Block,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldNotSerializePointer,The method has an empty catch block.
Empty Catch Block,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldNotSerializeNull,The method has an empty catch block.
Empty Catch Block,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldNotSerializeTransient,The method has an empty catch block.
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomLongs,The following statement contains a magic number: hiMax = (int)((exclusiveMaximum >> 32) - 1);
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomLongs,The following statement contains a magic number: randomLongs[i] = ((long)Random.Next(hiMax) << 32) + Random.Next(lowMax);
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDoubles,The following statement contains a magic number: randomDoubles[i] = (Random.NextDouble() - 0.5) * exclusiveMaximum;
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: var totallyRandomTimes = GetRandomLongs(numberOfDateTimes / 2' DateTime.MaxValue.Ticks).Select(x => new DateTime(x));
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: var notSoRandomNo = numberOfDateTimes - numberOfDateTimes / 2;
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: notSoRandomTimes.Add(new DateTime(2000 + ZeroEvery(16) * Random.Next(100)' 1 + ZeroEvery(16) * Random.Next(12)' 1 + ZeroEvery(16) * Random.Next(28)'                      ZeroEvery(8) * Random.Next(24)' ZeroEvery(4) * Random.Next(60)' ZeroEvery(2) * Random.Next(60)));
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: notSoRandomTimes.Add(new DateTime(2000 + ZeroEvery(16) * Random.Next(100)' 1 + ZeroEvery(16) * Random.Next(12)' 1 + ZeroEvery(16) * Random.Next(28)'                      ZeroEvery(8) * Random.Next(24)' ZeroEvery(4) * Random.Next(60)' ZeroEvery(2) * Random.Next(60)));
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: notSoRandomTimes.Add(new DateTime(2000 + ZeroEvery(16) * Random.Next(100)' 1 + ZeroEvery(16) * Random.Next(12)' 1 + ZeroEvery(16) * Random.Next(28)'                      ZeroEvery(8) * Random.Next(24)' ZeroEvery(4) * Random.Next(60)' ZeroEvery(2) * Random.Next(60)));
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: notSoRandomTimes.Add(new DateTime(2000 + ZeroEvery(16) * Random.Next(100)' 1 + ZeroEvery(16) * Random.Next(12)' 1 + ZeroEvery(16) * Random.Next(28)'                      ZeroEvery(8) * Random.Next(24)' ZeroEvery(4) * Random.Next(60)' ZeroEvery(2) * Random.Next(60)));
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: notSoRandomTimes.Add(new DateTime(2000 + ZeroEvery(16) * Random.Next(100)' 1 + ZeroEvery(16) * Random.Next(12)' 1 + ZeroEvery(16) * Random.Next(28)'                      ZeroEvery(8) * Random.Next(24)' ZeroEvery(4) * Random.Next(60)' ZeroEvery(2) * Random.Next(60)));
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: notSoRandomTimes.Add(new DateTime(2000 + ZeroEvery(16) * Random.Next(100)' 1 + ZeroEvery(16) * Random.Next(12)' 1 + ZeroEvery(16) * Random.Next(28)'                      ZeroEvery(8) * Random.Next(24)' ZeroEvery(4) * Random.Next(60)' ZeroEvery(2) * Random.Next(60)));
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: notSoRandomTimes.Add(new DateTime(2000 + ZeroEvery(16) * Random.Next(100)' 1 + ZeroEvery(16) * Random.Next(12)' 1 + ZeroEvery(16) * Random.Next(28)'                      ZeroEvery(8) * Random.Next(24)' ZeroEvery(4) * Random.Next(60)' ZeroEvery(2) * Random.Next(60)));
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: notSoRandomTimes.Add(new DateTime(2000 + ZeroEvery(16) * Random.Next(100)' 1 + ZeroEvery(16) * Random.Next(12)' 1 + ZeroEvery(16) * Random.Next(28)'                      ZeroEvery(8) * Random.Next(24)' ZeroEvery(4) * Random.Next(60)' ZeroEvery(2) * Random.Next(60)));
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: notSoRandomTimes.Add(new DateTime(2000 + ZeroEvery(16) * Random.Next(100)' 1 + ZeroEvery(16) * Random.Next(12)' 1 + ZeroEvery(16) * Random.Next(28)'                      ZeroEvery(8) * Random.Next(24)' ZeroEvery(4) * Random.Next(60)' ZeroEvery(2) * Random.Next(60)));
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: notSoRandomTimes.Add(new DateTime(2000 + ZeroEvery(16) * Random.Next(100)' 1 + ZeroEvery(16) * Random.Next(12)' 1 + ZeroEvery(16) * Random.Next(28)'                      ZeroEvery(8) * Random.Next(24)' ZeroEvery(4) * Random.Next(60)' ZeroEvery(2) * Random.Next(60)));
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: notSoRandomTimes.Add(new DateTime(2000 + ZeroEvery(16) * Random.Next(100)' 1 + ZeroEvery(16) * Random.Next(12)' 1 + ZeroEvery(16) * Random.Next(28)'                      ZeroEvery(8) * Random.Next(24)' ZeroEvery(4) * Random.Next(60)' ZeroEvery(2) * Random.Next(60)));
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: notSoRandomTimes.Add(new DateTime(2000 + ZeroEvery(16) * Random.Next(100)' 1 + ZeroEvery(16) * Random.Next(12)' 1 + ZeroEvery(16) * Random.Next(28)'                      ZeroEvery(8) * Random.Next(24)' ZeroEvery(4) * Random.Next(60)' ZeroEvery(2) * Random.Next(60)));
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,GetRandomDateTimes,The following statement contains a magic number: notSoRandomTimes.Add(new DateTime(2000 + ZeroEvery(16) * Random.Next(100)' 1 + ZeroEvery(16) * Random.Next(12)' 1 + ZeroEvery(16) * Random.Next(28)'                      ZeroEvery(8) * Random.Next(24)' ZeroEvery(4) * Random.Next(60)' ZeroEvery(2) * Random.Next(60)));
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,NextDecimal,The following statement contains a magic number: byte scale = (byte) Random.Next(29);
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,NextDecimal,The following statement contains a magic number: bool sign = Random.Next(2) == 1;
Magic Number,Antmicro.Migrant.Tests,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\Helpers.cs,NextInt,The following statement contains a magic number: return (((Random.Next(int.MinValue' int.MaxValue)) & 0xFFFF) << 16) | ((Random.Next(int.MinValue' int.MaxValue)) & 0xFFFF);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: var array = new ClassWithTheReference[6];
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: array[0].refTwo = array[2];
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: array[1].refOne = array[3];
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: array[1].refTwo = array[4];
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: array[2].refOne = array[1];
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: array[2].refTwo = array[5];
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: array[2].refTwo = array[5];
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: Assert.AreEqual(1' copy[5].value);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: Assert.AreEqual(2' copy[4].value);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: Assert.AreEqual(2' copy[4].value);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: Assert.AreEqual(3' copy[3].value);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: Assert.AreEqual(3' copy[3].value);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: Assert.AreEqual(4' copy[2].value);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: Assert.AreEqual(4' copy[2].value);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: Assert.AreEqual(5' copy[1].value);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeChainOfHooksInCorrectOrder,The following statement contains a magic number: Assert.AreEqual(6' copy[0].value);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeGlobalHooks,The following statement contains a magic number: Assert.AreEqual(3' preSerializationCounter);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeGlobalHooks,The following statement contains a magic number: Assert.AreEqual(3' postSerializationCounter);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldInvokeGlobalHooks,The following statement contains a magic number: Assert.AreEqual(3' postDeserializationCounter);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldProperlyExecuteHooksOnVirtualMethod,The following statement contains a magic number: Assert.AreEqual(2' mockWithVirtual.DerivedPreSerializationCounter);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldProperlyExecuteHooksOnVirtualMethod,The following statement contains a magic number: Assert.AreEqual(3' mockWithVirtual.BasePostSerializationCounter);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldProperlyExecuteHooksOnVirtualMethod,The following statement contains a magic number: Assert.AreEqual(4' mockWithVirtual.DerivedPostSerializationCounter);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldProperlyExecuteHooksOnVirtualMethod,The following statement contains a magic number: Assert.AreEqual(3' copy.BasePostDeserializationCounter);
Magic Number,Antmicro.Migrant.Tests,HooksTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,ShouldProperlyExecuteHooksOnVirtualMethod,The following statement contains a magic number: Assert.AreEqual(4' copy.DerivedPostDeserializationCounter);
Magic Number,Antmicro.Migrant.Tests,ForOrderTestB,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,AfterDeOrSerialization,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Antmicro.Migrant.Tests,ForLateOrderTestB,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\HooksTests.cs,AfterDeOrSerialization,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Antmicro.Migrant.Tests,IdGeneratorTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\IdGeneratorTests.cs,ShouldGenerateUniqueId,The following statement contains a magic number: const int ObjectsNo = 100000;
Magic Number,Antmicro.Migrant.Tests,PrimitiveReaderWriterTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\PrimitiveReaderWriterTests.cs,ShouldWriteAndReadStrings,The following statement contains a magic number: const int maxLength = 100;
Magic Number,Antmicro.Migrant.Tests,PrimitiveReaderWriterTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\PrimitiveReaderWriterTests.cs,ShouldWriteAndReadStrings,The following statement contains a magic number: const int longStringLength = 8000;
Magic Number,Antmicro.Migrant.Tests,PrimitiveReaderWriterTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\PrimitiveReaderWriterTests.cs,ShouldWriteAndReadStrings,The following statement contains a magic number: const int longStringProbability = 10;
Magic Number,Antmicro.Migrant.Tests,PrimitiveReaderWriterTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\PrimitiveReaderWriterTests.cs,ShouldWriteAndReadPartsOfByteArrays,The following statement contains a magic number: var arrays = new byte[100][];
Magic Number,Antmicro.Migrant.Tests,PrimitiveReaderWriterTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\PrimitiveReaderWriterTests.cs,ShouldWriteAndReadPartsOfByteArrays,The following statement contains a magic number: arrays[i] = Enumerable.Range(0' 256).Select(x => (byte)x).ToArray();
Magic Number,Antmicro.Migrant.Tests,PrimitiveReaderWriterTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\PrimitiveReaderWriterTests.cs,ShouldHandleNotAlignedWrites,The following statement contains a magic number: const int iterationCount = 80000;
Magic Number,Antmicro.Migrant.Tests,PrimitiveReaderWriterTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\PrimitiveReaderWriterTests.cs,ShouldCopyFromStream,The following statement contains a magic number: var testArray = Enumerable.Range(0' 1000).Select(x => (byte)x).ToArray();
Magic Number,Antmicro.Migrant.Tests,PrimitiveReaderWriterTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\PrimitiveReaderWriterTests.cs,ShouldThrowIfStreamPrematurelyFinishes,The following statement contains a magic number: Assert.Throws<EndOfStreamException>(() => reader.CopyTo(streamToWrite' 100));
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeArrayReferenceToSelf,The following statement contains a magic number: var array = new object[2];
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeWithInheritance,The following statement contains a magic number: SimpleBaseClass derived = new SimpleDerivedClass { BaseField = 1' DerivedField = 2 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeWithInheritance,The following statement contains a magic number: Assert.AreEqual(copy.DerivedField' 2);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeListOfPrimitives,The following statement contains a magic number: var list = new List<int> { 1' 2' 3 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeListOfPrimitives,The following statement contains a magic number: var list = new List<int> { 1' 2' 3 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeLongListOfPrimitives,The following statement contains a magic number: i < 100000
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeListOfLists,The following statement contains a magic number: var first = new List<int> { 1' 2' 3 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeListOfLists,The following statement contains a magic number: var first = new List<int> { 1' 2' 3 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeListOfLists,The following statement contains a magic number: var second = new List<int> { 97' 98' 99 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeListOfLists,The following statement contains a magic number: var second = new List<int> { 97' 98' 99 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeListOfLists,The following statement contains a magic number: var second = new List<int> { 97' 98' 99 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeListOfLists,The following statement contains a magic number: i < 2
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeArrayListWithStrings,The following statement contains a magic number: var list = new ArrayList { "Word 1"' "Word 2"' new SimpleClass { Value = 6' Str = "Word 4" }' "Word 3" };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeArrayListWithPrimitives,The following statement contains a magic number: var list = new ArrayList { 1' 2' 3 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeArrayListWithPrimitives,The following statement contains a magic number: var list = new ArrayList { 1' 2' 3 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeHashSetWithPrimitives,The following statement contains a magic number: var collection = new HashSet<int> { 1' 2' 3 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeHashSetWithPrimitives,The following statement contains a magic number: var collection = new HashSet<int> { 1' 2' 3 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeBoxedPrimitve,The following statement contains a magic number: var box = new Box { Element = 3 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeBoxedPrimitve,The following statement contains a magic number: Assert.AreEqual(3' copy.Element);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldPreserveIdentityWithBoxedPrimitives,The following statement contains a magic number: object primitive = 1234;
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeArrayWithPrimitives,The following statement contains a magic number: var array = new [] { 1' 2' 3' 4' 5' 6 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeArrayWithPrimitives,The following statement contains a magic number: var array = new [] { 1' 2' 3' 4' 5' 6 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeArrayWithPrimitives,The following statement contains a magic number: var array = new [] { 1' 2' 3' 4' 5' 6 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeArrayWithPrimitives,The following statement contains a magic number: var array = new [] { 1' 2' 3' 4' 5' 6 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeArrayWithPrimitives,The following statement contains a magic number: var array = new [] { 1' 2' 3' 4' 5' 6 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeTwodimensionalArrayWithPrimitives,The following statement contains a magic number: var array = new ['] { { 1' 2 }' { 3' 4 }' { 5' 6 } };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeTwodimensionalArrayWithPrimitives,The following statement contains a magic number: var array = new ['] { { 1' 2 }' { 3' 4 }' { 5' 6 } };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeTwodimensionalArrayWithPrimitives,The following statement contains a magic number: var array = new ['] { { 1' 2 }' { 3' 4 }' { 5' 6 } };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeTwodimensionalArrayWithPrimitives,The following statement contains a magic number: var array = new ['] { { 1' 2 }' { 3' 4 }' { 5' 6 } };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeTwodimensionalArrayWithPrimitives,The following statement contains a magic number: var array = new ['] { { 1' 2 }' { 3' 4 }' { 5' 6 } };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerialize4DArrayWithPrimitives,The following statement contains a magic number: var array = new int[2' 2' 3' 4];
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerialize4DArrayWithPrimitives,The following statement contains a magic number: var array = new int[2' 2' 3' 4];
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerialize4DArrayWithPrimitives,The following statement contains a magic number: var array = new int[2' 2' 3' 4];
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerialize4DArrayWithPrimitives,The following statement contains a magic number: var array = new int[2' 2' 3' 4];
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerialize4DArrayWithPrimitives,The following statement contains a magic number: array[1' 0' 1' 0] = 2;
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerialize4DArrayWithPrimitives,The following statement contains a magic number: array[0' 1' 0' 1] = 3;
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerialize4DArrayWithPrimitives,The following statement contains a magic number: array[0' 1' 2' 2] = 4;
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerialize4DArrayWithPrimitives,The following statement contains a magic number: array[0' 1' 2' 2] = 4;
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerialize4DArrayWithPrimitives,The following statement contains a magic number: array[0' 1' 2' 2] = 4;
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerialize4DArrayWithPrimitives,The following statement contains a magic number: array[1' 0' 2' 3] = 5;
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerialize4DArrayWithPrimitives,The following statement contains a magic number: array[1' 0' 2' 3] = 5;
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerialize4DArrayWithPrimitives,The following statement contains a magic number: array[1' 0' 2' 3] = 5;
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeMixedArray,The following statement contains a magic number: Assert.AreSame(copy[1]' copy[3]);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeMixedArray,The following statement contains a magic number: Assert.AreNotSame(copy[3]' copy[4]);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeMixedArray,The following statement contains a magic number: Assert.AreNotSame(copy[3]' copy[4]);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeDictionaryWithPrimitives,The following statement contains a magic number: i < 100
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeHashtable,The following statement contains a magic number: i < 100
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldPreserveIdentityWithDictionary,The following statement contains a magic number: var dictionary = new Dictionary<int' string> {                  { 10' str }'                  { 20' "One" }'                  { 30' str }              };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldPreserveIdentityWithDictionary,The following statement contains a magic number: var dictionary = new Dictionary<int' string> {                  { 10' str }'                  { 20' "One" }'                  { 30' str }              };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldPreserveIdentityWithDictionary,The following statement contains a magic number: var dictionary = new Dictionary<int' string> {                  { 10' str }'                  { 20' "One" }'                  { 30' str }              };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldPreserveIdentityWithDictionary,The following statement contains a magic number: Assert.AreSame(copy[10]' copy[30]);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldPreserveIdentityWithDictionary,The following statement contains a magic number: Assert.AreSame(copy[10]' copy[30]);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldPreserveIdentityWithDictionary,The following statement contains a magic number: Assert.AreNotSame(copy[10]' copy[20]);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldPreserveIdentityWithDictionary,The following statement contains a magic number: Assert.AreNotSame(copy[10]' copy[20]);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeSimplerStruct,The following statement contains a magic number: var str = new SimplerStruct { A = 1234567' B = 543 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeSimplerStruct,The following statement contains a magic number: var str = new SimplerStruct { A = 1234567' B = 543 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeSimpleStruct,The following statement contains a magic number: var str = new SimpleStruct {                  A = 5'                  B = "allman"              };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeComplexStruct,The following statement contains a magic number: var str = new SimpleStruct {                  A = 5'                  B = "allman"              };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeComplexStruct,The following statement contains a magic number: var compstr = new ComplexStruct {                  A = 6'                  B = str              };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeSpeciallySerializable,The following statement contains a magic number: special.Fill(100);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeSpeciallySerializableInArrayAndPreserveIdentity,The following statement contains a magic number: special.Fill(100);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeSpeciallySerializableInArrayAndPreserveIdentity,The following statement contains a magic number: anotherSpecial.Fill(100);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeSpeciallySerializableInArrayAndPreserveIdentity,The following statement contains a magic number: Assert.AreSame(copy[0]' ((Box)copy[2]).Element);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeSpeciallySerializableInArrayAndPreserveIdentity,The following statement contains a magic number: Assert.AreNotSame(copy[0]' copy[3]);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeSpeciallySerializableInArrayAndPreserveIdentity,The following statement contains a magic number: CollectionAssert.AreEqual(((SpeciallySerializable)copy[3]).Data' anotherSpecial.Data);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeBoxWithLong,The following statement contains a magic number: var box = new GenericBox<long> { Element = 1234 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeStructWithSpeciallySerializable,The following statement contains a magic number: special.Fill(100);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeNonNullNullable,The following statement contains a magic number: var box = new GenericBox<int?> { Element = 3 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeBoxedNullNullable,The following statement contains a magic number: int? value = 66;
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeConcurrentDictionary,The following statement contains a magic number: dictionary.TryAdd(i' 2 * i);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeConcurrentDictionary,The following statement contains a magic number: i < 10
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldHandleTwoSerializations,The following statement contains a magic number: var someObjects = new object[] { "One"' 2' null' "Four" };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldOmitTransientField,The following statement contains a magic number: var trans = new ClassWithTransientField() { a = 147' b = 256' c = 850 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldOmitTransientField,The following statement contains a magic number: var trans = new ClassWithTransientField() { a = 147' b = 256' c = 850 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldOmitTransientField,The following statement contains a magic number: var trans = new ClassWithTransientField() { a = 147' b = 256' c = 850 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeQueue,The following statement contains a magic number: queue.Enqueue(3);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeQueue,The following statement contains a magic number: queue.Enqueue(5);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeByteArray,The following statement contains a magic number: var array = new byte[] { 2' 4' 6' 8' 10 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeByteArray,The following statement contains a magic number: var array = new byte[] { 2' 4' 6' 8' 10 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeByteArray,The following statement contains a magic number: var array = new byte[] { 2' 4' 6' 8' 10 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeByteArray,The following statement contains a magic number: var array = new byte[] { 2' 4' 6' 8' 10 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeByteArray,The following statement contains a magic number: var array = new byte[] { 2' 4' 6' 8' 10 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,GithubIssue60,The following statement contains a magic number: object instance = new Issue60OuterClass() {                  Field1 = 0'                  Inner = new Issue60InnerClass() {                      Field2 = 1'                      Field3 = 2'                  }              };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeKeyValuePair,The following statement contains a magic number: var src = new KeyValuePair<int' int>(12' 34);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeKeyValuePair,The following statement contains a magic number: var src = new KeyValuePair<int' int>(12' 34);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeGenericClassWithLatePostDeserializationHook,The following statement contains a magic number: var src = new GenericClassWithLatePostDeserializationHook { x = 150 };
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeGenericClassWithLatePostDeserializationHook,The following statement contains a magic number: Assert.AreEqual(147' dst.x);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerialize3DArrayWithOneDimensionZero,The following statement contains a magic number: var array = new int[2' 0' 2];
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerialize3DArrayWithOneDimensionZero,The following statement contains a magic number: var array = new int[2' 0' 2];
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeTwoTimesDifferentObjects,The following statement contains a magic number: Assert.IsInstanceOf<SimpleContainer>(copy[2]);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeDeepGraph,The following statement contains a magic number: i < 45000
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeDeepGraph,The following statement contains a magic number: Assert.AreEqual(45000' depth);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeListOfInterfaces,The following statement contains a magic number: obj.list.Add(i % 2 == 0 ? (IInterface)new ImplementingInterfaceOne() : (IInterface)new ImplementingInterfaceTwo());
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeListOfInterfaces,The following statement contains a magic number: i < 100
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeListOfInterfaces,The following statement contains a magic number: Assert.AreEqual(100' copy.list.Count);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeDictionaryWithCustomObject,The following statement contains a magic number: Assert.AreEqual(3' copy.Count);
Magic Number,Antmicro.Migrant.Tests,SerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ShouldSerializeHashsetWithCustomObject,The following statement contains a magic number: Assert.AreEqual(3' copy.Count);
Magic Number,Antmicro.Migrant.Tests,ClassWithItems,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ClassWithItems,The following statement contains a magic number: items = new ClassWithAction[2];
Magic Number,Antmicro.Migrant.Tests,GenericClassWithLatePostDeserializationHook,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,LatePostDeserialization,The following statement contains a magic number: x = 147;
Magic Number,Antmicro.Migrant.Tests,SimpleClass,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,GetHashCode,The following statement contains a magic number: return Value.GetHashCode() ^ 33 * (Str != null ? Str.GetHashCode() : 0);
Magic Number,Antmicro.Migrant.Tests,BadlySerializable,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,Save,The following statement contains a magic number: writer.Write(666 + i);
Magic Number,Antmicro.Migrant.Tests,BadlySerializable,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,Save,The following statement contains a magic number: i < 3
Magic Number,Antmicro.Migrant.Tests,NestedStruct,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,NestedStruct,The following statement contains a magic number: field = (condition ? 5 : 0);
Magic Number,Antmicro.Migrant.Tests,ClassWithGuid,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SerializationTests.cs,ClassWithGuid,The following statement contains a magic number: Str = Helpers.GetRandomString(Number / 256);
Magic Number,Antmicro.Migrant.Tests,SurrogateTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SurrogateTests.cs,ShouldPlaceObjectForSurrogate,The following statement contains a magic number: var pseudocopy = PseudoClone(b' serializer =>              {                  serializer.ForSurrogate<SurrogateMockB>().SetObject(x => new SurrogateMockA(999));              });
Magic Number,Antmicro.Migrant.Tests,SurrogateTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SurrogateTests.cs,ShouldPlaceObjectForSurrogate,The following statement contains a magic number: Assert.AreEqual(999' a.Field);
Magic Number,Antmicro.Migrant.Tests,SurrogateTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SurrogateTests.cs,ShouldPlaceObjectForSurrogatePreservingIdentity,The following statement contains a magic number: Assert.AreNotSame(list[0]' list[2]);
Magic Number,Antmicro.Migrant.Tests,SurrogateTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SurrogateTests.cs,ShouldPlaceObjectForSurrogatePreservingIdentity,The following statement contains a magic number: Assert.AreEqual(3' a.Field);
Magic Number,Antmicro.Migrant.Tests,SurrogateTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SurrogateTests.cs,ShouldPlaceObjectForSurrogatePreservingIdentity,The following statement contains a magic number: var secondA = list[2] as SurrogateMockA;
Magic Number,Antmicro.Migrant.Tests,SurrogateTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SurrogateTests.cs,ShouldPlaceObjectForSurrogatePreservingIdentity,The following statement contains a magic number: Assert.AreEqual(2' secondA.Field);
Magic Number,Antmicro.Migrant.Tests,SurrogateTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SurrogateTests.cs,ShouldPlaceSurrogateForObjectPreservingIdentity,The following statement contains a magic number: Assert.AreSame(list[0]' list[2]);
Magic Number,Antmicro.Migrant.Tests,SurrogateTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SurrogateTests.cs,ShouldPlaceSurrogateForObjectPreservingIdentity,The following statement contains a magic number: Assert.AreEqual(counter - 2' a.Field);
Magic Number,Antmicro.Migrant.Tests,SurrogateTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SurrogateTests.cs,ShouldAllowBoxedValueTypeSurrogation,The following statement contains a magic number: int a = 199;
Magic Number,Antmicro.Migrant.Tests,SurrogateTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SurrogateTests.cs,ShouldAllowBoxedValueTypeSurrogation,The following statement contains a magic number: Assert.AreEqual(299' b);
Magic Number,Antmicro.Migrant.Tests,SurrogateTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SurrogateTests.cs,ShouldDoSurrogateObjectSwapTwoTimes,The following statement contains a magic number: i < 2
Magic Number,Antmicro.Migrant.Tests,SurrogateTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SurrogateTests.cs,ShouldNotGenerateGenericSurrogateTwice,The following statement contains a magic number: Assert.AreEqual(useGeneratedSerializer ? 2 : 0' serializerInstance.surrogatesForObjects.Count - surrogatesBeforeSerialization);
Magic Number,Antmicro.Migrant.Tests,IntSurrogate,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\SurrogateTests.cs,IntSurrogate,The following statement contains a magic number: cwi = new ClassWithInteger { field = value + 100 };
Magic Number,Antmicro.Migrant.Tests,VersionToleranceTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\VersionToleranceTests.cs,GetString,The following statement contains a magic number: var interestingBytes = array.Where(b => b >= 32 && b <= 126).ToArray();
Magic Number,Antmicro.Migrant.Tests,VersionToleranceTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\VersionToleranceTests.cs,GetString,The following statement contains a magic number: var interestingBytes = array.Where(b => b >= 32 && b <= 126).ToArray();
Magic Number,Antmicro.Migrant.Tests,BuiltinSurrogatesTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\BuiltinSurrogatesTests.cs,ShouldSerializeSimpleCustomISerializable,The following statement contains a magic number: const long value = 666L;
Magic Number,Antmicro.Migrant.Tests,BuiltinSurrogatesTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\BuiltinSurrogatesTests.cs,ShouldSerializeCustomIXmlSerializable,The following statement contains a magic number: var xml = new CustomIXmlSerializable { SomeString = "Xavier"' SomeInteger = 666 };
Magic Number,Antmicro.Migrant.Tests,InnerDriver,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainsDriver.cs,SetValueOnAppDomainInner,The following statement contains a magic number: var elements = fieldName.Split(new[] { '.' }' 2);
Magic Number,Antmicro.Migrant.Tests,TwoDomainTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainTests.cs,ShouldHandleFieldRemoval,The following statement contains a magic number: testsOnDomain1.SetValueOnAppDomain("b"' 147);
Magic Number,Antmicro.Migrant.Tests,TwoDomainTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainTests.cs,ShouldHandleFieldRemovalInStruct,The following statement contains a magic number: testsOnDomain1.SetValueOnAppDomain("b"' 147);
Magic Number,Antmicro.Migrant.Tests,TwoDomainTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainTests.cs,ShouldHandleFieldRemovalInStructNestedInClass,The following statement contains a magic number: testsOnDomain1.SetValueOnAppDomain("b.b"' 147);
Magic Number,Antmicro.Migrant.Tests,TwoDomainTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\TwoDomainTests.cs,ShouldHandleFieldRemovalInStructNestedInClass,The following statement contains a magic number: Assert.AreEqual(147' testsOnDomain2.GetValueOnAppDomain("b.b"));
Magic Number,Antmicro.Migrant.Tests,OpenStreamSerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\OpenStreamSerializationTests.cs,ShouldDoBasicOpenStreamSerialization,The following statement contains a magic number: var otherObject = Tuple.Create(1' 2);
Magic Number,Antmicro.Migrant.Tests,OpenStreamSerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\OpenStreamSerializationTests.cs,ShouldDoBasicOpenStreamSerialization,The following statement contains a magic number: var objs = new object[3];
Magic Number,Antmicro.Migrant.Tests,OpenStreamSerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\OpenStreamSerializationTests.cs,ShouldDoBasicOpenStreamSerialization,The following statement contains a magic number: Assert.AreEqual(otherObject' objs[2]);
Magic Number,Antmicro.Migrant.Tests,OpenStreamSerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\OpenStreamSerializationTests.cs,ShouldPreserveReferences,The following statement contains a magic number: var otherObject = Tuple.Create(1' 2);
Magic Number,Antmicro.Migrant.Tests,OpenStreamSerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\OpenStreamSerializationTests.cs,ShouldPreserveReferences,The following statement contains a magic number: var objs = new object[3];
Magic Number,Antmicro.Migrant.Tests,OpenStreamSerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\OpenStreamSerializationTests.cs,ShouldPreserveReferences,The following statement contains a magic number: Assert.AreNotSame(objs[1]' objs[2]);
Magic Number,Antmicro.Migrant.Tests,OpenStreamSerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\OpenStreamSerializationTests.cs,ShouldDeserializeMany,The following statement contains a magic number: var tuples = Enumerable.Range(1' 10).Select(x => Tuple.Create(x' x + 0.5)).ToList();
Magic Number,Antmicro.Migrant.Tests,OpenStreamSerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\OpenStreamSerializationTests.cs,ShouldDeserializeMany,The following statement contains a magic number: var tuples = Enumerable.Range(1' 10).Select(x => Tuple.Create(x' x + 0.5)).ToList();
Magic Number,Antmicro.Migrant.Tests,BlockingCollectionSerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\BlockingCollectionSerializationTests.cs,ShouldSerializeBlockingCollectionWithPrimitives,The following statement contains a magic number: var collection = new BlockingCollection<int> { 1' 2' 3 };
Magic Number,Antmicro.Migrant.Tests,BlockingCollectionSerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\BlockingCollectionSerializationTests.cs,ShouldSerializeBlockingCollectionWithPrimitives,The following statement contains a magic number: var collection = new BlockingCollection<int> { 1' 2' 3 };
Magic Number,Antmicro.Migrant.Tests,BlockingCollectionSerializationTests,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\BlockingCollectionSerializationTests.cs,ShouldSerializeBlockingCollectionWithNull,The following statement contains a magic number: var collection = new BlockingCollection<object> { 1' null' 3 };
Missing Default,Antmicro.Migrant.Tests,DynamicType,D:\research\architectureSmells\repos\antmicro_Migrant\Tests\DynamicType.cs,InnerCreateType,The following switch statement is missing a default case: switch(type)             {             case KindOfDynamicType.Struct:                     typeBuilder = module.Builder.DefineType(name'                         TypeAttributes.Public |                         TypeAttributes.Sealed |                         TypeAttributes.SequentialLayout |                         TypeAttributes.Serializable'                         typeof(ValueType));                 break;             case KindOfDynamicType.Interface:                 typeBuilder = module.Builder.DefineType(name' TypeAttributes.Interface | TypeAttributes.Public | TypeAttributes.Abstract);                 break;             case KindOfDynamicType.Class:                  typeBuilder = module.Builder.DefineType(name' TypeAttributes.Class | TypeAttributes.Public);                 if(genericArgument != null)                 {                     typeBuilder.DefineGenericParameters(new [] { "TFirst" });                 }                  break;             }
