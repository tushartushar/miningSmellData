Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Antmicro.Migrant.PerformanceTester,MainClass,D:\research\architectureSmells\repos\antmicro_Migrant\PerformanceTester\Program.cs,Main,The length of the statement  "                            File.AppendAllText(options.OutputFile' string.Format("{0}-{1}-{2}-{3};{4};{5}{6}"' serializerType' test.GetType().Name' testType' options.Id' result.Average' result.StandardDeviation' Environment.NewLine)); " is 206.
Magic Number,Antmicro.Migrant.PerformanceTester,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\PerformanceTester\Helpers.cs,NormalizeDecimal,The following statement contains a magic number: var power = (long)(3 * Math.Round((digits / 3.0)));
Magic Number,Antmicro.Migrant.PerformanceTester,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\PerformanceTester\Helpers.cs,NormalizeDecimal,The following statement contains a magic number: var power = (long)(3 * Math.Round((digits / 3.0)));
Magic Number,Antmicro.Migrant.PerformanceTester,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\PerformanceTester\Helpers.cs,NormalizeDecimal,The following statement contains a magic number: var index = power / 3 + ZeroPrefixPosition;
Magic Number,Antmicro.Migrant.PerformanceTester,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\PerformanceTester\Helpers.cs,NormalizeDecimal,The following statement contains a magic number: power = 3 * (1 + ZeroPrefixPosition - SIPrefixes.Length);
Magic Number,Antmicro.Migrant.PerformanceTester,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\PerformanceTester\Helpers.cs,NormalizeDecimal,The following statement contains a magic number: what /= Math.Pow(10' power);
Magic Number,Antmicro.Migrant.PerformanceTester,Helpers,D:\research\architectureSmells\repos\antmicro_Migrant\PerformanceTester\Helpers.cs,NormalizeDecimal,The following statement contains a magic number: var roundTo = Math.Max(3 - digits' 0);
Magic Number,Antmicro.Migrant.PerformanceTester,TestResult,D:\research\architectureSmells\repos\antmicro_Migrant\PerformanceTester\TestResult.cs,ToString,The following statement contains a magic number: return string.Format("{0}s (Â±{1:#0.#}%)"' Average.NormalizeDecimal()' StandardDeviation / Average * 100.0);
