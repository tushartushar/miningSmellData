Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,CMcG.CodeAlignment.Business,LineDetails,D:\research\architectureSmells\repos\cpmcgrath_codealignment\CodeAlignment.Common\Business\LineDetails.cs,LineDetails,The method has 5 parameters. Parameters: line' finder' delimiter' minIndex' tabSize
Magic Number,CMcG.CodeAlignment.Business,XmlScopeSelector,D:\research\architectureSmells\repos\cpmcgrath_codealignment\CodeAlignment.Common\Business\Selectors\XmlScopeSelector.cs,GetLinesToAlign,The following statement contains a magic number: blanks     = isMulti ?  end     .UpTo(view.LineCount - 1).Where(x => IsMultiLineEnd(view' x))                                       : (end - 1).UpTo(view.LineCount - 2).Where(x => IsNotSameScope(view' x + 1' line));
Magic Number,CMcG.CodeAlignment.Interactions,LocationCalculator,D:\research\architectureSmells\repos\cpmcgrath_codealignment\CodeAlignment.Common\Interactions\LocationCalculator.cs,CalculateBounds,The following statement contains a magic number: return new Rectangle(x      : rect.Left + offset.X'                                   y      : rect.Bottom - 20 + offset.Y'                                   width  : rect.Right - rect.Left - 20'                                   height : 20);
Magic Number,CMcG.CodeAlignment.Interactions,LocationCalculator,D:\research\architectureSmells\repos\cpmcgrath_codealignment\CodeAlignment.Common\Interactions\LocationCalculator.cs,CalculateBounds,The following statement contains a magic number: return new Rectangle(x      : rect.Left + offset.X'                                   y      : rect.Bottom - 20 + offset.Y'                                   width  : rect.Right - rect.Left - 20'                                   height : 20);
Magic Number,CMcG.CodeAlignment.Interactions,LocationCalculator,D:\research\architectureSmells\repos\cpmcgrath_codealignment\CodeAlignment.Common\Interactions\LocationCalculator.cs,CalculateBounds,The following statement contains a magic number: return new Rectangle(x      : rect.Left + offset.X'                                   y      : rect.Bottom - 20 + offset.Y'                                   width  : rect.Right - rect.Left - 20'                                   height : 20);
