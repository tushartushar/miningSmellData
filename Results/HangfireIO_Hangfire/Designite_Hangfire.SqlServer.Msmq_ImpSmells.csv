Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,MQTools,MessageQueueExtensions,C:\repos\HangfireIO_Hangfire\src\Hangfire.SqlServer.Msmq\MessageQueueExtensions.cs,,The length of the parameter PROPID_MGMT_QUEUE_MESSAGE_COUNT is 31.
Long Identifier,MQTools,MessageQueueExtensions,C:\repos\HangfireIO_Hangfire\src\Hangfire.SqlServer.Msmq\MessageQueueExtensions.cs,,The length of the parameter MQ_ERROR_SERVICE_NOT_AVAILABLE is 30.
Long Identifier,MQTools,MessageQueueExtensions,C:\repos\HangfireIO_Hangfire\src\Hangfire.SqlServer.Msmq\MessageQueueExtensions.cs,,The length of the parameter MQ_INFORMATION_UNSUPPORTED_PROPERTY is 35.
Empty Catch Block,Hangfire.SqlServer.Msmq,MsmqJobQueue,C:\repos\HangfireIO_Hangfire\src\Hangfire.SqlServer.Msmq\MsmqJobQueue.cs,Dequeue,The method has an empty catch block.
Magic Number,MQTools,MessageQueueExtensions,C:\repos\HangfireIO_Hangfire\src\Hangfire.SqlServer.Msmq\MessageQueueExtensions.cs,GetCount,The following statement contains a magic number: try              {                  int result = MQMgmtGetInfo(computerName' queuePath' ref props);                  //Console.WriteLine("{0} {1} Result:{2:X}"' computerName' queuePath' result);                  switch (result)                  {                      case 0:                          break;                      case MQ_ERROR_QUEUE_NOT_ACTIVE:                          return 0;                      default:                          throw new Win32Exception(result);                  }                    if (Marshal.ReadInt32(props.status) != 0)                      return -1;                    var variant = (MQPROPVariant)Marshal.PtrToStructure(props.aPropVar' typeof(MQPROPVariant));                  if (variant.vt != VT_UI4)                      return -2;                    return variant.ulVal;              }              finally              {                  Marshal.FreeHGlobal(props.aPropID);                  Marshal.FreeHGlobal(props.aPropVar);                  Marshal.FreeHGlobal(props.status);              }
Missing Default,Hangfire.SqlServer.Msmq,MsmqJobQueue,C:\repos\HangfireIO_Hangfire\src\Hangfire.SqlServer.Msmq\MsmqJobQueue.cs,CreateTransaction,The following switch statement is missing a default case: switch (_transactionType)              {                  case MsmqTransactionType.Internal:                      return new MsmqInternalTransaction();                  case MsmqTransactionType.Dtc:                      return new MsmqDtcTransaction();              }
