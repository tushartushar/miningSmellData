Implementation smell,Namespace,Class,File,Method,Description
Long Method,Hangfire.Dashboard,DashboardRoutes,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\DashboardRoutes.cs,DashboardRoutes,The method has 107 lines of code.
Long Method,Hangfire.Dashboard,JobMethodCallRenderer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\JobMethodCallRenderer.cs,Render,The method has 129 lines of code.
Long Method,Hangfire.Dashboard.Pages,AwaitingJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\AwaitingJobsPage.cshtml.cs,Execute,The method has 524 lines of code.
Long Method,Hangfire.Dashboard.Pages,DeletedJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\DeletedJobsPage.cshtml.cs,Execute,The method has 361 lines of code.
Long Method,Hangfire.Dashboard.Pages,EnqueuedJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\EnqueuedJobsPage.cs,Execute,The method has 418 lines of code.
Long Method,Hangfire.Dashboard.Pages,FailedJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\FailedJobsPage.cshtml.cs,Execute,The method has 512 lines of code.
Long Method,Hangfire.Dashboard.Pages,FetchedJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\FetchedJobsPage.cs,Execute,The method has 416 lines of code.
Long Method,Hangfire.Dashboard.Pages,HomePage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\HomePage.cs,Execute,The method has 229 lines of code.
Long Method,Hangfire.Dashboard.Pages,JobDetailsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\JobDetailsPage.cs,Execute,The method has 702 lines of code.
Long Method,Hangfire.Dashboard.Pages,LayoutPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\LayoutPage.cs,Execute,The method has 283 lines of code.
Long Method,Hangfire.Dashboard.Pages,ProcessingJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\ProcessingJobsPage.cshtml.cs,Execute,The method has 456 lines of code.
Long Method,Hangfire.Dashboard.Pages,QueuesPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\QueuesPage.cshtml.cs,Execute,The method has 423 lines of code.
Long Method,Hangfire.Dashboard.Pages,RecurringJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\RecurringJobsPage.cshtml.cs,Execute,The method has 838 lines of code.
Long Method,Hangfire.Dashboard.Pages,RetriesPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\RetriesPage.cshtml.cs,Execute,The method has 457 lines of code.
Long Method,Hangfire.Dashboard.Pages,ScheduledJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\ScheduledJobsPage.cshtml.cs,Execute,The method has 390 lines of code.
Long Method,Hangfire.Dashboard.Pages,ServersPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\ServersPage.cshtml.cs,Execute,The method has 266 lines of code.
Long Method,Hangfire.Dashboard.Pages,SucceededJobs,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\SucceededJobs.cshtml.cs,Execute,The method has 396 lines of code.
Long Method,Hangfire.Dashboard.Pages,Paginator,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\_Paginator.cs,Execute,The method has 166 lines of code.
Long Method,Hangfire.Dashboard.Pages,PerPageSelector,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\_PerPageSelector.cs,Execute,The method has 131 lines of code.
Complex Method,Hangfire,ContinuationsSupportAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\ContinuationsSupportAttribute.cs,ExecuteContinuationsIfExist,Cyclomatic complexity of the method is 10
Complex Method,Hangfire,RecurringJobEntity,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobEntity.cs,RecurringJobEntity,Cyclomatic complexity of the method is 11
Complex Method,Hangfire,RecurringJobEntity,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobEntity.cs,GetChangedFields,Cyclomatic complexity of the method is 12
Complex Method,Hangfire,RecurringJobExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobExtensions.cs,EnqueueBackgroundJob,Cyclomatic complexity of the method is 9
Complex Method,Hangfire.Logging.LogProviders,NLogLogger,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\App_Packages\LibLog.1.4\LibLog.cs,Log,Cyclomatic complexity of the method is 14
Complex Method,Hangfire.Logging.LogProviders,NLogLogger,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\App_Packages\LibLog.1.4\LibLog.cs,LogException,Cyclomatic complexity of the method is 12
Complex Method,Hangfire.Logging.LogProviders,Log4NetLogger,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\App_Packages\LibLog.1.4\LibLog.cs,Log,Cyclomatic complexity of the method is 12
Complex Method,Hangfire.Logging.LogProviders,Log4NetLogger,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\App_Packages\LibLog.1.4\LibLog.cs,LogException,Cyclomatic complexity of the method is 10
Complex Method,Hangfire.Logging.LogProviders,SerilogLogger,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\App_Packages\LibLog.1.4\LibLog.cs,Log,Cyclomatic complexity of the method is 14
Complex Method,Hangfire.Logging.LogProviders,SerilogLogger,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\App_Packages\LibLog.1.4\LibLog.cs,LogException,Cyclomatic complexity of the method is 12
Complex Method,Hangfire.Common,Job,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\Job.cs,Validate,Cyclomatic complexity of the method is 11
Complex Method,Hangfire.Common,FilterComparer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\JobFilterProviderCollection.cs,Compare,Cyclomatic complexity of the method is 8
Complex Method,Hangfire.Common,TypeExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\TypeExtensions.cs,GetNonOpenMatchingMethod,Cyclomatic complexity of the method is 14
Complex Method,Hangfire.Common,TypeExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\TypeExtensions.cs,TypesMatchRecursive,Cyclomatic complexity of the method is 9
Complex Method,Hangfire.Common,TypeHelper,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\TypeHelper.cs,SerializeType,Cyclomatic complexity of the method is 10
Complex Method,Hangfire.Dashboard,HtmlHelper,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\HtmlHelper.cs,ToHumanDuration,Cyclomatic complexity of the method is 11
Complex Method,Hangfire.Dashboard,JobMethodCallRenderer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\JobMethodCallRenderer.cs,Render,Cyclomatic complexity of the method is 15
Complex Method,Hangfire.Dashboard,ArgumentRenderer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\JobMethodCallRenderer.cs,GetRenderer,Cyclomatic complexity of the method is 8
Complex Method,Hangfire.Dashboard,TypeExtensionMethods,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\JobMethodCallRenderer.cs,GetTypeCode,Cyclomatic complexity of the method is 17
Complex Method,Hangfire.Dashboard.Pages,AwaitingJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\AwaitingJobsPage.cshtml.cs,Execute,Cyclomatic complexity of the method is 14
Complex Method,Hangfire.Dashboard.Pages,DeletedJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\DeletedJobsPage.cshtml.cs,Execute,Cyclomatic complexity of the method is 10
Complex Method,Hangfire.Dashboard.Pages,EnqueuedJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\EnqueuedJobsPage.cs,Execute,Cyclomatic complexity of the method is 10
Complex Method,Hangfire.Dashboard.Pages,FailedJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\FailedJobsPage.cshtml.cs,Execute,Cyclomatic complexity of the method is 13
Complex Method,Hangfire.Dashboard.Pages,FetchedJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\FetchedJobsPage.cs,Execute,Cyclomatic complexity of the method is 10
Complex Method,Hangfire.Dashboard.Pages,JobDetailsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\JobDetailsPage.cs,Execute,Cyclomatic complexity of the method is 21
Complex Method,Hangfire.Dashboard.Pages,ProcessingJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\ProcessingJobsPage.cshtml.cs,Execute,Cyclomatic complexity of the method is 12
Complex Method,Hangfire.Dashboard.Pages,QueuesPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\QueuesPage.cshtml.cs,Execute,Cyclomatic complexity of the method is 9
Complex Method,Hangfire.Dashboard.Pages,RecurringJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\RecurringJobsPage.cshtml.cs,Execute,Cyclomatic complexity of the method is 24
Complex Method,Hangfire.Dashboard.Pages,RetriesPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\RetriesPage.cshtml.cs,Execute,Cyclomatic complexity of the method is 11
Complex Method,Hangfire.Dashboard.Pages,ScheduledJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\ScheduledJobsPage.cshtml.cs,Execute,Cyclomatic complexity of the method is 10
Complex Method,Hangfire.Dashboard.Pages,SucceededJobs,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\SucceededJobs.cshtml.cs,Execute,Cyclomatic complexity of the method is 11
Complex Method,Hangfire.Server,RecurringJobScheduler,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\RecurringJobScheduler.cs,EnqueueBackgroundJob,Cyclomatic complexity of the method is 8
Complex Method,Hangfire.Storage,StorageConnectionExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Storage\StorageConnectionExtensions.cs,GetRecurringJobDtos,Cyclomatic complexity of the method is 12
Long Parameter List,Hangfire,AppBuilderExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\AppBuilderExtensions.cs,UseHangfireDashboard,The method has 5 parameters. Parameters: builder' pathMatch' options' storage' antiforgery
Long Parameter List,Hangfire,StackTraceParser,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\App_Packages\StackTraceParser\StackTraceParser.cs,Parse,The method has 7 parameters. Parameters: text' tokenSelector' methodSelector' parameterSelector' parametersSelector' sourceLocationSelector' selector
Long Parameter List,Hangfire,BackgroundJobClientExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\BackgroundJobClientExtensions.cs,ContinueWith,The method has 5 parameters. Parameters: client' parentId' methodCall' nextState' options
Long Parameter List,Hangfire,BackgroundJobClientExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\BackgroundJobClientExtensions.cs,ContinueJobWith,The method has 5 parameters. Parameters: client' parentId' methodCall' nextState' options
Long Parameter List,Hangfire,BackgroundJobClientExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\BackgroundJobClientExtensions.cs,ContinueWith,The method has 5 parameters. Parameters: client' parentId' methodCall' nextState' options
Long Parameter List,Hangfire,BackgroundJobClientExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\BackgroundJobClientExtensions.cs,ContinueJobWith,The method has 5 parameters. Parameters: client' parentId' methodCall' nextState' options
Long Parameter List,Hangfire,BackgroundJobClientExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\BackgroundJobClientExtensions.cs,ContinueWith,The method has 5 parameters. Parameters: client' parentId' methodCall' nextState' options
Long Parameter List,Hangfire,BackgroundJobClientExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\BackgroundJobClientExtensions.cs,ContinueJobWith,The method has 5 parameters. Parameters: client' parentId' methodCall' nextState' options
Long Parameter List,Hangfire,BackgroundJobClientExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\BackgroundJobClientExtensions.cs,ContinueWith,The method has 5 parameters. Parameters: client' parentId' methodCall' nextState' options
Long Parameter List,Hangfire,BackgroundJobClientExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\BackgroundJobClientExtensions.cs,ContinueJobWith,The method has 5 parameters. Parameters: client' parentId' methodCall' nextState' options
Long Parameter List,Hangfire,BackgroundJobServer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\BackgroundJobServer.cs,BackgroundJobServer,The method has 8 parameters. Parameters: options' storage' additionalProcesses' filterProvider' activator' factory' performer' stateChanger
Long Parameter List,Hangfire,BackgroundJobServer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\BackgroundJobServer.cs,GetRequiredProcesses,The method has 5 parameters. Parameters: filterProvider' activator' factory' performer' stateChanger
Long Parameter List,Hangfire,RecurringJob,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJob.cs,AddOrUpdate,The method has 5 parameters. Parameters: recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJob,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJob.cs,AddOrUpdate,The method has 5 parameters. Parameters: recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJob,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJob.cs,AddOrUpdate,The method has 5 parameters. Parameters: recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJob,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJob.cs,AddOrUpdate,The method has 5 parameters. Parameters: recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJob,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJob.cs,AddOrUpdate,The method has 5 parameters. Parameters: recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJob,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJob.cs,AddOrUpdate,The method has 5 parameters. Parameters: recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJob,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJob.cs,AddOrUpdate,The method has 5 parameters. Parameters: recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJob,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJob.cs,AddOrUpdate,The method has 5 parameters. Parameters: recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJobExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobExtensions.cs,UpdateRecurringJob,The method has 5 parameters. Parameters: transaction' recurringJob' changedFields' nextExecution' logger
Long Parameter List,Hangfire,RecurringJobExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobExtensions.cs,TriggerRecurringJob,The method has 6 parameters. Parameters: factory' storage' connection' profiler' recurringJob' now
Long Parameter List,Hangfire,RecurringJobExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobExtensions.cs,EnqueueBackgroundJob,The method has 8 parameters. Parameters: stateMachine' storage' connection' transaction' recurringJob' backgroundJob' reason' profiler
Long Parameter List,Hangfire,RecurringJobManagerExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobManagerExtensions.cs,AddOrUpdate,The method has 5 parameters. Parameters: manager' recurringJobId' job' cronExpression' timeZone
Long Parameter List,Hangfire,RecurringJobManagerExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobManagerExtensions.cs,AddOrUpdate,The method has 6 parameters. Parameters: manager' recurringJobId' job' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJobManagerExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobManagerExtensions.cs,AddOrUpdate,The method has 6 parameters. Parameters: manager' recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJobManagerExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobManagerExtensions.cs,AddOrUpdate,The method has 6 parameters. Parameters: manager' recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJobManagerExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobManagerExtensions.cs,AddOrUpdate,The method has 6 parameters. Parameters: manager' recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJobManagerExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobManagerExtensions.cs,AddOrUpdate,The method has 6 parameters. Parameters: manager' recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJobManagerExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobManagerExtensions.cs,AddOrUpdate,The method has 6 parameters. Parameters: manager' recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJobManagerExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobManagerExtensions.cs,AddOrUpdate,The method has 6 parameters. Parameters: manager' recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJobManagerExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobManagerExtensions.cs,AddOrUpdate,The method has 6 parameters. Parameters: manager' recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire,RecurringJobManagerExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobManagerExtensions.cs,AddOrUpdate,The method has 6 parameters. Parameters: manager' recurringJobId' methodCall' cronExpression' timeZone' queue
Long Parameter List,Hangfire.Client,CreateContext,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Client\CreateContext.cs,CreateContext,The method has 5 parameters. Parameters: storage' connection' job' initialState' profiler
Long Parameter List,Hangfire.Common,Job,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\Job.cs,Validate,The method has 6 parameters. Parameters: type' typeParameterName' method' methodParameterName' argumentCount' argumentParameterName
Long Parameter List,Hangfire.Dashboard,MiddlewareExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Owin\MiddlewareExtensions.cs,UseHangfireDashboard,The method has 5 parameters. Parameters: builder' options' storage' routes' antiforgery
Long Parameter List,Hangfire.Dashboard,DashboardMiddleware,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Obsolete\DashboardMiddleware.cs,DashboardMiddleware,The method has 6 parameters. Parameters: next' appPath' statsPollingInterval' storage' routes' authorizationFilters
Long Parameter List,Hangfire.Dashboard,DashboardOwinExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Obsolete\DashboardOwinExtensions.cs,MapHangfireDashboard,The method has 5 parameters. Parameters: app' dashboardPath' appPath' authorizationFilters' storage
Long Parameter List,Hangfire.Dashboard,RequestDispatcherContext,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Obsolete\RequestDispatcherContext.cs,RequestDispatcherContext,The method has 5 parameters. Parameters: appPath' statsPollingInterval' jobStorage' owinEnvironment' uriMatch
Long Parameter List,Hangfire.Server,BackgroundProcessContext,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundProcessContext.cs,BackgroundProcessContext,The method has 7 parameters. Parameters: serverId' storage' properties' executionId' stoppingToken' stoppedToken' shutdownToken
Long Parameter List,Hangfire.Server,BackgroundServerContext,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundServerContext.cs,BackgroundServerContext,The method has 6 parameters. Parameters: serverId' storage' properties' stoppingToken' stoppedToken' shutdownToken
Long Parameter List,Hangfire.Server,BackgroundServerProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundServerProcess.cs,Execute,The method has 5 parameters. Parameters: executionId' execution' stoppingToken' stoppedToken' shutdownToken
Long Parameter List,Hangfire.Server,IBackgroundServerProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\IBackgroundServerProcess.cs,Execute,The method has 5 parameters. Parameters: executionId' execution' stoppingToken' stoppedToken' shutdownToken
Long Parameter List,Hangfire.Server,PerformContext,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\PerformContext.cs,PerformContext,The method has 5 parameters. Parameters: storage' connection' backgroundJob' cancellationToken' profiler
Long Parameter List,Hangfire.Server,ServerJobCancellationToken,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\ServerJobCancellationToken.cs,ServerJobCancellationToken,The method has 5 parameters. Parameters: connection' jobId' serverId' workerId' shutdownToken
Long Parameter List,Hangfire.Server,Worker,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\Worker.cs,Worker,The method has 5 parameters. Parameters: queues' performer' stateChanger' jobInitializationTimeout' maxStateChangeAttempts
Long Parameter List,Hangfire.Server,Worker,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\Worker.cs,TryChangeState,The method has 7 parameters. Parameters: context' connection' fetchedJob' state' expectedStates' initializeToken' abortToken
Long Parameter List,Hangfire.States,ApplyStateContext,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\States\ApplyStateContext.cs,ApplyStateContext,The method has 6 parameters. Parameters: storage' connection' transaction' backgroundJob' newState' oldStateName
Long Parameter List,Hangfire.States,ApplyStateContext,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\States\ApplyStateContext.cs,ApplyStateContext,The method has 7 parameters. Parameters: storage' connection' transaction' backgroundJob' newState' oldStateName' profiler
Long Parameter List,Hangfire.States,StateChangeContext,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\States\StateChangeContext.cs,StateChangeContext,The method has 5 parameters. Parameters: storage' connection' backgroundJobId' newState' expectedStates
Long Parameter List,Hangfire.States,StateChangeContext,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\States\StateChangeContext.cs,StateChangeContext,The method has 6 parameters. Parameters: storage' connection' backgroundJobId' newState' expectedStates' cancellationToken
Long Parameter List,Hangfire.States,StateChangeContext,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\States\StateChangeContext.cs,StateChangeContext,The method has 7 parameters. Parameters: storage' connection' backgroundJobId' newState' expectedStates' cancellationToken' profiler
Long Parameter List,Hangfire.Processing,BackgroundDispatcherAsync,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundDispatcherAsync.cs,BackgroundDispatcherAsync,The method has 6 parameters. Parameters: execution' action' state' taskScheduler' maxConcurrency' ownsScheduler
Long Identifier,Hangfire,StackTraceFormatter,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\App_Packages\StackTraceFormatter\StackTraceFormatter.cs,,The length of the parameter DefaultStackTraceHtmlFragments is 30.
Long Identifier,Hangfire,AutomaticRetryAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\AutomaticRetryAttribute.cs,,The length of the parameter DefaultDelayInSecondsByAttemptFunc is 34.
Long Identifier,Hangfire.Common,JobHelper,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\JobHelper.cs,,The length of the parameter MillisecondTimestampBoundaryDate is 32.
Long Identifier,Hangfire.Common,SerializationHelper,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\SerializationHelper.cs,SetSimpleTypeNameAssemblyFormat,The length of the parameter typeNameAssemblyFormatHandling is 30.
Long Statement,Hangfire,AppBuilderExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\AppBuilderExtensions.cs,UseHangfireServer,The length of the statement  "                    "Current OWIN environment does not contain an instance of the `CancellationToken` class neither under `host.OnAppDisposing`' nor `server.OnDispose` key.\r\n" " is 157.
Long Statement,Hangfire,AutomaticRetryAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\AutomaticRetryAttribute.cs,ScheduleAgainLater,The length of the statement  "                    $"Failed to process the job '{context.BackgroundJob.Id}': an exception occurred. Retry attempt {retryAttempt} of {Attempts} will be performed in {delay}."' " is 155.
Long Statement,Hangfire,AutomaticRetryAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\AutomaticRetryAttribute.cs,TransitionToDeleted,The length of the statement  "                    $"Failed to process the job '{context.BackgroundJob.Id}': an exception occured. Job was automatically deleted because the retry attempt count exceeded {Attempts}."' " is 164.
Long Statement,Hangfire,BackgroundJobServer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\BackgroundJobServer.cs,GetRequiredProcesses,The length of the statement  "            processes.Add(new RecurringJobScheduler(factory' _options.SchedulePollingInterval' timeZoneResolver).UseBackgroundPool(1)); " is 123.
Long Statement,Hangfire,CaptureCultureAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\CaptureCultureAttribute.cs,OnPerforming,The length of the statement  "                _logger.WarnException($"Unable to set CurrentCulture for job {filterContext.BackgroundJob.Id} due to an exception"' ex); " is 120.
Long Statement,Hangfire,CaptureCultureAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\CaptureCultureAttribute.cs,OnPerforming,The length of the statement  "                _logger.WarnException($"Unable to set CurrentUICulture for job {filterContext.BackgroundJob.Id} due to an exception"' ex); " is 122.
Long Statement,Hangfire,ContinuationsSupportAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\ContinuationsSupportAttribute.cs,GetContinuationState,The length of the statement  "                        $"Can not start continuation '{continuationJobId}' for background job '{context.BackgroundJob.Id}': continuation does not exist."); " is 131.
Long Statement,Hangfire,ContinuationsSupportAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\ContinuationsSupportAttribute.cs,GetContinuationState,The length of the statement  "                        $"Continuation '{continuationJobId}' has been ignored: it was deemed to be aborted' because its state is still non-initialized."); " is 130.
Long Statement,Hangfire,ContinuationsSupportAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\ContinuationsSupportAttribute.cs,GetContinuationState,The length of the statement  "                        $"Can not start continuation '{continuationJobId}' for background job '{context.BackgroundJob.Id}': timeout expired while trying to fetch continuation state."); " is 160.
Long Statement,Hangfire,JobActivatorContext,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\JobActivatorContext.cs,GetJobParameter,The length of the statement  "                return SerializationHelper.Deserialize<T>(Connection.GetJobParameter(BackgroundJob.Id' name)' SerializationOption.User); " is 120.
Long Statement,Hangfire,LatencyTimeoutAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\LatencyTimeoutAttribute.cs,OnStateElection,The length of the statement  "                    () => $"Background job '{context.BackgroundJob.Id}' has exceeded latency timeout of {_timeoutInSeconds} second(s) and will be deleted"); " is 136.
Long Statement,Hangfire,RecurringJobEntity,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobEntity.cs,ParseCronExpression,The length of the statement  "                    $"Wrong number of parts in the `{cronExpression}` cron expression' you can only use 5 or 6 (with seconds) part-based expressions."); " is 132.
Long Statement,Hangfire,RecurringJobExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobExtensions.cs,UpdateRecurringJob,The length of the statement  "                logger.Trace($"Recurring job '{recurringJob.RecurringJobId}' is being updated. RecurringJob: ({recurringJob})' Changes: ({String.Join(";"' changedFields.Select(x => $"{x.Key}:{x.Value}"))})' NextExecution: ({nextExecution})"); " is 226.
Long Statement,Hangfire.Logging.LogProviders,Log4NetLogProvider,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\App_Packages\LibLog.1.4\LibLog.cs,GetGetLoggerMethodCall,The length of the statement  "            MethodCallExpression methodCall = Expression.Call(null' method' new Expression[] { Expression.Constant(typeof(Log4NetLogProvider).GetTypeInfo().Assembly)' nameParam }); " is 168.
Long Statement,Hangfire.Logging.LogProviders,EntLibLogProvider,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\App_Packages\LibLog.1.4\LibLog.cs,GetShouldLogEntry,The length of the statement  "            MemberInitExpression memberInit = GetWriteLogExpression(Expression.Constant("***dummy***")' severityParameter' logNameParameter); " is 129.
Long Statement,Hangfire.Logging.LogProviders,SerilogLogProvider,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\App_Packages\LibLog.1.4\LibLog.cs,GetForContextMethodCall,The length of the statement  "            MethodInfo method = logManagerType.GetRuntimeMethod("ForContext"' new[] { typeof(string)' typeof(object)' typeof(bool) }); " is 122.
Long Statement,Hangfire.Logging.LogProviders,ElmahLogProvider,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\App_Packages\LibLog.1.4\LibLog.cs,GetHttpContextType,The length of the statement  "                $"System.Web.HttpContext' System.Web' Version={Environment.Version}' Culture=neutral' PublicKeyToken=b03f5f7f11d50a3a"); " is 120.
Long Statement,Hangfire.Client,CoreBackgroundJobFactory,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Client\CoreBackgroundJobFactory.cs,Create,The length of the statement  "                        if (data == null) throw new InvalidOperationException($"Was unable to initialize a background job '{jobId}'' because it doesn't exists."); " is 138.
Long Statement,Hangfire.Common,Job,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\Job.cs,Validate,The length of the statement  "                throw new NotSupportedException("Only public methods can be invoked in the background. Ensure your method has the `public` access modifier' and you aren't using explicit interface implementation."); " is 198.
Long Statement,Hangfire.Common,Job,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\Job.cs,Validate,The length of the statement  "                        "Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process."); " is 125.
Long Statement,Hangfire.Common,Job,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\Job.cs,Validate,The length of the statement  "                        "Parameters' passed by reference' are not supported: there is no guarantee that specified method will be invoked inside the same process."); " is 140.
Long Statement,Hangfire.Common,Job,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\Job.cs,Validate,The length of the statement  "                        "Anonymous functions' delegates and lambda expressions aren't supported in job method parameters: it's very hard to serialize them and all their scope in general."); " is 165.
Long Statement,Hangfire.Common,ReflectedAttributeCache,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\ReflectedAttributeCache.cs,GetAttributes,The length of the statement  "            return lookup.GetOrAdd(memberInfo' mi => new ReadOnlyCollection<TAttribute>((TAttribute[])memberInfo.GetCustomAttributes(typeof(TAttribute)' inherit: true))); " is 158.
Long Statement,Hangfire.Common,TypeExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\TypeExtensions.cs,TypesMatchRecursive,The length of the statement  "                    if (!TypesMatchRecursive(parameterGenericArgument.GetTypeInfo()' actualGenericArgument.GetTypeInfo()' genericArguments)) " is 120.
Long Statement,Hangfire.Common,TypeExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\TypeExtensions.cs,ReplaceGenericParametersInGenericTypeName,The length of the statement  "                var currentArguments = string.Join("'"' genericArguments.Take(currentGenericArgumentNumbers).Select(ToGenericTypeString)); " is 122.
Long Statement,Hangfire.Common.ExpressionUtil,Compiler<TIn;TOut>,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\ExpressionUtil\CachedExpressionCompiler.cs,CompileFromFingerprint,The length of the statement  "                ExpressionFingerprintChain fingerprint = FingerprintingExpressionVisitor.GetFingerprintChain(expr' out capturedConstants); " is 122.
Long Statement,Hangfire.Common.ExpressionUtil,HoistingExpressionVisitor<TIn;TOut>,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\ExpressionUtil\HoistingExpressionVisitor.cs,Hoist,The length of the statement  "            var rewrittenLambdaExpr = Expression.Lambda<Hoisted<TIn' TOut>>(rewrittenBodyExpr' expr.Parameters[0]' _hoistedConstantsParamExpr); " is 131.
Long Statement,Hangfire.Common.ExpressionUtil,HoistingExpressionVisitor<TIn;TOut>,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\ExpressionUtil\HoistingExpressionVisitor.cs,VisitConstant,The length of the statement  "            return Expression.Convert(Expression.Property(_hoistedConstantsParamExpr' "Item"' Expression.Constant(_numConstantsProcessed++))' node.Type); " is 141.
Long Statement,Hangfire.Dashboard,HtmlHelper,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\HtmlHelper.cs,JobNameLink,The length of the statement  "            return Raw($"<a class=\"job-method\" href=\"{HtmlEncode(_page.Url.JobDetails(jobId))}\">{HtmlEncode(JobName(job))}</a>"); " is 121.
Long Statement,Hangfire.Dashboard,HtmlHelper,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\HtmlHelper.cs,RelativeTime,The length of the statement  "            return Raw($"<span data-moment=\"{HtmlEncode(JobHelper.ToTimestamp(value).ToString(CultureInfo.InvariantCulture))}\">{HtmlEncode(value.ToString(CultureInfo.CurrentUICulture))}</span>"); " is 185.
Long Statement,Hangfire.Dashboard,HtmlHelper,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\HtmlHelper.cs,MomentTitle,The length of the statement  "            return Raw($"<span data-moment-title=\"{HtmlEncode(JobHelper.ToTimestamp(time).ToString(CultureInfo.InvariantCulture))}\">{HtmlEncode(value)}</span>"); " is 151.
Long Statement,Hangfire.Dashboard,HtmlHelper,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\HtmlHelper.cs,LocalTime,The length of the statement  "            return Raw($"<span data-moment-local=\"{HtmlEncode(JobHelper.ToTimestamp(value).ToString(CultureInfo.InvariantCulture))}\">{HtmlEncode(value.ToString(CultureInfo.CurrentUICulture))}</span>"); " is 191.
Long Statement,Hangfire.Dashboard,JobHistoryRenderer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\JobHistoryRenderer.cs,FailedRenderer,The length of the statement  "                $"<h4 class=\"exception-type\">{html.HtmlEncode(stateData["ExceptionType"])}</h4><p class=\"text-muted\">{html.HtmlEncode(stateData["ExceptionMessage"])}</p><pre class=\"stack-trace\">{stackTrace}</pre>"); " is 205.
Long Statement,Hangfire.Dashboard,JobHistoryRenderer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\JobHistoryRenderer.cs,ScheduledRenderer,The length of the statement  "                $"<dl class=\"dl-horizontal\"><dt>Enqueue at:</dt><dd data-moment=\"{helper.HtmlEncode(JobHelper.ToTimestamp(enqueueAt).ToString(CultureInfo.InvariantCulture))}\">{helper.HtmlEncode(enqueueAt.ToString(CultureInfo.CurrentUICulture))}</dd></dl>"); " is 245.
Long Statement,Hangfire.Dashboard,DashboardMiddleware,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Obsolete\DashboardMiddleware.cs,Invoke,The length of the statement  "                new DashboardOptions { AppPath = _appPath' StatsPollingInterval = _statsPollingInterval' AuthorizationFilters = _authorizationFilters }'  " is 136.
Long Statement,Hangfire.Dashboard.Pages,AwaitingJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\AwaitingJobsPage.cshtml.cs,Execute,The length of the statement  "                                             if (stateData != null && stateData.Data.ContainsKey("Options") && !String.IsNullOrWhiteSpace(stateData.Data["Options"])) " is 120.
Long Statement,Hangfire.Dashboard.Pages,JobDetailsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\JobDetailsPage.cs,Execute,The length of the statement  "                   Write(Html.Raw(String.Format(Strings.JobDetailsPage_JobAbortedNotActive_Warning_Html' currentState.Data["ServerId"]' Url.To("/servers")))); " is 139.
Long Statement,Hangfire.Dashboard.Pages,JobDetailsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\JobDetailsPage.cs,Execute,The length of the statement  "               Write(Html.Raw(String.Format(Strings.JobDetailsPage_JobFinished_Warning_Html' JobHelper.ToTimestamp(job.ExpireAt.Value)' job.ExpireAt))); " is 137.
Long Statement,Hangfire.Server,BackgroundServerProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundServerProcess.cs,GetRequiredProcesses,The length of the statement  "            yield return new ServerWatchdog(_options.ServerCheckInterval' _options.ServerTimeout).UseBackgroundPool(threadCount: 1); " is 120.
Long Statement,Hangfire.Server,BackgroundServerProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundServerProcess.cs,CreateServer,The length of the statement  "            _logger.Info($"{GetServerTemplate(context.ServerId)} successfully announced in {stopwatch.Elapsed.TotalMilliseconds} ms"); " is 122.
Long Statement,Hangfire.Server,BackgroundServerProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundServerProcess.cs,ServerDelete,The length of the statement  "                _logger.Info($"{GetServerTemplate(context.ServerId)} successfully reported itself as stopped in {stopwatch.Elapsed.TotalMilliseconds} ms"); " is 139.
Long Statement,Hangfire.Server,BackgroundServerProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundServerProcess.cs,ServerDelete,The length of the statement  "                _logger.Info($"{GetServerTemplate(context.ServerId)} has been stopped in total {stoppedAt?.Elapsed.TotalMilliseconds ?? 0} ms"); " is 128.
Long Statement,Hangfire.Server,BackgroundServerProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundServerProcess.cs,StartDispatchers,The length of the statement  "            _logger.Info($"{GetServerTemplate(context.ServerId)} is starting the registered dispatchers: {String.Join("' "' _dispatcherBuilders.Select(builder => $"{builder}"))}..."); " is 171.
Long Statement,Hangfire.Server,BackgroundServerProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundServerProcess.cs,WaitForDispatchers,The length of the statement  "                _logger.Warn($"{GetServerTemplate(context.ServerId)} stopped non-gracefully due to {String.Join("' "' nonStoppedNames)}. Outstanding work on those dispatchers could be aborted' and there can be delays in background processing. This server instance will be incorrectly shown as active for a while. To avoid non-graceful shutdowns' investigate what prevents from stopping gracefully and add CancellationToken support for those methods."); " is 436.
Long Statement,Hangfire.Server,DelayedJobScheduler,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\DelayedJobScheduler.cs,UseConnectionDistributedLock,The length of the statement  "                    $@"An exception was thrown during acquiring distributed lock on the {resource} resource within {DefaultLockTimeout.TotalSeconds} seconds. The scheduled jobs have not been handled this time. " is 189.
Long Statement,Hangfire.Server,PerformContext,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\PerformContext.cs,GetJobParameter,The length of the statement  "                return SerializationHelper.Deserialize<T>(Connection.GetJobParameter(BackgroundJob.Id' name)' SerializationOption.User); " is 120.
Long Statement,Hangfire.Server,RecurringJobScheduler,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\RecurringJobScheduler.cs,EnqueueNextRecurringJobs,The length of the statement  "                    var recurringJobIds = ((JobStorageConnection)connection).GetFirstByLowestScoreFromSet("recurring-jobs"' 0' timestamp' BatchSize); " is 129.
Long Statement,Hangfire.Server,RecurringJobScheduler,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\RecurringJobScheduler.cs,EnqueueBackgroundJob,The length of the statement  "                        _logger.WarnException($"Recurring job '{recurringJobId}' can't be scheduled due to an error and will be retried in {delay}."' error); " is 133.
Long Statement,Hangfire.Server,RecurringJobScheduler,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\RecurringJobScheduler.cs,EnqueueBackgroundJob,The length of the statement  "                        _logger.ErrorException($"Recurring job '{recurringJobId}' can't be scheduled due to an error and will be disabled."' error); " is 124.
Long Statement,Hangfire.Server,RecurringJobScheduler,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\RecurringJobScheduler.cs,UseConnectionDistributedLock,The length of the statement  "                    () => $@"An exception was thrown during acquiring distributed lock the {resource} resource within {LockTimeout.TotalSeconds} seconds. The recurring jobs have not been handled this time."' " is 187.
Long Statement,Hangfire.Server,ServerHeartbeatProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\ServerHeartbeatProcess.cs,Execute,The length of the statement  "            _logger.Trace($"{BackgroundServerProcess.GetServerTemplate(context.ServerId)} waiting for {_interval} delay before sending a heartbeat"); " is 137.
Long Statement,Hangfire.Server,ServerHeartbeatProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\ServerHeartbeatProcess.cs,Execute,The length of the statement  "                    _logger.Info($"{BackgroundServerProcess.GetServerTemplate(context.ServerId)} is now able to continue sending heartbeats"); " is 122.
Long Statement,Hangfire.Server,ServerHeartbeatProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\ServerHeartbeatProcess.cs,Execute,The length of the statement  "                    _logger.Warn($"{BackgroundServerProcess.GetServerTemplate(context.ServerId)} was considered dead by other servers' restarting..."); " is 131.
Long Statement,Hangfire.Server,ServerHeartbeatProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\ServerHeartbeatProcess.cs,Execute,The length of the statement  "                _logger.WarnException($"{BackgroundServerProcess.GetServerTemplate(context.ServerId)} encountered an exception while sending heartbeat"' ex); " is 141.
Long Statement,Hangfire.Server,ServerHeartbeatProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\ServerHeartbeatProcess.cs,Execute,The length of the statement  "                    _logger.Error($"{BackgroundServerProcess.GetServerTemplate(context.ServerId)} will be restarted due to server time out"); " is 121.
Long Statement,Hangfire.Server,ServerJobCancellationToken,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\ServerJobCancellationToken.cs,IsJobStateChanged,The length of the statement  "            if (!state.Data.ContainsKey("ServerId") || !state.Data["ServerId"].Equals(_serverId' StringComparison.OrdinalIgnoreCase)) " is 121.
Long Statement,Hangfire.Server,ServerJobCancellationToken,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\ServerJobCancellationToken.cs,IsJobStateChanged,The length of the statement  "            if (!state.Data.ContainsKey("WorkerId") || !state.Data["WorkerId"].Equals(_workerId' StringComparison.OrdinalIgnoreCase)) " is 121.
Long Statement,Hangfire.Server,Worker,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\Worker.cs,Execute,The length of the statement  "                        TryChangeState(context' connection' fetchedJob' state' new[] { ProcessingState.StateName }' CancellationToken.None' context.ShutdownToken); " is 139.
Long Statement,Hangfire.Server,Worker,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\Worker.cs,TryChangeState,The length of the statement  "                        $"State change attempt {retryAttempt + 1} of {_maxStateChangeAttempts} failed due to an error' see inner exception for details"'  " is 128.
Long Statement,Hangfire.Server,Worker,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\Worker.cs,TryChangeState,The length of the statement  "                new FailedState(exception) { Reason = $"Failed to change state to a '{state.Name}' one due to an exception after {_maxStateChangeAttempts} retry attempts" }' " is 157.
Long Statement,Hangfire.Server,Worker,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\Worker.cs,Requeue,The length of the statement  "                _logger.WarnException($"Failed to immediately re-queue the background job '{fetchedJob.JobId}'. Next invocation may be delayed' if invisibility timeout is used"' ex); " is 166.
Long Statement,Hangfire.Server,Worker,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\Worker.cs,PerformJob,The length of the statement  "                using (var jobToken = new ServerJobCancellationToken(connection' jobId' context.ServerId' context.ExecutionId.ToString()' context.StoppedToken)) " is 144.
Long Statement,Hangfire.States,BackgroundJobStateChanger,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\States\BackgroundJobStateChanger.cs,ChangeState,The length of the statement  "                if (context.ExpectedStates != null && !context.ExpectedStates.Contains(jobData.State' StringComparer.OrdinalIgnoreCase)) " is 120.
Long Statement,Hangfire.States,StateHandlerCollection,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\States\StateHandlerCollection.cs,AddHandler,The length of the statement  "            if (handler.StateName == null) throw new ArgumentException("The StateName property of the given state handler must be non null."' nameof(handler)); " is 147.
Long Statement,Hangfire.Processing,BackgroundDispatcher,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundDispatcher.cs,DispatchLoop,The length of the statement  "                        _logger.FatalException("Dispatcher is stopped due to an exception' you need to restart the server manually. Please report it to Hangfire developers."' ex); " is 155.
Long Statement,Hangfire.Processing,BackgroundDispatcher,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundDispatcher.cs,DispatchLoop,The length of the statement  "                        Debug.WriteLine($"Dispatcher is stopped due to an exception' you need to restart the server manually. Please report it to Hangfire developers: {ex}"); " is 150.
Long Statement,Hangfire.Processing,BackgroundDispatcherAsync,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundDispatcherAsync.cs,DispatchLoop,The length of the statement  "                        _logger.FatalException("Dispatcher is stopped due to an exception' you need to restart the server manually. Please report it to Hangfire developers."' ex); " is 155.
Long Statement,Hangfire.Processing,BackgroundDispatcherAsync,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundDispatcherAsync.cs,DispatchLoop,The length of the statement  "                        Debug.WriteLine($"Dispatcher is stopped due to an exception' you need to restart the server manually. Please report it to Hangfire developers: {ex}"); " is 150.
Long Statement,Hangfire.Processing,BackgroundExecution,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundExecution.cs,HandleException,The length of the statement  "                    _logger.ErrorException($"{GetExecutionLoopTemplate(executionId)} was unable to reset thread abort request due to an exception. Background execution can be prematurely stopped."' ex); " is 182.
Long Statement,Hangfire.Processing,BackgroundExecution,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundExecution.cs,HandleException,The length of the statement  "            _logger.DebugException($"{GetExecutionLoopTemplate(executionId)} caught an exception and will be retried in {delay}"' exception); " is 129.
Long Statement,Hangfire.Processing,BackgroundExecution,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundExecution.cs,HandleThreadAbort,The length of the statement  "            _logger.WarnException($"{GetExecutionLoopTemplate(executionId)} caught ThreadAbortException' see inner exception for details"' exception); " is 138.
Long Statement,Hangfire.Processing,BackgroundExecution,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundExecution.cs,ToRunningState,The length of the statement  "                    _logger.Info($"{GetExecutionTemplate()} recovered from the Failed state after {_failedSince?.Elapsed} and is in the Running state now"); " is 136.
Long Statement,Hangfire.Processing,BackgroundExecution,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundExecution.cs,ToRunningState,The length of the statement  "                        () => $"{GetExecutionTemplate()} recovered from the Faulted state after {_faultedSince?.Elapsed} and is in the Running state now"); " is 131.
Long Statement,Hangfire.Processing,BackgroundExecution,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundExecution.cs,ToFailedState,The length of the statement  "                        _logger.DebugException($"{GetExecutionTemplate()} is in the Faulted state now due to an exception' execution will be retried no more than in {retryDelay}"' exception); " is 167.
Long Statement,Hangfire.Processing,BackgroundExecution,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundExecution.cs,ToFailedState,The length of the statement  "                    _logger.ErrorException($"{GetExecutionTemplate()} is in the Failed state now due to an exception' execution will be retried no more than in {retryDelay}"' exception); " is 166.
Long Statement,Hangfire.Processing,BackgroundExecution,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundExecution.cs,ToFailedState,The length of the statement  "                    _logger.ErrorException($"{GetExecutionTemplate()} is still in the Failed state for {_failedSince?.Elapsed} due to an exception' will be retried no more than in {retryDelay}"' exception); " is 186.
Long Statement,Hangfire.Processing,TaskExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\TaskExtensions.cs,WaitOneAsync,The length of the statement  "            var registration = ThreadPool.RegisterWaitForSingleObject(waitHandle' CallBack' tcs' Timeout.Infinite' executeOnlyOnce: true); " is 126.
Long Statement,Hangfire.Processing,TaskExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\TaskExtensions.cs,IsTaskLike,The length of the statement  "                // https://devblogs.microsoft.com/dotnet/understanding-the-whys-whats-and-whens-of-valuetask/#user-content-valid-consumption-patterns-for-valuetasks " is 148.
Long Statement,Hangfire.Processing,TaskExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\TaskExtensions.cs,GetTaskLikeResult,The length of the statement  "                // https://devblogs.microsoft.com/dotnet/understanding-the-whys-whats-and-whens-of-valuetask/#user-content-valid-consumption-patterns-for-valuetasks " is 148.
Long Statement,Hangfire.Profiling,SlowLogProfiler,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Profiling\SlowLogProfiler.cs,InvokeMeasured,The length of the statement  "                    _logger.Warn($"Slow log: {instance?.ToString() ?? typeof(TInstance).ToString()} performed \"{message}\" in {(int)stopwatch.Elapsed.TotalSeconds} sec"); " is 151.
Long Statement,Hangfire.Storage,InvocationData,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Storage\InvocationData.cs,DeserializeJob,The length of the statement  "                        $"The type `{type.FullName}` does not contain a method with signature `{Method}({String.Join("' "' parameterTypes?.Select(x => x.Name) ?? parameterTypesArray)})`"); " is 164.
Complex Conditional,Hangfire,JobDisplayNameAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\JobDisplayNameAttribute.cs,InitResourceManager,The conditional expression  "prop != null && prop.PropertyType == typeof(ResourceManager) && prop.CanRead && prop.GetMethod.IsStatic"  is complex.
Complex Conditional,Hangfire.Common,JobFilterCollection,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\JobFilterCollection.cs,ValidateFilterInstance,The conditional expression  "instance != null &&                  !(instance is IClientFilter                   || instance is IServerFilter                   || instance is IClientExceptionFilter                   || instance is IServerExceptionFilter                  || instance is IApplyStateFilter                  || instance is IElectStateFilter)"  is complex.
Complex Conditional,Hangfire.Processing,TaskExtensions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\TaskExtensions.cs,IsTaskLike,The conditional expression  "asTask != null && asTask.IsPublic && !asTask.IsStatic &&                          typeof(Task).GetTypeInfo().IsAssignableFrom(asTask.ReturnType.GetTypeInfo())"  is complex.
Virtual Method Call from Constructor,Hangfire,BackgroundJobServer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\BackgroundJobServer.cs,BackgroundJobServer,The constructor "BackgroundJobServer" calls a virtual method "WriteOptionsToLog".
Virtual Method Call from Constructor,Hangfire.Dashboard,DashboardRoutes,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\DashboardRoutes.cs,DashboardRoutes,The constructor "DashboardRoutes" calls a virtual method "GetBackgroundJobClient".
Virtual Method Call from Constructor,Hangfire.Dashboard,DashboardRoutes,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\DashboardRoutes.cs,DashboardRoutes,The constructor "DashboardRoutes" calls a virtual method "GetBackgroundJobClient".
Empty Catch Block,Hangfire.Common,CancellationEvent,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\CancellationTokenExtentions.cs,SetEvent,The method has an empty catch block.
Empty Catch Block,Hangfire.Dashboard,HtmlHelper,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\HtmlHelper.cs,HtmlHelper,The method has an empty catch block.
Empty Catch Block,Hangfire.Dashboard,HtmlHelper,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\HtmlHelper.cs,JobName,The method has an empty catch block.
Empty Catch Block,Hangfire.Dashboard.Pages,RecurringJobsPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\RecurringJobsPage.cshtml.cs,Execute,The method has an empty catch block.
Empty Catch Block,Hangfire.Server,BackgroundServerProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundServerProcess.cs,GetServerTemplate,The method has an empty catch block.
Empty Catch Block,Hangfire.Server,DelayedJobScheduler,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\DelayedJobScheduler.cs,IsBatchingAvailable,The method has an empty catch block.
Empty Catch Block,Hangfire.Server,RecurringJobScheduler,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\RecurringJobScheduler.cs,IsBatchingAvailable,The method has an empty catch block.
Empty Catch Block,Hangfire.Processing,BackgroundTaskScheduler,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundTaskScheduler.cs,DispatchLoop,The method has an empty catch block.
Empty Catch Block,Hangfire.Processing,BackgroundTaskScheduler,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundTaskScheduler.cs,DispatchLoop,The method has an empty catch block.
Magic Number,Hangfire,AutomaticRetryAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\AutomaticRetryAttribute.cs,AutomaticRetryAttribute,The following statement contains a magic number: Order = 20;
Magic Number,Hangfire,AutomaticRetryAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\AutomaticRetryAttribute.cs,ScheduleAgainLater,The following statement contains a magic number: const int maxMessageLength = 50;
Magic Number,Hangfire,BackgroundJobServerOptions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\BackgroundJobServerOptions.cs,BackgroundJobServerOptions,The following statement contains a magic number: WorkerCount = Math.Min(Environment.ProcessorCount * 5' MaxDefaultWorkerCount);
Magic Number,Hangfire,ContinuationsSupportAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\ContinuationsSupportAttribute.cs,ContinuationsSupportAttribute,The following statement contains a magic number: Order = 1000;
Magic Number,Hangfire,ContinuationsSupportAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\ContinuationsSupportAttribute.cs,GetContinuationState,The following statement contains a magic number: Thread.Sleep(firstAttempt ? 0 : 100);
Magic Number,Hangfire,Cron,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Cron.cs,Never,The following statement contains a magic number: return Yearly(2' 31);
Magic Number,Hangfire,Cron,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Cron.cs,Never,The following statement contains a magic number: return Yearly(2' 31);
Magic Number,Hangfire,Cron,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Cron.cs,GetDescription,The following statement contains a magic number: expressionParts.Length != 5
Magic Number,Hangfire,DashboardOptions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\DashboardOptions.cs,DashboardOptions,The following statement contains a magic number: StatsPollingInterval = 2000;
Magic Number,Hangfire,RecurringJobEntity,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobEntity.cs,Disable,The following statement contains a magic number: var result = new Dictionary<string' string>              {                  { "NextExecution"' String.Empty }'                  { "Error"' error.Message.Substring(0' Math.Min(100' error.Message.Length)) }              };
Magic Number,Hangfire,RecurringJobEntity,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\RecurringJobEntity.cs,ParseCronExpression,The following statement contains a magic number: parts.Length == 6
Magic Number,Hangfire,StatisticsHistoryAttribute,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\StatisticsHistoryAttribute.cs,StatisticsHistoryAttribute,The following statement contains a magic number: Order = 30;
Magic Number,Hangfire.Logging.LogProviders,ColouredConsoleLogProvider,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\App_Packages\LibLog.1.4\LibLog.cs,DefaultMessageFormatter,The following statement contains a magic number: stringBuilder.Append(("[" + level.ToString().ToUpper() + "]").PadRight(8));
Magic Number,Hangfire.Client,CoreBackgroundJobFactory,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Client\CoreBackgroundJobFactory.cs,Create,The following statement contains a magic number: var jobId = RetryOnException(ref attemptsLeft' _ => context.Connection.CreateExpiredJob(                  context.Job'                  parameters'                  createdAt'                  TimeSpan.FromDays(30)));
Magic Number,Hangfire.Client,CoreBackgroundJobFactory,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Client\CoreBackgroundJobFactory.cs,GetRetryDelay,The following statement contains a magic number: switch (retryAttempt)              {                  case 1: return TimeSpan.Zero;                  case 2: return TimeSpan.FromMilliseconds(50);                  case 3: return TimeSpan.FromMilliseconds(100);                  default: return TimeSpan.FromMilliseconds(500);              }
Magic Number,Hangfire.Client,CoreBackgroundJobFactory,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Client\CoreBackgroundJobFactory.cs,GetRetryDelay,The following statement contains a magic number: switch (retryAttempt)              {                  case 1: return TimeSpan.Zero;                  case 2: return TimeSpan.FromMilliseconds(50);                  case 3: return TimeSpan.FromMilliseconds(100);                  default: return TimeSpan.FromMilliseconds(500);              }
Magic Number,Hangfire.Client,CoreBackgroundJobFactory,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Client\CoreBackgroundJobFactory.cs,GetRetryDelay,The following statement contains a magic number: switch (retryAttempt)              {                  case 1: return TimeSpan.Zero;                  case 2: return TimeSpan.FromMilliseconds(50);                  case 3: return TimeSpan.FromMilliseconds(100);                  default: return TimeSpan.FromMilliseconds(500);              }
Magic Number,Hangfire.Client,CoreBackgroundJobFactory,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Client\CoreBackgroundJobFactory.cs,GetRetryDelay,The following statement contains a magic number: switch (retryAttempt)              {                  case 1: return TimeSpan.Zero;                  case 2: return TimeSpan.FromMilliseconds(50);                  case 3: return TimeSpan.FromMilliseconds(100);                  default: return TimeSpan.FromMilliseconds(500);              }
Magic Number,Hangfire.Client,CoreBackgroundJobFactory,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Client\CoreBackgroundJobFactory.cs,GetRetryDelay,The following statement contains a magic number: switch (retryAttempt)              {                  case 1: return TimeSpan.Zero;                  case 2: return TimeSpan.FromMilliseconds(50);                  case 3: return TimeSpan.FromMilliseconds(100);                  default: return TimeSpan.FromMilliseconds(500);              }
Magic Number,Hangfire.Common.ExpressionUtil,HashCodeCombiner,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Common\ExpressionUtil\HashCodeCombiner.cs,AddInt32,The following statement contains a magic number: _combinedHash64 = ((_combinedHash64 << 5) + _combinedHash64) ^ i;
Magic Number,Hangfire.Dashboard,BatchCommandDispatcher,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\BatchCommandDispatcher.cs,Dispatch,The following statement contains a magic number: context.Response.StatusCode = 401;
Magic Number,Hangfire.Dashboard,BatchCommandDispatcher,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\BatchCommandDispatcher.cs,Dispatch,The following statement contains a magic number: context.Response.StatusCode = 422;
Magic Number,Hangfire.Dashboard,CommandDispatcher,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\CommandDispatcher.cs,Dispatch,The following statement contains a magic number: context.Response.StatusCode = 401;
Magic Number,Hangfire.Dashboard,HtmlHelper,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\HtmlHelper.cs,JobId,The following statement contains a magic number: return new NonEscapedString(HtmlEncode(Guid.TryParse(jobId' out guid)                  ? (shorten ? jobId.Substring(0' 8) + "…" : jobId)                  : $"#{jobId}"));
Magic Number,Hangfire.Dashboard,HtmlHelper,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\HtmlHelper.cs,ToHumanDuration,The following statement contains a magic number: builder.Append($".{duration.Value.Milliseconds.ToString().PadLeft(3' '0')}");
Magic Number,Hangfire.Dashboard,JobHistoryRenderer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\JobHistoryRenderer.cs,ProcessingRenderer,The following statement contains a magic number: builder.Append($"<dd>{helper.HtmlEncode(stateData["WorkerId"].Substring(0' 8))}</dd>");
Magic Number,Hangfire.Dashboard,JobMethodCallRenderer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\JobMethodCallRenderer.cs,Render,The following statement contains a magic number: const int splitStringMinLength = 100;
Magic Number,Hangfire.Dashboard,Pager,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pager.cs,GenerateItems,The following statement contains a magic number: _startPageIndex = CurrentPage - PageItemsCount / 2;
Magic Number,Hangfire.Dashboard,Pager,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pager.cs,AddMoreBefore,The following statement contains a magic number: _startPageIndex > 2
Magic Number,Hangfire.Dashboard.Pages,ServersPage,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\ServersPage.cshtml.cs,Execute,The following statement contains a magic number: var possiblyAbortedThreshold = TimeSpan.FromMinutes(5);
Magic Number,Hangfire.Dashboard.Pages,PerPageSelector,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\_PerPageSelector.cs,Execute,The following statement contains a magic number: Write(count > 999 ? "visible-lg" : null);
Magic Number,Hangfire.Dashboard.Pages,PerPageSelector,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\_PerPageSelector.cs,Execute,The following statement contains a magic number: new[] { 10' 20' 50' 100' 500' 1000' 5000 }
Magic Number,Hangfire.Dashboard.Pages,PerPageSelector,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\_PerPageSelector.cs,Execute,The following statement contains a magic number: new[] { 10' 20' 50' 100' 500' 1000' 5000 }
Magic Number,Hangfire.Dashboard.Pages,PerPageSelector,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\_PerPageSelector.cs,Execute,The following statement contains a magic number: new[] { 10' 20' 50' 100' 500' 1000' 5000 }
Magic Number,Hangfire.Dashboard.Pages,PerPageSelector,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\_PerPageSelector.cs,Execute,The following statement contains a magic number: new[] { 10' 20' 50' 100' 500' 1000' 5000 }
Magic Number,Hangfire.Dashboard.Pages,PerPageSelector,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\_PerPageSelector.cs,Execute,The following statement contains a magic number: new[] { 10' 20' 50' 100' 500' 1000' 5000 }
Magic Number,Hangfire.Dashboard.Pages,PerPageSelector,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\_PerPageSelector.cs,Execute,The following statement contains a magic number: new[] { 10' 20' 50' 100' 500' 1000' 5000 }
Magic Number,Hangfire.Dashboard.Pages,PerPageSelector,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\_PerPageSelector.cs,Execute,The following statement contains a magic number: new[] { 10' 20' 50' 100' 500' 1000' 5000 }
Magic Number,Hangfire.Server,BackgroundProcessingServerOptions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundProcessingServerOptions.cs,BackgroundProcessingServerOptions,The following statement contains a magic number: RestartDelay = TimeSpan.FromSeconds(15);
Magic Number,Hangfire.Server,BackgroundServerProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundServerProcess.cs,GetServerTemplate,The following statement contains a magic number: name = $"{split[0]}:{split[1]}:{split[2].Substring(0' 8)}";
Magic Number,Hangfire.Server,BackgroundServerProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundServerProcess.cs,GetServerTemplate,The following statement contains a magic number: name = $"{split[0]}:{split[1]}:{split[2].Substring(0' 8)}";
Magic Number,Hangfire.Server,BackgroundServerProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundServerProcess.cs,GetServerTemplate,The following statement contains a magic number: split.Length == 3 && split[2].Length > 8
Magic Number,Hangfire.Server,BackgroundServerProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundServerProcess.cs,GetServerTemplate,The following statement contains a magic number: split.Length == 3 && split[2].Length > 8
Magic Number,Hangfire.Server,BackgroundServerProcess,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\BackgroundServerProcess.cs,GetServerTemplate,The following statement contains a magic number: split.Length == 3 && split[2].Length > 8
Magic Number,Hangfire.Server,RecurringJobScheduler,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Server\RecurringJobScheduler.cs,EnqueueBackgroundJob,The following statement contains a magic number: recurringJob.Version.HasValue && recurringJob.Version > 2
Magic Number,Hangfire.States,BackgroundJobStateChanger,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\States\BackgroundJobStateChanger.cs,GetJobData,The following statement contains a magic number: context.CancellationToken.Wait(TimeSpan.FromMilliseconds(firstAttempt ? 0 : 100));
Magic Number,Hangfire.Processing,BackgroundExecution,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundExecution.cs,GetExecutionLoopTemplate,The following statement contains a magic number: return $"Execution loop {ToString()}:{executionId.ToString().Substring(0' 8)}";
Magic Number,Hangfire.Processing,BackgroundExecutionOptions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundExecutionOptions.cs,BackgroundExecutionOptions,The following statement contains a magic number: WarningThreshold = TimeSpan.FromSeconds(5);
Magic Number,Hangfire.Processing,BackgroundExecutionOptions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundExecutionOptions.cs,BackgroundExecutionOptions,The following statement contains a magic number: ErrorThreshold = TimeSpan.FromSeconds(15);
Magic Number,Hangfire.Processing,BackgroundExecutionOptions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundExecutionOptions.cs,BackgroundExecutionOptions,The following statement contains a magic number: StillErrorThreshold = TimeSpan.FromSeconds(60);
Magic Number,Hangfire.Processing,BackgroundExecutionOptions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundExecutionOptions.cs,GetBackOffMultiplier,The following statement contains a magic number: var nextTry = rand.Next(                  (int)Math.Pow(retryAttemptNumber' 2)' (int)Math.Pow(retryAttemptNumber' 2) + 1);
Magic Number,Hangfire.Processing,BackgroundExecutionOptions,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Processing\BackgroundExecutionOptions.cs,GetBackOffMultiplier,The following statement contains a magic number: var nextTry = rand.Next(                  (int)Math.Pow(retryAttemptNumber' 2)' (int)Math.Pow(retryAttemptNumber' 2) + 1);
Missing Default,Hangfire.Dashboard,ArgumentRenderer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\JobMethodCallRenderer.cs,IsNumericType,The following switch statement is missing a default case: switch (type.GetTypeCode())                  {                      case TypeCode.Byte:                      case TypeCode.Decimal:                      case TypeCode.Double:                      case TypeCode.Int16:                      case TypeCode.Int32:                      case TypeCode.Int64:                      case TypeCode.SByte:                      case TypeCode.Single:                      case TypeCode.UInt16:                      case TypeCode.UInt32:                      case TypeCode.UInt64:                          return true;                        case TypeCode.Object:                          if (IsNullableType(type))                          {                              return IsNumericType(Nullable.GetUnderlyingType(type));                          }                          return false;                  }
Missing Default,Hangfire.Dashboard.Pages,Paginator,D:\research\architectureSmells\repos\HangfireIO_Hangfire\src\Hangfire.Core\Dashboard\Pages\_Paginator.cs,Execute,The following switch statement is missing a default case: switch (page.Type)                  {                      case Pager.ItemType.Page:                              #line default              #line hidden  WriteLiteral("                        <a href=\"");                                #line 15 "..\..\Dashboard\Pages\_Paginator.cshtml"                              Write(_pager.PageUrl(page.PageIndex));                              #line default              #line hidden  WriteLiteral("\" class=\"btn btn-default ");                                #line 15 "..\..\Dashboard\Pages\_Paginator.cshtml"                                                                                       Write(_pager.CurrentPage == page.PageIndex ? "active" : null);                              #line default              #line hidden  WriteLiteral("\">\r\n                            ");                                #line 16 "..\..\Dashboard\Pages\_Paginator.cshtml"                         Write(page.PageIndex);                              #line default              #line hidden  WriteLiteral("  \r\n                        </a>\r\n");                                #line 18 "..\..\Dashboard\Pages\_Paginator.cshtml"                          break;                      case Pager.ItemType.NextPage:                              #line default              #line hidden  WriteLiteral("                        <a href=\"");                                #line 20 "..\..\Dashboard\Pages\_Paginator.cshtml"                              Write(_pager.PageUrl(page.PageIndex));                              #line default              #line hidden  WriteLiteral("\" class=\"btn btn-default ");                                #line 20 "..\..\Dashboard\Pages\_Paginator.cshtml"                                                                                       Write(page.Disabled ? "disabled" : null);                              #line default              #line hidden  WriteLiteral("\">\r\n                            ");                                #line 21 "..\..\Dashboard\Pages\_Paginator.cshtml"                         Write(Strings.Paginator_Next);                              #line default              #line hidden  WriteLiteral("\r\n                        </a>\r\n");                                #line 23 "..\..\Dashboard\Pages\_Paginator.cshtml"                          break;                      case Pager.ItemType.PrevPage:                              #line default              #line hidden  WriteLiteral("                        <a href=\"");                                #line 25 "..\..\Dashboard\Pages\_Paginator.cshtml"                              Write(_pager.PageUrl(page.PageIndex));                              #line default              #line hidden  WriteLiteral("\" class=\"btn btn-default ");                                #line 25 "..\..\Dashboard\Pages\_Paginator.cshtml"                                                                                       Write(page.Disabled ? "disabled" : null);                              #line default              #line hidden  WriteLiteral("\">\r\n                            ");                                #line 26 "..\..\Dashboard\Pages\_Paginator.cshtml"                         Write(Strings.Paginator_Prev);                              #line default              #line hidden  WriteLiteral("\r\n                        </a>\r\n");                                #line 28 "..\..\Dashboard\Pages\_Paginator.cshtml"                          break;                      case Pager.ItemType.MorePage:                              #line default              #line hidden  WriteLiteral("                        <a href=\"#\" class=\"btn btn-default disabled\">\r\n          " +  "                  …\r\n                        </a>\r\n");                                #line 33 "..\..\Dashboard\Pages\_Paginator.cshtml"                          break;                  }
