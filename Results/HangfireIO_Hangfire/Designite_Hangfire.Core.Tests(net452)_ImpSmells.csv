Implementation smell,Namespace,Class,File,Method,Description
Long Method,Hangfire.Core.Tests,DataCompatibilityRangeTheoryDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryDiscoverer.cs,Discover,The method has 131 lines of code.
Complex Method,Hangfire.Core.Tests,DataCompatibilityRangeTheoryDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryDiscoverer.cs,Discover,Cyclomatic complexity of the method is 14
Complex Method,Hangfire.Core.Tests,DataCompatibilityRangeTheoryTestCaseRunner,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryTestCaseRunner.cs,AfterTestCaseStartingAsync,Cyclomatic complexity of the method is 8
Long Parameter List,Hangfire.Core.Tests,DataCompatibilityRangeTestCase,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTestCase.cs,RunAsync,The method has 5 parameters. Parameters: diagnosticMessageSink' messageBus' constructorArguments' aggregator' cancellationTokenSource
Long Parameter List,Hangfire.Core.Tests,DataCompatibilityRangeTestCaseRunner,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTestCaseRunner.cs,DataCompatibilityRangeTestCaseRunner,The method has 8 parameters. Parameters: testCase' displayName' skipReason' constructorArguments' testMethodArguments' messageBus' aggregator' cancellationTokenSource
Long Parameter List,Hangfire.Core.Tests,DataCompatibilityRangeTestRunner,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTestRunner.cs,DataCompatibilityRangeTestRunner,The method has 10 parameters. Parameters: test' messageBus' testClass' constructorArguments' testMethod' testMethodArguments' skipReason' beforeAfterAttributes' aggregator' cancellationTokenSource
Long Parameter List,Hangfire.Core.Tests,DataCompatibilityRangeTheoryDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryDiscoverer.cs,CreateTestCasesForSkippedDataRow,The method has 5 parameters. Parameters: discoveryOptions' testMethod' theoryAttribute' dataRow' skipReason
Long Parameter List,Hangfire.Core.Tests,DataCompatibilityRangeTheoryTestCase,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryTestCase.cs,RunAsync,The method has 5 parameters. Parameters: diagnosticMessageSink' messageBus' constructorArguments' aggregator' cancellationTokenSource
Long Parameter List,Hangfire.Core.Tests,DataCompatibilityRangeTheoryTestCaseRunner,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryTestCaseRunner.cs,DataCompatibilityRangeTheoryTestCaseRunner,The method has 9 parameters. Parameters: testCase' displayName' skipReason' constructorArguments' testMethodArguments' diagnosticMessageSink' messageBus' aggregator' cancellationTokenSource
Long Parameter List,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Serialize_CorrectlySerializesJobToInvocationData,The method has 5 parameters. Parameters: job' typeName' method' parameterTypes' serializedArgs
Long Parameter List,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Deserialize_CorrectlyDeserializesJobFromInvocationData,The method has 5 parameters. Parameters: job' typeName' method' parameterTypes' serializedArgs
Long Statement,Hangfire.Core.Tests,ContinuationsSupportAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\ContinuationsSupportAttributeFacts.cs,DeserializeContinuations_CanHandleFieldBasedSerialization_OfContinuationClass,The length of the statement  "            var payload = "[{\"<JobId>k__BackingField\":\"123\"'\"<Options>k__BackingField\":1}'{\"<JobId>k__BackingField\":\"456\"'\"<Options>k__BackingField\":0}]"; " is 154.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeFactDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeFactDiscoverer.cs,Discover,The length of the statement  "                    "[CompatibilityLevelFact] methods are not allowed to have parameters. Did you mean to use [CompatibilityLevelTheory]?"); " is 120.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTestCaseRunner,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTestCaseRunner.cs,RunTestAsync,The length of the statement  "            return new DataCompatibilityRangeTestRunner(new XunitTest(TestCase' DisplayName)' MessageBus' TestClass' ConstructorArguments' TestMethod' TestMethodArguments' SkipReason' BeforeAfterAttributes' new ExceptionAggregator(Aggregator)' CancellationTokenSource) " is 256.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryDiscoverer.cs,CreateTestCasesForSkippedDataRow,The length of the statement  "                new XunitSkippedDataRowTestCase(DiagnosticMessageSink' discoveryOptions.MethodDisplayOrDefault()' testMethod' skipReason' dataRow) " is 130.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryDiscoverer.cs,Discover,The length of the statement  "                                    $"Data discoverer specified for {reflectionAttributeInfo.Attribute.GetType()} on {testMethod.TestClass.Class.Name}.{testMethod.Method.Name} does not implement IDataDiscoverer.")); " is 179.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryDiscoverer.cs,Discover,The length of the statement  "                                $"A data discoverer specified on {testMethod.TestClass.Class.Name}.{testMethod.Method.Name} does not implement IDataDiscoverer.")); " is 131.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryDiscoverer.cs,Discover,The length of the statement  "                                    $"Data discoverer specified for {reflectionAttributeInfo.Attribute.GetType()} on {testMethod.TestClass.Class.Name}.{testMethod.Method.Name} does not exist.")); " is 159.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryDiscoverer.cs,Discover,The length of the statement  "                                    $"DataDiscoverer doesn't support discovery enumeration for {testMethod.TestClass.Class.Name}.{testMethod.Method.Name}.")); " is 122.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryDiscoverer.cs,Discover,The length of the statement  "                                    $"Test data returned null for {testMethod.TestClass.Class.Name}.{testMethod.Method.Name}. Make sure it is statically initialized before this test method is called.")); " is 167.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryDiscoverer.cs,Discover,The length of the statement  "                                var serializationHelperType = Type.GetType("Xunit.Sdk.SerializationHelper' xunit.execution.desktop"' throwOnError: false); " is 122.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryDiscoverer.cs,Discover,The length of the statement  "                                            $"Xunit.Sdk.SerializationHelper type not found for {testMethod.TestClass.Class.Name}.{testMethod.Method.Name}; falling back to single test case.")); " is 148.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryDiscoverer.cs,Discover,The length of the statement  "                                        $"Xunit.Sdk.SerializationHelper.IsSerializable method not found for {testMethod.TestClass.Class.Name}.{testMethod.Method.Name}; falling back to single test case.")); " is 165.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryDiscoverer.cs,Discover,The length of the statement  "                                            $"Non-serializable data ('{dataRow.GetType().FullName}') found for '{testMethod.TestClass.Class.Name}.{testMethod.Method.Name}'; falling back to single test case.")); " is 166.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryDiscoverer,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryDiscoverer.cs,Discover,The length of the statement  "                        $"Exception thrown during theory discovery on '{testMethod.TestClass.Class.Name}.{testMethod.Method.Name}'; falling back to single test case.{Environment.NewLine}{ex}")); " is 170.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryTestCase,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryTestCase.cs,RunAsync,The length of the statement  "            return new DataCompatibilityRangeTheoryTestCaseRunner(this' DisplayName' SkipReason' constructorArguments' TestMethodArguments' diagnosticMessageSink' messageBus' aggregator' cancellationTokenSource).RunAsync(); " is 211.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryTestCaseRunner,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryTestCaseRunner.cs,AfterTestCaseStartingAsync,The length of the statement  "                            Aggregator.Add(new InvalidOperationException($"Data discoverer specified for {reflectionAttribute.Attribute.GetType()} on {TestCase.TestMethod.TestClass.Class.Name}.{TestCase.TestMethod.Method.Name} does not exist.")); " is 218.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryTestCaseRunner,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryTestCaseRunner.cs,AfterTestCaseStartingAsync,The length of the statement  "                            Aggregator.Add(new InvalidOperationException($"A data discoverer specified on {TestCase.TestMethod.TestClass.Class.Name}.{TestCase.TestMethod.Method.Name} does not exist.")); " is 174.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryTestCaseRunner,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryTestCaseRunner.cs,AfterTestCaseStartingAsync,The length of the statement  "                                $"Data discoverer specified for {reflectionAttribute.Attribute.GetType()} on {TestCase.TestMethod.TestClass.Class.Name}.{TestCase.TestMethod.Method.Name} does not implement IDataDiscoverer.") " is 191.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryTestCaseRunner,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryTestCaseRunner.cs,AfterTestCaseStartingAsync,The length of the statement  "                                $"A data discoverer specified on {TestCase.TestMethod.TestClass.Class.Name}.{TestCase.TestMethod.Method.Name} does not implement IDataDiscoverer.")); " is 149.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryTestCaseRunner,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryTestCaseRunner.cs,AfterTestCaseStartingAsync,The length of the statement  "                        Aggregator.Add(new InvalidOperationException($"Test data returned null for {TestCase.TestMethod.TestClass.Class.Name}.{TestCase.TestMethod.Method.Name}. Make sure it is statically initialized before this test method is called.")); " is 230.
Long Statement,Hangfire.Core.Tests,DataCompatibilityRangeTheoryTestCaseRunner,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Utils\DataCompatibilityRangeTheoryTestCaseRunner.cs,AfterTestCaseStartingAsync,The length of the statement  "                        var theoryDisplayName = TestCase.TestMethod.Method.GetDisplayNameWithArguments(DisplayName' finalDataRow' resolvedTypes); " is 121.
Long Statement,Hangfire.Core.Tests.Client,CoreBackgroundJobFactoryFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Client\CoreBackgroundJobFactoryFacts.cs,Create_ReturnsNull_WhenCreateExpiredJobReturnedNull,The length of the statement  "                .Setup(x => x.CreateExpiredJob(It.IsAny<Job>()' It.IsAny<IDictionary<string' string>>()' It.IsAny<DateTime>()' It.IsAny<TimeSpan>())) " is 133.
Long Statement,Hangfire.Core.Tests.Client,CoreBackgroundJobFactoryFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Client\CoreBackgroundJobFactoryFacts.cs,Create_DoesNotRetryCreateExpiredJobMethod_ByDefault_AndThrowsAnException,The length of the statement  "                x => x.CreateExpiredJob(It.IsAny<Job>()' It.IsAny<IDictionary<string' string>>()' It.IsAny<DateTime>()' It.IsAny<TimeSpan>())' " is 126.
Long Statement,Hangfire.Core.Tests.Client,CoreBackgroundJobFactoryFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Client\CoreBackgroundJobFactoryFacts.cs,Create_DoesNotRetryStateTransaction_ByDefault_AndThrowsAnException,The length of the statement  "                x => x.CreateExpiredJob(It.IsAny<Job>()' It.IsAny<IDictionary<string' string>>()' It.IsAny<DateTime>()' It.IsAny<TimeSpan>())' " is 126.
Long Statement,Hangfire.Core.Tests.Client,CoreBackgroundJobFactoryFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Client\CoreBackgroundJobFactoryFacts.cs,Create_IsResilientToASingleCreateExpiredJobFault_WhenRetriesEnabled,The length of the statement  "                x => x.CreateExpiredJob(It.IsNotNull<Job>()' It.IsNotNull<IDictionary<string' string>>()' It.IsAny<DateTime>()' It.IsAny<TimeSpan>())' " is 134.
Long Statement,Hangfire.Core.Tests.Client,CoreBackgroundJobFactoryFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Client\CoreBackgroundJobFactoryFacts.cs,Create_IsResilientToASingleStateMachineFault_WhenRetriesEnabled,The length of the statement  "                x => x.CreateExpiredJob(It.IsNotNull<Job>()' It.IsNotNull<IDictionary<string' string>>()' It.IsAny<DateTime>()' It.IsAny<TimeSpan>())' " is 134.
Long Statement,Hangfire.Core.Tests.Client,CoreBackgroundJobFactoryFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Client\CoreBackgroundJobFactoryFacts.cs,Create_DoesNotInitializeJobTwice_WhenTransactionFaulted_WhenRetriesEnabled,The length of the statement  "                x => x.CreateExpiredJob(It.IsNotNull<Job>()' It.IsNotNull<IDictionary<string' string>>()' It.IsAny<DateTime>()' It.IsAny<TimeSpan>())' " is 134.
Long Statement,Hangfire.Core.Tests.Client,CoreBackgroundJobFactoryFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Client\CoreBackgroundJobFactoryFacts.cs,Create_ThrowsAnException_WhenJobDataReturnsNull_OnStateTransactionRetry,The length of the statement  "                x => x.CreateExpiredJob(It.IsNotNull<Job>()' It.IsNotNull<IDictionary<string' string>>()' It.IsAny<DateTime>()' It.IsAny<TimeSpan>())' " is 134.
Long Statement,Hangfire.Core.Tests.Common,JobHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobHelperFacts.cs,ForSerializeCanUseCustomConfigurationOfJsonNet,The length of the statement  "                JobHelper.SetSerializerSettings(new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() }); " is 128.
Long Statement,Hangfire.Core.Tests.Common,JobHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobHelperFacts.cs,ForDeserializeCanUseCustomConfigurationOfJsonNet,The length of the statement  "                var result = (ClassA)JobHelper.FromJson<IClass>(@"{ ""$type"": ""Hangfire.Core.Tests.Common.JobHelperFacts+ClassA' Hangfire.Core.Tests""' ""propertyA"":""A"" }"); " is 162.
Long Statement,Hangfire.Core.Tests.Common,JobHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobHelperFacts.cs,ForDeserializeWithGenericMethodCanUseCustomConfigurationOfJsonNet,The length of the statement  "                var result = (ClassA)JobHelper.FromJson(@"{ ""$type"": ""Hangfire.Core.Tests.Common.JobHelperFacts+ClassA' Hangfire.Core.Tests""' ""propertyA"":""A"" }"' typeof(IClass)); " is 170.
Long Statement,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_ReturnsCorrectJson_WhenOptionsIsTypedInternal,The length of the statement  "            Assert.Equal(@"{""$type"":""Hangfire.Core.Tests.Common.SerializationHelperFacts+ClassA' Hangfire.Core.Tests""'""PropertyA"":""B""}"' result); " is 141.
Long Statement,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsAffectResult_WhenOptionIs_User,The length of the statement  "            var result = SerializationHelper.Serialize(new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) }' SerializationOption.User); " is 146.
Long Statement,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsAffectResult_WhenOptionIs_User,The length of the statement  "                "{\"$type\":\"HANGFIRE.CORE.TESTS.COMMON.SERIALIZATIONHELPERFACTS+CLASSB' someAssembly\"'\"StringValue\":\"B\"'\"DateTimeValue\":\"12041961\"}"' " is 144.
Long Statement,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoAffectResult_WhenOptionIs_Internal_BeforeVersion_170,The length of the statement  "            var result = SerializationHelper.Serialize(new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) }); " is 120.
Long Statement,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoAffectResult_WhenOptionIs_Internal_BeforeVersion_170,The length of the statement  "                "{\"$type\":\"HANGFIRE.CORE.TESTS.COMMON.SERIALIZATIONHELPERFACTS+CLASSB' someAssembly\"'\"StringValue\":\"B\"'\"DateTimeValue\":\"12041961\"}"' " is 144.
Long Statement,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoNotAffectResult_WhenOptionIs_Internal_StartingFromVersion_170,The length of the statement  "            var result = SerializationHelper.Serialize(new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) }); " is 120.
Long Statement,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoAffectResult_WhenOptionIs_TypedInternal_BeforeVersion_170,The length of the statement  "                "{\"$type\":\"HANGFIRE.CORE.TESTS.COMMON.SERIALIZATIONHELPERFACTS+CLASSB' someAssembly\"'\"StringValue\":\"B\"'\"DateTimeValue\":\"12041961\"}"' " is 144.
Long Statement,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoNotAffectResult_WhenOptionIs_TypedInternal_StartingFromVersion_170,The length of the statement  "            Assert.Equal(@"{""$type"":""Hangfire.Core.Tests.Common.SerializationHelperFacts+ClassB' Hangfire.Core.Tests""'""StringValue"":""B""'""DateTimeValue"":""1961-04-12T00:00:00""}"' result); " is 185.
Long Statement,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_WithSpecifiedType_IncludesTypeProperty_WhenItDoesNotEqualToDeclared_AndTypeNameHandlingAutoIsUsed,The length of the statement  "            Assert.Equal("{\"$type\":\"Hangfire.Core.Tests.Common.SerializationHelperFacts+ClassA' Hangfire.Core.Tests\"'\"PropertyA\":\"hello\"}"' result); " is 144.
Long Statement,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Deserialize_ReturnsCorrectObject_WhenOptionsIsTypedInternal,The length of the statement  "            var valueJson = @"{""$type"":""Hangfire.Core.Tests.Common.SerializationHelperFacts+ClassA' Hangfire.Core.Tests""'""PropertyA"":""A""}"; " is 135.
Long Statement,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Deserialize_HandlesDeserializationUsingUserOption_WhenUsingInternalOptionThrewException,The length of the statement  "            var json = "{\"$type\":\"HANGFIRE.CORE.TESTS.COMMON.SERIALIZATIONHELPERFACTS+CLASSB' someAssembly\"'\"StringValue\":\"B\"'\"DateTimeValue\":\"12041961\"}"; " is 155.
Long Statement,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Deserialize_RethrowsAnException_WhenUsingInternalOptionThrewException_AndUserSettingsAttemptFailedToo,The length of the statement  "            var json = "{\"$type\":\"HANGFIRE.CORE.TESTS.COMMON.SERIALIZATIONHELPERFACTS+CLASSB' someAssembly\"'\"StringValue\":\"B\"'\"DateTimeValue\":\"12041961\"}"; " is 155.
Long Statement,Hangfire.Core.Tests.Common,TypeExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\TypeExtensionsFacts.cs,ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot,The length of the statement  "            Assert.Equal(typeof(NonGenericClass.NestedNonGenericClass).ToGenericTypeString()' "NonGenericClass.NestedNonGenericClass"); " is 123.
Long Statement,Hangfire.Core.Tests.Common,TypeExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\TypeExtensionsFacts.cs,ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot,The length of the statement  "            Assert.Equal(typeof(NonGenericClass.NestedNonGenericClass.DoubleNestedNonGenericClass).ToGenericTypeString()' "NonGenericClass.NestedNonGenericClass.DoubleNestedNonGenericClass"); " is 179.
Long Statement,Hangfire.Core.Tests.Common,TypeExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\TypeExtensionsFacts.cs,ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters,The length of the statement  "            Assert.Equal(typeof(NonGenericClass.NestedGenericClass<'>).ToGenericTypeString()' "NonGenericClass.NestedGenericClass<T1'T2>"); " is 127.
Long Statement,Hangfire.Core.Tests.Common,TypeExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\TypeExtensionsFacts.cs,ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters,The length of the statement  "            Assert.Equal(typeof(GenericClass<>.NestedNonGenericClass).ToGenericTypeString()' "GenericClass<T1>.NestedNonGenericClass"); " is 123.
Long Statement,Hangfire.Core.Tests.Common,TypeExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\TypeExtensionsFacts.cs,ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters,The length of the statement  "            Assert.Equal(typeof(GenericClass<>.NestedNonGenericClass.DoubleNestedGenericClass<''>).ToGenericTypeString()' "GenericClass<T1>.NestedNonGenericClass.DoubleNestedGenericClass<T2'T3'T4>"); " is 187.
Long Statement,Hangfire.Core.Tests.Common,TypeExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\TypeExtensionsFacts.cs,ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes,The length of the statement  "            Assert.Equal(typeof(NonGenericClass.NestedGenericClass<Assert' List<Assert>>).ToGenericTypeString()' "NonGenericClass.NestedGenericClass<Assert'List<Assert>>"); " is 160.
Long Statement,Hangfire.Core.Tests.Common,TypeExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\TypeExtensionsFacts.cs,ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes,The length of the statement  "            Assert.Equal(typeof(GenericClass<List<Assert>>.NestedNonGenericClass).ToGenericTypeString()' "GenericClass<List<Assert>>.NestedNonGenericClass"); " is 145.
Long Statement,Hangfire.Core.Tests.Common,TypeExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\TypeExtensionsFacts.cs,ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes,The length of the statement  "            Assert.Equal(typeof(GenericClass<List<GenericClass<List<Assert>>.NestedNonGenericClass.DoubleNestedGenericClass<Assert' List<Assert>' Stack<Assert>>>>.NestedNonGenericClass.DoubleNestedGenericClass<Assert' List<Assert>' Stack<Assert>>).ToGenericTypeString()' "GenericClass<List<GenericClass<List<Assert>>.NestedNonGenericClass.DoubleNestedGenericClass<Assert'List<Assert>'Stack<Assert>>>>.NestedNonGenericClass.DoubleNestedGenericClass<Assert'List<Assert>'Stack<Assert>>");         " is 473.
Long Statement,Hangfire.Core.Tests.Server,CoreBackgroundJobPerformerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\CoreBackgroundJobPerformerFacts.cs,Run_ReturnsTaskResult_WhenCallingFunctionReturningGenericTask,The length of the statement  "            _context.BackgroundJob.Job = Job.FromExpression<JobFacts.Instance>(x => x.FunctionReturningTaskResultingInString(continueOnCapturedContext)); " is 141.
Long Statement,Hangfire.Core.Tests.Server,CoreBackgroundJobPerformerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\CoreBackgroundJobPerformerFacts.cs,Run_ReturnsTaskResult_WhenCallingFunctionReturningValueTask,The length of the statement  "            _context.BackgroundJob.Job = Job.FromExpression<JobFacts.Instance>(x => x.FunctionReturningValueTaskResultingInString(continueOnCapturedContext)); " is 146.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_DoesNotUpdateRetryAttempt_WhenItWasNotModified,The length of the statement  "            _transaction.Verify(x => x.AddToSet("recurring-jobs"' RecurringJobId' JobHelper.ToTimestamp(_nowInstant.AddMinutes(1)))); " is 121.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_RemovesRecurringJobFromSchedule_WhenHashDoesNotExist,The length of the statement  "                _storageConnection.SetupSequence(x => x.GetFirstByLowestScoreFromSet("recurring-jobs"' 0' JobHelper.ToTimestamp(_nowInstant)' It.IsAny<int>())) " is 143.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_DoesNotCycleImmediately_WhenItCantDeserializeEverything,The length of the statement  "                    .Setup(x => x.GetFirstByLowestScoreFromSet(It.IsNotNull<string>()' It.IsAny<double>()' It.IsAny<double>()' It.IsAny<int>())) " is 124.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_UsesTimeZoneResolver_WhenCalculatingNextExecution,The length of the statement  "            _transaction.Verify(x => x.AddToSet("recurring-jobs"' RecurringJobId' JobHelper.ToTimestamp(_nowInstant.AddHours(18).AddMinutes(30)))); " is 135.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_DoesNotScheduleRecurringJob_ToThePast,The length of the statement  "            _transaction.Verify(x => x.AddToSet("recurring-jobs"' RecurringJobId' JobHelper.ToTimestamp(_nowInstant.AddMinutes(1)))); " is 121.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_DoesNotUseBatchedMethod_WhenStorageConnectionThrowsAnException,The length of the statement  "                .Setup(x => x.GetFirstByLowestScoreFromSet(It.IsAny<string>()' It.IsAny<double>()' It.IsAny<double>()' It.IsAny<int>())) " is 120.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_DoesNotUseBatchedMethod_WhenStorageConnectionThrowsAnException,The length of the statement  "            _transaction.Verify(x => x.AddToSet("recurring-jobs"' RecurringJobId' JobHelper.ToTimestamp(_nowInstant.AddMinutes(1)))); " is 121.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_AlwaysUpdatesScoreForTheSetItem_EvenIfRecurringJobWasNotChanged,The length of the statement  "            _connection.SetupSequence(x => x.GetFirstByLowestScoreFromSet("recurring-jobs"' It.IsAny<double>()' It.IsAny<double>())) " is 120.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_AlwaysUpdatesScoreForTheSetItem_EvenIfRecurringJobWasNotChanged,The length of the statement  "            _transaction.Verify(x => x.SetRangeInHash(It.IsAny<string>()' It.IsAny<IEnumerable<KeyValuePair<string' string>>>())' Times.Never); " is 131.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_AlwaysUpdatesScoreForTheSetItem_EvenIfRecurringJobWasNotChanged,The length of the statement  "            _transaction.Verify(x => x.AddToSet("recurring-jobs"' RecurringJobId' JobHelper.ToTimestamp(_nowInstant.AddMinutes(1)))); " is 121.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_UsesUtcTimeZone_WhenCorrespondingFieldIsNullOrEmpty,The length of the statement  "            _connection.SetupSequence(x => x.GetFirstByLowestScoreFromSet("recurring-jobs"' It.IsAny<double>()' It.IsAny<double>())) " is 120.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_ReschedulesRecurringJob_WhenCronExpressionIsInvalid_AndRetryAttemptsAreNotExceeded,The length of the statement  "            _connection.SetupSequence(x => x.GetFirstByLowestScoreFromSet("recurring-jobs"' It.IsAny<double>()' It.IsAny<double>())) " is 120.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_DoesNotFailOnInvalidCronExpression_AndSimplySetsNextExecutionToNull_WhenRetryAttemptsExceeded,The length of the statement  "            _connection.SetupSequence(x => x.GetFirstByLowestScoreFromSet("recurring-jobs"' It.IsAny<double>()' It.IsAny<double>())) " is 120.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_ClearsLastError_AndRetryAttempts_AfterSuccessfulScheduling,The length of the statement  "            _connection.SetupSequence(x => x.GetFirstByLowestScoreFromSet("recurring-jobs"' It.IsAny<double>()' It.IsAny<double>())) " is 120.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_ReschedulesRecurringJob_WhenThereAreIssuesWithJobLoading_AndRetryAttemptsAreNotExceeded,The length of the statement  "            _connection.SetupSequence(x => x.GetFirstByLowestScoreFromSet("recurring-jobs"' It.IsAny<double>()' It.IsAny<double>())) " is 120.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_ReschedulesRecurringJob_WithIncreasedAttemptNumber_WhenThereAreIssuesWithJobLoading_AndRetryAttemptsAreNotExceeded,The length of the statement  "            _connection.SetupSequence(x => x.GetFirstByLowestScoreFromSet("recurring-jobs"' It.IsAny<double>()' It.IsAny<double>())) " is 120.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_HidesRecurringJob_FromScheduler_WhenJobCanNotBeLoaded_AndRetryAttemptsExceeded,The length of the statement  "            _connection.SetupSequence(x => x.GetFirstByLowestScoreFromSet("recurring-jobs"' It.IsAny<double>()' It.IsAny<double>())) " is 120.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_HidesRecurringJob_FromScheduler_WhenJobCanNotBeDeserialized_AndRetryAttemptsExceeded,The length of the statement  "            _connection.SetupSequence(x => x.GetFirstByLowestScoreFromSet("recurring-jobs"' It.IsAny<double>()' It.IsAny<double>())) " is 120.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_HidesRecurringJob_FromScheduler_WhenJobIsNull_AndRetryAttemptsExceeded,The length of the statement  "            _connection.SetupSequence(x => x.GetFirstByLowestScoreFromSet("recurring-jobs"' It.IsAny<double>()' It.IsAny<double>())) " is 120.
Long Statement,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_HidesRecurringJob_FromScheduler_WhenTimeZoneCanNotBeResolved_AndRetryAttemptsExceeded,The length of the statement  "            _connection.SetupSequence(x => x.GetFirstByLowestScoreFromSet("recurring-jobs"' It.IsAny<double>()' It.IsAny<double>())) " is 120.
Long Statement,Hangfire.Core.Tests.Server,ServerJobCancellationWatcherFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\ServerJobCancellationWatcherFacts.cs,Execute_DelegatesCancellationToServerJobCancellationToken,The length of the statement  "            var token = new ServerJobCancellationToken(_connection.Object' "job-id"' _context.ServerId' "1"' _context.StoppedTokenSource.Token); " is 132.
Long Statement,Hangfire.Core.Tests.Server,WorkerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\WorkerFacts.cs,Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect,The length of the statement  "                .Setup(x => x.ChangeState(It.Is<StateChangeContext>(ctx => ctx.BackgroundJobId == JobId && ctx.NewState is ProcessingState))) " is 125.
Long Statement,Hangfire.Core.Tests.Server,WorkerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\WorkerFacts.cs,Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect,The length of the statement  "                .Setup(x => x.ChangeState(It.Is<StateChangeContext>(ctx => ctx.BackgroundJobId == JobId && ctx.NewState is SucceededState))) " is 124.
Long Statement,Hangfire.Core.Tests.States,ApplyStateContextFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\ApplyStateContextFacts.cs,Ctor_ThrowsAnException_WhenStorageIsNull,The length of the statement  "                () => new ApplyStateContext(null' _connection.Object' _transaction.Object' _backgroundJob.Object' _newState.Object' OldState)); " is 127.
Long Statement,Hangfire.Core.Tests.States,ApplyStateContextFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\ApplyStateContextFacts.cs,Ctor_ThrowsAnException_WhenBackgroundJobIsNull,The length of the statement  "                () => new ApplyStateContext(_storage.Object' _connection.Object' _transaction.Object' null' _newState.Object' OldState)); " is 121.
Long Statement,Hangfire.Core.Tests.States,ApplyStateContextFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\ApplyStateContextFacts.cs,Ctor_ThrowsAnException_WhenNewStateIsNull,The length of the statement  "                () => new ApplyStateContext(_storage.Object' _connection.Object' _transaction.Object' _backgroundJob.Object' null' OldState)); " is 126.
Long Statement,Hangfire.Core.Tests.States,AwaitingStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\AwaitingStateFacts.cs,SerializeData_ReturnsCorrectData_Before170,The length of the statement  "            Assert.Equal("{\"$type\":\"Hangfire.States.EnqueuedState' Hangfire.Core\"'\"Queue\":\"default\"'\"Reason\":null}"' data["NextState"]); " is 134.
Long Statement,Hangfire.Core.Tests.States,AwaitingStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\AwaitingStateFacts.cs,SerializeData_HandlesChangingProcessOfInternalDataSerialization,The length of the statement  "            var nextState = SerializationHelper.Deserialize<IState>(nextStateSerialized' SerializationOption.TypedInternal) as EnqueuedState; " is 129.
Long Statement,Hangfire.Core.Tests.States,AwaitingStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\AwaitingStateFacts.cs,JsonSerialize_ReturnsCorrectString_Before170,The length of the statement  "                "{\"$type\":\"Hangfire.States.AwaitingState' Hangfire.Core\"'\"ParentId\":\"parent\"'\"NextState\":{\"$type\":\"Hangfire.States.EnqueuedState' Hangfire.Core\"'\"Queue\":\"default\"'\"Reason\":null}'\"Options\":0'\"Reason\":null}"' " is 230.
Long Statement,Hangfire.Core.Tests.States,AwaitingStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\AwaitingStateFacts.cs,JsonSerialize_ReturnsCorrectString_After170,The length of the statement  "                "{\"$type\":\"Hangfire.States.AwaitingState' Hangfire.Core\"'\"ParentId\":\"parent\"'\"NextState\":{\"$type\":\"Hangfire.States.EnqueuedState' Hangfire.Core\"'\"Queue\":\"default\"}}"' " is 184.
Long Statement,Hangfire.Core.Tests.States,AwaitingStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\AwaitingStateFacts.cs,JsonDeserialize_CanHandlePreviousFormat,The length of the statement  "            var json = "{\"$type\":\"Hangfire.States.AwaitingState' Hangfire.Core\"'\"ParentId\":\"parent\"'\"NextState\":{\"$type\":\"Hangfire.States.EnqueuedState' Hangfire.Core\"'\"Queue\":\"default\"}'\"Options\":1'\"Name\":\"Awaiting\"}"; " is 231.
Long Statement,Hangfire.Core.Tests.States,AwaitingStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\AwaitingStateFacts.cs,JsonDeserialize_CanHandleNewFormat,The length of the statement  "            var json = "{\"$type\":\"Hangfire.States.AwaitingState' Hangfire.Core\"'\"ParentId\":\"parent\"'\"NextState\":{\"$type\":\"Hangfire.States.EnqueuedState' Hangfire.Core\"'\"Queue\":\"default\"}}"; " is 195.
Long Statement,Hangfire.Core.Tests.States,EnqueuedStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\EnqueuedStateFacts.cs,JsonDeserialize_CanHandlePreviousFormat,The length of the statement  "            var json = "{\"Queue\":\"critical\"'\"EnqueuedAt\":\"2012-04-02T11:22:33.0000000Z\"'\"Name\":\"Enqueued\"'\"Reason\":\"hello\"'\"IsFinal\":false'\"IgnoreJobLoadException\":false}"; " is 180.
Long Statement,Hangfire.Core.Tests.States,ScheduledStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\ScheduledStateFacts.cs,JsonSerialize_ReturnsCorrectString_Before170,The length of the statement  "                "{\"$type\":\"Hangfire.States.ScheduledState' Hangfire.Core\"'\"EnqueueAt\":" + convertedDateTime + "'\"Reason\":null}"' " is 120.
Long Statement,Hangfire.Core.Tests.States,SucceededStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\SucceededStateFacts.cs,JsonSerialize_ReturnsCorrectString_Before170,The length of the statement  "                "{\"$type\":\"Hangfire.States.SucceededState' Hangfire.Core\"'\"Result\":null'\"Latency\":1'\"PerformanceDuration\":2'\"Reason\":null}"' " is 136.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Deserialize_HandlesFullAssemblyNames,The length of the statement  "                "Hangfire.Core.Tests.Storage.InvocationDataFacts' Hangfire.Core.Tests' Version=1.0.0.0' Culture=neutral' PublicKeyToken=null"' " is 126.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Deserialize_HandlesFullyQualifiedAssemblyNames_OfNonSignedAssembly_OfDifferentVersion,The length of the statement  "                    "Hangfire.Core.Tests.Storage.InvocationDataFacts' Hangfire.Core.Tests' Version=9.9.9.9' Culture=neutral' PublicKeyToken=null"' " is 126.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Deserialize_HandlesFullyQualifiedAssemblyNames_OfSignedAssembly_OfDifferentVersion,The length of the statement  "                    "Hangfire.Core.Tests.Storage.InvocationDataFacts' Hangfire.Core.Tests' Version=9.9.9.9' Culture=neutral' PublicKeyToken=7cec85d7bea7798e"' " is 138.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Deserialize_HandlesGenericTypes_WithFullyQualifiedAssemblyNames_OfSignedAssembly_OfDifferentVersion,The length of the statement  "                    "Hangfire.Core.Tests.Storage.InvocationDataFacts+GenericType`1[[System.Int32' mscorlib' Version=4.0.0.0' Culture=neutral' PublicKeyToken=7cec85d7bea7798e]]' Hangfire.Core.Tests' Version=9.9.9.9' Culture=neutral' PublicKeyToken=7cec85d7bea7798e"' " is 245.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Deserialize_HandlesGenericTypes_WithFullyQualifiedAssemblyNames_OfSignedAssembly_OfDifferentVersion,The length of the statement  "                    "[\"System.Int32' System.Private.CoreLib' Version=9.9.9.9' Culture=neutral' PublicKeyToken=lalalalala\"'\"System.Int32' mscorlib' Version=4.0.0.0' Culture=neutral' PublicKeyToken=7cec85d7bea7798e\"]"' " is 200.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Serialize_CorrectlyHandles_ParameterTypes_InPossibleOldFormat,The length of the statement  "                "{\"$type\":\"System.Type[]' mscorlib\"'\"$values\":[\"System.Collections.Generic.IList`1[[System.String' mscorlib]]' mscorlib\"'\"Hangfire.Core.Tests.Storage.InvocationDataFacts+SomeClass' Hangfire.Core.Tests\"]}"' " is 215.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Serialize_WithTypeNameHandlingAuto_PreservesTypeInformation,The length of the statement  "            Assert.Equal("[\"{\\\"$type\\\":\\\"Hangfire.Core.Tests.Storage.InvocationDataFacts+SomeClass' Hangfire.Core.Tests\\\"}\"]"' data.Arguments); " is 141.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,SerializePayload_CorrectlySerializesInvocationDataToString_WithOldFormat_InVersion_Pre_170,The length of the statement  "                "{\"Type\":\"Hangfire.Core.Tests.Storage.InvocationDataFacts' Hangfire.Core.Tests\"'\"Method\":\"Sample\"'\"ParameterTypes\":\"[\\\"System.String\\\"]\"'\"Arguments\":\"[\\\"\\\\\\\"Hello\\\\\\\"\\\"]\"}"' " is 205.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,SerializePayload_DoesNotIncludeArgumentsWhenStatedSo_WithOldFormat_InVersion_Pre_170,The length of the statement  "                "{\"Type\":\"Hangfire.Core.Tests.Storage.InvocationDataFacts' Hangfire.Core.Tests\"'\"Method\":\"Sample\"'\"ParameterTypes\":\"[\\\"System.String\\\"]\"'\"Arguments\":null}"' " is 174.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,SerializePayload_SerializesInvocationDataToString_WithoutNullifyingEmptyEntries_InVersion_Pre_170,The length of the statement  "                "{\"Type\":\"Hangfire.Core.Tests.Storage.InvocationDataFacts' Hangfire.Core.Tests\"'\"Method\":\"Empty\"'\"ParameterTypes\":\"[]\"'\"Arguments\":\"[]\"}"' " is 154.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,SerializePayload_CorrectlySerializesInvocationDataToString_WithNewFormat_InVersion_170,The length of the statement  "                "{\"t\":\"Hangfire.Core.Tests.Storage.InvocationDataFacts' Hangfire.Core.Tests\"'\"m\":\"Sample\"'\"p\":[\"System.String\"]'\"a\":[\"\\\"Hello\\\"\"]}"' " is 152.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,SerializePayload_DoesNotIncludeArgumentsWhenStatedSo_WithNewFormat_InVersion_170,The length of the statement  "                "{\"t\":\"Hangfire.Core.Tests.Storage.InvocationDataFacts' Hangfire.Core.Tests\"'\"m\":\"Sample\"'\"p\":[\"System.String\"]}"' " is 126.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Deserialize_DeserializesCorrectlyShortFormatStringToInvocationData,The length of the statement  "            var invocationData = "{\"t\":\"Hangfire.Core.Tests.Storage.InvocationDataFacts' Hangfire.Core.Tests\"'\"m\":\"Empty\"}"; " is 120.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,DeserializeJob_CanPreviousFormat_WhenTypeNameHandlingOptionIsSetToAll,The length of the statement  "                .DeserializePayload("{\"$type\":\"Hangfire.Storage.InvocationData' Hangfire.Core\"'\"Type\":\"System.Console' mscorlib' Version=4.0.0.0' Culture=neutral' PublicKeyToken=b77a5c561934e089\"'\"Method\":\"WriteLine\"'\"ParameterTypes\":\"{\\\"$type\\\":\\\"System.Type[]' mscorlib\\\"'\\\"$values\\\":[\\\"System.String' mscorlib' Version=4.0.0.0' Culture=neutral' PublicKeyToken=b77a5c561934e089\\\"]}\"'\"Arguments\":\"{\\\"$type\\\":\\\"System.String[]' mscorlib\\\"'\\\"$values\\\":[\\\"\\\\\\\"Hello \\\\\\\"\\\"]}\"}") " is 520.
Long Statement,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,DeserializePayload_CanHandleFieldBasedSerialization_OfInvocationDataClass,The length of the statement  "            var payload = "{\"<Type>k__BackingField\":\"System.Console' mscorlib' Version=4.0.0.0' Culture=neutral' PublicKeyToken=b77a5c561934e089\"'\"<Method>k__BackingField\":\"WriteLine\"'\"<ParameterTypes>k__BackingField\":\"[]\"'\"<Arguments>k__BackingField\":\"[]\"}"; " is 263.
Long Statement,Hangfire.Core.Tests.Storage,StorageConnectionExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\StorageConnectionExtensionsFacts.cs,GivenRecurringJobIsCancelledWhenGetRecurringJobsThenNotGetStateData,The length of the statement  "                    { "Job"' @"{""Type"":""ConsoleApplication1.CommandHandler' ConsoleApplication1""'""Method"":""Handle""'""ParameterTypes"":""[\""string\""]""'""Arguments"":""[\""Text\""]""}"}' " is 175.
Long Statement,Hangfire.Core.Tests.Storage,StorageConnectionExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\StorageConnectionExtensionsFacts.cs,GetRecurringJobsWithNullDateTimeHashValues,The length of the statement  "			    { "Job"' @"{""Type"":""ConsoleApplication1.CommandHandler' ConsoleApplication1""'""Method"":""Handle""'""ParameterTypes"":""[\""string\""]""'""Arguments"":""[\""Text\""]""}"}' " is 175.
Magic Number,Hangfire.Core.Tests,ContinuationsSupportAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\ContinuationsSupportAttributeFacts.cs,HandlesChangingProcessOfInternalDataSerialization,The following statement contains a magic number: Assert.Equal(2' continuations.Count);
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Hourly_WithMinute_ReturnsFormattedStringWithMinute,The following statement contains a magic number: string actual = Cron.Hourly(5);
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute,The following statement contains a magic number: string actual = Cron.Daily(5);
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute,The following statement contains a magic number: string actual = Cron.Daily(5' 5);
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute,The following statement contains a magic number: string actual = Cron.Daily(5' 5);
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour,The following statement contains a magic number: int hour = 5;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute,The following statement contains a magic number: int hour = 5;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute,The following statement contains a magic number: int minute = 5;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay,The following statement contains a magic number: int day = 6;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour,The following statement contains a magic number: int day = 7;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour,The following statement contains a magic number: int hour = 4;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute,The following statement contains a magic number: int day = 7;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute,The following statement contains a magic number: int hour = 4;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute,The following statement contains a magic number: int minute = 23;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth,The following statement contains a magic number: int month = 7;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay,The following statement contains a magic number: int month = 8;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay,The following statement contains a magic number: int day = 18;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour,The following statement contains a magic number: int month = 3;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour,The following statement contains a magic number: int day = 18;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour,The following statement contains a magic number: int hour = 14;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute,The following statement contains a magic number: int month = 4;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute,The following statement contains a magic number: int day = 17;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute,The following statement contains a magic number: int hour = 3;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute,The following statement contains a magic number: int minute = 45;
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Never_ReturnsFormattedString,The following statement contains a magic number: string actual = Cron.Yearly(2' 31);
Magic Number,Hangfire.Core.Tests,CronFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\CronFacts.cs,Never_ReturnsFormattedString,The following statement contains a magic number: string actual = Cron.Yearly(2' 31);
Magic Number,Hangfire.Core.Tests,JobStorageFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\JobStorageFacts.cs,JobExpirationTimeout_CanChangeTheTimeout,The following statement contains a magic number: GlobalConfiguration.Configuration                  .UseStorage(_storage.Object)                  .WithJobExpirationTimeout(TimeSpan.FromDays(3));
Magic Number,Hangfire.Core.Tests,JobStorageFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\JobStorageFacts.cs,JobExpirationTimeout_CanChangeTheTimeout,The following statement contains a magic number: Assert.Equal(TimeSpan.FromDays(3)' _storage.Object.JobExpirationTimeout);
Magic Number,Hangfire.Core.Tests,LatencyTimeoutAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\LatencyTimeoutAttributeFacts.cs,OnStateElection_ChangesToDeleted_IfTimeoutExceeded,The following statement contains a magic number: var filter = CreateFilter(10);
Magic Number,Hangfire.Core.Tests,LatencyTimeoutAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\LatencyTimeoutAttributeFacts.cs,OnStateElection_DoesNotChangeAnything_IfTimeoutNotExceeded,The following statement contains a magic number: var filter = CreateFilter(100);
Magic Number,Hangfire.Core.Tests,RecurringJobManagerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RecurringJobManagerFacts.cs,AddOrUpdate_IsAbleToScheduleSecondBasedCronExpression,The following statement contains a magic number: _transaction.Verify(x => x.AddToSet("recurring-jobs"' _id' JobHelper.ToTimestamp(_now.AddSeconds(15))));
Magic Number,Hangfire.Core.Tests,RecurringJobManagerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RecurringJobManagerFacts.cs,AddOrUpdate_UsesTimeZoneResolver_WhenCalculatingNextExecution,The following statement contains a magic number: _connection.Setup(x => x.GetAllEntriesFromHash($"recurring-job:{_id}")).Returns(new Dictionary<string' string>              {                  { "Cron"' "0 0 * * *" }'                  { "Job"' InvocationData.Serialize(_job).SerializePayload() }'                  { "CreatedAt"' JobHelper.SerializeDateTime(_now) }'                  { "TimeZoneId"' PlatformHelper.IsRunningOnWindows() ? "Pacific/Honolulu" : "Hawaiian Standard Time" }'                  { "NextExecution"' JobHelper.SerializeDateTime(_now.AddHours(18).AddMinutes(30)) }'                  { "Queue"' "default" }'                  { "V"' "2" }              });
Magic Number,Hangfire.Core.Tests,RecurringJobManagerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RecurringJobManagerFacts.cs,AddOrUpdate_UsesTimeZoneResolver_WhenCalculatingNextExecution,The following statement contains a magic number: _connection.Setup(x => x.GetAllEntriesFromHash($"recurring-job:{_id}")).Returns(new Dictionary<string' string>              {                  { "Cron"' "0 0 * * *" }'                  { "Job"' InvocationData.Serialize(_job).SerializePayload() }'                  { "CreatedAt"' JobHelper.SerializeDateTime(_now) }'                  { "TimeZoneId"' PlatformHelper.IsRunningOnWindows() ? "Pacific/Honolulu" : "Hawaiian Standard Time" }'                  { "NextExecution"' JobHelper.SerializeDateTime(_now.AddHours(18).AddMinutes(30)) }'                  { "Queue"' "default" }'                  { "V"' "2" }              });
Magic Number,Hangfire.Core.Tests,RecurringJobManagerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RecurringJobManagerFacts.cs,AddOrUpdate_UsesTimeZoneResolver_WhenCalculatingNextExecution,The following statement contains a magic number: _transaction.Verify(x => x.AddToSet("recurring-jobs"' _id' JobHelper.ToTimestamp(_now.AddHours(18).AddMinutes(30))));
Magic Number,Hangfire.Core.Tests,RecurringJobManagerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RecurringJobManagerFacts.cs,AddOrUpdate_UsesTimeZoneResolver_WhenCalculatingNextExecution,The following statement contains a magic number: _transaction.Verify(x => x.AddToSet("recurring-jobs"' _id' JobHelper.ToTimestamp(_now.AddHours(18).AddMinutes(30))));
Magic Number,Hangfire.Core.Tests,RecurringJobManagerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RecurringJobManagerFacts.cs,AddOrUpdate_DoesNotReScheduleJob_WhenUpdatingIt,The following statement contains a magic number: _connection.Setup(x => x.GetAllEntriesFromHash($"recurring-job:{_id}")).Returns(new Dictionary<string' string>              {                  { "Cron"' "* * * * *" }'                  { "Job"' InvocationData.Serialize(_job).SerializePayload() }'                  { "CreatedAt"' JobHelper.SerializeDateTime(_now.AddMinutes(-3)) }'                  { "LastExecution"' JobHelper.SerializeDateTime(_now.AddMinutes(-2)) }'                  { "NextExecution"' JobHelper.SerializeDateTime(_now.AddMinutes(-1)) }              });
Magic Number,Hangfire.Core.Tests,RecurringJobManagerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RecurringJobManagerFacts.cs,AddOrUpdate_DoesNotReScheduleJob_WhenUpdatingIt,The following statement contains a magic number: _connection.Setup(x => x.GetAllEntriesFromHash($"recurring-job:{_id}")).Returns(new Dictionary<string' string>              {                  { "Cron"' "* * * * *" }'                  { "Job"' InvocationData.Serialize(_job).SerializePayload() }'                  { "CreatedAt"' JobHelper.SerializeDateTime(_now.AddMinutes(-3)) }'                  { "LastExecution"' JobHelper.SerializeDateTime(_now.AddMinutes(-2)) }'                  { "NextExecution"' JobHelper.SerializeDateTime(_now.AddMinutes(-1)) }              });
Magic Number,Hangfire.Core.Tests,RecurringJobManagerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RecurringJobManagerFacts.cs,AddOrUpdate_CanUpdateRecurringJobs_WhoseMethodCouldNotBeFound,The following statement contains a magic number: _connection.Setup(x => x.GetAllEntriesFromHash($"recurring-job:{_id}")).Returns(new Dictionary<string' string>              {                  { "Cron"' "* * * * *" }'                  { "Job"' InvocationData.Serialize(_job).SerializePayload().Replace("Hangfire"' "Test") }'                  { "CreatedAt"' JobHelper.SerializeDateTime(_now.AddMinutes(-2)) }'                  { "LastExecution"' JobHelper.SerializeDateTime(_now.AddMinutes(-1)) }'                  { "NextExecution"' JobHelper.SerializeDateTime(_now) }              });
Magic Number,Hangfire.Core.Tests,RecurringJobManagerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RecurringJobManagerFacts.cs,AddOrUpdate_CanUpdateRecurringJobs_WhoseJobPropertyCanNotBeDeserialized,The following statement contains a magic number: _connection.Setup(x => x.GetAllEntriesFromHash($"recurring-job:{_id}")).Returns(new Dictionary<string' string>              {                  { "Cron"' "* * * * *" }'                  { "Job"' "some garbage" }'                  { "CreatedAt"' JobHelper.SerializeDateTime(_now.AddMinutes(-2)) }'                  { "LastExecution"' JobHelper.SerializeDateTime(_now.AddMinutes(-1)) }'                  { "NextExecution"' JobHelper.SerializeDateTime(_now) }              });
Magic Number,Hangfire.Core.Tests,RecurringJobManagerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RecurringJobManagerFacts.cs,Trigger_SchedulesNextExecution_DependingOnCurrentTime_ToTheFuture,The following statement contains a magic number: _connection.Setup(x => x.GetAllEntriesFromHash($"recurring-job:{_id}")).Returns(new Dictionary<string' string>              {                  { "Cron"' "* * * * *" }'                  { "Job"' InvocationData.Serialize(_job).SerializePayload() }'                  { "CreatedAt"' JobHelper.SerializeDateTime(_now.AddMinutes(-3)) }'                  { "LastExecution"' JobHelper.SerializeDateTime(_now.AddMinutes(-2)) }'                  { "NextExecution"' JobHelper.SerializeDateTime(_now.AddMinutes(-1)) }              });
Magic Number,Hangfire.Core.Tests,RecurringJobManagerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RecurringJobManagerFacts.cs,Trigger_SchedulesNextExecution_DependingOnCurrentTime_ToTheFuture,The following statement contains a magic number: _connection.Setup(x => x.GetAllEntriesFromHash($"recurring-job:{_id}")).Returns(new Dictionary<string' string>              {                  { "Cron"' "* * * * *" }'                  { "Job"' InvocationData.Serialize(_job).SerializePayload() }'                  { "CreatedAt"' JobHelper.SerializeDateTime(_now.AddMinutes(-3)) }'                  { "LastExecution"' JobHelper.SerializeDateTime(_now.AddMinutes(-2)) }'                  { "NextExecution"' JobHelper.SerializeDateTime(_now.AddMinutes(-1)) }              });
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,Ctor_SetsPositiveRetryAttemptsNumber_ByDefault,The following statement contains a magic number: Assert.Equal(10' filter.Attempts);
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,Ctor_ThrowsAnException_WhenDelaysInSecondsContainsNegativeNumbers,The following statement contains a magic number: Assert.Throws<ArgumentException>(                  () => new AutomaticRetryAttribute { DelaysInSeconds = new [] { 1' -5 } });
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,DelaysInSeconds_SetsValueCorrectly,The following statement contains a magic number: var filter = new AutomaticRetryAttribute { DelaysInSeconds = new[] { 5' 8 } };
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,DelaysInSeconds_SetsValueCorrectly,The following statement contains a magic number: var filter = new AutomaticRetryAttribute { DelaysInSeconds = new[] { 5' 8 } };
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,DelaysInSeconds_SetsValueCorrectly,The following statement contains a magic number: Assert.Equal(2' filter.DelaysInSeconds.Length);
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,DelaysInSeconds_SetsValueCorrectly,The following statement contains a magic number: Assert.Equal(5' filter.DelaysInSeconds[0]);
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,DelaysInSeconds_SetsValueCorrectly,The following statement contains a magic number: Assert.Equal(8' filter.DelaysInSeconds[1]);
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,DelayInSecondsByAttemptFunc_ReturnCorrectValue_WhenCustomFunctionIsSet,The following statement contains a magic number: var filter = new AutomaticRetryAttribute { DelayInSecondsByAttemptFunc = attempt => (int)attempt % 3 };
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,DelayInSecondsByAttemptFunc_ReturnCorrectValue_WhenCustomFunctionIsSet,The following statement contains a magic number: Assert.Equal(2' filter.DelayInSecondsByAttemptFunc(2));
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,DelayInSecondsByAttemptFunc_ReturnCorrectValue_WhenCustomFunctionIsSet,The following statement contains a magic number: Assert.Equal(2' filter.DelayInSecondsByAttemptFunc(2));
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,DelayInSecondsByAttemptFunc_ReturnCorrectValue_WhenCustomFunctionIsSet,The following statement contains a magic number: Assert.Equal(0' filter.DelayInSecondsByAttemptFunc(3));
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,DelayInSecondsByAttemptFunc_ReturnCorrectValue_WhenCustomFunctionIsSet,The following statement contains a magic number: Assert.Equal(1' filter.DelayInSecondsByAttemptFunc(4));
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,DelayInSecondsByAttemptFunc_ReturnCorrectValue_WhenCustomFunctionIsSet,The following statement contains a magic number: Assert.Equal(2' filter.DelayInSecondsByAttemptFunc(5));
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,DelayInSecondsByAttemptFunc_ReturnCorrectValue_WhenCustomFunctionIsSet,The following statement contains a magic number: Assert.Equal(2' filter.DelayInSecondsByAttemptFunc(5));
Magic Number,Hangfire.Core.Tests,RetryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\RetryAttributeFacts.cs,DelayInSecondsByAttemptFunc_ReturnCorrectValue_WhenCustomFunctionIsSet,The following statement contains a magic number: Assert.Equal(1' filter.DelayInSecondsByAttemptFunc(100));
Magic Number,Hangfire.Core.Tests,StatisticsHistoryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\StatisticsHistoryAttributeFacts.cs,StatisticsHistoryAttributeFacts,The following statement contains a magic number: _context = new ElectStateContextMock              {                  ApplyContext =                  {                      Connection = _connection'                      NewStateObject = new SucceededState(null' 11' 123)'                      Transaction = _transaction                  }              };
Magic Number,Hangfire.Core.Tests,StatisticsHistoryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\StatisticsHistoryAttributeFacts.cs,StatisticsHistoryAttributeFacts,The following statement contains a magic number: _context = new ElectStateContextMock              {                  ApplyContext =                  {                      Connection = _connection'                      NewStateObject = new SucceededState(null' 11' 123)'                      Transaction = _transaction                  }              };
Magic Number,Hangfire.Core.Tests,StatisticsHistoryAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\StatisticsHistoryAttributeFacts.cs,VerifyCountersIncremented,The following statement contains a magic number: _transaction.Verify(x => x.IncrementCounter(                  It.Is<string>(key => key == prefix + thisDay || key == prefix + prevDay)'                  It.Is<TimeSpan>(expire => expire.TotalDays >= 27)));
Magic Number,Hangfire.Core.Tests.Client,CoreBackgroundJobFactoryFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Client\CoreBackgroundJobFactoryFacts.cs,Create_IsResilientToASingleCreateExpiredJobFault_WhenRetriesEnabled,The following statement contains a magic number: _context.Connection.Verify(                  x => x.CreateExpiredJob(It.IsNotNull<Job>()' It.IsNotNull<IDictionary<string' string>>()' It.IsAny<DateTime>()' It.IsAny<TimeSpan>())'                  Times.Exactly(2));
Magic Number,Hangfire.Core.Tests.Client,CoreBackgroundJobFactoryFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Client\CoreBackgroundJobFactoryFacts.cs,Create_IsResilientToASingleStateMachineFault_WhenRetriesEnabled,The following statement contains a magic number: _stateMachine.Verify(x => x.ApplyState(It.IsNotNull<ApplyStateContext>())' Times.Exactly(2));
Magic Number,Hangfire.Core.Tests.Client,CoreBackgroundJobFactoryFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Client\CoreBackgroundJobFactoryFacts.cs,Create_ThrowsAnException_AndLeavesJobAsIs_WhenAllRetryAttemptsExhausted_WithFaultyStateTransaction,The following statement contains a magic number: _stateMachine.Verify(x => x.ApplyState(It.IsAny<ApplyStateContext>())' Times.Exactly(2));
Magic Number,Hangfire.Core.Tests.Common,CancellationTokenExtentionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\CancellationTokenExtentionsFacts.cs,Wait_PerformsWait_NotLessThanTheSpecifiedTime,The following statement contains a magic number: Assert.True(stopwatch.Elapsed >= TimeSpan.FromMilliseconds(900)' $"Elapsed: {stopwatch.Elapsed}");
Magic Number,Hangfire.Core.Tests.Common,CancellationTokenExtentionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\CancellationTokenExtentionsFacts.cs,Wait_DoesNotPerformWait_WhenTokenIsCanceled,The following statement contains a magic number: Assert.True(stopwatch.Elapsed < TimeSpan.FromMilliseconds(900)' $"Elapsed: {stopwatch.Elapsed}");
Magic Number,Hangfire.Core.Tests.Common,JobFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFacts.cs,FromExpression_ConvertsDateTimeRepresentation_ToIso8601Format,The following statement contains a magic number: var date = new DateTime(2014' 5' 30' 12' 0' 0' 777);
Magic Number,Hangfire.Core.Tests.Common,JobFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFacts.cs,FromExpression_ConvertsDateTimeRepresentation_ToIso8601Format,The following statement contains a magic number: var date = new DateTime(2014' 5' 30' 12' 0' 0' 777);
Magic Number,Hangfire.Core.Tests.Common,JobFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFacts.cs,FromExpression_ConvertsDateTimeRepresentation_ToIso8601Format,The following statement contains a magic number: var date = new DateTime(2014' 5' 30' 12' 0' 0' 777);
Magic Number,Hangfire.Core.Tests.Common,JobFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFacts.cs,FromExpression_ConvertsDateTimeRepresentation_ToIso8601Format,The following statement contains a magic number: var date = new DateTime(2014' 5' 30' 12' 0' 0' 777);
Magic Number,Hangfire.Core.Tests.Common,JobFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFacts.cs,FromExpression_ConvertsDateTimeRepresentation_ToIso8601Format,The following statement contains a magic number: var date = new DateTime(2014' 5' 30' 12' 0' 0' 777);
Magic Number,Hangfire.Core.Tests.Common,JobFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFacts.cs,FromScopedExpression_HandlesGenericMethods,The following statement contains a magic number: var job = Job.FromExpression(() => dispatcher.DispatchTyped(123));
Magic Number,Hangfire.Core.Tests.Common,JobFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFacts.cs,Perform_PassesArguments_ToACallingMethod,The following statement contains a magic number: var job = Job.FromExpression(() => MethodWithArguments("hello"' 5));
Magic Number,Hangfire.Core.Tests.Common,JobFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFacts.cs,MethodWithArguments,The following statement contains a magic number: Assert.Equal(5' intArg);
Magic Number,Hangfire.Core.Tests.Common,Instance,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFacts.cs,FunctionReturningTaskResultingInString,The following statement contains a magic number: await Task.Delay(15).ConfigureAwait(continueOnCapturedContext);
Magic Number,Hangfire.Core.Tests.Common,JobFilterAttributeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterAttributeFacts.cs,SetOrder_ThrowsAnException_WhenValueIsLessThanDefaultOrder,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(                  () => filterAttribute.Object.Order = -2);
Magic Number,Hangfire.Core.Tests.Common,JobFilterAttributeFilterProviderFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterAttributeFilterProviderFacts.cs,GetFilters_IncludesAttributesOnClassType,The following statement contains a magic number: Assert.Equal(2112' filter.Order);
Magic Number,Hangfire.Core.Tests.Common,JobFilterAttributeFilterProviderFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterAttributeFilterProviderFacts.cs,GetFilters_IncludesAttributesOMethod,The following statement contains a magic number: Assert.Equal(1234' filter.Order);
Magic Number,Hangfire.Core.Tests.Common,JobFilterCollectionFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterCollectionFacts.cs,AddWithOrderPlacesFilterInGlobalScope,The following statement contains a magic number: _collection.Add(_filterInstance' 42);
Magic Number,Hangfire.Core.Tests.Common,JobFilterCollectionFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterCollectionFacts.cs,AddWithOrderPlacesFilterInGlobalScope,The following statement contains a magic number: Assert.Equal(42' filter.Order);
Magic Number,Hangfire.Core.Tests.Common,JobFilterFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterFacts.cs,FilterImplementsIJobFilter,The following statement contains a magic number: filterInstance.SetupGet(f => f.Order).Returns(42);
Magic Number,Hangfire.Core.Tests.Common,JobFilterFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterFacts.cs,FilterImplementsIJobFilter,The following statement contains a magic number: Assert.Equal(42' filter.Order);
Magic Number,Hangfire.Core.Tests.Common,JobFilterFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterFacts.cs,ExplicitOrderOverridesIJobFilter,The following statement contains a magic number: filterInstance.SetupGet(f => f.Order).Returns(42);
Magic Number,Hangfire.Core.Tests.Common,JobFilterFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterFacts.cs,ExplicitOrderOverridesIJobFilter,The following statement contains a magic number: var filter = new JobFilter(filterInstance.Object' JobFilterScope.Type' 2112);
Magic Number,Hangfire.Core.Tests.Common,JobFilterFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterFacts.cs,ExplicitOrderOverridesIJobFilter,The following statement contains a magic number: Assert.Equal(2112' filter.Order);
Magic Number,Hangfire.Core.Tests.Common,JobFilterProviderCollectionFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterProviderCollectionFacts.cs,GetFiltersSortsFiltersByOrderFirstThenScope,The following statement contains a magic number: var earlyActionFilter = new JobFilter(new Object()' JobFilterScope.Method' -100);
Magic Number,Hangfire.Core.Tests.Common,JobFilterProviderCollectionFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterProviderCollectionFacts.cs,GetFiltersSortsFiltersByOrderFirstThenScope,The following statement contains a magic number: var lateGlobalFilter = new JobFilter(new Object()' JobFilterScope.Global' 100);
Magic Number,Hangfire.Core.Tests.Common,JobFilterProviderCollectionFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterProviderCollectionFacts.cs,GetFiltersSortsFiltersByOrderFirstThenScope,The following statement contains a magic number: Assert.Equal(5' result.Length);
Magic Number,Hangfire.Core.Tests.Common,JobFilterProviderCollectionFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterProviderCollectionFacts.cs,GetFiltersSortsFiltersByOrderFirstThenScope,The following statement contains a magic number: Assert.Same(controllerFilter' result[2]);
Magic Number,Hangfire.Core.Tests.Common,JobFilterProviderCollectionFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterProviderCollectionFacts.cs,GetFiltersSortsFiltersByOrderFirstThenScope,The following statement contains a magic number: Assert.Same(actionFilter' result[3]);
Magic Number,Hangfire.Core.Tests.Common,JobFilterProviderCollectionFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterProviderCollectionFacts.cs,GetFiltersSortsFiltersByOrderFirstThenScope,The following statement contains a magic number: Assert.Same(lateGlobalFilter' result[4]);
Magic Number,Hangfire.Core.Tests.Common,JobFilterProviderCollectionFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterProviderCollectionFacts.cs,GetFiltersIncludesAllFiltersWithAttributeUsageAllowMultipleTrue,The following statement contains a magic number: Assert.Same(actionFilter' result[2]);
Magic Number,Hangfire.Core.Tests.Common,JobFilterProviderCollectionFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobFilterProviderCollectionFacts.cs,GetFiltersIncludesAllFiltersWithCustomFilterAllowMultipleTrue,The following statement contains a magic number: Assert.Same(actionFilter' result[2]);
Magic Number,Hangfire.Core.Tests.Common,JobHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobHelperFacts.cs,SerializeDateTime_ReturnsMillisecondTimestamp_AtLeastUpTo2100,The following statement contains a magic number: var dateTime = new DateTime(2100' 01' 01' 00' 00' 00' DateTimeKind.Utc);
Magic Number,Hangfire.Core.Tests.Common,JobHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobHelperFacts.cs,SerializeDateTime_ReturnsISO8601String_ForConflictingRanges_WithSecondBasedTimestamps,The following statement contains a magic number: var dateTime = new DateTime(1975' 01' 01' 00' 00' 00' DateTimeKind.Utc);
Magic Number,Hangfire.Core.Tests.Common,JobHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\JobHelperFacts.cs,SerializeDateTime_ReturnsISO8601String_WhenTimestampIsNotApplicable,The following statement contains a magic number: var dateTime = new DateTime(1900' 01' 01' 00' 00' 00' DateTimeKind.Utc);
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsAffectResult_WhenOptionIs_User,The following statement contains a magic number: var result = SerializationHelper.Serialize(new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) }' SerializationOption.User);
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsAffectResult_WhenOptionIs_User,The following statement contains a magic number: var result = SerializationHelper.Serialize(new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) }' SerializationOption.User);
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsAffectResult_WhenOptionIs_User,The following statement contains a magic number: var result = SerializationHelper.Serialize(new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) }' SerializationOption.User);
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoAffectResult_WhenOptionIs_Internal_BeforeVersion_170,The following statement contains a magic number: var result = SerializationHelper.Serialize(new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) });
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoAffectResult_WhenOptionIs_Internal_BeforeVersion_170,The following statement contains a magic number: var result = SerializationHelper.Serialize(new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) });
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoAffectResult_WhenOptionIs_Internal_BeforeVersion_170,The following statement contains a magic number: var result = SerializationHelper.Serialize(new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) });
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoNotAffectResult_WhenOptionIs_Internal_StartingFromVersion_170,The following statement contains a magic number: var result = SerializationHelper.Serialize(new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) });
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoNotAffectResult_WhenOptionIs_Internal_StartingFromVersion_170,The following statement contains a magic number: var result = SerializationHelper.Serialize(new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) });
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoNotAffectResult_WhenOptionIs_Internal_StartingFromVersion_170,The following statement contains a magic number: var result = SerializationHelper.Serialize(new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) });
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoAffectResult_WhenOptionIs_TypedInternal_BeforeVersion_170,The following statement contains a magic number: var result = SerializationHelper.Serialize<object>(                  new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) }'                  SerializationOption.TypedInternal);
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoAffectResult_WhenOptionIs_TypedInternal_BeforeVersion_170,The following statement contains a magic number: var result = SerializationHelper.Serialize<object>(                  new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) }'                  SerializationOption.TypedInternal);
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoAffectResult_WhenOptionIs_TypedInternal_BeforeVersion_170,The following statement contains a magic number: var result = SerializationHelper.Serialize<object>(                  new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) }'                  SerializationOption.TypedInternal);
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoNotAffectResult_WhenOptionIs_TypedInternal_StartingFromVersion_170,The following statement contains a magic number: var result = SerializationHelper.Serialize<object>(                  new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) }'                  SerializationOption.TypedInternal);
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoNotAffectResult_WhenOptionIs_TypedInternal_StartingFromVersion_170,The following statement contains a magic number: var result = SerializationHelper.Serialize<object>(                  new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) }'                  SerializationOption.TypedInternal);
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Serialize_JsonDefaultSettingsDoNotAffectResult_WhenOptionIs_TypedInternal_StartingFromVersion_170,The following statement contains a magic number: var result = SerializationHelper.Serialize<object>(                  new ClassB { StringValue = "B"' DateTimeValue = new DateTime(1961' 4' 12) }'                  SerializationOption.TypedInternal);
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Deserialize_HandlesDeserializationUsingUserOption_WhenUsingInternalOptionThrewException,The following statement contains a magic number: Assert.Equal(new DateTime(1961' 04' 12)' obj.DateTimeValue);
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Deserialize_HandlesDeserializationUsingUserOption_WhenUsingInternalOptionThrewException,The following statement contains a magic number: Assert.Equal(new DateTime(1961' 04' 12)' obj.DateTimeValue);
Magic Number,Hangfire.Core.Tests.Common,SerializationHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\SerializationHelperFacts.cs,Deserialize_HandlesDeserializationUsingUserOption_WhenUsingInternalOptionThrewException,The following statement contains a magic number: Assert.Equal(new DateTime(1961' 04' 12)' obj.DateTimeValue);
Magic Number,Hangfire.Core.Tests.Common,TypeExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\TypeExtensionsFacts.cs,GetNonOpenMatchingMethod_ReturnsCorrectMethodWithManyParameters,The following statement contains a magic number: Assert.Equal(2' method.GetParameters().Length);
Magic Number,Hangfire.Core.Tests.Common,TypeExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\TypeExtensionsFacts.cs,GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersOfTheSameTypeWhichIsMethodGenericParameter,The following statement contains a magic number: Assert.Equal(2' method.GetParameters().Length);
Magic Number,Hangfire.Core.Tests.Common,TypeExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\TypeExtensionsFacts.cs,GetNonOpenMatchingMethod_HandlesMethodHasGenericAndNonGenericParameters,The following statement contains a magic number: Assert.Equal(3' method.GetParameters().Length);
Magic Number,Hangfire.Core.Tests.Common,TypeExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Common\TypeExtensionsFacts.cs,GetNonOpenMatchingMethod_HandlesMethodHasGenericAndNonGenericParameters,The following statement contains a magic number: Assert.Equal(typeof(double)' method.GetParameters()[2].ParameterType);
Magic Number,Hangfire.Core.Tests.Dashboard,BatchCommandDispatcherFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Dashboard\BatchCommandDispatcherFacts.cs,Dispatch_Sets401StatusCode_WhenNotPermitted,The following statement contains a magic number: Assert.Equal(401' context.Response.StatusCode);
Magic Number,Hangfire.Core.Tests.Dashboard,CommandDispatcherFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Dashboard\CommandDispatcherFacts.cs,Dispatch_Sets401StatusCode_WhenNotPermitted,The following statement contains a magic number: Assert.Equal(401' context.Response.StatusCode);
Magic Number,Hangfire.Core.Tests.Dashboard,DashboardOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Dashboard\DashboardOptionsFacts.cs,Ctor_SetsDefaultValues_ForAllOptions,The following statement contains a magic number: Assert.Equal(options.StatsPollingInterval' 2000);
Magic Number,Hangfire.Core.Tests.Dashboard,HtmlHelperFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Dashboard\HtmlHelperFacts.cs,ToHumanDuration_FormatsFractionalSeconds,The following statement contains a magic number: var result = helper.ToHumanDuration(TimeSpan.FromSeconds(1.087));
Magic Number,Hangfire.Core.Tests.Obsolete,ServerWatchdogOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Obsolete\ServerWatchdogOptionsFacts.cs,Ctor_InitializeProperties_WithCorrectValues,The following statement contains a magic number: Assert.Equal(TimeSpan.FromMinutes(5)' options.CheckInterval);
Magic Number,Hangfire.Core.Tests.Obsolete,ServerWatchdogOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Obsolete\ServerWatchdogOptionsFacts.cs,Ctor_InitializeProperties_WithCorrectValues,The following statement contains a magic number: Assert.Equal(TimeSpan.FromMinutes(5)' options.ServerTimeout);
Magic Number,Hangfire.Core.Tests.Obsolete,ServerWatchdogOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Obsolete\ServerWatchdogOptionsFacts.cs,ServerTimeout_ThrowsAnException_WhenValueIsTooLarge,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(                  () => options.ServerTimeout = TimeSpan.FromHours(25));
Magic Number,Hangfire.Core.Tests.Obsolete,ServerWatchdogOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Obsolete\ServerWatchdogOptionsFacts.cs,ServerTimeout_ThrowsAnException_WhenValueIsNegative,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(                  () => options.ServerTimeout = TimeSpan.FromHours(-5));
Magic Number,Hangfire.Core.Tests.Obsolete,ServerWatchdogOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Obsolete\ServerWatchdogOptionsFacts.cs,CheckInterval_ThrowsAnException_WhenValueIsNegative,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(                  () => options.CheckInterval = TimeSpan.FromHours(-5));
Magic Number,Hangfire.Core.Tests.Obsolete,ServerWatchdogOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Obsolete\ServerWatchdogOptionsFacts.cs,CheckInterval_ThrowsAnException_WhenValueIsTooLarge,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(                  () => options.CheckInterval = TimeSpan.FromHours(25));
Magic Number,Hangfire.Core.Tests.Processing,TaskExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Processing\TaskExtensionsFacts.cs,WaitOneAsync_WaitsAndReturnsFalse_WhenNotSignaled_AndNonNullTimeout,The following statement contains a magic number: var result = await TaskExtensions.WaitOneAsync(_mre' TimeSpan.FromMilliseconds(100)' _cts.Token);
Magic Number,Hangfire.Core.Tests.Processing,TaskExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Processing\TaskExtensionsFacts.cs,WaitOneAsync_WaitsAndReturnsFalse_WhenNotSignaled_AndNonNullTimeout,The following statement contains a magic number: Assert.True(sw.Elapsed > TimeSpan.FromMilliseconds(95)' sw.Elapsed.ToString());
Magic Number,Hangfire.Core.Tests.Processing,TaskExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Processing\TaskExtensionsFacts.cs,WaitOneAsync_WaitsAndThrowsTaskCanceled_WhenNotSignaled_AndCancellationTokenIsCanceled,The following statement contains a magic number: _cts.CancelAfter(TimeSpan.FromMilliseconds(100));
Magic Number,Hangfire.Core.Tests.Processing,TaskExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Processing\TaskExtensionsFacts.cs,WaitOneAsync_WaitsAndThrowsTaskCanceled_WhenNotSignaled_AndCancellationTokenIsCanceled,The following statement contains a magic number: Assert.True(sw.Elapsed > TimeSpan.FromMilliseconds(95)' sw.Elapsed.ToString());
Magic Number,Hangfire.Core.Tests.Processing,TaskExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Processing\TaskExtensionsFacts.cs,WaitOne_WaitsAndReturnsFalse_WhenNotSignaled_AndNonNullTimeout,The following statement contains a magic number: var result = TaskExtensions.WaitOne(_mre' TimeSpan.FromMilliseconds(100)' _cts.Token);
Magic Number,Hangfire.Core.Tests.Processing,TaskExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Processing\TaskExtensionsFacts.cs,WaitOne_WaitsAndReturnsFalse_WhenNotSignaled_AndNonNullTimeout,The following statement contains a magic number: Assert.True(sw.Elapsed > TimeSpan.FromMilliseconds(95)' sw.Elapsed.ToString());
Magic Number,Hangfire.Core.Tests.Processing,TaskExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Processing\TaskExtensionsFacts.cs,WaitOne_WaitsAndThrowsTaskCanceled_WhenNotSignaled_AndCancellationTokenIsCanceled,The following statement contains a magic number: _cts.CancelAfter(TimeSpan.FromMilliseconds(100));
Magic Number,Hangfire.Core.Tests.Processing,TaskExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Processing\TaskExtensionsFacts.cs,WaitOne_WaitsAndThrowsTaskCanceled_WhenNotSignaled_AndCancellationTokenIsCanceled,The following statement contains a magic number: Assert.True(sw.Elapsed > TimeSpan.FromMilliseconds(95)' sw.Elapsed.ToString());
Magic Number,Hangfire.Core.Tests.Profiling,ProfilerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Profiling\ProfilerFacts.cs,SlowLog_DoesNotGenerateLogMessage_WhenThresholdIsNotReached,The following statement contains a magic number: var profiler = CreateSlowLogProfiler(_logger' TimeSpan.FromSeconds(600));
Magic Number,Hangfire.Core.Tests.Server,BackgroundJobServerOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundJobServerOptionsFacts.cs,Ctor_InitializeProperties_WithCorrectValues,The following statement contains a magic number: Assert.Equal(Math.Min(Environment.ProcessorCount * 5' 20)' options.WorkerCount);
Magic Number,Hangfire.Core.Tests.Server,BackgroundJobServerOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundJobServerOptionsFacts.cs,Ctor_InitializeProperties_WithCorrectValues,The following statement contains a magic number: Assert.Equal(Math.Min(Environment.ProcessorCount * 5' 20)' options.WorkerCount);
Magic Number,Hangfire.Core.Tests.Server,BackgroundJobServerOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundJobServerOptionsFacts.cs,Ctor_InitializeProperties_WithCorrectValues,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(15)' options.ShutdownTimeout);
Magic Number,Hangfire.Core.Tests.Server,BackgroundJobServerOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundJobServerOptionsFacts.cs,Ctor_InitializeProperties_WithCorrectValues,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(15)' options.SchedulePollingInterval);
Magic Number,Hangfire.Core.Tests.Server,BackgroundJobServerOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundJobServerOptionsFacts.cs,Ctor_InitializeProperties_WithCorrectValues,The following statement contains a magic number: Assert.Equal(TimeSpan.FromMinutes(5)' options.ServerTimeout);
Magic Number,Hangfire.Core.Tests.Server,BackgroundJobServerOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundJobServerOptionsFacts.cs,Ctor_InitializeProperties_WithCorrectValues,The following statement contains a magic number: Assert.Equal(TimeSpan.FromMinutes(5)' options.ServerCheckInterval);
Magic Number,Hangfire.Core.Tests.Server,BackgroundJobServerOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundJobServerOptionsFacts.cs,Ctor_InitializeProperties_WithCorrectValues,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(30)' options.HeartbeatInterval);
Magic Number,Hangfire.Core.Tests.Server,BackgroundJobServerOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundJobServerOptionsFacts.cs,ServerTimeout_ThrowsAnException_WhenValueIsTooLarge,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(                  () => options.ServerTimeout = TimeSpan.FromHours(25));
Magic Number,Hangfire.Core.Tests.Server,BackgroundJobServerOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundJobServerOptionsFacts.cs,ServerCheckInterval_ThrowsAnException_WhenValueIsTooLarge,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(                  () => options.ServerCheckInterval = TimeSpan.FromHours(25));
Magic Number,Hangfire.Core.Tests.Server,BackgroundJobServerOptionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundJobServerOptionsFacts.cs,HeartbeatInterval_ThrowsAnException_WhenValueIsTooLarge,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(                  () => options.HeartbeatInterval = TimeSpan.FromHours(25));
Magic Number,Hangfire.Core.Tests.Server,BackgroundProcessingServerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundProcessingServerFacts.cs,Ctor_AnnouncesTheServer_AndRemovesIt,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Hangfire.Core.Tests.Server,BackgroundProcessingServerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundProcessingServerFacts.cs,Execute_StartsAllTheProcesses_InLoop_AndWaitsForThem,The following statement contains a magic number: var component1Countdown = new CountdownEvent(5);
Magic Number,Hangfire.Core.Tests.Server,BackgroundProcessingServerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundProcessingServerFacts.cs,Execute_StartsAllTheProcesses_InLoop_AndWaitsForThem,The following statement contains a magic number: var component2Countdown = new CountdownEvent(5);
Magic Number,Hangfire.Core.Tests.Server,BackgroundProcessingServerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundProcessingServerFacts.cs,Execute_StartsAllTheProcesses_InLoop_AndWaitsForThem,The following statement contains a magic number: component1.Verify(x => x.Execute(It.IsAny<BackgroundProcessContext>())' Times.AtLeast(5));
Magic Number,Hangfire.Core.Tests.Server,BackgroundProcessingServerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\BackgroundProcessingServerFacts.cs,Execute_StartsAllTheProcesses_InLoop_AndWaitsForThem,The following statement contains a magic number: component2.Verify(x => x.Execute(It.IsNotNull<BackgroundProcessContext>())' Times.AtLeast(5));
Magic Number,Hangfire.Core.Tests.Server,CoreBackgroundJobPerformerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\CoreBackgroundJobPerformerFacts.cs,Perform_PassesArguments_ToACallingMethod,The following statement contains a magic number: _context.BackgroundJob.Job = Job.FromExpression(() => MethodWithArguments("hello"' 5));
Magic Number,Hangfire.Core.Tests.Server,CoreBackgroundJobPerformerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\CoreBackgroundJobPerformerFacts.cs,MethodWithArguments,The following statement contains a magic number: Assert.Equal(5' intArg);
Magic Number,Hangfire.Core.Tests.Server,CoreBackgroundJobPerformerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\CoreBackgroundJobPerformerFacts.cs,AsyncMethod,The following statement contains a magic number: Parallel.For(0' 4' new ParallelOptions { MaxDegreeOfParallelism = 4' TaskScheduler = TaskScheduler.Current }'                  i =>                  {                      Thread.Sleep(TimeSpan.FromSeconds(1));                  });
Magic Number,Hangfire.Core.Tests.Server,CoreBackgroundJobPerformerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\CoreBackgroundJobPerformerFacts.cs,AsyncMethod,The following statement contains a magic number: Parallel.For(0' 4' new ParallelOptions { MaxDegreeOfParallelism = 4' TaskScheduler = TaskScheduler.Current }'                  i =>                  {                      Thread.Sleep(TimeSpan.FromSeconds(1));                  });
Magic Number,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_UsesGivenCreatedAtTime,The following statement contains a magic number: var createdAt = _nowInstant.AddHours(-3);
Magic Number,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_UsesNextExecutionTime_WhenBothLastExecutionAndCreatedAtAreNotAvailable,The following statement contains a magic number: var nextExecution = _nowInstant.AddHours(-10);
Magic Number,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_DoesNotCycleImmediately_WhenItCantDeserializeEverything,The following statement contains a magic number: _context.StoppingTokenSource = new CancellationTokenSource(TimeSpan.FromMilliseconds(100));
Magic Number,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_UsesTimeZoneResolver_WhenCalculatingNextExecution,The following statement contains a magic number: _recurringJob["NextExecution"] = JobHelper.SerializeDateTime(_nowInstant.AddHours(18).AddMinutes(30));
Magic Number,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_UsesTimeZoneResolver_WhenCalculatingNextExecution,The following statement contains a magic number: _recurringJob["NextExecution"] = JobHelper.SerializeDateTime(_nowInstant.AddHours(18).AddMinutes(30));
Magic Number,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_UsesTimeZoneResolver_WhenCalculatingNextExecution,The following statement contains a magic number: _transaction.Verify(x => x.AddToSet("recurring-jobs"' RecurringJobId' JobHelper.ToTimestamp(_nowInstant.AddHours(18).AddMinutes(30))));
Magic Number,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_UsesTimeZoneResolver_WhenCalculatingNextExecution,The following statement contains a magic number: _transaction.Verify(x => x.AddToSet("recurring-jobs"' RecurringJobId' JobHelper.ToTimestamp(_nowInstant.AddHours(18).AddMinutes(30))));
Magic Number,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_DoesNotScheduleRecurringJob_ToThePast,The following statement contains a magic number: _recurringJob["LastExecution"] = JobHelper.SerializeDateTime(_nowInstant.AddMinutes(-2));
Magic Number,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_HidesRecurringJob_FromScheduler_WhenJobCanNotBeLoaded_AndRetryAttemptsExceeded,The following statement contains a magic number: _transaction.Verify(x => x.SetRangeInHash(It.IsAny<string>()' It.Is<Dictionary<string' string>>(dict =>                   dict.Count == 3 &&                  dict["NextExecution"] == String.Empty &&                  dict["Error"].StartsWith("Could not load the job") &&                  dict["V"] == "2")));
Magic Number,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_HidesRecurringJob_FromScheduler_WhenJobCanNotBeDeserialized_AndRetryAttemptsExceeded,The following statement contains a magic number: _transaction.Verify(x => x.SetRangeInHash(It.IsAny<string>()' It.Is<Dictionary<string' string>>(dict =>                   dict.Count == 3 &&                  dict["NextExecution"] == String.Empty &&                  dict["Error"].StartsWith("Unexpected character") &&                  dict["V"] == "2")));
Magic Number,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_HidesRecurringJob_FromScheduler_WhenJobIsNull_AndRetryAttemptsExceeded,The following statement contains a magic number: _transaction.Verify(x => x.SetRangeInHash(It.IsAny<string>()' It.Is<Dictionary<string' string>>(dict =>                   dict.Count == 3 &&                  dict["NextExecution"] == String.Empty &&                  dict["Error"].StartsWith("The 'Job' field has a null") &&                  dict["V"] == "2")));
Magic Number,Hangfire.Core.Tests.Server,RecurringJobSchedulerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\RecurringJobSchedulerFacts.cs,Execute_HidesRecurringJob_FromScheduler_WhenTimeZoneCanNotBeResolved_AndRetryAttemptsExceeded,The following statement contains a magic number: _transaction.Verify(x => x.SetRangeInHash(It.IsAny<string>()' It.Is<Dictionary<string' string>>(dict =>                   dict.Count == 3 &&                  dict["NextExecution"] == String.Empty &&                  dict["Error"].StartsWith("Exception of type 'System.InvalidTimeZoneException'") &&                  dict["V"] == "2")));
Magic Number,Hangfire.Core.Tests.Server,ServerJobCancellationTokenFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\ServerJobCancellationTokenFacts.cs,CheckAllCancellationTokens_PerformsAdditionalChecks_WhenPriorOnesDidNotLeadToAbort,The following statement contains a magic number: _connection.Verify(x => x.GetStateData(It.IsAny<string>())' Times.Exactly(2));
Magic Number,Hangfire.Core.Tests.Server,ServerWatchdogFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\ServerWatchdogFacts.cs,ServerWatchdogFacts,The following statement contains a magic number: _serverTimeout = TimeSpan.FromSeconds(5);
Magic Number,Hangfire.Core.Tests.Server,WorkerFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Server\WorkerFacts.cs,CreateWorker,The following statement contains a magic number: return new Worker(_queues' _performer.Object' _stateChanger.Object' TimeSpan.FromSeconds(5)' maxStateChangeAttempts);
Magic Number,Hangfire.Core.Tests.States,ScheduledStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\ScheduledStateFacts.cs,Ctor_SetsTheCorrectData_WhenDateIsPassed,The following statement contains a magic number: var date = new DateTime(2012' 12' 12);
Magic Number,Hangfire.Core.Tests.States,ScheduledStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\ScheduledStateFacts.cs,Ctor_SetsTheCorrectData_WhenDateIsPassed,The following statement contains a magic number: var date = new DateTime(2012' 12' 12);
Magic Number,Hangfire.Core.Tests.States,ScheduledStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\ScheduledStateFacts.cs,Ctor_SetsTheCorrectData_WhenDateIsPassed,The following statement contains a magic number: var date = new DateTime(2012' 12' 12);
Magic Number,Hangfire.Core.Tests.States,ScheduledStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\ScheduledStateFacts.cs,SerializeData_ReturnsCorrectData,The following statement contains a magic number: var state = new ScheduledState(new DateTime(2012' 12' 12));
Magic Number,Hangfire.Core.Tests.States,ScheduledStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\ScheduledStateFacts.cs,SerializeData_ReturnsCorrectData,The following statement contains a magic number: var state = new ScheduledState(new DateTime(2012' 12' 12));
Magic Number,Hangfire.Core.Tests.States,ScheduledStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\ScheduledStateFacts.cs,SerializeData_ReturnsCorrectData,The following statement contains a magic number: var state = new ScheduledState(new DateTime(2012' 12' 12));
Magic Number,Hangfire.Core.Tests.States,SucceededStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\SucceededStateFacts.cs,JsonSerialize_ReturnsCorrectString_Before170,The following statement contains a magic number: var state = new SucceededState(null' 1' 2);
Magic Number,Hangfire.Core.Tests.States,SucceededStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\SucceededStateFacts.cs,JsonSerialize_ReturnsCorrectString_After170,The following statement contains a magic number: var state = new SucceededState(null' 1' 2);
Magic Number,Hangfire.Core.Tests.States,SucceededStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\SucceededStateFacts.cs,CreateState,The following statement contains a magic number: return new SucceededState("Returned  value"' 11' 123);
Magic Number,Hangfire.Core.Tests.States,SucceededStateFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\States\SucceededStateFacts.cs,CreateState,The following statement contains a magic number: return new SucceededState("Returned  value"' 11' 123);
Magic Number,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Deserialize_HandlesGenericTypes_WithFullyQualifiedAssemblyNames_OfSignedAssembly_OfDifferentVersion,The following statement contains a magic number: Assert.Equal(123' job.Args[0]);
Magic Number,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Deserialize_HandlesGenericMethods_WithOpenTypeParameters,The following statement contains a magic number: var serializedData = InvocationData.Serialize(                  Job.FromExpression<GenericType<string>>(x => x.Method("asd"' 123)));
Magic Number,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Deserialize_CorrectlyDeserializes_UnknownDateTimeArguments_ConvertedToRoundtripFormat,The following statement contains a magic number: var value = new DateTime(2017' 1' 1' 1' 1' 1' 1' DateTimeKind.Unspecified);
Magic Number,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Deserialize_CorrectlyDeserializes_UnknownDateTimeArguments_ConvertedToOldFormat_WithLoweredPrecision,The following statement contains a magic number: var value = new DateTime(2017' 1' 1' 1' 1' 1' 1' DateTimeKind.Unspecified);
Magic Number,Hangfire.Core.Tests.Storage,InvocationDataFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\InvocationDataFacts.cs,Deserialize_HandlesChangingProcessOfInternalDataSerialization,The following statement contains a magic number: Assert.Equal(2' job.Args.Count);
Magic Number,Hangfire.Core.Tests.Storage,MonitoringTypeFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\MonitoringTypeFacts.cs,JobList_Ctor_ShouldInitializeCollection,The following statement contains a magic number: var list = new JobList<int>(new Dictionary<string' int> { { "1"' 2 } });
Magic Number,Hangfire.Core.Tests.Storage,StorageConnectionExtensionsFacts,D:\research\architectureSmells\repos\HangfireIO_Hangfire\tests\Hangfire.Core.Tests\Storage\StorageConnectionExtensionsFacts.cs,AcquireDistributedJobLock_AcquiresALock_WithTheCorrectResource,The following statement contains a magic number: var timeout = TimeSpan.FromSeconds(5);
