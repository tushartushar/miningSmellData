Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ThreeDPoints,PathStorage,C:\repos\stanevplamen_CSharpOOP\Homeworks\02-Defining-Classes-Part-II\01-04-ThreeDPoints\PathStorage.cs,WritePathPoints,Cyclomatic complexity of the method is 8
Complex Method,ThreeDPoints,PathStorage,C:\repos\stanevplamen_CSharpOOP\Homeworks\02-Defining-Classes-Part-II\01-04-ThreeDPoints\PathStorage.cs,ReadPathPoints,Cyclomatic complexity of the method is 9
Long Statement,ThreeDPoints,PathStorage,C:\repos\stanevplamen_CSharpOOP\Homeworks\02-Defining-Classes-Part-II\01-04-ThreeDPoints\PathStorage.cs,WritePathPoints,The length of the statement  "		Console.WriteLine ("The path is a zero-length string' contains only white space' or contains one or more invalid characters"); " is 126.
Long Statement,ThreeDPoints,PathStorage,C:\repos\stanevplamen_CSharpOOP\Homeworks\02-Defining-Classes-Part-II\01-04-ThreeDPoints\PathStorage.cs,ReadPathPoints,The length of the statement  "		Console.WriteLine ("The path is a zero-length string' contains only white space' or contains one or more invalid characters"); " is 126.
Magic Number,ThreeDPoints,PathStorage,C:\repos\stanevplamen_CSharpOOP\Homeworks\02-Defining-Classes-Part-II\01-04-ThreeDPoints\PathStorage.cs,ReadPathPoints,The following statement contains a magic number: try {  	using (reader) {  		string line = reader.ReadLine ();  		int lineNumber = 1;  		while (line != null) {  			string[] separated = line.Split (new char[] {  				'(''  				''''  				')''  				' ''  				'\n'  			}' StringSplitOptions.RemoveEmptyEntries);  			double one = double.Parse (separated [7]);  			double two = double.Parse (separated [8]);  			double three = double.Parse (separated [9]);  			ThreeDPoint readPoint = new ThreeDPoint (one' two' three);  			MainTest.currentPath.AddPoint (readPoint);  			line = reader.ReadLine ();  			lineNumber++;  		}  	}  }  catch (DirectoryNotFoundException e) {  	Console.WriteLine ("Directory not found");  	throw new DirectoryNotFoundException (e.Message);  }  catch (FileNotFoundException e) {  	Console.WriteLine ("File not found");  	throw new FileNotFoundException (e.Message);  }  catch (ArgumentNullException) {  	Console.WriteLine ("The path is null");  	throw new ArgumentNullException ();  }  catch (ArgumentException e) {  	Console.WriteLine ("The path is a zero-length string' contains only white space' or contains one or more invalid characters");  	throw new ArgumentException (e.Message);  }  catch (FormatException e) {  	Console.WriteLine ("The text you are trying to parse have some invalid numbers");  	throw new FormatException (e.Message);  }  
Magic Number,ThreeDPoints,PathStorage,C:\repos\stanevplamen_CSharpOOP\Homeworks\02-Defining-Classes-Part-II\01-04-ThreeDPoints\PathStorage.cs,ReadPathPoints,The following statement contains a magic number: try {  	using (reader) {  		string line = reader.ReadLine ();  		int lineNumber = 1;  		while (line != null) {  			string[] separated = line.Split (new char[] {  				'(''  				''''  				')''  				' ''  				'\n'  			}' StringSplitOptions.RemoveEmptyEntries);  			double one = double.Parse (separated [7]);  			double two = double.Parse (separated [8]);  			double three = double.Parse (separated [9]);  			ThreeDPoint readPoint = new ThreeDPoint (one' two' three);  			MainTest.currentPath.AddPoint (readPoint);  			line = reader.ReadLine ();  			lineNumber++;  		}  	}  }  catch (DirectoryNotFoundException e) {  	Console.WriteLine ("Directory not found");  	throw new DirectoryNotFoundException (e.Message);  }  catch (FileNotFoundException e) {  	Console.WriteLine ("File not found");  	throw new FileNotFoundException (e.Message);  }  catch (ArgumentNullException) {  	Console.WriteLine ("The path is null");  	throw new ArgumentNullException ();  }  catch (ArgumentException e) {  	Console.WriteLine ("The path is a zero-length string' contains only white space' or contains one or more invalid characters");  	throw new ArgumentException (e.Message);  }  catch (FormatException e) {  	Console.WriteLine ("The text you are trying to parse have some invalid numbers");  	throw new FormatException (e.Message);  }  
Magic Number,ThreeDPoints,PathStorage,C:\repos\stanevplamen_CSharpOOP\Homeworks\02-Defining-Classes-Part-II\01-04-ThreeDPoints\PathStorage.cs,ReadPathPoints,The following statement contains a magic number: try {  	using (reader) {  		string line = reader.ReadLine ();  		int lineNumber = 1;  		while (line != null) {  			string[] separated = line.Split (new char[] {  				'(''  				''''  				')''  				' ''  				'\n'  			}' StringSplitOptions.RemoveEmptyEntries);  			double one = double.Parse (separated [7]);  			double two = double.Parse (separated [8]);  			double three = double.Parse (separated [9]);  			ThreeDPoint readPoint = new ThreeDPoint (one' two' three);  			MainTest.currentPath.AddPoint (readPoint);  			line = reader.ReadLine ();  			lineNumber++;  		}  	}  }  catch (DirectoryNotFoundException e) {  	Console.WriteLine ("Directory not found");  	throw new DirectoryNotFoundException (e.Message);  }  catch (FileNotFoundException e) {  	Console.WriteLine ("File not found");  	throw new FileNotFoundException (e.Message);  }  catch (ArgumentNullException) {  	Console.WriteLine ("The path is null");  	throw new ArgumentNullException ();  }  catch (ArgumentException e) {  	Console.WriteLine ("The path is a zero-length string' contains only white space' or contains one or more invalid characters");  	throw new ArgumentException (e.Message);  }  catch (FormatException e) {  	Console.WriteLine ("The text you are trying to parse have some invalid numbers");  	throw new FormatException (e.Message);  }  
Magic Number,ThreeDPoints,PathStorage,C:\repos\stanevplamen_CSharpOOP\Homeworks\02-Defining-Classes-Part-II\01-04-ThreeDPoints\PathStorage.cs,ReadPathPoints,The following statement contains a magic number: using (reader) {  	string line = reader.ReadLine ();  	int lineNumber = 1;  	while (line != null) {  		string[] separated = line.Split (new char[] {  			'(''  			''''  			')''  			' ''  			'\n'  		}' StringSplitOptions.RemoveEmptyEntries);  		double one = double.Parse (separated [7]);  		double two = double.Parse (separated [8]);  		double three = double.Parse (separated [9]);  		ThreeDPoint readPoint = new ThreeDPoint (one' two' three);  		MainTest.currentPath.AddPoint (readPoint);  		line = reader.ReadLine ();  		lineNumber++;  	}  }  
Magic Number,ThreeDPoints,PathStorage,C:\repos\stanevplamen_CSharpOOP\Homeworks\02-Defining-Classes-Part-II\01-04-ThreeDPoints\PathStorage.cs,ReadPathPoints,The following statement contains a magic number: using (reader) {  	string line = reader.ReadLine ();  	int lineNumber = 1;  	while (line != null) {  		string[] separated = line.Split (new char[] {  			'(''  			''''  			')''  			' ''  			'\n'  		}' StringSplitOptions.RemoveEmptyEntries);  		double one = double.Parse (separated [7]);  		double two = double.Parse (separated [8]);  		double three = double.Parse (separated [9]);  		ThreeDPoint readPoint = new ThreeDPoint (one' two' three);  		MainTest.currentPath.AddPoint (readPoint);  		line = reader.ReadLine ();  		lineNumber++;  	}  }  
Magic Number,ThreeDPoints,PathStorage,C:\repos\stanevplamen_CSharpOOP\Homeworks\02-Defining-Classes-Part-II\01-04-ThreeDPoints\PathStorage.cs,ReadPathPoints,The following statement contains a magic number: using (reader) {  	string line = reader.ReadLine ();  	int lineNumber = 1;  	while (line != null) {  		string[] separated = line.Split (new char[] {  			'(''  			''''  			')''  			' ''  			'\n'  		}' StringSplitOptions.RemoveEmptyEntries);  		double one = double.Parse (separated [7]);  		double two = double.Parse (separated [8]);  		double three = double.Parse (separated [9]);  		ThreeDPoint readPoint = new ThreeDPoint (one' two' three);  		MainTest.currentPath.AddPoint (readPoint);  		line = reader.ReadLine ();  		lineNumber++;  	}  }  
Magic Number,ThreeDPoints,PathStorage,C:\repos\stanevplamen_CSharpOOP\Homeworks\02-Defining-Classes-Part-II\01-04-ThreeDPoints\PathStorage.cs,ReadPathPoints,The following statement contains a magic number: while (line != null) {  	string[] separated = line.Split (new char[] {  		'(''  		''''  		')''  		' ''  		'\n'  	}' StringSplitOptions.RemoveEmptyEntries);  	double one = double.Parse (separated [7]);  	double two = double.Parse (separated [8]);  	double three = double.Parse (separated [9]);  	ThreeDPoint readPoint = new ThreeDPoint (one' two' three);  	MainTest.currentPath.AddPoint (readPoint);  	line = reader.ReadLine ();  	lineNumber++;  }  
Magic Number,ThreeDPoints,PathStorage,C:\repos\stanevplamen_CSharpOOP\Homeworks\02-Defining-Classes-Part-II\01-04-ThreeDPoints\PathStorage.cs,ReadPathPoints,The following statement contains a magic number: while (line != null) {  	string[] separated = line.Split (new char[] {  		'(''  		''''  		')''  		' ''  		'\n'  	}' StringSplitOptions.RemoveEmptyEntries);  	double one = double.Parse (separated [7]);  	double two = double.Parse (separated [8]);  	double three = double.Parse (separated [9]);  	ThreeDPoint readPoint = new ThreeDPoint (one' two' three);  	MainTest.currentPath.AddPoint (readPoint);  	line = reader.ReadLine ();  	lineNumber++;  }  
Magic Number,ThreeDPoints,PathStorage,C:\repos\stanevplamen_CSharpOOP\Homeworks\02-Defining-Classes-Part-II\01-04-ThreeDPoints\PathStorage.cs,ReadPathPoints,The following statement contains a magic number: while (line != null) {  	string[] separated = line.Split (new char[] {  		'(''  		''''  		')''  		' ''  		'\n'  	}' StringSplitOptions.RemoveEmptyEntries);  	double one = double.Parse (separated [7]);  	double two = double.Parse (separated [8]);  	double three = double.Parse (separated [9]);  	ThreeDPoint readPoint = new ThreeDPoint (one' two' three);  	MainTest.currentPath.AddPoint (readPoint);  	line = reader.ReadLine ();  	lineNumber++;  }  
