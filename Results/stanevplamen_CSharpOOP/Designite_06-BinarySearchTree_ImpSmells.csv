Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BinarySearchTree,AATree,C:\repos\stanevplamen_CSharpOOP\Homeworks\06-Common-Type-System\06-BinarySearchTree\AATree.cs,Delete,Cyclomatic complexity of the method is 9
Complex Method,BinarySearchTree,MainTest,C:\repos\stanevplamen_CSharpOOP\Homeworks\06-Common-Type-System\06-BinarySearchTree\MainTest.cs,TestOne,Cyclomatic complexity of the method is 9
Complex Method,BinarySearchTree,MainTest,C:\repos\stanevplamen_CSharpOOP\Homeworks\06-Common-Type-System\06-BinarySearchTree\MainTest.cs,TestTwo,Cyclomatic complexity of the method is 10
Magic Number,BinarySearchTree,MainTest,C:\repos\stanevplamen_CSharpOOP\Homeworks\06-Common-Type-System\06-BinarySearchTree\MainTest.cs,Main,The following statement contains a magic number: TestOne (new int[] {  	2'  	1'  	3'  	4  });  
Magic Number,BinarySearchTree,MainTest,C:\repos\stanevplamen_CSharpOOP\Homeworks\06-Common-Type-System\06-BinarySearchTree\MainTest.cs,Main,The following statement contains a magic number: TestOne (new int[] {  	2'  	1'  	3'  	4  });  
Magic Number,BinarySearchTree,MainTest,C:\repos\stanevplamen_CSharpOOP\Homeworks\06-Common-Type-System\06-BinarySearchTree\MainTest.cs,Main,The following statement contains a magic number: TestOne (new int[] {  	2'  	1'  	3'  	4  });  
Magic Number,BinarySearchTree,MainTest,C:\repos\stanevplamen_CSharpOOP\Homeworks\06-Common-Type-System\06-BinarySearchTree\MainTest.cs,Main,The following statement contains a magic number: for (int count = 0; count < 1000; count++) {  	int[] test = new int[100];  	Random random = new Random ();  	int numb = 0;  	for (int i = 0; i < test.Length; i++) {  		numb = random.Next ();  		test [i] = numb;  	}  	TestOne (test);  }  
Magic Number,BinarySearchTree,MainTest,C:\repos\stanevplamen_CSharpOOP\Homeworks\06-Common-Type-System\06-BinarySearchTree\MainTest.cs,Main,The following statement contains a magic number: for (int count = 0; count < 1000; count++) {  	int[] test = new int[100];  	Random random = new Random ();  	int numb = 0;  	for (int i = 0; i < test.Length; i++) {  		numb = random.Next ();  		test [i] = numb;  	}  	TestOne (test);  }  
