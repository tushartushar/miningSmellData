Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Test.Microsoft.Identity.LabInfrastructure,LabAuthenticationHelper,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\LabAuthenticationHelper.cs,GetLabAccessTokenAsync,The method has 6 parameters. Parameters: authority' resource' authType' clientId' certThumbprint' clientSecret
Long Identifier,Microsoft.Identity.Test.LabInfrastructure,LabApiConstants,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\LabApiConstants.cs,,The length of the parameter MobileDeviceManagementWithConditionalAccess is 43.
Long Identifier,Microsoft.Identity.Test.LabInfrastructure,LabApiConstants,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\LabApiConstants.cs,,The length of the parameter MobileAppManagementWithConditionalAccess is 40.
Long Statement,Microsoft.Identity.Test.LabInfrastructure,LabServiceApi,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\LabServiceApi.cs,RunQueryAsync,The length of the statement  "            queryDict.Add(LabApiConstants.MobileAppManagement' query.IsMamUser != null && (bool)(query.IsMamUser) ? LabApiConstants.True : LabApiConstants.False);" is 150.
Long Statement,Microsoft.Identity.Test.LabInfrastructure,LabServiceApi,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\LabServiceApi.cs,RunQueryAsync,The length of the statement  "            queryDict.Add(LabApiConstants.MultiFactorAuthentication' query.IsMfaUser != null && (bool)(query.IsMfaUser) ? LabApiConstants.MfaOnAll : LabApiConstants.None);" is 159.
Long Statement,Microsoft.Identity.Test.LabInfrastructure,LabServiceApi,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\LabServiceApi.cs,RunQueryAsync,The length of the statement  "            queryDict.Add(LabApiConstants.FederatedUser' query.IsFederatedUser != null && (bool)(query.IsFederatedUser) ? LabApiConstants.True : LabApiConstants.False);" is 156.
Long Statement,Microsoft.Identity.Test.LabInfrastructure,LabServiceApi,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\LabServiceApi.cs,RunQueryAsync,The length of the statement  "            queryDict.Add(LabApiConstants.External' query.IsExternalUser != null && (bool)(query.IsExternalUser) ? LabApiConstants.True : LabApiConstants.False);" is 149.
Long Statement,Test.Microsoft.Identity.LabInfrastructure,LabAuthenticationHelper,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\LabAuthenticationHelper.cs,GetLabAccessTokenAsync,The length of the statement  "                            "Test setup error - cannot find a certificate in the My store for KeyVault. This is available for Microsoft employees only.");" is 126.
Magic Number,Microsoft.Identity.Test.LabInfrastructure,UserQuery,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\UserQuery.cs,GetHashCode,The following statement contains a magic number: var hashCode = 1863312741;
Magic Number,Microsoft.Identity.Test.LabInfrastructure,UserQuery,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\UserQuery.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + EqualityComparer<FederationProvider?>.Default.GetHashCode(FederationProvider);
Magic Number,Microsoft.Identity.Test.LabInfrastructure,UserQuery,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\UserQuery.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + EqualityComparer<bool?>.Default.GetHashCode(IsMamUser);
Magic Number,Microsoft.Identity.Test.LabInfrastructure,UserQuery,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\UserQuery.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + EqualityComparer<bool?>.Default.GetHashCode(IsMfaUser);
Magic Number,Microsoft.Identity.Test.LabInfrastructure,UserQuery,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\UserQuery.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + EqualityComparer<ISet<string>>.Default.GetHashCode(Licenses);
Magic Number,Microsoft.Identity.Test.LabInfrastructure,UserQuery,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\UserQuery.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + EqualityComparer<bool?>.Default.GetHashCode(IsFederatedUser);
Magic Number,Microsoft.Identity.Test.LabInfrastructure,UserQuery,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\UserQuery.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + EqualityComparer<UserType?>.Default.GetHashCode(UserType);
Magic Number,Microsoft.Identity.Test.LabInfrastructure,UserQuery,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\UserQuery.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + EqualityComparer<bool?>.Default.GetHashCode(IsExternalUser);
Magic Number,Microsoft.Identity.Test.LabInfrastructure,UserQuery,C:\research\architectureSmells\repos\MSOpenTech_azure-activedirectory-library-for-dotnet\tests\Test.Microsoft.Identity.LabInfrastructure\UserQuery.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + EqualityComparer<B2CIdentityProvider?>.Default.GetHashCode(B2CIdentityProvider);
