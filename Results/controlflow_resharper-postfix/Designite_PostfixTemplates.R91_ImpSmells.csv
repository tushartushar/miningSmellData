Implementation smell,Namespace,Class,File,Method,Description
Complex Method,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpEnumCaseItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,AddLookupItems,Cyclomatic complexity of the method is 9
Complex Method,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpEnumCaseItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,AddEnumerationMembers,Cyclomatic complexity of the method is 8
Complex Method,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpEnumCaseItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,GetBinaryRepresentation,Cyclomatic complexity of the method is 8
Complex Method,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,StaticMethodBehavior,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpStaticMethodsItemProvider.cs,Accept,Cyclomatic complexity of the method is 9
Complex Method,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,StaticMethodsByFirstArgumentTypeFilter,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpStaticMethodsItemProvider.cs,Accepts,Cyclomatic complexity of the method is 12
Complex Method,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,StaticMethodsByFirstArgumentTypeFilter,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpStaticMethodsItemProvider.cs,IsConvertibleTo,Cyclomatic complexity of the method is 8
Complex Method,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpTypeParameterFromUsageItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpTypeParameterFromUsageItemProvider.cs,IsInsideSignatureWhereTypeUsageExpected,Cyclomatic complexity of the method is 10
Complex Method,JetBrains.ReSharper.PostfixTemplates.LookupItems,CSharpStatementPostfixTemplateBehavior<TStatement>,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Infrastructure\Behaviors\CSharp\CSharpStatementPostfixTemplateBehavior.cs,PutStatementCaret,Cyclomatic complexity of the method is 10
Complex Method,JetBrains.ReSharper.PostfixTemplates.Contexts.CSharp,CSharpPostfixExpressionContext,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Infrastructure\Contexts\CSharp\CSharpPostfixExpressionContext.cs,IsBrokenByAwaitCase,Cyclomatic complexity of the method is 9
Complex Method,JetBrains.ReSharper.PostfixTemplates.Contexts.CSharp,CSharpPostfixTemplateContext,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Infrastructure\Contexts\CSharp\CSharpPostfixTemplateContext.cs,BuildExpressions,Cyclomatic complexity of the method is 12
Complex Method,JetBrains.ReSharper.PostfixTemplates.Contexts.CSharp,CSharpPostfixTemplateContextFactory,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Infrastructure\Contexts\CSharp\CSharpPostfixTemplateContextFactory.cs,TryCreate,Cyclomatic complexity of the method is 10
Complex Method,JetBrains.ReSharper.PostfixTemplates,ExpandPostfixTemplateHandler,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Infrastructure\PostfixTemplatesTabTracker.cs,IsAvailableOrExecuteEww,Cyclomatic complexity of the method is 8
Complex Method,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,CSharpPostfixArgumentExpressionBehavior,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\ArgumentExpressionTemplate.cs,TryPlaceCaretSmart,Cyclomatic complexity of the method is 8
Complex Method,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,BooleanExpressionTemplateBase,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\BooleanExpressionTemplateBase.cs,TryCreateInfo,Cyclomatic complexity of the method is 8
Complex Method,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,CheckIsNullTemplate,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\CheckIsNullTemplate.cs,TryCreateInfo,Cyclomatic complexity of the method is 8
Complex Method,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,CheckNotNullTemplate,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\CheckNotNullTemplate.cs,TryCreateInfo,Cyclomatic complexity of the method is 8
Complex Method,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,ForLoopTemplateBase,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\ForLoopTemplateBase.cs,CanBeLoopedOver,Cyclomatic complexity of the method is 10
Complex Method,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,IntroduceMemberTemplateBase,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\IntroduceMemberTemplateBase.cs,TryCreateInfo,Cyclomatic complexity of the method is 10
Complex Method,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,IntroduceVariableTemplate,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\IntroduceVariableTemplate.cs,TryCreateInfo,Cyclomatic complexity of the method is 16
Complex Method,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,ObjectCreationTemplate,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\ObjectCreationTemplate.cs,TryCreateExpressionInfo,Cyclomatic complexity of the method is 12
Complex Method,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,ReturnStatementTemplate,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\ReturnStatementTemplate.cs,GetMethodReturnValueType,Cyclomatic complexity of the method is 8
Complex Method,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,SwitchStatementTemplate,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\SwitchStatementTemplate.cs,TryCreateInfo,Cyclomatic complexity of the method is 9
Complex Method,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,UsingStatementTemplate,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\UsingStatementTemplate.cs,TryCreateInfo,Cyclomatic complexity of the method is 16
Long Parameter List,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,EnumCaseCheckBehavior,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,Accept,The method has 6 parameters. Parameters: textControl' nameRange' lookupItemInsertType' suffix' solution' keepCaretStill
Long Parameter List,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,StaticMethodBehavior,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpStaticMethodsItemProvider.cs,Accept,The method has 6 parameters. Parameters: textControl' nameRange' lookupItemInsertType' suffix' solution' keepCaretStill
Long Parameter List,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,TypeParameterFromUsageBehavior,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpTypeParameterFromUsageItemProvider.cs,Accept,The method has 6 parameters. Parameters: textControl' nameRange' lookupItemInsertType' suffix' solution' keepCaretStill
Long Parameter List,JetBrains.ReSharper.PostfixTemplates.LookupItems,PostfixTemplateBehavior,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Infrastructure\Behaviors\PostfixTemplateBehavior.cs,Accept,The method has 6 parameters. Parameters: textControl' nameRange' insertType' suffix' solution' keepCaretStill
Long Parameter List,JetBrains.ReSharper.PostfixTemplates.Contexts,PostfixTemplateExecutionContext,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Infrastructure\Contexts\PostfixTemplateExecutionContext.cs,PostfixTemplateExecutionContext,The method has 5 parameters. Parameters: solution' textControl' settingsStore' reparseString' isPreciseMode
Long Parameter List,JetBrains.ReSharper.PostfixTemplates,ExpressionChooser,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Infrastructure\ExpressionChooser.cs,ExpressionChooser,The method has 5 parameters. Parameters: popupMenus' shellLocks' actionManager' threading' markupManager
Long Parameter List,JetBrains.ReSharper.PostfixTemplates,ExpressionChooser,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Infrastructure\ExpressionChooser.cs,Execute,The method has 6 parameters. Parameters: lifetime' textControl' expressions' postfixText' chooserTitle' continuation
Long Parameter List,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,ForEachLoopTemplate,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\ForEachLoopTemplate.cs,ApplyRenameHotspots,The method has 5 parameters. Parameters: liveTemplatesManager' textControl' statement' namesCollection' extraReference
Long Identifier,JetBrains.ReSharper.PostfixTemplates.Settings,PostfixTemplatesSettings,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Settings\PostfixTemplatesSettings.cs,,The length of the parameter ShowPostfixItemsInCodeCompletion is 32.
Long Identifier,JetBrains.ReSharper.PostfixTemplates.Settings,PostfixTemplatesSettings,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Settings\PostfixTemplatesSettings.cs,,The length of the parameter ShowStaticMethodsInCodeCompletion is 33.
Long Identifier,JetBrains.ReSharper.PostfixTemplates.Settings,PostfixTemplatesSettings,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Settings\PostfixTemplatesSettings.cs,,The length of the parameter ShowEnumHelpersInCodeCompletion is 31.
Long Identifier,JetBrains.ReSharper.PostfixTemplates.Settings,PostfixTemplatesSettings,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Settings\PostfixTemplatesSettings.cs,,The length of the parameter ShowLengthCountItemsInCodeCompletion is 36.
Long Identifier,JetBrains.ReSharper.PostfixTemplates.Settings,PostfixTemplatesSettings,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Settings\PostfixTemplatesSettings.cs,,The length of the parameter UseBracesForEmbeddedStatements is 30.
Long Identifier,JetBrains.ReSharper.PostfixTemplates.Settings,PostfixTemplatesSettings,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Settings\PostfixTemplatesSettings.cs,,The length of the parameter InvokeParameterInfoFromTemplates is 32.
Long Identifier,JetBrains.ReSharper.PostfixTemplates.Settings,PostfixTemplatesSettings,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Settings\PostfixTemplatesSettings.cs,,The length of the parameter SearchOccurrencesFromIntroduceVarTemplates is 42.
Long Identifier,JetBrains.ReSharper.PostfixTemplates.Settings,PostfixTemplatesSettings,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Settings\PostfixTemplatesSettings.cs,,The length of the parameter PostfixTemplatesCodeCompletionFilter is 36.
Long Identifier,JetBrains.ReSharper.PostfixTemplates.Settings,PostfixTemplatesSettingsAccessor,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Settings\PostfixTemplatesSettings.cs,,The length of the parameter PostfixTemplatesCodeCompletionFilter is 36.
Long Statement,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpEnumCaseItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,AddEnumerationMembers,The length of the statement  "            var presentation = new DeclaredElementPresentation<CSharpDeclaredElementInfo>(item.Info' PresenterStyles.DefaultPresenterStyle); " is 128.
Long Statement,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,EnumCaseCheckBehavior,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,FindFakeInvocation,The length of the statement  "        foreach (var invocationExpression in TextControlToPsi.GetElements<IInvocationExpression>(solution' textControl.Document' offset)) " is 129.
Long Statement,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpStaticMethodsItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpStaticMethodsItemProvider.cs,GetStaticMethodsSymbolTable,The length of the statement  "      var staticMethodsFilter = new StaticMethodsByFirstArgumentTypeFilter(firstArgumentType' qualifierExpression' existingArgumentsCount); " is 133.
Long Statement,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,StaticMethodBehavior,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpStaticMethodsItemProvider.cs,Accept,The length of the statement  "          LookupUtil.InsertTailType(textControl' nameRange.StartOffset + text.Length' tailType' solution' emulateTypingOfSpace: false); " is 125.
Long Statement,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,StaticMethodBehavior,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpStaticMethodsItemProvider.cs,Accept,The length of the statement  "        var referenceExpression = TextControlToPsi.GetElement<IReferenceExpression>(solution' textControl.Document' nameRange.StartOffset); " is 131.
Long Statement,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,StaticMethodBehavior,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpStaticMethodsItemProvider.cs,InsertQualifierAsArgument,The length of the statement  "        var qualifierWithDelimiter = qualifierDocumentRange.JoinRight(referenceExpression.NameIdentifier.GetDocumentStartOffset()); " is 123.
Long Statement,JetBrains.ReSharper.PostfixTemplates.LookupItems,CSharpStatementPostfixTemplateBehavior<TStatement>,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Infrastructure\Behaviors\CSharp\CSharpStatementPostfixTemplateBehavior.cs,PutStatementCaret,The length of the statement  "            var newStatements = TextControlToPsi.GetElements<TStatement>(psiServices.Solution' textControl.Document' textRange.StartOffset); " is 128.
Long Statement,JetBrains.ReSharper.PostfixTemplates.Contexts.CSharp,CSharpBrokenStatementPostfixTemplateContext,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Infrastructure\Contexts\CSharp\CSharpBrokenStatementPostfixTemplateContext.cs,FixExpression,The length of the statement  "      //using (psiServices.Solution.CreateTransactionCookie(DefaultAction.Commit' FixCommandName' NullProgressIndicator.Instance)) " is 124.
Long Statement,JetBrains.ReSharper.PostfixTemplates.Contexts.CSharp,CSharpBrokenStatementPostfixTemplateContext,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Infrastructure\Contexts\CSharp\CSharpBrokenStatementPostfixTemplateContext.cs,FixExpression,The length of the statement  "      var uncheckedExpression = TextControlToPsi.GetElement<IUncheckedExpression>(psiServices.Solution' document' expressionRange.TextRange.StartOffset + 1); " is 151.
Long Statement,JetBrains.ReSharper.PostfixTemplates,ExpandPostfixTemplateHandler,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Infrastructure\PostfixTemplatesTabTracker.cs,IsAvailableOrExecuteEww,The length of the statement  "        var allLanguages = files.SelectMany(file => file.GetPsiServices().Files.GetLanguages(file' PsiLanguageCategories.Primary)).Distinct(); " is 134.
Long Statement,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,CSharpForLoopStatementBehaviorBase,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\ForLoopTemplateBase.cs,AfterComplete,The length of the statement  "          nameField' variable.NameIdentifier.GetDocumentRange()' condition.LeftOperand.GetDocumentRange()' iterator.Operand.GetDocumentRange()); " is 134.
Long Statement,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,CSharpForLoopStatementBehaviorBase,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\ForLoopTemplateBase.cs,AfterComplete,The length of the statement  "          newStatement.GetSolution()' endRange' textControl' LiveTemplatesManager.EscapeAction.LeaveTextAndCaret' variableNameInfo); " is 122.
Long Statement,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,CSharpForLoopStatementBehaviorBase,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\ForLoopTemplateBase.cs,SuggestIteratorVariableNames,The length of the statement  "        var policyProvider = namingManager.Policy.GetPolicyProvider(iteratorDeclaration.Language' iteratorDeclaration.GetSourceFile()); " is 127.
Long Statement,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,CSharpForLoopStatementBehaviorBase,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\ForLoopTemplateBase.cs,SuggestIteratorVariableNames,The length of the statement  "        var collection = namingManager.Suggestion.CreateEmptyCollection(PluralityKinds.Single' iteratorDeclaration.Language' true' policyProvider); " is 139.
Long Statement,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,CSharpPostfixIntroduceVariableInExpressionBehavior,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\IntroduceVariableTemplate.cs,AfterComplete,The length of the statement  "          var reference = TextControlToPsi.GetElement<IReferenceExpression>(solution' textControl.Document' referenceRange.EndOffset); " is 124.
Complex Conditional,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,CheckForNullTemplateBase,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\CheckForNullTemplateBase.cs,IsNullable,The conditional expression  "expression is IThisExpression          || expression is IBaseExpression          || expression is ICSharpLiteralExpression          || expression is IObjectCreationExpression          || expression is IUnaryOperatorExpression          || expression is IBinaryExpression          || expression is IAnonymousMethodExpression          || expression is IAnonymousObjectCreationExpression          || expression is IArrayCreationExpression          || expression is IDefaultExpression          || expression is ITypeofExpression"  is complex.
Complex Conditional,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,YieldReturnStatementTemplate,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\YieldReturnStatementTemplate.cs,IsAlreadyOrCanBecameIterator,The conditional expression  "returnType.IsGenericIEnumerable()            || returnType.IsGenericIEnumerator()            || returnType.IsIEnumerable()            || returnType.IsIEnumerator()"  is complex.
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion,PostfixTemplatesItemProviderBase<TCodeCompletionContext;TPostfixTemplateContext>,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\PostfixTemplatesItemProviderBase.cs,IsAvailable,The following statement contains a magic number: switch (completionTypes.Length)        {          case 1:            return completionTypes[0] == CodeCompletionType.BasicCompletion;            case 2:            return completionTypes[0] == CodeCompletionType.BasicCompletion &&                   completionTypes[1] == CodeCompletionType.BasicCompletion;            default:            return false;        }
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion,PostfixTemplateMatcher,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\LookupItems\PostfixTemplateMatcher.cs,Match,The following statement contains a magic number: return new MatchingResult(              result.HighlightedRanges.Where(x => x < 3)'              //result.MostLikelyContinuation'              null'              result.AdjustedScore > 0 ? result.AdjustedScore * 2 : result.AdjustedScore / 2'              result.OriginalScore);
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion,PostfixTemplateMatcher,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\LookupItems\PostfixTemplateMatcher.cs,Match,The following statement contains a magic number: return new MatchingResult(              result.HighlightedRanges.Where(x => x < 3)'              //result.MostLikelyContinuation'              null'              result.AdjustedScore > 0 ? result.AdjustedScore * 2 : result.AdjustedScore / 2'              result.OriginalScore);
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion,PostfixTemplateMatcher,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\LookupItems\PostfixTemplateMatcher.cs,Match,The following statement contains a magic number: return new MatchingResult(              result.HighlightedRanges.Where(x => x < 3)'              //result.MostLikelyContinuation'              null'              result.AdjustedScore > 0 ? result.AdjustedScore * 2 : result.AdjustedScore / 2'              result.OriginalScore);
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion,PostfixTemplateMatcher,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\LookupItems\PostfixTemplateMatcher.cs,HackPrefix,The following statement contains a magic number: prefix.Length > 0 && prefix.Length <= 3 &&            prefix.Equals("for".Substring(0' prefix.Length)' StringComparison.OrdinalIgnoreCase)
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpEnumCaseItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,AddEnumerationMembers,The following statement contains a magic number: var lookupItem = LookupItemFactory.CreateLookupItem(info)            .WithPresentation(item =>            {              var presentation = new DeclaredElementPresentation<CSharpDeclaredElementInfo>(item.Info' PresenterStyles.DefaultPresenterStyle);                var caseValue = item.Info.CaseValue;              if (caseValue.Length <= 32)                presentation.DisplayTypeName = new RichText("= " + caseValue' EnumValueStyle);                return presentation;            })            .WithMatcher(item => new DeclaredElementMatcher(item.Info' IdentifierMatchingStyle.Default))            .WithBehavior(item => new EnumCaseCheckBehavior(item.Info));
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpEnumCaseItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,GetBinaryRepresentation,The following statement contains a magic number: switch (convertible.GetTypeCode())        {          case TypeCode.SByte:  return Convert.ToString((sbyte) convertible' 2);          case TypeCode.Byte:   return Convert.ToString((byte) convertible' 2);          case TypeCode.Int16:  return Convert.ToString((short) convertible' 2);          case TypeCode.UInt16: return Convert.ToString((ushort) convertible' 2);          case TypeCode.Int32:  return Convert.ToString((int) convertible' 2);          case TypeCode.UInt32: return Convert.ToString((uint) convertible' 2);          case TypeCode.Int64:  return Convert.ToString((long) convertible' 2);          case TypeCode.UInt64: return Convert.ToString((long)(ulong) convertible' 2);        }
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpEnumCaseItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,GetBinaryRepresentation,The following statement contains a magic number: switch (convertible.GetTypeCode())        {          case TypeCode.SByte:  return Convert.ToString((sbyte) convertible' 2);          case TypeCode.Byte:   return Convert.ToString((byte) convertible' 2);          case TypeCode.Int16:  return Convert.ToString((short) convertible' 2);          case TypeCode.UInt16: return Convert.ToString((ushort) convertible' 2);          case TypeCode.Int32:  return Convert.ToString((int) convertible' 2);          case TypeCode.UInt32: return Convert.ToString((uint) convertible' 2);          case TypeCode.Int64:  return Convert.ToString((long) convertible' 2);          case TypeCode.UInt64: return Convert.ToString((long)(ulong) convertible' 2);        }
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpEnumCaseItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,GetBinaryRepresentation,The following statement contains a magic number: switch (convertible.GetTypeCode())        {          case TypeCode.SByte:  return Convert.ToString((sbyte) convertible' 2);          case TypeCode.Byte:   return Convert.ToString((byte) convertible' 2);          case TypeCode.Int16:  return Convert.ToString((short) convertible' 2);          case TypeCode.UInt16: return Convert.ToString((ushort) convertible' 2);          case TypeCode.Int32:  return Convert.ToString((int) convertible' 2);          case TypeCode.UInt32: return Convert.ToString((uint) convertible' 2);          case TypeCode.Int64:  return Convert.ToString((long) convertible' 2);          case TypeCode.UInt64: return Convert.ToString((long)(ulong) convertible' 2);        }
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpEnumCaseItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,GetBinaryRepresentation,The following statement contains a magic number: switch (convertible.GetTypeCode())        {          case TypeCode.SByte:  return Convert.ToString((sbyte) convertible' 2);          case TypeCode.Byte:   return Convert.ToString((byte) convertible' 2);          case TypeCode.Int16:  return Convert.ToString((short) convertible' 2);          case TypeCode.UInt16: return Convert.ToString((ushort) convertible' 2);          case TypeCode.Int32:  return Convert.ToString((int) convertible' 2);          case TypeCode.UInt32: return Convert.ToString((uint) convertible' 2);          case TypeCode.Int64:  return Convert.ToString((long) convertible' 2);          case TypeCode.UInt64: return Convert.ToString((long)(ulong) convertible' 2);        }
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpEnumCaseItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,GetBinaryRepresentation,The following statement contains a magic number: switch (convertible.GetTypeCode())        {          case TypeCode.SByte:  return Convert.ToString((sbyte) convertible' 2);          case TypeCode.Byte:   return Convert.ToString((byte) convertible' 2);          case TypeCode.Int16:  return Convert.ToString((short) convertible' 2);          case TypeCode.UInt16: return Convert.ToString((ushort) convertible' 2);          case TypeCode.Int32:  return Convert.ToString((int) convertible' 2);          case TypeCode.UInt32: return Convert.ToString((uint) convertible' 2);          case TypeCode.Int64:  return Convert.ToString((long) convertible' 2);          case TypeCode.UInt64: return Convert.ToString((long)(ulong) convertible' 2);        }
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpEnumCaseItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,GetBinaryRepresentation,The following statement contains a magic number: switch (convertible.GetTypeCode())        {          case TypeCode.SByte:  return Convert.ToString((sbyte) convertible' 2);          case TypeCode.Byte:   return Convert.ToString((byte) convertible' 2);          case TypeCode.Int16:  return Convert.ToString((short) convertible' 2);          case TypeCode.UInt16: return Convert.ToString((ushort) convertible' 2);          case TypeCode.Int32:  return Convert.ToString((int) convertible' 2);          case TypeCode.UInt32: return Convert.ToString((uint) convertible' 2);          case TypeCode.Int64:  return Convert.ToString((long) convertible' 2);          case TypeCode.UInt64: return Convert.ToString((long)(ulong) convertible' 2);        }
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpEnumCaseItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,GetBinaryRepresentation,The following statement contains a magic number: switch (convertible.GetTypeCode())        {          case TypeCode.SByte:  return Convert.ToString((sbyte) convertible' 2);          case TypeCode.Byte:   return Convert.ToString((byte) convertible' 2);          case TypeCode.Int16:  return Convert.ToString((short) convertible' 2);          case TypeCode.UInt16: return Convert.ToString((ushort) convertible' 2);          case TypeCode.Int32:  return Convert.ToString((int) convertible' 2);          case TypeCode.UInt32: return Convert.ToString((uint) convertible' 2);          case TypeCode.Int64:  return Convert.ToString((long) convertible' 2);          case TypeCode.UInt64: return Convert.ToString((long)(ulong) convertible' 2);        }
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpEnumCaseItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,GetBinaryRepresentation,The following statement contains a magic number: switch (convertible.GetTypeCode())        {          case TypeCode.SByte:  return Convert.ToString((sbyte) convertible' 2);          case TypeCode.Byte:   return Convert.ToString((byte) convertible' 2);          case TypeCode.Int16:  return Convert.ToString((short) convertible' 2);          case TypeCode.UInt16: return Convert.ToString((ushort) convertible' 2);          case TypeCode.Int32:  return Convert.ToString((int) convertible' 2);          case TypeCode.UInt32: return Convert.ToString((uint) convertible' 2);          case TypeCode.Int64:  return Convert.ToString((long) convertible' 2);          case TypeCode.UInt64: return Convert.ToString((long)(ulong) convertible' 2);        }
Magic Number,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpTypeParameterFromUsageItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpTypeParameterFromUsageItemProvider.cs,GetTypeParameterName,The following statement contains a magic number: index < 100
Magic Number,JetBrains.ReSharper.PostfixTemplates,ExpressionChooser,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Infrastructure\ExpressionChooser.cs,PresentExpression,The following statement contains a magic number: const int textLength = 50;
Magic Number,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,ForEachLoopTemplate,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\ForEachLoopTemplate.cs,HackPrefix,The following statement contains a magic number: prefix.Length > 0 && prefix.Length <= 3 &&            prefix.Equals("for".Substring(0' prefix.Length)' StringComparison.OrdinalIgnoreCase)
Magic Number,JetBrains.ReSharper.PostfixTemplates.Templates.CSharp,CSharpPostfixIntroduceVariableFromTypeUsageBehavior,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Templates\CSharp\IntroduceVariableTemplate.cs,AfterComplete,The following statement contains a magic number: ExecuteRefactoring(textControl' expression' executeAfter: () =>            {              var argumentsRange = argumentsMarker.Range;              if (!argumentsRange.IsValid) return;                var offset = argumentsRange.StartOffset + argumentsRange.Length/2; // EWW              textControl.Caret.MoveTo(offset' CaretVisualPlacement.DontScrollIfVisible);                if (invokeParameterInfo)              {                var lookupItemsOwner = Info.ExecutionContext.LookupItemsOwner;                LookupUtil.ShowParameterInfo(solution' textControl' lookupItemsOwner);              }            });
Missing Default,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,CSharpEnumCaseItemProvider,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpEnumCaseItemProvider.cs,GetBinaryRepresentation,The following switch statement is missing a default case: switch (convertible.GetTypeCode())        {          case TypeCode.SByte:  return Convert.ToString((sbyte) convertible' 2);          case TypeCode.Byte:   return Convert.ToString((byte) convertible' 2);          case TypeCode.Int16:  return Convert.ToString((short) convertible' 2);          case TypeCode.UInt16: return Convert.ToString((ushort) convertible' 2);          case TypeCode.Int32:  return Convert.ToString((int) convertible' 2);          case TypeCode.UInt32: return Convert.ToString((uint) convertible' 2);          case TypeCode.Int64:  return Convert.ToString((long) convertible' 2);          case TypeCode.UInt64: return Convert.ToString((long)(ulong) convertible' 2);        }
Missing Default,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,StaticMethodBehavior,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpStaticMethodsItemProvider.cs,PlaceCaretAfterCompletion,The following switch statement is missing a default case: switch (parenthesesInsertType)          {            case ParenthesesInsertType.Both:            {              if (hasMoreParametersToPass)              {                var rightPar = invocationExpression.RPar;                if (rightPar != null)                {                  var rightParRange = rightPar.GetDocumentRange().TextRange;                  textControl.Caret.MoveTo(rightParRange.StartOffset' CaretVisualPlacement.DontScrollIfVisible);                }              }                break;            }              case ParenthesesInsertType.Left:            case ParenthesesInsertType.None:            {              // if in insert mode - drop right par and set caret to it's start offest              if (insertType == LookupItemInsertType.Insert)              {                var rightPar = invocationExpression.RPar;                if (rightPar != null)                {                  var rightParRange = rightPar.GetDocumentRange().TextRange;                    invocationExpression.GetPsiServices().Transactions.Execute(                    commandName: typeof(StaticMethodBehavior).FullName'                    handler: () =>                    {                      using (WriteLockCookie.Create())                        LowLevelModificationUtil.DeleteChild(rightPar);                    });                    textControl.Caret.MoveTo(rightParRange.StartOffset' CaretVisualPlacement.DontScrollIfVisible);                }              }                break;            }          }
Missing Default,JetBrains.ReSharper.PostfixTemplates.CodeCompletion.CSharp,StaticMethodsByFirstArgumentTypeFilter,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\CodeCompletion\CSharp\Extras\CSharpStaticMethodsItemProvider.cs,Accepts,The following switch statement is missing a default case: switch (method.ShortName) // filter out static methods from Object.*          {            case "Equals":            case "ReferenceEquals":            {              var containingType = method.GetContainingType();              if (containingType.IsObjectClass()) return false;              break;            }          }
Missing Default,JetBrains.ReSharper.PostfixTemplates,CommonUtils,D:\research\architectureSmells\repos\controlflow_resharper-postfix\PostfixTemplates\Utils\CommonUtils.cs,GetParenthesesTemplate,The following switch statement is missing a default case: switch (parenthesesType)        {          case ParenthesesInsertType.None: return "";          case ParenthesesInsertType.Left: return "(";        }
