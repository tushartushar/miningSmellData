Implementation smell,Namespace,Class,File,Method,Description
Empty Catch Block,Sample.Core.ViewModels,DialogsViewModel,C:\repos\aritchie_acrmvvmcross\Sample.Core\ViewModels\DialogsViewModel.cs,DialogsViewModel,The method has an empty catch block.
Magic Number,Sample.Core.ViewModels,DialogsViewModel,C:\repos\aritchie_acrmvvmcross\Sample.Core\ViewModels\DialogsViewModel.cs,Start,The following statement contains a magic number: using (this.dialogs.Loading("StartAsync Test - 3..."))   				await Task.Delay(TimeSpan.FromSeconds(3));
Magic Number,Sample.Core.ViewModels,DialogsViewModel,C:\repos\aritchie_acrmvvmcross\Sample.Core\ViewModels\DialogsViewModel.cs,DialogsViewModel,The following statement contains a magic number: this.Progress = new MvxCommand(async () => {                  var cancelled = false;                    using (var dlg = dialogService.Progress("Test Progress")) {                      dlg.SetCancel(() => cancelled = true);                      while (!cancelled && dlg.PercentComplete < 100) {                          await Task.Delay(TimeSpan.FromMilliseconds(500));                          dlg.PercentComplete += 2;                      }                  }                  this.Result = (cancelled ? "Progress Cancelled" : "Progress Complete");              });
Magic Number,Sample.Core.ViewModels,DialogsViewModel,C:\repos\aritchie_acrmvvmcross\Sample.Core\ViewModels\DialogsViewModel.cs,DialogsViewModel,The following statement contains a magic number: this.Progress = new MvxCommand(async () => {                  var cancelled = false;                    using (var dlg = dialogService.Progress("Test Progress")) {                      dlg.SetCancel(() => cancelled = true);                      while (!cancelled && dlg.PercentComplete < 100) {                          await Task.Delay(TimeSpan.FromMilliseconds(500));                          dlg.PercentComplete += 2;                      }                  }                  this.Result = (cancelled ? "Progress Cancelled" : "Progress Complete");              });
Magic Number,Sample.Core.ViewModels,DialogsViewModel,C:\repos\aritchie_acrmvvmcross\Sample.Core\ViewModels\DialogsViewModel.cs,DialogsViewModel,The following statement contains a magic number: this.Progress = new MvxCommand(async () => {                  var cancelled = false;                    using (var dlg = dialogService.Progress("Test Progress")) {                      dlg.SetCancel(() => cancelled = true);                      while (!cancelled && dlg.PercentComplete < 100) {                          await Task.Delay(TimeSpan.FromMilliseconds(500));                          dlg.PercentComplete += 2;                      }                  }                  this.Result = (cancelled ? "Progress Cancelled" : "Progress Complete");              });
Magic Number,Sample.Core.ViewModels,DialogsViewModel,C:\repos\aritchie_acrmvvmcross\Sample.Core\ViewModels\DialogsViewModel.cs,DialogsViewModel,The following statement contains a magic number: this.ProgressNoCancel = new MvxCommand(async () => {                  using (var dlg = dialogService.Progress("Progress (No Cancel)")) {                      while (dlg.PercentComplete < 100) {                          await Task.Delay(TimeSpan.FromSeconds(1));                          dlg.PercentComplete += 20;                      }                  }              });
Magic Number,Sample.Core.ViewModels,DialogsViewModel,C:\repos\aritchie_acrmvvmcross\Sample.Core\ViewModels\DialogsViewModel.cs,DialogsViewModel,The following statement contains a magic number: this.ProgressNoCancel = new MvxCommand(async () => {                  using (var dlg = dialogService.Progress("Progress (No Cancel)")) {                      while (dlg.PercentComplete < 100) {                          await Task.Delay(TimeSpan.FromSeconds(1));                          dlg.PercentComplete += 20;                      }                  }              });
Magic Number,Sample.Core.ViewModels,DialogsViewModel,C:\repos\aritchie_acrmvvmcross\Sample.Core\ViewModels\DialogsViewModel.cs,DialogsViewModel,The following statement contains a magic number: this.Loading = new MvxCommand(async () => {                  var cancelSrc = new CancellationTokenSource();                    using (var dlg = dialogService.Loading("Test Progress")) {                      dlg.SetCancel(cancelSrc.Cancel);                        try {                           await Task.Delay(TimeSpan.FromSeconds(5)' cancelSrc.Token);                      }                      catch { }                  }                  this.Result = (cancelSrc.IsCancellationRequested ? "Loading Cancelled" : "Loading Complete");              });
Magic Number,Sample.Core.ViewModels,DialogsViewModel,C:\repos\aritchie_acrmvvmcross\Sample.Core\ViewModels\DialogsViewModel.cs,DialogsViewModel,The following statement contains a magic number: this.LoadingNoCancel = new MvxCommand(async () => {                  using (dialogService.Loading("Loading (No Cancel)"))                       await Task.Delay(TimeSpan.FromSeconds(3));                    this.Result = "Loading Complete";              });
Magic Number,Sample.Core.ViewModels,BarCodeCreateViewModel,C:\repos\aritchie_acrmvvmcross\Sample.Core\ViewModels\BarCodeCreateViewModel.cs,BarCodeCreateViewModel,The following statement contains a magic number: this.width = 200;
Magic Number,Sample.Core.ViewModels,BarCodeCreateViewModel,C:\repos\aritchie_acrmvvmcross\Sample.Core\ViewModels\BarCodeCreateViewModel.cs,BarCodeCreateViewModel,The following statement contains a magic number: this.height = 200;
