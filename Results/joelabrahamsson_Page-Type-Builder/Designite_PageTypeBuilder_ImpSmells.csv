Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PageTypeBuilder.Synchronization,PageTypeUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageTypeUpdater.cs,UpdateAvailablePageTypesExcluded,Cyclomatic complexity of the method is 11
Complex Method,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionUpdater.cs,UpdatePageDefinitionValues,Cyclomatic complexity of the method is 13
Long Parameter List,PageTypeBuilder.Synchronization,PageTypeSynchronizer,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageTypeSynchronizer.cs,PageTypeSynchronizer,The method has 11 parameters.
Long Identifier,PageTypeBuilder.Discovery,PageTypePropertyDefinitionLocator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Discovery\PageTypePropertyDefinitionLocator.cs,GetPageTypePropertyDefinitions,The length of the parameter pageTypePropertyGroupAttribute is 30.
Long Identifier,PageTypeBuilder.Synchronization,GlobalPropertySettingsSynchronizer,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\GlobalPropertySettingsSynchronizer.cs,GlobalPropertySettingsSynchronizer,The length of the parameter propertySettingsRepositoryMethod is 32.
Long Identifier,PageTypeBuilder.Synchronization,PageTypeSynchronizer,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageTypeSynchronizer.cs,PageTypeSynchronizer,The length of the parameter pageDefinitionSynchronizationEngine is 35.
Long Identifier,PageTypeBuilder.Synchronization,PageTypeSynchronizer,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageTypeSynchronizer.cs,PageTypeSynchronizer,The length of the parameter globalPropertySettingsSynchronizer is 34.
Long Identifier,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionSpecificPropertySettingsUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionSpecificPropertySettingsUpdater.cs,PageDefinitionSpecificPropertySettingsUpdater,The length of the parameter propertySettingsRepositoryMethod is 32.
Long Identifier,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionSynchronizationEngine,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionSynchronizationEngine.cs,PageDefinitionSynchronizationEngine,The length of the parameter pageTypePropertyDefinitionLocator is 33.
Long Identifier,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionSynchronizationEngine,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionSynchronizationEngine.cs,PageDefinitionSynchronizationEngine,The length of the parameter pageDefinitionSpecificPropertySettingsUpdater is 45.
Long Identifier,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionPropertiesValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionPropertiesValidator.cs,ValidateCompilerGeneratedPropertyGetterOrSetterNotPrivate,The length of the parameter privateGetterOrSetterErrorMessage is 33.
Long Identifier,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionValidator.cs.cs,ValidatePageTypesHaveGuidOrUniqueName,The length of the parameter definitionsWithNoGuidAndSameName is 32.
Long Statement,PageTypeBuilder,DefaultBootstrapper,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\DefaultBootstrapper.cs,Configure,The length of the statement  "	containerBuilder.Register (context => PageTypeBuilderConfiguration.GetConfiguration ()).As<PageTypeBuilderConfiguration> (); " is 124.
Long Statement,PageTypeBuilder,DefaultBootstrapper,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\DefaultBootstrapper.cs,Configure,The length of the statement  "	containerBuilder.RegisterType<PageDefinitionSpecificPropertySettingsUpdater> ().As<PageDefinitionSpecificPropertySettingsUpdater> (); " is 133.
Long Statement,PageTypeBuilder,PageTypePropertyGroupExtensionMethods,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\PageTypePropertyGroupExtensions.cs,GetPropertyGroupPropertyValue,The length of the statement  "	string propertyName = PageTypePropertyGroupHierarchy.ResolvePropertyName (propertyGroup.Hierarchy.Value' memberExpression.Member.Name); " is 135.
Long Statement,PageTypeBuilder,PageTypePropertyGroupExtensionMethods,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\PageTypePropertyGroupExtensions.cs,GetMemberExpression,The length of the statement  "		throw new PageTypeBuilderException ("The body of the expression must be either a MemberExpression of a UnaryExpression."); " is 122.
Long Statement,PageTypeBuilder,PageTypePropertyGroupExtensionMethods,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\PageTypePropertyGroupExtensions.cs,GetPropertyGroupProperty,The length of the statement  "	string propertyName = PageTypePropertyGroupHierarchy.ResolvePropertyName (propertyGroup.Hierarchy.Value' memberExpression.Member.Name); " is 135.
Long Statement,PageTypeBuilder,PageTypePropertyGroupExtensionMethods,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\PageTypePropertyGroupExtensions.cs,GetPropertyGroupPropertyValue,The length of the statement  "	string propertyName = PageTypePropertyGroupHierarchy.ResolvePropertyName (propertyGroup.Hierarchy.Value' memberExpression.Member.Name); " is 135.
Long Statement,PageTypeBuilder,PageTypePropertyGroupExtensionMethods,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\PageTypePropertyGroupExtensions.cs,GetPropertyGroupPropertyName,The length of the statement  "	return PageTypePropertyGroupHierarchy.ResolvePropertyName (propertyGroup.Hierarchy.Value' GetMemberExpression (expression).Member.Name); " is 136.
Long Statement,PageTypeBuilder,PageDataExtensionMethods,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\PageDataExtensionMethods.cs,GetMemberExpression,The length of the statement  "		throw new PageTypeBuilderException ("The body of the expression must be either a MemberExpression of a UnaryExpression."); " is 122.
Long Statement,PageTypeBuilder,PageDataExtensionMethods,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\PageDataExtensionMethods.cs,SetPropertyValue,The length of the statement  "		throw new PageTypeBuilderException ("The body of the expression must be either a MemberExpression or a UnaryExpression."); " is 122.
Long Statement,PageTypeBuilder,TypedPageData,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\TypedPageData.cs,CreateWritableClone,The length of the statement  "	new TypedPageActivator ().CreateAndPopulateNestedPropertyGroupInstances (page as TypedPageData' page' properties' string.Empty); " is 128.
Long Statement,PageTypeBuilder.Discovery,PropertySettingsUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Discovery\PropertySettingsUpdater.cs,UpdateSettings,The length of the statement  "	var updateMethod = typeof(IUpdatePropertySettings<>).MakeGenericType (SettingsType).GetMethod ("UpdateSettings"' new[] { " is 120.
Long Statement,PageTypeBuilder.Discovery,PropertySettingsUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Discovery\PropertySettingsUpdater.cs,GetSettingsHashCode,The length of the statement  "	var hashCodeMethod = typeof(IUpdatePropertySettings<>).MakeGenericType (SettingsType).GetMethod ("GetSettingsHashCode"' new[] { " is 127.
Long Statement,PageTypeBuilder.Discovery,TabLocator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Discovery\TabLocator.cs,GetDefinedTabs,The length of the statement  "	return assemblyLocator.AssembliesWithReferenceToAssemblyOf<Tab> ().TypesAssignableTo<Tab> ().Concrete ().Select (t => (Tab)Activator.CreateInstance (t)); " is 153.
Long Statement,PageTypeBuilder.Discovery,PageTypeDefinitionLocator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Discovery\PageTypeDefinitionLocator.cs,GetPageTypeDefinitions,The length of the statement  "	return assemblyLocator.AssembliesWithReferenceToAssemblyOf<PageTypeAttribute> ().TypesWithAttribute<PageTypeAttribute> ().Concrete ().Select (type => new PageTypeDefinition { " is 174.
Long Statement,PageTypeBuilder.Discovery,PageTypePropertyDefinitionLocator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Discovery\PageTypePropertyDefinitionLocator.cs,GetPageTypePropertyDefinitions,The length of the statement  "		pageTypePropertyDefinitions.Add (new PageTypePropertyDefinition (property.Name' property.PropertyType' pageType' attribute)); " is 125.
Long Statement,PageTypeBuilder.Discovery,PageTypePropertyDefinitionLocator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Discovery\PageTypePropertyDefinitionLocator.cs,GetPageTypePropertyDefinitions,The length of the statement  "	foreach (PropertyInfo property in properties.Where (property => property.PropertyType.BaseType == typeof(PageTypePropertyGroup))) { " is 131.
Long Statement,PageTypeBuilder.Discovery,PageTypePropertyDefinitionLocator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Discovery\PageTypePropertyDefinitionLocator.cs,GetPageTypePropertyDefinitions,The length of the statement  "		PageTypePropertyGroupAttribute pageTypePropertyGroupAttribute = GetPropertyAttribute<PageTypePropertyGroupAttribute> (property); " is 128.
Long Statement,PageTypeBuilder.Discovery,PageTypePropertyDefinitionLocator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Discovery\PageTypePropertyDefinitionLocator.cs,GetPropertyGroupPropertyDefinitions,The length of the statement  "	PageTypePropertyGroupAttribute groupAttribute = GetPropertyAttribute<PageTypePropertyGroupAttribute> (propertyGroupProperty); " is 125.
Long Statement,PageTypeBuilder.Discovery,PageTypePropertyDefinitionLocator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Discovery\PageTypePropertyDefinitionLocator.cs,GetPropertyGroupPropertyDefinitions,The length of the statement  "		string resolvedPropertyName = PageTypePropertyGroupHierarchy.ResolvePropertyName (propertyGroupProperty.Name' property.Name); " is 125.
Long Statement,PageTypeBuilder.Configuration,PageTypeBuilderConfiguration,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Configuration\PageTypeBuilderConfiguration.cs,GetConfiguration,The length of the statement  "	PageTypeBuilderConfiguration configuration = ConfigurationManager.GetSection ("pageTypeBuilder") as PageTypeBuilderConfiguration; " is 129.
Long Statement,PageTypeBuilder.Reflection,TypeExtensions,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Reflection\TypeExtensions.cs,GetPageTypePropertiesOnClass,The length of the statement  "	return pageTypeType.GetPublicOrPrivateProperties ().Where (propertyInfo => propertyInfo.HasAttribute (typeof(PageTypePropertyAttribute))); " is 138.
Long Statement,PageTypeBuilder.Reflection,TypeExtensions,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Reflection\TypeExtensions.cs,GetPageTypePropertyGroupProperties,The length of the statement  "	return pageTypeType.GetPublicOrPrivateProperties ().Where (propertyInfo => propertyInfo.HasAttribute (typeof(PageTypePropertyGroupAttribute))); " is 143.
Long Statement,PageTypeBuilder.Activation,PageTypePropertiesProxyGenerationHook,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Activation\PageTypePropertiesProxyGenerationHook.cs,ShouldInterceptMethod,The length of the statement  "	return memberInfo.IsGetterOrSetterForPropertyWithAttribute (typeof(PageTypePropertyAttribute)) && memberInfo.IsCompilerGenerated (); " is 132.
Long Statement,PageTypeBuilder.Activation,TypedPageActivator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Activation\TypedPageActivator.cs,CreateAndPopulateNestedPropertyGroupInstances,The length of the statement  "	foreach (PropertyInfo property in properties.Where (current => current.PropertyType.BaseType == typeof(PageTypePropertyGroup))) { " is 129.
Long Statement,PageTypeBuilder.Synchronization,GlobalPropertySettingsSynchronizer,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\GlobalPropertySettingsSynchronizer.cs,Synchronize,The length of the statement  "			var newWrapper = new PropertySettingsWrapper (updater.DisplayName' updater.Description' updater.IsDefault.GetValueOrDefault ()' true' settings); " is 144.
Long Statement,PageTypeBuilder.Synchronization,PageTypeUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageTypeUpdater.cs,UpdatePageType,The length of the statement  "	if (!availablePageTypesSet && CanModifyProperty (pageType' attribute.ExcludedPageTypesSet) && attribute.ExcludedPageTypes != null) " is 130.
Long Statement,PageTypeBuilder.Synchronization,PageTypeUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageTypeUpdater.cs,UpdateAvailablePageTypes,The length of the statement  "			IPageType availablePageType = GetExistingPageType (_pageTypeDefinitions.First (definition => definition.Type.GUID == currentAvailablePageTypeType.GUID)); " is 153.
Long Statement,PageTypeBuilder.Synchronization,PageTypeUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageTypeUpdater.cs,UpdateAvailablePageTypes,The length of the statement  "			availablePageTypeIds.AddRange (GetPageDefinitionsThatInheritFromType (_pageTypeDefinitions' currentAvailablePageTypeType).Where (id => !availablePageTypeIds.Contains (id))); " is 173.
Long Statement,PageTypeBuilder.Synchronization,PageTypeUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageTypeUpdater.cs,UpdateAvailablePageTypes,The length of the statement  "			availablePageTypeIds.AddRange (GetPageDefinitionsThatImplementInteface (_pageTypeDefinitions' currentAvailablePageTypeType).Where (id => !availablePageTypeIds.Contains (id))); " is 175.
Long Statement,PageTypeBuilder.Synchronization,PageTypeUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageTypeUpdater.cs,UpdateAvailablePageTypesExcluded,The length of the statement  "			IPageType availablePageType = GetExistingPageType (_pageTypeDefinitions.First (definition => definition.Type.GUID == currentExcludedPageTypeType.GUID)); " is 152.
Long Statement,PageTypeBuilder.Synchronization,PageTypeUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageTypeUpdater.cs,UpdateAvailablePageTypesExcluded,The length of the statement  "			foreach (int pageTypeId in GetPageDefinitionsThatInheritFromType (_pageTypeDefinitions' currentExcludedPageTypeType).Where (availablePageTypeIds.Contains)) " is 155.
Long Statement,PageTypeBuilder.Synchronization,PageTypeUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageTypeUpdater.cs,UpdateAvailablePageTypesExcluded,The length of the statement  "			foreach (int pageTypeId in GetPageDefinitionsThatImplementInteface (_pageTypeDefinitions' currentExcludedPageTypeType).Where (availablePageTypeIds.Contains)) " is 157.
Long Statement,PageTypeBuilder.Synchronization,PageTypeUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageTypeUpdater.cs,GetPageDefinitionsThatInheritFromType,The length of the statement  "	return pageTypeDefinitions.Where (definition => definition.Type.IsSubclassOf (subClassType)).Select (definition => GetExistingPageType (definition).ID); " is 152.
Long Statement,PageTypeBuilder.Synchronization,PageTypeUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageTypeUpdater.cs,GetPageDefinitionsThatImplementInteface,The length of the statement  "	return pageTypeDefinitions.Where (definition => definition.Type.GetInterfaces ().Any (currentInterface => currentInterface.Equals (interfaceType))).Select (definition => GetExistingPageType (definition).ID); " is 207.
Long Statement,PageTypeBuilder.Synchronization.Hooks,HooksHandler,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Hooks\HooksHandler.cs,InvokePreSynchronizationHooks,The length of the statement  "	var hooks = assemblyLocator.AssembliesWithReferenceToAssemblyOf<IPreSynchronizationHook> ().TypesAssignableTo<IPreSynchronizationHook> ().Concrete ().Select (t => (IPreSynchronizationHook)Activator.CreateInstance (t)).ToList (); " is 228.
Long Statement,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionSpecificPropertySettingsUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionSpecificPropertySettingsUpdater.cs,UpdatePageDefinitionsLocalPropertySettings,The length of the statement  "			//TODO: Add spec validating that exception is thrown with the below uncommented (An item with the same key has already been added.) " is 131.
Long Statement,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionSpecificPropertySettingsUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionSpecificPropertySettingsUpdater.cs,UpdatePageDefinitionsGlobalPropertySettings,The length of the statement  "		var globalSettingsUpdater = globalPropertySettingsLocator.GetGlobalPropertySettingsUpdaters ().First (u => u.WrappedInstanceType == useGlobalSettingsAttribute.Type); " is 165.
Long Statement,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionSpecificPropertySettingsUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionSpecificPropertySettingsUpdater.cs,UpdatePageDefinitionsGlobalPropertySettings,The length of the statement  "		var wrapper = _propertySettingsRepositoryMethod ().GetGlobals (globalSettingsUpdater.SettingsType).First (w => globalSettingsUpdater.Match (w)); " is 144.
Long Statement,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionSpecificPropertySettingsUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionSpecificPropertySettingsUpdater.cs,UpdatePageDefinitionsGlobalPropertySettings,The length of the statement  "		PropertySettingsWrapper existingWrapper = container.Settings.ContainsKey (globalSettingsUpdater.SettingsType.FullName) ? container.Settings [globalSettingsUpdater.SettingsType.FullName] : null; " is 193.
Long Statement,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionSpecificPropertySettingsUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionSpecificPropertySettingsUpdater.cs,UpdatePageDefinitionsGlobalPropertySettings,The length of the statement  "			//TODO: Add spec validating that exception is thrown with the below uncommented (An item with the same key has already been added.) " is 131.
Long Statement,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionSpecificPropertySettingsUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionSpecificPropertySettingsUpdater.cs,GetPropertySettingsUpdaters,The length of the statement  "	where interfaceType.IsGenericType && typeof(IUpdatePropertySettings<>).IsAssignableFrom (interfaceType.GetGenericTypeDefinition ()) " is 131.
Long Statement,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionSpecificPropertySettingsUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionSpecificPropertySettingsUpdater.cs,GetPropertyAttributes,The length of the statement  "		PropertyInfo propertyGroupProperty = pageTypeDefinition.Type.GetProperties (propertyBindingFlags).FirstOrDefault (p => String.Equals (p.Name' propertyGroupPropertyName)); " is 170.
Long Statement,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionSpecificPropertySettingsUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionSpecificPropertySettingsUpdater.cs,GetPropertyAttributes,The length of the statement  "		prop = pageTypeDefinition.Type.GetProperties (propertyBindingFlags).FirstOrDefault (p => String.Equals (p.Name' propertyDefinition.Name)); " is 138.
Long Statement,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionSynchronizationEngine,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionSynchronizationEngine.cs,UpdatePageTypePropertyDefinitions,The length of the statement  "	IEnumerable<PageTypePropertyDefinition> definitions = pageTypePropertyDefinitionLocator.GetPageTypePropertyDefinitions (pageType' pageTypeDefinition.Type); " is 155.
Long Statement,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionSynchronizationEngine,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionSynchronizationEngine.cs,UpdatePageTypePropertyDefinitions,The length of the statement  "		pageDefinitionSpecificPropertySettingsUpdater.UpdatePropertySettings (pageTypeDefinition' propertyDefinition' pageDefinition); " is 126.
Long Statement,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionSynchronizationEngine,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionSynchronizationEngine.cs,GetExistingPageDefinition,The length of the statement  "	return definitions.FirstOrDefault (definition => string.Equals (definition.Name' propertyDefinition.Name' StringComparison.OrdinalIgnoreCase)); " is 143.
Long Statement,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionTypeMapper,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionTypeMapper.cs,GetPageDefinitionType,The length of the statement  "	return GetPageDefinitionType (definition.PageType.Name' definition.Name' definition.PropertyType' definition.PageTypePropertyAttribute); " is 136.
Long Statement,PageTypeBuilder.Synchronization.PageDefinitionSynchronization,PageDefinitionUpdater,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\PageDefinitionSynchronization\PageDefinitionUpdater.cs,UpdatePageDefinitionValues,The length of the statement  "		pageDefinition.DefaultValue = propertyAttribute.DefaultValue != null ? propertyAttribute.DefaultValue.ToString () : string.Empty; " is 129.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionPropertiesValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionPropertiesValidator.cs,ValidateCompilerGeneratedProperty,The length of the statement  "	notVirtualErrorMessage = string.Format (CultureInfo.InvariantCulture' notVirtualErrorMessage' propertyInfo.Name' propertyInfo.DeclaringType.Name' typeof(PageTypePropertyAttribute).Name); " is 186.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionPropertiesValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionPropertiesValidator.cs,ValidateCompilerGeneratedPropertyGetterOrSetterNotPrivate,The length of the statement  "		string privateGetterOrSetterErrorMessage = "{0} in {1} must not have a private getter or setter as it is compiler generated and has {2}."; " is 138.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionPropertiesValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionPropertiesValidator.cs,ValidateCompilerGeneratedPropertyGetterOrSetterNotPrivate,The length of the statement  "		privateGetterOrSetterErrorMessage = string.Format (CultureInfo.InvariantCulture' privateGetterOrSetterErrorMessage' propertyInfo.Name' propertyInfo.DeclaringType.Name' typeof(PageTypePropertyAttribute).Name); " is 208.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionPropertiesValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionPropertiesValidator.cs,ValidatePageTypeAttributeTabProperty,The length of the statement  "		errorMessage = string.Format (CultureInfo.InvariantCulture' errorMessage' propertyInfo.Name' propertyInfo.DeclaringType.Name' typeof(PageTypePropertyAttribute).Name' typeof(Tab)); " is 179.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionPropertiesValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionPropertiesValidator.cs,ValidatePageTypeAttributeTabProperty,The length of the statement  "		errorMessage = string.Format (CultureInfo.InvariantCulture' errorMessage' propertyInfo.Name' propertyInfo.DeclaringType.Name' typeof(PageTypePropertyAttribute).Name); " is 166.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionPropertiesValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionPropertiesValidator.cs,ValidatePageTypePropertyType,The length of the statement  "	PageTypePropertyAttribute pageTypePropertyAttribute = (PageTypePropertyAttribute)propertyInfo.GetCustomAttributes (typeof(PageTypePropertyAttribute)' false).First (); " is 166.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionPropertiesValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionPropertiesValidator.cs,ValidatePageTypePropertyType,The length of the statement  "	if (pageDefinitionTypeMapper.GetPageDefinitionType (propertyInfo.DeclaringType.Name' propertyInfo.Name' propertyInfo.PropertyType' pageTypePropertyAttribute) == null) { " is 168.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionPropertiesValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionPropertiesValidator.cs,ValidatePageTypePropertyType,The length of the statement  "		errorMessage = string.Format (CultureInfo.InvariantCulture' errorMessage' propertyInfo.Name' propertyInfo.DeclaringType.Name); " is 126.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionValidator.cs.cs,ValidatePageTypesHaveGuidOrUniqueName,The length of the statement  "	IEnumerable<IGrouping<string' PageTypeDefinition>> definitionsWithNoGuidAndSameName = pageTypeDefinitions.Where (definition => definition.Attribute.Guid == null).GroupBy (definition => definition.GetPageTypeName ()).Where (groupedDefinitions => groupedDefinitions.Count () > 1); " is 278.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionValidator.cs.cs,ValidateNameLength,The length of the statement  "	string errorMessage = "The page type class {0} has a name that is longer than {1}. EPiServer does not save more than {1} characters and the name is often used to identify page types."; " is 184.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionValidator.cs.cs,ValidateNameLength,The length of the statement  "	errorMessage = string.Format (CultureInfo.InvariantCulture' errorMessage' definition.Type.Name' MaximumPageTypeNameLength); " is 123.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionValidator.cs.cs,ValidateInheritsFromBasePageType,The length of the statement  "		errorMessage = string.Format (CultureInfo.InvariantCulture' errorMessage' typeToCheck.FullName' typeof(PageTypeAttribute).FullName' baseTypeForPageTypes.FullName); " is 163.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionValidator.cs.cs,ValidateAvailableOrExcludedPageTypes,The length of the statement  "	Type[] pageTypes = availblePageTypes ? definition.Attribute.AvailablePageTypes : definition.Attribute.ExcludedPageTypes; " is 120.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionValidator.cs.cs,ValidateAvailableOrExcludedPageTypes,The length of the statement  "			throw new PageTypeBuilderException (string.Format (CultureInfo.InvariantCulture' "The page type {0}'s {1} attribute contains the type {2} several times."' definition.Type.FullName' propertyName' pageTypeType.FullName)); " is 219.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionValidator.cs.cs,ValidateAvailableOrExcludedPageTypes,The length of the statement  "		if (allPageTypeDefinitions.Count (d => d.Type.GUID == pageTypeType.GUID) == 0 && !pageTypeType.IsSubclassOf (typeof(TypedPageData)) && !pageTypeType.IsInterface) { " is 163.
Long Statement,PageTypeBuilder.Synchronization.Validation,PageTypeDefinitionValidator,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Synchronization\Validation\PageTypeDefinitionValidator.cs.cs,ValidateAvailableOrExcludedPageTypes,The length of the statement  "			throw new PageTypeBuilderException (string.Format (CultureInfo.InvariantCulture' "The page type {0} has the type {1} specified in it's {2} attribute " + "which is not a defined page type"' definition.Type.FullName' pageTypeType.FullName' propertyName)); " is 253.
Magic Number,PageTypeBuilder.Reflection,MethodInfoExtensions,F:\newReposMay17\joelabrahamsson_Page-Type-Builder\PageTypeBuilder\Reflection\MethodInfoExtensions.cs,GetPropertyName,The following statement contains a magic number: return propertyGetterOrSetter.Name.Substring (4);  
