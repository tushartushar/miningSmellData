Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CommandLine.Utility,Arguments,D:\research\architectureSmells\repos\hugorodgerbrown_HipChat.net\hipchat.notification\Arguments.cs,Arguments,Cyclomatic complexity of the method is 13
Magic Number,CommandLine.Utility,Arguments,D:\research\architectureSmells\repos\hugorodgerbrown_HipChat.net\hipchat.notification\Arguments.cs,Arguments,The following statement contains a magic number: Parts = Spliter.Split(Txt' 3);
Magic Number,CommandLine.Utility,Arguments,D:\research\architectureSmells\repos\hugorodgerbrown_HipChat.net\hipchat.notification\Arguments.cs,Arguments,The following statement contains a magic number: switch (Parts.Length)                  {                      // Found a value (for the last parameter found (space separator))                      case 1:                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter))                              {                                  Parts[0] = Remover.Replace(Parts[0]' "$1");                                  Parameters.Add(Parameter' Parts[0]);                              }                              Parameter = null;                          }                          // else Error: no parameter waiting for a value (skipped)                          break;                      // Found just a parameter                      case 2:                          // The last parameter is still waiting. With no value' set it to true.                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter)) Parameters.Add(Parameter' "true");                          }                          Parameter = Parts[1];                          break;                      // Parameter with enclosed value                      case 3:                          // The last parameter is still waiting. With no value' set it to true.                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter)) Parameters.Add(Parameter' "true");                          }                          Parameter = Parts[1];                          // Remove possible enclosing characters ("'')                          if (!Parameters.ContainsKey(Parameter))                          {                              Parts[2] = Remover.Replace(Parts[2]' "$1");                              Parameters.Add(Parameter' Parts[2]);                          }                          Parameter = null;                          break;                  }
Magic Number,CommandLine.Utility,Arguments,D:\research\architectureSmells\repos\hugorodgerbrown_HipChat.net\hipchat.notification\Arguments.cs,Arguments,The following statement contains a magic number: switch (Parts.Length)                  {                      // Found a value (for the last parameter found (space separator))                      case 1:                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter))                              {                                  Parts[0] = Remover.Replace(Parts[0]' "$1");                                  Parameters.Add(Parameter' Parts[0]);                              }                              Parameter = null;                          }                          // else Error: no parameter waiting for a value (skipped)                          break;                      // Found just a parameter                      case 2:                          // The last parameter is still waiting. With no value' set it to true.                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter)) Parameters.Add(Parameter' "true");                          }                          Parameter = Parts[1];                          break;                      // Parameter with enclosed value                      case 3:                          // The last parameter is still waiting. With no value' set it to true.                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter)) Parameters.Add(Parameter' "true");                          }                          Parameter = Parts[1];                          // Remove possible enclosing characters ("'')                          if (!Parameters.ContainsKey(Parameter))                          {                              Parts[2] = Remover.Replace(Parts[2]' "$1");                              Parameters.Add(Parameter' Parts[2]);                          }                          Parameter = null;                          break;                  }
Magic Number,CommandLine.Utility,Arguments,D:\research\architectureSmells\repos\hugorodgerbrown_HipChat.net\hipchat.notification\Arguments.cs,Arguments,The following statement contains a magic number: switch (Parts.Length)                  {                      // Found a value (for the last parameter found (space separator))                      case 1:                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter))                              {                                  Parts[0] = Remover.Replace(Parts[0]' "$1");                                  Parameters.Add(Parameter' Parts[0]);                              }                              Parameter = null;                          }                          // else Error: no parameter waiting for a value (skipped)                          break;                      // Found just a parameter                      case 2:                          // The last parameter is still waiting. With no value' set it to true.                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter)) Parameters.Add(Parameter' "true");                          }                          Parameter = Parts[1];                          break;                      // Parameter with enclosed value                      case 3:                          // The last parameter is still waiting. With no value' set it to true.                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter)) Parameters.Add(Parameter' "true");                          }                          Parameter = Parts[1];                          // Remove possible enclosing characters ("'')                          if (!Parameters.ContainsKey(Parameter))                          {                              Parts[2] = Remover.Replace(Parts[2]' "$1");                              Parameters.Add(Parameter' Parts[2]);                          }                          Parameter = null;                          break;                  }
Magic Number,CommandLine.Utility,Arguments,D:\research\architectureSmells\repos\hugorodgerbrown_HipChat.net\hipchat.notification\Arguments.cs,Arguments,The following statement contains a magic number: switch (Parts.Length)                  {                      // Found a value (for the last parameter found (space separator))                      case 1:                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter))                              {                                  Parts[0] = Remover.Replace(Parts[0]' "$1");                                  Parameters.Add(Parameter' Parts[0]);                              }                              Parameter = null;                          }                          // else Error: no parameter waiting for a value (skipped)                          break;                      // Found just a parameter                      case 2:                          // The last parameter is still waiting. With no value' set it to true.                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter)) Parameters.Add(Parameter' "true");                          }                          Parameter = Parts[1];                          break;                      // Parameter with enclosed value                      case 3:                          // The last parameter is still waiting. With no value' set it to true.                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter)) Parameters.Add(Parameter' "true");                          }                          Parameter = Parts[1];                          // Remove possible enclosing characters ("'')                          if (!Parameters.ContainsKey(Parameter))                          {                              Parts[2] = Remover.Replace(Parts[2]' "$1");                              Parameters.Add(Parameter' Parts[2]);                          }                          Parameter = null;                          break;                  }
Magic Number,CommandLine.Utility,Arguments,D:\research\architectureSmells\repos\hugorodgerbrown_HipChat.net\hipchat.notification\Arguments.cs,Arguments,The following statement contains a magic number: switch (Parts.Length)                  {                      // Found a value (for the last parameter found (space separator))                      case 1:                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter))                              {                                  Parts[0] = Remover.Replace(Parts[0]' "$1");                                  Parameters.Add(Parameter' Parts[0]);                              }                              Parameter = null;                          }                          // else Error: no parameter waiting for a value (skipped)                          break;                      // Found just a parameter                      case 2:                          // The last parameter is still waiting. With no value' set it to true.                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter)) Parameters.Add(Parameter' "true");                          }                          Parameter = Parts[1];                          break;                      // Parameter with enclosed value                      case 3:                          // The last parameter is still waiting. With no value' set it to true.                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter)) Parameters.Add(Parameter' "true");                          }                          Parameter = Parts[1];                          // Remove possible enclosing characters ("'')                          if (!Parameters.ContainsKey(Parameter))                          {                              Parts[2] = Remover.Replace(Parts[2]' "$1");                              Parameters.Add(Parameter' Parts[2]);                          }                          Parameter = null;                          break;                  }
Missing Default,CommandLine.Utility,Arguments,D:\research\architectureSmells\repos\hugorodgerbrown_HipChat.net\hipchat.notification\Arguments.cs,Arguments,The following switch statement is missing a default case: switch (Parts.Length)                  {                      // Found a value (for the last parameter found (space separator))                      case 1:                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter))                              {                                  Parts[0] = Remover.Replace(Parts[0]' "$1");                                  Parameters.Add(Parameter' Parts[0]);                              }                              Parameter = null;                          }                          // else Error: no parameter waiting for a value (skipped)                          break;                      // Found just a parameter                      case 2:                          // The last parameter is still waiting. With no value' set it to true.                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter)) Parameters.Add(Parameter' "true");                          }                          Parameter = Parts[1];                          break;                      // Parameter with enclosed value                      case 3:                          // The last parameter is still waiting. With no value' set it to true.                          if (Parameter != null)                          {                              if (!Parameters.ContainsKey(Parameter)) Parameters.Add(Parameter' "true");                          }                          Parameter = Parts[1];                          // Remove possible enclosing characters ("'')                          if (!Parameters.ContainsKey(Parameter))                          {                              Parts[2] = Remover.Replace(Parts[2]' "$1");                              Parameters.Add(Parameter' Parts[2]);                          }                          Parameter = null;                          break;                  }
