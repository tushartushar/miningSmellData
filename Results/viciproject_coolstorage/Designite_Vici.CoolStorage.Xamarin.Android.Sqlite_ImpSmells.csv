Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Vici.CoolStorage.Xamarin.Android.Sqlite,CSDataProviderSqlite,D:\research\architectureSmells\repos\viciproject_coolstorage\drivers\xamarin-android-sqlite\Library\CSDataProviderSQLite.cs,BuildSelectSQL,Cyclomatic complexity of the method is 10
Complex Method,Vici.CoolStorage.Xamarin.Android.Sqlite,CSSqliteConnection,D:\research\architectureSmells\repos\viciproject_coolstorage\drivers\xamarin-android-sqlite\Library\CSDataProviderSQLite.cs,GetSchema,Cyclomatic complexity of the method is 14
Long Parameter List,Vici.CoolStorage.Xamarin.Android.Sqlite,CSDataProviderSqlite,D:\research\architectureSmells\repos\viciproject_coolstorage\drivers\xamarin-android-sqlite\Library\CSDataProviderSQLite.cs,BuildSelectSQL,The method has 11 parameters. Parameters: tableName' tableAlias' columnList' columnAliasList' joinList' whereClause' orderBy' startRow' maxRows' quoteColumns' unOrdered
Long Parameter List,Vici.CoolStorage.Xamarin.Android.Sqlite,CSDataProviderSqlite,D:\research\architectureSmells\repos\viciproject_coolstorage\drivers\xamarin-android-sqlite\Library\CSDataProviderSQLite.cs,BuildInsertSQL,The method has 6 parameters. Parameters: tableName' columnList' valueList' primaryKeys' sequences' identityField
Long Statement,Vici.CoolStorage.Xamarin.Android.Sqlite,CS,D:\research\architectureSmells\repos\viciproject_coolstorage\drivers\xamarin-android-sqlite\Library\CS.cs,SetDB,The length of the statement  "            CSConfig.SetDB(new CSDataProviderSqlite("Data Source=" + dbName + ";Pooling=" + usePooling)' CSConfig.DEFAULT_CONTEXTNAME); " is 123.
Long Statement,Vici.CoolStorage.Xamarin.Android.Sqlite,CSDataProviderSqlite,D:\research\architectureSmells\repos\viciproject_coolstorage\drivers\xamarin-android-sqlite\Library\CSDataProviderSQLite.cs,BuildInsertSQL,The length of the statement  "                sql += String.Format(";SELECT {0} from {1} where {2} = last_insert_rowid()"' String.Join("'"' QuoteFieldList(primaryKeys))' QuoteTable(tableName)' identityField); " is 162.
Long Statement,Vici.CoolStorage.Xamarin.Android.Sqlite,CSSqliteConnection,D:\research\architectureSmells\repos\viciproject_coolstorage\drivers\xamarin-android-sqlite\Library\CSDataProviderSQLite.cs,GetSchema,The length of the statement  "					var regex = new Regex(@"[\(']\s*((?<column>[A-Za-z][A-Za-z0-9]*)|""(?<column>[^""]+)"")\s+.*?AUTOINCREMENT"'RegexOptions.IgnoreCase); " is 133.
Magic Number,Vici.CoolStorage.Xamarin.Android.Sqlite,CSSqliteConnection,D:\research\architectureSmells\repos\viciproject_coolstorage\drivers\xamarin-android-sqlite\Library\CSDataProviderSQLite.cs,GetSchema,The following statement contains a magic number: row["ColumnSize"] = 1000;
Missing Default,Vici.CoolStorage.Xamarin.Android.Sqlite,CSSqliteConnection,D:\research\architectureSmells\repos\viciproject_coolstorage\drivers\xamarin-android-sqlite\Library\CSDataProviderSQLite.cs,GetSchema,The following switch statement is missing a default case: switch (dbType)   							{  								case "TEXT": dataType = typeof(string); break;  								case "VARCHAR": dataType = typeof(string); break;  								case "INTEGER": dataType = typeof(int); break;  								case "BOOL": dataType = typeof(bool); break;  								case "DOUBLE": dataType = typeof(double); break;  								case "FLOAT": dataType = typeof(double); break;  								case "REAL": dataType = typeof(double); break;  								case "CHAR": dataType = typeof(string); break;  								case "BLOB": dataType = typeof(byte[]); break;  								case "NUMERIC": dataType = typeof(decimal); break;  								case "DATETIME": dataType = typeof(DateTime); break;  							}
