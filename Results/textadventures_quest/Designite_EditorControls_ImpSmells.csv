Implementation smell,Namespace,Class,File,Method,Description
Long Method,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The method has 108 lines of code.
Long Method,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The method has 258 lines of code.
Long Method,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The method has 349 lines of code.
Long Method,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The method has 135 lines of code.
Long Method,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The method has 104 lines of code.
Complex Method,TextAdventures.Quest.EditorControls,IfEditor,C:\repos\textadventures_quest\EditorControls\IfEditor.xaml.cs,Populate,Cyclomatic complexity of the method is 9
Complex Method,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,m_scripts_Updated,Cyclomatic complexity of the method is 9
Complex Method,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,AddScriptControls,Cyclomatic complexity of the method is 8
Complex Method,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,UpdateControlVisibility,Cyclomatic complexity of the method is 15
Long Parameter List,TextAdventures.Quest.EditorControls,PopupEditors,C:\repos\textadventures_quest\EditorControls\PopupEditors.cs,EditStringWithDropdown,The method has 7 parameters. Parameters: prompt' defaultResult' listCaption' listItems' defaultListSelection' autoCompleteList' allowEmptyString
Long Parameter List,TextAdventures.Quest.EditorControls,PopupEditors,C:\repos\textadventures_quest\EditorControls\PopupEditors.cs,EditScript,The method has 6 parameters. Parameters: controller' scripts' attribute' element' isReadOnly' dirtyAction
Long Parameter List,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,AddNode,The method has 6 parameters. Parameters: key' text' parentKey' foreColor' backColor' position
Long Identifier,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,,The length of the parameter m_lastRowIsScrollableAndExpands is 31.
Long Identifier,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,,The length of the parameter m_includeRootLevelInSearchResults is 33.
Long Identifier,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,,The length of the parameter m_currentHighlightOldForeColor is 30.
Long Identifier,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,,The length of the parameter m_currentHighlightOldBackColor is 30.
Long Identifier,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,,The length of the parameter AddJavascriptToolStripMenuItem is 30.
Long Identifier,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,,The length of the parameter AddObjectTypeToolStripMenuItem is 30.
Long Identifier,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,,The length of the parameter AddDynamicTemplateToolStripMenuItem is 35.
Long Identifier,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,,The length of the parameter AddImpliedTypeToolStripMenuItem is 31.
Long Identifier,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,,The length of the parameter AddWalkthroughToolStripMenuItem is 31.
Long Identifier,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,,The length of the parameter addTurnScriptToolStripMenuItem is 30.
Long Identifier,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,,The length of the parameter m_extraToolStripItemsEnabledOnlyWithSelection is 45.
Long Statement,TextAdventures.Quest.EditorControls,AttributesControl,C:\repos\textadventures_quest\EditorControls\AttributesControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EditorControls;component/attributescontrol.xaml"' System.UriKind.Relative); " is 121.
Long Statement,TextAdventures.Quest.EditorControls,CompassDirectionControl,C:\repos\textadventures_quest\EditorControls\CompassDirectionControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EditorControls;component/compassdirectioncontrol.xaml"' System.UriKind.Relative); " is 127.
Long Statement,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,UpdateControlVisibility,The length of the statement  "                direction.Text = m_mode == CompassEditorMode.NoSelection ? "No exit selected" : "Selected exit is not a compass direction"; " is 123.
Long Statement,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EditorControls;component/compasseditorcontrol.xaml"' System.UriKind.Relative); " is 124.
Long Statement,TextAdventures.Quest.EditorControls,DictionaryScriptControl,C:\repos\textadventures_quest\EditorControls\DictionaryScriptControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EditorControls;component/dictionaryscriptcontrol.xaml"' System.UriKind.Relative); " is 127.
Long Statement,TextAdventures.Quest.EditorControls,DictionaryStringControl,C:\repos\textadventures_quest\EditorControls\DictionaryStringControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EditorControls;component/dictionarystringcontrol.xaml"' System.UriKind.Relative); " is 127.
Long Statement,TextAdventures.Quest.EditorControls,DropDownControl,C:\repos\textadventures_quest\EditorControls\DropDownControl.xaml.cs,Connect,The length of the statement  "            this.lstDropdown.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstDropdown_SelectionChanged); " is 129.
Long Statement,TextAdventures.Quest.EditorControls,DropDownControl,C:\repos\textadventures_quest\EditorControls\DropDownControl.xaml.cs,Connect,The length of the statement  "            this.lstDropdown.AddHandler(System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent' new System.Windows.Controls.TextChangedEventHandler(this.lstDropdown_TextChanged)); " is 176.
Long Statement,TextAdventures.Quest.EditorControls,DropDownFilterControl,C:\repos\textadventures_quest\EditorControls\DropDownFilterControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EditorControls;component/dropdownfiltercontrol.xaml"' System.UriKind.Relative); " is 125.
Long Statement,TextAdventures.Quest.EditorControls,DropDownFilterControl,C:\repos\textadventures_quest\EditorControls\DropDownFilterControl.xaml.cs,Connect,The length of the statement  "            this.lstDropdown.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstDropdown_SelectionChanged); " is 129.
Long Statement,TextAdventures.Quest.EditorControls,DropDownObjectsControl,C:\repos\textadventures_quest\EditorControls\DropDownObjectsControl.xaml.cs,GetValidNames,The length of the statement  "            return (m_source == null) ? m_controller.GetObjectNames(m_objectType ?? "object") : m_controller.GetElementNames(m_source); " is 123.
Long Statement,TextAdventures.Quest.EditorControls,DropDownObjectsControl,C:\repos\textadventures_quest\EditorControls\DropDownObjectsControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EditorControls;component/dropdownobjectscontrol.xaml"' System.UriKind.Relative); " is 126.
Long Statement,TextAdventures.Quest.EditorControls,DropDownObjectsControl,C:\repos\textadventures_quest\EditorControls\DropDownObjectsControl.xaml.cs,Connect,The length of the statement  "            this.lstDropdown.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstDropdown_SelectionChanged); " is 129.
Long Statement,TextAdventures.Quest.EditorControls,DropDownTypesControl,C:\repos\textadventures_quest\EditorControls\DropDownTypesControl.xaml.cs,Save,The length of the statement  "            m_helper.Controller.StartTransaction(String.Format("Change type from '{0}' to '{1}'"' m_dropDownValues[m_currentType]' m_dropDownValues[selectedType])); " is 152.
Long Statement,TextAdventures.Quest.EditorControls,DropDownTypesControl,C:\repos\textadventures_quest\EditorControls\DropDownTypesControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EditorControls;component/dropdowntypescontrol.xaml"' System.UriKind.Relative); " is 124.
Long Statement,TextAdventures.Quest.EditorControls,DropDownTypesControl,C:\repos\textadventures_quest\EditorControls\DropDownTypesControl.xaml.cs,Connect,The length of the statement  "            this.lstTypes.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstTypes_SelectionChanged); " is 123.
Long Statement,TextAdventures.Quest.EditorControls,ElementsListControl,C:\repos\textadventures_quest\EditorControls\ElementsListControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EditorControls;component/elementslistcontrol.xaml"' System.UriKind.Relative); " is 123.
Long Statement,TextAdventures.Quest.EditorControls,ExitsControl,C:\repos\textadventures_quest\EditorControls\ExitsControl.xaml.cs,CompassEditor_CreateExit,The length of the statement  "                newExit = m_controller.CreateNewExit(m_data.Name' e.To' e.Direction' GetInverseDirection(e.Direction)' GetDirectionType(e.Direction)' GetDirectionType(GetInverseDirection(e.Direction))); " is 186.
Long Statement,TextAdventures.Quest.EditorControls,ExitsControl,C:\repos\textadventures_quest\EditorControls\ExitsControl.xaml.cs,Connect,The length of the statement  "            this.listView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listView_SelectionChanged); " is 123.
Long Statement,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,Initialise,The length of the statement  "                if (m_helper.ControlDefinition.GetString("simpleeditor") != "boolean" && m_helper.ControlDefinition.GetString("simple") == null) " is 128.
Long Statement,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,SimpleEditor_Dirty,The length of the statement  "                // Don't want to save as that will cause repopulation' which is annoying if we're typing something in to a freetext dropdown " is 124.
Long Statement,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,UpdateListVisibility,The length of the statement  "            Binding heightBinding = new Binding(string.Format("ElementName={0}' Path=ActualHeight"' UseExpressionTemplates ? "lstTemplate" : "lstType")); " is 141.
Long Statement,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,PopulateTemplate,The length of the statement  "            IEditorDefinition definition = m_helper.Controller.GetExpressionEditorDefinition(expression' ExpressionTypeTemplateFilter); " is 123.
Long Statement,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EditorControls;component/expressioncontrol.xaml"' System.UriKind.Relative); " is 121.
Long Statement,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,Connect,The length of the statement  "            this.lstType.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstType_SelectionChanged); " is 121.
Long Statement,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,Connect,The length of the statement  "            this.lstTemplate.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstTemplate_SelectionChanged); " is 129.
Long Statement,TextAdventures.Quest.EditorControls,ExpressionTemplate,C:\repos\textadventures_quest\EditorControls\ExpressionTemplate.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EditorControls;component/expressiontemplate.xaml"' System.UriKind.Relative); " is 122.
Long Statement,TextAdventures.Quest.EditorControls,FileControl,C:\repos\textadventures_quest\EditorControls\FileControl.xaml.cs,m_helper_Initialise,The length of the statement  "            fileDropDown.FileFilter = string.Format("{0} ({1})|{1}"' m_helper.ControlDefinition.GetString("filefiltername")' source); " is 121.
Long Statement,TextAdventures.Quest.EditorControls,FileDropDown,C:\repos\textadventures_quest\EditorControls\FileDropDown.xaml.cs,Connect,The length of the statement  "            this.lstFiles.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstFiles_SelectionChanged); " is 123.
Long Statement,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The length of the statement  "            this.lstInputAutoComplete.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 153.
Long Statement,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The length of the statement  "            this.txtInput.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 141.
Long Statement,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The length of the statement  "            this.cmdCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 148.
Long Statement,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The length of the statement  "            this.cmdOK.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 144.
Long Statement,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The length of the statement  "            this.lblPrompt.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 142.
Long Statement,TextAdventures.Quest.EditorControls,MultiControl,C:\repos\textadventures_quest\EditorControls\MultiControl.xaml.cs,UserSelectedNewType,The length of the statement  "            m_controller.StartTransaction(string.Format("Change type of '{0}' {1} to '{2}'"' m_data.Name' m_definition.Attribute' type.TypeDescription)); " is 141.
Long Statement,TextAdventures.Quest.EditorControls,MultiControl,C:\repos\textadventures_quest\EditorControls\MultiControl.xaml.cs,Connect,The length of the statement  "            this.lstTypes.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstTypes_SelectionChanged); " is 123.
Long Statement,TextAdventures.Quest.EditorControls,PatternControl,C:\repos\textadventures_quest\EditorControls\PatternControl.xaml.cs,SetValue,The length of the statement  "            m_value = m_helper.Controller.CreateNewEditableCommandPattern(m_data.Name' m_helper.ControlDefinition.Attribute' newValue' false); " is 130.
Long Statement,TextAdventures.Quest.EditorControls,PopupEditors,C:\repos\textadventures_quest\EditorControls\PopupEditors.cs,EditScript,The length of the statement  "            System.EventHandler<DataModifiedEventArgs> dirtyEventHandler = (object sender' DataModifiedEventArgs e) => dirtyAction.Invoke(); " is 128.
Long Statement,TextAdventures.Quest.EditorControls,RichTextControl,C:\repos\textadventures_quest\EditorControls\RichTextControl.xaml.cs,Initialise,The length of the statement  "                var commandDataList = m_helper.Controller.GetElementDataAttribute("_RichTextControl_TextProcessorCommands"' "data") as IEnumerable; " is 131.
Long Statement,TextAdventures.Quest.EditorControls,RichTextControl,C:\repos\textadventures_quest\EditorControls\RichTextControl.xaml.cs,InsertPage,The length of the statement  "            var result = PopupEditors.EditStringWithDropdown("Link text"' string.Empty' "Add link to"' pages' pages.First()' allowEmptyString: true); " is 137.
Long Statement,TextAdventures.Quest.EditorControls,ScriptAdderPopOut,C:\repos\textadventures_quest\EditorControls\ScriptAdderPopOut.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EditorControls;component/scriptadderpopout.xaml"' System.UriKind.Relative); " is 121.
Long Statement,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,AddNewScriptCommand,The length of the statement  "                    m_scripts = m_controller.CreateNewEditableScriptsChild(m_parentScript' m_helper.ControlDefinition.Attribute' script' true); " is 123.
Long Statement,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,AddNewScriptCommand,The length of the statement  "                    m_scripts = m_controller.CreateNewEditableScripts(ElementName' m_helper.ControlDefinition.Attribute' script' true' true); " is 121.
Long Statement,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,m_scripts_Updated,The length of the statement  "                        IElementEditorControl control = GetScriptParameterControl(e.UpdatedScript' e.UpdatedScriptEventArgs.Index.ToString(CultureInfo.InvariantCulture)); " is 146.
Long Statement,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,AddScriptControls,The length of the statement  "                    newControl.Padding = new Thickness(newControl.Padding.Left + 20' newControl.Padding.Top' newControl.Padding.Right' newControl.Padding.Bottom); " is 142.
Long Statement,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,AddScriptControls,The length of the statement  "                grid.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(1' isFullWidthControl ? GridUnitType.Star : GridUnitType.Auto) }); " is 139.
Long Statement,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,ctlToolbar_Paste,The length of the statement  "                        m_scripts = m_controller.CreateNewEditableScriptsChild(m_parentScript' m_helper.ControlDefinition.Attribute' null' false); " is 122.
Long Statement,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,PrepareForEditing,The length of the statement  "            m_controller.StartTransaction(string.Format("Copy {0} script to {1}"' m_helper.ControlDefinition.Attribute' m_data.Name)); " is 122.
Long Statement,TextAdventures.Quest.EditorControls,ScriptEditorPopOut,C:\repos\textadventures_quest\EditorControls\ScriptEditorPopOut.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EditorControls;component/scripteditorpopout.xaml"' System.UriKind.Relative); " is 122.
Long Statement,TextAdventures.Quest.EditorControls,TextEditorControl,C:\repos\textadventures_quest\EditorControls\TextEditorControl.xaml.cs,FindOrReplace,The length of the statement  "             * Calling the FocusFindTB should be enough. And it is' except for the first time the find bar is shown. Then for some reason the focus stays in the text editor control. " is 168.
Long Statement,TextAdventures.Quest.EditorControls,TextEditorControl,C:\repos\textadventures_quest\EditorControls\TextEditorControl.xaml.cs,FindOrReplace,The length of the statement  "             * When debugging I found that this works even the first time' after the focus returns from the debugger to the app window. So' I simulated this with invoking the invalidate visual. " is 180.
Long Statement,TextAdventures.Quest.EditorControls,TextEditorControl,C:\repos\textadventures_quest\EditorControls\TextEditorControl.xaml.cs,FindOrReplace,The length of the statement  "             * This really should be enough for focus to work in a WPF app' but I get null for win here. I think it's related to this control being hosted in a WinForms app. " is 160.
Long Statement,TextAdventures.Quest.EditorControls,TextEditorControl,C:\repos\textadventures_quest\EditorControls\TextEditorControl.xaml.cs,FindOrReplace,The length of the statement  "             * I've also tried going down the call stack and calling focus on the different controls this control is hosted in' but it had no effect. " is 136.
Long Statement,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,Add,The length of the statement  "                PopupEditors.EditStringResult result = PopupEditors.EditString("Please enter a name for the new attribute"' string.Empty); " is 122.
Long Statement,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,cmdOnChange_Click,The length of the statement  "            Add("changed" + selectedAttribute' () => m_controller.CreateNewEditableScripts(m_data.Name' m_controlData.Attribute' null' false)); " is 131.
Long Statement,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(WFAttributesControl)); " is 139.
Long Statement,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The length of the statement  "            this.ToolStripLabel2.Font = new System.Drawing.Font("Segoe UI"' 9F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 147.
Long Statement,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The length of the statement  "            this.lblAttributesTitle.Font = new System.Drawing.Font("Segoe UI"' 9F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 150.
Long Statement,TextAdventures.Quest.EditorControls,ControlDataHelper<T>,C:\repos\textadventures_quest\EditorControls\ControlDataHelper.cs,Save,The length of the statement  "                controller.StartTransaction(string.Format("Set {0} to '{1}'"' ControlDefinition.Caption' newValue == null ? "null" : newValue.ToString())); " is 139.
Long Statement,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,InitialiseEditorControls,The length of the statement  "            foreach (Type t in TextAdventures.Utility.Classes.GetImplementations(System.Reflection.Assembly.GetExecutingAssembly()' typeof(IElementEditorControl))) " is 151.
Long Statement,TextAdventures.Quest.EditorControls,ListStringControl,C:\repos\textadventures_quest\EditorControls\ListStringControl.xaml.cs,toolbar_AddClicked,The length of the statement  "                CurrentList = m_helper.Controller.CreateNewEditableList(m_data.Name' m_helper.ControlDefinition.Attribute' result.Result' true); " is 128.
Long Statement,TextAdventures.Quest.EditorControls,ListStringControl,C:\repos\textadventures_quest\EditorControls\ListStringControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EditorControls;component/liststringcontrol.xaml"' System.UriKind.Relative); " is 121.
Long Statement,TextAdventures.Quest.EditorControls,ListStringControl,C:\repos\textadventures_quest\EditorControls\ListStringControl.xaml.cs,Connect,The length of the statement  "            this.listBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listBox_SelectionChanged); " is 121.
Long Statement,TextAdventures.Quest.EditorControls,WFScriptDictionaryEditorManager,C:\repos\textadventures_quest\EditorControls\WFDictionaryEditorManager.cs,AddNewValue,The length of the statement  "            PopupEditors.EditScript(Controller' ref script' null' null' false' () => RaiseDirty(new DataModifiedEventArgs(null' List))); " is 124.
Long Statement,TextAdventures.Quest.EditorControls,WFScriptDictionaryEditorManager,C:\repos\textadventures_quest\EditorControls\WFDictionaryEditorManager.cs,EditValue,The length of the statement  "            PopupEditors.EditScript(Controller' ref script' null' null' false' () => RaiseDirty(new DataModifiedEventArgs(null' List))); " is 124.
Long Statement,TextAdventures.Quest.EditorControls,WFDictionaryEditorManager<T>,C:\repos\textadventures_quest\EditorControls\WFDictionaryEditorManager.cs,m_list_Added,The length of the statement  "            ctlListEditor.AddListItem(new KeyValuePair<string' string>(e.UpdatedItem.Key' GetDisplayString(e.UpdatedItem.Value))' e.Index); " is 127.
Long Statement,TextAdventures.Quest.EditorControls,WFDictionaryEditorManager<T>,C:\repos\textadventures_quest\EditorControls\WFDictionaryEditorManager.cs,GetAutoCompleteList,The length of the statement  "            IEnumerable<string> result = (listsource == "object") ? m_controller.GetObjectNames("object") : m_controller.GetElementNames(listsource); " is 137.
Long Statement,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(WFEditorTree)); " is 132.
Long Statement,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The length of the statement  "            this.txtSearch.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 142.
Long Statement,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The length of the statement  "            this.cmdClose.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 144.
Long Statement,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The length of the statement  "            this.cmdSearch.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 145.
Long Statement,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The length of the statement  "            this.AddObjectToolStripMenuItem.Image = ((System.Drawing.Image)(resources.GetObject("AddObjectToolStripMenuItem.Image"))); " is 122.
Long Statement,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,ResizeListEditor,The length of the statement  "                    lstList.Columns[1].Width = lstList.Width - SystemInformation.VerticalScrollBarWidth - lstList.Margin.Horizontal - lstList.Columns[0].Width; " is 139.
Long Statement,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,ExtraItemClick,The length of the statement  "            m_delegate.DoAction(item.Tag as string' lstList.SelectedItems.Count == 0 ? string.Empty : lstList.SelectedItems[0].Name); " is 121.
Long Statement,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(WFListEditor)); " is 132.
Long Statement,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(WFToolbar)); " is 129.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\textadventures_quest\EditorControls\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,ConvertToSimpleExpression,The conditional expression  "m_booleanEditor                  || m_simpleEditor is DropDownObjectsControl                  || m_simpleEditor is NumberControl                  || m_simpleEditor is NumberDoubleControl"  is complex.
Complex Conditional,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,ConvertFromSimpleExpression,The conditional expression  "m_booleanEditor                  || m_simpleEditor is DropDownObjectsControl                  || m_simpleEditor is NumberControl                  || m_simpleEditor is NumberDoubleControl"  is complex.
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,CompassControl,The following statement contains a magic number: m_directionControl[2] = dirNE;
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,CompassControl,The following statement contains a magic number: m_directionControl[3] = dirW;
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,CompassControl,The following statement contains a magic number: m_directionControl[4] = dirE;
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,CompassControl,The following statement contains a magic number: m_directionControl[5] = dirSW;
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,CompassControl,The following statement contains a magic number: m_directionControl[6] = dirS;
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,CompassControl,The following statement contains a magic number: m_directionControl[7] = dirSE;
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,CompassControl,The following statement contains a magic number: m_directionControl[8] = dirUp;
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,CompassControl,The following statement contains a magic number: m_directionControl[9] = dirDown;
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,CompassControl,The following statement contains a magic number: m_directionControl[10] = dirIn;
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,CompassControl,The following statement contains a magic number: m_directionControl[11] = dirOut;
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.dirNW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 2:              this.dirN = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 3:              this.dirNE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 4:              this.dirW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 5:              this.dirE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 6:              this.dirSW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 7:              this.dirS = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 8:              this.dirSE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 9:              this.dirUp = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 10:              this.dirDown = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 11:              this.dirIn = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 12:              this.dirOut = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 13:              this.compassEditor = ((TextAdventures.Quest.EditorControls.CompassEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.dirNW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 2:              this.dirN = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 3:              this.dirNE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 4:              this.dirW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 5:              this.dirE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 6:              this.dirSW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 7:              this.dirS = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 8:              this.dirSE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 9:              this.dirUp = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 10:              this.dirDown = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 11:              this.dirIn = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 12:              this.dirOut = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 13:              this.compassEditor = ((TextAdventures.Quest.EditorControls.CompassEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.dirNW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 2:              this.dirN = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 3:              this.dirNE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 4:              this.dirW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 5:              this.dirE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 6:              this.dirSW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 7:              this.dirS = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 8:              this.dirSE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 9:              this.dirUp = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 10:              this.dirDown = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 11:              this.dirIn = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 12:              this.dirOut = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 13:              this.compassEditor = ((TextAdventures.Quest.EditorControls.CompassEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.dirNW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 2:              this.dirN = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 3:              this.dirNE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 4:              this.dirW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 5:              this.dirE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 6:              this.dirSW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 7:              this.dirS = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 8:              this.dirSE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 9:              this.dirUp = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 10:              this.dirDown = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 11:              this.dirIn = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 12:              this.dirOut = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 13:              this.compassEditor = ((TextAdventures.Quest.EditorControls.CompassEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.dirNW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 2:              this.dirN = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 3:              this.dirNE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 4:              this.dirW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 5:              this.dirE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 6:              this.dirSW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 7:              this.dirS = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 8:              this.dirSE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 9:              this.dirUp = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 10:              this.dirDown = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 11:              this.dirIn = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 12:              this.dirOut = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 13:              this.compassEditor = ((TextAdventures.Quest.EditorControls.CompassEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.dirNW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 2:              this.dirN = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 3:              this.dirNE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 4:              this.dirW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 5:              this.dirE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 6:              this.dirSW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 7:              this.dirS = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 8:              this.dirSE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 9:              this.dirUp = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 10:              this.dirDown = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 11:              this.dirIn = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 12:              this.dirOut = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 13:              this.compassEditor = ((TextAdventures.Quest.EditorControls.CompassEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.dirNW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 2:              this.dirN = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 3:              this.dirNE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 4:              this.dirW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 5:              this.dirE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 6:              this.dirSW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 7:              this.dirS = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 8:              this.dirSE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 9:              this.dirUp = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 10:              this.dirDown = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 11:              this.dirIn = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 12:              this.dirOut = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 13:              this.compassEditor = ((TextAdventures.Quest.EditorControls.CompassEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.dirNW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 2:              this.dirN = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 3:              this.dirNE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 4:              this.dirW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 5:              this.dirE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 6:              this.dirSW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 7:              this.dirS = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 8:              this.dirSE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 9:              this.dirUp = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 10:              this.dirDown = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 11:              this.dirIn = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 12:              this.dirOut = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 13:              this.compassEditor = ((TextAdventures.Quest.EditorControls.CompassEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.dirNW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 2:              this.dirN = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 3:              this.dirNE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 4:              this.dirW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 5:              this.dirE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 6:              this.dirSW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 7:              this.dirS = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 8:              this.dirSE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 9:              this.dirUp = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 10:              this.dirDown = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 11:              this.dirIn = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 12:              this.dirOut = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 13:              this.compassEditor = ((TextAdventures.Quest.EditorControls.CompassEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.dirNW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 2:              this.dirN = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 3:              this.dirNE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 4:              this.dirW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 5:              this.dirE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 6:              this.dirSW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 7:              this.dirS = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 8:              this.dirSE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 9:              this.dirUp = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 10:              this.dirDown = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 11:              this.dirIn = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 12:              this.dirOut = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 13:              this.compassEditor = ((TextAdventures.Quest.EditorControls.CompassEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.dirNW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 2:              this.dirN = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 3:              this.dirNE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 4:              this.dirW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 5:              this.dirE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 6:              this.dirSW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 7:              this.dirS = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 8:              this.dirSE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 9:              this.dirUp = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 10:              this.dirDown = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 11:              this.dirIn = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 12:              this.dirOut = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 13:              this.compassEditor = ((TextAdventures.Quest.EditorControls.CompassEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.dirNW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 2:              this.dirN = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 3:              this.dirNE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 4:              this.dirW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 5:              this.dirE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 6:              this.dirSW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 7:              this.dirS = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 8:              this.dirSE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 9:              this.dirUp = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 10:              this.dirDown = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 11:              this.dirIn = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 12:              this.dirOut = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 13:              this.compassEditor = ((TextAdventures.Quest.EditorControls.CompassEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassDirectionControl,C:\repos\textadventures_quest\EditorControls\CompassDirectionControl.xaml.cs,OnDirectionChanged,The following statement contains a magic number: if ((dir >= 0 && dir <= 7))              {                  ctl.direction.FontFamily = new FontFamily("Wingdings");                  ctl.direction.Text = "ãáäßàåâæ".Substring(dir' 1);              }              else if (dir >= 8 && dir <= 9)              {                  ctl.direction.FontFamily = new FontFamily("Marlett");                  ctl.direction.Text = "tu".Substring(dir - 8' 1);              }              else if (dir == 10)              {                  ctl.direction.Text = "in";              }              else if (dir == 11)              {                  ctl.direction.Text = "out";              }              else              {                  throw new ArgumentOutOfRangeException();              }
Magic Number,TextAdventures.Quest.EditorControls,CompassDirectionControl,C:\repos\textadventures_quest\EditorControls\CompassDirectionControl.xaml.cs,OnDirectionChanged,The following statement contains a magic number: if ((dir >= 0 && dir <= 7))              {                  ctl.direction.FontFamily = new FontFamily("Wingdings");                  ctl.direction.Text = "ãáäßàåâæ".Substring(dir' 1);              }              else if (dir >= 8 && dir <= 9)              {                  ctl.direction.FontFamily = new FontFamily("Marlett");                  ctl.direction.Text = "tu".Substring(dir - 8' 1);              }              else if (dir == 10)              {                  ctl.direction.Text = "in";              }              else if (dir == 11)              {                  ctl.direction.Text = "out";              }              else              {                  throw new ArgumentOutOfRangeException();              }
Magic Number,TextAdventures.Quest.EditorControls,CompassDirectionControl,C:\repos\textadventures_quest\EditorControls\CompassDirectionControl.xaml.cs,OnDirectionChanged,The following statement contains a magic number: if ((dir >= 0 && dir <= 7))              {                  ctl.direction.FontFamily = new FontFamily("Wingdings");                  ctl.direction.Text = "ãáäßàåâæ".Substring(dir' 1);              }              else if (dir >= 8 && dir <= 9)              {                  ctl.direction.FontFamily = new FontFamily("Marlett");                  ctl.direction.Text = "tu".Substring(dir - 8' 1);              }              else if (dir == 10)              {                  ctl.direction.Text = "in";              }              else if (dir == 11)              {                  ctl.direction.Text = "out";              }              else              {                  throw new ArgumentOutOfRangeException();              }
Magic Number,TextAdventures.Quest.EditorControls,CompassDirectionControl,C:\repos\textadventures_quest\EditorControls\CompassDirectionControl.xaml.cs,OnDirectionChanged,The following statement contains a magic number: if ((dir >= 0 && dir <= 7))              {                  ctl.direction.FontFamily = new FontFamily("Wingdings");                  ctl.direction.Text = "ãáäßàåâæ".Substring(dir' 1);              }              else if (dir >= 8 && dir <= 9)              {                  ctl.direction.FontFamily = new FontFamily("Marlett");                  ctl.direction.Text = "tu".Substring(dir - 8' 1);              }              else if (dir == 10)              {                  ctl.direction.Text = "in";              }              else if (dir == 11)              {                  ctl.direction.Text = "out";              }              else              {                  throw new ArgumentOutOfRangeException();              }
Magic Number,TextAdventures.Quest.EditorControls,CompassDirectionControl,C:\repos\textadventures_quest\EditorControls\CompassDirectionControl.xaml.cs,OnDirectionChanged,The following statement contains a magic number: if ((dir >= 0 && dir <= 7))              {                  ctl.direction.FontFamily = new FontFamily("Wingdings");                  ctl.direction.Text = "ãáäßàåâæ".Substring(dir' 1);              }              else if (dir >= 8 && dir <= 9)              {                  ctl.direction.FontFamily = new FontFamily("Marlett");                  ctl.direction.Text = "tu".Substring(dir - 8' 1);              }              else if (dir == 10)              {                  ctl.direction.Text = "in";              }              else if (dir == 11)              {                  ctl.direction.Text = "out";              }              else              {                  throw new ArgumentOutOfRangeException();              }
Magic Number,TextAdventures.Quest.EditorControls,CompassDirectionControl,C:\repos\textadventures_quest\EditorControls\CompassDirectionControl.xaml.cs,OnDirectionChanged,The following statement contains a magic number: if ((dir >= 0 && dir <= 7))              {                  ctl.direction.FontFamily = new FontFamily("Wingdings");                  ctl.direction.Text = "ãáäßàåâæ".Substring(dir' 1);              }              else if (dir >= 8 && dir <= 9)              {                  ctl.direction.FontFamily = new FontFamily("Marlett");                  ctl.direction.Text = "tu".Substring(dir - 8' 1);              }              else if (dir == 10)              {                  ctl.direction.Text = "in";              }              else if (dir == 11)              {                  ctl.direction.Text = "out";              }              else              {                  throw new ArgumentOutOfRangeException();              }
Magic Number,TextAdventures.Quest.EditorControls,CompassDirectionControl,C:\repos\textadventures_quest\EditorControls\CompassDirectionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.border = ((System.Windows.Controls.Border)(target));              return;              case 2:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.noLinkDestination = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.destination = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.destinationLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 17 "..\..\CompassDirectionControl.xaml"              this.destinationLink.Click += new System.Windows.RoutedEventHandler(this.Hyperlink_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassDirectionControl,C:\repos\textadventures_quest\EditorControls\CompassDirectionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.border = ((System.Windows.Controls.Border)(target));              return;              case 2:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.noLinkDestination = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.destination = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.destinationLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 17 "..\..\CompassDirectionControl.xaml"              this.destinationLink.Click += new System.Windows.RoutedEventHandler(this.Hyperlink_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassDirectionControl,C:\repos\textadventures_quest\EditorControls\CompassDirectionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.border = ((System.Windows.Controls.Border)(target));              return;              case 2:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.noLinkDestination = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.destination = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.destinationLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 17 "..\..\CompassDirectionControl.xaml"              this.destinationLink.Click += new System.Windows.RoutedEventHandler(this.Hyperlink_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassDirectionControl,C:\repos\textadventures_quest\EditorControls\CompassDirectionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.border = ((System.Windows.Controls.Border)(target));              return;              case 2:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.noLinkDestination = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.destination = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.destinationLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 17 "..\..\CompassDirectionControl.xaml"              this.destinationLink.Click += new System.Windows.RoutedEventHandler(this.Hyperlink_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.createExitTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.toLabel = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.to = ((System.Windows.Controls.ComboBox)(target));                            #line 21 "..\..\CompassEditorControl.xaml"              this.to.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.to_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.toName = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.create = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\CompassEditorControl.xaml"              this.create.Click += new System.Windows.RoutedEventHandler(this.create_Click);                            #line default              #line hidden              return;              case 7:              this.edit = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\CompassEditorControl.xaml"              this.edit.Click += new System.Windows.RoutedEventHandler(this.edit_Click);                            #line default              #line hidden              return;              case 8:              this.chkCorresponding = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.corresponding = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.createCorresponding = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\CompassEditorControl.xaml"              this.createCorresponding.Click += new System.Windows.RoutedEventHandler(this.createCorresponding_Click);                            #line default              #line hidden              return;              case 11:              this.rectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.createLookOnlyTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.createLookOnlyDesc = ((System.Windows.Controls.TextBlock)(target));              return;              case 14:              this.createLookOnly = ((System.Windows.Controls.Button)(target));                            #line 36 "..\..\CompassEditorControl.xaml"              this.createLookOnly.Click += new System.Windows.RoutedEventHandler(this.createLookOnly_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.createExitTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.toLabel = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.to = ((System.Windows.Controls.ComboBox)(target));                            #line 21 "..\..\CompassEditorControl.xaml"              this.to.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.to_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.toName = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.create = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\CompassEditorControl.xaml"              this.create.Click += new System.Windows.RoutedEventHandler(this.create_Click);                            #line default              #line hidden              return;              case 7:              this.edit = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\CompassEditorControl.xaml"              this.edit.Click += new System.Windows.RoutedEventHandler(this.edit_Click);                            #line default              #line hidden              return;              case 8:              this.chkCorresponding = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.corresponding = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.createCorresponding = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\CompassEditorControl.xaml"              this.createCorresponding.Click += new System.Windows.RoutedEventHandler(this.createCorresponding_Click);                            #line default              #line hidden              return;              case 11:              this.rectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.createLookOnlyTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.createLookOnlyDesc = ((System.Windows.Controls.TextBlock)(target));              return;              case 14:              this.createLookOnly = ((System.Windows.Controls.Button)(target));                            #line 36 "..\..\CompassEditorControl.xaml"              this.createLookOnly.Click += new System.Windows.RoutedEventHandler(this.createLookOnly_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.createExitTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.toLabel = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.to = ((System.Windows.Controls.ComboBox)(target));                            #line 21 "..\..\CompassEditorControl.xaml"              this.to.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.to_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.toName = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.create = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\CompassEditorControl.xaml"              this.create.Click += new System.Windows.RoutedEventHandler(this.create_Click);                            #line default              #line hidden              return;              case 7:              this.edit = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\CompassEditorControl.xaml"              this.edit.Click += new System.Windows.RoutedEventHandler(this.edit_Click);                            #line default              #line hidden              return;              case 8:              this.chkCorresponding = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.corresponding = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.createCorresponding = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\CompassEditorControl.xaml"              this.createCorresponding.Click += new System.Windows.RoutedEventHandler(this.createCorresponding_Click);                            #line default              #line hidden              return;              case 11:              this.rectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.createLookOnlyTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.createLookOnlyDesc = ((System.Windows.Controls.TextBlock)(target));              return;              case 14:              this.createLookOnly = ((System.Windows.Controls.Button)(target));                            #line 36 "..\..\CompassEditorControl.xaml"              this.createLookOnly.Click += new System.Windows.RoutedEventHandler(this.createLookOnly_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.createExitTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.toLabel = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.to = ((System.Windows.Controls.ComboBox)(target));                            #line 21 "..\..\CompassEditorControl.xaml"              this.to.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.to_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.toName = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.create = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\CompassEditorControl.xaml"              this.create.Click += new System.Windows.RoutedEventHandler(this.create_Click);                            #line default              #line hidden              return;              case 7:              this.edit = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\CompassEditorControl.xaml"              this.edit.Click += new System.Windows.RoutedEventHandler(this.edit_Click);                            #line default              #line hidden              return;              case 8:              this.chkCorresponding = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.corresponding = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.createCorresponding = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\CompassEditorControl.xaml"              this.createCorresponding.Click += new System.Windows.RoutedEventHandler(this.createCorresponding_Click);                            #line default              #line hidden              return;              case 11:              this.rectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.createLookOnlyTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.createLookOnlyDesc = ((System.Windows.Controls.TextBlock)(target));              return;              case 14:              this.createLookOnly = ((System.Windows.Controls.Button)(target));                            #line 36 "..\..\CompassEditorControl.xaml"              this.createLookOnly.Click += new System.Windows.RoutedEventHandler(this.createLookOnly_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.createExitTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.toLabel = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.to = ((System.Windows.Controls.ComboBox)(target));                            #line 21 "..\..\CompassEditorControl.xaml"              this.to.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.to_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.toName = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.create = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\CompassEditorControl.xaml"              this.create.Click += new System.Windows.RoutedEventHandler(this.create_Click);                            #line default              #line hidden              return;              case 7:              this.edit = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\CompassEditorControl.xaml"              this.edit.Click += new System.Windows.RoutedEventHandler(this.edit_Click);                            #line default              #line hidden              return;              case 8:              this.chkCorresponding = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.corresponding = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.createCorresponding = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\CompassEditorControl.xaml"              this.createCorresponding.Click += new System.Windows.RoutedEventHandler(this.createCorresponding_Click);                            #line default              #line hidden              return;              case 11:              this.rectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.createLookOnlyTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.createLookOnlyDesc = ((System.Windows.Controls.TextBlock)(target));              return;              case 14:              this.createLookOnly = ((System.Windows.Controls.Button)(target));                            #line 36 "..\..\CompassEditorControl.xaml"              this.createLookOnly.Click += new System.Windows.RoutedEventHandler(this.createLookOnly_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.createExitTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.toLabel = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.to = ((System.Windows.Controls.ComboBox)(target));                            #line 21 "..\..\CompassEditorControl.xaml"              this.to.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.to_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.toName = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.create = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\CompassEditorControl.xaml"              this.create.Click += new System.Windows.RoutedEventHandler(this.create_Click);                            #line default              #line hidden              return;              case 7:              this.edit = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\CompassEditorControl.xaml"              this.edit.Click += new System.Windows.RoutedEventHandler(this.edit_Click);                            #line default              #line hidden              return;              case 8:              this.chkCorresponding = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.corresponding = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.createCorresponding = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\CompassEditorControl.xaml"              this.createCorresponding.Click += new System.Windows.RoutedEventHandler(this.createCorresponding_Click);                            #line default              #line hidden              return;              case 11:              this.rectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.createLookOnlyTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.createLookOnlyDesc = ((System.Windows.Controls.TextBlock)(target));              return;              case 14:              this.createLookOnly = ((System.Windows.Controls.Button)(target));                            #line 36 "..\..\CompassEditorControl.xaml"              this.createLookOnly.Click += new System.Windows.RoutedEventHandler(this.createLookOnly_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.createExitTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.toLabel = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.to = ((System.Windows.Controls.ComboBox)(target));                            #line 21 "..\..\CompassEditorControl.xaml"              this.to.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.to_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.toName = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.create = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\CompassEditorControl.xaml"              this.create.Click += new System.Windows.RoutedEventHandler(this.create_Click);                            #line default              #line hidden              return;              case 7:              this.edit = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\CompassEditorControl.xaml"              this.edit.Click += new System.Windows.RoutedEventHandler(this.edit_Click);                            #line default              #line hidden              return;              case 8:              this.chkCorresponding = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.corresponding = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.createCorresponding = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\CompassEditorControl.xaml"              this.createCorresponding.Click += new System.Windows.RoutedEventHandler(this.createCorresponding_Click);                            #line default              #line hidden              return;              case 11:              this.rectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.createLookOnlyTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.createLookOnlyDesc = ((System.Windows.Controls.TextBlock)(target));              return;              case 14:              this.createLookOnly = ((System.Windows.Controls.Button)(target));                            #line 36 "..\..\CompassEditorControl.xaml"              this.createLookOnly.Click += new System.Windows.RoutedEventHandler(this.createLookOnly_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.createExitTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.toLabel = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.to = ((System.Windows.Controls.ComboBox)(target));                            #line 21 "..\..\CompassEditorControl.xaml"              this.to.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.to_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.toName = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.create = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\CompassEditorControl.xaml"              this.create.Click += new System.Windows.RoutedEventHandler(this.create_Click);                            #line default              #line hidden              return;              case 7:              this.edit = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\CompassEditorControl.xaml"              this.edit.Click += new System.Windows.RoutedEventHandler(this.edit_Click);                            #line default              #line hidden              return;              case 8:              this.chkCorresponding = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.corresponding = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.createCorresponding = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\CompassEditorControl.xaml"              this.createCorresponding.Click += new System.Windows.RoutedEventHandler(this.createCorresponding_Click);                            #line default              #line hidden              return;              case 11:              this.rectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.createLookOnlyTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.createLookOnlyDesc = ((System.Windows.Controls.TextBlock)(target));              return;              case 14:              this.createLookOnly = ((System.Windows.Controls.Button)(target));                            #line 36 "..\..\CompassEditorControl.xaml"              this.createLookOnly.Click += new System.Windows.RoutedEventHandler(this.createLookOnly_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.createExitTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.toLabel = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.to = ((System.Windows.Controls.ComboBox)(target));                            #line 21 "..\..\CompassEditorControl.xaml"              this.to.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.to_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.toName = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.create = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\CompassEditorControl.xaml"              this.create.Click += new System.Windows.RoutedEventHandler(this.create_Click);                            #line default              #line hidden              return;              case 7:              this.edit = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\CompassEditorControl.xaml"              this.edit.Click += new System.Windows.RoutedEventHandler(this.edit_Click);                            #line default              #line hidden              return;              case 8:              this.chkCorresponding = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.corresponding = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.createCorresponding = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\CompassEditorControl.xaml"              this.createCorresponding.Click += new System.Windows.RoutedEventHandler(this.createCorresponding_Click);                            #line default              #line hidden              return;              case 11:              this.rectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.createLookOnlyTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.createLookOnlyDesc = ((System.Windows.Controls.TextBlock)(target));              return;              case 14:              this.createLookOnly = ((System.Windows.Controls.Button)(target));                            #line 36 "..\..\CompassEditorControl.xaml"              this.createLookOnly.Click += new System.Windows.RoutedEventHandler(this.createLookOnly_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.createExitTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.toLabel = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.to = ((System.Windows.Controls.ComboBox)(target));                            #line 21 "..\..\CompassEditorControl.xaml"              this.to.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.to_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.toName = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.create = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\CompassEditorControl.xaml"              this.create.Click += new System.Windows.RoutedEventHandler(this.create_Click);                            #line default              #line hidden              return;              case 7:              this.edit = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\CompassEditorControl.xaml"              this.edit.Click += new System.Windows.RoutedEventHandler(this.edit_Click);                            #line default              #line hidden              return;              case 8:              this.chkCorresponding = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.corresponding = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.createCorresponding = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\CompassEditorControl.xaml"              this.createCorresponding.Click += new System.Windows.RoutedEventHandler(this.createCorresponding_Click);                            #line default              #line hidden              return;              case 11:              this.rectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.createLookOnlyTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.createLookOnlyDesc = ((System.Windows.Controls.TextBlock)(target));              return;              case 14:              this.createLookOnly = ((System.Windows.Controls.Button)(target));                            #line 36 "..\..\CompassEditorControl.xaml"              this.createLookOnly.Click += new System.Windows.RoutedEventHandler(this.createLookOnly_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.createExitTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.toLabel = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.to = ((System.Windows.Controls.ComboBox)(target));                            #line 21 "..\..\CompassEditorControl.xaml"              this.to.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.to_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.toName = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.create = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\CompassEditorControl.xaml"              this.create.Click += new System.Windows.RoutedEventHandler(this.create_Click);                            #line default              #line hidden              return;              case 7:              this.edit = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\CompassEditorControl.xaml"              this.edit.Click += new System.Windows.RoutedEventHandler(this.edit_Click);                            #line default              #line hidden              return;              case 8:              this.chkCorresponding = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.corresponding = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.createCorresponding = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\CompassEditorControl.xaml"              this.createCorresponding.Click += new System.Windows.RoutedEventHandler(this.createCorresponding_Click);                            #line default              #line hidden              return;              case 11:              this.rectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.createLookOnlyTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.createLookOnlyDesc = ((System.Windows.Controls.TextBlock)(target));              return;              case 14:              this.createLookOnly = ((System.Windows.Controls.Button)(target));                            #line 36 "..\..\CompassEditorControl.xaml"              this.createLookOnly.Click += new System.Windows.RoutedEventHandler(this.createLookOnly_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.createExitTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.toLabel = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.to = ((System.Windows.Controls.ComboBox)(target));                            #line 21 "..\..\CompassEditorControl.xaml"              this.to.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.to_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.toName = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.create = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\CompassEditorControl.xaml"              this.create.Click += new System.Windows.RoutedEventHandler(this.create_Click);                            #line default              #line hidden              return;              case 7:              this.edit = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\CompassEditorControl.xaml"              this.edit.Click += new System.Windows.RoutedEventHandler(this.edit_Click);                            #line default              #line hidden              return;              case 8:              this.chkCorresponding = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.corresponding = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.createCorresponding = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\CompassEditorControl.xaml"              this.createCorresponding.Click += new System.Windows.RoutedEventHandler(this.createCorresponding_Click);                            #line default              #line hidden              return;              case 11:              this.rectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.createLookOnlyTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.createLookOnlyDesc = ((System.Windows.Controls.TextBlock)(target));              return;              case 14:              this.createLookOnly = ((System.Windows.Controls.Button)(target));                            #line 36 "..\..\CompassEditorControl.xaml"              this.createLookOnly.Click += new System.Windows.RoutedEventHandler(this.createLookOnly_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.createExitTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.toLabel = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.to = ((System.Windows.Controls.ComboBox)(target));                            #line 21 "..\..\CompassEditorControl.xaml"              this.to.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.to_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.toName = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.create = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\CompassEditorControl.xaml"              this.create.Click += new System.Windows.RoutedEventHandler(this.create_Click);                            #line default              #line hidden              return;              case 7:              this.edit = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\CompassEditorControl.xaml"              this.edit.Click += new System.Windows.RoutedEventHandler(this.edit_Click);                            #line default              #line hidden              return;              case 8:              this.chkCorresponding = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.corresponding = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.createCorresponding = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\CompassEditorControl.xaml"              this.createCorresponding.Click += new System.Windows.RoutedEventHandler(this.createCorresponding_Click);                            #line default              #line hidden              return;              case 11:              this.rectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.createLookOnlyTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.createLookOnlyDesc = ((System.Windows.Controls.TextBlock)(target));              return;              case 14:              this.createLookOnly = ((System.Windows.Controls.Button)(target));                            #line 36 "..\..\CompassEditorControl.xaml"              this.createLookOnly.Click += new System.Windows.RoutedEventHandler(this.createLookOnly_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ExitsControl,C:\repos\textadventures_quest\EditorControls\ExitsControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.compassControl = ((TextAdventures.Quest.EditorControls.CompassControl)(target));              return;              case 2:              this.toolbarHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              case 3:              this.listView = ((System.Windows.Controls.ListView)(target));                            #line 28 "..\..\ExitsControl.xaml"              this.listView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listView_SelectionChanged);                            #line default              #line hidden                            #line 28 "..\..\ExitsControl.xaml"              this.listView.MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.listView_MouseDoubleClick);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ExitsControl,C:\repos\textadventures_quest\EditorControls\ExitsControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.compassControl = ((TextAdventures.Quest.EditorControls.CompassControl)(target));              return;              case 2:              this.toolbarHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              case 3:              this.listView = ((System.Windows.Controls.ListView)(target));                            #line 28 "..\..\ExitsControl.xaml"              this.listView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listView_SelectionChanged);                            #line default              #line hidden                            #line 28 "..\..\ExitsControl.xaml"              this.listView.MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.listView_MouseDoubleClick);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,InitialiseSimpleEditor,The following statement contains a magic number: switch (simpleEditor)              {                  case "textbox":                      TextBox newTextBox = new TextBox();                      newTextBox.MinHeight = 20;                      newTextBox.VerticalContentAlignment = System.Windows.VerticalAlignment.Center;                      newTextBox.TextChanged += SimpleEditor_TextChanged;                      newTextBox.LostFocus += SimpleEditor_LostFocus;                      if (m_helper.ControlDefinition.GetBool("multiline"))                      {                          newTextBox.VerticalScrollBarVisibility = ScrollBarVisibility.Auto;                          newTextBox.TextWrapping = TextWrapping.Wrap;                          newTextBox.AcceptsReturn = true;                      }                      m_simpleEditor = newTextBox;                      break;                  case "file":                      FileControl newFileControl = new FileControl();                      newFileControl.Helper.DoInitialise(m_helper.Controller' m_helper.ControlDefinition);                      newFileControl.RefreshFileList();                      newFileControl.Helper.Dirty += SimpleEditor_Dirty;                      newFileControl.SelectionChanged += FileControl_SelectionChanged;                      m_simpleEditor = newFileControl;                      break;                  case "boolean":                      m_simpleEditor = null;                      lstType.Items.Add("yes");                      lstType.Items.Add("no");                      m_booleanEditor = true;                      break;                  case "objects":                      DropDownObjectsControl newDropDownObjects = new DropDownObjectsControl();                      newDropDownObjects.Helper.DoInitialise(m_helper.Controller' m_helper.ControlDefinition);                      newDropDownObjects.Helper.Dirty += SimpleEditor_Dirty;                      newDropDownObjects.lstDropdown.SelectionChanged += DropDownObjects_SelectionChanged;                      m_simpleEditor = newDropDownObjects;                      break;                  case "number":                      NumberControl newNumber = new NumberControl();                      newNumber.Helper.DoInitialise(m_helper.Controller' m_helper.ControlDefinition);                      newNumber.Helper.Dirty += SimpleEditor_Dirty;                      newNumber.LostFocus += SimpleEditor_LostFocus;                      m_simpleEditor = newNumber;                      break;                  case "numberdouble":                      NumberDoubleControl newNumberDouble = new NumberDoubleControl();                      newNumberDouble.Helper.DoInitialise(m_helper.Controller' m_helper.ControlDefinition);                      newNumberDouble.Helper.Dirty += SimpleEditor_Dirty;                      newNumberDouble.LostFocus += SimpleEditor_LostFocus;                      m_simpleEditor = newNumberDouble;                      break;                  case "dropdown":                      DropDownControl newDropDown = new DropDownControl();                      newDropDown.Helper.DoInitialise(m_helper.Controller' m_helper.ControlDefinition);                      newDropDown.Helper.Dirty += SimpleEditor_Dirty;                      newDropDown.lstDropdown.SelectionChanged += DropDown_SelectionChanged;                      newDropDown.LostFocus += SimpleEditor_LostFocus;                      m_simpleEditor = newDropDown;                      break;                  default:                      throw new InvalidOperationException("Invalid control type for expression");              }
Magic Number,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,InitialiseSimpleEditor,The following statement contains a magic number: if (m_simpleEditor != null)              {                  m_simpleEditor.MinWidth = 40;                  Grid.SetRow(m_simpleEditor' Grid.GetRow(txtExpression));                  Grid.SetColumn(m_simpleEditor' Grid.GetColumn(txtExpression));                  grid.Children.Add(m_simpleEditor);              }
Magic Number,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lstType = ((System.Windows.Controls.ComboBox)(target));                            #line 26 "..\..\ExpressionControl.xaml"              this.lstType.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstType_SelectionChanged);                            #line default              #line hidden              return;              case 3:              this.lstTemplate = ((System.Windows.Controls.ComboBox)(target));                            #line 27 "..\..\ExpressionControl.xaml"              this.lstTemplate.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstTemplate_SelectionChanged);                            #line default              #line hidden              return;              case 4:              this.txtExpression = ((System.Windows.Controls.TextBox)(target));                            #line 28 "..\..\ExpressionControl.xaml"              this.txtExpression.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.txtExpression_TextChanged);                            #line default              #line hidden                            #line 28 "..\..\ExpressionControl.xaml"              this.txtExpression.LostFocus += new System.Windows.RoutedEventHandler(this.txtExpression_LostFocus);                            #line default              #line hidden              return;              case 5:              this.cmdInsert = ((System.Windows.Controls.Button)(target));                            #line 29 "..\..\ExpressionControl.xaml"              this.cmdInsert.Click += new System.Windows.RoutedEventHandler(this.cmdInsert_Click);                            #line default              #line hidden              return;              case 6:              this.mnuInsertMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lstType = ((System.Windows.Controls.ComboBox)(target));                            #line 26 "..\..\ExpressionControl.xaml"              this.lstType.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstType_SelectionChanged);                            #line default              #line hidden              return;              case 3:              this.lstTemplate = ((System.Windows.Controls.ComboBox)(target));                            #line 27 "..\..\ExpressionControl.xaml"              this.lstTemplate.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstTemplate_SelectionChanged);                            #line default              #line hidden              return;              case 4:              this.txtExpression = ((System.Windows.Controls.TextBox)(target));                            #line 28 "..\..\ExpressionControl.xaml"              this.txtExpression.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.txtExpression_TextChanged);                            #line default              #line hidden                            #line 28 "..\..\ExpressionControl.xaml"              this.txtExpression.LostFocus += new System.Windows.RoutedEventHandler(this.txtExpression_LostFocus);                            #line default              #line hidden              return;              case 5:              this.cmdInsert = ((System.Windows.Controls.Button)(target));                            #line 29 "..\..\ExpressionControl.xaml"              this.cmdInsert.Click += new System.Windows.RoutedEventHandler(this.cmdInsert_Click);                            #line default              #line hidden              return;              case 6:              this.mnuInsertMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lstType = ((System.Windows.Controls.ComboBox)(target));                            #line 26 "..\..\ExpressionControl.xaml"              this.lstType.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstType_SelectionChanged);                            #line default              #line hidden              return;              case 3:              this.lstTemplate = ((System.Windows.Controls.ComboBox)(target));                            #line 27 "..\..\ExpressionControl.xaml"              this.lstTemplate.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstTemplate_SelectionChanged);                            #line default              #line hidden              return;              case 4:              this.txtExpression = ((System.Windows.Controls.TextBox)(target));                            #line 28 "..\..\ExpressionControl.xaml"              this.txtExpression.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.txtExpression_TextChanged);                            #line default              #line hidden                            #line 28 "..\..\ExpressionControl.xaml"              this.txtExpression.LostFocus += new System.Windows.RoutedEventHandler(this.txtExpression_LostFocus);                            #line default              #line hidden              return;              case 5:              this.cmdInsert = ((System.Windows.Controls.Button)(target));                            #line 29 "..\..\ExpressionControl.xaml"              this.cmdInsert.Click += new System.Windows.RoutedEventHandler(this.cmdInsert_Click);                            #line default              #line hidden              return;              case 6:              this.mnuInsertMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lstType = ((System.Windows.Controls.ComboBox)(target));                            #line 26 "..\..\ExpressionControl.xaml"              this.lstType.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstType_SelectionChanged);                            #line default              #line hidden              return;              case 3:              this.lstTemplate = ((System.Windows.Controls.ComboBox)(target));                            #line 27 "..\..\ExpressionControl.xaml"              this.lstTemplate.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstTemplate_SelectionChanged);                            #line default              #line hidden              return;              case 4:              this.txtExpression = ((System.Windows.Controls.TextBox)(target));                            #line 28 "..\..\ExpressionControl.xaml"              this.txtExpression.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.txtExpression_TextChanged);                            #line default              #line hidden                            #line 28 "..\..\ExpressionControl.xaml"              this.txtExpression.LostFocus += new System.Windows.RoutedEventHandler(this.txtExpression_LostFocus);                            #line default              #line hidden              return;              case 5:              this.cmdInsert = ((System.Windows.Controls.Button)(target));                            #line 29 "..\..\ExpressionControl.xaml"              this.cmdInsert.Click += new System.Windows.RoutedEventHandler(this.cmdInsert_Click);                            #line default              #line hidden              return;              case 6:              this.mnuInsertMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lstType = ((System.Windows.Controls.ComboBox)(target));                            #line 26 "..\..\ExpressionControl.xaml"              this.lstType.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstType_SelectionChanged);                            #line default              #line hidden              return;              case 3:              this.lstTemplate = ((System.Windows.Controls.ComboBox)(target));                            #line 27 "..\..\ExpressionControl.xaml"              this.lstTemplate.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstTemplate_SelectionChanged);                            #line default              #line hidden              return;              case 4:              this.txtExpression = ((System.Windows.Controls.TextBox)(target));                            #line 28 "..\..\ExpressionControl.xaml"              this.txtExpression.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.txtExpression_TextChanged);                            #line default              #line hidden                            #line 28 "..\..\ExpressionControl.xaml"              this.txtExpression.LostFocus += new System.Windows.RoutedEventHandler(this.txtExpression_LostFocus);                            #line default              #line hidden              return;              case 5:              this.cmdInsert = ((System.Windows.Controls.Button)(target));                            #line 29 "..\..\ExpressionControl.xaml"              this.cmdInsert.Click += new System.Windows.RoutedEventHandler(this.cmdInsert_Click);                            #line default              #line hidden              return;              case 6:              this.mnuInsertMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ExpressionTemplate,C:\repos\textadventures_quest\EditorControls\ExpressionTemplate.xaml.cs,AddControl,The following statement contains a magic number: if (newControl is LabelControl)              {                  newControl.Padding = new Thickness(3' 3' 3' 0);              }              else              {                  newControl.Padding = new Thickness(3' 0' 3' 0);              }
Magic Number,TextAdventures.Quest.EditorControls,ExpressionTemplate,C:\repos\textadventures_quest\EditorControls\ExpressionTemplate.xaml.cs,AddControl,The following statement contains a magic number: if (newControl is LabelControl)              {                  newControl.Padding = new Thickness(3' 3' 3' 0);              }              else              {                  newControl.Padding = new Thickness(3' 0' 3' 0);              }
Magic Number,TextAdventures.Quest.EditorControls,ExpressionTemplate,C:\repos\textadventures_quest\EditorControls\ExpressionTemplate.xaml.cs,AddControl,The following statement contains a magic number: if (newControl is LabelControl)              {                  newControl.Padding = new Thickness(3' 3' 3' 0);              }              else              {                  newControl.Padding = new Thickness(3' 0' 3' 0);              }
Magic Number,TextAdventures.Quest.EditorControls,ExpressionTemplate,C:\repos\textadventures_quest\EditorControls\ExpressionTemplate.xaml.cs,AddControl,The following statement contains a magic number: if (newControl is LabelControl)              {                  newControl.Padding = new Thickness(3' 3' 3' 0);              }              else              {                  newControl.Padding = new Thickness(3' 0' 3' 0);              }
Magic Number,TextAdventures.Quest.EditorControls,ExpressionTemplate,C:\repos\textadventures_quest\EditorControls\ExpressionTemplate.xaml.cs,AddControl,The following statement contains a magic number: if (newControl is LabelControl)              {                  newControl.Padding = new Thickness(3' 3' 3' 0);              }              else              {                  newControl.Padding = new Thickness(3' 0' 3' 0);              }
Magic Number,TextAdventures.Quest.EditorControls,FileDropDown,C:\repos\textadventures_quest\EditorControls\FileDropDown.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.lstFiles = ((System.Windows.Controls.ComboBox)(target));                            #line 14 "..\..\FileDropDown.xaml"              this.lstFiles.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstFiles_SelectionChanged);                            #line default              #line hidden              return;              case 2:                            #line 26 "..\..\FileDropDown.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Browse_Click);                            #line default              #line hidden              return;              case 3:              this.newFileButton = ((System.Windows.Controls.Button)(target));                            #line 27 "..\..\FileDropDown.xaml"              this.newFileButton.Click += new System.Windows.RoutedEventHandler(this.NewFile_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,FileDropDown,C:\repos\textadventures_quest\EditorControls\FileDropDown.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.lstFiles = ((System.Windows.Controls.ComboBox)(target));                            #line 14 "..\..\FileDropDown.xaml"              this.lstFiles.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstFiles_SelectionChanged);                            #line default              #line hidden              return;              case 2:                            #line 26 "..\..\FileDropDown.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Browse_Click);                            #line default              #line hidden              return;              case 3:              this.newFileButton = ((System.Windows.Controls.Button)(target));                            #line 27 "..\..\FileDropDown.xaml"              this.newFileButton.Click += new System.Windows.RoutedEventHandler(this.NewFile_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,FilePopUp,C:\repos\textadventures_quest\EditorControls\FilePopUp.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.fileDropDown = ((TextAdventures.Quest.EditorControls.FileDropDown)(target));              return;              case 2:              this.ok = ((System.Windows.Controls.Button)(target));                            #line 11 "..\..\FilePopUp.xaml"              this.ok.Click += new System.Windows.RoutedEventHandler(this.ok_OnClick);                            #line default              #line hidden              return;              case 3:              this.cancel = ((System.Windows.Controls.Button)(target));                            #line 12 "..\..\FilePopUp.xaml"              this.cancel.Click += new System.Windows.RoutedEventHandler(this.cancel_OnClick);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,FilePopUp,C:\repos\textadventures_quest\EditorControls\FilePopUp.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.fileDropDown = ((TextAdventures.Quest.EditorControls.FileDropDown)(target));              return;              case 2:              this.ok = ((System.Windows.Controls.Button)(target));                            #line 11 "..\..\FilePopUp.xaml"              this.ok.Click += new System.Windows.RoutedEventHandler(this.ok_OnClick);                            #line default              #line hidden              return;              case 3:              this.cancel = ((System.Windows.Controls.Button)(target));                            #line 12 "..\..\FilePopUp.xaml"              this.cancel.Click += new System.Windows.RoutedEventHandler(this.cancel_OnClick);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,FindControl,C:\repos\textadventures_quest\EditorControls\FindControl.xaml.cs,ModeChanged,The following statement contains a magic number: me.InputGrid.ColumnDefinitions[3].Width = len;
Magic Number,TextAdventures.Quest.EditorControls,FindControl,C:\repos\textadventures_quest\EditorControls\FindControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.InputGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lblFind = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtFind = ((System.Windows.Controls.TextBox)(target));                            #line 25 "..\..\FindControl.xaml"              this.txtFind.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtFind_KeyDown);                            #line default              #line hidden              return;              case 4:              this.lblReplace = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.txtReplace = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\FindControl.xaml"              this.txtReplace.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtReplace_KeyDown);                            #line default              #line hidden              return;              case 6:              this.chkBoxRegex = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.cmdFind = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\FindControl.xaml"              this.cmdFind.Click += new System.Windows.RoutedEventHandler(this.cmdFind_Click);                            #line default              #line hidden              return;              case 8:              this.cmdReplace = ((System.Windows.Controls.Button)(target));                            #line 33 "..\..\FindControl.xaml"              this.cmdReplace.Click += new System.Windows.RoutedEventHandler(this.cmdReplace_Click);                            #line default              #line hidden              return;              case 9:              this.cmdReplaceAll = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\FindControl.xaml"              this.cmdReplaceAll.Click += new System.Windows.RoutedEventHandler(this.cmdReplaceAll_Click);                            #line default              #line hidden              return;              case 10:              this.cmdClose = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\FindControl.xaml"              this.cmdClose.Click += new System.Windows.RoutedEventHandler(this.cmdClose_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,FindControl,C:\repos\textadventures_quest\EditorControls\FindControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.InputGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lblFind = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtFind = ((System.Windows.Controls.TextBox)(target));                            #line 25 "..\..\FindControl.xaml"              this.txtFind.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtFind_KeyDown);                            #line default              #line hidden              return;              case 4:              this.lblReplace = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.txtReplace = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\FindControl.xaml"              this.txtReplace.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtReplace_KeyDown);                            #line default              #line hidden              return;              case 6:              this.chkBoxRegex = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.cmdFind = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\FindControl.xaml"              this.cmdFind.Click += new System.Windows.RoutedEventHandler(this.cmdFind_Click);                            #line default              #line hidden              return;              case 8:              this.cmdReplace = ((System.Windows.Controls.Button)(target));                            #line 33 "..\..\FindControl.xaml"              this.cmdReplace.Click += new System.Windows.RoutedEventHandler(this.cmdReplace_Click);                            #line default              #line hidden              return;              case 9:              this.cmdReplaceAll = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\FindControl.xaml"              this.cmdReplaceAll.Click += new System.Windows.RoutedEventHandler(this.cmdReplaceAll_Click);                            #line default              #line hidden              return;              case 10:              this.cmdClose = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\FindControl.xaml"              this.cmdClose.Click += new System.Windows.RoutedEventHandler(this.cmdClose_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,FindControl,C:\repos\textadventures_quest\EditorControls\FindControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.InputGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lblFind = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtFind = ((System.Windows.Controls.TextBox)(target));                            #line 25 "..\..\FindControl.xaml"              this.txtFind.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtFind_KeyDown);                            #line default              #line hidden              return;              case 4:              this.lblReplace = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.txtReplace = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\FindControl.xaml"              this.txtReplace.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtReplace_KeyDown);                            #line default              #line hidden              return;              case 6:              this.chkBoxRegex = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.cmdFind = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\FindControl.xaml"              this.cmdFind.Click += new System.Windows.RoutedEventHandler(this.cmdFind_Click);                            #line default              #line hidden              return;              case 8:              this.cmdReplace = ((System.Windows.Controls.Button)(target));                            #line 33 "..\..\FindControl.xaml"              this.cmdReplace.Click += new System.Windows.RoutedEventHandler(this.cmdReplace_Click);                            #line default              #line hidden              return;              case 9:              this.cmdReplaceAll = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\FindControl.xaml"              this.cmdReplaceAll.Click += new System.Windows.RoutedEventHandler(this.cmdReplaceAll_Click);                            #line default              #line hidden              return;              case 10:              this.cmdClose = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\FindControl.xaml"              this.cmdClose.Click += new System.Windows.RoutedEventHandler(this.cmdClose_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,FindControl,C:\repos\textadventures_quest\EditorControls\FindControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.InputGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lblFind = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtFind = ((System.Windows.Controls.TextBox)(target));                            #line 25 "..\..\FindControl.xaml"              this.txtFind.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtFind_KeyDown);                            #line default              #line hidden              return;              case 4:              this.lblReplace = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.txtReplace = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\FindControl.xaml"              this.txtReplace.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtReplace_KeyDown);                            #line default              #line hidden              return;              case 6:              this.chkBoxRegex = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.cmdFind = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\FindControl.xaml"              this.cmdFind.Click += new System.Windows.RoutedEventHandler(this.cmdFind_Click);                            #line default              #line hidden              return;              case 8:              this.cmdReplace = ((System.Windows.Controls.Button)(target));                            #line 33 "..\..\FindControl.xaml"              this.cmdReplace.Click += new System.Windows.RoutedEventHandler(this.cmdReplace_Click);                            #line default              #line hidden              return;              case 9:              this.cmdReplaceAll = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\FindControl.xaml"              this.cmdReplaceAll.Click += new System.Windows.RoutedEventHandler(this.cmdReplaceAll_Click);                            #line default              #line hidden              return;              case 10:              this.cmdClose = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\FindControl.xaml"              this.cmdClose.Click += new System.Windows.RoutedEventHandler(this.cmdClose_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,FindControl,C:\repos\textadventures_quest\EditorControls\FindControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.InputGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lblFind = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtFind = ((System.Windows.Controls.TextBox)(target));                            #line 25 "..\..\FindControl.xaml"              this.txtFind.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtFind_KeyDown);                            #line default              #line hidden              return;              case 4:              this.lblReplace = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.txtReplace = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\FindControl.xaml"              this.txtReplace.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtReplace_KeyDown);                            #line default              #line hidden              return;              case 6:              this.chkBoxRegex = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.cmdFind = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\FindControl.xaml"              this.cmdFind.Click += new System.Windows.RoutedEventHandler(this.cmdFind_Click);                            #line default              #line hidden              return;              case 8:              this.cmdReplace = ((System.Windows.Controls.Button)(target));                            #line 33 "..\..\FindControl.xaml"              this.cmdReplace.Click += new System.Windows.RoutedEventHandler(this.cmdReplace_Click);                            #line default              #line hidden              return;              case 9:              this.cmdReplaceAll = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\FindControl.xaml"              this.cmdReplaceAll.Click += new System.Windows.RoutedEventHandler(this.cmdReplaceAll_Click);                            #line default              #line hidden              return;              case 10:              this.cmdClose = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\FindControl.xaml"              this.cmdClose.Click += new System.Windows.RoutedEventHandler(this.cmdClose_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,FindControl,C:\repos\textadventures_quest\EditorControls\FindControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.InputGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lblFind = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtFind = ((System.Windows.Controls.TextBox)(target));                            #line 25 "..\..\FindControl.xaml"              this.txtFind.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtFind_KeyDown);                            #line default              #line hidden              return;              case 4:              this.lblReplace = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.txtReplace = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\FindControl.xaml"              this.txtReplace.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtReplace_KeyDown);                            #line default              #line hidden              return;              case 6:              this.chkBoxRegex = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.cmdFind = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\FindControl.xaml"              this.cmdFind.Click += new System.Windows.RoutedEventHandler(this.cmdFind_Click);                            #line default              #line hidden              return;              case 8:              this.cmdReplace = ((System.Windows.Controls.Button)(target));                            #line 33 "..\..\FindControl.xaml"              this.cmdReplace.Click += new System.Windows.RoutedEventHandler(this.cmdReplace_Click);                            #line default              #line hidden              return;              case 9:              this.cmdReplaceAll = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\FindControl.xaml"              this.cmdReplaceAll.Click += new System.Windows.RoutedEventHandler(this.cmdReplaceAll_Click);                            #line default              #line hidden              return;              case 10:              this.cmdClose = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\FindControl.xaml"              this.cmdClose.Click += new System.Windows.RoutedEventHandler(this.cmdClose_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,FindControl,C:\repos\textadventures_quest\EditorControls\FindControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.InputGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lblFind = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtFind = ((System.Windows.Controls.TextBox)(target));                            #line 25 "..\..\FindControl.xaml"              this.txtFind.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtFind_KeyDown);                            #line default              #line hidden              return;              case 4:              this.lblReplace = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.txtReplace = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\FindControl.xaml"              this.txtReplace.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtReplace_KeyDown);                            #line default              #line hidden              return;              case 6:              this.chkBoxRegex = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.cmdFind = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\FindControl.xaml"              this.cmdFind.Click += new System.Windows.RoutedEventHandler(this.cmdFind_Click);                            #line default              #line hidden              return;              case 8:              this.cmdReplace = ((System.Windows.Controls.Button)(target));                            #line 33 "..\..\FindControl.xaml"              this.cmdReplace.Click += new System.Windows.RoutedEventHandler(this.cmdReplace_Click);                            #line default              #line hidden              return;              case 9:              this.cmdReplaceAll = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\FindControl.xaml"              this.cmdReplaceAll.Click += new System.Windows.RoutedEventHandler(this.cmdReplaceAll_Click);                            #line default              #line hidden              return;              case 10:              this.cmdClose = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\FindControl.xaml"              this.cmdClose.Click += new System.Windows.RoutedEventHandler(this.cmdClose_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,FindControl,C:\repos\textadventures_quest\EditorControls\FindControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.InputGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lblFind = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtFind = ((System.Windows.Controls.TextBox)(target));                            #line 25 "..\..\FindControl.xaml"              this.txtFind.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtFind_KeyDown);                            #line default              #line hidden              return;              case 4:              this.lblReplace = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.txtReplace = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\FindControl.xaml"              this.txtReplace.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtReplace_KeyDown);                            #line default              #line hidden              return;              case 6:              this.chkBoxRegex = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.cmdFind = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\FindControl.xaml"              this.cmdFind.Click += new System.Windows.RoutedEventHandler(this.cmdFind_Click);                            #line default              #line hidden              return;              case 8:              this.cmdReplace = ((System.Windows.Controls.Button)(target));                            #line 33 "..\..\FindControl.xaml"              this.cmdReplace.Click += new System.Windows.RoutedEventHandler(this.cmdReplace_Click);                            #line default              #line hidden              return;              case 9:              this.cmdReplaceAll = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\FindControl.xaml"              this.cmdReplaceAll.Click += new System.Windows.RoutedEventHandler(this.cmdReplaceAll_Click);                            #line default              #line hidden              return;              case 10:              this.cmdClose = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\FindControl.xaml"              this.cmdClose.Click += new System.Windows.RoutedEventHandler(this.cmdClose_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,FindControl,C:\repos\textadventures_quest\EditorControls\FindControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.InputGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lblFind = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtFind = ((System.Windows.Controls.TextBox)(target));                            #line 25 "..\..\FindControl.xaml"              this.txtFind.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtFind_KeyDown);                            #line default              #line hidden              return;              case 4:              this.lblReplace = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.txtReplace = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\FindControl.xaml"              this.txtReplace.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtReplace_KeyDown);                            #line default              #line hidden              return;              case 6:              this.chkBoxRegex = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.cmdFind = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\FindControl.xaml"              this.cmdFind.Click += new System.Windows.RoutedEventHandler(this.cmdFind_Click);                            #line default              #line hidden              return;              case 8:              this.cmdReplace = ((System.Windows.Controls.Button)(target));                            #line 33 "..\..\FindControl.xaml"              this.cmdReplace.Click += new System.Windows.RoutedEventHandler(this.cmdReplace_Click);                            #line default              #line hidden              return;              case 9:              this.cmdReplaceAll = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\FindControl.xaml"              this.cmdReplaceAll.Click += new System.Windows.RoutedEventHandler(this.cmdReplaceAll_Click);                            #line default              #line hidden              return;              case 10:              this.cmdClose = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\FindControl.xaml"              this.cmdClose.Click += new System.Windows.RoutedEventHandler(this.cmdClose_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,GameIdControl,C:\repos\textadventures_quest\EditorControls\GameIdControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.textBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.cmdGenerate = ((System.Windows.Controls.Button)(target));                            #line 14 "..\..\GameIdControl.xaml"              this.cmdGenerate.Click += new System.Windows.RoutedEventHandler(this.cmdGenerate_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,IfEditor,C:\repos\textadventures_quest\EditorControls\IfEditor.xaml.cs,AddElseIfChildControl,The following statement contains a magic number: newChild.Margin = new Thickness(0' 10' 0' 0);
Magic Number,TextAdventures.Quest.EditorControls,IfEditor,C:\repos\textadventures_quest\EditorControls\IfEditor.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.ctlChild = ((TextAdventures.Quest.EditorControls.IfEditorChild)(target));              return;              case 3:              this.cmdAddElseIf = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\IfEditor.xaml"              this.cmdAddElseIf.Click += new System.Windows.RoutedEventHandler(this.cmdAddElseIf_Click);                            #line default              #line hidden              return;              case 4:              this.cmdAddElse = ((System.Windows.Controls.Button)(target));                            #line 17 "..\..\IfEditor.xaml"              this.cmdAddElse.Click += new System.Windows.RoutedEventHandler(this.cmdAddElse_Click);                            #line default              #line hidden              return;              case 5:              this.ctlElse = ((TextAdventures.Quest.EditorControls.IfEditorChild)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,IfEditor,C:\repos\textadventures_quest\EditorControls\IfEditor.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.ctlChild = ((TextAdventures.Quest.EditorControls.IfEditorChild)(target));              return;              case 3:              this.cmdAddElseIf = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\IfEditor.xaml"              this.cmdAddElseIf.Click += new System.Windows.RoutedEventHandler(this.cmdAddElseIf_Click);                            #line default              #line hidden              return;              case 4:              this.cmdAddElse = ((System.Windows.Controls.Button)(target));                            #line 17 "..\..\IfEditor.xaml"              this.cmdAddElse.Click += new System.Windows.RoutedEventHandler(this.cmdAddElse_Click);                            #line default              #line hidden              return;              case 5:              this.ctlElse = ((TextAdventures.Quest.EditorControls.IfEditorChild)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,IfEditor,C:\repos\textadventures_quest\EditorControls\IfEditor.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.ctlChild = ((TextAdventures.Quest.EditorControls.IfEditorChild)(target));              return;              case 3:              this.cmdAddElseIf = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\IfEditor.xaml"              this.cmdAddElseIf.Click += new System.Windows.RoutedEventHandler(this.cmdAddElseIf_Click);                            #line default              #line hidden              return;              case 4:              this.cmdAddElse = ((System.Windows.Controls.Button)(target));                            #line 17 "..\..\IfEditor.xaml"              this.cmdAddElse.Click += new System.Windows.RoutedEventHandler(this.cmdAddElse_Click);                            #line default              #line hidden              return;              case 5:              this.ctlElse = ((TextAdventures.Quest.EditorControls.IfEditorChild)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,IfEditor,C:\repos\textadventures_quest\EditorControls\IfEditor.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.ctlChild = ((TextAdventures.Quest.EditorControls.IfEditorChild)(target));              return;              case 3:              this.cmdAddElseIf = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\IfEditor.xaml"              this.cmdAddElseIf.Click += new System.Windows.RoutedEventHandler(this.cmdAddElseIf_Click);                            #line default              #line hidden              return;              case 4:              this.cmdAddElse = ((System.Windows.Controls.Button)(target));                            #line 17 "..\..\IfEditor.xaml"              this.cmdAddElse.Click += new System.Windows.RoutedEventHandler(this.cmdAddElse_Click);                            #line default              #line hidden              return;              case 5:              this.ctlElse = ((TextAdventures.Quest.EditorControls.IfEditorChild)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,IfEditorChild,C:\repos\textadventures_quest\EditorControls\IfEditorChild.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.lblIf = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.ctlExpression = ((TextAdventures.Quest.EditorControls.ExpressionControl)(target));              return;              case 3:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\IfEditorChild.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 4:              this.ctlScriptExpander = ((TextAdventures.Quest.EditorControls.ScriptExpander)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,IfEditorChild,C:\repos\textadventures_quest\EditorControls\IfEditorChild.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.lblIf = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.ctlExpression = ((TextAdventures.Quest.EditorControls.ExpressionControl)(target));              return;              case 3:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\IfEditorChild.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 4:              this.ctlScriptExpander = ((TextAdventures.Quest.EditorControls.ScriptExpander)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,IfEditorChild,C:\repos\textadventures_quest\EditorControls\IfEditorChild.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.lblIf = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.ctlExpression = ((TextAdventures.Quest.EditorControls.ExpressionControl)(target));              return;              case 3:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\IfEditorChild.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 4:              this.ctlScriptExpander = ((TextAdventures.Quest.EditorControls.ScriptExpander)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,ShowDropdown,The following statement contains a magic number: if (visible)              {                  this.Height = (int)Math.Round(162 * (dpiY / 96));              }              else              {                  this.Height = (int)Math.Round(127 * (dpiY / 96));              }
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,ShowDropdown,The following statement contains a magic number: if (visible)              {                  this.Height = (int)Math.Round(162 * (dpiY / 96));              }              else              {                  this.Height = (int)Math.Round(127 * (dpiY / 96));              }
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,ShowDropdown,The following statement contains a magic number: if (visible)              {                  this.Height = (int)Math.Round(162 * (dpiY / 96));              }              else              {                  this.Height = (int)Math.Round(127 * (dpiY / 96));              }
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,ShowDropdown,The following statement contains a magic number: if (visible)              {                  this.Height = (int)Math.Round(162 * (dpiY / 96));              }              else              {                  this.Height = (int)Math.Round(127 * (dpiY / 96));              }
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstInputAutoComplete.Location = new System.Drawing.Point(11' 29);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstInputAutoComplete.Location = new System.Drawing.Point(11' 29);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstInputAutoComplete.Size = new System.Drawing.Size(334' 21);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstInputAutoComplete.Size = new System.Drawing.Size(334' 21);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstInputAutoComplete.TabIndex = 6;
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblDropdownCaption.Location = new System.Drawing.Point(8' 61);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblDropdownCaption.Location = new System.Drawing.Point(8' 61);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblDropdownCaption.Size = new System.Drawing.Size(56' 13);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblDropdownCaption.Size = new System.Drawing.Size(56' 13);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblDropdownCaption.TabIndex = 10;
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtInput.Location = new System.Drawing.Point(11' 29);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtInput.Location = new System.Drawing.Point(11' 29);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtInput.Size = new System.Drawing.Size(334' 20);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtInput.Size = new System.Drawing.Size(334' 20);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtInput.TabIndex = 4;
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCancel.Location = new System.Drawing.Point(270' 58);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCancel.Location = new System.Drawing.Point(270' 58);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCancel.TabIndex = 9;
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdOK.Location = new System.Drawing.Point(189' 58);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdOK.Location = new System.Drawing.Point(189' 58);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdOK.Size = new System.Drawing.Size(75' 23);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdOK.Size = new System.Drawing.Size(75' 23);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdOK.TabIndex = 8;
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblPrompt.Location = new System.Drawing.Point(8' 7);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblPrompt.Location = new System.Drawing.Point(8' 7);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblPrompt.Size = new System.Drawing.Size(337' 40);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblPrompt.Size = new System.Drawing.Size(337' 40);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblPrompt.TabIndex = 5;
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstDropdown.Location = new System.Drawing.Point(71' 58);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstDropdown.Location = new System.Drawing.Point(71' 58);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstDropdown.Size = new System.Drawing.Size(274' 21);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstDropdown.Size = new System.Drawing.Size(274' 21);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstDropdown.TabIndex = 7;
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(352' 89);
Magic Number,TextAdventures.Quest.EditorControls,InputWindow,C:\repos\textadventures_quest\EditorControls\InputWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(352' 89);
Magic Number,TextAdventures.Quest.EditorControls,MultiControl,C:\repos\textadventures_quest\EditorControls\MultiControl.xaml.cs,InitialiseEditorControl,The following statement contains a magic number: newControl.Margin = new Thickness(0' 8' 0' 0);
Magic Number,TextAdventures.Quest.EditorControls,MultiControl,C:\repos\textadventures_quest\EditorControls\MultiControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.controlRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.lblSelfCaption = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.lstTypes = ((System.Windows.Controls.ComboBox)(target));                            #line 16 "..\..\MultiControl.xaml"              this.lstTypes.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstTypes_SelectionChanged);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,MultiControl,C:\repos\textadventures_quest\EditorControls\MultiControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.controlRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.lblSelfCaption = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.lstTypes = ((System.Windows.Controls.ComboBox)(target));                            #line 16 "..\..\MultiControl.xaml"              this.lstTypes.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstTypes_SelectionChanged);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,MultiControl,C:\repos\textadventures_quest\EditorControls\MultiControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.controlRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.lblSelfCaption = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.lstTypes = ((System.Windows.Controls.ComboBox)(target));                            #line 16 "..\..\MultiControl.xaml"              this.lstTypes.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstTypes_SelectionChanged);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,NumberDoubleControl,C:\repos\textadventures_quest\EditorControls\NumberDoubleControl.xaml.cs,ctlNumber_ValueChanged,The following statement contains a magic number: if (!ctlNumber.Value.HasValue || ctlNumber.Value < 0.0001)              {                  ctlNumber.Value = 0;              }
Magic Number,TextAdventures.Quest.EditorControls,RichTextControl,C:\repos\textadventures_quest\EditorControls\RichTextControl.xaml.cs,Initialise,The following statement contains a magic number: if (m_helper.ControlDefinition.GetBool("notextprocessor"))              {                  textProcessorOptions.Visibility = Visibility.Collapsed;              }              else              {                  var commandDataList = m_helper.Controller.GetElementDataAttribute("_RichTextControl_TextProcessorCommands"' "data") as IEnumerable;                    var commands = (from IDictionary<string' string> commandData in commandDataList                                  select new TextProcessorCommand                                  {                                      Command = GetDictionaryItem(commandData' "command")'                                      Info = GetDictionaryItem(commandData' "info")'                                      InsertBefore = GetDictionaryItem(commandData' "insertbefore")'                                      InsertAfter = GetDictionaryItem(commandData' "insertafter")'                                      Source = GetDictionaryItem(commandData' "source")'                                      Extensions = GetDictionaryItem(commandData' "extensions")                                  });                    foreach (var command in commands)                  {                      stackCommandButtons.Children.Add(new StackPanel                      {                          Orientation = Orientation.Horizontal'                          Children =                          {                              new Button                              {                                  Content = command.Command'                                  Padding = new Thickness(5)'                                  Margin = new Thickness(3)'                                  Tag = command                              }'                              new TextBlock                              {                                  Text = command.Info'                                  VerticalAlignment = VerticalAlignment.Center'                                  Margin = new Thickness(5' 0' 0' 0)                              }                          }                      });                  }                    foreach (StackPanel stackPanel in stackCommandButtons.Children)                  {                      var button = (Button)stackPanel.Children[0];                      button.Click += button_Click;                  }              }
Magic Number,TextAdventures.Quest.EditorControls,RichTextControl,C:\repos\textadventures_quest\EditorControls\RichTextControl.xaml.cs,Initialise,The following statement contains a magic number: if (m_helper.ControlDefinition.GetBool("notextprocessor"))              {                  textProcessorOptions.Visibility = Visibility.Collapsed;              }              else              {                  var commandDataList = m_helper.Controller.GetElementDataAttribute("_RichTextControl_TextProcessorCommands"' "data") as IEnumerable;                    var commands = (from IDictionary<string' string> commandData in commandDataList                                  select new TextProcessorCommand                                  {                                      Command = GetDictionaryItem(commandData' "command")'                                      Info = GetDictionaryItem(commandData' "info")'                                      InsertBefore = GetDictionaryItem(commandData' "insertbefore")'                                      InsertAfter = GetDictionaryItem(commandData' "insertafter")'                                      Source = GetDictionaryItem(commandData' "source")'                                      Extensions = GetDictionaryItem(commandData' "extensions")                                  });                    foreach (var command in commands)                  {                      stackCommandButtons.Children.Add(new StackPanel                      {                          Orientation = Orientation.Horizontal'                          Children =                          {                              new Button                              {                                  Content = command.Command'                                  Padding = new Thickness(5)'                                  Margin = new Thickness(3)'                                  Tag = command                              }'                              new TextBlock                              {                                  Text = command.Info'                                  VerticalAlignment = VerticalAlignment.Center'                                  Margin = new Thickness(5' 0' 0' 0)                              }                          }                      });                  }                    foreach (StackPanel stackPanel in stackCommandButtons.Children)                  {                      var button = (Button)stackPanel.Children[0];                      button.Click += button_Click;                  }              }
Magic Number,TextAdventures.Quest.EditorControls,RichTextControl,C:\repos\textadventures_quest\EditorControls\RichTextControl.xaml.cs,Initialise,The following statement contains a magic number: if (m_helper.ControlDefinition.GetBool("notextprocessor"))              {                  textProcessorOptions.Visibility = Visibility.Collapsed;              }              else              {                  var commandDataList = m_helper.Controller.GetElementDataAttribute("_RichTextControl_TextProcessorCommands"' "data") as IEnumerable;                    var commands = (from IDictionary<string' string> commandData in commandDataList                                  select new TextProcessorCommand                                  {                                      Command = GetDictionaryItem(commandData' "command")'                                      Info = GetDictionaryItem(commandData' "info")'                                      InsertBefore = GetDictionaryItem(commandData' "insertbefore")'                                      InsertAfter = GetDictionaryItem(commandData' "insertafter")'                                      Source = GetDictionaryItem(commandData' "source")'                                      Extensions = GetDictionaryItem(commandData' "extensions")                                  });                    foreach (var command in commands)                  {                      stackCommandButtons.Children.Add(new StackPanel                      {                          Orientation = Orientation.Horizontal'                          Children =                          {                              new Button                              {                                  Content = command.Command'                                  Padding = new Thickness(5)'                                  Margin = new Thickness(3)'                                  Tag = command                              }'                              new TextBlock                              {                                  Text = command.Info'                                  VerticalAlignment = VerticalAlignment.Center'                                  Margin = new Thickness(5' 0' 0' 0)                              }                          }                      });                  }                    foreach (StackPanel stackPanel in stackCommandButtons.Children)                  {                      var button = (Button)stackPanel.Children[0];                      button.Click += button_Click;                  }              }
Magic Number,TextAdventures.Quest.EditorControls,RichTextControl,C:\repos\textadventures_quest\EditorControls\RichTextControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.textBox = ((System.Windows.Controls.TextBox)(target));                            #line 14 "..\..\RichTextControl.xaml"              this.textBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.textBox_TextChanged);                            #line default              #line hidden                            #line 14 "..\..\RichTextControl.xaml"              this.textBox.LostFocus += new System.Windows.RoutedEventHandler(this.textBox_LostFocus);                            #line default              #line hidden              return;              case 2:              this.textProcessorOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 3:              this.stackCommandButtons = ((System.Windows.Controls.StackPanel)(target));              return;              case 4:                            #line 17 "..\..\RichTextControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).Click += new System.Windows.RoutedEventHandler(this.Hyperlink_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,RichTextControl,C:\repos\textadventures_quest\EditorControls\RichTextControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.textBox = ((System.Windows.Controls.TextBox)(target));                            #line 14 "..\..\RichTextControl.xaml"              this.textBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.textBox_TextChanged);                            #line default              #line hidden                            #line 14 "..\..\RichTextControl.xaml"              this.textBox.LostFocus += new System.Windows.RoutedEventHandler(this.textBox_LostFocus);                            #line default              #line hidden              return;              case 2:              this.textProcessorOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 3:              this.stackCommandButtons = ((System.Windows.Controls.StackPanel)(target));              return;              case 4:                            #line 17 "..\..\RichTextControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).Click += new System.Windows.RoutedEventHandler(this.Hyperlink_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,RichTextControl,C:\repos\textadventures_quest\EditorControls\RichTextControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.textBox = ((System.Windows.Controls.TextBox)(target));                            #line 14 "..\..\RichTextControl.xaml"              this.textBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.textBox_TextChanged);                            #line default              #line hidden                            #line 14 "..\..\RichTextControl.xaml"              this.textBox.LostFocus += new System.Windows.RoutedEventHandler(this.textBox_LostFocus);                            #line default              #line hidden              return;              case 2:              this.textProcessorOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 3:              this.stackCommandButtons = ((System.Windows.Controls.StackPanel)(target));              return;              case 4:                            #line 17 "..\..\RichTextControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).Click += new System.Windows.RoutedEventHandler(this.Hyperlink_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptAdder,C:\repos\textadventures_quest\EditorControls\ScriptAdder.xaml.cs,PopulateTree,The following statement contains a magic number: foreach (var data in m_controller.GetScriptEditorData().Where(d => d.Value.IsVisible()))              {                  if (data.Value.IsVisibleInSimpleMode || !m_controller.SimpleMode)                  {                      ctlEditorTree.AddNode(data.Key' data.Value.AdderDisplayString' data.Value.Category' null' null);                        if (!string.IsNullOrEmpty(data.Value.CommonButton))                      {                          Button newButton = new Button                          {                              Padding = new Thickness(6' 3' 6' 3)'                              Margin = new Thickness(3' 2' 3' 2)'                              Content = data.Value.CommonButton'                              Tag = data.Value.CreateString                          };                          newButton.Click += commonButton_Click;                          commonButtons.Children.Add(newButton);                      }                  }              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptAdder,C:\repos\textadventures_quest\EditorControls\ScriptAdder.xaml.cs,PopulateTree,The following statement contains a magic number: foreach (var data in m_controller.GetScriptEditorData().Where(d => d.Value.IsVisible()))              {                  if (data.Value.IsVisibleInSimpleMode || !m_controller.SimpleMode)                  {                      ctlEditorTree.AddNode(data.Key' data.Value.AdderDisplayString' data.Value.Category' null' null);                        if (!string.IsNullOrEmpty(data.Value.CommonButton))                      {                          Button newButton = new Button                          {                              Padding = new Thickness(6' 3' 6' 3)'                              Margin = new Thickness(3' 2' 3' 2)'                              Content = data.Value.CommonButton'                              Tag = data.Value.CreateString                          };                          newButton.Click += commonButton_Click;                          commonButtons.Children.Add(newButton);                      }                  }              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptAdder,C:\repos\textadventures_quest\EditorControls\ScriptAdder.xaml.cs,PopulateTree,The following statement contains a magic number: foreach (var data in m_controller.GetScriptEditorData().Where(d => d.Value.IsVisible()))              {                  if (data.Value.IsVisibleInSimpleMode || !m_controller.SimpleMode)                  {                      ctlEditorTree.AddNode(data.Key' data.Value.AdderDisplayString' data.Value.Category' null' null);                        if (!string.IsNullOrEmpty(data.Value.CommonButton))                      {                          Button newButton = new Button                          {                              Padding = new Thickness(6' 3' 6' 3)'                              Margin = new Thickness(3' 2' 3' 2)'                              Content = data.Value.CommonButton'                              Tag = data.Value.CreateString                          };                          newButton.Click += commonButton_Click;                          commonButtons.Children.Add(newButton);                      }                  }              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptAdder,C:\repos\textadventures_quest\EditorControls\ScriptAdder.xaml.cs,PopulateTree,The following statement contains a magic number: foreach (var data in m_controller.GetScriptEditorData().Where(d => d.Value.IsVisible()))              {                  if (data.Value.IsVisibleInSimpleMode || !m_controller.SimpleMode)                  {                      ctlEditorTree.AddNode(data.Key' data.Value.AdderDisplayString' data.Value.Category' null' null);                        if (!string.IsNullOrEmpty(data.Value.CommonButton))                      {                          Button newButton = new Button                          {                              Padding = new Thickness(6' 3' 6' 3)'                              Margin = new Thickness(3' 2' 3' 2)'                              Content = data.Value.CommonButton'                              Tag = data.Value.CreateString                          };                          newButton.Click += commonButton_Click;                          commonButtons.Children.Add(newButton);                      }                  }              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptAdder,C:\repos\textadventures_quest\EditorControls\ScriptAdder.xaml.cs,PopulateTree,The following statement contains a magic number: foreach (var data in m_controller.GetScriptEditorData().Where(d => d.Value.IsVisible()))              {                  if (data.Value.IsVisibleInSimpleMode || !m_controller.SimpleMode)                  {                      ctlEditorTree.AddNode(data.Key' data.Value.AdderDisplayString' data.Value.Category' null' null);                        if (!string.IsNullOrEmpty(data.Value.CommonButton))                      {                          Button newButton = new Button                          {                              Padding = new Thickness(6' 3' 6' 3)'                              Margin = new Thickness(3' 2' 3' 2)'                              Content = data.Value.CommonButton'                              Tag = data.Value.CreateString                          };                          newButton.Click += commonButton_Click;                          commonButtons.Children.Add(newButton);                      }                  }              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptAdder,C:\repos\textadventures_quest\EditorControls\ScriptAdder.xaml.cs,PopulateTree,The following statement contains a magic number: foreach (var data in m_controller.GetScriptEditorData().Where(d => d.Value.IsVisible()))              {                  if (data.Value.IsVisibleInSimpleMode || !m_controller.SimpleMode)                  {                      ctlEditorTree.AddNode(data.Key' data.Value.AdderDisplayString' data.Value.Category' null' null);                        if (!string.IsNullOrEmpty(data.Value.CommonButton))                      {                          Button newButton = new Button                          {                              Padding = new Thickness(6' 3' 6' 3)'                              Margin = new Thickness(3' 2' 3' 2)'                              Content = data.Value.CommonButton'                              Tag = data.Value.CreateString                          };                          newButton.Click += commonButton_Click;                          commonButtons.Children.Add(newButton);                      }                  }              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptAdder,C:\repos\textadventures_quest\EditorControls\ScriptAdder.xaml.cs,PopulateTree,The following statement contains a magic number: foreach (var data in m_controller.GetScriptEditorData().Where(d => d.Value.IsVisible()))              {                  if (data.Value.IsVisibleInSimpleMode || !m_controller.SimpleMode)                  {                      ctlEditorTree.AddNode(data.Key' data.Value.AdderDisplayString' data.Value.Category' null' null);                        if (!string.IsNullOrEmpty(data.Value.CommonButton))                      {                          Button newButton = new Button                          {                              Padding = new Thickness(6' 3' 6' 3)'                              Margin = new Thickness(3' 2' 3' 2)'                              Content = data.Value.CommonButton'                              Tag = data.Value.CreateString                          };                          newButton.Click += commonButton_Click;                          commonButtons.Children.Add(newButton);                      }                  }              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptAdder,C:\repos\textadventures_quest\EditorControls\ScriptAdder.xaml.cs,PopulateTree,The following statement contains a magic number: foreach (var data in m_controller.GetScriptEditorData().Where(d => d.Value.IsVisible()))              {                  if (data.Value.IsVisibleInSimpleMode || !m_controller.SimpleMode)                  {                      ctlEditorTree.AddNode(data.Key' data.Value.AdderDisplayString' data.Value.Category' null' null);                        if (!string.IsNullOrEmpty(data.Value.CommonButton))                      {                          Button newButton = new Button                          {                              Padding = new Thickness(6' 3' 6' 3)'                              Margin = new Thickness(3' 2' 3' 2)'                              Content = data.Value.CommonButton'                              Tag = data.Value.CreateString                          };                          newButton.Click += commonButton_Click;                          commonButtons.Children.Add(newButton);                      }                  }              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptAdder,C:\repos\textadventures_quest\EditorControls\ScriptAdder.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.commonButtons = ((System.Windows.Controls.StackPanel)(target));              return;              case 2:              this.treeHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              case 3:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\ScriptAdder.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden              return;              case 4:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\ScriptAdder.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.closeButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptAdder,C:\repos\textadventures_quest\EditorControls\ScriptAdder.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.commonButtons = ((System.Windows.Controls.StackPanel)(target));              return;              case 2:              this.treeHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              case 3:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\ScriptAdder.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden              return;              case 4:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\ScriptAdder.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.closeButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptAdder,C:\repos\textadventures_quest\EditorControls\ScriptAdder.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.commonButtons = ((System.Windows.Controls.StackPanel)(target));              return;              case 2:              this.treeHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              case 3:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\ScriptAdder.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden              return;              case 4:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\ScriptAdder.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.closeButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,SetFocusAfterDelay,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,AddScript,The following statement contains a magic number: if (script.Type != ScriptType.If)              {                  Grid parentGrid = new Grid();                  parentGrid.RowDefinitions.Add(new RowDefinition { Height = GridLength.Auto });                  parentGrid.HorizontalAlignment = HorizontalAlignment.Stretch;                  newItem.Content = parentGrid;                    AddScriptControls(newItem' parentGrid' script);              }              else              {                  IfEditor newIfEditor = new IfEditor                  {                      Padding = new Thickness(3)'                      HorizontalAlignment = HorizontalAlignment.Stretch                  };                  AddEditorControl(newIfEditor' newItem' null);                  newItem.Content = newIfEditor;                  newIfEditor.ReadOnly = m_readOnly;                  newIfEditor.Populate((EditableIfScript)script);                    // Ensure the expression responds to updates e.g. from undo/redo. The nested scripts will take                  // care of themselves.                  // TO DO: This isn't particularly efficient' as when m_scripts_Updated is triggered it repopulates                  // the entire "if" script when an if/elseif expression changes. It should only need to update the                  // changed expression.                  AddToScriptParameterControlMap(script' "0"' newIfEditor);              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,AddScriptControls,The following statement contains a magic number: foreach (IEditorControl ctl in definition.Controls)              {                  bool isFullWidthControl = false;                  string controlType = ctl.ControlType;                  if (ctl.ControlType == "script")                  {                      controlType = "scriptexpander";                      isFullWidthControl = true;                  }                  if (ctl.ControlType == "scriptdictionary" || ctl.ControlType == "list" || ctl.Expand)                  {                      isFullWidthControl = true;                  }                  Control newControl = ControlFactory.CreateEditorControl(m_controller' controlType);                  newControl.VerticalAlignment = VerticalAlignment.Top;                  if (newControl is LabelControl)                  {                      newControl.Padding = new Thickness(3' 6' 3' 3);                  }                  else                  {                      newControl.Padding = new Thickness(3);                  }                    if (isFullWidthControl)                  {                      newControl.HorizontalAlignment = HorizontalAlignment.Stretch;                  }                    if (ctl.GetBool("breakbefore"))                  {                      // Create a "line break" by putting this and subsequent controls in a new horizontal grid'                      // underneath the previous one. We're using a grid instead of a StackPanel as script expanders                      // won't take the full width of the list otherwise.                      grid = NewScriptControlGrid(parentGrid);                        // Indent the new line                      newControl.Padding = new Thickness(newControl.Padding.Left + 20' newControl.Padding.Top' newControl.Padding.Right' newControl.Padding.Bottom);                  }                    grid.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(1' isFullWidthControl ? GridUnitType.Star : GridUnitType.Auto) });                  Grid.SetColumn(newControl' grid.ColumnDefinitions.Count - 1);                  grid.Children.Add(newControl);                    IElementEditorControl editorCtl = newControl as IElementEditorControl;                  if (editorCtl != null)                  {                      AddEditorControl(editorCtl' listItem' ctl);                      editorCtl.Populate(data);                      AddToScriptParameterControlMap(script' ctl.Attribute' editorCtl);                  }              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,AddScriptControls,The following statement contains a magic number: foreach (IEditorControl ctl in definition.Controls)              {                  bool isFullWidthControl = false;                  string controlType = ctl.ControlType;                  if (ctl.ControlType == "script")                  {                      controlType = "scriptexpander";                      isFullWidthControl = true;                  }                  if (ctl.ControlType == "scriptdictionary" || ctl.ControlType == "list" || ctl.Expand)                  {                      isFullWidthControl = true;                  }                  Control newControl = ControlFactory.CreateEditorControl(m_controller' controlType);                  newControl.VerticalAlignment = VerticalAlignment.Top;                  if (newControl is LabelControl)                  {                      newControl.Padding = new Thickness(3' 6' 3' 3);                  }                  else                  {                      newControl.Padding = new Thickness(3);                  }                    if (isFullWidthControl)                  {                      newControl.HorizontalAlignment = HorizontalAlignment.Stretch;                  }                    if (ctl.GetBool("breakbefore"))                  {                      // Create a "line break" by putting this and subsequent controls in a new horizontal grid'                      // underneath the previous one. We're using a grid instead of a StackPanel as script expanders                      // won't take the full width of the list otherwise.                      grid = NewScriptControlGrid(parentGrid);                        // Indent the new line                      newControl.Padding = new Thickness(newControl.Padding.Left + 20' newControl.Padding.Top' newControl.Padding.Right' newControl.Padding.Bottom);                  }                    grid.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(1' isFullWidthControl ? GridUnitType.Star : GridUnitType.Auto) });                  Grid.SetColumn(newControl' grid.ColumnDefinitions.Count - 1);                  grid.Children.Add(newControl);                    IElementEditorControl editorCtl = newControl as IElementEditorControl;                  if (editorCtl != null)                  {                      AddEditorControl(editorCtl' listItem' ctl);                      editorCtl.Populate(data);                      AddToScriptParameterControlMap(script' ctl.Attribute' editorCtl);                  }              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,AddScriptControls,The following statement contains a magic number: foreach (IEditorControl ctl in definition.Controls)              {                  bool isFullWidthControl = false;                  string controlType = ctl.ControlType;                  if (ctl.ControlType == "script")                  {                      controlType = "scriptexpander";                      isFullWidthControl = true;                  }                  if (ctl.ControlType == "scriptdictionary" || ctl.ControlType == "list" || ctl.Expand)                  {                      isFullWidthControl = true;                  }                  Control newControl = ControlFactory.CreateEditorControl(m_controller' controlType);                  newControl.VerticalAlignment = VerticalAlignment.Top;                  if (newControl is LabelControl)                  {                      newControl.Padding = new Thickness(3' 6' 3' 3);                  }                  else                  {                      newControl.Padding = new Thickness(3);                  }                    if (isFullWidthControl)                  {                      newControl.HorizontalAlignment = HorizontalAlignment.Stretch;                  }                    if (ctl.GetBool("breakbefore"))                  {                      // Create a "line break" by putting this and subsequent controls in a new horizontal grid'                      // underneath the previous one. We're using a grid instead of a StackPanel as script expanders                      // won't take the full width of the list otherwise.                      grid = NewScriptControlGrid(parentGrid);                        // Indent the new line                      newControl.Padding = new Thickness(newControl.Padding.Left + 20' newControl.Padding.Top' newControl.Padding.Right' newControl.Padding.Bottom);                  }                    grid.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(1' isFullWidthControl ? GridUnitType.Star : GridUnitType.Auto) });                  Grid.SetColumn(newControl' grid.ColumnDefinitions.Count - 1);                  grid.Children.Add(newControl);                    IElementEditorControl editorCtl = newControl as IElementEditorControl;                  if (editorCtl != null)                  {                      AddEditorControl(editorCtl' listItem' ctl);                      editorCtl.Populate(data);                      AddToScriptParameterControlMap(script' ctl.Attribute' editorCtl);                  }              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,AddScriptControls,The following statement contains a magic number: foreach (IEditorControl ctl in definition.Controls)              {                  bool isFullWidthControl = false;                  string controlType = ctl.ControlType;                  if (ctl.ControlType == "script")                  {                      controlType = "scriptexpander";                      isFullWidthControl = true;                  }                  if (ctl.ControlType == "scriptdictionary" || ctl.ControlType == "list" || ctl.Expand)                  {                      isFullWidthControl = true;                  }                  Control newControl = ControlFactory.CreateEditorControl(m_controller' controlType);                  newControl.VerticalAlignment = VerticalAlignment.Top;                  if (newControl is LabelControl)                  {                      newControl.Padding = new Thickness(3' 6' 3' 3);                  }                  else                  {                      newControl.Padding = new Thickness(3);                  }                    if (isFullWidthControl)                  {                      newControl.HorizontalAlignment = HorizontalAlignment.Stretch;                  }                    if (ctl.GetBool("breakbefore"))                  {                      // Create a "line break" by putting this and subsequent controls in a new horizontal grid'                      // underneath the previous one. We're using a grid instead of a StackPanel as script expanders                      // won't take the full width of the list otherwise.                      grid = NewScriptControlGrid(parentGrid);                        // Indent the new line                      newControl.Padding = new Thickness(newControl.Padding.Left + 20' newControl.Padding.Top' newControl.Padding.Right' newControl.Padding.Bottom);                  }                    grid.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(1' isFullWidthControl ? GridUnitType.Star : GridUnitType.Auto) });                  Grid.SetColumn(newControl' grid.ColumnDefinitions.Count - 1);                  grid.Children.Add(newControl);                    IElementEditorControl editorCtl = newControl as IElementEditorControl;                  if (editorCtl != null)                  {                      AddEditorControl(editorCtl' listItem' ctl);                      editorCtl.Populate(data);                      AddToScriptParameterControlMap(script' ctl.Attribute' editorCtl);                  }              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,AddScriptControls,The following statement contains a magic number: foreach (IEditorControl ctl in definition.Controls)              {                  bool isFullWidthControl = false;                  string controlType = ctl.ControlType;                  if (ctl.ControlType == "script")                  {                      controlType = "scriptexpander";                      isFullWidthControl = true;                  }                  if (ctl.ControlType == "scriptdictionary" || ctl.ControlType == "list" || ctl.Expand)                  {                      isFullWidthControl = true;                  }                  Control newControl = ControlFactory.CreateEditorControl(m_controller' controlType);                  newControl.VerticalAlignment = VerticalAlignment.Top;                  if (newControl is LabelControl)                  {                      newControl.Padding = new Thickness(3' 6' 3' 3);                  }                  else                  {                      newControl.Padding = new Thickness(3);                  }                    if (isFullWidthControl)                  {                      newControl.HorizontalAlignment = HorizontalAlignment.Stretch;                  }                    if (ctl.GetBool("breakbefore"))                  {                      // Create a "line break" by putting this and subsequent controls in a new horizontal grid'                      // underneath the previous one. We're using a grid instead of a StackPanel as script expanders                      // won't take the full width of the list otherwise.                      grid = NewScriptControlGrid(parentGrid);                        // Indent the new line                      newControl.Padding = new Thickness(newControl.Padding.Left + 20' newControl.Padding.Top' newControl.Padding.Right' newControl.Padding.Bottom);                  }                    grid.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(1' isFullWidthControl ? GridUnitType.Star : GridUnitType.Auto) });                  Grid.SetColumn(newControl' grid.ColumnDefinitions.Count - 1);                  grid.Children.Add(newControl);                    IElementEditorControl editorCtl = newControl as IElementEditorControl;                  if (editorCtl != null)                  {                      AddEditorControl(editorCtl' listItem' ctl);                      editorCtl.Populate(data);                      AddToScriptParameterControlMap(script' ctl.Attribute' editorCtl);                  }              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptEditorControl,C:\repos\textadventures_quest\EditorControls\ScriptEditorControl.xaml.cs,AddScriptControls,The following statement contains a magic number: foreach (IEditorControl ctl in definition.Controls)              {                  bool isFullWidthControl = false;                  string controlType = ctl.ControlType;                  if (ctl.ControlType == "script")                  {                      controlType = "scriptexpander";                      isFullWidthControl = true;                  }                  if (ctl.ControlType == "scriptdictionary" || ctl.ControlType == "list" || ctl.Expand)                  {                      isFullWidthControl = true;                  }                  Control newControl = ControlFactory.CreateEditorControl(m_controller' controlType);                  newControl.VerticalAlignment = VerticalAlignment.Top;                  if (newControl is LabelControl)                  {                      newControl.Padding = new Thickness(3' 6' 3' 3);                  }                  else                  {                      newControl.Padding = new Thickness(3);                  }                    if (isFullWidthControl)                  {                      newControl.HorizontalAlignment = HorizontalAlignment.Stretch;                  }                    if (ctl.GetBool("breakbefore"))                  {                      // Create a "line break" by putting this and subsequent controls in a new horizontal grid'                      // underneath the previous one. We're using a grid instead of a StackPanel as script expanders                      // won't take the full width of the list otherwise.                      grid = NewScriptControlGrid(parentGrid);                        // Indent the new line                      newControl.Padding = new Thickness(newControl.Padding.Left + 20' newControl.Padding.Top' newControl.Padding.Right' newControl.Padding.Bottom);                  }                    grid.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(1' isFullWidthControl ? GridUnitType.Star : GridUnitType.Auto) });                  Grid.SetColumn(newControl' grid.ColumnDefinitions.Count - 1);                  grid.Children.Add(newControl);                    IElementEditorControl editorCtl = newControl as IElementEditorControl;                  if (editorCtl != null)                  {                      AddEditorControl(editorCtl' listItem' ctl);                      editorCtl.Populate(data);                      AddToScriptParameterControlMap(script' ctl.Attribute' editorCtl);                  }              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptExpander,C:\repos\textadventures_quest\EditorControls\ScriptExpander.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ctlExpander = ((System.Windows.Controls.Expander)(target));                            #line 10 "..\..\ScriptExpander.xaml"              this.ctlExpander.Expanded += new System.Windows.RoutedEventHandler(this.ctlExpander_Expanded);                            #line default              #line hidden              return;              case 2:              this.header = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 14 "..\..\ScriptExpander.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 4:              this.ctlScript = ((TextAdventures.Quest.EditorControls.ScriptEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptExpander,C:\repos\textadventures_quest\EditorControls\ScriptExpander.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ctlExpander = ((System.Windows.Controls.Expander)(target));                            #line 10 "..\..\ScriptExpander.xaml"              this.ctlExpander.Expanded += new System.Windows.RoutedEventHandler(this.ctlExpander_Expanded);                            #line default              #line hidden              return;              case 2:              this.header = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 14 "..\..\ScriptExpander.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 4:              this.ctlScript = ((TextAdventures.Quest.EditorControls.ScriptEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptExpander,C:\repos\textadventures_quest\EditorControls\ScriptExpander.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ctlExpander = ((System.Windows.Controls.Expander)(target));                            #line 10 "..\..\ScriptExpander.xaml"              this.ctlExpander.Expanded += new System.Windows.RoutedEventHandler(this.ctlExpander_Expanded);                            #line default              #line hidden              return;              case 2:              this.header = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 14 "..\..\ScriptExpander.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 4:              this.ctlScript = ((TextAdventures.Quest.EditorControls.ScriptEditorControl)(target));              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptToolbar,C:\repos\textadventures_quest\EditorControls\ScriptToolbar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.cmdMakeEditable = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ScriptToolbar.xaml"              this.cmdMakeEditable.Click += new System.Windows.RoutedEventHandler(this.cmdMakeEditable_Click);                            #line default              #line hidden              return;              case 2:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ScriptToolbar.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 3:              this.cmdMoveUp = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ScriptToolbar.xaml"              this.cmdMoveUp.Click += new System.Windows.RoutedEventHandler(this.cmdMoveUp_Click);                            #line default              #line hidden              return;              case 4:              this.cmdMoveDown = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\ScriptToolbar.xaml"              this.cmdMoveDown.Click += new System.Windows.RoutedEventHandler(this.cmdMoveDown_Click);                            #line default              #line hidden              return;              case 5:              this.cmdCut = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\ScriptToolbar.xaml"              this.cmdCut.Click += new System.Windows.RoutedEventHandler(this.cmdCut_Click);                            #line default              #line hidden              return;              case 6:              this.cmdCopy = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ScriptToolbar.xaml"              this.cmdCopy.Click += new System.Windows.RoutedEventHandler(this.cmdCopy_Click);                            #line default              #line hidden              return;              case 7:              this.cmdPaste = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\ScriptToolbar.xaml"              this.cmdPaste.Click += new System.Windows.RoutedEventHandler(this.cmdPaste_Click);                            #line default              #line hidden              return;              case 8:              this.codeViewSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 9:              this.cmdCodeView = ((System.Windows.Controls.Primitives.ToggleButton)(target));                            #line 42 "..\..\ScriptToolbar.xaml"              this.cmdCodeView.Click += new System.Windows.RoutedEventHandler(this.cmdCodeView_OnClick);                            #line default              #line hidden              return;              case 10:              this.popOutSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 11:              this.cmdPopOut = ((System.Windows.Controls.Button)(target));                            #line 46 "..\..\ScriptToolbar.xaml"              this.cmdPopOut.Click += new System.Windows.RoutedEventHandler(this.cmdPopOut_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptToolbar,C:\repos\textadventures_quest\EditorControls\ScriptToolbar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.cmdMakeEditable = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ScriptToolbar.xaml"              this.cmdMakeEditable.Click += new System.Windows.RoutedEventHandler(this.cmdMakeEditable_Click);                            #line default              #line hidden              return;              case 2:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ScriptToolbar.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 3:              this.cmdMoveUp = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ScriptToolbar.xaml"              this.cmdMoveUp.Click += new System.Windows.RoutedEventHandler(this.cmdMoveUp_Click);                            #line default              #line hidden              return;              case 4:              this.cmdMoveDown = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\ScriptToolbar.xaml"              this.cmdMoveDown.Click += new System.Windows.RoutedEventHandler(this.cmdMoveDown_Click);                            #line default              #line hidden              return;              case 5:              this.cmdCut = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\ScriptToolbar.xaml"              this.cmdCut.Click += new System.Windows.RoutedEventHandler(this.cmdCut_Click);                            #line default              #line hidden              return;              case 6:              this.cmdCopy = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ScriptToolbar.xaml"              this.cmdCopy.Click += new System.Windows.RoutedEventHandler(this.cmdCopy_Click);                            #line default              #line hidden              return;              case 7:              this.cmdPaste = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\ScriptToolbar.xaml"              this.cmdPaste.Click += new System.Windows.RoutedEventHandler(this.cmdPaste_Click);                            #line default              #line hidden              return;              case 8:              this.codeViewSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 9:              this.cmdCodeView = ((System.Windows.Controls.Primitives.ToggleButton)(target));                            #line 42 "..\..\ScriptToolbar.xaml"              this.cmdCodeView.Click += new System.Windows.RoutedEventHandler(this.cmdCodeView_OnClick);                            #line default              #line hidden              return;              case 10:              this.popOutSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 11:              this.cmdPopOut = ((System.Windows.Controls.Button)(target));                            #line 46 "..\..\ScriptToolbar.xaml"              this.cmdPopOut.Click += new System.Windows.RoutedEventHandler(this.cmdPopOut_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptToolbar,C:\repos\textadventures_quest\EditorControls\ScriptToolbar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.cmdMakeEditable = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ScriptToolbar.xaml"              this.cmdMakeEditable.Click += new System.Windows.RoutedEventHandler(this.cmdMakeEditable_Click);                            #line default              #line hidden              return;              case 2:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ScriptToolbar.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 3:              this.cmdMoveUp = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ScriptToolbar.xaml"              this.cmdMoveUp.Click += new System.Windows.RoutedEventHandler(this.cmdMoveUp_Click);                            #line default              #line hidden              return;              case 4:              this.cmdMoveDown = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\ScriptToolbar.xaml"              this.cmdMoveDown.Click += new System.Windows.RoutedEventHandler(this.cmdMoveDown_Click);                            #line default              #line hidden              return;              case 5:              this.cmdCut = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\ScriptToolbar.xaml"              this.cmdCut.Click += new System.Windows.RoutedEventHandler(this.cmdCut_Click);                            #line default              #line hidden              return;              case 6:              this.cmdCopy = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ScriptToolbar.xaml"              this.cmdCopy.Click += new System.Windows.RoutedEventHandler(this.cmdCopy_Click);                            #line default              #line hidden              return;              case 7:              this.cmdPaste = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\ScriptToolbar.xaml"              this.cmdPaste.Click += new System.Windows.RoutedEventHandler(this.cmdPaste_Click);                            #line default              #line hidden              return;              case 8:              this.codeViewSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 9:              this.cmdCodeView = ((System.Windows.Controls.Primitives.ToggleButton)(target));                            #line 42 "..\..\ScriptToolbar.xaml"              this.cmdCodeView.Click += new System.Windows.RoutedEventHandler(this.cmdCodeView_OnClick);                            #line default              #line hidden              return;              case 10:              this.popOutSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 11:              this.cmdPopOut = ((System.Windows.Controls.Button)(target));                            #line 46 "..\..\ScriptToolbar.xaml"              this.cmdPopOut.Click += new System.Windows.RoutedEventHandler(this.cmdPopOut_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptToolbar,C:\repos\textadventures_quest\EditorControls\ScriptToolbar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.cmdMakeEditable = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ScriptToolbar.xaml"              this.cmdMakeEditable.Click += new System.Windows.RoutedEventHandler(this.cmdMakeEditable_Click);                            #line default              #line hidden              return;              case 2:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ScriptToolbar.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 3:              this.cmdMoveUp = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ScriptToolbar.xaml"              this.cmdMoveUp.Click += new System.Windows.RoutedEventHandler(this.cmdMoveUp_Click);                            #line default              #line hidden              return;              case 4:              this.cmdMoveDown = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\ScriptToolbar.xaml"              this.cmdMoveDown.Click += new System.Windows.RoutedEventHandler(this.cmdMoveDown_Click);                            #line default              #line hidden              return;              case 5:              this.cmdCut = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\ScriptToolbar.xaml"              this.cmdCut.Click += new System.Windows.RoutedEventHandler(this.cmdCut_Click);                            #line default              #line hidden              return;              case 6:              this.cmdCopy = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ScriptToolbar.xaml"              this.cmdCopy.Click += new System.Windows.RoutedEventHandler(this.cmdCopy_Click);                            #line default              #line hidden              return;              case 7:              this.cmdPaste = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\ScriptToolbar.xaml"              this.cmdPaste.Click += new System.Windows.RoutedEventHandler(this.cmdPaste_Click);                            #line default              #line hidden              return;              case 8:              this.codeViewSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 9:              this.cmdCodeView = ((System.Windows.Controls.Primitives.ToggleButton)(target));                            #line 42 "..\..\ScriptToolbar.xaml"              this.cmdCodeView.Click += new System.Windows.RoutedEventHandler(this.cmdCodeView_OnClick);                            #line default              #line hidden              return;              case 10:              this.popOutSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 11:              this.cmdPopOut = ((System.Windows.Controls.Button)(target));                            #line 46 "..\..\ScriptToolbar.xaml"              this.cmdPopOut.Click += new System.Windows.RoutedEventHandler(this.cmdPopOut_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptToolbar,C:\repos\textadventures_quest\EditorControls\ScriptToolbar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.cmdMakeEditable = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ScriptToolbar.xaml"              this.cmdMakeEditable.Click += new System.Windows.RoutedEventHandler(this.cmdMakeEditable_Click);                            #line default              #line hidden              return;              case 2:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ScriptToolbar.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 3:              this.cmdMoveUp = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ScriptToolbar.xaml"              this.cmdMoveUp.Click += new System.Windows.RoutedEventHandler(this.cmdMoveUp_Click);                            #line default              #line hidden              return;              case 4:              this.cmdMoveDown = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\ScriptToolbar.xaml"              this.cmdMoveDown.Click += new System.Windows.RoutedEventHandler(this.cmdMoveDown_Click);                            #line default              #line hidden              return;              case 5:              this.cmdCut = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\ScriptToolbar.xaml"              this.cmdCut.Click += new System.Windows.RoutedEventHandler(this.cmdCut_Click);                            #line default              #line hidden              return;              case 6:              this.cmdCopy = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ScriptToolbar.xaml"              this.cmdCopy.Click += new System.Windows.RoutedEventHandler(this.cmdCopy_Click);                            #line default              #line hidden              return;              case 7:              this.cmdPaste = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\ScriptToolbar.xaml"              this.cmdPaste.Click += new System.Windows.RoutedEventHandler(this.cmdPaste_Click);                            #line default              #line hidden              return;              case 8:              this.codeViewSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 9:              this.cmdCodeView = ((System.Windows.Controls.Primitives.ToggleButton)(target));                            #line 42 "..\..\ScriptToolbar.xaml"              this.cmdCodeView.Click += new System.Windows.RoutedEventHandler(this.cmdCodeView_OnClick);                            #line default              #line hidden              return;              case 10:              this.popOutSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 11:              this.cmdPopOut = ((System.Windows.Controls.Button)(target));                            #line 46 "..\..\ScriptToolbar.xaml"              this.cmdPopOut.Click += new System.Windows.RoutedEventHandler(this.cmdPopOut_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptToolbar,C:\repos\textadventures_quest\EditorControls\ScriptToolbar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.cmdMakeEditable = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ScriptToolbar.xaml"              this.cmdMakeEditable.Click += new System.Windows.RoutedEventHandler(this.cmdMakeEditable_Click);                            #line default              #line hidden              return;              case 2:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ScriptToolbar.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 3:              this.cmdMoveUp = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ScriptToolbar.xaml"              this.cmdMoveUp.Click += new System.Windows.RoutedEventHandler(this.cmdMoveUp_Click);                            #line default              #line hidden              return;              case 4:              this.cmdMoveDown = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\ScriptToolbar.xaml"              this.cmdMoveDown.Click += new System.Windows.RoutedEventHandler(this.cmdMoveDown_Click);                            #line default              #line hidden              return;              case 5:              this.cmdCut = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\ScriptToolbar.xaml"              this.cmdCut.Click += new System.Windows.RoutedEventHandler(this.cmdCut_Click);                            #line default              #line hidden              return;              case 6:              this.cmdCopy = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ScriptToolbar.xaml"              this.cmdCopy.Click += new System.Windows.RoutedEventHandler(this.cmdCopy_Click);                            #line default              #line hidden              return;              case 7:              this.cmdPaste = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\ScriptToolbar.xaml"              this.cmdPaste.Click += new System.Windows.RoutedEventHandler(this.cmdPaste_Click);                            #line default              #line hidden              return;              case 8:              this.codeViewSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 9:              this.cmdCodeView = ((System.Windows.Controls.Primitives.ToggleButton)(target));                            #line 42 "..\..\ScriptToolbar.xaml"              this.cmdCodeView.Click += new System.Windows.RoutedEventHandler(this.cmdCodeView_OnClick);                            #line default              #line hidden              return;              case 10:              this.popOutSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 11:              this.cmdPopOut = ((System.Windows.Controls.Button)(target));                            #line 46 "..\..\ScriptToolbar.xaml"              this.cmdPopOut.Click += new System.Windows.RoutedEventHandler(this.cmdPopOut_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptToolbar,C:\repos\textadventures_quest\EditorControls\ScriptToolbar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.cmdMakeEditable = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ScriptToolbar.xaml"              this.cmdMakeEditable.Click += new System.Windows.RoutedEventHandler(this.cmdMakeEditable_Click);                            #line default              #line hidden              return;              case 2:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ScriptToolbar.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 3:              this.cmdMoveUp = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ScriptToolbar.xaml"              this.cmdMoveUp.Click += new System.Windows.RoutedEventHandler(this.cmdMoveUp_Click);                            #line default              #line hidden              return;              case 4:              this.cmdMoveDown = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\ScriptToolbar.xaml"              this.cmdMoveDown.Click += new System.Windows.RoutedEventHandler(this.cmdMoveDown_Click);                            #line default              #line hidden              return;              case 5:              this.cmdCut = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\ScriptToolbar.xaml"              this.cmdCut.Click += new System.Windows.RoutedEventHandler(this.cmdCut_Click);                            #line default              #line hidden              return;              case 6:              this.cmdCopy = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ScriptToolbar.xaml"              this.cmdCopy.Click += new System.Windows.RoutedEventHandler(this.cmdCopy_Click);                            #line default              #line hidden              return;              case 7:              this.cmdPaste = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\ScriptToolbar.xaml"              this.cmdPaste.Click += new System.Windows.RoutedEventHandler(this.cmdPaste_Click);                            #line default              #line hidden              return;              case 8:              this.codeViewSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 9:              this.cmdCodeView = ((System.Windows.Controls.Primitives.ToggleButton)(target));                            #line 42 "..\..\ScriptToolbar.xaml"              this.cmdCodeView.Click += new System.Windows.RoutedEventHandler(this.cmdCodeView_OnClick);                            #line default              #line hidden              return;              case 10:              this.popOutSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 11:              this.cmdPopOut = ((System.Windows.Controls.Button)(target));                            #line 46 "..\..\ScriptToolbar.xaml"              this.cmdPopOut.Click += new System.Windows.RoutedEventHandler(this.cmdPopOut_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptToolbar,C:\repos\textadventures_quest\EditorControls\ScriptToolbar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.cmdMakeEditable = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ScriptToolbar.xaml"              this.cmdMakeEditable.Click += new System.Windows.RoutedEventHandler(this.cmdMakeEditable_Click);                            #line default              #line hidden              return;              case 2:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ScriptToolbar.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 3:              this.cmdMoveUp = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ScriptToolbar.xaml"              this.cmdMoveUp.Click += new System.Windows.RoutedEventHandler(this.cmdMoveUp_Click);                            #line default              #line hidden              return;              case 4:              this.cmdMoveDown = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\ScriptToolbar.xaml"              this.cmdMoveDown.Click += new System.Windows.RoutedEventHandler(this.cmdMoveDown_Click);                            #line default              #line hidden              return;              case 5:              this.cmdCut = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\ScriptToolbar.xaml"              this.cmdCut.Click += new System.Windows.RoutedEventHandler(this.cmdCut_Click);                            #line default              #line hidden              return;              case 6:              this.cmdCopy = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ScriptToolbar.xaml"              this.cmdCopy.Click += new System.Windows.RoutedEventHandler(this.cmdCopy_Click);                            #line default              #line hidden              return;              case 7:              this.cmdPaste = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\ScriptToolbar.xaml"              this.cmdPaste.Click += new System.Windows.RoutedEventHandler(this.cmdPaste_Click);                            #line default              #line hidden              return;              case 8:              this.codeViewSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 9:              this.cmdCodeView = ((System.Windows.Controls.Primitives.ToggleButton)(target));                            #line 42 "..\..\ScriptToolbar.xaml"              this.cmdCodeView.Click += new System.Windows.RoutedEventHandler(this.cmdCodeView_OnClick);                            #line default              #line hidden              return;              case 10:              this.popOutSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 11:              this.cmdPopOut = ((System.Windows.Controls.Button)(target));                            #line 46 "..\..\ScriptToolbar.xaml"              this.cmdPopOut.Click += new System.Windows.RoutedEventHandler(this.cmdPopOut_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptToolbar,C:\repos\textadventures_quest\EditorControls\ScriptToolbar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.cmdMakeEditable = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ScriptToolbar.xaml"              this.cmdMakeEditable.Click += new System.Windows.RoutedEventHandler(this.cmdMakeEditable_Click);                            #line default              #line hidden              return;              case 2:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ScriptToolbar.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 3:              this.cmdMoveUp = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ScriptToolbar.xaml"              this.cmdMoveUp.Click += new System.Windows.RoutedEventHandler(this.cmdMoveUp_Click);                            #line default              #line hidden              return;              case 4:              this.cmdMoveDown = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\ScriptToolbar.xaml"              this.cmdMoveDown.Click += new System.Windows.RoutedEventHandler(this.cmdMoveDown_Click);                            #line default              #line hidden              return;              case 5:              this.cmdCut = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\ScriptToolbar.xaml"              this.cmdCut.Click += new System.Windows.RoutedEventHandler(this.cmdCut_Click);                            #line default              #line hidden              return;              case 6:              this.cmdCopy = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ScriptToolbar.xaml"              this.cmdCopy.Click += new System.Windows.RoutedEventHandler(this.cmdCopy_Click);                            #line default              #line hidden              return;              case 7:              this.cmdPaste = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\ScriptToolbar.xaml"              this.cmdPaste.Click += new System.Windows.RoutedEventHandler(this.cmdPaste_Click);                            #line default              #line hidden              return;              case 8:              this.codeViewSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 9:              this.cmdCodeView = ((System.Windows.Controls.Primitives.ToggleButton)(target));                            #line 42 "..\..\ScriptToolbar.xaml"              this.cmdCodeView.Click += new System.Windows.RoutedEventHandler(this.cmdCodeView_OnClick);                            #line default              #line hidden              return;              case 10:              this.popOutSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 11:              this.cmdPopOut = ((System.Windows.Controls.Button)(target));                            #line 46 "..\..\ScriptToolbar.xaml"              this.cmdPopOut.Click += new System.Windows.RoutedEventHandler(this.cmdPopOut_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ScriptToolbar,C:\repos\textadventures_quest\EditorControls\ScriptToolbar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.cmdMakeEditable = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ScriptToolbar.xaml"              this.cmdMakeEditable.Click += new System.Windows.RoutedEventHandler(this.cmdMakeEditable_Click);                            #line default              #line hidden              return;              case 2:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ScriptToolbar.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 3:              this.cmdMoveUp = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ScriptToolbar.xaml"              this.cmdMoveUp.Click += new System.Windows.RoutedEventHandler(this.cmdMoveUp_Click);                            #line default              #line hidden              return;              case 4:              this.cmdMoveDown = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\ScriptToolbar.xaml"              this.cmdMoveDown.Click += new System.Windows.RoutedEventHandler(this.cmdMoveDown_Click);                            #line default              #line hidden              return;              case 5:              this.cmdCut = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\ScriptToolbar.xaml"              this.cmdCut.Click += new System.Windows.RoutedEventHandler(this.cmdCut_Click);                            #line default              #line hidden              return;              case 6:              this.cmdCopy = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ScriptToolbar.xaml"              this.cmdCopy.Click += new System.Windows.RoutedEventHandler(this.cmdCopy_Click);                            #line default              #line hidden              return;              case 7:              this.cmdPaste = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\ScriptToolbar.xaml"              this.cmdPaste.Click += new System.Windows.RoutedEventHandler(this.cmdPaste_Click);                            #line default              #line hidden              return;              case 8:              this.codeViewSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 9:              this.cmdCodeView = ((System.Windows.Controls.Primitives.ToggleButton)(target));                            #line 42 "..\..\ScriptToolbar.xaml"              this.cmdCodeView.Click += new System.Windows.RoutedEventHandler(this.cmdCodeView_OnClick);                            #line default              #line hidden              return;              case 10:              this.popOutSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 11:              this.cmdPopOut = ((System.Windows.Controls.Button)(target));                            #line 46 "..\..\ScriptToolbar.xaml"              this.cmdPopOut.Click += new System.Windows.RoutedEventHandler(this.cmdPopOut_Click);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,TextEditorControl,C:\repos\textadventures_quest\EditorControls\TextEditorControl.xaml.cs,TextEditorControl,The following statement contains a magic number: textEditor.Padding = new System.Windows.Thickness(5);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,AttributeChangedInternal,The following statement contains a magic number: if (value == null || !CanDisplayAttribute(attribute' value' false))              {                  // Remove attribute                  lstAttributes.Items.Remove(listViewItem);              }              else              {                  // Add or update attribute                  if (listViewItem == null)                  {                      AddListItem(m_data.GetAttributeData(attribute));                  }                  else                  {                      listViewItem.SubItems[1].Text = GetDisplayString(value);                      IEditorAttributeData data = m_data.GetAttributeData(attribute);                      listViewItem.SubItems[2].Text = data.Source;                      listViewItem.ForeColor = GetAttributeColour(data);                      if (updateMultiControl)                      {                          if (attribute == GetSelectedAttribute())                          {                              ctlMultiControl.Populate(m_data);                          }                      }                  }              }
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlSplitContainerMain.Size = new System.Drawing.Size(699' 482);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlSplitContainerMain.Size = new System.Drawing.Size(699' 482);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlSplitContainerMain.SplitterDistance = 163;
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.lstTypes.Location = new System.Drawing.Point(0' 25);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.lstTypes.Size = new System.Drawing.Size(699' 138);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.lstTypes.Size = new System.Drawing.Size(699' 138);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.lstTypes.TabIndex = 6;
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ColumnHeader1.Width = 138;
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ColumnHeader2.Width = 354;
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ColumnHeader3.Width = 115;
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlTypesToolStrip.Size = new System.Drawing.Size(699' 25);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlTypesToolStrip.Size = new System.Drawing.Size(699' 25);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlTypesToolStrip.TabIndex = 5;
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ToolStripLabel2.Size = new System.Drawing.Size(100' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ToolStripLabel2.Size = new System.Drawing.Size(100' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.cmdDeleteType.Size = new System.Drawing.Size(60' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.cmdDeleteType.Size = new System.Drawing.Size(60' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlSplitContainer.Size = new System.Drawing.Size(699' 315);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlSplitContainer.Size = new System.Drawing.Size(699' 315);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlSplitContainer.SplitterDistance = 156;
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.lstAttributes.Location = new System.Drawing.Point(0' 25);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.lstAttributes.Size = new System.Drawing.Size(699' 131);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.lstAttributes.Size = new System.Drawing.Size(699' 131);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.lstAttributes.TabIndex = 5;
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.colName.Width = 138;
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.colValue.Width = 354;
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.colSource.Width = 115;
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlToolStrip.Size = new System.Drawing.Size(699' 25);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlToolStrip.Size = new System.Drawing.Size(699' 25);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlToolStrip.TabIndex = 4;
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAttributesTitle.Size = new System.Drawing.Size(100' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAttributesTitle.Size = new System.Drawing.Size(100' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.cmdAdd.Size = new System.Drawing.Size(49' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.cmdAdd.Size = new System.Drawing.Size(49' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.cmdOnChange.Size = new System.Drawing.Size(126' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.cmdOnChange.Size = new System.Drawing.Size(126' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.cmdDelete.Size = new System.Drawing.Size(60' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.cmdDelete.Size = new System.Drawing.Size(60' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.cmdAddType.Size = new System.Drawing.Size(49' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.cmdAddType.Size = new System.Drawing.Size(49' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlMultiControl.Size = new System.Drawing.Size(699' 155);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlMultiControl.Size = new System.Drawing.Size(699' 155);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(699' 482);
Magic Number,TextAdventures.Quest.EditorControls,WFAttributesControl,C:\repos\textadventures_quest\EditorControls\WFAttributesControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(699' 482);
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,InitialiseTab,The following statement contains a magic number: newTab.Padding = new Thickness(8' 4' 8' 4);
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,InitialiseTab,The following statement contains a magic number: newTab.Padding = new Thickness(8' 4' 8' 4);
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,InitialiseTab,The following statement contains a magic number: newTab.Padding = new Thickness(8' 4' 8' 4);
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,InitialiseTab,The following statement contains a magic number: newTab.Padding = new Thickness(8' 4' 8' 4);
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,InitialiseTab,The following statement contains a magic number: scrollViewer.Padding = new Thickness(5);
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: newControl.Padding = new Thickness(6);
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (!controlDisplaysOwnCaption && !string.IsNullOrEmpty(ctl.Caption))              {                  Label newLabel = new Label();                  m_controlUIElements[ctl].Add(newLabel);                  newLabel.Content = ctl.Caption + ":";                  newLabel.Target = newControl;                    if (ctl.Caption.Length > 17)                  {                      newLabel.Padding = new Thickness(5' 5' 5' 0);                      newControl.Padding = new Thickness(5' 3' 5' 5);                        // Create StackPanel' label at top and control underneath                      Grid subGrid = new Grid();                      AddRowToGrid(subGrid' false);                      AddRowToGrid(subGrid' ctl.Expand || resizableRow);                        m_controlUIElements[ctl].Add(subGrid);                        // Add label and new control to subgrid                      Grid.SetRow(newLabel' 0);                      Grid.SetRow(newControl' 1);                      subGrid.Children.Add(newLabel);                      subGrid.Children.Add(newControl);                        // Add subgrid to parent editor grid                      Grid.SetColumn(subGrid' 0);                      Grid.SetRow(subGrid' currentRow);                      Grid.SetColumnSpan(subGrid' 2);                      grid.Children.Add(subGrid);                  }                  else                  {                      newLabel.Padding = new Thickness(5' 7' 5' 5);                        // Add label to first column                      Grid.SetColumn(newLabel' 0);                      Grid.SetRow(newLabel' currentRow);                      grid.Children.Add(newLabel);                        // Add control to second column                      Grid.SetColumn(newControl' 1);                      Grid.SetRow(newControl' currentRow);                      grid.Children.Add(newControl);                  }              }              else              {                  // Add control to grid row' colspan=2                  Grid.SetColumn(newControl' 0);                  Grid.SetRow(newControl' currentRow);                  Grid.SetColumnSpan(newControl' 2);                  grid.Children.Add(newControl);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (!controlDisplaysOwnCaption && !string.IsNullOrEmpty(ctl.Caption))              {                  Label newLabel = new Label();                  m_controlUIElements[ctl].Add(newLabel);                  newLabel.Content = ctl.Caption + ":";                  newLabel.Target = newControl;                    if (ctl.Caption.Length > 17)                  {                      newLabel.Padding = new Thickness(5' 5' 5' 0);                      newControl.Padding = new Thickness(5' 3' 5' 5);                        // Create StackPanel' label at top and control underneath                      Grid subGrid = new Grid();                      AddRowToGrid(subGrid' false);                      AddRowToGrid(subGrid' ctl.Expand || resizableRow);                        m_controlUIElements[ctl].Add(subGrid);                        // Add label and new control to subgrid                      Grid.SetRow(newLabel' 0);                      Grid.SetRow(newControl' 1);                      subGrid.Children.Add(newLabel);                      subGrid.Children.Add(newControl);                        // Add subgrid to parent editor grid                      Grid.SetColumn(subGrid' 0);                      Grid.SetRow(subGrid' currentRow);                      Grid.SetColumnSpan(subGrid' 2);                      grid.Children.Add(subGrid);                  }                  else                  {                      newLabel.Padding = new Thickness(5' 7' 5' 5);                        // Add label to first column                      Grid.SetColumn(newLabel' 0);                      Grid.SetRow(newLabel' currentRow);                      grid.Children.Add(newLabel);                        // Add control to second column                      Grid.SetColumn(newControl' 1);                      Grid.SetRow(newControl' currentRow);                      grid.Children.Add(newControl);                  }              }              else              {                  // Add control to grid row' colspan=2                  Grid.SetColumn(newControl' 0);                  Grid.SetRow(newControl' currentRow);                  Grid.SetColumnSpan(newControl' 2);                  grid.Children.Add(newControl);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (!controlDisplaysOwnCaption && !string.IsNullOrEmpty(ctl.Caption))              {                  Label newLabel = new Label();                  m_controlUIElements[ctl].Add(newLabel);                  newLabel.Content = ctl.Caption + ":";                  newLabel.Target = newControl;                    if (ctl.Caption.Length > 17)                  {                      newLabel.Padding = new Thickness(5' 5' 5' 0);                      newControl.Padding = new Thickness(5' 3' 5' 5);                        // Create StackPanel' label at top and control underneath                      Grid subGrid = new Grid();                      AddRowToGrid(subGrid' false);                      AddRowToGrid(subGrid' ctl.Expand || resizableRow);                        m_controlUIElements[ctl].Add(subGrid);                        // Add label and new control to subgrid                      Grid.SetRow(newLabel' 0);                      Grid.SetRow(newControl' 1);                      subGrid.Children.Add(newLabel);                      subGrid.Children.Add(newControl);                        // Add subgrid to parent editor grid                      Grid.SetColumn(subGrid' 0);                      Grid.SetRow(subGrid' currentRow);                      Grid.SetColumnSpan(subGrid' 2);                      grid.Children.Add(subGrid);                  }                  else                  {                      newLabel.Padding = new Thickness(5' 7' 5' 5);                        // Add label to first column                      Grid.SetColumn(newLabel' 0);                      Grid.SetRow(newLabel' currentRow);                      grid.Children.Add(newLabel);                        // Add control to second column                      Grid.SetColumn(newControl' 1);                      Grid.SetRow(newControl' currentRow);                      grid.Children.Add(newControl);                  }              }              else              {                  // Add control to grid row' colspan=2                  Grid.SetColumn(newControl' 0);                  Grid.SetRow(newControl' currentRow);                  Grid.SetColumnSpan(newControl' 2);                  grid.Children.Add(newControl);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (!controlDisplaysOwnCaption && !string.IsNullOrEmpty(ctl.Caption))              {                  Label newLabel = new Label();                  m_controlUIElements[ctl].Add(newLabel);                  newLabel.Content = ctl.Caption + ":";                  newLabel.Target = newControl;                    if (ctl.Caption.Length > 17)                  {                      newLabel.Padding = new Thickness(5' 5' 5' 0);                      newControl.Padding = new Thickness(5' 3' 5' 5);                        // Create StackPanel' label at top and control underneath                      Grid subGrid = new Grid();                      AddRowToGrid(subGrid' false);                      AddRowToGrid(subGrid' ctl.Expand || resizableRow);                        m_controlUIElements[ctl].Add(subGrid);                        // Add label and new control to subgrid                      Grid.SetRow(newLabel' 0);                      Grid.SetRow(newControl' 1);                      subGrid.Children.Add(newLabel);                      subGrid.Children.Add(newControl);                        // Add subgrid to parent editor grid                      Grid.SetColumn(subGrid' 0);                      Grid.SetRow(subGrid' currentRow);                      Grid.SetColumnSpan(subGrid' 2);                      grid.Children.Add(subGrid);                  }                  else                  {                      newLabel.Padding = new Thickness(5' 7' 5' 5);                        // Add label to first column                      Grid.SetColumn(newLabel' 0);                      Grid.SetRow(newLabel' currentRow);                      grid.Children.Add(newLabel);                        // Add control to second column                      Grid.SetColumn(newControl' 1);                      Grid.SetRow(newControl' currentRow);                      grid.Children.Add(newControl);                  }              }              else              {                  // Add control to grid row' colspan=2                  Grid.SetColumn(newControl' 0);                  Grid.SetRow(newControl' currentRow);                  Grid.SetColumnSpan(newControl' 2);                  grid.Children.Add(newControl);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (!controlDisplaysOwnCaption && !string.IsNullOrEmpty(ctl.Caption))              {                  Label newLabel = new Label();                  m_controlUIElements[ctl].Add(newLabel);                  newLabel.Content = ctl.Caption + ":";                  newLabel.Target = newControl;                    if (ctl.Caption.Length > 17)                  {                      newLabel.Padding = new Thickness(5' 5' 5' 0);                      newControl.Padding = new Thickness(5' 3' 5' 5);                        // Create StackPanel' label at top and control underneath                      Grid subGrid = new Grid();                      AddRowToGrid(subGrid' false);                      AddRowToGrid(subGrid' ctl.Expand || resizableRow);                        m_controlUIElements[ctl].Add(subGrid);                        // Add label and new control to subgrid                      Grid.SetRow(newLabel' 0);                      Grid.SetRow(newControl' 1);                      subGrid.Children.Add(newLabel);                      subGrid.Children.Add(newControl);                        // Add subgrid to parent editor grid                      Grid.SetColumn(subGrid' 0);                      Grid.SetRow(subGrid' currentRow);                      Grid.SetColumnSpan(subGrid' 2);                      grid.Children.Add(subGrid);                  }                  else                  {                      newLabel.Padding = new Thickness(5' 7' 5' 5);                        // Add label to first column                      Grid.SetColumn(newLabel' 0);                      Grid.SetRow(newLabel' currentRow);                      grid.Children.Add(newLabel);                        // Add control to second column                      Grid.SetColumn(newControl' 1);                      Grid.SetRow(newControl' currentRow);                      grid.Children.Add(newControl);                  }              }              else              {                  // Add control to grid row' colspan=2                  Grid.SetColumn(newControl' 0);                  Grid.SetRow(newControl' currentRow);                  Grid.SetColumnSpan(newControl' 2);                  grid.Children.Add(newControl);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (!controlDisplaysOwnCaption && !string.IsNullOrEmpty(ctl.Caption))              {                  Label newLabel = new Label();                  m_controlUIElements[ctl].Add(newLabel);                  newLabel.Content = ctl.Caption + ":";                  newLabel.Target = newControl;                    if (ctl.Caption.Length > 17)                  {                      newLabel.Padding = new Thickness(5' 5' 5' 0);                      newControl.Padding = new Thickness(5' 3' 5' 5);                        // Create StackPanel' label at top and control underneath                      Grid subGrid = new Grid();                      AddRowToGrid(subGrid' false);                      AddRowToGrid(subGrid' ctl.Expand || resizableRow);                        m_controlUIElements[ctl].Add(subGrid);                        // Add label and new control to subgrid                      Grid.SetRow(newLabel' 0);                      Grid.SetRow(newControl' 1);                      subGrid.Children.Add(newLabel);                      subGrid.Children.Add(newControl);                        // Add subgrid to parent editor grid                      Grid.SetColumn(subGrid' 0);                      Grid.SetRow(subGrid' currentRow);                      Grid.SetColumnSpan(subGrid' 2);                      grid.Children.Add(subGrid);                  }                  else                  {                      newLabel.Padding = new Thickness(5' 7' 5' 5);                        // Add label to first column                      Grid.SetColumn(newLabel' 0);                      Grid.SetRow(newLabel' currentRow);                      grid.Children.Add(newLabel);                        // Add control to second column                      Grid.SetColumn(newControl' 1);                      Grid.SetRow(newControl' currentRow);                      grid.Children.Add(newControl);                  }              }              else              {                  // Add control to grid row' colspan=2                  Grid.SetColumn(newControl' 0);                  Grid.SetRow(newControl' currentRow);                  Grid.SetColumnSpan(newControl' 2);                  grid.Children.Add(newControl);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (!controlDisplaysOwnCaption && !string.IsNullOrEmpty(ctl.Caption))              {                  Label newLabel = new Label();                  m_controlUIElements[ctl].Add(newLabel);                  newLabel.Content = ctl.Caption + ":";                  newLabel.Target = newControl;                    if (ctl.Caption.Length > 17)                  {                      newLabel.Padding = new Thickness(5' 5' 5' 0);                      newControl.Padding = new Thickness(5' 3' 5' 5);                        // Create StackPanel' label at top and control underneath                      Grid subGrid = new Grid();                      AddRowToGrid(subGrid' false);                      AddRowToGrid(subGrid' ctl.Expand || resizableRow);                        m_controlUIElements[ctl].Add(subGrid);                        // Add label and new control to subgrid                      Grid.SetRow(newLabel' 0);                      Grid.SetRow(newControl' 1);                      subGrid.Children.Add(newLabel);                      subGrid.Children.Add(newControl);                        // Add subgrid to parent editor grid                      Grid.SetColumn(subGrid' 0);                      Grid.SetRow(subGrid' currentRow);                      Grid.SetColumnSpan(subGrid' 2);                      grid.Children.Add(subGrid);                  }                  else                  {                      newLabel.Padding = new Thickness(5' 7' 5' 5);                        // Add label to first column                      Grid.SetColumn(newLabel' 0);                      Grid.SetRow(newLabel' currentRow);                      grid.Children.Add(newLabel);                        // Add control to second column                      Grid.SetColumn(newControl' 1);                      Grid.SetRow(newControl' currentRow);                      grid.Children.Add(newControl);                  }              }              else              {                  // Add control to grid row' colspan=2                  Grid.SetColumn(newControl' 0);                  Grid.SetRow(newControl' currentRow);                  Grid.SetColumnSpan(newControl' 2);                  grid.Children.Add(newControl);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (!controlDisplaysOwnCaption && !string.IsNullOrEmpty(ctl.Caption))              {                  Label newLabel = new Label();                  m_controlUIElements[ctl].Add(newLabel);                  newLabel.Content = ctl.Caption + ":";                  newLabel.Target = newControl;                    if (ctl.Caption.Length > 17)                  {                      newLabel.Padding = new Thickness(5' 5' 5' 0);                      newControl.Padding = new Thickness(5' 3' 5' 5);                        // Create StackPanel' label at top and control underneath                      Grid subGrid = new Grid();                      AddRowToGrid(subGrid' false);                      AddRowToGrid(subGrid' ctl.Expand || resizableRow);                        m_controlUIElements[ctl].Add(subGrid);                        // Add label and new control to subgrid                      Grid.SetRow(newLabel' 0);                      Grid.SetRow(newControl' 1);                      subGrid.Children.Add(newLabel);                      subGrid.Children.Add(newControl);                        // Add subgrid to parent editor grid                      Grid.SetColumn(subGrid' 0);                      Grid.SetRow(subGrid' currentRow);                      Grid.SetColumnSpan(subGrid' 2);                      grid.Children.Add(subGrid);                  }                  else                  {                      newLabel.Padding = new Thickness(5' 7' 5' 5);                        // Add label to first column                      Grid.SetColumn(newLabel' 0);                      Grid.SetRow(newLabel' currentRow);                      grid.Children.Add(newLabel);                        // Add control to second column                      Grid.SetColumn(newControl' 1);                      Grid.SetRow(newControl' currentRow);                      grid.Children.Add(newControl);                  }              }              else              {                  // Add control to grid row' colspan=2                  Grid.SetColumn(newControl' 0);                  Grid.SetRow(newControl' currentRow);                  Grid.SetColumnSpan(newControl' 2);                  grid.Children.Add(newControl);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (!controlDisplaysOwnCaption && !string.IsNullOrEmpty(ctl.Caption))              {                  Label newLabel = new Label();                  m_controlUIElements[ctl].Add(newLabel);                  newLabel.Content = ctl.Caption + ":";                  newLabel.Target = newControl;                    if (ctl.Caption.Length > 17)                  {                      newLabel.Padding = new Thickness(5' 5' 5' 0);                      newControl.Padding = new Thickness(5' 3' 5' 5);                        // Create StackPanel' label at top and control underneath                      Grid subGrid = new Grid();                      AddRowToGrid(subGrid' false);                      AddRowToGrid(subGrid' ctl.Expand || resizableRow);                        m_controlUIElements[ctl].Add(subGrid);                        // Add label and new control to subgrid                      Grid.SetRow(newLabel' 0);                      Grid.SetRow(newControl' 1);                      subGrid.Children.Add(newLabel);                      subGrid.Children.Add(newControl);                        // Add subgrid to parent editor grid                      Grid.SetColumn(subGrid' 0);                      Grid.SetRow(subGrid' currentRow);                      Grid.SetColumnSpan(subGrid' 2);                      grid.Children.Add(subGrid);                  }                  else                  {                      newLabel.Padding = new Thickness(5' 7' 5' 5);                        // Add label to first column                      Grid.SetColumn(newLabel' 0);                      Grid.SetRow(newLabel' currentRow);                      grid.Children.Add(newLabel);                        // Add control to second column                      Grid.SetColumn(newControl' 1);                      Grid.SetRow(newControl' currentRow);                      grid.Children.Add(newControl);                  }              }              else              {                  // Add control to grid row' colspan=2                  Grid.SetColumn(newControl' 0);                  Grid.SetRow(newControl' currentRow);                  Grid.SetColumnSpan(newControl' 2);                  grid.Children.Add(newControl);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (!controlDisplaysOwnCaption && !string.IsNullOrEmpty(ctl.Caption))              {                  Label newLabel = new Label();                  m_controlUIElements[ctl].Add(newLabel);                  newLabel.Content = ctl.Caption + ":";                  newLabel.Target = newControl;                    if (ctl.Caption.Length > 17)                  {                      newLabel.Padding = new Thickness(5' 5' 5' 0);                      newControl.Padding = new Thickness(5' 3' 5' 5);                        // Create StackPanel' label at top and control underneath                      Grid subGrid = new Grid();                      AddRowToGrid(subGrid' false);                      AddRowToGrid(subGrid' ctl.Expand || resizableRow);                        m_controlUIElements[ctl].Add(subGrid);                        // Add label and new control to subgrid                      Grid.SetRow(newLabel' 0);                      Grid.SetRow(newControl' 1);                      subGrid.Children.Add(newLabel);                      subGrid.Children.Add(newControl);                        // Add subgrid to parent editor grid                      Grid.SetColumn(subGrid' 0);                      Grid.SetRow(subGrid' currentRow);                      Grid.SetColumnSpan(subGrid' 2);                      grid.Children.Add(subGrid);                  }                  else                  {                      newLabel.Padding = new Thickness(5' 7' 5' 5);                        // Add label to first column                      Grid.SetColumn(newLabel' 0);                      Grid.SetRow(newLabel' currentRow);                      grid.Children.Add(newLabel);                        // Add control to second column                      Grid.SetColumn(newControl' 1);                      Grid.SetRow(newControl' currentRow);                      grid.Children.Add(newControl);                  }              }              else              {                  // Add control to grid row' colspan=2                  Grid.SetColumn(newControl' 0);                  Grid.SetRow(newControl' currentRow);                  Grid.SetColumnSpan(newControl' 2);                  grid.Children.Add(newControl);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (!controlDisplaysOwnCaption && !string.IsNullOrEmpty(ctl.Caption))              {                  Label newLabel = new Label();                  m_controlUIElements[ctl].Add(newLabel);                  newLabel.Content = ctl.Caption + ":";                  newLabel.Target = newControl;                    if (ctl.Caption.Length > 17)                  {                      newLabel.Padding = new Thickness(5' 5' 5' 0);                      newControl.Padding = new Thickness(5' 3' 5' 5);                        // Create StackPanel' label at top and control underneath                      Grid subGrid = new Grid();                      AddRowToGrid(subGrid' false);                      AddRowToGrid(subGrid' ctl.Expand || resizableRow);                        m_controlUIElements[ctl].Add(subGrid);                        // Add label and new control to subgrid                      Grid.SetRow(newLabel' 0);                      Grid.SetRow(newControl' 1);                      subGrid.Children.Add(newLabel);                      subGrid.Children.Add(newControl);                        // Add subgrid to parent editor grid                      Grid.SetColumn(subGrid' 0);                      Grid.SetRow(subGrid' currentRow);                      Grid.SetColumnSpan(subGrid' 2);                      grid.Children.Add(subGrid);                  }                  else                  {                      newLabel.Padding = new Thickness(5' 7' 5' 5);                        // Add label to first column                      Grid.SetColumn(newLabel' 0);                      Grid.SetRow(newLabel' currentRow);                      grid.Children.Add(newLabel);                        // Add control to second column                      Grid.SetColumn(newControl' 1);                      Grid.SetRow(newControl' currentRow);                      grid.Children.Add(newControl);                  }              }              else              {                  // Add control to grid row' colspan=2                  Grid.SetColumn(newControl' 0);                  Grid.SetRow(newControl' currentRow);                  Grid.SetColumnSpan(newControl' 2);                  grid.Children.Add(newControl);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (!controlDisplaysOwnCaption && !string.IsNullOrEmpty(ctl.Caption))              {                  Label newLabel = new Label();                  m_controlUIElements[ctl].Add(newLabel);                  newLabel.Content = ctl.Caption + ":";                  newLabel.Target = newControl;                    if (ctl.Caption.Length > 17)                  {                      newLabel.Padding = new Thickness(5' 5' 5' 0);                      newControl.Padding = new Thickness(5' 3' 5' 5);                        // Create StackPanel' label at top and control underneath                      Grid subGrid = new Grid();                      AddRowToGrid(subGrid' false);                      AddRowToGrid(subGrid' ctl.Expand || resizableRow);                        m_controlUIElements[ctl].Add(subGrid);                        // Add label and new control to subgrid                      Grid.SetRow(newLabel' 0);                      Grid.SetRow(newControl' 1);                      subGrid.Children.Add(newLabel);                      subGrid.Children.Add(newControl);                        // Add subgrid to parent editor grid                      Grid.SetColumn(subGrid' 0);                      Grid.SetRow(subGrid' currentRow);                      Grid.SetColumnSpan(subGrid' 2);                      grid.Children.Add(subGrid);                  }                  else                  {                      newLabel.Padding = new Thickness(5' 7' 5' 5);                        // Add label to first column                      Grid.SetColumn(newLabel' 0);                      Grid.SetRow(newLabel' currentRow);                      grid.Children.Add(newLabel);                        // Add control to second column                      Grid.SetColumn(newControl' 1);                      Grid.SetRow(newControl' currentRow);                      grid.Children.Add(newControl);                  }              }              else              {                  // Add control to grid row' colspan=2                  Grid.SetColumn(newControl' 0);                  Grid.SetRow(newControl' currentRow);                  Grid.SetColumnSpan(newControl' 2);                  grid.Children.Add(newControl);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (!controlDisplaysOwnCaption && !string.IsNullOrEmpty(ctl.Caption))              {                  Label newLabel = new Label();                  m_controlUIElements[ctl].Add(newLabel);                  newLabel.Content = ctl.Caption + ":";                  newLabel.Target = newControl;                    if (ctl.Caption.Length > 17)                  {                      newLabel.Padding = new Thickness(5' 5' 5' 0);                      newControl.Padding = new Thickness(5' 3' 5' 5);                        // Create StackPanel' label at top and control underneath                      Grid subGrid = new Grid();                      AddRowToGrid(subGrid' false);                      AddRowToGrid(subGrid' ctl.Expand || resizableRow);                        m_controlUIElements[ctl].Add(subGrid);                        // Add label and new control to subgrid                      Grid.SetRow(newLabel' 0);                      Grid.SetRow(newControl' 1);                      subGrid.Children.Add(newLabel);                      subGrid.Children.Add(newControl);                        // Add subgrid to parent editor grid                      Grid.SetColumn(subGrid' 0);                      Grid.SetRow(subGrid' currentRow);                      Grid.SetColumnSpan(subGrid' 2);                      grid.Children.Add(subGrid);                  }                  else                  {                      newLabel.Padding = new Thickness(5' 7' 5' 5);                        // Add label to first column                      Grid.SetColumn(newLabel' 0);                      Grid.SetRow(newLabel' currentRow);                      grid.Children.Add(newLabel);                        // Add control to second column                      Grid.SetColumn(newControl' 1);                      Grid.SetRow(newControl' currentRow);                      grid.Children.Add(newControl);                  }              }              else              {                  // Add control to grid row' colspan=2                  Grid.SetColumn(newControl' 0);                  Grid.SetRow(newControl' currentRow);                  Grid.SetColumnSpan(newControl' 2);                  grid.Children.Add(newControl);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (!controlDisplaysOwnCaption && !string.IsNullOrEmpty(ctl.Caption))              {                  Label newLabel = new Label();                  m_controlUIElements[ctl].Add(newLabel);                  newLabel.Content = ctl.Caption + ":";                  newLabel.Target = newControl;                    if (ctl.Caption.Length > 17)                  {                      newLabel.Padding = new Thickness(5' 5' 5' 0);                      newControl.Padding = new Thickness(5' 3' 5' 5);                        // Create StackPanel' label at top and control underneath                      Grid subGrid = new Grid();                      AddRowToGrid(subGrid' false);                      AddRowToGrid(subGrid' ctl.Expand || resizableRow);                        m_controlUIElements[ctl].Add(subGrid);                        // Add label and new control to subgrid                      Grid.SetRow(newLabel' 0);                      Grid.SetRow(newControl' 1);                      subGrid.Children.Add(newLabel);                      subGrid.Children.Add(newControl);                        // Add subgrid to parent editor grid                      Grid.SetColumn(subGrid' 0);                      Grid.SetRow(subGrid' currentRow);                      Grid.SetColumnSpan(subGrid' 2);                      grid.Children.Add(subGrid);                  }                  else                  {                      newLabel.Padding = new Thickness(5' 7' 5' 5);                        // Add label to first column                      Grid.SetColumn(newLabel' 0);                      Grid.SetRow(newLabel' currentRow);                      grid.Children.Add(newLabel);                        // Add control to second column                      Grid.SetColumn(newControl' 1);                      Grid.SetRow(newControl' currentRow);                      grid.Children.Add(newControl);                  }              }              else              {                  // Add control to grid row' colspan=2                  Grid.SetColumn(newControl' 0);                  Grid.SetRow(newControl' currentRow);                  Grid.SetColumnSpan(newControl' 2);                  grid.Children.Add(newControl);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (resizableRow)              {                  // TO DO: Enforce minimum height for resizable rows                    int gridRow = AddRowToGrid(grid);                  GridSplitter splitter = new GridSplitter();                  splitter.Height = 3;                  splitter.HorizontalAlignment = HorizontalAlignment.Stretch;                  splitter.VerticalAlignment = VerticalAlignment.Center;                  Grid.SetColumnSpan(splitter' 2);                  Grid.SetRow(splitter' gridRow);                  grid.Children.Add(splitter);                  m_controlUIElements[ctl].Add(splitter);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,AddControlToGrid,The following statement contains a magic number: if (resizableRow)              {                  // TO DO: Enforce minimum height for resizable rows                    int gridRow = AddRowToGrid(grid);                  GridSplitter splitter = new GridSplitter();                  splitter.Height = 3;                  splitter.HorizontalAlignment = HorizontalAlignment.Stretch;                  splitter.VerticalAlignment = VerticalAlignment.Center;                  Grid.SetColumnSpan(splitter' 2);                  Grid.SetRow(splitter' gridRow);                  grid.Children.Add(splitter);                  m_controlUIElements[ctl].Add(splitter);              }
Magic Number,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,UpdateControlVisibility,The following statement contains a magic number: foreach (var titleControl in m_titleControls)              {                  titleControl.Margin = new Thickness(0' 15' 0' 0);              }
Magic Number,TextAdventures.Quest.EditorControls,ListStringControl,C:\repos\textadventures_quest\EditorControls\ListStringControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.toolbarHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              case 2:              this.listBox = ((System.Windows.Controls.ListBox)(target));                            #line 19 "..\..\ListStringControl.xaml"              this.listBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listBox_SelectionChanged);                            #line default              #line hidden              return;              }
Magic Number,TextAdventures.Quest.EditorControls,ListStringControl,C:\repos\textadventures_quest\EditorControls\ListStringControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.Controls.Control.MouseDoubleClickEvent;                            #line 27 "..\..\ListStringControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.ListItemDoubleClick);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Magic Number,TextAdventures.Quest.EditorControls,WFDictionaryEditorManager<T>,C:\repos\textadventures_quest\EditorControls\WFDictionaryEditorManager.cs,Initialise,The following statement contains a magic number: ctlListEditor.SetHeader(2' valueHeader);
Magic Number,TextAdventures.Quest.EditorControls,WFDictionaryScriptControl,C:\repos\textadventures_quest\EditorControls\WFDictionaryScriptControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlListEditor.Size = new System.Drawing.Size(398' 324);
Magic Number,TextAdventures.Quest.EditorControls,WFDictionaryScriptControl,C:\repos\textadventures_quest\EditorControls\WFDictionaryScriptControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlListEditor.Size = new System.Drawing.Size(398' 324);
Magic Number,TextAdventures.Quest.EditorControls,WFDictionaryScriptControl,C:\repos\textadventures_quest\EditorControls\WFDictionaryScriptControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(398' 324);
Magic Number,TextAdventures.Quest.EditorControls,WFDictionaryScriptControl,C:\repos\textadventures_quest\EditorControls\WFDictionaryScriptControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(398' 324);
Magic Number,TextAdventures.Quest.EditorControls,WFDictionaryStringControl,C:\repos\textadventures_quest\EditorControls\WFDictionaryStringControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlListEditor.Size = new System.Drawing.Size(383' 256);
Magic Number,TextAdventures.Quest.EditorControls,WFDictionaryStringControl,C:\repos\textadventures_quest\EditorControls\WFDictionaryStringControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlListEditor.Size = new System.Drawing.Size(383' 256);
Magic Number,TextAdventures.Quest.EditorControls,WFDictionaryStringControl,C:\repos\textadventures_quest\EditorControls\WFDictionaryStringControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(383' 256);
Magic Number,TextAdventures.Quest.EditorControls,WFDictionaryStringControl,C:\repos\textadventures_quest\EditorControls\WFDictionaryStringControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(383' 256);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.txtSearch.Size = new System.Drawing.Size(269' 20);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.txtSearch.Size = new System.Drawing.Size(269' 20);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddJavascriptToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddJavascriptToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddEditorToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddEditorToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddObjectTypeToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddObjectTypeToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddDelegateToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddDelegateToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.ctlToolStrip.Location = new System.Drawing.Point(0' 312);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.ctlToolStrip.Size = new System.Drawing.Size(289' 25);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.ctlToolStrip.Size = new System.Drawing.Size(289' 25);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.ctlToolStrip.TabIndex = 5;
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.mnuFilter.Size = new System.Drawing.Size(46' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.mnuFilter.Size = new System.Drawing.Size(46' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.lstSearchResults.Location = new System.Drawing.Point(0' 20);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.lstSearchResults.Size = new System.Drawing.Size(289' 317);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.lstSearchResults.Size = new System.Drawing.Size(289' 317);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.lstSearchResults.TabIndex = 8;
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.cmdClose.Location = new System.Drawing.Point(249' 0);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.cmdClose.Size = new System.Drawing.Size(20' 20);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.cmdClose.Size = new System.Drawing.Size(20' 20);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.cmdClose.TabIndex = 2;
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.cmdSearch.Location = new System.Drawing.Point(269' 0);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.cmdSearch.Size = new System.Drawing.Size(20' 20);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.cmdSearch.Size = new System.Drawing.Size(20' 20);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.cmdSearch.TabIndex = 3;
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.pnlSearchContainer.Size = new System.Drawing.Size(289' 20);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.pnlSearchContainer.Size = new System.Drawing.Size(289' 20);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.pnlSearchContainer.TabIndex = 6;
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddDynamicTemplateToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddDynamicTemplateToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddTemplateToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddTemplateToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddImpliedTypeToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddImpliedTypeToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddRoomToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddRoomToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddObjectToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddObjectToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.ctlContextMenu.Size = new System.Drawing.Size(200' 500);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.ctlContextMenu.Size = new System.Drawing.Size(200' 500);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.addPageToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.addPageToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddExitToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddExitToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddVerbToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddVerbToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddCommandToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddCommandToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddFunctionToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddFunctionToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.addTimerToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.addTimerToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.addTurnScriptToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.addTurnScriptToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddWalkthroughToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddWalkthroughToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddLibraryToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.AddLibraryToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(196' 6);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(196' 6);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.deleteToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.deleteToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(196' 6);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(196' 6);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.expandAllToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.expandAllToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.collapseAllToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.collapseAllToolStripMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.ctlTreeView.Location = new System.Drawing.Point(0' 20);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.ctlTreeView.Size = new System.Drawing.Size(289' 292);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.ctlTreeView.Size = new System.Drawing.Size(289' 292);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.ctlTreeView.TabIndex = 7;
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(289' 337);
Magic Number,TextAdventures.Quest.EditorControls,WFEditorTree,C:\repos\textadventures_quest\EditorControls\WFEditorTree.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(289' 337);
Magic Number,TextAdventures.Quest.EditorControls,WFElementsListControl,C:\repos\textadventures_quest\EditorControls\WFElementsListControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlListEditor.Size = new System.Drawing.Size(387' 229);
Magic Number,TextAdventures.Quest.EditorControls,WFElementsListControl,C:\repos\textadventures_quest\EditorControls\WFElementsListControl.cs,InitializeComponent,The following statement contains a magic number: this.ctlListEditor.Size = new System.Drawing.Size(387' 229);
Magic Number,TextAdventures.Quest.EditorControls,WFElementsListControl,C:\repos\textadventures_quest\EditorControls\WFElementsListControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(387' 229);
Magic Number,TextAdventures.Quest.EditorControls,WFElementsListControl,C:\repos\textadventures_quest\EditorControls\WFElementsListControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(387' 229);
Magic Number,TextAdventures.Quest.EditorControls,WFGamebookOptions,C:\repos\textadventures_quest\EditorControls\WFGamebookOptions.cs,InitializeComponent,The following statement contains a magic number: this.ctlListEditor.Size = new System.Drawing.Size(326' 269);
Magic Number,TextAdventures.Quest.EditorControls,WFGamebookOptions,C:\repos\textadventures_quest\EditorControls\WFGamebookOptions.cs,InitializeComponent,The following statement contains a magic number: this.ctlListEditor.Size = new System.Drawing.Size(326' 269);
Magic Number,TextAdventures.Quest.EditorControls,WFGamebookOptions,C:\repos\textadventures_quest\EditorControls\WFGamebookOptions.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(326' 269);
Magic Number,TextAdventures.Quest.EditorControls,WFGamebookOptions,C:\repos\textadventures_quest\EditorControls\WFGamebookOptions.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(326' 269);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitialiseColumnHeaders,The following statement contains a magic number: if (Style == ColumnStyle.OneColumn)              {                  ColumnHeader mainColumn = new ColumnHeader();                  lstList.Columns.Add(mainColumn);                  mainColumn.AutoResize(ColumnHeaderAutoResizeStyle.HeaderSize);                  lstList.HeaderStyle = ColumnHeaderStyle.None;                  lstList.FullRowSelect = false;              }              else              {                  ColumnHeader column1 = new ColumnHeader();                  column1.Text = m_headers[1];                  ColumnHeader column2 = new ColumnHeader();                  column2.Text = m_headers[2];                  lstList.Columns.Add(column1);                  lstList.Columns.Add(column2);                  lstList.HeaderStyle = ColumnHeaderStyle.Nonclickable;                  lstList.FullRowSelect = true;              }
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.lstList.Location = new System.Drawing.Point(0' 25);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.lstList.Size = new System.Drawing.Size(807' 247);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.lstList.Size = new System.Drawing.Size(807' 247);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.lstList.TabIndex = 5;
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.ctlToolStrip.Size = new System.Drawing.Size(807' 25);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.ctlToolStrip.Size = new System.Drawing.Size(807' 25);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.ctlToolStrip.TabIndex = 4;
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdAdd.Size = new System.Drawing.Size(49' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdAdd.Size = new System.Drawing.Size(49' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdAddNewPage.Size = new System.Drawing.Size(105' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdAddNewPage.Size = new System.Drawing.Size(105' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdLink.Size = new System.Drawing.Size(135' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdLink.Size = new System.Drawing.Size(135' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdEditKey.Size = new System.Drawing.Size(69' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdEditKey.Size = new System.Drawing.Size(69' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdEdit.Size = new System.Drawing.Size(47' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdEdit.Size = new System.Drawing.Size(47' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdDelete.Size = new System.Drawing.Size(60' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdDelete.Size = new System.Drawing.Size(60' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdMoveUp.Size = new System.Drawing.Size(75' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdMoveUp.Size = new System.Drawing.Size(75' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdMoveDown.Size = new System.Drawing.Size(91' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdMoveDown.Size = new System.Drawing.Size(91' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdGoToPage.Size = new System.Drawing.Size(85' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.cmdGoToPage.Size = new System.Drawing.Size(85' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(807' 272);
Magic Number,TextAdventures.Quest.EditorControls,WFListEditor,C:\repos\textadventures_quest\EditorControls\WFListEditor.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(807' 272);
Magic Number,TextAdventures.Quest.EditorControls,WFMultiControl,C:\repos\textadventures_quest\EditorControls\WFMultiControl.cs,InitializeComponent,The following statement contains a magic number: this.elementHost1.Size = new System.Drawing.Size(308' 170);
Magic Number,TextAdventures.Quest.EditorControls,WFMultiControl,C:\repos\textadventures_quest\EditorControls\WFMultiControl.cs,InitializeComponent,The following statement contains a magic number: this.elementHost1.Size = new System.Drawing.Size(308' 170);
Magic Number,TextAdventures.Quest.EditorControls,WFMultiControl,C:\repos\textadventures_quest\EditorControls\WFMultiControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(308' 170);
Magic Number,TextAdventures.Quest.EditorControls,WFMultiControl,C:\repos\textadventures_quest\EditorControls\WFMultiControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(308' 170);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.ctlToolStrip.Size = new System.Drawing.Size(495' 25);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.ctlToolStrip.Size = new System.Drawing.Size(495' 25);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.ctlToolStrip.TabIndex = 3;
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.cmdAdd.Size = new System.Drawing.Size(49' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.cmdAdd.Size = new System.Drawing.Size(49' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.cmdEdit.Size = new System.Drawing.Size(47' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.cmdEdit.Size = new System.Drawing.Size(47' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.cmdDelete.Size = new System.Drawing.Size(60' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.cmdDelete.Size = new System.Drawing.Size(60' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.cmdPlay.Size = new System.Drawing.Size(49' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.cmdPlay.Size = new System.Drawing.Size(49' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.cmdRecord.Size = new System.Drawing.Size(64' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.cmdRecord.Size = new System.Drawing.Size(64' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.cmdMoveUp.Size = new System.Drawing.Size(75' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.cmdMoveUp.Size = new System.Drawing.Size(75' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.cmdMoveDown.Size = new System.Drawing.Size(91' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.cmdMoveDown.Size = new System.Drawing.Size(91' 22);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(495' 26);
Magic Number,TextAdventures.Quest.EditorControls,WFToolbar,C:\repos\textadventures_quest\EditorControls\WFToolbar.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(495' 26);
Magic Number,TextAdventures.Quest.EditorControls,WFVerbsControl,C:\repos\textadventures_quest\EditorControls\WFVerbsControl.cs,WFVerbsControl,The following statement contains a magic number: ctlSplitContainer.SplitterDistance = 125;
Magic Number,TextAdventures.Quest.EditorControls,WFVerbsControl,C:\repos\textadventures_quest\EditorControls\WFVerbsControl.cs,WFVerbsControl,The following statement contains a magic number: lblAttributesTitle.Width = 60;
Missing Default,TextAdventures.Quest.EditorControls,AttributesControl,C:\repos\textadventures_quest\EditorControls\AttributesControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.attributesHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,CompassControl,C:\repos\textadventures_quest\EditorControls\CompassControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.dirNW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 2:              this.dirN = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 3:              this.dirNE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 4:              this.dirW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 5:              this.dirE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 6:              this.dirSW = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 7:              this.dirS = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 8:              this.dirSE = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 9:              this.dirUp = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 10:              this.dirDown = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 11:              this.dirIn = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 12:              this.dirOut = ((TextAdventures.Quest.EditorControls.CompassDirectionControl)(target));              return;              case 13:              this.compassEditor = ((TextAdventures.Quest.EditorControls.CompassEditorControl)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,CompassDirectionControl,C:\repos\textadventures_quest\EditorControls\CompassDirectionControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.border = ((System.Windows.Controls.Border)(target));              return;              case 2:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.noLinkDestination = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.destination = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.destinationLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 17 "..\..\CompassDirectionControl.xaml"              this.destinationLink.Click += new System.Windows.RoutedEventHandler(this.Hyperlink_Click);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,CompassEditorControl,C:\repos\textadventures_quest\EditorControls\CompassEditorControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.direction = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.createExitTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.toLabel = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.to = ((System.Windows.Controls.ComboBox)(target));                            #line 21 "..\..\CompassEditorControl.xaml"              this.to.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.to_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.toName = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.create = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\CompassEditorControl.xaml"              this.create.Click += new System.Windows.RoutedEventHandler(this.create_Click);                            #line default              #line hidden              return;              case 7:              this.edit = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\CompassEditorControl.xaml"              this.edit.Click += new System.Windows.RoutedEventHandler(this.edit_Click);                            #line default              #line hidden              return;              case 8:              this.chkCorresponding = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.corresponding = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.createCorresponding = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\CompassEditorControl.xaml"              this.createCorresponding.Click += new System.Windows.RoutedEventHandler(this.createCorresponding_Click);                            #line default              #line hidden              return;              case 11:              this.rectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.createLookOnlyTitle = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.createLookOnlyDesc = ((System.Windows.Controls.TextBlock)(target));              return;              case 14:              this.createLookOnly = ((System.Windows.Controls.Button)(target));                            #line 36 "..\..\CompassEditorControl.xaml"              this.createLookOnly.Click += new System.Windows.RoutedEventHandler(this.createLookOnly_Click);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,DictionaryScriptControl,C:\repos\textadventures_quest\EditorControls\DictionaryScriptControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.listHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,DictionaryStringControl,C:\repos\textadventures_quest\EditorControls\DictionaryStringControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.listHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,DropDownControl,C:\repos\textadventures_quest\EditorControls\DropDownControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.lstDropdown = ((System.Windows.Controls.ComboBox)(target));                            #line 9 "..\..\DropDownControl.xaml"              this.lstDropdown.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstDropdown_SelectionChanged);                            #line default              #line hidden                            #line 9 "..\..\DropDownControl.xaml"              this.lstDropdown.AddHandler(System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent' new System.Windows.Controls.TextChangedEventHandler(this.lstDropdown_TextChanged));                            #line default              #line hidden                            #line 9 "..\..\DropDownControl.xaml"              this.lstDropdown.DropDownOpened += new System.EventHandler(this.lstDropdown_DropDownOpened);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,DropDownFilterControl,C:\repos\textadventures_quest\EditorControls\DropDownFilterControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.lstDropdown = ((System.Windows.Controls.ComboBox)(target));                            #line 9 "..\..\DropDownFilterControl.xaml"              this.lstDropdown.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstDropdown_SelectionChanged);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,DropDownObjectsControl,C:\repos\textadventures_quest\EditorControls\DropDownObjectsControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.lstDropdown = ((System.Windows.Controls.ComboBox)(target));                            #line 9 "..\..\DropDownObjectsControl.xaml"              this.lstDropdown.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstDropdown_SelectionChanged);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,DropDownTypesControl,C:\repos\textadventures_quest\EditorControls\DropDownTypesControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.lstTypes = ((System.Windows.Controls.ComboBox)(target));                            #line 9 "..\..\DropDownTypesControl.xaml"              this.lstTypes.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstTypes_SelectionChanged);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,ElementsListControl,C:\repos\textadventures_quest\EditorControls\ElementsListControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.elementsListHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,ExitsControl,C:\repos\textadventures_quest\EditorControls\ExitsControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.compassControl = ((TextAdventures.Quest.EditorControls.CompassControl)(target));              return;              case 2:              this.toolbarHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              case 3:              this.listView = ((System.Windows.Controls.ListView)(target));                            #line 28 "..\..\ExitsControl.xaml"              this.listView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listView_SelectionChanged);                            #line default              #line hidden                            #line 28 "..\..\ExitsControl.xaml"              this.listView.MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.listView_MouseDoubleClick);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,ExpressionControl,C:\repos\textadventures_quest\EditorControls\ExpressionControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lstType = ((System.Windows.Controls.ComboBox)(target));                            #line 26 "..\..\ExpressionControl.xaml"              this.lstType.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstType_SelectionChanged);                            #line default              #line hidden              return;              case 3:              this.lstTemplate = ((System.Windows.Controls.ComboBox)(target));                            #line 27 "..\..\ExpressionControl.xaml"              this.lstTemplate.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstTemplate_SelectionChanged);                            #line default              #line hidden              return;              case 4:              this.txtExpression = ((System.Windows.Controls.TextBox)(target));                            #line 28 "..\..\ExpressionControl.xaml"              this.txtExpression.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.txtExpression_TextChanged);                            #line default              #line hidden                            #line 28 "..\..\ExpressionControl.xaml"              this.txtExpression.LostFocus += new System.Windows.RoutedEventHandler(this.txtExpression_LostFocus);                            #line default              #line hidden              return;              case 5:              this.cmdInsert = ((System.Windows.Controls.Button)(target));                            #line 29 "..\..\ExpressionControl.xaml"              this.cmdInsert.Click += new System.Windows.RoutedEventHandler(this.cmdInsert_Click);                            #line default              #line hidden              return;              case 6:              this.mnuInsertMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,ExpressionTemplate,C:\repos\textadventures_quest\EditorControls\ExpressionTemplate.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.stackPanel = ((System.Windows.Controls.StackPanel)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,FileControl,C:\repos\textadventures_quest\EditorControls\FileControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.fileDropDown = ((TextAdventures.Quest.EditorControls.FileDropDown)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,FileDropDown,C:\repos\textadventures_quest\EditorControls\FileDropDown.xaml.cs,SetFilename,The following switch statement is missing a default case: switch (result)                      {                          case MessageBoxResult.Yes:                              allowOverwrite = true;                              break;                          case MessageBoxResult.No:                              destFile = GetUniqueFilename(destFile);                              filename = Path.GetFileName(destFile);                              break;                          case MessageBoxResult.Cancel:                              return;                      }
Missing Default,TextAdventures.Quest.EditorControls,FileDropDown,C:\repos\textadventures_quest\EditorControls\FileDropDown.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.lstFiles = ((System.Windows.Controls.ComboBox)(target));                            #line 14 "..\..\FileDropDown.xaml"              this.lstFiles.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstFiles_SelectionChanged);                            #line default              #line hidden              return;              case 2:                            #line 26 "..\..\FileDropDown.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Browse_Click);                            #line default              #line hidden              return;              case 3:              this.newFileButton = ((System.Windows.Controls.Button)(target));                            #line 27 "..\..\FileDropDown.xaml"              this.newFileButton.Click += new System.Windows.RoutedEventHandler(this.NewFile_Click);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,FilePopUp,C:\repos\textadventures_quest\EditorControls\FilePopUp.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.fileDropDown = ((TextAdventures.Quest.EditorControls.FileDropDown)(target));              return;              case 2:              this.ok = ((System.Windows.Controls.Button)(target));                            #line 11 "..\..\FilePopUp.xaml"              this.ok.Click += new System.Windows.RoutedEventHandler(this.ok_OnClick);                            #line default              #line hidden              return;              case 3:              this.cancel = ((System.Windows.Controls.Button)(target));                            #line 12 "..\..\FilePopUp.xaml"              this.cancel.Click += new System.Windows.RoutedEventHandler(this.cancel_OnClick);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,FindControl,C:\repos\textadventures_quest\EditorControls\FindControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.InputGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.lblFind = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtFind = ((System.Windows.Controls.TextBox)(target));                            #line 25 "..\..\FindControl.xaml"              this.txtFind.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtFind_KeyDown);                            #line default              #line hidden              return;              case 4:              this.lblReplace = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.txtReplace = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\FindControl.xaml"              this.txtReplace.KeyDown += new System.Windows.Input.KeyEventHandler(this.txtReplace_KeyDown);                            #line default              #line hidden              return;              case 6:              this.chkBoxRegex = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.cmdFind = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\FindControl.xaml"              this.cmdFind.Click += new System.Windows.RoutedEventHandler(this.cmdFind_Click);                            #line default              #line hidden              return;              case 8:              this.cmdReplace = ((System.Windows.Controls.Button)(target));                            #line 33 "..\..\FindControl.xaml"              this.cmdReplace.Click += new System.Windows.RoutedEventHandler(this.cmdReplace_Click);                            #line default              #line hidden              return;              case 9:              this.cmdReplaceAll = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\FindControl.xaml"              this.cmdReplaceAll.Click += new System.Windows.RoutedEventHandler(this.cmdReplaceAll_Click);                            #line default              #line hidden              return;              case 10:              this.cmdClose = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\FindControl.xaml"              this.cmdClose.Click += new System.Windows.RoutedEventHandler(this.cmdClose_Click);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,GamebookOptions,C:\repos\textadventures_quest\EditorControls\GamebookOptions.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.listHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,GameIdControl,C:\repos\textadventures_quest\EditorControls\GameIdControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.textBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.cmdGenerate = ((System.Windows.Controls.Button)(target));                            #line 14 "..\..\GameIdControl.xaml"              this.cmdGenerate.Click += new System.Windows.RoutedEventHandler(this.cmdGenerate_Click);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,IfEditor,C:\repos\textadventures_quest\EditorControls\IfEditor.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.ctlChild = ((TextAdventures.Quest.EditorControls.IfEditorChild)(target));              return;              case 3:              this.cmdAddElseIf = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\IfEditor.xaml"              this.cmdAddElseIf.Click += new System.Windows.RoutedEventHandler(this.cmdAddElseIf_Click);                            #line default              #line hidden              return;              case 4:              this.cmdAddElse = ((System.Windows.Controls.Button)(target));                            #line 17 "..\..\IfEditor.xaml"              this.cmdAddElse.Click += new System.Windows.RoutedEventHandler(this.cmdAddElse_Click);                            #line default              #line hidden              return;              case 5:              this.ctlElse = ((TextAdventures.Quest.EditorControls.IfEditorChild)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,IfEditorChild,C:\repos\textadventures_quest\EditorControls\IfEditorChild.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.lblIf = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.ctlExpression = ((TextAdventures.Quest.EditorControls.ExpressionControl)(target));              return;              case 3:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\IfEditorChild.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 4:              this.ctlScriptExpander = ((TextAdventures.Quest.EditorControls.ScriptExpander)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,LabelControl,C:\repos\textadventures_quest\EditorControls\LabelControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.textblock = ((System.Windows.Controls.TextBlock)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,MultiControl,C:\repos\textadventures_quest\EditorControls\MultiControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.controlRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.lblSelfCaption = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.lstTypes = ((System.Windows.Controls.ComboBox)(target));                            #line 16 "..\..\MultiControl.xaml"              this.lstTypes.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.lstTypes_SelectionChanged);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,PatternControl,C:\repos\textadventures_quest\EditorControls\PatternControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.textBox = ((System.Windows.Controls.TextBox)(target));                            #line 9 "..\..\PatternControl.xaml"              this.textBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.textBox_TextChanged);                            #line default              #line hidden                            #line 9 "..\..\PatternControl.xaml"              this.textBox.LostFocus += new System.Windows.RoutedEventHandler(this.textBox_LostFocus);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,PopOut,C:\repos\textadventures_quest\EditorControls\PopOut.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.grid = ((System.Windows.Controls.Grid)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,RichTextControl,C:\repos\textadventures_quest\EditorControls\RichTextControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.textBox = ((System.Windows.Controls.TextBox)(target));                            #line 14 "..\..\RichTextControl.xaml"              this.textBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.textBox_TextChanged);                            #line default              #line hidden                            #line 14 "..\..\RichTextControl.xaml"              this.textBox.LostFocus += new System.Windows.RoutedEventHandler(this.textBox_LostFocus);                            #line default              #line hidden              return;              case 2:              this.textProcessorOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 3:              this.stackCommandButtons = ((System.Windows.Controls.StackPanel)(target));              return;              case 4:                            #line 17 "..\..\RichTextControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).Click += new System.Windows.RoutedEventHandler(this.Hyperlink_Click);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,ScriptAdder,C:\repos\textadventures_quest\EditorControls\ScriptAdder.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.commonButtons = ((System.Windows.Controls.StackPanel)(target));              return;              case 2:              this.treeHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              case 3:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\ScriptAdder.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden              return;              case 4:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 24 "..\..\ScriptAdder.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.closeButton_Click);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,ScriptAdderPopOut,C:\repos\textadventures_quest\EditorControls\ScriptAdderPopOut.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ctlScriptAdder = ((TextAdventures.Quest.EditorControls.ScriptAdder)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,ScriptEditorPopOut,C:\repos\textadventures_quest\EditorControls\ScriptEditorPopOut.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ctlScriptEditor = ((TextAdventures.Quest.EditorControls.ScriptEditorControl)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,ScriptExpander,C:\repos\textadventures_quest\EditorControls\ScriptExpander.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ctlExpander = ((System.Windows.Controls.Expander)(target));                            #line 10 "..\..\ScriptExpander.xaml"              this.ctlExpander.Expanded += new System.Windows.RoutedEventHandler(this.ctlExpander_Expanded);                            #line default              #line hidden              return;              case 2:              this.header = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 14 "..\..\ScriptExpander.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 4:              this.ctlScript = ((TextAdventures.Quest.EditorControls.ScriptEditorControl)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,ScriptToolbar,C:\repos\textadventures_quest\EditorControls\ScriptToolbar.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.cmdMakeEditable = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ScriptToolbar.xaml"              this.cmdMakeEditable.Click += new System.Windows.RoutedEventHandler(this.cmdMakeEditable_Click);                            #line default              #line hidden              return;              case 2:              this.cmdDelete = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ScriptToolbar.xaml"              this.cmdDelete.Click += new System.Windows.RoutedEventHandler(this.cmdDelete_Click);                            #line default              #line hidden              return;              case 3:              this.cmdMoveUp = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ScriptToolbar.xaml"              this.cmdMoveUp.Click += new System.Windows.RoutedEventHandler(this.cmdMoveUp_Click);                            #line default              #line hidden              return;              case 4:              this.cmdMoveDown = ((System.Windows.Controls.Button)(target));                            #line 28 "..\..\ScriptToolbar.xaml"              this.cmdMoveDown.Click += new System.Windows.RoutedEventHandler(this.cmdMoveDown_Click);                            #line default              #line hidden              return;              case 5:              this.cmdCut = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\ScriptToolbar.xaml"              this.cmdCut.Click += new System.Windows.RoutedEventHandler(this.cmdCut_Click);                            #line default              #line hidden              return;              case 6:              this.cmdCopy = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ScriptToolbar.xaml"              this.cmdCopy.Click += new System.Windows.RoutedEventHandler(this.cmdCopy_Click);                            #line default              #line hidden              return;              case 7:              this.cmdPaste = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\ScriptToolbar.xaml"              this.cmdPaste.Click += new System.Windows.RoutedEventHandler(this.cmdPaste_Click);                            #line default              #line hidden              return;              case 8:              this.codeViewSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 9:              this.cmdCodeView = ((System.Windows.Controls.Primitives.ToggleButton)(target));                            #line 42 "..\..\ScriptToolbar.xaml"              this.cmdCodeView.Click += new System.Windows.RoutedEventHandler(this.cmdCodeView_OnClick);                            #line default              #line hidden              return;              case 10:              this.popOutSeparator = ((System.Windows.Controls.Separator)(target));              return;              case 11:              this.cmdPopOut = ((System.Windows.Controls.Button)(target));                            #line 46 "..\..\ScriptToolbar.xaml"              this.cmdPopOut.Click += new System.Windows.RoutedEventHandler(this.cmdPopOut_Click);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,TitleControl,C:\repos\textadventures_quest\EditorControls\TitleControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.label = ((System.Windows.Controls.Label)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,VerbsControl,C:\repos\textadventures_quest\EditorControls\VerbsControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.attributesHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,CheckBoxControl,C:\repos\textadventures_quest\EditorControls\CheckBoxControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.checkBox = ((System.Windows.Controls.CheckBox)(target));                            #line 9 "..\..\CheckBoxControl.xaml"              this.checkBox.Click += new System.Windows.RoutedEventHandler(this.checkBox_Click);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,ElementEditor,C:\repos\textadventures_quest\EditorControls\ElementEditor.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.tabControl = ((System.Windows.Controls.TabControl)(target));              return;              }
Missing Default,TextAdventures.Quest.EditorControls,ListStringControl,C:\repos\textadventures_quest\EditorControls\ListStringControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.toolbarHost = ((System.Windows.Forms.Integration.WindowsFormsHost)(target));              return;              case 2:              this.listBox = ((System.Windows.Controls.ListBox)(target));                            #line 19 "..\..\ListStringControl.xaml"              this.listBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listBox_SelectionChanged);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,ListStringControl,C:\repos\textadventures_quest\EditorControls\ListStringControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 3:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.Controls.Control.MouseDoubleClickEvent;                            #line 27 "..\..\ListStringControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.ListItemDoubleClick);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Missing Default,TextAdventures.Quest.EditorControls,TextBoxControl,C:\repos\textadventures_quest\EditorControls\TextBoxControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.textBox = ((System.Windows.Controls.TextBox)(target));                            #line 9 "..\..\TextBoxControl.xaml"              this.textBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.textBox_TextChanged);                            #line default              #line hidden                            #line 9 "..\..\TextBoxControl.xaml"              this.textBox.LostFocus += new System.Windows.RoutedEventHandler(this.textBox_LostFocus);                            #line default              #line hidden              return;              }
Missing Default,TextAdventures.Quest.EditorControls,VerbsSubEditorControlData,C:\repos\textadventures_quest\EditorControls\WFVerbsControl.cs,GetString,The following switch statement is missing a default case: switch (tag)                  {                      case "keyname":                          return "Object";                      case "keyprompt":                          return "Please enter the object name";                      case "source":                          return "object";                  }
