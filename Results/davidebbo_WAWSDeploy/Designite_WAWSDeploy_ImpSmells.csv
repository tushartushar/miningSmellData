Implementation smell,Namespace,Class,File,Method,Description
Long Method,WAWSDeploy,PublishSettings,C:\repos\davidebbo_WAWSDeploy\WAWSDeploy\PublishSettings.cs,Load,The method has 111 lines of code.
Complex Method,WAWSDeploy,PublishSettings,C:\repos\davidebbo_WAWSDeploy\WAWSDeploy\PublishSettings.cs,Load,Cyclomatic complexity of the method is 9
Long Parameter List,WAWSDeploy,WebDeployHelper,C:\repos\davidebbo_WAWSDeploy\WAWSDeploy\WebDeployHelper.cs,DeployContentToOneSite,The method has 10 parameters. Parameters: sourcePath' publishSettingsFile' password' allowUntrusted' doNotDelete' traceLevel' whatIf' targetPath' useChecksum' appOfflineEnabled
Magic Number,WAWSDeploy,Program,C:\repos\davidebbo_WAWSDeploy\WAWSDeploy\Program.cs,Main,The following statement contains a magic number: if (args.Length < 2)              {                  WriteLine(@"WAWSDeploy version {0}"' typeof(Program).Assembly.GetName().Version);                  WriteLine(@"Usage: WAWSDeploy.exe c:\SomeFolder MySite.PublishSettings [flags]");                  WriteLine(@"Options:");                  WriteLine(@" /p  /password: provide the password if it's not in the profile");                  WriteLine(@" /d  /DeleteExistingFiles: delete target files that don't exist at the source");                  WriteLine(@" /au /AllowUntrusted: skip cert verification");                  WriteLine(@" /v  /Verbose: Verbose mode");                  WriteLine(@" /w  /WhatIf: don't actually perform the publishing");                  WriteLine(@" /t  /TargetPath: the virtual or physical directory to deploy to");                  WriteLine(@" /c  /cs: use checksum");                  WriteLine(@" /o  /AppOffline: automatically take an ASP.Net application offline before publishing to it.");                  return;              }
