Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Tests,MemoryHostExtensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\MemoryHostExtensions.cs,Post,The method has 5 parameters. Parameters: host' uri' content' contentType' accept
Long Parameter List,Tests,MemoryHostExtensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\MemoryHostExtensions.cs,ExecuteMethod,The method has 6 parameters. Parameters: host' uri' method' content' contentType' headers
Long Statement,Tests.Infrastructure,TaskApi,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Infrastructure\TaskApi.cs,Configure,The length of the statement  "      //If request does not pass a Authorization header then pipeline will continue and not try to authenticate with Basic auth" is 121.
Long Statement,Tests.Infrastructure,TestExtensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Infrastructure\TestExtensions.cs,ShouldHaveSameElementsAs,The length of the statement  "              $"Two elements didnt match at index {index}:\nactual:\n{actualEnumerator.Current}\nexpected:\n{expectedEnumerator.Current}");" is 125.
Long Statement,Tests.Plugins.Hydra.Implementation,HostExtensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\Implementation\HostExtensions.cs,GetJsonLdContent,The length of the statement  "      return JObject.Parse(responseBody'new JsonLoadSettings(){DuplicatePropertyNameHandling = DuplicatePropertyNameHandling.Error});" is 127.
Long Statement,Tests.Plugins.Hydra.Implementation,HostExtensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\Implementation\HostExtensions.cs,GetJsonLd,The length of the statement  "      return (response'JObject.Parse(responseBody' new JsonLoadSettings(){DuplicatePropertyNameHandling = DuplicatePropertyNameHandling.Error}));" is 139.
Long Statement,Tests.Plugins.Hydra.Implementation,HostExtensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\Implementation\HostExtensions.cs,PostJsonLd,The length of the statement  "      return (response'JObject.Parse(responseBody'new JsonLoadSettings(){DuplicatePropertyNameHandling = DuplicatePropertyNameHandling.Error}));" is 138.
Long Statement,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_503_handlers_temporarily,The length of the statement  "        List<(HttpResponseMessage httpResponseMessage' string content)> response = new List<(HttpResponseMessage httpResponseMessage' string content)>();" is 145.
Long Statement,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_503_handlers_temporarily,The length of the statement  "            var httpResponseMessage = await client.SendAsync(new HttpRequestMessage(HttpMethod.Get' "http://nowhere.example/path"));" is 120.
Long Statement,Tests.Plugins.ReverseProxy.Implementation,ProxyApiTo,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy\Implementation\ProxyApiTo.cs,Configure,The length of the statement  "      ResourceSpace.Uses.Dependency(d => d.Transient((ICommunicationContext context) => new ProxiedHandler(context' operation)));" is 123.
Empty Catch Block,Tests,TestHttpListener,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\TestHttpListener.cs,TestHttpListener,The method has an empty catch block.
Empty Catch Block,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_throwing_handlers,The method has an empty catch block.
Magic Number,Tests.Configuration.Dependencies,registering_factory_with_2_args,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Configuration.Dependencies\registering_factory_with_2_args.cs,type_is_resolved_with_correct_dependencies,The following statement contains a magic number: resolved.ShouldHaveDependencies(2);
Magic Number,Tests.Configuration.Dependencies,registering_factory_with_3_args,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Configuration.Dependencies\registering_factory_with_3_args.cs,type_is_resolved_with_correct_dependencies,The following statement contains a magic number: resolved.ShouldHaveDependencies(3);
Magic Number,Tests.Configuration.Dependencies,registering_factory_with_4_args,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Configuration.Dependencies\registering_factory_with_4_args.cs,type_is_resolved_with_correct_dependencies,The following statement contains a magic number: resolved.ShouldHaveDependencies(4);
Magic Number,Tests,TestHttpListener,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\TestHttpListener.cs,TestHttpListener,The following statement contains a magic number: Port = Random.Next(2048' 4096);
Magic Number,Tests,TestHttpListener,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\TestHttpListener.cs,TestHttpListener,The following statement contains a magic number: Port = Random.Next(2048' 4096);
Magic Number,Tests.Pipeline.Initializer.contributor_throwing,pipeline_building_context,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Initializer\contributor_throwing\pipeline_building_context.cs,always_returns_500,The following statement contains a magic number: var is500 = Context.Response.StatusCode == 500 ||                   Context.OperationResult.IsServerError;
Magic Number,Tests.Pipeline.Initializer.contributor_throwing,throws_always_in_response_phase,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Initializer\contributor_throwing\throws_always_in_response_phase.cs,always_has_server_error,The following statement contains a magic number: Context.ServerErrors.Count.ShouldBe(2);
Magic Number,Tests.Pipeline.Middleware.Conversion,request,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Middleware\Conversion\request.cs,convers_to_pre_exec_contrib,The following statement contains a magic number: middlewareChain[2].ShouldBeOfType<RequestMiddleware>();
Magic Number,Tests.Pipeline.Middleware.Conversion,response,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Middleware\Conversion\response.cs,convert_to_post_execute_middleware,The following statement contains a magic number: middlewareChain[2].ShouldBeOfType<OpenRasta.Pipeline.ResponseRetryMiddleware>();
Magic Number,Tests.Pipeline.Middleware.Conversion,response,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Middleware\Conversion\response.cs,convert_to_post_execute_middleware,The following statement contains a magic number: middlewareChain[3].ShouldBeOfType<ResponseMiddleware>();
Magic Number,Tests.Pipeline.Middleware.Conversion,response,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Middleware\Conversion\response.cs,convert_to_post_execute_middleware,The following statement contains a magic number: middlewareChain[4].ShouldBeOfType<PostExecuteMiddleware>();
Magic Number,Tests.Pipeline.Middleware.Conversion,response,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Middleware\Conversion\response.cs,convert_to_post_execute_middleware,The following statement contains a magic number: middlewareChain[5].ShouldBeOfType<PostExecuteMiddleware>();
Magic Number,Tests.Pipeline.Middleware.Diagnostics,enabled,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Middleware\Diagnostics\enabled.cs,logging_is_injected,The following statement contains a magic number: var factories = pipeline.MiddlewareFactories          .Where((factory' i) => i % 2 == 0)          .ToList();
Magic Number,Tests.Pipeline.Middleware.Diagnostics,enabled,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Middleware\Diagnostics\enabled.cs,logging_is_injected,The following statement contains a magic number: factories.Count().ShouldBe(pipeline.MiddlewareFactories.Count() / 2);
Magic Number,Tests.Pipeline.Middleware.ResponseRetryMiddleware,pipeline_RenderNow_once,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Middleware\ResponseRetryMiddleware\pipeline_RenderNow_once.cs,pipeline_is_reexecuted,The following statement contains a magic number: NextCallCount.ShouldBe(2);
Magic Number,Tests.Pipeline.Middleware.ResponseRetryMiddleware,pipeline_RenderNow_then_throws,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Middleware\ResponseRetryMiddleware\pipeline_RenderNow_then_throws.cs,pipeline_is_reexecuted,The following statement contains a magic number: NextCallCount.ShouldBe(2);
Magic Number,Tests.Pipeline.Middleware.ResponseRetryMiddleware,pipeline_RenderNow_twice,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Middleware\ResponseRetryMiddleware\pipeline_RenderNow_twice.cs,pipeline_is_reexecuted,The following statement contains a magic number: NextCallCount.ShouldBe(2);
Magic Number,Tests.Pipeline.Middleware.ResponseRetryMiddleware,pipeline_throws_once,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Middleware\ResponseRetryMiddleware\pipeline_throws_once.cs,pipeline_is_reexecuted,The following statement contains a magic number: NextCallCount.ShouldBe(2);
Magic Number,Tests.Pipeline.Middleware.ResponseRetryMiddleware,pipeline_throws_twice,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Middleware\ResponseRetryMiddleware\pipeline_throws_twice.cs,pipeline_is_reexecuted,The following statement contains a magic number: NextCallCount.ShouldBe(2);
Magic Number,Tests.Pipeline.Middleware.ResponseRetryMiddleware,pipeline_throws_twice,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Pipeline.Middleware\ResponseRetryMiddleware\pipeline_throws_twice.cs,original_exception_is_recorded,The following statement contains a magic number: Env.ServerErrors.Count.ShouldBe(2);
Magic Number,Tests.Plugins.Caching.conditionals.if_match,matching,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\conditionals\if_match\matching.cs,returns_200,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 200);
Magic Number,Tests.Plugins.Caching.conditionals.if_match,not_matching,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\conditionals\if_match\not_matching.cs,returns_not_modified,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 304);
Magic Number,Tests.Plugins.Caching.conditionals.if_modified_since,invalid_header_combinations,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\conditionals\if_modified_since\invalid_header_combinations.cs,invalid_header_combination,The following statement contains a magic number: given_request_header("if-modified-since"' now - 2.Minutes());
Magic Number,Tests.Plugins.Caching.conditionals.if_modified_since,invalid_header_combinations,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\conditionals\if_modified_since\invalid_header_combinations.cs,invalid_header_combination,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 200);
Magic Number,Tests.Plugins.Caching.conditionals.if_modified_since,invalid_value,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\conditionals\if_modified_since\invalid_value.cs,conditional_ignored,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 200);
Magic Number,Tests.Plugins.Caching.conditionals.if_modified_since,last_modified_in_future,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\conditionals\if_modified_since\last_modified_in_future.cs,not_modified,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 304);
Magic Number,Tests.Plugins.Caching.conditionals.if_modified_since,unmodified,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\conditionals\if_modified_since\unmodified.cs,request_successful,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 304);
Magic Number,Tests.Plugins.Caching.conditionals.if_none_match,matching,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\conditionals\if_none_match\matching.cs,returns_not_modified,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 304);
Magic Number,Tests.Plugins.Caching.conditionals.if_none_match,not_matching,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\conditionals\if_none_match\not_matching.cs,returns_precondition_failed,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 200);
Magic Number,Tests.Plugins.Caching.etag,valid,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\etag\valid.cs,request_successful,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 200);
Magic Number,Tests.Plugins.Caching,extensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\extensions.cs,after_date,The following statement contains a magic number: now.ShouldBeGreaterThan(now - 2.Hours());
Magic Number,Tests.Plugins.Caching,extensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\extensions.cs,before_date,The following statement contains a magic number: now.ShouldBeLessThan(now + 2.Hours());
Magic Number,Tests.Plugins.Caching.last_modified,already_set,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\last_modified\already_set.cs,request_successful,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 200);
Magic Number,Tests.Plugins.Caching.last_modified,in_future,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\last_modified\in_future.cs,request_successful,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 200);
Magic Number,Tests.Plugins.Caching.last_modified,not_mapped,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\last_modified\not_mapped.cs,request_successful,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 200);
Magic Number,Tests.Plugins.Caching.last_modified,null,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\last_modified\null.cs,request_successful,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 200);
Magic Number,Tests.Plugins.Caching.last_modified,valid,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\last_modified\valid.cs,request_successful,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 200);
Magic Number,Tests.Plugins.Caching.response_cache_control.handler_attribute,browser_attribute_with_max_age,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\response_cache_control\handler_attribute\browser_attribute_with_max_age.cs,response_is_ok,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 200);
Magic Number,Tests.Plugins.Caching.response_cache_control.handler_attribute,not_set,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\response_cache_control\handler_attribute\not_set.cs,response_is_ok,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 200);
Magic Number,Tests.Plugins.Caching.response_cache_control.handler_attribute,proxy_attribute_with_max_age,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Caching\response_cache_control\handler_attribute\proxy_attribute_with_max_age.cs,response_is_ok,The following statement contains a magic number: response.StatusCode.ShouldBe(expected: 200);
Magic Number,Tests.Scenarios.HandlerSelection.Plugins.Diagnostics,trace_method,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Diagnostics\trace_method.cs,request_is_returned,The following statement contains a magic number: response.StatusCode.ShouldBe(200);
Magic Number,Tests.Plugins.Hydra.Implementation,HostExtensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\Implementation\HostExtensions.cs,GetJsonLdContent,The following statement contains a magic number: response.StatusCode / 100 != 2
Magic Number,Tests.Plugins.Hydra.Implementation,HostExtensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\Implementation\HostExtensions.cs,GetJsonLdContent,The following statement contains a magic number: response.StatusCode / 100 != 2
Magic Number,Tests.Plugins.Hydra.Implementation,HostExtensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\Implementation\HostExtensions.cs,GetJsonLdString,The following statement contains a magic number: response.StatusCode / 100 != 2
Magic Number,Tests.Plugins.Hydra.Implementation,HostExtensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\Implementation\HostExtensions.cs,GetJsonLdString,The following statement contains a magic number: response.StatusCode / 100 != 2
Magic Number,Tests.Plugins.Hydra.Implementation,HostExtensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\Implementation\HostExtensions.cs,GetJsonLd,The following statement contains a magic number: response.StatusCode / 100 != 2
Magic Number,Tests.Plugins.Hydra.Implementation,HostExtensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\Implementation\HostExtensions.cs,GetJsonLd,The following statement contains a magic number: response.StatusCode / 100 != 2
Magic Number,Tests.Plugins.Hydra.Implementation,HostExtensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\Implementation\HostExtensions.cs,PostJsonLd,The following statement contains a magic number: response.StatusCode / 100 != 2
Magic Number,Tests.Plugins.Hydra.Implementation,HostExtensions,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\Implementation\HostExtensions.cs,PostJsonLd,The following statement contains a magic number: response.StatusCode / 100 != 2
Magic Number,Tests.Plugins.Hydra.nodes,collection,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\nodes\collection.cs,content_is_correct,The following statement contains a magic number: body["totalItems"].ShouldBe(2);
Magic Number,Tests.Plugins.Hydra.nodes,custom_collection_type,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\nodes\custom_collection_type.cs,content_is_correct,The following statement contains a magic number: body["totalItems"].ShouldBe(2);
Magic Number,Tests.Plugins.Hydra.nodes,Handler,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\nodes\custom_collection_type.cs,Get,The following statement contains a magic number: return new EventCollection         {           new Event {Id = 1' Customer = new Customer {Name = "Boromear"}}'           new Event           {Id = 2' Customers =           {             new Customer {Name = "An elf"}'             new Customer {Name = "Another elf"}'           }}         };
Magic Number,Tests.Plugins.Hydra.nodes,EventHandler,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\nodes\EventHandler.cs,Get,The following statement contains a magic number: return new List<Event>       {         new Event {Id = 1' Customer = new Customer {Name = "Boromear"}}'         new Event         {Id = 2' Customers =         {           new Customer {Name = "An elf"}'           new Customer {Name = "Another elf"}'         }}       };
Magic Number,Tests.Plugins.Hydra.wf,SchemaHandler,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\wf\SchemaHandler.cs,Get,The following statement contains a magic number: return Task.FromResult(         new Schema         {           new VariableType           {             Scheme = "Royal Mail"'             Taxonomy = "Postal Address File"'             Classification = "Postal Address"'             Index = 0'             Name = "Property Address Key"'             Range = "String"'             AvailableVariables = new List<Variable>             {               new Variable               {                 Scheme = "Royal Mail"'                 Taxonomy = "Postal Address File"'                 Classification = "Postal Address"'                 Provider = "CLS"'                 Source = "Titles"'                 Provenance = new Provenance                 {                   Provider = "CLS"'                   Source = "Titles"                 }'                 Ghost = false'                 Multiplicity = 2' // A Title can have more than one                 MinPrice = new MonetaryAmount(0.01m' "GBP")'                 MaxPrice = new MonetaryAmount(0.01m' "GBP")               }             }'             Section = new KeyValuePair<int' string>(0' "Geography")'             Group = new KeyValuePair<int' string>(0' "Address")'           }         });
Magic Number,Tests.Plugins.Hydra.wf,SchemaHandler,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\wf\SchemaHandler.cs,Get,The following statement contains a magic number: return Task.FromResult(         new Schema         {           new VariableType           {             Scheme = "Royal Mail"'             Taxonomy = "Postal Address File"'             Classification = "Postal Address"'             Index = 0'             Name = "Property Address Key"'             Range = "String"'             AvailableVariables = new List<Variable>             {               new Variable               {                 Scheme = "Royal Mail"'                 Taxonomy = "Postal Address File"'                 Classification = "Postal Address"'                 Provider = "CLS"'                 Source = "Titles"'                 Provenance = new Provenance                 {                   Provider = "CLS"'                   Source = "Titles"                 }'                 Ghost = false'                 Multiplicity = 2' // A Title can have more than one                 MinPrice = new MonetaryAmount(0.01m' "GBP")'                 MaxPrice = new MonetaryAmount(0.01m' "GBP")               }             }'             Section = new KeyValuePair<int' string>(0' "Geography")'             Group = new KeyValuePair<int' string>(0' "Address")'           }         });
Magic Number,Tests.Plugins.Hydra.wf,SchemaHandler,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.Hydra\wf\SchemaHandler.cs,Get,The following statement contains a magic number: return Task.FromResult(         new Schema         {           new VariableType           {             Scheme = "Royal Mail"'             Taxonomy = "Postal Address File"'             Classification = "Postal Address"'             Index = 0'             Name = "Property Address Key"'             Range = "String"'             AvailableVariables = new List<Variable>             {               new Variable               {                 Scheme = "Royal Mail"'                 Taxonomy = "Postal Address File"'                 Classification = "Postal Address"'                 Provider = "CLS"'                 Source = "Titles"'                 Provenance = new Provenance                 {                   Provider = "CLS"'                   Source = "Titles"                 }'                 Ghost = false'                 Multiplicity = 2' // A Title can have more than one                 MinPrice = new MonetaryAmount(0.01m' "GBP")'                 MaxPrice = new MonetaryAmount(0.01m' "GBP")               }             }'             Section = new KeyValuePair<int' string>(0' "Geography")'             Group = new KeyValuePair<int' string>(0' "Address")'           }         });
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_503_handlers_temporarily,The following statement contains a magic number: var retryHandler = new DelegateHandler((message' token) =>       {         if (Interlocked.Exchange(ref timedOut' 1) == 0)           return Task.FromResult(new HttpResponseMessage()           {             StatusCode = HttpStatusCode.ServiceUnavailable'             Headers = {RetryAfter = new RetryConditionHeaderValue(TimeSpan.FromSeconds(5))}           });         return Task.FromResult(new HttpResponseMessage()         {           StatusCode = HttpStatusCode.OK'           Content = new StringContent("reactivated")         });       });
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_503_handlers_temporarily,The following statement contains a magic number: var factory = new RoundRobinHttpClientFactory(2' () => handlerIndex++ *2 == 0 ? activeHandler : retryHandler);
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_503_handlers_temporarily,The following statement contains a magic number: var factory = new RoundRobinHttpClientFactory(2' () => handlerIndex++ *2 == 0 ? activeHandler : retryHandler);
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_503_handlers_temporarily,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(6));
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_503_handlers_temporarily,The following statement contains a magic number: responsesAfter.Count(r => r.content == "reactivated").ShouldBe(5);
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_503_handlers_temporarily,The following statement contains a magic number: responsesAfter.Count(r => r.content == "active").ShouldBe(5);
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_503_handlers_temporarily,The following statement contains a magic number: i < 10
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_handlers_after_timeout,The following statement contains a magic number: var factory = new RoundRobinHttpClientFactory(1' createHandler' TimeSpan.FromSeconds(5));
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_handlers_after_timeout,The following statement contains a magic number: var clients = Enumerable.Range(0' 10).Select(i => factory.GetClient()).ToList();
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_handlers_after_timeout,The following statement contains a magic number: clients.Count.ShouldBe(10);
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_handlers_after_timeout,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(6));
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_handlers_after_timeout,The following statement contains a magic number: clients = Enumerable.Range(0' 10).Select(i => factory.GetClient()).ToList();
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_handlers_after_timeout,The following statement contains a magic number: clients.Count.ShouldBe(10);
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,evicts_handlers_after_timeout,The following statement contains a magic number: createdHandlers.Count.ShouldBe(2);
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,disposes_handlers_once_out_of_scope,The following statement contains a magic number: WaitForDispose(handler' TimeSpan.FromSeconds(15));
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,WaitForDispose,The following statement contains a magic number: timeout = timeout ?? TimeSpan.FromSeconds(20);
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,WaitForDispose,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced' true' true);
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,evicting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\evicting_clients.cs,WaitForDispose,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced' true' true);
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,getting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\getting_clients.cs,creates_as_many_handlers_as_requested_count,The following statement contains a magic number: var factory = new RoundRobinHttpClientFactory(5' createHandler' Timeout.InfiniteTimeSpan);
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,getting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\getting_clients.cs,creates_as_many_handlers_as_requested_count,The following statement contains a magic number: var clients = Enumerable.Range(0' 10).Select(i => factory.GetClient()).ToList();
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,getting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\getting_clients.cs,creates_as_many_handlers_as_requested_count,The following statement contains a magic number: clients.Distinct().Count().ShouldBe(10);
Magic Number,Tests.Plugins.ReverseProxy.LoadBalancingHttpClientFactory,getting_clients,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy.LoadBalancingHttpClientFactory\getting_clients.cs,creates_as_many_handlers_as_requested_count,The following statement contains a magic number: createdHandlers.Count.ShouldBe(5);
Magic Number,Tests.Plugins.ReverseProxy,ReproReverseProxyResponse,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy\corefx_repro.cs,ReproReverseProxyResponse,The following statement contains a magic number: StatusCode = statusCode ?? (responseMessage != null ? (int)responseMessage.StatusCode : 500);
Magic Number,Tests.Plugins.ReverseProxy.Implementation,ProxyServer,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy\Implementation\ProxyServer.cs,CreateKestrelFromServer,The following statement contains a magic number: var host =         new WebHostBuilder()           .Configure(app =>           {             app.UseOpenRasta(               new ProxyApiFrom(_fromUri(80)' _toUri(toPort)' options));           })           .UseKestrel()           .UseUrls("http://127.0.0.1:0")           .Build();
Magic Number,Tests.Plugins.ReverseProxy.Implementation,ProxyServer,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy\Implementation\ProxyServer.cs,CreateKestrelToServer,The following statement contains a magic number: var host =         new WebHostBuilder()           .UseKestrel()           .UseUrls("http://127.0.0.1:0")           .Configure(app =>           {             app.UseOpenRasta(               new ProxyApiTo(                 _toResourceRegistration ?? _toUri(80)'                 options'                 _handler));           })           .Build();
Magic Number,Tests.Plugins.ReverseProxy.Implementation,ProxyServer,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy\Implementation\ProxyServer.cs,CreateToServer,The following statement contains a magic number: return _toServer = new TestServer(         new WebHostBuilder()           .Configure(app =>           {             app.UseOpenRasta(               new ProxyApiTo(                 _toResourceRegistration ?? _toUri(80)'                 options'                 _handler));           }));
Magic Number,Tests.Plugins.ReverseProxy.Implementation,ProxyServer,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy\Implementation\ProxyServer.cs,CreateFromServer,The following statement contains a magic number: return new TestServer(         new WebHostBuilder()           .Configure(app =>           {             app.UseOpenRasta(               new ProxyApiFrom(_fromUri(80)' _toUri(80)' options));           }));
Magic Number,Tests.Plugins.ReverseProxy.Implementation,ProxyServer,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Plugins.ReverseProxy\Implementation\ProxyServer.cs,CreateFromServer,The following statement contains a magic number: return new TestServer(         new WebHostBuilder()           .Configure(app =>           {             app.UseOpenRasta(               new ProxyApiFrom(_fromUri(80)' _toUri(80)' options));           }));
Magic Number,Tests.Scenarios.HandlerSelection.Scenarios.Codecs,async_media_type_reader,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.Codecs\async_media_type_reader.cs,is_processed,The following statement contains a magic number: response.StatusCode.ShouldBe(204);
Magic Number,Tests.Scenarios.HandlerSelection.Scenarios.Codecs,async_media_type_writer,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.Codecs\async_media_type_writer.cs,is_processed,The following statement contains a magic number: response.StatusCode.ShouldBe(200);
Magic Number,Tests.Scenarios.HandlerSelection.Scenarios.Codecs,async_media_type_writer,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.Codecs\async_media_type_writer.cs,is_processed,The following statement contains a magic number: (await response.Entity.Stream.ReadToEndAsync())         .ShouldBe(new byte[] {42});
Magic Number,Tests.Scenarios.HandlerSelection.Scenarios.Codecs,DemoResourceWriter,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.Codecs\async_media_type_writer.cs,WriteTo,The following statement contains a magic number: response.Stream.WriteByte(42);
Magic Number,Tests.Scenarios.HandlerSelection.Scenarios.Codecs,codec_used_with_optional_parameters,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.Codecs\codec_used_with_optional_parameters.cs,parses_to_the_correct_parameter_for_old_style,The following statement contains a magic number: response.StatusCode.ShouldBe(200);
Magic Number,Tests.Scenarios.HandlerSelection.Scenarios.Codecs,codec_used_with_optional_parameters,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.Codecs\codec_used_with_optional_parameters.cs,parses_to_the_correct_parameter_for_new_style,The following statement contains a magic number: response.StatusCode.ShouldBe(200);
Magic Number,Tests.Scenarios.HandlerSelection.Scenarios.Codecs,content_extension_with_throwing_handler,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.Codecs\content_extension_with_throwing_handler.cs,content_type_in_extension_overrides_conneg,The following statement contains a magic number: var server = new InMemoryHost(() =>       {         ResourceSpace.Uses.UriDecorator<ContentTypeExtensionUriDecorator>();                  ResourceSpace.Has.ResourcesOfType<object>()           .WithoutUri           .AsXmlDataContract().ForMediaType(MediaType.Xml.WithQuality(0.9f)).ForExtension("xml")           .And           .AsJsonDataContract().ForMediaType(MediaType.Json.WithQuality(1.0f)).ForExtension("json");          ResourceSpace.Has.ResourcesOfType<MyResource>()           .AtUri("/stuff")           .HandledBy<MyResourceHandler>();       });
Magic Number,Tests.Scenarios.HandlerSelection.Scenarios.Codecs,content_extension_with_throwing_handler,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.Codecs\content_extension_with_throwing_handler.cs,content_type_in_extension_overrides_conneg,The following statement contains a magic number: response.StatusCode.ShouldBe(500);
Magic Number,Tests.Scenarios.HandlerSelection.Scenarios.Codecs,multipart_enumerable_with_uri_params,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.Codecs\multipart_enumerable_with_uri_params.cs,should_provide_enumerable_independently,The following statement contains a magic number: response.StatusCode.ShouldBe(200);
Magic Number,Tests.Scenarios.HandlerSelection.Scenarios.Codecs,multipart_invalid_content,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.Codecs\multipart_invalid_content.cs,should_return_400,The following statement contains a magic number: response.StatusCode.ShouldBe(400);
Magic Number,Tests.Scenarios.HandlerSelection.Scenarios.Codecs,sync_media_type_reader_throws,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.Codecs\sync_media_type_reader_throws.cs,response_is_400,The following statement contains a magic number: response.StatusCode.ShouldBe(400);
Magic Number,Tests.Scenarios.HandlerReturns.LocationHeader,absolute_uri,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.HandlerReturns\LocationHeader\absolute_uri.cs,header_is_correct,The following statement contains a magic number: r.StatusCode.ShouldBe(200);
Magic Number,Tests.Scenarios.HandlerReturns.LocationHeader,absolute_uri,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.HandlerReturns\LocationHeader\absolute_uri.cs,header_is_correct,The following statement contains a magic number: rAsync.StatusCode.ShouldBe(200);
Magic Number,Tests.Scenarios.HandlerReturns.LocationHeader,relative_uri,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.HandlerReturns\LocationHeader\relative_uri.cs,location_is_absolute,The following statement contains a magic number: r.StatusCode.ShouldBe(200);
Magic Number,Tests.Scenarios.HandlerReturns.LocationHeader,relative_uri,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.HandlerReturns\LocationHeader\relative_uri.cs,location_is_absolute,The following statement contains a magic number: rAsync.StatusCode.ShouldBe(200);
Magic Number,Tests.Scenarios.HandlerReturns.LocationHeader,relative_uri_starting_with_slash,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.HandlerReturns\LocationHeader\relative_uri_starting_with_slash.cs,location_header_is_relative_uri_abs_path,The following statement contains a magic number: r.StatusCode.ShouldBe(200);
Magic Number,Tests.Scenarios.HandlerReturns.LocationHeader,relative_uri_starting_with_slash,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.HandlerReturns\LocationHeader\relative_uri_starting_with_slash.cs,location_header_is_relative_uri_abs_path,The following statement contains a magic number: rAsync.StatusCode.ShouldBe(200);
Magic Number,Tests.Scenarios.HandlerReturns.LocationHeader,relative_uri_starting_with_slash_with_app_path,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.HandlerReturns\LocationHeader\relative_uri_starting_with_slash_with_app_path.cs,location_header_abs_path_is_relative_to_app_base,The following statement contains a magic number: r.StatusCode.ShouldBe(200);
Magic Number,Tests.Scenarios.HandlerReturns.LocationHeader,relative_uri_starting_with_slash_with_app_path,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.HandlerReturns\LocationHeader\relative_uri_starting_with_slash_with_app_path.cs,location_header_abs_path_is_relative_to_app_base,The following statement contains a magic number: rAsync.StatusCode.ShouldBe(200);
Magic Number,Tests.Scenarios.HandlerReturns.LocationHeader,relative_uri_with_app_path,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.HandlerReturns\LocationHeader\relative_uri_with_app_path.cs,location_is_absolute,The following statement contains a magic number: r.StatusCode.ShouldBe(200);
Magic Number,Tests.Scenarios.HandlerReturns.LocationHeader,relative_uri_with_app_path,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.HandlerReturns\LocationHeader\relative_uri_with_app_path.cs,location_is_absolute,The following statement contains a magic number: rAsync.StatusCode.ShouldBe(200);
Magic Number,Tests.Scenarios.HandlerReturns.Resource,get_with_dependency,C:\research\architectureSmells\repos\openrasta_openrasta-core\src\Tests\Scenarios.HandlerReturns\Resource\get_with_dependency.cs,get_with_async_void_method,The following statement contains a magic number: response.StatusCode.ShouldBe(204);
