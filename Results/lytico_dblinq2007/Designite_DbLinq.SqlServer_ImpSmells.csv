Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DbLinq.SqlServer,SqlServerExpressionTranslator,C:\repos\lytico_dblinq2007\src\DbLinq.SqlServer\SqlServerExpressionTranslator.cs,OuterExpression,The length of the statement  "	if (e.Operands.Select (o => o as SpecialExpression).Where (o => o != null).Where (s => s.SpecialNodeType == SpecialExpressionType.Count).Any ()) { " is 146.
Long Statement,DbLinq.SqlServer,SqlServerSqlProvider,C:\repos\lytico_dblinq2007\src\DbLinq.SqlServer\SqlServerSqlProvider.cs,GetLiteralLimit,The length of the statement  "	return SqlStatement.Format ("SELECT *{0}" + "FROM ({0}" + "    {1}'{0}" + "    ROW_NUMBER() OVER({2}) AS [__ROW_NUMBER]{0}" + "    {3}" + "    ) AS [t0]{0}" + "WHERE [__ROW_NUMBER] BETWEEN {4}+1 AND {4}+{5}{0}" + "ORDER BY [__ROW_NUMBER]"' NewLine' selectFieldsClause' orderByClause' sourceClause' offset' limit); " is 313.
Long Statement,DbLinq.SqlServer,SqlServerSqlProvider,C:\repos\lytico_dblinq2007\src\DbLinq.SqlServer\SqlServerSqlProvider.cs,GetLiteralDateDiff,The length of the statement  "	return SqlStatement.Format ("(CONVERT(BigInt'DATEDIFF(DAY' {0}' {1}))) * 86400000 +" //diffierence in milliseconds regards days " is 127.
Long Statement,DbLinq.SqlServer,SqlServerSqlProvider,C:\repos\lytico_dblinq2007\src\DbLinq.SqlServer\SqlServerSqlProvider.cs,GetLiteralDateDiff,The length of the statement  "	//this trick is needed in sqlserver since DATEDIFF(MILLISECONDS'{0}'{1}) usually crhases in the database engine due an overflow: " is 128.
Long Statement,DbLinq.SqlServer,SqlServerSqlProvider,C:\repos\lytico_dblinq2007\src\DbLinq.SqlServer\SqlServerSqlProvider.cs,GetLiteralStringConcat,The length of the statement  "	return SqlStatement.Format ("{0} + {1}"' a.Replace ("sql_variant"' "varchar"' false)' b.Replace ("sql_variant"' "varchar"' false)); " is 131.
Long Statement,DbLinq.SqlServer,SqlServerSqlProvider,C:\repos\lytico_dblinq2007\src\DbLinq.SqlServer\SqlServerSqlProvider.cs,GetLiteralStringIndexOf,The length of the statement  "	return GetLiteralSubtract (SqlStatement.Format ("CHARINDEX({0}'{1}'{2})"' searchString' GetLiteralSubString (baseString' "1"' GetLiteralStringConcat (count' startIndex))' startIndex)' "1"); " is 189.
Magic Number,DbLinq.SqlServer,SqlServerSqlProvider,C:\repos\lytico_dblinq2007\src\DbLinq.SqlServer\SqlServerSqlProvider.cs,GetLiteral,The following statement contains a magic number: return "'" + literal.ToString ("o").Substring (0' 23) + "'";  
Missing Default,DbLinq.SqlServer,SqlServerTypeConversions,C:\repos\lytico_dblinq2007\src\DbLinq.SqlServer\SqlServerTypeConversions.cs,ParseType,The following switch statement is missing a default case: switch (typeStrL) {  case "tinyint":  	return SqlDbType.Int;  case "int":  	return SqlDbType.Int;  }  
