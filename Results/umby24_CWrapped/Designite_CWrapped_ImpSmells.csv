Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,Purge,Cyclomatic complexity of the method is 8
Long Statement,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,Purge,The length of the statement  "		// -- Format: [VarInt Packet Length] [VarInt: 0 if uncompressed' otherwise length of compressed data] [ Packet ID ] [ Packet Data ] " is 131.
Empty Catch Block,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,WriteByte,The method has an empty catch block.
Empty Catch Block,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,WriteSByte,The method has an empty catch block.
Empty Catch Block,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,WriteBool,The method has an empty catch block.
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,ReadVarInt,The following statement contains a magic number: while (true) {  	var current = ReadSingleByte ();  	result |= (current & 0x7Fu) << length++ * 7;  	if (length > 5)  		throw new Exception ("VarInt Too long");  	if ((current & 0x80) != 128)  		break;  }  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,ReadVarInt,The following statement contains a magic number: while (true) {  	var current = ReadSingleByte ();  	result |= (current & 0x7Fu) << length++ * 7;  	if (length > 5)  		throw new Exception ("VarInt Too long");  	if ((current & 0x80) != 128)  		break;  }  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,ReadVarInt,The following statement contains a magic number: while (true) {  	var current = ReadSingleByte ();  	result |= (current & 0x7Fu) << length++ * 7;  	if (length > 5)  		throw new Exception ("VarInt Too long");  	if ((current & 0x80) != 128)  		break;  }  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,ReadVarInt,The following statement contains a magic number: result |= (current & 0x7Fu) << length++ * 7;  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,ReadVarInt,The following statement contains a magic number: if (length > 5)  	throw new Exception ("VarInt Too long");  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,ReadVarInt,The following statement contains a magic number: if ((current & 0x80) != 128)  	break;  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,ReadVarLong,The following statement contains a magic number: while (true) {  	var current = ReadSingleByte ();  	result |= (current & 0x7Fu) << length++ * 7;  	if (length > 7)  		throw new Exception ("VarLong Too long");  	if ((current & 0x80) != 128)  		break;  }  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,ReadVarLong,The following statement contains a magic number: while (true) {  	var current = ReadSingleByte ();  	result |= (current & 0x7Fu) << length++ * 7;  	if (length > 7)  		throw new Exception ("VarLong Too long");  	if ((current & 0x80) != 128)  		break;  }  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,ReadVarLong,The following statement contains a magic number: while (true) {  	var current = ReadSingleByte ();  	result |= (current & 0x7Fu) << length++ * 7;  	if (length > 7)  		throw new Exception ("VarLong Too long");  	if ((current & 0x80) != 128)  		break;  }  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,ReadVarLong,The following statement contains a magic number: result |= (current & 0x7Fu) << length++ * 7;  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,ReadVarLong,The following statement contains a magic number: if (length > 7)  	throw new Exception ("VarLong Too long");  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,ReadVarLong,The following statement contains a magic number: if ((current & 0x80) != 128)  	break;  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,GetVarintBytes,The following statement contains a magic number: do {  	var byteVal = (byte)(value & 0x7F);  	value >>= 7;  	if (value != 0)  		byteVal |= 0x80;  	byteBuffer [pos] = byteVal;  	pos += 1;  }  while (value != 0);  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,GetVarintBytes,The following statement contains a magic number: value >>= 7;  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,GetVarLongBytes,The following statement contains a magic number: do {  	var byteVal = (byte)(value & 0x7F);  	value >>= 7;  	if (value != 0)  		byteVal |= 0x80;  	byteBuffer [pos] = byteVal;  	pos += 1;  }  while (value != 0);  
Magic Number,CWrapped,Wrapped,C:\repos\umby24_CWrapped\Wrapped.cs,GetVarLongBytes,The following statement contains a magic number: value >>= 7;  
