Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SampleChart,App,C:\repos\stocksharp_stocksharp\Samples\Chart\SampleChart\App.xaml.cs,InitializeComponent,The length of the statement  "            this.DispatcherUnhandledException += new System.Windows.Threading.DispatcherUnhandledExceptionEventHandler(this.ApplicationDispatcherUnhandledException); " is 153.
Long Statement,SampleChart,MainWindow,C:\repos\stocksharp_stocksharp\Samples\Chart\SampleChart\MainWindow.xaml.cs,LoadData,The length of the statement  "					foreach (var candle in storage.GetCandleStorage(typeof(TimeFrameCandle)' security' _timeframe' new LocalMarketDataDrive(path)' format).Load())" is 142.
Magic Number,SampleChart,MainWindow,C:\repos\stocksharp_stocksharp\Samples\Chart\SampleChart\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: _chartUpdateTimer.Interval = TimeSpan.FromMilliseconds(100);
Magic Number,SampleChart,MainWindow,C:\repos\stocksharp_stocksharp\Samples\Chart\SampleChart\MainWindow.xaml.cs,RefreshCharts,The following statement contains a magic number: _security = new Security 			{ 				Id = id.ToStringId()' 				PriceStep = id.SecurityCode.StartsWith("RI"' StringComparison.InvariantCultureIgnoreCase) ? 10 : 0.01m' 				Board = _exchangeInfoProvider.GetExchangeBoard(id.BoardCode) ?? ExchangeBoard.Associated 			};
Magic Number,SampleChart,MainWindow,C:\repos\stocksharp_stocksharp\Samples\Chart\SampleChart\MainWindow.xaml.cs,LoadData,The following statement contains a magic number: var maxDays = isBuild ? 2 : 30 * (int)_timeframe.TotalMinutes;
Magic Number,SampleChart,MainWindow,C:\repos\stocksharp_stocksharp\Samples\Chart\SampleChart\MainWindow.xaml.cs,LoadData,The following statement contains a magic number: var maxDays = isBuild ? 2 : 30 * (int)_timeframe.TotalMinutes;
Magic Number,SampleChart,MainWindow,C:\repos\stocksharp_stocksharp\Samples\Chart\SampleChart\MainWindow.xaml.cs,ChartUpdateTimerOnTick,The following statement contains a magic number: if (IsRealtime.IsChecked == true && _lastPrice != 0m) 			{ 				var nextTick = (ExecutionMessage)_tradeGenerator.Process(new TimeMessage { ServerTime = _lastTime });  				if (nextTick != null) 					AppendTick(_security' nextTick);  				 				_lastTime += TimeSpan.FromSeconds(10); 			}
