Implementation smell,Namespace,Class,File,Method,Description
Complex Method,StockSharp.Community,StrategyClient,C:\repos\stocksharp_stocksharp\Community\StrategyClient.cs,Refresh,Cyclomatic complexity of the method is 13
Long Parameter List,StockSharp.Community,FileClient,C:\repos\stocksharp_stocksharp\Community\FileClient.cs,Upload,The method has 5 parameters. Parameters: fileName' body' isPublic' progress' cancel
Long Parameter List,StockSharp.Community,INotificationService,C:\repos\stocksharp_stocksharp\Community\INotificationService.cs,SendMessage,The method has 5 parameters. Parameters: sessionId' title' body' attachments' isEnglish
Long Statement,StockSharp.Community,BaseServiceClient<TService>,C:\repos\stocksharp_stocksharp\Community\BaseServiceClient.cs,CreateChannel,The length of the statement  "			return new ChannelFactory<TService>(new WSHttpBinding { Security = { Mode = SecurityMode.None }' UseDefaultWebProxy = true }' new EndpointAddress(Address)); " is 156.
Magic Number,StockSharp.Community,AuthenticationClient,C:\repos\stocksharp_stocksharp\Community\AuthenticationClient.cs,Login,The following statement contains a magic number: if (product != null)  			{  				_pingTimer = ThreadingHelper.Timer(() =>  				{  					try  					{  						var session = NullableSessionId;    						if (session == null)  							return;    						lock (_pingSync)  						{  							Invoke(f => f.Ping(session.Value));  						}  					}  					catch (Exception ex)  					{  						ex.LogError();  					}  				}).Interval(TimeSpan.FromMinutes(10));  			}
Magic Number,StockSharp.Community,StrategyClient,C:\repos\stocksharp_stocksharp\Community\StrategyClient.cs,EnsureInit,The following statement contains a magic number: lock (_syncObject)  			{  				if (_refreshTimer != null)  					return;    				var processSubscriptions = true;    				_refreshTimer = ThreadingHelper.Timer(() =>  				{  					lock (_syncObject)  					{  						if (_isProcessing)  							return;    						_isProcessing = true;  					}    					try  					{  						Refresh();    						if (processSubscriptions)  						{  							var subscriptions = Invoke(f => f.GetSubscriptions(SessionId' DateTime.MinValue));    							foreach (var subscription in subscriptions)  							{  								_subscriptions.Add(subscription.Id' subscription);  							}    							var backtests = Invoke(f => f.GetBacktests(SessionId' DateTime.Today - TimeSpan.FromDays(5)' DateTime.UtcNow));    							foreach (var backtest in backtests)  							{  								_backtests.Add(backtest.Id' backtest);  							}    							processSubscriptions = false;  						}  					}  					catch (Exception ex)  					{  						ex.LogError();  					}  					finally  					{  						lock (_syncObject)  							_isProcessing = false;  					}  				}).Interval(TimeSpan.Zero' TimeSpan.FromMinutes(1));  			}
Magic Number,StockSharp.Community,Extensions,C:\repos\stocksharp_stocksharp\Community\Extensions.cs,ToErrorCode,The following statement contains a magic number: if (bytes.Take(14).All(b => b == 0))  				return (ErrorCodes)bytes[15];
Magic Number,StockSharp.Community,Extensions,C:\repos\stocksharp_stocksharp\Community\Extensions.cs,ToErrorCode,The following statement contains a magic number: if (bytes.Take(14).All(b => b == 0))  				return (ErrorCodes)bytes[15];
