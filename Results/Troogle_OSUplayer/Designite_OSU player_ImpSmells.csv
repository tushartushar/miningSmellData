Implementation smell,Namespace,Class,File,Method,Description
Long Method,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The method has 222 lines of code.
Long Method,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The method has 1317 lines of code.
Long Method,OSUplayer.Graphic,TSpriteAction,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TSpriteAction.cs,Update,The method has 103 lines of code.
Long Method,OSUplayer.OsuFiles,OsuDB,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadDb,The method has 131 lines of code.
Long Method,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The method has 189 lines of code.
Long Method,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The method has 154 lines of code.
Long Method,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The method has 201 lines of code.
Complex Method,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,GUITimer_Tick,Cyclomatic complexity of the method is 9
Complex Method,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,Cyclomatic complexity of the method is 20
Complex Method,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,CanRender,Cyclomatic complexity of the method is 8
Complex Method,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,InitSB,Cyclomatic complexity of the method is 10
Complex Method,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Initfx,Cyclomatic complexity of the method is 19
Complex Method,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Open,Cyclomatic complexity of the method is 12
Complex Method,OSUplayer.Graphic,TGraphic,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TGraphic.cs,Update,Cyclomatic complexity of the method is 18
Complex Method,OSUplayer.Graphic,TSpriteAction,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TSpriteAction.cs,Update,Cyclomatic complexity of the method is 12
Complex Method,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,Setobject,Cyclomatic complexity of the method is 10
Complex Method,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,GetDetail,Cyclomatic complexity of the method is 15
Complex Method,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,Cyclomatic complexity of the method is 11
Complex Method,OSUplayer.OsuFiles,ScoreRecord,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,RankExtracted,Cyclomatic complexity of the method is 8
Complex Method,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,Cyclomatic complexity of the method is 18
Complex Method,OSUplayer.OsuFiles,OsuDB,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadDb,Cyclomatic complexity of the method is 15
Complex Method,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevents,Cyclomatic complexity of the method is 13
Complex Method,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,Cyclomatic complexity of the method is 34
Complex Method,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,Cyclomatic complexity of the method is 23
Complex Method,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,DelDulp_DeleteSelected_Click,Cyclomatic complexity of the method is 8
Complex Method,OSUplayer.Uilties,TaskBarIconMenu,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\TaskBarIconMenu.cs,Dispose,Cyclomatic complexity of the method is 8
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,av_add_index_entry,The method has 6 parameters. Parameters: pAVStream' pos' timestamp' size' distance' flags
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,av_bitstream_filter_filter,The method has 8 parameters. Parameters: pAVBitStreamFilterContext' pAVCodecContext' args' poutbuf' poutbuf_size' buf' buf_size' keyframe
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,av_guess_codec,The method has 5 parameters. Parameters: pAVOutoutFormat' short_name' filename' mime_type' type
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,av_open_input_file,The method has 5 parameters. Parameters: pFormatContext' filename' pAVInputFormat' buf_size' pAVFormatParameters
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,av_open_input_file_hax,The method has 6 parameters. Parameters: pFormatContext' filename' buffer' pAVInputFormat' buf_size' pAVFormatParameters
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,av_parser_change,The method has 7 parameters. Parameters: pAVCodecParserContext' pAVCodecContext' poutbuf' poutbuf_size' buf' buf_size' keyframe
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,av_parser_parse,The method has 8 parameters. Parameters: pAVCodecParserContext' pAVCodecContext' poutbuf' poutbuf_size' buf' buf_size' pts' dts
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,av_read_image,The method has 5 parameters. Parameters: pByteIOContext' filename' pAVImageFormat' alloc_cb' opaque
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,av_resample,The method has 6 parameters. Parameters: pAVResampleContext' dst' src' consumed' src_size' udpate_ctx
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,av_resample_init,The method has 6 parameters. Parameters: out_rate' in_rate' filter_length' log2_phase_count' linear' cutoff
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,avcodec_decode_audio,The method has 5 parameters. Parameters: pAVCodecContext' samples' frame_size_ptr' buf' buf_size
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,avcodec_decode_subtitle,The method has 5 parameters. Parameters: pAVCodecContext' pAVSubtitle' got_sub_ptr' buf' buf_size
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,avcodec_decode_video,The method has 5 parameters. Parameters: pAVCodecContext' pAVFrame' got_picture_ptr' buf' buf_size
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,avcodec_default_execute,The method has 5 parameters. Parameters: pAVCodecContext' func' arg' ret' count
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,avcodec_parse_frame,The method has 5 parameters. Parameters: pAVCodecContext' pdata' data_size_ptr' buf' buf_size
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,avcodec_thread_execute,The method has 5 parameters. Parameters: pAVCodecContext' func' arg' ret' count
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,avpicture_deinterlace,The method has 5 parameters. Parameters: p_dst_AVPicture' p_src_AVPicture' pix_fmt' width' height
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,avpicture_fill,The method has 5 parameters. Parameters: pAVPicture' ptr' pix_fmt' width' height
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,avpicture_layout,The method has 6 parameters. Parameters: p_src_AVPicture' pix_fmt' width' height' dest' dest_size
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,img_convert,The method has 6 parameters. Parameters: p_dst_AVPicture' dst_pix_fmt' p_src_AVPicture' pix_fmt' width' height
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,img_copy,The method has 5 parameters. Parameters: pAVPicture' p_src_AVPicture' pix_fmt' width' height
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,img_crop,The method has 5 parameters. Parameters: p_dst_pAVPicture' p_src_pAVPicture' pix_fmt' top_band' left_band
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,img_pad,The method has 10 parameters. Parameters: p_dst_pAVPicture' p_src_pAVPicture' height' width' pix_fmt' padtop' padbottom' padleft' padright' color
Long Parameter List,OSUplayer.Graphic,FFmpeg,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\FFmpeg.cs,img_resample_full_init,The method has 12 parameters. Parameters: owidth' oheight' iwidth' iheight' topBand' bottomBand' leftBand' rightBand' padtop' padbottom' padleft' padright
Long Parameter List,OSUplayer.Graphic,StaticGraphic,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TGraphic.cs,StaticGraphic,The method has 8 parameters. Parameters: graphicDevice' source' position' rotate' scale' color' alpha' parameter
Long Parameter List,OSUplayer.Uilties,NotifySystem,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\NotifySystem.cs,Showtip,The method has 5 parameters. Parameters: time' title' content' icon' force
Long Parameter List,OSUplayer.Uilties,Win32,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\Win32.cs,CreateRoundRectRgn,The method has 6 parameters. Parameters: x1' y1' x2' y2' x3' y3
Long Identifier,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,,The length of the parameter Main_PlayList_RightClick_Delete_One is 35.
Long Identifier,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,,The length of the parameter Main_PlayList_RightClick_Export_MP3 is 35.
Long Identifier,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,,The length of the parameter Main_PlayList_RightClick_Open_In_OSU is 36.
Long Identifier,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,,The length of the parameter Main_PlayList_RightClick_Copy_Current_Name is 42.
Long Identifier,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,,The length of the parameter ChooseColl_CollectionTitle_List is 31.
Long Identifier,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,,The length of the parameter ChooseColl_CollectionContent_List is 33.
Long Identifier,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,,The length of the parameter ChooseColl_PlayListCurrentCount is 31.
Long Statement,OSUplayer,LanguageManager,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Language.cs,ApplyLanguage,The length of the statement  "            foreach (var controlbase in (oriForm.GetType().GetFields(BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.NonPublic))) " is 134.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Mini)); " is 124.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            this.Mini_Seek_TrackBar.FloatValueFontColor = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92))))); " is 146.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            colorLinearGradient1.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170))))); " is 132.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            colorLinearGradient1.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170))))); " is 132.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            colorLinearGradient2.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92))))); " is 130.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            colorLinearGradient2.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92))))); " is 130.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            this.Mini_Volume_TrackBar.FloatValueFontColor = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92))))); " is 148.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            colorLinearGradient3.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170))))); " is 132.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            colorLinearGradient3.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170))))); " is 132.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            colorLinearGradient4.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92))))); " is 130.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            colorLinearGradient4.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92))))); " is 130.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            this.Mini_Volume_TrackBar.ValueChanged += new gTrackBar.gTrackBar.ValueChangedEventHandler(this.TrackVolume_ValueChanged); " is 122.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            this.Mini_Artist_Label.Font = new System.Drawing.Font("Segoe UI Symbol"' 9F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 156.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            this.Mini_Title_Label.Font = new System.Drawing.Font("Segoe UI Symbol"' 7.8F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 160.
Long Statement,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The length of the statement  "            this.Mini_Time_Label.Font = new System.Drawing.Font("Segoe UI Symbol"' 9F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 154.
Long Statement,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Setpath,The length of the statement  "                    MessageBox.Show(LanguageManager.Get("Core_Osupath_Tip_Text")' LanguageManager.Get("Error_Text")' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 141.
Long Statement,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Setpath,The length of the statement  "                MessageBox.Show(LanguageManager.Get("Core_Osupath_Tip_Text")' LanguageManager.Get("Error_Text")' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 141.
Long Statement,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Initset,The length of the statement  "                NotifySystem.Showtip(1000' LanguageManager.Get("OSUplayer")' string.Format(LanguageManager.Get("Core_Init_Finish_Text")' Allsets.Count)); " is 137.
Long Statement,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Play,The length of the statement  "            NotifySystem.Showtip(1000' LanguageManager.Get("OSUplayer")' LanguageManager.Get("Core_Current_Playing_Text") + CurrentBeatmap.NameToString()); " is 143.
Long Statement,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Search,The length of the statement  "                searchedMaps.AddRange(from beatmapSet in Allsets where beatmapSet.Value.tags.ToLower().Contains(keyword) select beatmapSet.Key); " is 128.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,AskForExit,The length of the statement  "                if (MessageBox.Show(LanguageManager.Get("Comfirm_Exit_Text")' LanguageManager.Get("Tip_Text")' MessageBoxButtons.YesNo) == DialogResult.Yes) " is 140.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Tool_Export_Playlist_Click,The length of the statement  "                    stream.WriteLine("<td class='nobg'><span class='alt'><a href='https://osu.ppy.sh/s/{0}' target='_new'>{1}</a></span></td>"' song.setid' song.ToString()); " is 153.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Tool_Export_Playlist_Click,The length of the statement  "                    stream.WriteLine("<td class='nobg'><span class='alt'><a href='http://bloodcat.com/osu/m/{0}' target='_new'>Download</a></span></td>"' song.setid); " is 146.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Tool_Export_Playlist_Click,The length of the statement  "                    stream.WriteLine("<td class='nobg'><span class='alt'><a href='http://loli.al/s/{0}' target='_new'>Download</a></span></td>"' song.setid); " is 137.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Tool_Export_Playlist_Click,The length of the statement  "                    stream.WriteLine("<td class='nobg'><span class='alt'><a href='http://osu.mengsky.net/d.php?id={0}' target='_new'>Download</a></span></td>"' song.setid); " is 152.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Tool_Export_Playlist_MP3_Click,The length of the statement  "            worker.RunWorkerCompleted += delegate { NotifySystem.Showtip(1000' LanguageManager.Get("OSUplayer")' LanguageManager.Get("Save_Complete")); }; " is 142.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Main)); " is 124.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Option_Play_Fx.DataBindings.Add(new System.Windows.Forms.Binding("Checked"' global::OSUplayer.Properties.Settings.Default' "PlayFx"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 211.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Option_Play_Video.DataBindings.Add(new System.Windows.Forms.Binding("Checked"' global::OSUplayer.Properties.Settings.Default' "PlayVideo"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 217.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Option_Sync_QQ.DataBindings.Add(new System.Windows.Forms.Binding("Checked"' global::OSUplayer.Properties.Settings.Default' "SyncQQ"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 211.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Option_Play_SB.DataBindings.Add(new System.Windows.Forms.Binding("Checked"' global::OSUplayer.Properties.Settings.Default' "PlaySB"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 211.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Option_Show_Popup.DataBindings.Add(new System.Windows.Forms.Binding("Checked"' global::OSUplayer.Properties.Settings.Default' "ShowPopup"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 217.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Tab_Control_Panel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 160.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Tab_Control_Panel.RowStyles.Add(new System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent' 100F)); " is 122.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_TabPanel.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)  " is 149.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_TabControl.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 151.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_ListDetail.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 151.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_ListDetail.RetrieveVirtualItem += new System.Windows.Forms.RetrieveVirtualItemEventHandler(this.Main_ListDetail_RetrieveVirtualItem); " is 143.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_ScoreBox.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 149.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_DiffList.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 149.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Option_Play_SB_Box.DataBindings.Add(new System.Windows.Forms.Binding("Checked"' global::OSUplayer.Properties.Settings.Default' "PlaySB"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 215.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Option_Play_Video_Box.DataBindings.Add(new System.Windows.Forms.Binding("Checked"' global::OSUplayer.Properties.Settings.Default' "PlayVideo"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 221.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Option_Play_Fx_Box.DataBindings.Add(new System.Windows.Forms.Binding("Checked"' global::OSUplayer.Properties.Settings.Default' "PlayFx"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 215.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Speed_Control.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)  " is 154.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Speed_Control.ValueBoxFont = new System.Drawing.Font("Arial"' 7.8F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 157.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Speed_Control.ValueChanged += new gTrackBar.gTrackBar.ValueChangedEventHandler(this.Main_Speed_Control_ValueChanged); " is 127.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_CurrentList.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 152.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Search_Box.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 151.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_PlayList.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 148.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_PlayList.RetrieveVirtualItem += new System.Windows.Forms.RetrieveVirtualItemEventHandler(this.Main_PlayList_RetrieveVirtualItem); " is 139.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_PlayList_RightClick_Menu.Opening += new System.ComponentModel.CancelEventHandler(this.Main_PlayList_RightClick_Menu_Opening); " is 135.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_PlayList_RightClick_Copy_Current_Name.Click += new System.EventHandler(this.Main_PlayList_RightClick_Copy_Current_Name_Click); " is 136.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_PlayList_RightClick_Delete_One.Click += new System.EventHandler(this.Main_PlayList_RightClick_Delete_One_Click); " is 122.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Core_Panel.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 151.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_PlayPrev.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 151.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Jump_OSU.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 152.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Volume_TrackBar.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 155.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Volume_TrackBar.ValueChanged += new gTrackBar.gTrackBar.ValueChangedEventHandler(this.Main_Volume_TrackBar_ValueChanged); " is 131.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Time_Trackbar.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)  " is 154.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Time_Trackbar.ValueChanged += new gTrackBar.gTrackBar.ValueChangedEventHandler(this.Main_Time_Trackbar_ValueChanged); " is 127.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Mini_Switcher.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 154.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Time_Display.Font = new System.Drawing.Font("宋体"' 9F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(134))); " is 145.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Volume_Music_TrackBar.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 159.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Volume_Music_TrackBar.ValueChanged += new gTrackBar.gTrackBar.ValueChangedEventHandler(this.Main_Volume_Music_TrackBar_ValueChanged); " is 143.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Main_Display.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 153.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Volume_Fx_TrackBar.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 159.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Volume_Fx_TrackBar.ValueChanged += new gTrackBar.gTrackBar.ValueChangedEventHandler(this.Main_Volume_Fx_TrackBar_ValueChanged); " is 137.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Fx_Hint_Label.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 154.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Volume_Hint_Label.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 161.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_PlayNext.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 151.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Stop.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 147.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Play.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 147.
Long Statement,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The length of the statement  "            this.Main_Collections.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 152.
Long Statement,OSUplayer,Program,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Program.cs,Main,The length of the statement  "                        MessageBox.Show(@"如果不能播放，请重新下载完整包！\nPlease re-download the full pack if it can't play!"' @"Tips"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 148.
Long Statement,OSUplayer,Program,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Program.cs,GetExceptionMsg,The length of the statement  "                                request = WebRequest.Create("http://wenwo.at/counter.php?error=" + ex.GetType().Name + ex.Message + " " + ex.StackTrace.Substring(start' 300 > ex.StackTrace.Length - start - 1 ? ex.StackTrace.Length - start - 1 : 300)); " is 219.
Long Statement,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Resize,The length of the statement  "            if (_videoExist) { _videoScale = Math.Min((float)_showRect.Width / _decoder.width' (float)_showRect.Height / _decoder.height); } " is 128.
Long Statement,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Resize,The length of the statement  "            SBtramsform = Matrix.CreateTranslation(-320' -240' 0) * Matrix.CreateScale(_sbScale' _sbScale' 1) * Matrix.CreateTranslation(new Vector3(_screenCenter' 0)); " is 156.
Long Statement,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,CanRender,The length of the statement  "                    device = new GraphicsDevice(GraphicsAdapter.DefaultAdapter' DeviceType.Hardware' _handle' CreateOptions.MixedVertexProcessing' presentParams); " is 142.
Long Statement,OSUplayer.OsuFiles,BassAudio,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\AVFiles.cs,Open,The length of the statement  "            _channel = Bass.BASS_StreamCreateFile(path' 0' 0' BASSFlag.BASS_SAMPLE_FLOAT | BASSFlag.BASS_STREAM_PRESCAN | BASSFlag.BASS_STREAM_DECODE); " is 139.
Long Statement,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,Settiming,The length of the statement  "            ntiming.sample = tmpop == "" ? new CSample((int)TSample.Normal' 0) : new CSample(Convert.ToInt32(tmpop)' Convert.ToInt32(Picknext(ref row))); " is 141.
Long Statement,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,SaveAudio,The length of the statement  "            if (File.Exists(toName)) toName = System.IO.Path.Combine(toLocation' GetSafeFilename(Title + "[" + Version + "]" + ext)); " is 121.
Long Statement,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(About)); " is 125.
Long Statement,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The length of the statement  "            this.About_Program_Link.Font = new System.Drawing.Font("微软雅黑"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(134))); " is 151.
Long Statement,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The length of the statement  "            this.About_Program_Link.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.About_Program_Link_LinkClicked); " is 134.
Long Statement,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The length of the statement  "            this.About_Profile_Hint.Font = new System.Drawing.Font("微软雅黑"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(134))); " is 151.
Long Statement,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The length of the statement  "            this.About_Content.Font = new System.Drawing.Font("微软雅黑"' 7.8F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(134))); " is 148.
Long Statement,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,ChooseColl_Load,The length of the statement  "            this.Width = TextRenderer.MeasureText(ChooseColl_Hint_Label.Text'ChooseColl_Hint_Label.Font).Width + TextRenderer.MeasureText(ChooseColl_PlayListCurrentCount.Text'ChooseColl_PlayListCurrentCount.Font).Width+80; " is 210.
Long Statement,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ChooseColl)); " is 130.
Long Statement,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The length of the statement  "            this.ChooseColl_CollectionTitle_List.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 166.
Long Statement,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The length of the statement  "            this.ChooseColl_CollectionTitle_List.SelectedIndexChanged += new System.EventHandler(this.ChooseColl_CollectionTitle_List_SelectedIndexChanged); " is 144.
Long Statement,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The length of the statement  "            this.ChooseColl_CollectionTitle_List.MouseDoubleClick += new System.Windows.Forms.MouseEventHandler(this.ChooseColl_CollectionTitle_List_MouseDoubleClick); " is 155.
Long Statement,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The length of the statement  "            this.ChooseColl_CollectionContent_List.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 169.
Long Statement,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 150.
Long Statement,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,BackgroundWorker2ProgressChanged,The length of the statement  "            DelDulp_Status_Label.Text = String.Format(LanguageManager.Get("Get_Song_Info_Text")' DelDulp_ProgressBar.Value' _allBeatmap.Count); " is 131.
Long Statement,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,BackgroundWorker3ProgressChanged,The length of the statement  "            DelDulp_Status_Label.Text = String.Format(LanguageManager.Get("Scan_Duplicate_Text")' DelDulp_ProgressBar.Value' _allBeatmap.Count); " is 132.
Long Statement,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,DelDulp_DeleteSelected_Click,The length of the statement  "                if (MessageBox.Show(string.Format(LanguageManager.Get("Delete_All_Text")' count)' LanguageManager.Get("Tip_Text")' MessageBoxButtons.YesNo) != DialogResult.Yes) { return; } " is 172.
Long Statement,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,DelDulp_DeleteSelected_Click,The length of the statement  "            NotifySystem.Showtip(1000' LanguageManager.Get("OSUplayer")' string.Format(LanguageManager.Get("Delete_Complete_Text")' DelDulp_MainView.CheckedItems.Count)); " is 158.
Long Statement,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(DelDulp)); " is 127.
Long Statement,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The length of the statement  "            this.DelDulp_MainView.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 152.
Long Statement,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The length of the statement  "            this.BackgroundWorker1.ProgressChanged += new System.ComponentModel.ProgressChangedEventHandler(this.BackgroundWorker1ProgressChanged); " is 135.
Long Statement,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The length of the statement  "            this.BackgroundWorker1.RunWorkerCompleted += new System.ComponentModel.RunWorkerCompletedEventHandler(this.BackgroundWorker1RunWorkerCompleted); " is 144.
Long Statement,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The length of the statement  "            this.BackgroundWorker2.ProgressChanged += new System.ComponentModel.ProgressChangedEventHandler(this.BackgroundWorker2ProgressChanged); " is 135.
Long Statement,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The length of the statement  "            this.BackgroundWorker2.RunWorkerCompleted += new System.ComponentModel.RunWorkerCompletedEventHandler(this.BackgroundWorker2RunWorkerCompleted); " is 144.
Long Statement,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The length of the statement  "            this.BackgroundWorker3.ProgressChanged += new System.ComponentModel.ProgressChangedEventHandler(this.BackgroundWorker3ProgressChanged); " is 135.
Long Statement,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The length of the statement  "            this.BackgroundWorker3.RunWorkerCompleted += new System.ComponentModel.RunWorkerCompletedEventHandler(this.BackgroundWorker3RunWorkerCompleted); " is 144.
Long Statement,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel1.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 70F)); " is 122.
Long Statement,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel1.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 30F)); " is 122.
Long Statement,OSUplayer.Uilties,Selfupdate,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\Selfupdate.cs,Download,The length of the statement  "                    var res = MessageBox.Show(string.Format(LanguageManager.Get("Update_Normal_Text")' newver' text)' LanguageManager.Get("Tip_Text")' " is 130.
Long Statement,OSUplayer.Uilties,Selfupdate,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\Selfupdate.cs,Download,The length of the statement  "                        MessageBox.Show(LanguageManager.Get("Update_Backgrounddownload_Text")' LanguageManager.Get("Tip_Text")' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 154.
Long Statement,OSUplayer.Uilties,Selfupdate,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\Selfupdate.cs,Download,The length of the statement  "                MessageBox.Show(LanguageManager.Get("Update_Error_Text")' LanguageManager.Get("Error_Text")' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 137.
Long Statement,OSUplayer.Uilties,Selfupdate,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\Selfupdate.cs,Update,The length of the statement  "            MessageBox.Show(LanguageManager.Get("Update_Restart_Text")' LanguageManager.Get("Tip_Text")' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 143.
Complex Conditional,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseMove,The conditional expression  "Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1                  && Cursor.Position.Y > Parent.Location.Y + Height * 0.15                  && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9                  && Cursor.Position.Y < Parent.Location.Y + Height * 0.85"  is complex.
Complex Conditional,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseDown,The conditional expression  "Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1       && Cursor.Position.Y > Parent.Location.Y + Height * 0.15       && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9       && Cursor.Position.Y < Parent.Location.Y + Height * 0.85"  is complex.
Complex Conditional,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseClick,The conditional expression  "Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1          && Cursor.Position.Y > Parent.Location.Y + Height * 0.15          && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9          && Cursor.Position.Y < Parent.Location.Y + Height * 0.85"  is complex.
Empty Catch Block,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Decode,The method has an empty catch block.
Empty Catch Block,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Dispose,The method has an empty catch block.
Empty Catch Block,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Dispose,The method has an empty catch block.
Empty Catch Block,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Dispose,The method has an empty catch block.
Empty Catch Block,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Dispose,The method has an empty catch block.
Empty Catch Block,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,GetDetail,The method has an empty catch block.
Empty Catch Block,OSUplayer.Uilties,QQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\QQ.cs,QQ,The method has an empty catch block.
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,OnMouseLeave,The following statement contains a magic number: Opacity = 0.5d;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,Mini_Load,The following statement contains a magic number: Win32.SetFormRoundRectRgn(this' 12);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,Mini_Load,The following statement contains a magic number: Mini_Volume_TrackBar.Value = (int)(100 * Settings.Default.Allvolume);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,Mini_Load,The following statement contains a magic number: Opacity = 0.5d;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,Mini_Load,The following statement contains a magic number: Mini_Seek_TrackBar.MaxValue = (int)Core.Durnation * 1000;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,Play,The following statement contains a magic number: Mini_Seek_TrackBar.MaxValue = (int)Core.Durnation * 1000;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,UpdateTimer_Tick,The following statement contains a magic number: Mini_Seek_TrackBar.Value = (int)Core.Position * 1000;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,UpdateTimer_Tick,The following statement contains a magic number: Mini_Time_Label.Text = String.Format("{0}:{1:D2} | {2}:{3:D2}"' (int)Core.Position / 60'                  (int)Core.Position % 60' (int)Core.Durnation / 60'                  (int)Core.Durnation % 60);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,UpdateTimer_Tick,The following statement contains a magic number: Mini_Time_Label.Text = String.Format("{0}:{1:D2} | {2}:{3:D2}"' (int)Core.Position / 60'                  (int)Core.Position % 60' (int)Core.Durnation / 60'                  (int)Core.Durnation % 60);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,UpdateTimer_Tick,The following statement contains a magic number: Mini_Time_Label.Text = String.Format("{0}:{1:D2} | {2}:{3:D2}"' (int)Core.Position / 60'                  (int)Core.Position % 60' (int)Core.Durnation / 60'                  (int)Core.Durnation % 60);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,UpdateTimer_Tick,The following statement contains a magic number: Mini_Time_Label.Text = String.Format("{0}:{1:D2} | {2}:{3:D2}"' (int)Core.Position / 60'                  (int)Core.Position % 60' (int)Core.Durnation / 60'                  (int)Core.Durnation % 60);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,TrackSeek_ValueChanged,The following statement contains a magic number: Core.Seek((double)Mini_Seek_TrackBar.Value / 1000);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.ChangeLarge = 10000;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.ChangeSmall = 1000;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.FloatValueFontColor = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.FloatValueFontColor = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.FloatValueFontColor = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.Location = new System.Drawing.Point(12' 151);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.Location = new System.Drawing.Point(12' 151);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.MaxValue = 1000;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.Size = new System.Drawing.Size(588' 50);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.Size = new System.Drawing.Size(588' 50);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient1.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient1.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient1.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient1.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient1.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient1.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient2.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient2.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient2.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient2.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient2.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient2.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.SliderSize = new System.Drawing.Size(38' 48);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.SliderSize = new System.Drawing.Size(38' 48);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.SliderWidthHigh = 10F;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.SliderWidthLow = 10F;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Seek_TrackBar.TabIndex = 5;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Volume_TrackBar.FloatValueFontColor = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Volume_TrackBar.FloatValueFontColor = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Volume_TrackBar.FloatValueFontColor = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Volume_TrackBar.Location = new System.Drawing.Point(304' 1);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Volume_TrackBar.MaxValue = 100;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Volume_TrackBar.Size = new System.Drawing.Size(304' 37);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Volume_TrackBar.Size = new System.Drawing.Size(304' 37);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient3.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient3.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient3.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient3.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient3.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient3.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(162))))' ((int)(((byte)(167))))' ((int)(((byte)(170)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient4.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient4.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient4.ColorA = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient4.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient4.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: colorLinearGradient4.ColorB = System.Drawing.Color.FromArgb(((int)(((byte)(232))))' ((int)(((byte)(82))))' ((int)(((byte)(92)))));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Volume_TrackBar.SliderSize = new System.Drawing.Size(27' 43);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Volume_TrackBar.SliderSize = new System.Drawing.Size(27' 43);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Volume_TrackBar.SliderWidthHigh = 10F;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Volume_TrackBar.SliderWidthLow = 10F;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Volume_TrackBar.TabIndex = 6;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Volume_TrackBar.Value = 100;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Volume_TrackBar.ValueAdjusted = 100F;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Artist_Label.Font = new System.Drawing.Font("Segoe UI Symbol"' 9F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0)));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Artist_Label.Location = new System.Drawing.Point(28' 55);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Artist_Label.Location = new System.Drawing.Point(28' 55);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Artist_Label.Size = new System.Drawing.Size(188' 23);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Artist_Label.Size = new System.Drawing.Size(188' 23);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Artist_Label.TabIndex = 7;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Title_Label.Font = new System.Drawing.Font("Segoe UI Symbol"' 7.8F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0)));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Title_Label.Location = new System.Drawing.Point(28' 81);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Title_Label.Location = new System.Drawing.Point(28' 81);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Title_Label.Size = new System.Drawing.Size(188' 23);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Title_Label.Size = new System.Drawing.Size(188' 23);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Title_Label.TabIndex = 8;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Time_Label.Font = new System.Drawing.Font("Segoe UI Symbol"' 9F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0)));
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Time_Label.Location = new System.Drawing.Point(28' 109);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Time_Label.Location = new System.Drawing.Point(28' 109);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Time_Label.Size = new System.Drawing.Size(180' 23);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Time_Label.Size = new System.Drawing.Size(180' 23);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Time_Label.TabIndex = 9;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_GUITimer.Interval = 500;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Pin.Location = new System.Drawing.Point(2' 1);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Pin.Size = new System.Drawing.Size(46' 46);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Pin.Size = new System.Drawing.Size(46' 46);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Pin.TabIndex = 4;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Main_Switcher.Location = new System.Drawing.Point(524' 55);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Main_Switcher.Location = new System.Drawing.Point(524' 55);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Main_Switcher.Size = new System.Drawing.Size(84' 90);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Main_Switcher.Size = new System.Drawing.Size(84' 90);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Main_Switcher.TabIndex = 3;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_PlayNext.Location = new System.Drawing.Point(434' 55);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_PlayNext.Location = new System.Drawing.Point(434' 55);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_PlayNext.Size = new System.Drawing.Size(84' 90);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_PlayNext.Size = new System.Drawing.Size(84' 90);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_PlayNext.TabIndex = 2;
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Stop.Location = new System.Drawing.Point(344' 55);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Stop.Location = new System.Drawing.Point(344' 55);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Stop.Size = new System.Drawing.Size(84' 90);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Stop.Size = new System.Drawing.Size(84' 90);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Play.Location = new System.Drawing.Point(234' 35);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Play.Location = new System.Drawing.Point(234' 35);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Play.Size = new System.Drawing.Size(104' 110);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.Mini_Play.Size = new System.Drawing.Size(104' 110);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(612' 209);
Magic Number,OSUplayer,Mini,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Mini.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(612' 209);
Magic Number,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseMove,The following statement contains a magic number: Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1                  && Cursor.Position.Y > Parent.Location.Y + Height * 0.15                  && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9                  && Cursor.Position.Y < Parent.Location.Y + Height * 0.85
Magic Number,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseMove,The following statement contains a magic number: Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1                  && Cursor.Position.Y > Parent.Location.Y + Height * 0.15                  && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9                  && Cursor.Position.Y < Parent.Location.Y + Height * 0.85
Magic Number,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseMove,The following statement contains a magic number: Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1                  && Cursor.Position.Y > Parent.Location.Y + Height * 0.15                  && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9                  && Cursor.Position.Y < Parent.Location.Y + Height * 0.85
Magic Number,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseMove,The following statement contains a magic number: Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1                  && Cursor.Position.Y > Parent.Location.Y + Height * 0.15                  && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9                  && Cursor.Position.Y < Parent.Location.Y + Height * 0.85
Magic Number,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseDown,The following statement contains a magic number: Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1       && Cursor.Position.Y > Parent.Location.Y + Height * 0.15       && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9       && Cursor.Position.Y < Parent.Location.Y + Height * 0.85
Magic Number,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseDown,The following statement contains a magic number: Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1       && Cursor.Position.Y > Parent.Location.Y + Height * 0.15       && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9       && Cursor.Position.Y < Parent.Location.Y + Height * 0.85
Magic Number,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseDown,The following statement contains a magic number: Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1       && Cursor.Position.Y > Parent.Location.Y + Height * 0.15       && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9       && Cursor.Position.Y < Parent.Location.Y + Height * 0.85
Magic Number,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseDown,The following statement contains a magic number: Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1       && Cursor.Position.Y > Parent.Location.Y + Height * 0.15       && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9       && Cursor.Position.Y < Parent.Location.Y + Height * 0.85
Magic Number,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseClick,The following statement contains a magic number: Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1          && Cursor.Position.Y > Parent.Location.Y + Height * 0.15          && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9          && Cursor.Position.Y < Parent.Location.Y + Height * 0.85
Magic Number,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseClick,The following statement contains a magic number: Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1          && Cursor.Position.Y > Parent.Location.Y + Height * 0.15          && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9          && Cursor.Position.Y < Parent.Location.Y + Height * 0.85
Magic Number,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseClick,The following statement contains a magic number: Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1          && Cursor.Position.Y > Parent.Location.Y + Height * 0.15          && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9          && Cursor.Position.Y < Parent.Location.Y + Height * 0.85
Magic Number,OSUplayer,ImageButton,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\ImageButton.cs,OnMouseClick,The following statement contains a magic number: Cursor.Position.X > Parent.Location.X + Location.X + Width * 0.1          && Cursor.Position.Y > Parent.Location.Y + Height * 0.15          && Cursor.Position.X < Parent.Location.X + Location.X + Width * 0.9          && Cursor.Position.Y < Parent.Location.Y + Height * 0.85
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Init,The following statement contains a magic number: NotifySystem.Showtip(1000' LanguageManager.Get("OSUplayer")' LanguageManager.Get("Core_Init_Text"));
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,SetSet,The following statement contains a magic number: NotifySystem.Showtip(1000' LanguageManager.Get("OSUplayer")' LanguageManager.Get("Core_Missing_Song_Text"));
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,SetMap,The following statement contains a magic number: NotifySystem.Showtip(1000' LanguageManager.Get("OSUplayer")' LanguageManager.Get("Core_Missing_Song_Text"));
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,SetVolume,The following statement contains a magic number: switch (set)              {                  case 1:                      Settings.Default.Allvolume = volume;                      break;                  case 2:                      Settings.Default.Musicvolume = volume;                      break;                  case 3:                      Settings.Default.Fxvolume = volume;                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,SetVolume,The following statement contains a magic number: switch (set)              {                  case 1:                      Settings.Default.Allvolume = volume;                      break;                  case 2:                      Settings.Default.Musicvolume = volume;                      break;                  case 3:                      Settings.Default.Fxvolume = volume;                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Play,The following statement contains a magic number: NotifySystem.Showtip(1000' LanguageManager.Get("OSUplayer")' LanguageManager.Get("Core_Missing_MP3_Text"));
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Play,The following statement contains a magic number: NotifySystem.Showtip(1000' LanguageManager.Get("OSUplayer")' LanguageManager.Get("Core_Current_Playing_Text") + CurrentBeatmap.NameToString());
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Seek,The following statement contains a magic number: _player.Durnation - 10 > time
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,GetNext,The following statement contains a magic number: switch (Settings.Default.NextMode)              {                  case 1:                      next = (now + 1) % PlayList.Count;                      break;                  case 2:                      next = now;                      break;                  case 3:                      next = new Random().Next() % PlayList.Count;                      break;                  default:                      next = 0;                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,GetNext,The following statement contains a magic number: switch (Settings.Default.NextMode)              {                  case 1:                      next = (now + 1) % PlayList.Count;                      break;                  case 2:                      next = now;                      break;                  case 3:                      next = new Random().Next() % PlayList.Count;                      break;                  default:                      next = 0;                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,GetPrev,The following statement contains a magic number: switch (Settings.Default.NextMode)              {                  case 1:                      prev = (now - 1) % PlayList.Count;                      break;                  case 2:                      prev = now;                      break;                  case 3:                      prev = new Random().Next() % PlayList.Count;                      break;                  default:                      prev = 0;                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,GetPrev,The following statement contains a magic number: switch (Settings.Default.NextMode)              {                  case 1:                      prev = (now - 1) % PlayList.Count;                      break;                  case 2:                      prev = now;                      break;                  case 3:                      prev = new Random().Next() % PlayList.Count;                      break;                  default:                      prev = 0;                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,The following statement contains a magic number: switch (index)              {                  case 0:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Title"));                      ret.SubItems.Add(TmpBeatmap.Title);                      break;                  case 1:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Artist"));                      ret.SubItems.Add(TmpBeatmap.Artist);                      break;                  case 2:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mapper"));                      ret.SubItems.Add(TmpBeatmap.Creator);                      break;                  case 3:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Source"));                      ret.SubItems.Add(TmpBeatmap.Source);                      break;                  case 4:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mode"));                      ret.SubItems.Add(Enum.GetName(typeof(Modes)' TmpBeatmap.Mode));                      break;                  case 5:                      ret = new ListViewItem("SetID");                      ret.SubItems.Add(TmpBeatmap.BeatmapsetID.ToString());                      break;                  case 6:                      ret = new ListViewItem("ID");                      ret.SubItems.Add(TmpBeatmap.BeatmapID.ToString());                      break;                  case 7:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_WAVPath"));                      ret.SubItems.Add(TmpBeatmap.Audio);                      if (!File.Exists(TmpBeatmap.Audio))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 8:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_BGPath"));                      ret.SubItems.Add(TmpBeatmap.Background);                      if (!File.Exists(TmpBeatmap.Background))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 9:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_VideoPath"));                      ret.SubItems.Add(TmpBeatmap.Video);                      if (!String.IsNullOrEmpty(TmpBeatmap.Video) && !File.Exists(TmpBeatmap.Video))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 10:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_FileVersion"));                      ret.SubItems.Add(TmpBeatmap.FileVersion);                      break;                  case 11:                      ret = new ListViewItem("HP");                      ret.SubItems.Add(TmpBeatmap.HPDrainRate.ToString());                      break;                  case 12:                      ret = new ListViewItem("CS");                      ret.SubItems.Add(TmpBeatmap.CircleSize.ToString());                      break;                  case 13:                      ret = new ListViewItem("OD");                      ret.SubItems.Add(TmpBeatmap.OverallDifficulty.ToString());                      break;                  case 14:                      ret = new ListViewItem("AR");                      ret.SubItems.Add(TmpBeatmap.ApproachRate.ToString());                      break;                  case 15:                      ret = new ListViewItem("MD5");                      ret.SubItems.Add(TmpBeatmap.GetHash());                      break;                  default:                      ret = new ListViewItem();                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,The following statement contains a magic number: switch (index)              {                  case 0:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Title"));                      ret.SubItems.Add(TmpBeatmap.Title);                      break;                  case 1:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Artist"));                      ret.SubItems.Add(TmpBeatmap.Artist);                      break;                  case 2:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mapper"));                      ret.SubItems.Add(TmpBeatmap.Creator);                      break;                  case 3:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Source"));                      ret.SubItems.Add(TmpBeatmap.Source);                      break;                  case 4:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mode"));                      ret.SubItems.Add(Enum.GetName(typeof(Modes)' TmpBeatmap.Mode));                      break;                  case 5:                      ret = new ListViewItem("SetID");                      ret.SubItems.Add(TmpBeatmap.BeatmapsetID.ToString());                      break;                  case 6:                      ret = new ListViewItem("ID");                      ret.SubItems.Add(TmpBeatmap.BeatmapID.ToString());                      break;                  case 7:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_WAVPath"));                      ret.SubItems.Add(TmpBeatmap.Audio);                      if (!File.Exists(TmpBeatmap.Audio))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 8:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_BGPath"));                      ret.SubItems.Add(TmpBeatmap.Background);                      if (!File.Exists(TmpBeatmap.Background))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 9:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_VideoPath"));                      ret.SubItems.Add(TmpBeatmap.Video);                      if (!String.IsNullOrEmpty(TmpBeatmap.Video) && !File.Exists(TmpBeatmap.Video))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 10:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_FileVersion"));                      ret.SubItems.Add(TmpBeatmap.FileVersion);                      break;                  case 11:                      ret = new ListViewItem("HP");                      ret.SubItems.Add(TmpBeatmap.HPDrainRate.ToString());                      break;                  case 12:                      ret = new ListViewItem("CS");                      ret.SubItems.Add(TmpBeatmap.CircleSize.ToString());                      break;                  case 13:                      ret = new ListViewItem("OD");                      ret.SubItems.Add(TmpBeatmap.OverallDifficulty.ToString());                      break;                  case 14:                      ret = new ListViewItem("AR");                      ret.SubItems.Add(TmpBeatmap.ApproachRate.ToString());                      break;                  case 15:                      ret = new ListViewItem("MD5");                      ret.SubItems.Add(TmpBeatmap.GetHash());                      break;                  default:                      ret = new ListViewItem();                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,The following statement contains a magic number: switch (index)              {                  case 0:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Title"));                      ret.SubItems.Add(TmpBeatmap.Title);                      break;                  case 1:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Artist"));                      ret.SubItems.Add(TmpBeatmap.Artist);                      break;                  case 2:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mapper"));                      ret.SubItems.Add(TmpBeatmap.Creator);                      break;                  case 3:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Source"));                      ret.SubItems.Add(TmpBeatmap.Source);                      break;                  case 4:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mode"));                      ret.SubItems.Add(Enum.GetName(typeof(Modes)' TmpBeatmap.Mode));                      break;                  case 5:                      ret = new ListViewItem("SetID");                      ret.SubItems.Add(TmpBeatmap.BeatmapsetID.ToString());                      break;                  case 6:                      ret = new ListViewItem("ID");                      ret.SubItems.Add(TmpBeatmap.BeatmapID.ToString());                      break;                  case 7:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_WAVPath"));                      ret.SubItems.Add(TmpBeatmap.Audio);                      if (!File.Exists(TmpBeatmap.Audio))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 8:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_BGPath"));                      ret.SubItems.Add(TmpBeatmap.Background);                      if (!File.Exists(TmpBeatmap.Background))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 9:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_VideoPath"));                      ret.SubItems.Add(TmpBeatmap.Video);                      if (!String.IsNullOrEmpty(TmpBeatmap.Video) && !File.Exists(TmpBeatmap.Video))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 10:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_FileVersion"));                      ret.SubItems.Add(TmpBeatmap.FileVersion);                      break;                  case 11:                      ret = new ListViewItem("HP");                      ret.SubItems.Add(TmpBeatmap.HPDrainRate.ToString());                      break;                  case 12:                      ret = new ListViewItem("CS");                      ret.SubItems.Add(TmpBeatmap.CircleSize.ToString());                      break;                  case 13:                      ret = new ListViewItem("OD");                      ret.SubItems.Add(TmpBeatmap.OverallDifficulty.ToString());                      break;                  case 14:                      ret = new ListViewItem("AR");                      ret.SubItems.Add(TmpBeatmap.ApproachRate.ToString());                      break;                  case 15:                      ret = new ListViewItem("MD5");                      ret.SubItems.Add(TmpBeatmap.GetHash());                      break;                  default:                      ret = new ListViewItem();                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,The following statement contains a magic number: switch (index)              {                  case 0:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Title"));                      ret.SubItems.Add(TmpBeatmap.Title);                      break;                  case 1:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Artist"));                      ret.SubItems.Add(TmpBeatmap.Artist);                      break;                  case 2:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mapper"));                      ret.SubItems.Add(TmpBeatmap.Creator);                      break;                  case 3:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Source"));                      ret.SubItems.Add(TmpBeatmap.Source);                      break;                  case 4:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mode"));                      ret.SubItems.Add(Enum.GetName(typeof(Modes)' TmpBeatmap.Mode));                      break;                  case 5:                      ret = new ListViewItem("SetID");                      ret.SubItems.Add(TmpBeatmap.BeatmapsetID.ToString());                      break;                  case 6:                      ret = new ListViewItem("ID");                      ret.SubItems.Add(TmpBeatmap.BeatmapID.ToString());                      break;                  case 7:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_WAVPath"));                      ret.SubItems.Add(TmpBeatmap.Audio);                      if (!File.Exists(TmpBeatmap.Audio))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 8:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_BGPath"));                      ret.SubItems.Add(TmpBeatmap.Background);                      if (!File.Exists(TmpBeatmap.Background))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 9:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_VideoPath"));                      ret.SubItems.Add(TmpBeatmap.Video);                      if (!String.IsNullOrEmpty(TmpBeatmap.Video) && !File.Exists(TmpBeatmap.Video))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 10:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_FileVersion"));                      ret.SubItems.Add(TmpBeatmap.FileVersion);                      break;                  case 11:                      ret = new ListViewItem("HP");                      ret.SubItems.Add(TmpBeatmap.HPDrainRate.ToString());                      break;                  case 12:                      ret = new ListViewItem("CS");                      ret.SubItems.Add(TmpBeatmap.CircleSize.ToString());                      break;                  case 13:                      ret = new ListViewItem("OD");                      ret.SubItems.Add(TmpBeatmap.OverallDifficulty.ToString());                      break;                  case 14:                      ret = new ListViewItem("AR");                      ret.SubItems.Add(TmpBeatmap.ApproachRate.ToString());                      break;                  case 15:                      ret = new ListViewItem("MD5");                      ret.SubItems.Add(TmpBeatmap.GetHash());                      break;                  default:                      ret = new ListViewItem();                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,The following statement contains a magic number: switch (index)              {                  case 0:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Title"));                      ret.SubItems.Add(TmpBeatmap.Title);                      break;                  case 1:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Artist"));                      ret.SubItems.Add(TmpBeatmap.Artist);                      break;                  case 2:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mapper"));                      ret.SubItems.Add(TmpBeatmap.Creator);                      break;                  case 3:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Source"));                      ret.SubItems.Add(TmpBeatmap.Source);                      break;                  case 4:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mode"));                      ret.SubItems.Add(Enum.GetName(typeof(Modes)' TmpBeatmap.Mode));                      break;                  case 5:                      ret = new ListViewItem("SetID");                      ret.SubItems.Add(TmpBeatmap.BeatmapsetID.ToString());                      break;                  case 6:                      ret = new ListViewItem("ID");                      ret.SubItems.Add(TmpBeatmap.BeatmapID.ToString());                      break;                  case 7:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_WAVPath"));                      ret.SubItems.Add(TmpBeatmap.Audio);                      if (!File.Exists(TmpBeatmap.Audio))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 8:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_BGPath"));                      ret.SubItems.Add(TmpBeatmap.Background);                      if (!File.Exists(TmpBeatmap.Background))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 9:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_VideoPath"));                      ret.SubItems.Add(TmpBeatmap.Video);                      if (!String.IsNullOrEmpty(TmpBeatmap.Video) && !File.Exists(TmpBeatmap.Video))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 10:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_FileVersion"));                      ret.SubItems.Add(TmpBeatmap.FileVersion);                      break;                  case 11:                      ret = new ListViewItem("HP");                      ret.SubItems.Add(TmpBeatmap.HPDrainRate.ToString());                      break;                  case 12:                      ret = new ListViewItem("CS");                      ret.SubItems.Add(TmpBeatmap.CircleSize.ToString());                      break;                  case 13:                      ret = new ListViewItem("OD");                      ret.SubItems.Add(TmpBeatmap.OverallDifficulty.ToString());                      break;                  case 14:                      ret = new ListViewItem("AR");                      ret.SubItems.Add(TmpBeatmap.ApproachRate.ToString());                      break;                  case 15:                      ret = new ListViewItem("MD5");                      ret.SubItems.Add(TmpBeatmap.GetHash());                      break;                  default:                      ret = new ListViewItem();                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,The following statement contains a magic number: switch (index)              {                  case 0:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Title"));                      ret.SubItems.Add(TmpBeatmap.Title);                      break;                  case 1:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Artist"));                      ret.SubItems.Add(TmpBeatmap.Artist);                      break;                  case 2:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mapper"));                      ret.SubItems.Add(TmpBeatmap.Creator);                      break;                  case 3:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Source"));                      ret.SubItems.Add(TmpBeatmap.Source);                      break;                  case 4:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mode"));                      ret.SubItems.Add(Enum.GetName(typeof(Modes)' TmpBeatmap.Mode));                      break;                  case 5:                      ret = new ListViewItem("SetID");                      ret.SubItems.Add(TmpBeatmap.BeatmapsetID.ToString());                      break;                  case 6:                      ret = new ListViewItem("ID");                      ret.SubItems.Add(TmpBeatmap.BeatmapID.ToString());                      break;                  case 7:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_WAVPath"));                      ret.SubItems.Add(TmpBeatmap.Audio);                      if (!File.Exists(TmpBeatmap.Audio))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 8:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_BGPath"));                      ret.SubItems.Add(TmpBeatmap.Background);                      if (!File.Exists(TmpBeatmap.Background))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 9:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_VideoPath"));                      ret.SubItems.Add(TmpBeatmap.Video);                      if (!String.IsNullOrEmpty(TmpBeatmap.Video) && !File.Exists(TmpBeatmap.Video))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 10:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_FileVersion"));                      ret.SubItems.Add(TmpBeatmap.FileVersion);                      break;                  case 11:                      ret = new ListViewItem("HP");                      ret.SubItems.Add(TmpBeatmap.HPDrainRate.ToString());                      break;                  case 12:                      ret = new ListViewItem("CS");                      ret.SubItems.Add(TmpBeatmap.CircleSize.ToString());                      break;                  case 13:                      ret = new ListViewItem("OD");                      ret.SubItems.Add(TmpBeatmap.OverallDifficulty.ToString());                      break;                  case 14:                      ret = new ListViewItem("AR");                      ret.SubItems.Add(TmpBeatmap.ApproachRate.ToString());                      break;                  case 15:                      ret = new ListViewItem("MD5");                      ret.SubItems.Add(TmpBeatmap.GetHash());                      break;                  default:                      ret = new ListViewItem();                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,The following statement contains a magic number: switch (index)              {                  case 0:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Title"));                      ret.SubItems.Add(TmpBeatmap.Title);                      break;                  case 1:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Artist"));                      ret.SubItems.Add(TmpBeatmap.Artist);                      break;                  case 2:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mapper"));                      ret.SubItems.Add(TmpBeatmap.Creator);                      break;                  case 3:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Source"));                      ret.SubItems.Add(TmpBeatmap.Source);                      break;                  case 4:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mode"));                      ret.SubItems.Add(Enum.GetName(typeof(Modes)' TmpBeatmap.Mode));                      break;                  case 5:                      ret = new ListViewItem("SetID");                      ret.SubItems.Add(TmpBeatmap.BeatmapsetID.ToString());                      break;                  case 6:                      ret = new ListViewItem("ID");                      ret.SubItems.Add(TmpBeatmap.BeatmapID.ToString());                      break;                  case 7:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_WAVPath"));                      ret.SubItems.Add(TmpBeatmap.Audio);                      if (!File.Exists(TmpBeatmap.Audio))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 8:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_BGPath"));                      ret.SubItems.Add(TmpBeatmap.Background);                      if (!File.Exists(TmpBeatmap.Background))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 9:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_VideoPath"));                      ret.SubItems.Add(TmpBeatmap.Video);                      if (!String.IsNullOrEmpty(TmpBeatmap.Video) && !File.Exists(TmpBeatmap.Video))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 10:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_FileVersion"));                      ret.SubItems.Add(TmpBeatmap.FileVersion);                      break;                  case 11:                      ret = new ListViewItem("HP");                      ret.SubItems.Add(TmpBeatmap.HPDrainRate.ToString());                      break;                  case 12:                      ret = new ListViewItem("CS");                      ret.SubItems.Add(TmpBeatmap.CircleSize.ToString());                      break;                  case 13:                      ret = new ListViewItem("OD");                      ret.SubItems.Add(TmpBeatmap.OverallDifficulty.ToString());                      break;                  case 14:                      ret = new ListViewItem("AR");                      ret.SubItems.Add(TmpBeatmap.ApproachRate.ToString());                      break;                  case 15:                      ret = new ListViewItem("MD5");                      ret.SubItems.Add(TmpBeatmap.GetHash());                      break;                  default:                      ret = new ListViewItem();                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,The following statement contains a magic number: switch (index)              {                  case 0:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Title"));                      ret.SubItems.Add(TmpBeatmap.Title);                      break;                  case 1:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Artist"));                      ret.SubItems.Add(TmpBeatmap.Artist);                      break;                  case 2:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mapper"));                      ret.SubItems.Add(TmpBeatmap.Creator);                      break;                  case 3:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Source"));                      ret.SubItems.Add(TmpBeatmap.Source);                      break;                  case 4:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mode"));                      ret.SubItems.Add(Enum.GetName(typeof(Modes)' TmpBeatmap.Mode));                      break;                  case 5:                      ret = new ListViewItem("SetID");                      ret.SubItems.Add(TmpBeatmap.BeatmapsetID.ToString());                      break;                  case 6:                      ret = new ListViewItem("ID");                      ret.SubItems.Add(TmpBeatmap.BeatmapID.ToString());                      break;                  case 7:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_WAVPath"));                      ret.SubItems.Add(TmpBeatmap.Audio);                      if (!File.Exists(TmpBeatmap.Audio))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 8:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_BGPath"));                      ret.SubItems.Add(TmpBeatmap.Background);                      if (!File.Exists(TmpBeatmap.Background))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 9:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_VideoPath"));                      ret.SubItems.Add(TmpBeatmap.Video);                      if (!String.IsNullOrEmpty(TmpBeatmap.Video) && !File.Exists(TmpBeatmap.Video))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 10:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_FileVersion"));                      ret.SubItems.Add(TmpBeatmap.FileVersion);                      break;                  case 11:                      ret = new ListViewItem("HP");                      ret.SubItems.Add(TmpBeatmap.HPDrainRate.ToString());                      break;                  case 12:                      ret = new ListViewItem("CS");                      ret.SubItems.Add(TmpBeatmap.CircleSize.ToString());                      break;                  case 13:                      ret = new ListViewItem("OD");                      ret.SubItems.Add(TmpBeatmap.OverallDifficulty.ToString());                      break;                  case 14:                      ret = new ListViewItem("AR");                      ret.SubItems.Add(TmpBeatmap.ApproachRate.ToString());                      break;                  case 15:                      ret = new ListViewItem("MD5");                      ret.SubItems.Add(TmpBeatmap.GetHash());                      break;                  default:                      ret = new ListViewItem();                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,The following statement contains a magic number: switch (index)              {                  case 0:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Title"));                      ret.SubItems.Add(TmpBeatmap.Title);                      break;                  case 1:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Artist"));                      ret.SubItems.Add(TmpBeatmap.Artist);                      break;                  case 2:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mapper"));                      ret.SubItems.Add(TmpBeatmap.Creator);                      break;                  case 3:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Source"));                      ret.SubItems.Add(TmpBeatmap.Source);                      break;                  case 4:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mode"));                      ret.SubItems.Add(Enum.GetName(typeof(Modes)' TmpBeatmap.Mode));                      break;                  case 5:                      ret = new ListViewItem("SetID");                      ret.SubItems.Add(TmpBeatmap.BeatmapsetID.ToString());                      break;                  case 6:                      ret = new ListViewItem("ID");                      ret.SubItems.Add(TmpBeatmap.BeatmapID.ToString());                      break;                  case 7:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_WAVPath"));                      ret.SubItems.Add(TmpBeatmap.Audio);                      if (!File.Exists(TmpBeatmap.Audio))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 8:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_BGPath"));                      ret.SubItems.Add(TmpBeatmap.Background);                      if (!File.Exists(TmpBeatmap.Background))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 9:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_VideoPath"));                      ret.SubItems.Add(TmpBeatmap.Video);                      if (!String.IsNullOrEmpty(TmpBeatmap.Video) && !File.Exists(TmpBeatmap.Video))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 10:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_FileVersion"));                      ret.SubItems.Add(TmpBeatmap.FileVersion);                      break;                  case 11:                      ret = new ListViewItem("HP");                      ret.SubItems.Add(TmpBeatmap.HPDrainRate.ToString());                      break;                  case 12:                      ret = new ListViewItem("CS");                      ret.SubItems.Add(TmpBeatmap.CircleSize.ToString());                      break;                  case 13:                      ret = new ListViewItem("OD");                      ret.SubItems.Add(TmpBeatmap.OverallDifficulty.ToString());                      break;                  case 14:                      ret = new ListViewItem("AR");                      ret.SubItems.Add(TmpBeatmap.ApproachRate.ToString());                      break;                  case 15:                      ret = new ListViewItem("MD5");                      ret.SubItems.Add(TmpBeatmap.GetHash());                      break;                  default:                      ret = new ListViewItem();                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,The following statement contains a magic number: switch (index)              {                  case 0:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Title"));                      ret.SubItems.Add(TmpBeatmap.Title);                      break;                  case 1:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Artist"));                      ret.SubItems.Add(TmpBeatmap.Artist);                      break;                  case 2:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mapper"));                      ret.SubItems.Add(TmpBeatmap.Creator);                      break;                  case 3:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Source"));                      ret.SubItems.Add(TmpBeatmap.Source);                      break;                  case 4:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mode"));                      ret.SubItems.Add(Enum.GetName(typeof(Modes)' TmpBeatmap.Mode));                      break;                  case 5:                      ret = new ListViewItem("SetID");                      ret.SubItems.Add(TmpBeatmap.BeatmapsetID.ToString());                      break;                  case 6:                      ret = new ListViewItem("ID");                      ret.SubItems.Add(TmpBeatmap.BeatmapID.ToString());                      break;                  case 7:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_WAVPath"));                      ret.SubItems.Add(TmpBeatmap.Audio);                      if (!File.Exists(TmpBeatmap.Audio))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 8:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_BGPath"));                      ret.SubItems.Add(TmpBeatmap.Background);                      if (!File.Exists(TmpBeatmap.Background))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 9:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_VideoPath"));                      ret.SubItems.Add(TmpBeatmap.Video);                      if (!String.IsNullOrEmpty(TmpBeatmap.Video) && !File.Exists(TmpBeatmap.Video))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 10:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_FileVersion"));                      ret.SubItems.Add(TmpBeatmap.FileVersion);                      break;                  case 11:                      ret = new ListViewItem("HP");                      ret.SubItems.Add(TmpBeatmap.HPDrainRate.ToString());                      break;                  case 12:                      ret = new ListViewItem("CS");                      ret.SubItems.Add(TmpBeatmap.CircleSize.ToString());                      break;                  case 13:                      ret = new ListViewItem("OD");                      ret.SubItems.Add(TmpBeatmap.OverallDifficulty.ToString());                      break;                  case 14:                      ret = new ListViewItem("AR");                      ret.SubItems.Add(TmpBeatmap.ApproachRate.ToString());                      break;                  case 15:                      ret = new ListViewItem("MD5");                      ret.SubItems.Add(TmpBeatmap.GetHash());                      break;                  default:                      ret = new ListViewItem();                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,The following statement contains a magic number: switch (index)              {                  case 0:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Title"));                      ret.SubItems.Add(TmpBeatmap.Title);                      break;                  case 1:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Artist"));                      ret.SubItems.Add(TmpBeatmap.Artist);                      break;                  case 2:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mapper"));                      ret.SubItems.Add(TmpBeatmap.Creator);                      break;                  case 3:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Source"));                      ret.SubItems.Add(TmpBeatmap.Source);                      break;                  case 4:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mode"));                      ret.SubItems.Add(Enum.GetName(typeof(Modes)' TmpBeatmap.Mode));                      break;                  case 5:                      ret = new ListViewItem("SetID");                      ret.SubItems.Add(TmpBeatmap.BeatmapsetID.ToString());                      break;                  case 6:                      ret = new ListViewItem("ID");                      ret.SubItems.Add(TmpBeatmap.BeatmapID.ToString());                      break;                  case 7:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_WAVPath"));                      ret.SubItems.Add(TmpBeatmap.Audio);                      if (!File.Exists(TmpBeatmap.Audio))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 8:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_BGPath"));                      ret.SubItems.Add(TmpBeatmap.Background);                      if (!File.Exists(TmpBeatmap.Background))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 9:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_VideoPath"));                      ret.SubItems.Add(TmpBeatmap.Video);                      if (!String.IsNullOrEmpty(TmpBeatmap.Video) && !File.Exists(TmpBeatmap.Video))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 10:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_FileVersion"));                      ret.SubItems.Add(TmpBeatmap.FileVersion);                      break;                  case 11:                      ret = new ListViewItem("HP");                      ret.SubItems.Add(TmpBeatmap.HPDrainRate.ToString());                      break;                  case 12:                      ret = new ListViewItem("CS");                      ret.SubItems.Add(TmpBeatmap.CircleSize.ToString());                      break;                  case 13:                      ret = new ListViewItem("OD");                      ret.SubItems.Add(TmpBeatmap.OverallDifficulty.ToString());                      break;                  case 14:                      ret = new ListViewItem("AR");                      ret.SubItems.Add(TmpBeatmap.ApproachRate.ToString());                      break;                  case 15:                      ret = new ListViewItem("MD5");                      ret.SubItems.Add(TmpBeatmap.GetHash());                      break;                  default:                      ret = new ListViewItem();                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,The following statement contains a magic number: switch (index)              {                  case 0:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Title"));                      ret.SubItems.Add(TmpBeatmap.Title);                      break;                  case 1:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Artist"));                      ret.SubItems.Add(TmpBeatmap.Artist);                      break;                  case 2:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mapper"));                      ret.SubItems.Add(TmpBeatmap.Creator);                      break;                  case 3:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Source"));                      ret.SubItems.Add(TmpBeatmap.Source);                      break;                  case 4:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mode"));                      ret.SubItems.Add(Enum.GetName(typeof(Modes)' TmpBeatmap.Mode));                      break;                  case 5:                      ret = new ListViewItem("SetID");                      ret.SubItems.Add(TmpBeatmap.BeatmapsetID.ToString());                      break;                  case 6:                      ret = new ListViewItem("ID");                      ret.SubItems.Add(TmpBeatmap.BeatmapID.ToString());                      break;                  case 7:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_WAVPath"));                      ret.SubItems.Add(TmpBeatmap.Audio);                      if (!File.Exists(TmpBeatmap.Audio))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 8:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_BGPath"));                      ret.SubItems.Add(TmpBeatmap.Background);                      if (!File.Exists(TmpBeatmap.Background))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 9:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_VideoPath"));                      ret.SubItems.Add(TmpBeatmap.Video);                      if (!String.IsNullOrEmpty(TmpBeatmap.Video) && !File.Exists(TmpBeatmap.Video))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 10:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_FileVersion"));                      ret.SubItems.Add(TmpBeatmap.FileVersion);                      break;                  case 11:                      ret = new ListViewItem("HP");                      ret.SubItems.Add(TmpBeatmap.HPDrainRate.ToString());                      break;                  case 12:                      ret = new ListViewItem("CS");                      ret.SubItems.Add(TmpBeatmap.CircleSize.ToString());                      break;                  case 13:                      ret = new ListViewItem("OD");                      ret.SubItems.Add(TmpBeatmap.OverallDifficulty.ToString());                      break;                  case 14:                      ret = new ListViewItem("AR");                      ret.SubItems.Add(TmpBeatmap.ApproachRate.ToString());                      break;                  case 15:                      ret = new ListViewItem("MD5");                      ret.SubItems.Add(TmpBeatmap.GetHash());                      break;                  default:                      ret = new ListViewItem();                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,The following statement contains a magic number: switch (index)              {                  case 0:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Title"));                      ret.SubItems.Add(TmpBeatmap.Title);                      break;                  case 1:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Artist"));                      ret.SubItems.Add(TmpBeatmap.Artist);                      break;                  case 2:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mapper"));                      ret.SubItems.Add(TmpBeatmap.Creator);                      break;                  case 3:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Source"));                      ret.SubItems.Add(TmpBeatmap.Source);                      break;                  case 4:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mode"));                      ret.SubItems.Add(Enum.GetName(typeof(Modes)' TmpBeatmap.Mode));                      break;                  case 5:                      ret = new ListViewItem("SetID");                      ret.SubItems.Add(TmpBeatmap.BeatmapsetID.ToString());                      break;                  case 6:                      ret = new ListViewItem("ID");                      ret.SubItems.Add(TmpBeatmap.BeatmapID.ToString());                      break;                  case 7:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_WAVPath"));                      ret.SubItems.Add(TmpBeatmap.Audio);                      if (!File.Exists(TmpBeatmap.Audio))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 8:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_BGPath"));                      ret.SubItems.Add(TmpBeatmap.Background);                      if (!File.Exists(TmpBeatmap.Background))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 9:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_VideoPath"));                      ret.SubItems.Add(TmpBeatmap.Video);                      if (!String.IsNullOrEmpty(TmpBeatmap.Video) && !File.Exists(TmpBeatmap.Video))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 10:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_FileVersion"));                      ret.SubItems.Add(TmpBeatmap.FileVersion);                      break;                  case 11:                      ret = new ListViewItem("HP");                      ret.SubItems.Add(TmpBeatmap.HPDrainRate.ToString());                      break;                  case 12:                      ret = new ListViewItem("CS");                      ret.SubItems.Add(TmpBeatmap.CircleSize.ToString());                      break;                  case 13:                      ret = new ListViewItem("OD");                      ret.SubItems.Add(TmpBeatmap.OverallDifficulty.ToString());                      break;                  case 14:                      ret = new ListViewItem("AR");                      ret.SubItems.Add(TmpBeatmap.ApproachRate.ToString());                      break;                  case 15:                      ret = new ListViewItem("MD5");                      ret.SubItems.Add(TmpBeatmap.GetHash());                      break;                  default:                      ret = new ListViewItem();                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Getdetail,The following statement contains a magic number: switch (index)              {                  case 0:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Title"));                      ret.SubItems.Add(TmpBeatmap.Title);                      break;                  case 1:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Artist"));                      ret.SubItems.Add(TmpBeatmap.Artist);                      break;                  case 2:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mapper"));                      ret.SubItems.Add(TmpBeatmap.Creator);                      break;                  case 3:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Source"));                      ret.SubItems.Add(TmpBeatmap.Source);                      break;                  case 4:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_Mode"));                      ret.SubItems.Add(Enum.GetName(typeof(Modes)' TmpBeatmap.Mode));                      break;                  case 5:                      ret = new ListViewItem("SetID");                      ret.SubItems.Add(TmpBeatmap.BeatmapsetID.ToString());                      break;                  case 6:                      ret = new ListViewItem("ID");                      ret.SubItems.Add(TmpBeatmap.BeatmapID.ToString());                      break;                  case 7:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_WAVPath"));                      ret.SubItems.Add(TmpBeatmap.Audio);                      if (!File.Exists(TmpBeatmap.Audio))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 8:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_BGPath"));                      ret.SubItems.Add(TmpBeatmap.Background);                      if (!File.Exists(TmpBeatmap.Background))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 9:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_VideoPath"));                      ret.SubItems.Add(TmpBeatmap.Video);                      if (!String.IsNullOrEmpty(TmpBeatmap.Video) && !File.Exists(TmpBeatmap.Video))                      {                          ret.ForeColor = Color.Red;                      }                      break;                  case 10:                      ret = new ListViewItem(LanguageManager.Get("Main_ListDetail_FileVersion"));                      ret.SubItems.Add(TmpBeatmap.FileVersion);                      break;                  case 11:                      ret = new ListViewItem("HP");                      ret.SubItems.Add(TmpBeatmap.HPDrainRate.ToString());                      break;                  case 12:                      ret = new ListViewItem("CS");                      ret.SubItems.Add(TmpBeatmap.CircleSize.ToString());                      break;                  case 13:                      ret = new ListViewItem("OD");                      ret.SubItems.Add(TmpBeatmap.OverallDifficulty.ToString());                      break;                  case 14:                      ret = new ListViewItem("AR");                      ret.SubItems.Add(TmpBeatmap.ApproachRate.ToString());                      break;                  case 15:                      ret = new ListViewItem("MD5");                      ret.SubItems.Add(TmpBeatmap.GetHash());                      break;                  default:                      ret = new ListViewItem();                      break;              }
Magic Number,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,Resize,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main,The following statement contains a magic number: Main_Sytle_Setting.SelectedIndex = 2;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,SetDetail,The following statement contains a magic number: Main_ListDetail.VirtualListSize = 16;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Play,The following statement contains a magic number: Main_Time_Trackbar.MaxValue = (int)Core.Durnation * 1000;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Mini_Switcher_Click,The following statement contains a magic number: Main_Time_Trackbar.MaxValue = (int)Core.Durnation * 1000;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,UpdateTimer_Tick,The following statement contains a magic number: Main_Time_Trackbar.Value = (int)Core.Position * 1000;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,UpdateTimer_Tick,The following statement contains a magic number: Main_Time_Display.Text = String.Format("{0}:{1:D2} / {2}:{3:D2}"' (int)Core.Position / 60'                  (int)Core.Position % 60' (int)Core.Durnation / 60'                  (int)Core.Durnation % 60);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,UpdateTimer_Tick,The following statement contains a magic number: Main_Time_Display.Text = String.Format("{0}:{1:D2} / {2}:{3:D2}"' (int)Core.Position / 60'                  (int)Core.Position % 60' (int)Core.Durnation / 60'                  (int)Core.Durnation % 60);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,UpdateTimer_Tick,The following statement contains a magic number: Main_Time_Display.Text = String.Format("{0}:{1:D2} / {2}:{3:D2}"' (int)Core.Position / 60'                  (int)Core.Position % 60' (int)Core.Durnation / 60'                  (int)Core.Durnation % 60);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,UpdateTimer_Tick,The following statement contains a magic number: Main_Time_Display.Text = String.Format("{0}:{1:D2} / {2}:{3:D2}"' (int)Core.Position / 60'                  (int)Core.Position % 60' (int)Core.Durnation / 60'                  (int)Core.Durnation % 60);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Jump_OSU_Click,The following statement contains a magic number: wr.Write(20140127);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Jump_OSU_Click,The following statement contains a magic number: wr.Write((UInt32)2048);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Jump_OSU_Click,The following statement contains a magic number: wr.Write(new DateTime(2014' 1' 1).Ticks);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Collections_Click,The following statement contains a magic number: center.X = center.X + Width / 2 - dialog.Width / 2;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Collections_Click,The following statement contains a magic number: center.X = center.X + Width / 2 - dialog.Width / 2;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Collections_Click,The following statement contains a magic number: center.Y = center.Y + Height / 2 - dialog.Height / 2;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Collections_Click,The following statement contains a magic number: center.Y = center.Y + Height / 2 - dialog.Height / 2;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Volume_Fx_TrackBar_ValueChanged,The following statement contains a magic number: Core.SetVolume(3' Main_Volume_Fx_TrackBar.Value);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Volume_Music_TrackBar_ValueChanged,The following statement contains a magic number: Core.SetVolume(2' Main_Volume_Music_TrackBar.Value);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Time_Trackbar_ValueChanged,The following statement contains a magic number: Core.Seek((double)Main_Time_Trackbar.Value / 1000);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Search_Box_KeyPress,The following statement contains a magic number: e.KeyChar == (char)13
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_PlayList_RetrieveVirtualItem,The following statement contains a magic number: var item = new ListViewItem(Core.Allsets[setitem].ToString())                  {                      ForeColor = e.ItemIndex == Core.CurrentSetIndex ? Color.White : Color.Black'                      Font = e.ItemIndex == Core.CurrentSetIndex ? new Font("宋体"' 9' FontStyle.Bold) : new Font("宋体"' 9)'                      BackColor =                          e.ItemIndex % 2 == 0                              ? (e.ItemIndex == Core.CurrentSetIndex ? Color.LightSkyBlue : Color.White)                              : (e.ItemIndex == Core.CurrentSetIndex ? Color.DeepSkyBlue : Color.WhiteSmoke)                  };
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_PlayList_RetrieveVirtualItem,The following statement contains a magic number: var item = new ListViewItem(Core.Allsets[setitem].ToString())                  {                      ForeColor = e.ItemIndex == Core.CurrentSetIndex ? Color.White : Color.Black'                      Font = e.ItemIndex == Core.CurrentSetIndex ? new Font("宋体"' 9' FontStyle.Bold) : new Font("宋体"' 9)'                      BackColor =                          e.ItemIndex % 2 == 0                              ? (e.ItemIndex == Core.CurrentSetIndex ? Color.LightSkyBlue : Color.White)                              : (e.ItemIndex == Core.CurrentSetIndex ? Color.DeepSkyBlue : Color.WhiteSmoke)                  };
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_PlayList_RetrieveVirtualItem,The following statement contains a magic number: var item = new ListViewItem(Core.Allsets[setitem].ToString())                  {                      ForeColor = e.ItemIndex == Core.CurrentSetIndex ? Color.White : Color.Black'                      Font = e.ItemIndex == Core.CurrentSetIndex ? new Font("宋体"' 9' FontStyle.Bold) : new Font("宋体"' 9)'                      BackColor =                          e.ItemIndex % 2 == 0                              ? (e.ItemIndex == Core.CurrentSetIndex ? Color.LightSkyBlue : Color.White)                              : (e.ItemIndex == Core.CurrentSetIndex ? Color.DeepSkyBlue : Color.WhiteSmoke)                  };
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Tool_Export_Playlist_MP3_Click,The following statement contains a magic number: worker.RunWorkerCompleted += delegate { NotifySystem.Showtip(1000' LanguageManager.Get("OSUplayer")' LanguageManager.Get("Save_Complete")); };
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Tool_Export_Playlist_MP3_Click,The following statement contains a magic number: NotifySystem.Showtip(1000' LanguageManager.Get("OSUplayer")' LanguageManager.Get("Saving"));
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Time_Trackbar_MouseClick,The following statement contains a magic number: Core.Seek((double)Main_Time_Trackbar.Value / 1000);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Sytle_Setting_SelectedIndexChanged,The following statement contains a magic number: switch (Main_Sytle_Setting.SelectedIndex)              {                  case 0:                      //HT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 50;                      break;                  case 1:                      //DC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 75;                      break;                  case 2:                      //Normal                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 100;                      break;                  case 3:                      //NC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 4:                      //DT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 5:                      //Custom                      Main_NC_Control.Enabled = true;                      Main_Speed_Control.Enabled = true;                      break;              }
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Sytle_Setting_SelectedIndexChanged,The following statement contains a magic number: switch (Main_Sytle_Setting.SelectedIndex)              {                  case 0:                      //HT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 50;                      break;                  case 1:                      //DC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 75;                      break;                  case 2:                      //Normal                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 100;                      break;                  case 3:                      //NC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 4:                      //DT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 5:                      //Custom                      Main_NC_Control.Enabled = true;                      Main_Speed_Control.Enabled = true;                      break;              }
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Sytle_Setting_SelectedIndexChanged,The following statement contains a magic number: switch (Main_Sytle_Setting.SelectedIndex)              {                  case 0:                      //HT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 50;                      break;                  case 1:                      //DC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 75;                      break;                  case 2:                      //Normal                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 100;                      break;                  case 3:                      //NC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 4:                      //DT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 5:                      //Custom                      Main_NC_Control.Enabled = true;                      Main_Speed_Control.Enabled = true;                      break;              }
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Sytle_Setting_SelectedIndexChanged,The following statement contains a magic number: switch (Main_Sytle_Setting.SelectedIndex)              {                  case 0:                      //HT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 50;                      break;                  case 1:                      //DC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 75;                      break;                  case 2:                      //Normal                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 100;                      break;                  case 3:                      //NC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 4:                      //DT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 5:                      //Custom                      Main_NC_Control.Enabled = true;                      Main_Speed_Control.Enabled = true;                      break;              }
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Sytle_Setting_SelectedIndexChanged,The following statement contains a magic number: switch (Main_Sytle_Setting.SelectedIndex)              {                  case 0:                      //HT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 50;                      break;                  case 1:                      //DC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 75;                      break;                  case 2:                      //Normal                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 100;                      break;                  case 3:                      //NC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 4:                      //DT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 5:                      //Custom                      Main_NC_Control.Enabled = true;                      Main_Speed_Control.Enabled = true;                      break;              }
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Sytle_Setting_SelectedIndexChanged,The following statement contains a magic number: switch (Main_Sytle_Setting.SelectedIndex)              {                  case 0:                      //HT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 50;                      break;                  case 1:                      //DC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 75;                      break;                  case 2:                      //Normal                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 100;                      break;                  case 3:                      //NC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 4:                      //DT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 5:                      //Custom                      Main_NC_Control.Enabled = true;                      Main_Speed_Control.Enabled = true;                      break;              }
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Sytle_Setting_SelectedIndexChanged,The following statement contains a magic number: switch (Main_Sytle_Setting.SelectedIndex)              {                  case 0:                      //HT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 50;                      break;                  case 1:                      //DC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 75;                      break;                  case 2:                      //Normal                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 100;                      break;                  case 3:                      //NC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 4:                      //DT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 5:                      //Custom                      Main_NC_Control.Enabled = true;                      Main_Speed_Control.Enabled = true;                      break;              }
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Sytle_Setting_SelectedIndexChanged,The following statement contains a magic number: switch (Main_Sytle_Setting.SelectedIndex)              {                  case 0:                      //HT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 50;                      break;                  case 1:                      //DC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 75;                      break;                  case 2:                      //Normal                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 100;                      break;                  case 3:                      //NC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 4:                      //DT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 5:                      //Custom                      Main_NC_Control.Enabled = true;                      Main_Speed_Control.Enabled = true;                      break;              }
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Sytle_Setting_SelectedIndexChanged,The following statement contains a magic number: switch (Main_Sytle_Setting.SelectedIndex)              {                  case 0:                      //HT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 50;                      break;                  case 1:                      //DC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 75;                      break;                  case 2:                      //Normal                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 100;                      break;                  case 3:                      //NC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 4:                      //DT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 5:                      //Custom                      Main_NC_Control.Enabled = true;                      Main_Speed_Control.Enabled = true;                      break;              }
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Menu.Size = new System.Drawing.Size(69' 24);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Menu.Size = new System.Drawing.Size(69' 24);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Run_OSU.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Run_OSU.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Set_OSUPath.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Set_OSUPath.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Separator1.Size = new System.Drawing.Size(203' 6);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Separator1.Size = new System.Drawing.Size(203' 6);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Import_OSU.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Import_OSU.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Import_Scores.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Import_Scores.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Separator2.Size = new System.Drawing.Size(203' 6);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Separator2.Size = new System.Drawing.Size(203' 6);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Open_Folder.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Open_Folder.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Open_MapFile.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Open_MapFile.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Open_SBFile.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Open_SBFile.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_SeparatorItem3.Size = new System.Drawing.Size(203' 6);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_SeparatorItem3.Size = new System.Drawing.Size(203' 6);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Export_MP3.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Export_MP3.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Export_Background.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Export_Background.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Separator4.Size = new System.Drawing.Size(203' 6);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Separator4.Size = new System.Drawing.Size(203' 6);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Exit.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_File_Exit.Size = new System.Drawing.Size(206' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tool_Menu.Size = new System.Drawing.Size(70' 24);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tool_Menu.Size = new System.Drawing.Size(70' 24);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tool_Search_Dulplate.Size = new System.Drawing.Size(247' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tool_Search_Dulplate.Size = new System.Drawing.Size(247' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tool_Export_Playlist.Size = new System.Drawing.Size(247' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tool_Export_Playlist.Size = new System.Drawing.Size(247' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tool_Export_Playlist_MP3.Size = new System.Drawing.Size(247' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tool_Export_Playlist_MP3.Size = new System.Drawing.Size(247' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Menu.Size = new System.Drawing.Size(73' 24);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Menu.Size = new System.Drawing.Size(73' 24);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_Fx.Size = new System.Drawing.Size(168' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_Fx.Size = new System.Drawing.Size(168' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_Video.Size = new System.Drawing.Size(168' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_Video.Size = new System.Drawing.Size(168' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_PlayMode.Size = new System.Drawing.Size(168' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_PlayMode.Size = new System.Drawing.Size(168' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_PlayMode_Normal.Size = new System.Drawing.Size(144' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_PlayMode_Normal.Size = new System.Drawing.Size(144' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_PlayMode_Repeat.Size = new System.Drawing.Size(144' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_PlayMode_Repeat.Size = new System.Drawing.Size(144' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_PlayMode_Random.Size = new System.Drawing.Size(144' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_PlayMode_Random.Size = new System.Drawing.Size(144' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Select_QQ.Size = new System.Drawing.Size(168' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Select_QQ.Size = new System.Drawing.Size(168' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Sync_QQ.Size = new System.Drawing.Size(168' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Sync_QQ.Size = new System.Drawing.Size(168' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_SB.Size = new System.Drawing.Size(168' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_SB.Size = new System.Drawing.Size(168' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Show_Popup.Size = new System.Drawing.Size(168' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Show_Popup.Size = new System.Drawing.Size(168' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_About.Size = new System.Drawing.Size(72' 24);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_About.Size = new System.Drawing.Size(72' 24);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Panel.Location = new System.Drawing.Point(4' 28);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Panel.Location = new System.Drawing.Point(4' 28);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Panel.MinimumSize = new System.Drawing.Size(875' 654);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Panel.MinimumSize = new System.Drawing.Size(875' 654);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Panel.Size = new System.Drawing.Size(875' 654);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Panel.Size = new System.Drawing.Size(875' 654);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Panel.TabIndex = 21;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tab_Control_Panel.ColumnCount = 4;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tab_Control_Panel.Controls.Add(this.Main_PageView_Page4' 3' 0);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tab_Control_Panel.Controls.Add(this.Main_PageView_Page3' 2' 0);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tab_Control_Panel.Location = new System.Drawing.Point(7' 620);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tab_Control_Panel.Location = new System.Drawing.Point(7' 620);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tab_Control_Panel.RowStyles.Add(new System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent' 100F));
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tab_Control_Panel.Size = new System.Drawing.Size(313' 32);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tab_Control_Panel.Size = new System.Drawing.Size(313' 32);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Tab_Control_Panel.TabIndex = 41;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page4.Location = new System.Drawing.Point(235' 0);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page4.Size = new System.Drawing.Size(78' 32);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page4.Size = new System.Drawing.Size(78' 32);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page4.TabIndex = 40;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page1.Size = new System.Drawing.Size(78' 32);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page1.Size = new System.Drawing.Size(78' 32);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page1.TabIndex = 37;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page2.Location = new System.Drawing.Point(78' 0);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page2.Size = new System.Drawing.Size(78' 32);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page2.Size = new System.Drawing.Size(78' 32);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page2.TabIndex = 38;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page3.Location = new System.Drawing.Point(156' 0);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page3.Size = new System.Drawing.Size(79' 32);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page3.Size = new System.Drawing.Size(79' 32);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PageView_Page3.TabIndex = 39;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPanel.Location = new System.Drawing.Point(7' 430);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPanel.Location = new System.Drawing.Point(7' 430);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPanel.Size = new System.Drawing.Size(518' 191);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPanel.Size = new System.Drawing.Size(518' 191);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPanel.TabIndex = 36;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabControl.Size = new System.Drawing.Size(518' 220);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabControl.Size = new System.Drawing.Size(518' 220);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage1.Location = new System.Drawing.Point(4' 4);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage1.Location = new System.Drawing.Point(4' 4);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage1.Size = new System.Drawing.Size(510' 191);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage1.Size = new System.Drawing.Size(510' 191);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_ListDetail.Location = new System.Drawing.Point(-3' -3);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_ListDetail.Location = new System.Drawing.Point(-3' -3);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_ListDetail.Size = new System.Drawing.Size(516' 190);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_ListDetail.Size = new System.Drawing.Size(516' 190);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_ListDetail.TabIndex = 40;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_ListDetail_Key.Width = 120;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_ListDetail_Value.Width = 300;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage2.Location = new System.Drawing.Point(4' 4);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage2.Location = new System.Drawing.Point(4' 4);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage2.Padding = new System.Windows.Forms.Padding(3);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage2.Size = new System.Drawing.Size(510' 191);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage2.Size = new System.Drawing.Size(510' 191);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_ScoreBox.RowHeight = 60;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_ScoreBox.Size = new System.Drawing.Size(506' 190);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_ScoreBox.Size = new System.Drawing.Size(506' 190);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_ScoreBox.TabIndex = 26;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_ScoreBox_Rank.Width = 45;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_ScoreBox_Details.Width = 451;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage3.Location = new System.Drawing.Point(4' 4);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage3.Location = new System.Drawing.Point(4' 4);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage3.Size = new System.Drawing.Size(510' 191);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage3.Size = new System.Drawing.Size(510' 191);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage3.TabIndex = 2;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_DiffList.ItemHeight = 15;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_DiffList.Size = new System.Drawing.Size(506' 180);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_DiffList.Size = new System.Drawing.Size(506' 180);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_DiffList.TabIndex = 25;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage4.Location = new System.Drawing.Point(4' 4);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage4.Location = new System.Drawing.Point(4' 4);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage4.Size = new System.Drawing.Size(510' 191);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage4.Size = new System.Drawing.Size(510' 191);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_TabPage4.TabIndex = 3;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sort_Setting.Location = new System.Drawing.Point(80' 108);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sort_Setting.Location = new System.Drawing.Point(80' 108);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sort_Setting.Size = new System.Drawing.Size(121' 23);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sort_Setting.Size = new System.Drawing.Size(121' 23);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sort_Setting.TabIndex = 8;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sort_Label.Location = new System.Drawing.Point(7' 111);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sort_Label.Location = new System.Drawing.Point(7' 111);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sort_Label.Size = new System.Drawing.Size(67' 15);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sort_Label.Size = new System.Drawing.Size(67' 15);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sort_Label.TabIndex = 7;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_SB_Box.Location = new System.Drawing.Point(10' 89);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_SB_Box.Location = new System.Drawing.Point(10' 89);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_SB_Box.Size = new System.Drawing.Size(75' 19);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_SB_Box.Size = new System.Drawing.Size(75' 19);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_SB_Box.TabIndex = 6;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_Video_Box.Location = new System.Drawing.Point(10' 64);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_Video_Box.Location = new System.Drawing.Point(10' 64);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_Video_Box.Size = new System.Drawing.Size(89' 19);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_Video_Box.Size = new System.Drawing.Size(89' 19);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_Video_Box.TabIndex = 5;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_Fx_Box.Location = new System.Drawing.Point(10' 39);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_Fx_Box.Location = new System.Drawing.Point(10' 39);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_Fx_Box.Size = new System.Drawing.Size(89' 19);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_Fx_Box.Size = new System.Drawing.Size(89' 19);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Option_Play_Fx_Box.TabIndex = 4;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Speed_Control.Location = new System.Drawing.Point(267' 10);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Speed_Control.Location = new System.Drawing.Point(267' 10);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Speed_Control.MaxValue = 300;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Speed_Control.MinValue = 25;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Speed_Control.Size = new System.Drawing.Size(237' 23);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Speed_Control.Size = new System.Drawing.Size(237' 23);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Speed_Control.SliderWidthHigh = 3F;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Speed_Control.SliderWidthLow = 3F;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Speed_Control.TabIndex = 3;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Speed_Control.Value = 25;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Speed_Control.ValueAdjusted = 0.25F;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Speed_Control.ValueBoxFont = new System.Drawing.Font("Arial"' 7.8F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0)));
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sytle_Label.Location = new System.Drawing.Point(7' 13);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sytle_Label.Location = new System.Drawing.Point(7' 13);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sytle_Label.Size = new System.Drawing.Size(67' 15);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sytle_Label.Size = new System.Drawing.Size(67' 15);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sytle_Label.TabIndex = 2;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sytle_Setting.Location = new System.Drawing.Point(80' 10);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sytle_Setting.Location = new System.Drawing.Point(80' 10);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sytle_Setting.Size = new System.Drawing.Size(121' 23);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Sytle_Setting.Size = new System.Drawing.Size(121' 23);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_NC_Control.Location = new System.Drawing.Point(216' 12);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_NC_Control.Location = new System.Drawing.Point(216' 12);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_NC_Control.Size = new System.Drawing.Size(45' 19);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_NC_Control.Size = new System.Drawing.Size(45' 19);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_CurrentList.Location = new System.Drawing.Point(528' 33);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_CurrentList.Location = new System.Drawing.Point(528' 33);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_CurrentList.Size = new System.Drawing.Size(115' 15);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_CurrentList.Size = new System.Drawing.Size(115' 15);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_CurrentList.TabIndex = 30;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Search_Box.Location = new System.Drawing.Point(637' 3);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Search_Box.Location = new System.Drawing.Point(637' 3);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Search_Box.Size = new System.Drawing.Size(232' 25);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Search_Box.Size = new System.Drawing.Size(232' 25);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Search_Box.TabIndex = 35;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList.Location = new System.Drawing.Point(525' 55);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList.Location = new System.Drawing.Point(525' 55);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList.Size = new System.Drawing.Size(344' 595);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList.Size = new System.Drawing.Size(344' 595);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList.TabIndex = 24;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList_Name.Width = 500;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList_RightClick_Menu.ImageScalingSize = new System.Drawing.Size(20' 20);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList_RightClick_Menu.ImageScalingSize = new System.Drawing.Size(20' 20);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList_RightClick_Menu.Size = new System.Drawing.Size(205' 108);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList_RightClick_Menu.Size = new System.Drawing.Size(205' 108);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList_RightClick_Copy_Current_Name.Size = new System.Drawing.Size(204' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList_RightClick_Copy_Current_Name.Size = new System.Drawing.Size(204' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList_RightClick_Delete_One.Size = new System.Drawing.Size(204' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList_RightClick_Delete_One.Size = new System.Drawing.Size(204' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList_RightClick_Export_MP3.Size = new System.Drawing.Size(204' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList_RightClick_Export_MP3.Size = new System.Drawing.Size(204' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList_RightClick_Open_In_OSU.Size = new System.Drawing.Size(204' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayList_RightClick_Open_In_OSU.Size = new System.Drawing.Size(204' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Core_Panel.Size = new System.Drawing.Size(525' 431);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Core_Panel.Size = new System.Drawing.Size(525' 431);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Core_Panel.TabIndex = 22;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayPrev.Location = new System.Drawing.Point(132' 400);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayPrev.Location = new System.Drawing.Point(132' 400);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayPrev.Size = new System.Drawing.Size(43' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayPrev.Size = new System.Drawing.Size(43' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayPrev.TabIndex = 56;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Jump_OSU.Location = new System.Drawing.Point(491' 398);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Jump_OSU.Location = new System.Drawing.Point(491' 398);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Jump_OSU.Size = new System.Drawing.Size(32' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Jump_OSU.Size = new System.Drawing.Size(32' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_TrackBar.Location = new System.Drawing.Point(491' 32);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_TrackBar.Location = new System.Drawing.Point(491' 32);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_TrackBar.MaxValue = 100;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_TrackBar.Size = new System.Drawing.Size(30' 343);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_TrackBar.Size = new System.Drawing.Size(30' 343);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_TrackBar.SliderSize = new System.Drawing.Size(10' 20);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_TrackBar.SliderSize = new System.Drawing.Size(10' 20);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_TrackBar.SliderWidthHigh = 2F;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_TrackBar.SliderWidthLow = 2F;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_TrackBar.ValueAdjusted = 80F;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Time_Trackbar.Location = new System.Drawing.Point(230' 405);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Time_Trackbar.Location = new System.Drawing.Point(230' 405);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Time_Trackbar.Size = new System.Drawing.Size(257' 17);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Time_Trackbar.Size = new System.Drawing.Size(257' 17);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Time_Trackbar.SliderWidthHigh = 3F;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Time_Trackbar.SliderWidthLow = 3F;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Mini_Switcher.Location = new System.Drawing.Point(491' 3);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Mini_Switcher.Location = new System.Drawing.Point(491' 3);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Mini_Switcher.Size = new System.Drawing.Size(30' 27);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Mini_Switcher.Size = new System.Drawing.Size(30' 27);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Mini_Switcher.TabIndex = 43;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Time_Display.Font = new System.Drawing.Font("宋体"' 9F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(134)));
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Time_Display.Font = new System.Drawing.Font("宋体"' 9F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(134)));
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Time_Display.Location = new System.Drawing.Point(7' 8);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Time_Display.Location = new System.Drawing.Point(7' 8);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Time_Display.Size = new System.Drawing.Size(106' 15);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Time_Display.Size = new System.Drawing.Size(106' 15);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Time_Display.TabIndex = 55;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Music_TrackBar.Location = new System.Drawing.Point(162' 7);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Music_TrackBar.Location = new System.Drawing.Point(162' 7);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Music_TrackBar.MaxValue = 100;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Music_TrackBar.Size = new System.Drawing.Size(113' 17);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Music_TrackBar.Size = new System.Drawing.Size(113' 17);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Music_TrackBar.SliderWidthHigh = 3F;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Music_TrackBar.SliderWidthLow = 3F;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Music_TrackBar.TabIndex = 54;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Music_TrackBar.ValueAdjusted = 80F;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Main_Display.Location = new System.Drawing.Point(7' 29);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Main_Display.Location = new System.Drawing.Point(7' 29);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Main_Display.MinimumSize = new System.Drawing.Size(320' 240);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Main_Display.MinimumSize = new System.Drawing.Size(320' 240);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Main_Display.Size = new System.Drawing.Size(480' 360);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Main_Display.Size = new System.Drawing.Size(480' 360);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Main_Display.TabIndex = 45;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Fx_TrackBar.Location = new System.Drawing.Point(324' 7);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Fx_TrackBar.Location = new System.Drawing.Point(324' 7);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Fx_TrackBar.MaxValue = 100;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Fx_TrackBar.Size = new System.Drawing.Size(156' 17);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Fx_TrackBar.Size = new System.Drawing.Size(156' 17);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Fx_TrackBar.SliderWidthHigh = 3F;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Fx_TrackBar.SliderWidthLow = 3F;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Fx_TrackBar.TabIndex = 51;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Fx_TrackBar.ValueAdjusted = 60F;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Fx_Hint_Label.Location = new System.Drawing.Point(281' 6);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Fx_Hint_Label.Location = new System.Drawing.Point(281' 6);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Fx_Hint_Label.Size = new System.Drawing.Size(37' 15);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Fx_Hint_Label.Size = new System.Drawing.Size(37' 15);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Fx_Hint_Label.TabIndex = 52;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Music_Hint_Label.Location = new System.Drawing.Point(119' 6);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Music_Hint_Label.Location = new System.Drawing.Point(119' 6);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Music_Hint_Label.Size = new System.Drawing.Size(37' 15);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Music_Hint_Label.Size = new System.Drawing.Size(37' 15);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Music_Hint_Label.TabIndex = 53;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Hint_Label.Location = new System.Drawing.Point(487' 378);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Hint_Label.Location = new System.Drawing.Point(487' 378);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Hint_Label.Size = new System.Drawing.Size(37' 15);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Hint_Label.Size = new System.Drawing.Size(37' 15);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Volume_Hint_Label.TabIndex = 50;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayNext.Location = new System.Drawing.Point(181' 400);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayNext.Location = new System.Drawing.Point(181' 400);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayNext.Size = new System.Drawing.Size(43' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayNext.Size = new System.Drawing.Size(43' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_PlayNext.TabIndex = 48;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Stop.Location = new System.Drawing.Point(69' 400);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Stop.Location = new System.Drawing.Point(69' 400);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Stop.Size = new System.Drawing.Size(57' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Stop.Size = new System.Drawing.Size(57' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Stop.TabIndex = 47;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Play.Location = new System.Drawing.Point(7' 400);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Play.Location = new System.Drawing.Point(7' 400);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Play.Size = new System.Drawing.Size(57' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Play.Size = new System.Drawing.Size(57' 26);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Play.TabIndex = 46;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Collections.Location = new System.Drawing.Point(525' 3);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Collections.Location = new System.Drawing.Point(525' 3);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Collections.Size = new System.Drawing.Size(106' 27);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Collections.Size = new System.Drawing.Size(106' 27);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_Collections.TabIndex = 32;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.NextTimer.Interval = 200;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.SearchTimer.Interval = 500;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_MenuStrip.ImageScalingSize = new System.Drawing.Size(20' 20);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_MenuStrip.ImageScalingSize = new System.Drawing.Size(20' 20);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_MenuStrip.Location = new System.Drawing.Point(4' 4);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_MenuStrip.Location = new System.Drawing.Point(4' 4);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_MenuStrip.Size = new System.Drawing.Size(874' 24);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_MenuStrip.Size = new System.Drawing.Size(874' 24);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_MenuStrip.TabIndex = 2;
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_LanguageSelect.Size = new System.Drawing.Size(69' 24);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_LanguageSelect.Size = new System.Drawing.Size(69' 24);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_QQ_Hint_Label.Size = new System.Drawing.Size(97' 21);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Main_QQ_Hint_Label.Size = new System.Drawing.Size(97' 21);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(882' 684);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(882' 684);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(900' 731);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(900' 731);
Magic Number,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(4);
Magic Number,OSUplayer,Program,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Program.cs,Application_ThreadException,The following statement contains a magic number: NotifySystem.Showtip(1000' "发生了一些令人悲伤的事情><"' "程序将试图继续运行"' ToolTipIcon.Error);
Magic Number,OSUplayer,Program,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Program.cs,CurrentDomain_UnhandledException,The following statement contains a magic number: NotifySystem.Showtip(1000' "发生了一些令人悲伤的事情><"' "程序将试图继续运行"' ToolTipIcon.Error);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Player,The following statement contains a magic number: _screenCenter = new Vector2((float)ssize.Width / 2' (float)ssize.Height / 2);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Player,The following statement contains a magic number: _screenCenter = new Vector2((float)ssize.Width / 2' (float)ssize.Height / 2);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Player,The following statement contains a magic number: _sbScale = Math.Min(_showRect.Width / 640f' _showRect.Height / 480f);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Player,The following statement contains a magic number: _sbScale = Math.Min(_showRect.Width / 640f' _showRect.Height / 480f);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Player,The following statement contains a magic number: SBtramsform = Matrix.CreateTranslation(-320' -240' 0) * Matrix.CreateScale(_sbScale' _sbScale' 1) * Matrix.CreateTranslation(new Vector3(_screenCenter' 0));
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Player,The following statement contains a magic number: SBtramsform = Matrix.CreateTranslation(-320' -240' 0) * Matrix.CreateScale(_sbScale' _sbScale' 1) * Matrix.CreateTranslation(new Vector3(_screenCenter' 0));
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Resize,The following statement contains a magic number: _screenCenter = new Vector2((float)size.Width / 2' (float)size.Height / 2);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Resize,The following statement contains a magic number: _screenCenter = new Vector2((float)size.Width / 2' (float)size.Height / 2);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Resize,The following statement contains a magic number: _sbScale = Math.Min(_showRect.Width / 640f' _showRect.Height / 480f);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Resize,The following statement contains a magic number: _sbScale = Math.Min(_showRect.Width / 640f' _showRect.Height / 480f);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Resize,The following statement contains a magic number: SBtramsform = Matrix.CreateTranslation(-320' -240' 0) * Matrix.CreateScale(_sbScale' _sbScale' 1) * Matrix.CreateTranslation(new Vector3(_screenCenter' 0));
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Resize,The following statement contains a magic number: SBtramsform = Matrix.CreateTranslation(-320' -240' 0) * Matrix.CreateScale(_sbScale' _sbScale' 1) * Matrix.CreateTranslation(new Vector3(_screenCenter' 0));
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Initvideo,The following statement contains a magic number: _decoder = new VideoDecoder(10);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Initvideo,The following statement contains a magic number: _videoCenter = new Vector2((float)_decoder.width / 2' (float)_decoder.height / 2);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Initvideo,The following statement contains a magic number: _videoCenter = new Vector2((float)_decoder.width / 2' (float)_decoder.height / 2);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,InitBG,The following statement contains a magic number: NotifySystem.Showtip(1000' LanguageManager.Get("OSUplayer")' LanguageManager.Get("BG_Loss_Tip_Text"));
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,InitBG,The following statement contains a magic number: _bgCenter = new Vector2((float)_bgTexture.Width / 2' (float)_bgTexture.Height / 2);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,InitBG,The following statement contains a magic number: _bgCenter = new Vector2((float)_bgTexture.Width / 2' (float)_bgTexture.Height / 2);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,RenderSB,The following statement contains a magic number: element.Update((int)(Position * 1000));
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,RenderSB,The following statement contains a magic number: element.Draw((element.Parameter & 4) == 4 ? AdditiveSprite : AlphaSprite);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,RenderSB,The following statement contains a magic number: element.Draw((element.Parameter & 4) == 4 ? AdditiveSprite : AlphaSprite);
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,RenderVideo,The following statement contains a magic number: Position - (double)Map.VideoOffset / 1000 < 0
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,RenderVideo,The following statement contains a magic number: var videoframe = _decoder.GetFrame(Convert.ToInt32(Position * 1000 - Map.VideoOffset));
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Initfx,The following statement contains a magic number: switch (tmpH.type)                  {                      case ObjectFlag.Normal:                      case ObjectFlag.NormalNewCombo:                          if (tmpH.sample != olddefault) { tmpSample = tmpH.sample; }                          if (tmpH.S_Volume != 0) { volumeH = tmpH.S_Volume; }                          fxlist.Add(                              new Fxlist(tmpH.starttime' Setplayer(ref player' Set.Getsamplename                                  (tmpSample' tmpH.allhitsound))' volumeH));                          if (tmpH.A_sample.sample != 0)                          {                              fxlist.Add(                             new Fxlist(tmpH.starttime' Setplayer(ref player' Set.Getsamplename                                 (tmpH.A_sample' tmpH.allhitsound))' volumeH));                          }                          break;                      case ObjectFlag.Slider:                      case ObjectFlag.SliderNewCombo:                          //TODO:每个节点的sampleset                          //TODO:滑条tick                          if (tmpH.sample != olddefault) { tmpSample = tmpH.sample; }                          double deltatime = (600.0 * tmpH.length / bpm / Map.SliderMultiplier);                          if (tmpH.S_Volume != 0) { volumeH = tmpH.S_Volume / (float)100.0; }                          for (int j = 0; j <= tmpH.repeatcount; j++)                          {                              fxlist.Add(                                  new Fxlist((int)(tmpH.starttime + deltatime * j)'                                      Setplayer(ref player' Set.Getsamplename                              (tmpSample' tmpH.Hitsounds[j]))' volumeH));                          }                          break;                      case ObjectFlag.Spinner:                      case ObjectFlag.SpinnerNewCombo:                          if (tmpH.sample != olddefault) { tmpSample = tmpH.sample; }                          if (tmpH.S_Volume != 0) { volumeH = tmpH.S_Volume; }                          fxlist.Add(                              new Fxlist(tmpH.EndTime' Setplayer(ref player' Set.Getsamplename(tmpSample' tmpH.allhitsound))' volumeH));                          if (tmpH.A_sample.sample != 0)                          {                              fxlist.Add(new Fxlist(tmpH.EndTime' Setplayer(ref player' Set.Getsamplename                                  (tmpH.A_sample' tmpH.allhitsound))' volumeH));                          }                          break;                  }
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Initfx,The following statement contains a magic number: switch (tmpH.type)                  {                      case ObjectFlag.Normal:                      case ObjectFlag.NormalNewCombo:                          if (tmpH.sample != olddefault) { tmpSample = tmpH.sample; }                          if (tmpH.S_Volume != 0) { volumeH = tmpH.S_Volume; }                          fxlist.Add(                              new Fxlist(tmpH.starttime' Setplayer(ref player' Set.Getsamplename                                  (tmpSample' tmpH.allhitsound))' volumeH));                          if (tmpH.A_sample.sample != 0)                          {                              fxlist.Add(                             new Fxlist(tmpH.starttime' Setplayer(ref player' Set.Getsamplename                                 (tmpH.A_sample' tmpH.allhitsound))' volumeH));                          }                          break;                      case ObjectFlag.Slider:                      case ObjectFlag.SliderNewCombo:                          //TODO:每个节点的sampleset                          //TODO:滑条tick                          if (tmpH.sample != olddefault) { tmpSample = tmpH.sample; }                          double deltatime = (600.0 * tmpH.length / bpm / Map.SliderMultiplier);                          if (tmpH.S_Volume != 0) { volumeH = tmpH.S_Volume / (float)100.0; }                          for (int j = 0; j <= tmpH.repeatcount; j++)                          {                              fxlist.Add(                                  new Fxlist((int)(tmpH.starttime + deltatime * j)'                                      Setplayer(ref player' Set.Getsamplename                              (tmpSample' tmpH.Hitsounds[j]))' volumeH));                          }                          break;                      case ObjectFlag.Spinner:                      case ObjectFlag.SpinnerNewCombo:                          if (tmpH.sample != olddefault) { tmpSample = tmpH.sample; }                          if (tmpH.S_Volume != 0) { volumeH = tmpH.S_Volume; }                          fxlist.Add(                              new Fxlist(tmpH.EndTime' Setplayer(ref player' Set.Getsamplename(tmpSample' tmpH.allhitsound))' volumeH));                          if (tmpH.A_sample.sample != 0)                          {                              fxlist.Add(new Fxlist(tmpH.EndTime' Setplayer(ref player' Set.Getsamplename                                  (tmpH.A_sample' tmpH.allhitsound))' volumeH));                          }                          break;                  }
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Initfx,The following statement contains a magic number: i < uniAudio.Durnation * 1000
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Seek,The following statement contains a magic number: fxlist[_fxpos].Time <= uniAudio.Position * 1000 && _fxpos < fxlist.Count
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,AVsync,The following statement contains a magic number: (fxlist[_fxpos + 1].Time <= uniAudio.Position * 1000)
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,AVsync,The following statement contains a magic number: fxlist[_fxpos].Time <= uniAudio.Position * 1000
Magic Number,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,SetSpeed,The following statement contains a magic number: uniAudio.setFreq(speed / (float)100);
Magic Number,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Decode,The following statement contains a magic number: double num = Marshal.ReadInt64(packet' 8);
Magic Number,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Decode,The following statement contains a magic number: int num2 = Marshal.ReadInt32(packet' 20);
Magic Number,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Decode,The following statement contains a magic number: FrameBufferTimes[writeCursor%BufferSize] = ((num - stream.start_time)*FrameDelay)*                                                                                 1000.0;
Magic Number,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Decode,The following statement contains a magic number: ((frameFinished != 0) && (Marshal.ReadIntPtr(packet' 0x10) != IntPtr.Zero)) &&                                      (FFmpeg.img_convert(pFrameRGB' 6' pFrame' (int) codecCtx.pix_fmt' codecCtx.width'                                          codecCtx.height) == 0)
Magic Number,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Decode,The following statement contains a magic number: Thread.Sleep(15);
Magic Number,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Open,The following statement contains a magic number: int cb = FFmpeg.avpicture_get_size(6' codecCtx.width' codecCtx.height);
Magic Number,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Open,The following statement contains a magic number: FFmpeg.avpicture_fill(pFrameRGB' buffer' 6' codecCtx.width' codecCtx.height);
Magic Number,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Open,The following statement contains a magic number: FrameBuffer[j] = new byte[(width*height)*4];
Magic Number,OSUplayer.Graphic,VideoDecoder,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\VideoDecoder.cs,Seek,The following statement contains a magic number: double num2 = ((time/1000.0)/FrameDelay) + stream.start_time;
Magic Number,OSUplayer.Graphic,StaticGraphic,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TGraphic.cs,Draw,The following statement contains a magic number: (Parameter & 2) == 2
Magic Number,OSUplayer.Graphic,StaticGraphic,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TGraphic.cs,Draw,The following statement contains a magic number: (Parameter & 2) == 2
Magic Number,OSUplayer.Graphic,TGraphic,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TGraphic.cs,TGraphic,The following statement contains a magic number: switch (element.Type)              {                  case ElementType.Sprite:                  {                      Texturearray = file;                      FrameCount = 1;                      CurrentFrameIndex = 0;                      _msLastFrame = 0;                      _mSPerFrame = 16;                      Position = new Vector2(element.X0' element.Y0);                      Origin = Getorigin(Texturearray[0]' element.Origin);                      break;                  }                  case ElementType.Animation:                  {                      Texturearray = file;                      FrameCount = element.FrameCount;                      _mSPerFrame = element.Framedelay;                      _loop = element.Looptype;                      CurrentFrameIndex = 0;                      _msLastFrame = 0;                      Position = new Vector2(element.X0' element.Y0);                      //this.texture = texturearray[0];                      Origin = Getorigin(Texturearray[0]' element.Origin);                      break;                  }                  default:                      throw (new FormatException("Failed to resolve .osb file"));              }
Magic Number,OSUplayer.Graphic,TGraphic,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TGraphic.cs,TGraphic,The following statement contains a magic number: Layer = 0.9f - element.Z*0.000001f;
Magic Number,OSUplayer.Graphic,TGraphic,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TGraphic.cs,TGraphic,The following statement contains a magic number: Layer = 0.9f - element.Z*0.000001f;
Magic Number,OSUplayer.Graphic,TGraphic,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TGraphic.cs,Getorigin,The following statement contains a magic number: float x = (float) (id%3)/2*texture.Width;
Magic Number,OSUplayer.Graphic,TGraphic,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TGraphic.cs,Getorigin,The following statement contains a magic number: float x = (float) (id%3)/2*texture.Width;
Magic Number,OSUplayer.Graphic,TGraphic,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TGraphic.cs,Getorigin,The following statement contains a magic number: float y = (float) (id - id%3)/6*texture.Height;
Magic Number,OSUplayer.Graphic,TGraphic,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TGraphic.cs,Getorigin,The following statement contains a magic number: float y = (float) (id - id%3)/6*texture.Height;
Magic Number,OSUplayer.Graphic,TGraphic,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TGraphic.cs,Update,The following statement contains a magic number: Color = new Color((byte) (colorv >> 0x10)' (byte) (colorv >> 8)' (byte) colorv);
Magic Number,OSUplayer.OsuFiles,BassAudio,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\AVFiles.cs,Init,The following statement contains a magic number: Bass.BASS_Init(-1' 44100' BASSInit.BASS_DEVICE_DEFAULT' IntPtr.Zero);
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,Check,The following statement contains a magic number: ((tmp >> 3) & 1) == 1
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,SetAdditionalObject,The following statement contains a magic number: nHit.sample = new CSample((int)Char.GetNumericValue(tmpop[0])' (int)Char.GetNumericValue(tmpop[4]));
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,SetAdditionalObject,The following statement contains a magic number: nHit.A_sample = new CSample((int)Char.GetNumericValue(tmpop[2])' (int)Char.GetNumericValue(tmpop[4]));
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,SetAdditionalObject,The following statement contains a magic number: nHit.A_sample = new CSample((int)Char.GetNumericValue(tmpop[2])' (int)Char.GetNumericValue(tmpop[4]));
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,SetAdditionalObject,The following statement contains a magic number: tmpop.Length < 7
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,SetAdditionalObject,The following statement contains a magic number: nHit.S_Volume = (int)Char.GetNumericValue(tmpop[6]);
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,SetAdditionalObject,The following statement contains a magic number: tmpop.Length > 3
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,Setobject,The following statement contains a magic number: switch (nHit.type)              {                  case ObjectFlag.Normal:                      nHit.allhitsound = Convert.ToInt32(Picknext(ref row));                      SetAdditionalObject(ref nHit' out tmpop' Picknext(ref row));                      break;                  case ObjectFlag.Spinner:                      nHit.allhitsound = Convert.ToInt32(Picknext(ref row));                      nHit.EndTime = Convert.ToInt32(Picknext(ref row));                      SetAdditionalObject(ref nHit' out tmpop' Picknext(ref row));                      break;                  case ObjectFlag.Slider:                      nHit.allhitsound = Convert.ToInt32(Picknext(ref row));                      Picknext(ref row);                      //ignore all anthor                      tmpop = Picknext(ref row);                      nHit.repeatcount = tmpop != "" ? Convert.ToInt32(tmpop) : 1;                      tmpop = Picknext(ref row);                      nHit.length = tmpop != "" ? Convert.ToDouble(tmpop) : 0;                      tmpop = Picknext(ref row);                      nHit.Hitsounds = new int[nHit.repeatcount + 1];                      nHit.samples = new CSample[nHit.repeatcount + 1];                      var split = tmpop.Split('|');                      if (split.Length != 1)                      {                          for (var i = 0; i <= nHit.repeatcount; i++)                          {                              nHit.Hitsounds[i] = Convert.ToInt32(split[i]);                          }                      }                      else                      {                          for (var i = 0; i <= nHit.repeatcount; i++)                          {                              nHit.Hitsounds[i] = 1;                          }                      }                      tmpop = Picknext(ref row);                      split = tmpop.Split('|');                      if (split.Length != 1)                      {                          for (var i = 0; i <= nHit.repeatcount; i++)                          {                              nHit.samples[i] = new CSample(Convert.ToInt32(split[i][0])'                                  Convert.ToInt32(split[i][2]));                          }                      }                      else                      {                          for (var i = 0; i <= nHit.repeatcount; i++)                          {                              nHit.samples[i] = new CSample(0' 0);                          }                      }                      SetAdditionalObject(ref nHit' out tmpop' Picknext(ref row));                      //HitSound'(SampleSet&Group|SampleSet&Group)'(All SampleSet&Addition)                      //SampleSet&Addition 只有sample没有setcount                      //All SampleSet&Addition 啥都有                      //数值1为不反复                      //Length=长度（乘以每小节时间60000/BPM再乘以滑条速度SliderMultiplier为滑条时间长度）                      //HitSound S1|S2|S3|S4......Sn 计算公式n=RepeatCount+1                      break;                  default:                      //Throw New FormatException("Failed to read .osu file")                      //this is for mania                      break;              }
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,Settiming,The following statement contains a magic number: ntiming.meter = tmpop == "" ? 4 : Convert.ToInt32(tmpop);
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,Settiming,The following statement contains a magic number: ntiming.volume = tmpop == "" ? 1.0f : Convert.ToSingle(tmpop) / 100;
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,Settiming,The following statement contains a magic number: ntiming.bpm = 60000 / ntiming.bpm;
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,GetDetail,The following statement contains a magic number: position = (FileSection)Enum.Parse(typeof(FileSection)' (row.Substring(1' row.Length - 2))' true);
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,GetDetail,The following statement contains a magic number: switch (position)                          {                              case FileSection.VersionUnknown:                                  _rawdata[(int)OSUfile.FileVersion] = row.Substring(17);                                  break;                              case FileSection.General:                              case FileSection.Metadata:                              case FileSection.Difficulty:                                  var s = row.Split(new[] { ':' }' 2);                                  try { _rawdata[(int)(OSUfile)Enum.Parse(typeof(OSUfile)' (s[0].Trim()))] = s[1].Trim(); }                                  catch (ArgumentException) { }                                  break;                              case FileSection.Events:                                  if (row.StartsWith("0'0'"))                                  {                                      var str = row.Substring(5' row.Length - 6);                                      if (str.Contains("\""))                                      {                                          str = str.Substring(0' str.IndexOf("\""));                                      }                                      Background = System.IO.Path.Combine(Location' str);                                  }                                  else if (row.StartsWith("1'") || row.StartsWith("Video"))                                  {                                      HaveVideo = true;                                      var vdata = row.Split(''');                                      VideoOffset = Convert.ToInt32(vdata[1]);                                      Video = System.IO.Path.Combine(Location' vdata[2].Substring(1' vdata[2].Length - 2));                                  }                                  else if (row.StartsWith("3'") || row.StartsWith("2'")) { }                                  else { HaveSB = true; }                                  break;                              case FileSection.TimingPoints:                                  Timingpoints.Add(Settiming(row));                                  break;                              case FileSection.HitObjects:                                  HitObjects.Add(Setobject(row));                                  break;                          }
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,GetDetail,The following statement contains a magic number: switch (position)                          {                              case FileSection.VersionUnknown:                                  _rawdata[(int)OSUfile.FileVersion] = row.Substring(17);                                  break;                              case FileSection.General:                              case FileSection.Metadata:                              case FileSection.Difficulty:                                  var s = row.Split(new[] { ':' }' 2);                                  try { _rawdata[(int)(OSUfile)Enum.Parse(typeof(OSUfile)' (s[0].Trim()))] = s[1].Trim(); }                                  catch (ArgumentException) { }                                  break;                              case FileSection.Events:                                  if (row.StartsWith("0'0'"))                                  {                                      var str = row.Substring(5' row.Length - 6);                                      if (str.Contains("\""))                                      {                                          str = str.Substring(0' str.IndexOf("\""));                                      }                                      Background = System.IO.Path.Combine(Location' str);                                  }                                  else if (row.StartsWith("1'") || row.StartsWith("Video"))                                  {                                      HaveVideo = true;                                      var vdata = row.Split(''');                                      VideoOffset = Convert.ToInt32(vdata[1]);                                      Video = System.IO.Path.Combine(Location' vdata[2].Substring(1' vdata[2].Length - 2));                                  }                                  else if (row.StartsWith("3'") || row.StartsWith("2'")) { }                                  else { HaveSB = true; }                                  break;                              case FileSection.TimingPoints:                                  Timingpoints.Add(Settiming(row));                                  break;                              case FileSection.HitObjects:                                  HitObjects.Add(Setobject(row));                                  break;                          }
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,GetDetail,The following statement contains a magic number: switch (position)                          {                              case FileSection.VersionUnknown:                                  _rawdata[(int)OSUfile.FileVersion] = row.Substring(17);                                  break;                              case FileSection.General:                              case FileSection.Metadata:                              case FileSection.Difficulty:                                  var s = row.Split(new[] { ':' }' 2);                                  try { _rawdata[(int)(OSUfile)Enum.Parse(typeof(OSUfile)' (s[0].Trim()))] = s[1].Trim(); }                                  catch (ArgumentException) { }                                  break;                              case FileSection.Events:                                  if (row.StartsWith("0'0'"))                                  {                                      var str = row.Substring(5' row.Length - 6);                                      if (str.Contains("\""))                                      {                                          str = str.Substring(0' str.IndexOf("\""));                                      }                                      Background = System.IO.Path.Combine(Location' str);                                  }                                  else if (row.StartsWith("1'") || row.StartsWith("Video"))                                  {                                      HaveVideo = true;                                      var vdata = row.Split(''');                                      VideoOffset = Convert.ToInt32(vdata[1]);                                      Video = System.IO.Path.Combine(Location' vdata[2].Substring(1' vdata[2].Length - 2));                                  }                                  else if (row.StartsWith("3'") || row.StartsWith("2'")) { }                                  else { HaveSB = true; }                                  break;                              case FileSection.TimingPoints:                                  Timingpoints.Add(Settiming(row));                                  break;                              case FileSection.HitObjects:                                  HitObjects.Add(Setobject(row));                                  break;                          }
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,GetDetail,The following statement contains a magic number: switch (position)                          {                              case FileSection.VersionUnknown:                                  _rawdata[(int)OSUfile.FileVersion] = row.Substring(17);                                  break;                              case FileSection.General:                              case FileSection.Metadata:                              case FileSection.Difficulty:                                  var s = row.Split(new[] { ':' }' 2);                                  try { _rawdata[(int)(OSUfile)Enum.Parse(typeof(OSUfile)' (s[0].Trim()))] = s[1].Trim(); }                                  catch (ArgumentException) { }                                  break;                              case FileSection.Events:                                  if (row.StartsWith("0'0'"))                                  {                                      var str = row.Substring(5' row.Length - 6);                                      if (str.Contains("\""))                                      {                                          str = str.Substring(0' str.IndexOf("\""));                                      }                                      Background = System.IO.Path.Combine(Location' str);                                  }                                  else if (row.StartsWith("1'") || row.StartsWith("Video"))                                  {                                      HaveVideo = true;                                      var vdata = row.Split(''');                                      VideoOffset = Convert.ToInt32(vdata[1]);                                      Video = System.IO.Path.Combine(Location' vdata[2].Substring(1' vdata[2].Length - 2));                                  }                                  else if (row.StartsWith("3'") || row.StartsWith("2'")) { }                                  else { HaveSB = true; }                                  break;                              case FileSection.TimingPoints:                                  Timingpoints.Add(Settiming(row));                                  break;                              case FileSection.HitObjects:                                  HitObjects.Add(Setobject(row));                                  break;                          }
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,GetDetail,The following statement contains a magic number: switch (position)                          {                              case FileSection.VersionUnknown:                                  _rawdata[(int)OSUfile.FileVersion] = row.Substring(17);                                  break;                              case FileSection.General:                              case FileSection.Metadata:                              case FileSection.Difficulty:                                  var s = row.Split(new[] { ':' }' 2);                                  try { _rawdata[(int)(OSUfile)Enum.Parse(typeof(OSUfile)' (s[0].Trim()))] = s[1].Trim(); }                                  catch (ArgumentException) { }                                  break;                              case FileSection.Events:                                  if (row.StartsWith("0'0'"))                                  {                                      var str = row.Substring(5' row.Length - 6);                                      if (str.Contains("\""))                                      {                                          str = str.Substring(0' str.IndexOf("\""));                                      }                                      Background = System.IO.Path.Combine(Location' str);                                  }                                  else if (row.StartsWith("1'") || row.StartsWith("Video"))                                  {                                      HaveVideo = true;                                      var vdata = row.Split(''');                                      VideoOffset = Convert.ToInt32(vdata[1]);                                      Video = System.IO.Path.Combine(Location' vdata[2].Substring(1' vdata[2].Length - 2));                                  }                                  else if (row.StartsWith("3'") || row.StartsWith("2'")) { }                                  else { HaveSB = true; }                                  break;                              case FileSection.TimingPoints:                                  Timingpoints.Add(Settiming(row));                                  break;                              case FileSection.HitObjects:                                  HitObjects.Add(Setobject(row));                                  break;                          }
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,GetDetail,The following statement contains a magic number: switch (position)                          {                              case FileSection.VersionUnknown:                                  _rawdata[(int)OSUfile.FileVersion] = row.Substring(17);                                  break;                              case FileSection.General:                              case FileSection.Metadata:                              case FileSection.Difficulty:                                  var s = row.Split(new[] { ':' }' 2);                                  try { _rawdata[(int)(OSUfile)Enum.Parse(typeof(OSUfile)' (s[0].Trim()))] = s[1].Trim(); }                                  catch (ArgumentException) { }                                  break;                              case FileSection.Events:                                  if (row.StartsWith("0'0'"))                                  {                                      var str = row.Substring(5' row.Length - 6);                                      if (str.Contains("\""))                                      {                                          str = str.Substring(0' str.IndexOf("\""));                                      }                                      Background = System.IO.Path.Combine(Location' str);                                  }                                  else if (row.StartsWith("1'") || row.StartsWith("Video"))                                  {                                      HaveVideo = true;                                      var vdata = row.Split(''');                                      VideoOffset = Convert.ToInt32(vdata[1]);                                      Video = System.IO.Path.Combine(Location' vdata[2].Substring(1' vdata[2].Length - 2));                                  }                                  else if (row.StartsWith("3'") || row.StartsWith("2'")) { }                                  else { HaveSB = true; }                                  break;                              case FileSection.TimingPoints:                                  Timingpoints.Add(Settiming(row));                                  break;                              case FileSection.HitObjects:                                  HitObjects.Add(Setobject(row));                                  break;                          }
Magic Number,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,GetDetail,The following statement contains a magic number: switch (position)                          {                              case FileSection.VersionUnknown:                                  _rawdata[(int)OSUfile.FileVersion] = row.Substring(17);                                  break;                              case FileSection.General:                              case FileSection.Metadata:                              case FileSection.Difficulty:                                  var s = row.Split(new[] { ':' }' 2);                                  try { _rawdata[(int)(OSUfile)Enum.Parse(typeof(OSUfile)' (s[0].Trim()))] = s[1].Trim(); }                                  catch (ArgumentException) { }                                  break;                              case FileSection.Events:                                  if (row.StartsWith("0'0'"))                                  {                                      var str = row.Substring(5' row.Length - 6);                                      if (str.Contains("\""))                                      {                                          str = str.Substring(0' str.IndexOf("\""));                                      }                                      Background = System.IO.Path.Combine(Location' str);                                  }                                  else if (row.StartsWith("1'") || row.StartsWith("Video"))                                  {                                      HaveVideo = true;                                      var vdata = row.Split(''');                                      VideoOffset = Convert.ToInt32(vdata[1]);                                      Video = System.IO.Path.Combine(Location' vdata[2].Substring(1' vdata[2].Length - 2));                                  }                                  else if (row.StartsWith("3'") || row.StartsWith("2'")) { }                                  else { HaveSB = true; }                                  break;                              case FileSection.TimingPoints:                                  Timingpoints.Add(Settiming(row));                                  break;                              case FileSection.HitObjects:                                  HitObjects.Add(Setobject(row));                                  break;                          }
Magic Number,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,The following statement contains a magic number: soundtype % 2 == 1 || soundtype == 0
Magic Number,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,The following statement contains a magic number: soundtype = soundtype >> 2;
Magic Number,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,The following statement contains a magic number: soundtype % 2 == 1
Magic Number,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,The following statement contains a magic number: soundtype = soundtype >> 2;
Magic Number,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,The following statement contains a magic number: soundtype % 2 == 1
Magic Number,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,The following statement contains a magic number: soundtype = soundtype >> 2;
Magic Number,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,The following statement contains a magic number: soundtype % 2 == 1
Magic Number,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,The following statement contains a magic number: soundtype % 2 == 1 || soundtype == 0
Magic Number,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,The following statement contains a magic number: soundtype = soundtype / 2;
Magic Number,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,The following statement contains a magic number: soundtype % 2 == 1
Magic Number,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,The following statement contains a magic number: soundtype = soundtype / 2;
Magic Number,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,The following statement contains a magic number: soundtype % 2 == 1
Magic Number,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,The following statement contains a magic number: soundtype = soundtype / 2;
Magic Number,OSUplayer.OsuFiles,BeatmapSet,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\BeatmapSet.cs,Getsamplename,The following statement contains a magic number: soundtype % 2 == 1
Magic Number,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following statement contains a magic number: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Magic Number,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following statement contains a magic number: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Magic Number,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following statement contains a magic number: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Magic Number,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following statement contains a magic number: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Magic Number,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following statement contains a magic number: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Magic Number,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following statement contains a magic number: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Magic Number,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following statement contains a magic number: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Magic Number,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following statement contains a magic number: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Magic Number,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following statement contains a magic number: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Magic Number,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following statement contains a magic number: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Magic Number,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following statement contains a magic number: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Magic Number,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following statement contains a magic number: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Magic Number,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following statement contains a magic number: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Magic Number,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following statement contains a magic number: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Magic Number,OSUplayer.OsuFiles,OsuDB,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadScore,The following statement contains a magic number: tscore.Version >= 20140721
Magic Number,OSUplayer.OsuFiles,OsuDB,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadDb,The following statement contains a magic number: version >= 20140612
Magic Number,OSUplayer.OsuFiles,OsuDB,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadDb,The following statement contains a magic number: k < 4
Magic Number,OSUplayer.OsuFiles,OsuDB,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadDb,The following statement contains a magic number: version >= 20140609
Magic Number,OSUplayer.OsuFiles,OsuDB,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadDb,The following statement contains a magic number: version < 20140608
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Color,The following statement contains a magic number: return (b << 0x10) | (g << 8) | r;
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: var startT = Convert.ToInt32(tmp[2]) + delta;
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: tmp[3] == ""
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (tmp[4])                  {                      case "H":                          element.P.Add(new TActionNode(startT' 1' 3));                          element.P.Add(new TActionNode(endT' 1' 4));                          break;                      case "V":                          element.P.Add(new TActionNode(startT' 2' 3));                          element.P.Add(new TActionNode(endT' 2' 4));                          break;                      case "A":                          element.P.Add(new TActionNode(startT' 4' 3));                          element.P.Add(new TActionNode(endT' 4' 4));                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (tmp[4])                  {                      case "H":                          element.P.Add(new TActionNode(startT' 1' 3));                          element.P.Add(new TActionNode(endT' 1' 4));                          break;                      case "V":                          element.P.Add(new TActionNode(startT' 2' 3));                          element.P.Add(new TActionNode(endT' 2' 4));                          break;                      case "A":                          element.P.Add(new TActionNode(startT' 4' 3));                          element.P.Add(new TActionNode(endT' 4' 4));                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (tmp[4])                  {                      case "H":                          element.P.Add(new TActionNode(startT' 1' 3));                          element.P.Add(new TActionNode(endT' 1' 4));                          break;                      case "V":                          element.P.Add(new TActionNode(startT' 2' 3));                          element.P.Add(new TActionNode(endT' 2' 4));                          break;                      case "A":                          element.P.Add(new TActionNode(startT' 4' 3));                          element.P.Add(new TActionNode(endT' 4' 4));                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (tmp[4])                  {                      case "H":                          element.P.Add(new TActionNode(startT' 1' 3));                          element.P.Add(new TActionNode(endT' 1' 4));                          break;                      case "V":                          element.P.Add(new TActionNode(startT' 2' 3));                          element.P.Add(new TActionNode(endT' 2' 4));                          break;                      case "A":                          element.P.Add(new TActionNode(startT' 4' 3));                          element.P.Add(new TActionNode(endT' 4' 4));                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (tmp[4])                  {                      case "H":                          element.P.Add(new TActionNode(startT' 1' 3));                          element.P.Add(new TActionNode(endT' 1' 4));                          break;                      case "V":                          element.P.Add(new TActionNode(startT' 2' 3));                          element.P.Add(new TActionNode(endT' 2' 4));                          break;                      case "A":                          element.P.Add(new TActionNode(startT' 4' 3));                          element.P.Add(new TActionNode(endT' 4' 4));                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (tmp[4])                  {                      case "H":                          element.P.Add(new TActionNode(startT' 1' 3));                          element.P.Add(new TActionNode(endT' 1' 4));                          break;                      case "V":                          element.P.Add(new TActionNode(startT' 2' 3));                          element.P.Add(new TActionNode(endT' 2' 4));                          break;                      case "A":                          element.P.Add(new TActionNode(startT' 4' 3));                          element.P.Add(new TActionNode(endT' 4' 4));                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (tmp[4])                  {                      case "H":                          element.P.Add(new TActionNode(startT' 1' 3));                          element.P.Add(new TActionNode(endT' 1' 4));                          break;                      case "V":                          element.P.Add(new TActionNode(startT' 2' 3));                          element.P.Add(new TActionNode(endT' 2' 4));                          break;                      case "A":                          element.P.Add(new TActionNode(startT' 4' 3));                          element.P.Add(new TActionNode(endT' 4' 4));                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (tmp[4])                  {                      case "H":                          element.P.Add(new TActionNode(startT' 1' 3));                          element.P.Add(new TActionNode(endT' 1' 4));                          break;                      case "V":                          element.P.Add(new TActionNode(startT' 2' 3));                          element.P.Add(new TActionNode(endT' 2' 4));                          break;                      case "A":                          element.P.Add(new TActionNode(startT' 4' 3));                          element.P.Add(new TActionNode(endT' 4' 4));                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (tmp[4])                  {                      case "H":                          element.P.Add(new TActionNode(startT' 1' 3));                          element.P.Add(new TActionNode(endT' 1' 4));                          break;                      case "V":                          element.P.Add(new TActionNode(startT' 2' 3));                          element.P.Add(new TActionNode(endT' 2' 4));                          break;                      case "A":                          element.P.Add(new TActionNode(startT' 4' 3));                          element.P.Add(new TActionNode(endT' 4' 4));                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (tmp[4])                  {                      case "H":                          element.P.Add(new TActionNode(startT' 1' 3));                          element.P.Add(new TActionNode(endT' 1' 4));                          break;                      case "V":                          element.P.Add(new TActionNode(startT' 2' 3));                          element.P.Add(new TActionNode(endT' 2' 4));                          break;                      case "A":                          element.P.Add(new TActionNode(startT' 4' 3));                          element.P.Add(new TActionNode(endT' 4' 4));                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (tmp[4])                  {                      case "H":                          element.P.Add(new TActionNode(startT' 1' 3));                          element.P.Add(new TActionNode(endT' 1' 4));                          break;                      case "V":                          element.P.Add(new TActionNode(startT' 2' 3));                          element.P.Add(new TActionNode(endT' 2' 4));                          break;                      case "A":                          element.P.Add(new TActionNode(startT' 4' 3));                          element.P.Add(new TActionNode(endT' 4' 4));                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: int point = 4;
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following statement contains a magic number: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: position = row.Substring(1' row.Length - 2);
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealfile,The following statement contains a magic number: switch (position)                  {                      case "Variables":                          {                              var name = row.Split(new[] { '=' }' 2)[0];                              var replace = row.Split(new[] { '=' }' 2)[1];                              name = name.Substring(1' name.Length - 1);                              _variables.Add(name' replace);                              row = reader.ReadLine();                              break;                          }                      case "Events":                          //do variables change first                          foreach (var replace in _variables)                          {                              if (row.Contains(replace.Key))                              {                                  row = row.Replace(replace.Key' replace.Value);                              }                          }                          if (row.StartsWith("Sample") || row.StartsWith("5'"))                          {                              //Sample'time'layer'"filepath"'volume                              //var tmp = row.Split(new[] { ''' });                              //var path = tmp[3].Substring(1' tmp[3].Length - 2);                              //element++;                              /*var tmpe = new SBelement                              {                                  Type = ElementType.Sample'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[2]))'                              };                              var tmpev = new SBEvent                              {                                  startT = Convert.ToInt32(tmp[1])'                                  Type = EventType.Play'                                  volume = tmp.Length < 5 ? 100 : Convert.ToInt32(tmp[4])                              };                              if (Elements.ContainsKey(path))                              {                                  //tmpe = Elements[path];                              }                              //else                              //{                                   //Elements.Add(path' tmpe);                             //}*/                              row = reader.ReadLine();                              //  elements[element].events.Add(tmpev);                          }                          else if (row.StartsWith("Animation") || row.StartsWith("6'"))                          {                              //Animation'"layer"'"origin"'"filepath"'x'y'frameCount'frameDelay'looptype                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Animation'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element'                                  FrameCount = Convert.ToInt32(tmp[6])'                                  Framedelay = (int)(Convert.ToDouble(tmp[7]))'                                  Looptype = (ElementLoopType)(Enum.Parse(typeof(ElementLoopType)' tmp[8]))                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                              row = Dealevents(ref tmpe' reader);                              if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                              { }                              else                              {                                  tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                              }                              tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                              Elements[path].Element.Add(tmpe);                              element++;                          }                          else if (row.StartsWith("Sprite") || row.StartsWith("4'"))                          {                              //Sprite'"layer"'"origin"'"filepath"'x'y                              var tmp = row.Split(new[] { ''' });                              var path = tmp[3].Substring(1' tmp[3].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = (ElementLayer)(Enum.Parse(typeof(ElementLayer)' tmp[1]))'                                  Origin = (ElementOrigin)(Enum.Parse(typeof(ElementOrigin)' tmp[2]))'                                  X0 = Convert.ToInt32(tmp[4])'                                  Y0 = Convert.ToInt32(tmp[5])'                                  Z = element                              };                              if (tmpe.Layers == ElementLayer.Fail) { row = reader.ReadLine(); continue; }                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  row = Dealevents(ref tmpe' reader);                                  if (tmpe.F.Count != 0 && tmpe.F[0].Value == 0)                                  { }                                  else                                  {                                      tmpe.F.Insert(0' new TActionNode(tmpe.Starttime - 1' 255f' 4));                                  }                                  tmpe.F.Add(new TActionNode(tmpe.Lasttime + 1' 0f' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else if (row.StartsWith("0'"))                          {                              var tmp = row.Split(new[] { ''' });                              var path = tmp[2].Substring(1' tmp[2].Length - 2);                              var tmpe = new SBelement                              {                                  Type = ElementType.Sprite'                                  Layers = ElementLayer.Background'                                  Origin = ElementOrigin.TopLeft'                              };                              if (File.Exists(Path.Combine(_location' path)))                              {                                  if (!Elements.ContainsKey(path)) Elements.Add(path' new SBFile());                                  var tmpbm = new Bitmap(Path.Combine(_location' path));                                  var bgScale = Math.Min(640f / tmpbm.Width' 480f / tmpbm.Height);                                  row = Dealevents(ref tmpe' reader);                                  tmpe.F.Insert(0' new TActionNode(0' 255f' 4));                                  tmpe.SX.Insert(0' new TActionNode(0' bgScale' 4));                                  tmpe.SY.Insert(0' new TActionNode(0' bgScale' 4));                                  Elements[path].Element.Add(tmpe);                                  element++;                              }                              else { row = reader.ReadLine(); }                          }                          else { row = reader.ReadLine(); }                          break;                      default:                          row = reader.ReadLine();                          break;                  }
Magic Number,OSUplayer.Uilties,NotifySystem,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\NotifySystem.cs,SetNotifyIconText,The following statement contains a magic number: text = text.Substring(0' 127);
Magic Number,OSUplayer.Uilties,NotifySystem,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\NotifySystem.cs,SetNotifyIconText,The following statement contains a magic number: text.Length >= 128
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Program_Link.Font = new System.Drawing.Font("微软雅黑"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(134)));
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Program_Link.Font = new System.Drawing.Font("微软雅黑"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(134)));
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Program_Link.Location = new System.Drawing.Point(219' 224);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Program_Link.Location = new System.Drawing.Point(219' 224);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Program_Link.Size = new System.Drawing.Size(300' 20);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Program_Link.Size = new System.Drawing.Size(300' 20);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Profile_Hint.Font = new System.Drawing.Font("微软雅黑"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(134)));
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Profile_Hint.Font = new System.Drawing.Font("微软雅黑"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(134)));
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Profile_Hint.Location = new System.Drawing.Point(20' 209);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Profile_Hint.Location = new System.Drawing.Point(20' 209);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Profile_Hint.Size = new System.Drawing.Size(185' 20);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Profile_Hint.Size = new System.Drawing.Size(185' 20);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Profile_Hint.TabIndex = 2;
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_PictureBox.Location = new System.Drawing.Point(12' 12);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_PictureBox.Location = new System.Drawing.Point(12' 12);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_PictureBox.Size = new System.Drawing.Size(200' 200);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_PictureBox.Size = new System.Drawing.Size(200' 200);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Content.Font = new System.Drawing.Font("微软雅黑"' 7.8F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(134)));
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Content.Font = new System.Drawing.Font("微软雅黑"' 7.8F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(134)));
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Content.Location = new System.Drawing.Point(216' 4);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Content.Location = new System.Drawing.Point(216' 4);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Content.Size = new System.Drawing.Size(300' 208);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Content.Size = new System.Drawing.Size(300' 208);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.About_Content.TabIndex = 3;
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(8F' 15F);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(8F' 15F);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(528' 253);
Magic Number,OSUplayer.Uilties,About,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\About.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(528' 253);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,ChooseColl_CollectionTitle_List_MouseDoubleClick,The following statement contains a magic number: NotifySystem.Showtip(1000' LanguageManager.Get("OSUplayer")' String.Format("成功切换到{0}"' Core.CurrentListName));
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,ChooseColl_Load,The following statement contains a magic number: this.Width = TextRenderer.MeasureText(ChooseColl_Hint_Label.Text'ChooseColl_Hint_Label.Font).Width + TextRenderer.MeasureText(ChooseColl_PlayListCurrentCount.Text'ChooseColl_PlayListCurrentCount.Font).Width+80;
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_CollectionTitle_List.ItemHeight = 15;
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_CollectionTitle_List.Location = new System.Drawing.Point(12' 36);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_CollectionTitle_List.Location = new System.Drawing.Point(12' 36);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_CollectionTitle_List.Size = new System.Drawing.Size(130' 259);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_CollectionTitle_List.Size = new System.Drawing.Size(130' 259);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_CollectionContent_List.ItemHeight = 15;
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_CollectionContent_List.Location = new System.Drawing.Point(148' 36);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_CollectionContent_List.Location = new System.Drawing.Point(148' 36);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_CollectionContent_List.Size = new System.Drawing.Size(326' 259);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_CollectionContent_List.Size = new System.Drawing.Size(326' 259);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_Hint_Label.Location = new System.Drawing.Point(3' 0);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_Hint_Label.Size = new System.Drawing.Size(177' 15);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_Hint_Label.Size = new System.Drawing.Size(177' 15);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_PlayListCurrentCount.Location = new System.Drawing.Point(186' 0);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_PlayListCurrentCount.Size = new System.Drawing.Size(157' 15);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_PlayListCurrentCount.Size = new System.Drawing.Size(157' 15);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ChooseColl_PlayListCurrentCount.TabIndex = 4;
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.ColumnCount = 2;
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Location = new System.Drawing.Point(12' 12);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Location = new System.Drawing.Point(12' 12);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.RowStyles.Add(new System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent' 100F));
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(455' 18);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(455' 18);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.TabIndex = 5;
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(8F' 15F);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(8F' 15F);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(479' 301);
Magic Number,OSUplayer.Uilties,ChooseColl,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\ChooseColl.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(479' 301);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,Adddul,The following statement contains a magic number: var nowcolor = (now % 2 == 0) ? Color.White : Color.WhiteSmoke;
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,DelDulp_DeleteSelected_Click,The following statement contains a magic number: NotifySystem.Showtip(1000' LanguageManager.Get("OSUplayer")' string.Format(LanguageManager.Get("Delete_Complete_Text")' DelDulp_MainView.CheckedItems.Count));
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,DelDulp_MainView_SizeChanged,The following statement contains a magic number: DelDulp_MainView.Columns[0].Width = DelDulp_MainView.Width - 10;
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.SetRowSpan(this.DelDulp_MainView' 5);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_MainView.Size = new System.Drawing.Size(407' 318);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_MainView.Size = new System.Drawing.Size(407' 318);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_MainView_Header1.Width = 400;
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_DeleteSelected.Location = new System.Drawing.Point(456' 208);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_DeleteSelected.Location = new System.Drawing.Point(456' 208);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_DeleteSelected.Size = new System.Drawing.Size(77' 25);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_DeleteSelected.Size = new System.Drawing.Size(77' 25);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_Cancel.Location = new System.Drawing.Point(457' 272);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_Cancel.Location = new System.Drawing.Point(457' 272);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_Cancel.Size = new System.Drawing.Size(75' 25);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_Cancel.Size = new System.Drawing.Size(75' 25);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_Cancel.TabIndex = 2;
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_StartSearch.Location = new System.Drawing.Point(456' 19);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_StartSearch.Location = new System.Drawing.Point(456' 19);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_StartSearch.Size = new System.Drawing.Size(77' 25);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_StartSearch.Size = new System.Drawing.Size(77' 25);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_StartSearch.TabIndex = 3;
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_AutoSelect.Location = new System.Drawing.Point(456' 82);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_AutoSelect.Location = new System.Drawing.Point(456' 82);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_AutoSelect.Size = new System.Drawing.Size(77' 25);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_AutoSelect.Size = new System.Drawing.Size(77' 25);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_AutoSelect.TabIndex = 5;
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_ClearSelected.Location = new System.Drawing.Point(456' 145);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_ClearSelected.Location = new System.Drawing.Point(456' 145);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_ClearSelected.Size = new System.Drawing.Size(77' 25);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_ClearSelected.Size = new System.Drawing.Size(77' 25);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_ClearSelected.TabIndex = 6;
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_StatusStrip.Location = new System.Drawing.Point(0' 318);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_StatusStrip.Size = new System.Drawing.Size(582' 25);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_StatusStrip.Size = new System.Drawing.Size(582' 25);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_StatusStrip.TabIndex = 7;
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_ProgressBar.Size = new System.Drawing.Size(300' 19);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_ProgressBar.Size = new System.Drawing.Size(300' 19);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.DelDulp_Status_Label.Size = new System.Drawing.Size(0' 20);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.ColumnCount = 2;
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 70F));
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 30F));
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.DelDulp_Cancel' 1' 4);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.DelDulp_ClearSelected' 1' 2);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.DelDulp_DeleteSelected' 1' 3);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.RowCount = 5;
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.RowStyles.Add(new System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent' 20F));
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.RowStyles.Add(new System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent' 20F));
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.RowStyles.Add(new System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent' 20F));
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.RowStyles.Add(new System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent' 20F));
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.RowStyles.Add(new System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent' 20F));
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(582' 318);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(582' 318);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.TabIndex = 8;
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(8F' 15F);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(8F' 15F);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(582' 343);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(582' 343);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(600' 390);
Magic Number,OSUplayer.Uilties,DelDulp,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\DelDulp.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(600' 390);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_MainView.Location = new System.Drawing.Point(12' 12);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_MainView.Location = new System.Drawing.Point(12' 12);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_MainView.Size = new System.Drawing.Size(230' 193);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_MainView.Size = new System.Drawing.Size(230' 193);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_MainView_ID.Width = 100;
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_MainView_Nickname.Width = 100;
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_GetQQ.Location = new System.Drawing.Point(248' 52);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_GetQQ.Location = new System.Drawing.Point(248' 52);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_GetQQ.Size = new System.Drawing.Size(97' 30);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_GetQQ.Size = new System.Drawing.Size(97' 30);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_GetQQ.TabIndex = 2;
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_OK.Location = new System.Drawing.Point(248' 122);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_OK.Location = new System.Drawing.Point(248' 122);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_OK.Size = new System.Drawing.Size(97' 27);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_OK.Size = new System.Drawing.Size(97' 27);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_OK.TabIndex = 3;
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_Manual.Location = new System.Drawing.Point(12' 86);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_Manual.Location = new System.Drawing.Point(12' 86);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_Manual.Size = new System.Drawing.Size(230' 25);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_Manual.Size = new System.Drawing.Size(230' 25);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.SetQQ_Manual.TabIndex = 4;
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(8F' 15F);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(8F' 15F);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(357' 217);
Magic Number,OSUplayer.Uilties,SetQQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\SetQQ.Designer.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(357' 217);
Magic Number,OSUplayer.Uilties,QQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\QQ.cs,QQ,The following statement contains a magic number: GetQQList.Add(new QQInfo(qq.Substring(12' qq.Length - 17)));
Magic Number,OSUplayer.Uilties,QQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\QQ.cs,QQ,The following statement contains a magic number: GetQQList.Add(new QQInfo(qq.Substring(12' qq.Length - 17)));
Magic Number,OSUplayer.Uilties,QQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\QQ.cs,Send2QQ,The following statement contains a magic number: var args = new object[4];
Magic Number,OSUplayer.Uilties,QQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\QQ.cs,Send2QQ,The following statement contains a magic number: args[1] = 65542;
Magic Number,OSUplayer.Uilties,QQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\QQ.cs,Send2QQ,The following statement contains a magic number: args[2] = str;
Magic Number,OSUplayer.Uilties,QQ,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\QQ.cs,Send2QQ,The following statement contains a magic number: args[3] = "";
Magic Number,OSUplayer.Uilties,Selfupdate,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\Selfupdate.cs,Download,The following statement contains a magic number: NotifySystem.Showtip(1000' LanguageManager.Get("Tip_Text")' LanguageManager.Get("Update_Downloading_Text"));
Magic Number,OSUplayer.Uilties,Selfupdate,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\Selfupdate.cs,Update,The following statement contains a magic number: byte[] buffer = new byte[1024];
Magic Number,OSUplayer.Uilties,TaskBarIconMenu,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\TaskBarIconMenu.cs,TaskBarIconMenu,The following statement contains a magic number: TrayIcon_Menu.Size = new Size(176' 176);
Magic Number,OSUplayer.Uilties,TaskBarIconMenu,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\TaskBarIconMenu.cs,TaskBarIconMenu,The following statement contains a magic number: TrayIcon_Menu.Size = new Size(176' 176);
Magic Number,OSUplayer.Uilties,TaskBarIconMenu,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\TaskBarIconMenu.cs,TaskBarIconMenu,The following statement contains a magic number: TrayIcon_Artist.Font = new Font("Microsoft YaHei UI"' 9F' FontStyle.Bold' GraphicsUnit.Point' 134);
Magic Number,OSUplayer.Uilties,TaskBarIconMenu,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\TaskBarIconMenu.cs,TaskBarIconMenu,The following statement contains a magic number: TrayIcon_Artist.Font = new Font("Microsoft YaHei UI"' 9F' FontStyle.Bold' GraphicsUnit.Point' 134);
Magic Number,OSUplayer.Uilties,TaskBarIconMenu,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\TaskBarIconMenu.cs,TaskBarIconMenu,The following statement contains a magic number: TrayIcon_Title.Font = new Font("Microsoft YaHei UI"' 9F' FontStyle.Bold' GraphicsUnit.Point' 134);
Magic Number,OSUplayer.Uilties,TaskBarIconMenu,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\TaskBarIconMenu.cs,TaskBarIconMenu,The following statement contains a magic number: TrayIcon_Title.Font = new Font("Microsoft YaHei UI"' 9F' FontStyle.Bold' GraphicsUnit.Point' 134);
Magic Number,OSUplayer.Uilties,TaskBarIconMenu,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\TaskBarIconMenu.cs,TaskBarIconMenu,The following statement contains a magic number: TrayIcon_Diff.Font = new Font("Microsoft YaHei UI"' 9F' FontStyle.Bold' GraphicsUnit.Point' 134);
Magic Number,OSUplayer.Uilties,TaskBarIconMenu,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Uilties\TaskBarIconMenu.cs,TaskBarIconMenu,The following statement contains a magic number: TrayIcon_Diff.Font = new Font("Microsoft YaHei UI"' 9F' FontStyle.Bold' GraphicsUnit.Point' 134);
Missing Default,OSUplayer,Core,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Core.cs,SetVolume,The following switch statement is missing a default case: switch (set)              {                  case 1:                      Settings.Default.Allvolume = volume;                      break;                  case 2:                      Settings.Default.Musicvolume = volume;                      break;                  case 3:                      Settings.Default.Fxvolume = volume;                      break;              }
Missing Default,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Sytle_Setting_SelectedIndexChanged,The following switch statement is missing a default case: switch (Main_Sytle_Setting.SelectedIndex)              {                  case 0:                      //HT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 50;                      break;                  case 1:                      //DC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 75;                      break;                  case 2:                      //Normal                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 100;                      break;                  case 3:                      //NC                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = true;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 4:                      //DT                      Main_NC_Control.Enabled = false;                      Main_NC_Control.Checked = false;                      Main_Speed_Control.Enabled = false;                      Main_Speed_Control.Value = 150;                      break;                  case 5:                      //Custom                      Main_NC_Control.Enabled = true;                      Main_Speed_Control.Enabled = true;                      break;              }
Missing Default,OSUplayer,Main,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Main.cs,Main_Sort_Setting_SelectedIndexChanged,The following switch statement is missing a default case: switch (Main_Sort_Setting.SelectedIndex)              {                  case 0:                      Core.PlayList.Sort(                          ((a' b) =>                              (Core.Allsets[a].ArtistCompare(Core.Allsets[b]))));                      RefreshList();                      break;                  case 1:                      Core.PlayList.Sort(                          ((a' b) =>                              (Core.Allsets[a].TitleCompare(Core.Allsets[b]))));                      RefreshList();                      break;              }
Missing Default,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,InitSB,The following switch statement is missing a default case: switch (sbelement.Type)                      {                          case ElementType.Sprite:                              if (tmpTexture == null || tmpTexture.Length != 1)                              {                                  if (File.Exists(Path.Combine(Map.Location' sbFile.Key)))                                  {                                      using (                                          var s = new FileStream(Path.Combine(Map.Location' sbFile.Key)' FileMode.Open'                                              FileAccess.Read' FileShare.ReadWrite))                                      {                                          tmpTexture = new[] { Texture2D.FromFile(device' s) };                                      }                                  }                                  else                                  {                                      tmpTexture = new[] { new Texture2D(device' 1' 1' 0' 0' SurfaceFormat.Bgr32) };                                  }                              }                              break;                          case ElementType.Animation:                              var prefix = Path.Combine(Map.Location' sbFile.Key);                              var ext = prefix.Substring(prefix.LastIndexOf(".") + 1);                              prefix = prefix.Substring(0' prefix.LastIndexOf("."));                              tmpTexture = new Texture2D[sbelement.FrameCount];                              for (var i = 0; i < sbelement.FrameCount; i++)                              {                                  if (File.Exists(prefix + i + "." + ext))                                  {                                      using (                                          var s = new FileStream(prefix + i + "." + ext' FileMode.Open' FileAccess.Read'                                              FileShare.ReadWrite))                                      {                                          tmpTexture[i] = Texture2D.FromFile(device' s);                                      }                                  }                                  else                                  {                                      tmpTexture[i] = new Texture2D(device' 1' 1' 0' 0' SurfaceFormat.Bgr32);                                  }                              }                              break;                      }
Missing Default,OSUplayer.Graphic,Player,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\Player.cs,Initfx,The following switch statement is missing a default case: switch (tmpH.type)                  {                      case ObjectFlag.Normal:                      case ObjectFlag.NormalNewCombo:                          if (tmpH.sample != olddefault) { tmpSample = tmpH.sample; }                          if (tmpH.S_Volume != 0) { volumeH = tmpH.S_Volume; }                          fxlist.Add(                              new Fxlist(tmpH.starttime' Setplayer(ref player' Set.Getsamplename                                  (tmpSample' tmpH.allhitsound))' volumeH));                          if (tmpH.A_sample.sample != 0)                          {                              fxlist.Add(                             new Fxlist(tmpH.starttime' Setplayer(ref player' Set.Getsamplename                                 (tmpH.A_sample' tmpH.allhitsound))' volumeH));                          }                          break;                      case ObjectFlag.Slider:                      case ObjectFlag.SliderNewCombo:                          //TODO:每个节点的sampleset                          //TODO:滑条tick                          if (tmpH.sample != olddefault) { tmpSample = tmpH.sample; }                          double deltatime = (600.0 * tmpH.length / bpm / Map.SliderMultiplier);                          if (tmpH.S_Volume != 0) { volumeH = tmpH.S_Volume / (float)100.0; }                          for (int j = 0; j <= tmpH.repeatcount; j++)                          {                              fxlist.Add(                                  new Fxlist((int)(tmpH.starttime + deltatime * j)'                                      Setplayer(ref player' Set.Getsamplename                              (tmpSample' tmpH.Hitsounds[j]))' volumeH));                          }                          break;                      case ObjectFlag.Spinner:                      case ObjectFlag.SpinnerNewCombo:                          if (tmpH.sample != olddefault) { tmpSample = tmpH.sample; }                          if (tmpH.S_Volume != 0) { volumeH = tmpH.S_Volume; }                          fxlist.Add(                              new Fxlist(tmpH.EndTime' Setplayer(ref player' Set.Getsamplename(tmpSample' tmpH.allhitsound))' volumeH));                          if (tmpH.A_sample.sample != 0)                          {                              fxlist.Add(new Fxlist(tmpH.EndTime' Setplayer(ref player' Set.Getsamplename                                  (tmpH.A_sample' tmpH.allhitsound))' volumeH));                          }                          break;                  }
Missing Default,OSUplayer.Graphic,TSpriteAction,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\Graphic\TSpriteAction.cs,Update,The following switch statement is missing a default case: switch (_easing)                      {                          case 0:                              CurrentValue = _k*elapsedTime + _actionList[_currentIndex].Value;                              break;                          case 1:                              CurrentValue = (float) Math.Sqrt(_b*_b - _k*_k*(elapsedTime - _a)*(elapsedTime - _a))                                             + _actionList[_currentIndex].Value;                              break;                          case 2:                              CurrentValue = _b - (float) Math.Sqrt(_b*_b - _k*_k*elapsedTime*elapsedTime)                                             + _actionList[_currentIndex].Value;                              break;                          case 4: //endtime之后                              CurrentValue = _actionList[_currentIndex].Value;                              break; //currentvalue不变                      }
Missing Default,OSUplayer.OsuFiles,Beatmap,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\Beatmap.cs,GetDetail,The following switch statement is missing a default case: switch (position)                          {                              case FileSection.VersionUnknown:                                  _rawdata[(int)OSUfile.FileVersion] = row.Substring(17);                                  break;                              case FileSection.General:                              case FileSection.Metadata:                              case FileSection.Difficulty:                                  var s = row.Split(new[] { ':' }' 2);                                  try { _rawdata[(int)(OSUfile)Enum.Parse(typeof(OSUfile)' (s[0].Trim()))] = s[1].Trim(); }                                  catch (ArgumentException) { }                                  break;                              case FileSection.Events:                                  if (row.StartsWith("0'0'"))                                  {                                      var str = row.Substring(5' row.Length - 6);                                      if (str.Contains("\""))                                      {                                          str = str.Substring(0' str.IndexOf("\""));                                      }                                      Background = System.IO.Path.Combine(Location' str);                                  }                                  else if (row.StartsWith("1'") || row.StartsWith("Video"))                                  {                                      HaveVideo = true;                                      var vdata = row.Split(''');                                      VideoOffset = Convert.ToInt32(vdata[1]);                                      Video = System.IO.Path.Combine(Location' vdata[2].Substring(1' vdata[2].Length - 2));                                  }                                  else if (row.StartsWith("3'") || row.StartsWith("2'")) { }                                  else { HaveSB = true; }                                  break;                              case FileSection.TimingPoints:                                  Timingpoints.Add(Settiming(row));                                  break;                              case FileSection.HitObjects:                                  HitObjects.Add(Setobject(row));                                  break;                          }
Missing Default,OSUplayer.OsuFiles,BinaryReader,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\OsuDB.cs,ReadVar,The following switch statement is missing a default case: switch (ReadByte())              {                  case 1:                      return ReadBoolean();                  case 2:                      return ReadByte();                  case 3:                      return ReadUInt16();                  case 4:                      return ReadUInt32();                  case 5:                      return ReadUInt64();                  case 6:                      return ReadSByte();                  case 7:                      return ReadInt16();                  case 8:                      return ReadInt32();                  case 9:                      return ReadInt64();                  case 10:                      return ReadChar();                  case 11:                      return base.ReadString();                  case 12:                      return ReadSingle();                  case 13:                      return ReadDouble();                  case 14:                      return ReadDecimal();                  case 15:                      return ReadDateTime();                  case 0x10:                      return ReadBytes();                  case 0x11:                      return ReadChars();                  case 0x12:                      return Deserializer.Deserialize(BaseStream);              }
Missing Default,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following switch statement is missing a default case: switch (tmp[4])                  {                      case "H":                          element.P.Add(new TActionNode(startT' 1' 3));                          element.P.Add(new TActionNode(endT' 1' 4));                          break;                      case "V":                          element.P.Add(new TActionNode(startT' 2' 3));                          element.P.Add(new TActionNode(endT' 2' 4));                          break;                      case "A":                          element.P.Add(new TActionNode(startT' 4' 3));                          element.P.Add(new TActionNode(endT' 4' 4));                          break;                  }
Missing Default,OSUplayer.OsuFiles.StoryBoard,StoryBoard,D:\research\architectureSmells\repos1\Troogle_OSUplayer\OSU player\OSU player\OsuFiles\StoryBoard\StoryBoard.cs,Dealevent,The following switch statement is missing a default case: switch (type)                  {                      case EventType.F:                          //③_M'0'1000''320'240'320'240-->_M'0'1000''320'240 (开始结束值相同）                          if (point != tmp.Length - 1)                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' easing));                              point++;                              time += delta;                          }                          else                          {                              element.F.Add(new TActionNode(time' Convert.ToSingle(tmp[point]) * 255' 4));                              if (time < endT) { element.F.Add(new TActionNode(endT' Convert.ToSingle(tmp[point]) * 255' 4)); }                              return;                          }                          break;                      case EventType.MX:                          if (point != tmp.Length - 1)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.MY:                          if (point != tmp.Length - 1)                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.M:                          if (point != tmp.Length - 2)                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.X.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.X.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              point++;                              element.Y.Add(new TActionNode(time' Convert.ToInt32(tmp[point])' 4));                              if (time < endT) { element.Y.Add(new TActionNode(endT' Convert.ToInt32(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.S:                          if (point != tmp.Length - 1)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT)                              {                                  element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                                  element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4));                              }                              return;                          }                          break;                      case EventType.V:                          if (point != tmp.Length - 2)                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.SX.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SX.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              point++;                              element.SY.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.SY.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.R:                          if (point != tmp.Length - 1)                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' easing));                              point++;                              time += delta;                          }                          else                          {                              element.R.Add(new TActionNode(time' Convert.ToSingle(tmp[point])' 4));                              if (time < endT) { element.R.Add(new TActionNode(endT' Convert.ToSingle(tmp[point])' 4)); }                              return;                          }                          break;                      case EventType.C:                          if (point != tmp.Length - 3)                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  easing));                              point += 3;                              time += delta;                          }                          else                          {                              element.C.Add(new TActionNode(                                  time'                                  Color(Convert.ToInt32(tmp[point])'                                        Convert.ToInt32(tmp[point + 1])'                                        Convert.ToInt32(tmp[point + 2]))'                                  4));                              if (time < endT)                              {                                  element.C.Add(new TActionNode(                                      endT'                                      Color(Convert.ToInt32(tmp[point])'                                      Convert.ToInt32(tmp[point + 1])'                                      Convert.ToInt32(tmp[point + 2]))'                                      4));                              }                              return;                          }                          break;                      //throw (new FormatException("Failed to read .osb file"));                  }
