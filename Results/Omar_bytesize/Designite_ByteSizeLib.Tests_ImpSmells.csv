Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddMethod,The following statement contains a magic number: Assert.Equal(2' result.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddMethod,The following statement contains a magic number: Assert.Equal(16' result.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddBitsMethod,The following statement contains a magic number: var size = ByteSize.FromBytes(1).AddBits(8);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddBitsMethod,The following statement contains a magic number: Assert.Equal(2' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddBitsMethod,The following statement contains a magic number: Assert.Equal(16' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddBytesMethod,The following statement contains a magic number: Assert.Equal(2' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddBytesMethod,The following statement contains a magic number: Assert.Equal(16' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddKiloBytesMethod,The following statement contains a magic number: var size = ByteSize.FromKiloBytes(2).AddKiloBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddKiloBytesMethod,The following statement contains a magic number: var size = ByteSize.FromKiloBytes(2).AddKiloBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddKiloBytesMethod,The following statement contains a magic number: Assert.Equal(4 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddKiloBytesMethod,The following statement contains a magic number: Assert.Equal(4 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddKiloBytesMethod,The following statement contains a magic number: Assert.Equal(4 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddKiloBytesMethod,The following statement contains a magic number: Assert.Equal(4 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddKiloBytesMethod,The following statement contains a magic number: Assert.Equal(4 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddKiloBytesMethod,The following statement contains a magic number: Assert.Equal(4' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddMegaBytesMethod,The following statement contains a magic number: var size = ByteSize.FromMegaBytes(2).AddMegaBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddMegaBytesMethod,The following statement contains a magic number: var size = ByteSize.FromMegaBytes(2).AddMegaBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddMegaBytesMethod,The following statement contains a magic number: Assert.Equal(4 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddMegaBytesMethod,The following statement contains a magic number: Assert.Equal(4 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddMegaBytesMethod,The following statement contains a magic number: Assert.Equal(4 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddMegaBytesMethod,The following statement contains a magic number: Assert.Equal(4 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddMegaBytesMethod,The following statement contains a magic number: Assert.Equal(4 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddMegaBytesMethod,The following statement contains a magic number: Assert.Equal(4 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddMegaBytesMethod,The following statement contains a magic number: Assert.Equal(4 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddMegaBytesMethod,The following statement contains a magic number: Assert.Equal(4 * 1024' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddMegaBytesMethod,The following statement contains a magic number: Assert.Equal(4 * 1024' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddMegaBytesMethod,The following statement contains a magic number: Assert.Equal(4' size.MegaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: var size = ByteSize.FromGigaBytes(2).AddGigaBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: var size = ByteSize.FromGigaBytes(2).AddGigaBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024' size.MegaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024' size.MegaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddGigaBytesMethod,The following statement contains a magic number: Assert.Equal(4d' size.GigaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: var size = ByteSize.FromTeraBytes(2).AddTeraBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: var size = ByteSize.FromTeraBytes(2).AddTeraBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024' size.MegaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024' size.MegaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024' size.MegaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024' size.GigaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024' size.GigaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddTeraBytesMethod,The following statement contains a magic number: Assert.Equal(4d' size.TeraBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: var size = ByteSize.FromPetaBytes(2).AddPetaBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: var size = ByteSize.FromPetaBytes(2).AddPetaBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 1024 * 8' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024 * 1024' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024 * 1024' size.KiloBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024' size.MegaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024' size.MegaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024' size.MegaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024 * 1024' size.MegaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024' size.GigaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024' size.GigaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024 * 1024' size.GigaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024' size.TeraBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d * 1024' size.TeraBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,AddPetaBytesMethod,The following statement contains a magic number: Assert.Equal(4d' size.PetaBytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,SubtractMethod,The following statement contains a magic number: var size = ByteSize.FromBytes(4).Subtract(ByteSize.FromBytes(2));
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,SubtractMethod,The following statement contains a magic number: var size = ByteSize.FromBytes(4).Subtract(ByteSize.FromBytes(2));
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,SubtractMethod,The following statement contains a magic number: Assert.Equal(16' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,SubtractMethod,The following statement contains a magic number: Assert.Equal(2' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,IncrementOperator,The following statement contains a magic number: var size = ByteSize.FromBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,IncrementOperator,The following statement contains a magic number: Assert.Equal(24' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,IncrementOperator,The following statement contains a magic number: Assert.Equal(3' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,MinusOperatorUnary,The following statement contains a magic number: var size = ByteSize.FromBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,MinusOperatorUnary,The following statement contains a magic number: Assert.Equal(-16' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,MinusOperatorUnary,The following statement contains a magic number: Assert.Equal(-2' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,MinusOperatorBinary,The following statement contains a magic number: var size = ByteSize.FromBytes(4) - ByteSize.FromBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,MinusOperatorBinary,The following statement contains a magic number: var size = ByteSize.FromBytes(4) - ByteSize.FromBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,MinusOperatorBinary,The following statement contains a magic number: Assert.Equal(16' size.Bits);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,MinusOperatorBinary,The following statement contains a magic number: Assert.Equal(2' size.Bytes);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,DecrementOperator,The following statement contains a magic number: var size = ByteSize.FromBytes(2);
Magic Number,ByteSizeLib.Tests,ArithmeticMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ArithmeticMethods.cs,DecrementOperator,The following statement contains a magic number: Assert.Equal(8' size.Bits);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,Constructor,The following statement contains a magic number: double byteSize = 1125899906842624;
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,Constructor,The following statement contains a magic number: Assert.Equal(byteSize * 8' result.Bits);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,Constructor,The following statement contains a magic number: Assert.Equal(byteSize / 1024' result.KiloBytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,Constructor,The following statement contains a magic number: Assert.Equal(byteSize / 1024 / 1024' result.MegaBytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,Constructor,The following statement contains a magic number: Assert.Equal(byteSize / 1024 / 1024' result.MegaBytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,Constructor,The following statement contains a magic number: Assert.Equal(byteSize / 1024 / 1024 / 1024' result.GigaBytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,Constructor,The following statement contains a magic number: Assert.Equal(byteSize / 1024 / 1024 / 1024' result.GigaBytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,Constructor,The following statement contains a magic number: Assert.Equal(byteSize / 1024 / 1024 / 1024' result.GigaBytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,Constructor,The following statement contains a magic number: Assert.Equal(byteSize / 1024 / 1024 / 1024 / 1024' result.TeraBytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,Constructor,The following statement contains a magic number: Assert.Equal(byteSize / 1024 / 1024 / 1024 / 1024' result.TeraBytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,Constructor,The following statement contains a magic number: Assert.Equal(byteSize / 1024 / 1024 / 1024 / 1024' result.TeraBytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,Constructor,The following statement contains a magic number: Assert.Equal(byteSize / 1024 / 1024 / 1024 / 1024' result.TeraBytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromBitsMethod,The following statement contains a magic number: long value = 8;
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromBitsMethod,The following statement contains a magic number: Assert.Equal(8' result.Bits);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromBytesMethod,The following statement contains a magic number: double value = 1.5;
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromBytesMethod,The following statement contains a magic number: Assert.Equal(12' result.Bits);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromBytesMethod,The following statement contains a magic number: Assert.Equal(1.5' result.Bytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromKiloBytesMethod,The following statement contains a magic number: double value = 1.5;
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromKiloBytesMethod,The following statement contains a magic number: Assert.Equal(1536' result.Bytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromKiloBytesMethod,The following statement contains a magic number: Assert.Equal(1.5' result.KiloBytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromMegaBytesMethod,The following statement contains a magic number: double value = 1.5;
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromMegaBytesMethod,The following statement contains a magic number: Assert.Equal(1572864' result.Bytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromMegaBytesMethod,The following statement contains a magic number: Assert.Equal(1.5' result.MegaBytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromGigaBytesMethod,The following statement contains a magic number: double value = 1.5;
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromGigaBytesMethod,The following statement contains a magic number: Assert.Equal(1610612736' result.Bytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromGigaBytesMethod,The following statement contains a magic number: Assert.Equal(1.5' result.GigaBytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromTeraBytesMethod,The following statement contains a magic number: double value = 1.5;
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromTeraBytesMethod,The following statement contains a magic number: Assert.Equal(1649267441664' result.Bytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromTeraBytesMethod,The following statement contains a magic number: Assert.Equal(1.5' result.TeraBytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromPetaBytesMethod,The following statement contains a magic number: double value = 1.5;
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromPetaBytesMethod,The following statement contains a magic number: Assert.Equal(1688849860263936' result.Bytes);
Magic Number,ByteSizeLib.Tests,CreatingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\CreatingMethods.cs,FromPetaBytesMethod,The following statement contains a magic number: Assert.Equal(1.5' result.PetaBytes);
Magic Number,ByteSizeLib.Tests,ParsingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ParsingMethods.cs,Parse,The following statement contains a magic number: var expected = ByteSize.FromKiloBytes(1020);
Magic Number,ByteSizeLib.Tests,ParsingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ParsingMethods.cs,TryParse,The following statement contains a magic number: var expected = ByteSize.FromKiloBytes(1020);
Magic Number,ByteSizeLib.Tests,ParsingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ParsingMethods.cs,ParseDecimalMB,The following statement contains a magic number: var expected = ByteSize.FromMegaBytes(100.5);
Magic Number,ByteSizeLib.Tests,ParsingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ParsingMethods.cs,TryParseWorksWithLotsOfSpaces,The following statement contains a magic number: var expected = ByteSize.FromKiloBytes(100);
Magic Number,ByteSizeLib.Tests,ParsingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ParsingMethods.cs,ParseKB,The following statement contains a magic number: var expected = ByteSize.FromKiloBytes(1020);
Magic Number,ByteSizeLib.Tests,ParsingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ParsingMethods.cs,ParseMB,The following statement contains a magic number: var expected = ByteSize.FromMegaBytes(1000);
Magic Number,ByteSizeLib.Tests,ParsingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ParsingMethods.cs,ParseGB,The following statement contains a magic number: var expected = ByteSize.FromGigaBytes(805);
Magic Number,ByteSizeLib.Tests,ParsingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ParsingMethods.cs,ParseTB,The following statement contains a magic number: var expected = ByteSize.FromTeraBytes(100);
Magic Number,ByteSizeLib.Tests,ParsingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ParsingMethods.cs,ParsePB,The following statement contains a magic number: var expected = ByteSize.FromPetaBytes(100);
Magic Number,ByteSizeLib.Tests,ParsingMethods,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ParsingMethods.cs,ParseCultureNumberSeparator,The following statement contains a magic number: var expected = ByteSize.FromMegaBytes(1500.5);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsLargestMetricSuffix,The following statement contains a magic number: var b = ByteSize.FromKiloBytes(10.5);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsLargestMetricSuffix,The following statement contains a magic number: Assert.Equal(10.5.ToString("0.0 KB")' result);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsDefaultNumberFormat,The following statement contains a magic number: var b = ByteSize.FromKiloBytes(10.5);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsDefaultNumberFormat,The following statement contains a magic number: Assert.Equal(10.5.ToString("0.0 KB")' result);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsProvidedNumberFormat,The following statement contains a magic number: var b = ByteSize.FromKiloBytes(10.1234);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsProvidedNumberFormat,The following statement contains a magic number: Assert.Equal(10.1234.ToString("0.0000 KB")' result);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsBits,The following statement contains a magic number: var b = ByteSize.FromBits(10);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsBytes,The following statement contains a magic number: var b = ByteSize.FromBytes(10);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsKiloBytes,The following statement contains a magic number: var b = ByteSize.FromKiloBytes(10);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsMegaBytes,The following statement contains a magic number: var b = ByteSize.FromMegaBytes(10);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsGigaBytes,The following statement contains a magic number: var b = ByteSize.FromGigaBytes(10);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsTeraBytes,The following statement contains a magic number: var b = ByteSize.FromTeraBytes(10);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsPetaBytes,The following statement contains a magic number: var b = ByteSize.FromPetaBytes(10);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsSelectedFormat,The following statement contains a magic number: var b = ByteSize.FromTeraBytes(10);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsSelectedFormat,The following statement contains a magic number: Assert.Equal(10.ToString("0.0 TB")' result);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsLargestMetricPrefixLargerThanZero,The following statement contains a magic number: var b = ByteSize.FromMegaBytes(.5);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsLargestMetricPrefixLargerThanZeroForNegativeValues,The following statement contains a magic number: var b = ByteSize.FromMegaBytes(-.5);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsLargestMetricSuffixUsingCurrentCulture,The following statement contains a magic number: var b = ByteSize.FromKiloBytes(10000);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsLargestMetricSuffixUsingSpecifiedCulture,The following statement contains a magic number: var b = ByteSize.FromKiloBytes(10000);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsCultureSpecificFormat,The following statement contains a magic number: var b = ByteSize.FromKiloBytes(10.5);
Magic Number,ByteSizeLib.Tests,ToStringMethod,C:\research\architectureSmells\repos\Omar_bytesize\src\ByteSizeLib.Tests\ToStringMethod.cs,ReturnsCultureSpecificFormat,The following statement contains a magic number: Assert.Equal(10.5.ToString("0.0 KB"' deCulture)' result);
