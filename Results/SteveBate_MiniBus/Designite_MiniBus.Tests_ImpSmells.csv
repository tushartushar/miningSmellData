Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_place_on_a_single_queue,The length of the statement  "            var bus = new Bus(new FakeBusConfig()' new NullLogger()' new FakeValidMessageQueue("errorQueue")' new FakeValidMessageQueue("readQueue")' writeQueues); " is 151.
Long Statement,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_place_on_all_write_queues_by_default,The length of the statement  "            var writeQueues = new[] { new FakeValidMessageQueue("writeQueue1")' new FakeValidMessageQueue("writeQueue2")' new FakeValidMessageQueue("writeQueue3") }; " is 153.
Long Statement,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_place_on_all_write_queues_by_default,The length of the statement  "            var bus = new Bus(new FakeBusConfig()' new NullLogger()' new FakeValidMessageQueue("errorQueue")' new FakeValidMessageQueue("readQueue")' writeQueues); " is 151.
Long Statement,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_place_only_on_first_write_queue_if_auto_distribute_configured,The length of the statement  "            var writeQueues = new[] { new FakeValidMessageQueue("writeQueue1")' new FakeValidMessageQueue("writeQueue2")' new FakeValidMessageQueue("writeQueue3") }; " is 153.
Long Statement,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_place_only_on_first_write_queue_if_auto_distribute_configured,The length of the statement  "            var bus = new Bus(new FakeBusConfig { AutoDistributeOnSend = true }' new NullLogger()' new FakeValidMessageQueue("errorQueue")' new FakeValidMessageQueue("readQueue")' writeQueues); " is 181.
Long Statement,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_place_on_next_write_queue_if_auto_distribute_configured,The length of the statement  "            var writeQueues = new[] { new FakeValidMessageQueue("writeQueue1")' new FakeValidMessageQueue("writeQueue2")' new FakeValidMessageQueue("writeQueue3") }; " is 153.
Long Statement,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_place_on_next_write_queue_if_auto_distribute_configured,The length of the statement  "            var bus = new Bus(new FakeBusConfig { AutoDistributeOnSend = true }' new NullLogger()' new FakeValidMessageQueue("errorQueue")' new FakeValidMessageQueue("readQueue")' writeQueues); " is 181.
Long Statement,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The length of the statement  "            var bus = new Bus(new FakeBusConfig()' logger' new FakeValidMessageQueue("errorQueue")' new FakeValidMessageQueue("readQueue")' writeQueues); " is 141.
Long Statement,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_throw_when_write_queues_are_undefined,The length of the statement  "            var bus = new Bus(new BusConfig()' new NullLogger()' new FakeValidMessageQueue("errorQueue")' new FakeValidMessageQueue("readQueue")' emptyWriteQueueList); " is 155.
Long Statement,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_throw_when_write_queues_are_undefined,The length of the statement  "            Assert.That(exception.Message' Is.EqualTo("Bus has not been configured correctly for sending messages. Did you forget to call DefineWriteQueue on BusBuilder?")); " is 161.
Long Statement,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_throw_when_error_queue_is_undefined,The length of the statement  "            var bus = new Bus(new BusConfig()' new NullLogger()' null' new FakeValidMessageQueue("readQueue")' new[] { new FakeValidMessageQueue("writeQueue1") }); " is 151.
Long Statement,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_throw_when_error_queue_is_undefined,The length of the statement  "            Assert.That(exception.Message' Is.EqualTo("Bus has not been configured correctly - An error queue has not been defined. Did you forget to call DeineErrorQueue on BusBuilder?")); " is 177.
Long Statement,MiniBus.Tests.BusTests,When_returning_error_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_move_all_to_read_queue,The length of the statement  "            var bus = new Bus(new FakeBusConfig()' new NullLogger()' errorQueue' readQueue' new[] { new FakeValidMessageQueue("writeQueue1") }); " is 132.
Long Statement,MiniBus.Tests.BusTests,When_returning_error_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_move_specific_message_to_read_queue,The length of the statement  "            var bus = new Bus(new FakeBusConfig()' new NullLogger()' errorQueue' readQueue' new[] { new FakeValidMessageQueue("writeQueue1") }); " is 132.
Long Statement,MiniBus.Tests.BusTests,When_returning_error_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_throw_when_specific_message_is_not_found,The length of the statement  "            var bus = new Bus(new FakeBusConfig()' new NullLogger()' errorQueue' readQueue' new[] { new FakeValidMessageQueue("writeQueue1") }); " is 132.
Long Statement,MiniBus.Tests.BusTests,When_returning_error_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_throw_when_read_queue_is_undefined,The length of the statement  "            var bus = new Bus(new BusConfig()' new NullLogger()' new FakeValidMessageQueue("errowQueue")' new FakeInvalidMessageQueue()' new[] { new FakeValidMessageQueue("writeQueue1") }); " is 177.
Long Statement,MiniBus.Tests.BusTests,When_returning_error_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_throw_when_read_queue_is_undefined,The length of the statement  "            Assert.That(exception.Message' Is.EqualTo("Bus has not been configured correctly for receiving messages. Did you forget to call DefineReadQueue on BusBuilder?")); " is 162.
Long Statement,MiniBus.Tests.BusTests,When_returning_error_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The length of the statement  "            var bus = new Bus(new FakeBusConfig()' logger' QueueWithOneMessage("errorQueue")' readQueue' new[] { new FakeValidMessageQueue("writeQueue1") }); " is 145.
Long Statement,MiniBus.Tests.BusTests,When_returning_error_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_throw_when_error_queue_is_undefined,The length of the statement  "            var bus = new Bus(new BusConfig()' new NullLogger()' null' new FakeValidMessageQueue("readQueue")' new[] { new FakeValidMessageQueue("writeQueue1") }); " is 151.
Long Statement,MiniBus.Tests.BusTests,When_returning_error_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_throw_when_error_queue_is_undefined,The length of the statement  "            Assert.That(exception.Message' Is.EqualTo("Bus has not been configured correctly - An error queue has not been defined. Did you forget to call DeineErrorQueue on BusBuilder?")); " is 177.
Long Statement,MiniBus.Tests.BusTests,When_copying_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_copy_specific_message_to_all_defined_write_queuse,The length of the statement  "            var writeQueues = new[] { new FakeValidMessageQueue("writeQueue1")' new FakeValidMessageQueue("writeQueue2")' new FakeValidMessageQueue("writeQueue3") }; " is 153.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_invoke_registered_handler,The length of the statement  "            var bus = new Bus(new FakeBusConfig()' new NullLogger()' new FakeValidMessageQueue("errorQueue")' QueueWithOneMessage("readQueue")' new[] { new FakeValidMessageQueue("writeQueue") }); " is 183.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_invoke_all_registered_handlers,The length of the statement  "            var bus = new Bus(new FakeBusConfig()' new NullLogger()' new FakeValidMessageQueue("errorQueue")' QueueWithOneMessage("readQueue")' new[] { new FakeValidMessageQueue("writeQueue") }); " is 183.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The length of the statement  "            var bus = new Bus(new FakeBusConfig()' logger' new FakeValidMessageQueue("errorQueue")' QueueWithOneMessage("readQueue")' new[] { new FakeValidMessageQueue("writeQueue") }); " is 173.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_throw_when_read_queue_is_undefined,The length of the statement  "            var bus = new Bus(new BusConfig()' new NullLogger()' new FakeValidMessageQueue("errorQueue")' new FakeInvalidMessageQueue()' new[] { new FakeValidMessageQueue("writeQueue1") }); " is 177.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_throw_when_read_queue_is_undefined,The length of the statement  "            Assert.That(exception.Message' Is.EqualTo("Bus has not been configured correctly for receiving messages. Did you forget to call DefineReadQueue on BusBuilder?")); " is 162.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_move_failed_messages_to_error_queue_when_fail_fast_not_configured,The length of the statement  "            var bus = new Bus(new FakeBusConfig { FailFast = false }' logger' errorQueue' readQueue' new[] { new FakeValidMessageQueue("writeQueue1") }); " is 141.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_leave_failed_message_on_read_queue_when_fail_fast_configured,The length of the statement  "            var bus = new Bus(new FakeBusConfig { FailFast = true }' logger' errorQueue' readQueue' new[] { new FakeValidMessageQueue("writeQueue1") }); " is 140.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_discard_failed_messages_to_when_discard_failures_configured,The length of the statement  "            var bus = new Bus(new FakeBusConfig { DiscardFailures = true }' logger' errorQueue' readQueue' new[] { new FakeValidMessageQueue("writeQueue1") }); " is 147.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The length of the statement  "            var bus = new Bus(new FakeBusConfig { MaxRetries = 2 }' logger' errorQueue' QueueWithOneMessage("readQueue")' new[] { new FakeValidMessageQueue("writeQueue1") }); " is 162.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The length of the statement  "            Assert.That(logger[4]' Is.StringContaining("TRANSACTION STATUS: Active - REASON: The method or operation is not implemented.")); " is 128.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The length of the statement  "            Assert.That(logger[8]' Is.StringContaining("TRANSACTION STATUS: Active - REASON: The method or operation is not implemented.")); " is 128.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The length of the statement  "            Assert.That(logger[12]' Is.StringContaining("TRANSACTION STATUS: Active - REASON: The method or operation is not implemented.")); " is 129.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_not_retry_when_configured_for_environmental_errors_only_and_error_is_user_error,The length of the statement  "            var bus = new Bus(new FakeBusConfig { MaxRetries = 2' EnvironmentalErrorsOnly = true }' logger' errorQueue' QueueWithOneMessage("readQueue")' new[] { new FakeValidMessageQueue("writeQueue1") }); " is 194.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_not_retry_when_configured_for_environmental_errors_only_and_error_is_user_error,The length of the statement  "            Assert.That(logger[4]' Is.StringContaining("TRANSACTION STATUS: Active - REASON: The method or operation is not implemented.")); " is 128.
Long Statement,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The length of the statement  "            var bus = new Bus(new FakeBusConfig { MaxRetries = 2' EnvironmentalErrorsOnly = true}' logger' errorQueue' QueueWithOneMessage("readQueue")' new[] { new FakeValidMessageQueue("writeQueue1") }); " is 193.
Long Statement,MiniBus.Tests.BusTests,When_configuring_bus_builder,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_error_if_neither_read_or_write_queues_defined,The length of the statement  "            Assert.That(exception.Message' Is.EqualTo("You need to supply at least one endpoint either to read from or to write to")); " is 122.
Magic Number,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_place_on_all_write_queues_by_default,The following statement contains a magic number: Assert.That(writeQueues[2].Count' Is.EqualTo(1));
Magic Number,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_place_only_on_first_write_queue_if_auto_distribute_configured,The following statement contains a magic number: Assert.That(writeQueues[2].Count' Is.EqualTo(0));
Magic Number,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_place_on_next_write_queue_if_auto_distribute_configured,The following statement contains a magic number: Assert.That(writeQueues[2].Count' Is.EqualTo(0));
Magic Number,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_place_on_next_write_queue_if_auto_distribute_configured,The following statement contains a magic number: Assert.That(writeQueues[2].Count' Is.EqualTo(0));
Magic Number,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_place_on_next_write_queue_if_auto_distribute_configured,The following statement contains a magic number: Assert.That(writeQueues[2].Count' Is.EqualTo(1));
Magic Number,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[2]' Is.StringContaining("Payload: FakeDto"));
Magic Number,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[3]' Is.StringContaining("Sent to queue: writeQueue1"));
Magic Number,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[4]' Is.StringContaining("Completed SEND Operation"));
Magic Number,MiniBus.Tests.BusTests,When_sending_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[5]' Is.StringContaining("Transaction committed"));
Magic Number,MiniBus.Tests.BusTests,When_returning_error_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_move_all_to_read_queue,The following statement contains a magic number: Assert.That(readQueue.Count' Is.EqualTo(2));
Magic Number,MiniBus.Tests.BusTests,When_returning_error_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[2]' Is.StringContaining("Removing from queue: errorQueue"));
Magic Number,MiniBus.Tests.BusTests,When_returning_error_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[3]' Is.StringContaining("Sending to queue: readQueue"));
Magic Number,MiniBus.Tests.BusTests,When_returning_error_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[4]' Is.StringContaining("Completed RETURN_TO_SOURCE Operation"));
Magic Number,MiniBus.Tests.BusTests,When_returning_error_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[5]' Is.StringContaining("Transaction committed"));
Magic Number,MiniBus.Tests.BusTests,When_copying_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_copy_specific_message_to_all_defined_write_queuse,The following statement contains a magic number: Assert.That(writeQueues.ElementAt(2).Count' Is.EqualTo(1));
Magic Number,MiniBus.Tests.BusTests,When_copying_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[2]' Is.StringContaining("copied from queue: readQueue"));
Magic Number,MiniBus.Tests.BusTests,When_copying_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[3]' Is.StringContaining("Sending to queue: writeQueue1"));
Magic Number,MiniBus.Tests.BusTests,When_copying_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[4]' Is.StringContaining("Completed COPY Operation"));
Magic Number,MiniBus.Tests.BusTests,When_copying_messages,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[5]' Is.StringContaining("Transaction committed"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_invoke_all_registered_handlers,The following statement contains a magic number: Assert.That(handler.InvokeCount' Is.EqualTo(3));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[2]' Is.StringContaining("Payload: FakeDto"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[3]' Is.StringContaining("Invoking registered handler"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[4]' Is.StringContaining("Removing from read queue: readQueue"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[5]' Is.StringContaining("Completed RECEIVE Operation"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_log_all_steps_involved,The following statement contains a magic number: Assert.That(logger[6]' Is.StringContaining("Transaction committed"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_move_failed_messages_to_error_queue_when_fail_fast_not_configured,The following statement contains a magic number: Assert.That(errorQueue.Count' Is.EqualTo(2));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_leave_failed_message_on_read_queue_when_fail_fast_configured,The following statement contains a magic number: Assert.That(readQueue.Count' Is.EqualTo(2));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_leave_failed_message_on_read_queue_when_fail_fast_configured,The following statement contains a magic number: Assert.That(logger[10]' Is.StringContaining("FailFast option enabled - Queue processing halted"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_discard_failed_messages_to_when_discard_failures_configured,The following statement contains a magic number: Assert.That(logger[11]' Is.StringContaining("DiscardFailures option enabled - Payload discarded"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_discard_failed_messages_to_when_discard_failures_configured,The following statement contains a magic number: Assert.That(logger[23]' Is.StringContaining("DiscardFailures option enabled - Payload discarded"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: var bus = new Bus(new FakeBusConfig { MaxRetries = 2 }' logger' errorQueue' QueueWithOneMessage("readQueue")' new[] { new FakeValidMessageQueue("writeQueue1") });
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[2]' Is.StringContaining("Payload: FakeDto"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[3]' Is.StringContaining("Invoking registered handler"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[4]' Is.StringContaining("TRANSACTION STATUS: Active - REASON: The method or operation is not implemented."));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[5]' Is.StringContaining("Retry attempt 1"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[6]' Is.StringContaining("Payload: FakeDto"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[7]' Is.StringContaining("Invoking registered handler"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[8]' Is.StringContaining("TRANSACTION STATUS: Active - REASON: The method or operation is not implemented."));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[9]' Is.StringContaining("Retry attempt 2"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[10]' Is.StringContaining("Payload: FakeDto"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[11]' Is.StringContaining("Invoking registered handler"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[12]' Is.StringContaining("TRANSACTION STATUS: Active - REASON: The method or operation is not implemented."));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[13]' Is.StringContaining("Invocation failed"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[14]' Is.StringContaining("Removing from read queue: readQueue"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[15]' Is.StringContaining("Moving to error queue: errorQueue"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[16]' Is.StringContaining("EXCEPTION - The method or operation is not implemented."));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[18]' Is.StringContaining("Completed RECEIVE Operation"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_always_retry_when_not_configured_for_environmental_errors_only,The following statement contains a magic number: Assert.That(logger[19]' Is.StringContaining("Transaction rolled back"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_not_retry_when_configured_for_environmental_errors_only_and_error_is_user_error,The following statement contains a magic number: var bus = new Bus(new FakeBusConfig { MaxRetries = 2' EnvironmentalErrorsOnly = true }' logger' errorQueue' QueueWithOneMessage("readQueue")' new[] { new FakeValidMessageQueue("writeQueue1") });
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_not_retry_when_configured_for_environmental_errors_only_and_error_is_user_error,The following statement contains a magic number: Assert.That(logger[2]' Is.StringContaining("Payload: FakeDto"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_not_retry_when_configured_for_environmental_errors_only_and_error_is_user_error,The following statement contains a magic number: Assert.That(logger[3]' Is.StringContaining("Invoking registered handler"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_not_retry_when_configured_for_environmental_errors_only_and_error_is_user_error,The following statement contains a magic number: Assert.That(logger[4]' Is.StringContaining("TRANSACTION STATUS: Active - REASON: The method or operation is not implemented."));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_not_retry_when_configured_for_environmental_errors_only_and_error_is_user_error,The following statement contains a magic number: Assert.That(logger[5]' Is.StringContaining("Invocation failed"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_not_retry_when_configured_for_environmental_errors_only_and_error_is_user_error,The following statement contains a magic number: Assert.That(logger[6]' Is.StringContaining("Removing from read queue: readQueue"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_not_retry_when_configured_for_environmental_errors_only_and_error_is_user_error,The following statement contains a magic number: Assert.That(logger[7]' Is.StringContaining("Moving to error queue: errorQueue"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_not_retry_when_configured_for_environmental_errors_only_and_error_is_user_error,The following statement contains a magic number: Assert.That(logger[8]' Is.StringContaining("EXCEPTION - The method or operation is not implemented."));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_not_retry_when_configured_for_environmental_errors_only_and_error_is_user_error,The following statement contains a magic number: Assert.That(logger[10]' Is.StringContaining("Completed RECEIVE Operation"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_not_retry_when_configured_for_environmental_errors_only_and_error_is_user_error,The following statement contains a magic number: Assert.That(logger[11]' Is.StringContaining("Transaction rolled back"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: var bus = new Bus(new FakeBusConfig { MaxRetries = 2' EnvironmentalErrorsOnly = true}' logger' errorQueue' QueueWithOneMessage("readQueue")' new[] { new FakeValidMessageQueue("writeQueue1") });
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[2]' Is.StringContaining("Payload: FakeDto"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[3]' Is.StringContaining("Invoking registered handler"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[4]' Is.StringContaining("TRANSACTION STATUS: Active - REASON: deadlocked"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[5]' Is.StringContaining("Retry attempt 1"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[6]' Is.StringContaining("Payload: FakeDto"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[7]' Is.StringContaining("Invoking registered handler"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[8]' Is.StringContaining("TRANSACTION STATUS: Active - REASON: deadlocked"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[9]' Is.StringContaining("Retry attempt 2"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[10]' Is.StringContaining("Payload: FakeDto"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[11]' Is.StringContaining("Invoking registered handler"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[12]' Is.StringContaining("TRANSACTION STATUS: Active - REASON: deadlocked"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[13]' Is.StringContaining("Invocation failed"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[14]' Is.StringContaining("Removing from read queue: readQueue"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[15]' Is.StringContaining("Moving to error queue: errorQueue"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[16]' Is.StringContaining("EXCEPTION - deadlocked"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[18]' Is.StringContaining("Completed RECEIVE Operation"));
Magic Number,MiniBus.Tests.BusTests,When_receiving_message,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_retry_when_configured_for_environmental_errors_only_and_error_is_environmental,The following statement contains a magic number: Assert.That(logger[19]' Is.StringContaining("Transaction rolled back"));
Magic Number,MiniBus.Tests.BusTests,When_configuring_bus_builder,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_error_if_neither_read_or_write_queues_defined,The following statement contains a magic number: var exception = Assert.Throws<ArgumentException>(() => new BusBuilder()                  .WithLogging(new FakeLogger())                  .EnlistInAmbientTransactions()                  .CreateLocalQueuesAutomatically()                  .JsonSerialization()                  .NumberOfRetries(3)                                  .CreateBus());
Magic Number,MiniBus.Tests.BusTests,When_configuring_bus_builder,D:\research\architectureSmells\repos1\SteveBate_MiniBus\src\MiniBus.Tests\BusTests\BusTestFixtures.cs,Should_error_if_error_queue_not_defined,The following statement contains a magic number: var exception = Assert.Throws<ArgumentException>(() => new BusBuilder()                  .DefineReadQueue("x")                  .WithLogging(new FakeLogger())                  .EnlistInAmbientTransactions()                  .CreateLocalQueuesAutomatically()                  .JsonSerialization()                  .NumberOfRetries(3)                  .CreateBus());
