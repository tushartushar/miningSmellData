Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobCtorRegistersJob,The length of the statement  "            Assert.True( client.jobManager.asyncJobs.ContainsKey( asyncJob )' "Async job dictionary should contain the jobid key" ); " is 120.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobCtorRegistersJob,The length of the statement  "            Assert.True( client.jobManager.asyncJobs.ContainsKey( 123 )' "Async job dictionary should contain jobid key as a value type" ); " is 127.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobClearsOnCompletion,The length of the statement  "            Assert.False( client.jobManager.asyncJobs.ContainsKey( asyncJob )' "Async job dictionary should no longer contain jobid key after callback is posted" ); " is 152.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobClearsOnCompletion,The length of the statement  "            Assert.False( client.jobManager.asyncJobs.ContainsKey( 123 )' "Async job dictionary should no longer contain jobid key (as value type) after callback is posted" ); " is 163.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobClearsOnTimeout,The length of the statement  "            Assert.False( client.jobManager.asyncJobs.ContainsKey( asyncJob )' "Async job dictionary should no longer contain jobid key after timeout" ); " is 141.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobClearsOnTimeout,The length of the statement  "            Assert.False( client.jobManager.asyncJobs.ContainsKey( 123 )' "Async job dictionary should no longer contain jobid key (as value type) after timeout" ); " is 152.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleFinishedOnEmptyPredicate,The length of the statement  "            Assert.True( jobFinished' "Async job should inform that it is completed when completion predicate is always true and a result is given" ); " is 138.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleFinishedOnPredicate,The length of the statement  "            Assert.False( jobFinished' "Async job should not inform that it is finished when completion predicate is false after a result is given" ); " is 138.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleFinishedOnPredicate,The length of the statement  "            Assert.True( jobFinished' "Async job should inform completion when completion predicat is passed after a result is given" ); " is 124.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleClearsOnCompletion,The length of the statement  "            Assert.False( client.jobManager.asyncJobs.ContainsKey( asyncJob )' "Async job dictionary should not contain jobid key for AsyncJobMultiple on completion" ); " is 156.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleClearsOnCompletion,The length of the statement  "            Assert.False( client.jobManager.asyncJobs.ContainsKey( 123 )' "Async job dictionary should not contain jobid key (as value type) for AsyncJobMultiple on completion" ); " is 167.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleClearsOnTimeout,The length of the statement  "            Assert.False( client.jobManager.asyncJobs.ContainsKey( asyncJob )' "Async job dictionary should no longer contain jobid key after timeout" ); " is 141.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleClearsOnTimeout,The length of the statement  "            Assert.False( client.jobManager.asyncJobs.ContainsKey( 123 )' "Async job dictionary should no longer contain jobid key (as value type) after timeout" ); " is 152.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleExtendsTimeoutOnMessage,The length of the statement  "            Assert.False( asyncTask.IsCompleted' "AsyncJobMultiple should not be completed 5 seconds after a result was added (result should extend timeout)" ); " is 148.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleExtendsTimeoutOnMessage,The length of the statement  "            Assert.False( asyncTask.IsCanceled' "AsyncJobMultiple should not be canceled 5 seconds after a result was added (result should extend timeout)" ); " is 146.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleExtendsTimeoutOnMessage,The length of the statement  "            Assert.False( asyncTask.IsFaulted' "AsyncJobMultiple should not be faulted 5 seconds aftr a result was added (result should extend timeout)" ); " is 143.
Long Statement,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleTimesout,The length of the statement  "            Assert.False( asyncTask.IsFaulted' "AsyncJobMultiple should not be faulted after 5 seconds of a 1 second job timeout" ); " is 120.
Long Statement,Tests,CDNClientFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\CDNClientFacts.cs,ThrowsSteamKitWebExceptionOnUnsuccessfulWebResponse,The length of the statement  "            var configuration = SteamConfiguration.Create(x => x.WithHttpClientFactory(() => new HttpClient(new TeapotHttpMessageHandler()))); " is 130.
Long Statement,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesWritesBinaryToFile,The length of the statement  "            var expectedHexValue = "00525000017374617475730023444F54415F52505F424F54505241435449434500016E756D5F706172616D730030000" + " is 122.
Long Statement,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesWritesBinaryToStream,The length of the statement  "            var expectedHexValue = "00525000017374617475730023444F54415F52505F424F54505241435449434500016E756D5F706172616D730030000" + " is 122.
Long Statement,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesSavesTextToFile,The length of the statement  "            var expected = "\"RootNode\"\n{\n\t\"key1\"\t\t\"value1\"\n\t\"key2\"\n\t{\n\t\t\"ChildKey\"\t\t\"ChildValue\"\n\t}\n}\n"; " is 122.
Long Statement,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesSavesTextToStream,The length of the statement  "            var expected = "\"RootNode\"\n{\n\t\"key1\"\t\t\"value1\"\n\t\"key2\"\n\t{\n\t\t\"ChildKey\"\t\t\"ChildValue\"\n\t}\n}\n"; " is 122.
Long Statement,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMark_ReturnsFalse_IfServerNotInList,The length of the statement  "            var marked = serverList.TryMark( new IPEndPoint( IPAddress.Loopback' 27016 )' record.ProtocolTypes' ServerQuality.Good ); " is 121.
Long Statement,Tests,SteamClientFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamClientFacts.cs,GetNextJobIDFillsProcessStartTime,The length of the statement  "				var expectedProcessStartTime = new DateTime(processStartTime.Year' processStartTime.Month' processStartTime.Day' processStartTime.Hour' processStartTime.Minute' processStartTime.Second); " is 186.
Long Statement,Tests,SteamConfigurationDefaultFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamConfigurationFacts.cs,DefaultHttpClientFactory,The length of the statement  "                Assert.Equal("SteamKit/" + steamKitAssemblyVersion.ToString(fieldCount: 3)' client.DefaultRequestHeaders.UserAgent.ToString()); " is 127.
Long Statement,Tests,WebAPIFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\WebAPIFacts.cs,ThrowsWebAPIRequestExceptionIfRequestUnsuccessful,The length of the statement  "            var configuration = SteamConfiguration.Create( c => c.WithHttpClientFactory( () => new HttpClient( new ServiceUnavailableHttpMessageHandler() ) ) ); " is 148.
Long Statement,Tests,WebAPIFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\WebAPIFacts.cs,UsesSingleParameterArgumentsDictionary,The length of the statement  "            var configuration = SteamConfiguration.Create( c => c.WithHttpClientFactory( () => new HttpClient( capturingHandler ) ) ); " is 122.
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobCtorRegistersJob,The following statement contains a magic number: AsyncJob<Callback> asyncJob = new AsyncJob<Callback>( client' 123 );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobCtorRegistersJob,The following statement contains a magic number: Assert.True( client.jobManager.asyncJobs.ContainsKey( 123 )' "Async job dictionary should contain jobid key as a value type" );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AysncJobCompletesOnCallback,The following statement contains a magic number: AsyncJob<Callback> asyncJob = new AsyncJob<Callback>( client' 123 );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AysncJobCompletesOnCallback,The following statement contains a magic number: client.PostCallback( new Callback { JobID = 123 } );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobClearsOnCompletion,The following statement contains a magic number: AsyncJob<Callback> asyncJob = new AsyncJob<Callback>( client' 123 );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobClearsOnCompletion,The following statement contains a magic number: client.PostCallback( new Callback { JobID = 123 } );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobClearsOnCompletion,The following statement contains a magic number: Assert.False( client.jobManager.asyncJobs.ContainsKey( 123 )' "Async job dictionary should no longer contain jobid key (as value type) after callback is posted" );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobClearsOnTimeout,The following statement contains a magic number: AsyncJob<Callback> asyncJob = new AsyncJob<Callback>( client' 123 );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobClearsOnTimeout,The following statement contains a magic number: await Task.Delay( TimeSpan.FromSeconds( 5 ) );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobClearsOnTimeout,The following statement contains a magic number: Assert.False( client.jobManager.asyncJobs.ContainsKey( 123 )' "Async job dictionary should no longer contain jobid key (as value type) after timeout" );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobCancelsOnSetFailedTimeout,The following statement contains a magic number: AsyncJob<Callback> asyncJob = new AsyncJob<Callback>( client' 123 );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobGivesBackCallback,The following statement contains a magic number: AsyncJob<Callback> asyncJob = new AsyncJob<Callback>( client' 123 );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobGivesBackCallback,The following statement contains a magic number: Callback ourCallback = new Callback { JobID = 123 };
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobTimesout,The following statement contains a magic number: AsyncJob<Callback> asyncJob = new AsyncJob<Callback>( client' 123 );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobTimesout,The following statement contains a magic number: await Task.Delay( TimeSpan.FromSeconds( 5 ) );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobThrowsExceptionOnNullCallback,The following statement contains a magic number: AsyncJob<Callback> asyncJob = new AsyncJob<Callback>( client' 123 );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobThrowsFailureExceptionOnFailure,The following statement contains a magic number: AsyncJob<Callback> asyncJob = new AsyncJob<Callback>( client' 123 );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleFinishedOnEmptyPredicate,The following statement contains a magic number: AsyncJobMultiple<Callback> asyncJob = new AsyncJobMultiple<Callback>( client' 123' call => true );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleFinishedOnEmptyPredicate,The following statement contains a magic number: bool jobFinished = asyncJob.AddResult( new Callback { JobID = 123 } );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleFinishedOnPredicate,The following statement contains a magic number: AsyncJobMultiple<Callback> asyncJob = new AsyncJobMultiple<Callback>( client' 123' call => call.IsFinished );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleFinishedOnPredicate,The following statement contains a magic number: bool jobFinished = asyncJob.AddResult( new Callback { JobID = 123' IsFinished = false } );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleFinishedOnPredicate,The following statement contains a magic number: jobFinished = asyncJob.AddResult( new Callback { JobID = 123' IsFinished = true } );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleClearsOnCompletion,The following statement contains a magic number: AsyncJobMultiple<Callback> asyncJob = new AsyncJobMultiple<Callback>( client' 123' call => call.IsFinished );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleClearsOnCompletion,The following statement contains a magic number: client.PostCallback( new Callback { JobID = 123' IsFinished = true } );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleClearsOnCompletion,The following statement contains a magic number: Assert.False( client.jobManager.asyncJobs.ContainsKey( 123 )' "Async job dictionary should not contain jobid key (as value type) for AsyncJobMultiple on completion" );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleClearsOnTimeout,The following statement contains a magic number: AsyncJobMultiple<Callback> asyncJob = new AsyncJobMultiple<Callback>( client' 123' ccall => true );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleClearsOnTimeout,The following statement contains a magic number: await Task.Delay( TimeSpan.FromSeconds( 5 ) );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleClearsOnTimeout,The following statement contains a magic number: Assert.False( client.jobManager.asyncJobs.ContainsKey( 123 )' "Async job dictionary should no longer contain jobid key (as value type) after timeout" );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleExtendsTimeoutOnMessage,The following statement contains a magic number: AsyncJobMultiple<Callback> asyncJob = new AsyncJobMultiple<Callback>( client' 123' call => call.IsFinished );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleExtendsTimeoutOnMessage,The following statement contains a magic number: asyncJob.Timeout = TimeSpan.FromSeconds( 5 );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleExtendsTimeoutOnMessage,The following statement contains a magic number: await Task.Delay( TimeSpan.FromSeconds( 3 ) );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleExtendsTimeoutOnMessage,The following statement contains a magic number: asyncJob.AddResult( new Callback { JobID = 123' IsFinished = false } );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleExtendsTimeoutOnMessage,The following statement contains a magic number: await Task.Delay( TimeSpan.FromSeconds( 5 ) );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleExtendsTimeoutOnMessage,The following statement contains a magic number: asyncJob.AddResult( new Callback { JobID = 123' IsFinished = true } );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleTimesout,The following statement contains a magic number: AsyncJobMultiple<Callback> asyncJob = new AsyncJobMultiple<Callback>( client' 123' call => false );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleTimesout,The following statement contains a magic number: await Task.Delay( TimeSpan.FromSeconds( 5 ) );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleCompletesOnIncompleteResult,The following statement contains a magic number: AsyncJobMultiple<Callback> asyncJob = new AsyncJobMultiple<Callback>( client' 123' call => call.IsFinished );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleCompletesOnIncompleteResult,The following statement contains a magic number: Callback onlyResult = new Callback { JobID = 123' IsFinished = false };
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleCompletesOnIncompleteResult,The following statement contains a magic number: await Task.Delay( TimeSpan.FromSeconds( 5 ) );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleCompletesOnIncompleteResultAndFailure,The following statement contains a magic number: AsyncJobMultiple<Callback> asyncJob = new AsyncJobMultiple<Callback>( client' 123' call => call.IsFinished );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleCompletesOnIncompleteResultAndFailure,The following statement contains a magic number: Callback onlyResult = new Callback { JobID = 123' IsFinished = false };
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleThrowsExceptionOnNullCallback,The following statement contains a magic number: AsyncJobMultiple<Callback> asyncJob = new AsyncJobMultiple<Callback>( client' 123' call => true );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleThrowsFailureExceptionOnFailure,The following statement contains a magic number: AsyncJobMultiple<Callback> asyncJob = new AsyncJobMultiple<Callback>( client' 123' call => false );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobContinuesAsynchronously,The following statement contains a magic number: var asyncJob = new AsyncJob<Callback>( client' 123 );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobContinuesAsynchronously,The following statement contains a magic number: asyncJob.AddResult( new Callback { JobID = 123 } );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleContinuesAsynchronously,The following statement contains a magic number: var asyncJob = new AsyncJobMultiple<Callback>( client' 123' call => true );
Magic Number,Tests,AsyncJobFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\AsyncJobFacts.cs,AsyncJobMultipleContinuesAsynchronously,The following statement contains a magic number: asyncJob.AddResult( new Callback { JobID = 123 } );
Magic Number,Tests,CallbackManagerFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\CallbackManagerFacts.cs,PostedCallbackTriggersActionForExplicitJobIDInvalid,The following statement contains a magic number: var jobID = new JobID(123456);
Magic Number,Tests,CallbackManagerFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\CallbackManagerFacts.cs,PostedCallbackWithJobIDTriggersActionWhenNoJobIDSpecified,The following statement contains a magic number: var jobID = new JobID(123456);
Magic Number,Tests,CallbackManagerFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\CallbackManagerFacts.cs,PostedCallbackDoesNotTriggerActionForWrongJobID,The following statement contains a magic number: var jobID = new JobID(123456);
Magic Number,Tests,CallbackManagerFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\CallbackManagerFacts.cs,PostedCallbackWithJobIDTriggersCallbackForJobID,The following statement contains a magic number: var jobID = new JobID(123456);
Magic Number,Tests,CallbackManagerFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\CallbackManagerFacts.cs,PostedCallbacksTriggerActions,The following statement contains a magic number: i < 10
Magic Number,Tests,CallbackManagerFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\CallbackManagerFacts.cs,PostedCallbacksTriggerActions,The following statement contains a magic number: Assert.Equal(10' numCallbacksRun);
Magic Number,Tests,CallbackManagerFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\CallbackManagerFacts.cs,PostedCallbacksTriggerActions,The following statement contains a magic number: Assert.Equal(10' numCallbacksRun);
Magic Number,Tests,CMClientFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\CMClientFacts.cs,GetPacketMsgFailsWithNull,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(-1)' 0' data' 4' 4);
Magic Number,Tests,CMClientFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\CMClientFacts.cs,GetPacketMsgFailsWithNull,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(-1)' 0' data' 4' 4);
Magic Number,Tests,CMClientFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\CMClientFacts.cs,GetPacketMsgFailsWithTinyArray,The following statement contains a magic number: var data = new byte[3];
Magic Number,Tests,DebugLogFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\DebugLogFacts.cs,DebugLogFormatsParams,The following statement contains a magic number: var integer = 2;
Magic Number,Tests,FileStorageServerListProviderFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\FileStorageServerListProviderFacts.cs,ReadsUpdatedServerList,The following statement contains a magic number: await fileStorageProvider.UpdateServerListAsync(new List<ServerRecord>()              {                  ServerRecord.CreateSocketServer(new IPEndPoint(IPAddress.Any' 1234))'                  ServerRecord.CreateSocketServer(new IPEndPoint(IPAddress.Loopback' 4321))              });
Magic Number,Tests,FileStorageServerListProviderFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\FileStorageServerListProviderFacts.cs,ReadsUpdatedServerList,The following statement contains a magic number: await fileStorageProvider.UpdateServerListAsync(new List<ServerRecord>()              {                  ServerRecord.CreateSocketServer(new IPEndPoint(IPAddress.Any' 1234))'                  ServerRecord.CreateSocketServer(new IPEndPoint(IPAddress.Loopback' 4321))              });
Magic Number,Tests,FileStorageServerListProviderFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\FileStorageServerListProviderFacts.cs,ReadsUpdatedServerList,The following statement contains a magic number: Assert.Equal(2' servers.Count());
Magic Number,Tests,FileStorageServerListProviderFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\FileStorageServerListProviderFacts.cs,ReadsUpdatedServerList,The following statement contains a magic number: Assert.Equal(1234' servers.First().GetPort());
Magic Number,Tests,GameIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\GameIDFacts.cs,ModCRCCorrect,The following statement contains a magic number: GameID gameId = new GameID(420' "Research and Development");
Magic Number,Tests,GameIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\GameIDFacts.cs,ModCRCCorrect,The following statement contains a magic number: Assert.Equal(420u' gameId.AppID);
Magic Number,Tests,GameIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\GameIDFacts.cs,ModCRCCorrect,The following statement contains a magic number: Assert.Equal(new GameID(10210309621176861092)' gameId);
Magic Number,Tests,GameIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\GameIDFacts.cs,ModCRCCorrect,The following statement contains a magic number: GameID gameId2 = new GameID(215' "hidden");
Magic Number,Tests,GameIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\GameIDFacts.cs,ModCRCCorrect,The following statement contains a magic number: Assert.Equal(215u' gameId2.AppID);
Magic Number,Tests,GameIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\GameIDFacts.cs,ModCRCCorrect,The following statement contains a magic number: Assert.Equal(new GameID(9826266959967158487)' gameId2);
Magic Number,Tests,GameIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\GameIDFacts.cs,ShortcutCRCCorrect,The following statement contains a magic number: Assert.Equal(new GameID(12754778225939316736)' gameId);
Magic Number,Tests,IsolatedStorageServerListProviderFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\IsolatedStorageServerListProviderFacts.cs,ReadsUpdatedServerList,The following statement contains a magic number: await isolatedStorageProvider.UpdateServerListAsync(new List<ServerRecord>()              {                  ServerRecord.CreateSocketServer(new IPEndPoint(IPAddress.Any' 1234))'                  ServerRecord.CreateSocketServer(new IPEndPoint(IPAddress.Loopback' 4321))              });
Magic Number,Tests,IsolatedStorageServerListProviderFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\IsolatedStorageServerListProviderFacts.cs,ReadsUpdatedServerList,The following statement contains a magic number: await isolatedStorageProvider.UpdateServerListAsync(new List<ServerRecord>()              {                  ServerRecord.CreateSocketServer(new IPEndPoint(IPAddress.Any' 1234))'                  ServerRecord.CreateSocketServer(new IPEndPoint(IPAddress.Loopback' 4321))              });
Magic Number,Tests,IsolatedStorageServerListProviderFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\IsolatedStorageServerListProviderFacts.cs,ReadsUpdatedServerList,The following statement contains a magic number: Assert.Equal(2' servers.Count());
Magic Number,Tests,IsolatedStorageServerListProviderFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\IsolatedStorageServerListProviderFacts.cs,ReadsUpdatedServerList,The following statement contains a magic number: Assert.Equal(1234' servers.First().GetPort());
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValueIndexerDoesntallowDuplicates,The following statement contains a magic number: Assert.Equal( 2' kv.Children.Count );
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesHandlesFloat,The following statement contains a magic number: Assert.Equal( 123.456f' kv[ "name" ].AsFloat() );
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesHandlesFloat,The following statement contains a magic number: Assert.Equal( 321.654f' kv[ "name" ].AsFloat( 321.654f ) );
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesHandlesFloat,The following statement contains a magic number: Assert.Equal( 321.654f' kv[ "name" ].AsFloat( 321.654f ) );
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesHandlesInt,The following statement contains a magic number: Assert.Equal( 123' kv[ "name" ].AsInteger() );
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesHandlesInt,The following statement contains a magic number: Assert.Equal( 987' kv[ "name" ].AsInteger( 987 ) );
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesHandlesInt,The following statement contains a magic number: Assert.Equal( 987' kv[ "name" ].AsInteger( 987 ) );
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesHandlesLong,The following statement contains a magic number: Assert.Equal( -5001050759734897745' kv[ "name" ].AsLong() );
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesHandlesLong,The following statement contains a magic number: Assert.Equal( 678' kv[ "name" ].AsLong( 678 ) );
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesHandlesLong,The following statement contains a magic number: Assert.Equal( 678' kv[ "name" ].AsLong( 678 ) );
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesReadsBinaryWithLeftoverData,The following statement contains a magic number: Assert.Equal( TestObjectHex.Length / 2' ms.Position );
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesReadsBinaryWithLeftoverData,The following statement contains a magic number: Assert.Equal( 16' ms.Length - ms.Position );
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesReadsBinaryWithMultipleChildren,The following statement contains a magic number: Assert.Equal( 2' kv.Children.Count );
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesUnsignedByteConversion,The following statement contains a magic number: byte expectedValue = 37;
Magic Number,Tests,KeyValueFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\KeyValueFacts.cs,KeyValuesUnsignedShortConversion,The following statement contains a magic number: ushort expectedValue = 1337;
Magic Number,Tests,ServerRecordFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\ServerRecordFacts.cs,DifferentEndPointsAreNotEqual,The following statement contains a magic number: var r = ServerRecord.CreateServer("host"' 2' ProtocolTypes.Tcp);
Magic Number,Tests,ServerRecordFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\ServerRecordFacts.cs,DifferentEndPointsAndProtocolsAreNotEqual,The following statement contains a magic number: var r = ServerRecord.CreateServer("host"' 2' ProtocolTypes.WebSocket);
Magic Number,Tests,ServerRecordFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\ServerRecordFacts.cs,CanTryCreateSocketServer,The following statement contains a magic number: Assert.Equal(new IPEndPoint(IPAddress.Loopback' 1234)' record.EndPoint);
Magic Number,Tests,ServerRecordFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\ServerRecordFacts.cs,CanTryCreateSocketServer,The following statement contains a magic number: Assert.Equal(new IPEndPoint(IPAddress.Parse("192.168.0.1")' 5678)' record.EndPoint);
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMergeWithList_AddsToHead_AndMovesExisting,The following statement contains a magic number: var seedList = new[]              {                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27025 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27035 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27045 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27105 ))'              };
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMergeWithList_AddsToHead_AndMovesExisting,The following statement contains a magic number: var seedList = new[]              {                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27025 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27035 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27045 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27105 ))'              };
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMergeWithList_AddsToHead_AndMovesExisting,The following statement contains a magic number: var seedList = new[]              {                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27025 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27035 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27045 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27105 ))'              };
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMergeWithList_AddsToHead_AndMovesExisting,The following statement contains a magic number: var seedList = new[]              {                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27025 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27035 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27045 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27105 ))'              };
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMergeWithList_AddsToHead_AndMovesExisting,The following statement contains a magic number: Assert.Equal( 4' seedList.Length );
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMergeWithList_AddsToHead_AndMovesExisting,The following statement contains a magic number: var listToReplace = new[]              {                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27015 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27035 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27105 ))'              };
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMergeWithList_AddsToHead_AndMovesExisting,The following statement contains a magic number: var listToReplace = new[]              {                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27015 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27035 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27105 ))'              };
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMergeWithList_AddsToHead_AndMovesExisting,The following statement contains a magic number: var listToReplace = new[]              {                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27015 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27035 ))'                  ServerRecord.CreateSocketServer(new IPEndPoint( IPAddress.Loopback' 27105 ))'              };
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMergeWithList_AddsToHead_AndMovesExisting,The following statement contains a magic number: Assert.Equal( 3' addresses.Length );
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMergeWithList_AddsToHead_AndMovesExisting,The following statement contains a magic number: Assert.Equal( listToReplace[ 2 ]' addresses[ 2 ] );
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMergeWithList_AddsToHead_AndMovesExisting,The following statement contains a magic number: Assert.Equal( listToReplace[ 2 ]' addresses[ 2 ] );
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,GetNextServerCandidate_ReturnsServer_IfListHasServers,The following statement contains a magic number: var record = ServerRecord.CreateSocketServer( new IPEndPoint( IPAddress.Loopback' 27015 ) );
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,GetNextServerCandidate_ReturnsServer_IfListHasServers_EvenIfAllServersAreBad,The following statement contains a magic number: var record = ServerRecord.CreateSocketServer( new IPEndPoint( IPAddress.Loopback' 27015 ) );
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,GetNextServerCandidate_IsBiasedTowardsServerOrdering,The following statement contains a magic number: var goodRecord = ServerRecord.CreateSocketServer( new IPEndPoint( IPAddress.Loopback' 27015 ) );
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,GetNextServerCandidate_IsBiasedTowardsServerOrdering,The following statement contains a magic number: var neutralRecord = ServerRecord.CreateSocketServer( new IPEndPoint( IPAddress.Loopback' 27016 ) );
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,GetNextServerCandidate_IsBiasedTowardsServerOrdering,The following statement contains a magic number: var badRecord = ServerRecord.CreateSocketServer( new IPEndPoint( IPAddress.Loopback' 27017 ) );
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,GetNextServerCandidate_OnlyReturnsMatchingServerOfType,The following statement contains a magic number: record = ServerRecord.CreateSocketServer( new IPEndPoint( IPAddress.Loopback' 27015 ) );
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMark_ReturnsTrue_IfServerInList,The following statement contains a magic number: var record = ServerRecord.CreateSocketServer( new IPEndPoint( IPAddress.Loopback' 27015 ));
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMark_ReturnsFalse_IfServerNotInList,The following statement contains a magic number: var record = ServerRecord.CreateSocketServer( new IPEndPoint( IPAddress.Loopback' 27015 ) );
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TryMark_ReturnsFalse_IfServerNotInList,The following statement contains a magic number: var marked = serverList.TryMark( new IPEndPoint( IPAddress.Loopback' 27016 )' record.ProtocolTypes' ServerQuality.Good );
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TreatsProtocolsForSameServerIndividiaully,The following statement contains a magic number: var record1 = ServerRecord.CreateServer( IPAddress.Loopback.ToString()' 27015' ProtocolTypes.Tcp | ProtocolTypes.Udp );
Magic Number,Tests,SmartCMServerListFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SmartCMServerListFacts.cs,TreatsProtocolsForSameServerIndividiaully,The following statement contains a magic number: var record2 = ServerRecord.CreateServer( IPAddress.Loopback.ToString()' 27016' ProtocolTypes.Tcp | ProtocolTypes.Udp );
Magic Number,Tests,SteamClientFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamClientFacts.cs,GetNextJobIDIsThreadsafe,The following statement contains a magic number: Parallel.For(0' 1000' x =>  			{  				steamClient.GetNextJobID();  			});
Magic Number,Tests,SteamClientFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamClientFacts.cs,GetNextJobIDIsThreadsafe,The following statement contains a magic number: Assert.Equal(1002u' jobID.SequentialCount);
Magic Number,Tests,SteamConfigurationDefaultFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamConfigurationFacts.cs,ConnectionTimeoutIsFiveSeconds,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(5)' configuration.ConnectionTimeout);
Magic Number,Tests,SteamConfigurationDefaultFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamConfigurationFacts.cs,DefaultHttpClientFactory,The following statement contains a magic number: Assert.Equal("SteamKit/" + steamKitAssemblyVersion.ToString(fieldCount: 3)' client.DefaultRequestHeaders.UserAgent.ToString());
Magic Number,Tests,SteamConfigurationConfiguredObjectFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamConfigurationFacts.cs,SteamConfigurationConfiguredObjectFacts,The following statement contains a magic number: configuration = SteamConfiguration.Create(b =>                  b.WithDirectoryFetch(false)                   .WithCellID(123)                   .WithConnectionTimeout(TimeSpan.FromMinutes(1))                   .WithDefaultPersonaStateFlags(EClientPersonaStateFlag.SourceID)                   .WithHttpClientFactory(() => { var c = new HttpClient(); c.DefaultRequestHeaders.Add("X-SteamKit-Tests"' "true"); return c; })                   .WithProtocolTypes(ProtocolTypes.WebSocket | ProtocolTypes.Udp)                   .WithServerListProvider(new CustomServerListProvider())                   .WithUniverse(EUniverse.Internal)                   .WithWebAPIBaseAddress(new Uri("http://foo.bar.com/api/"))                   .WithWebAPIKey("T0PS3kR1t"));
Magic Number,Tests,SteamConfigurationConfiguredObjectFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamConfigurationFacts.cs,CellIDIsConfigured,The following statement contains a magic number: Assert.Equal(123u' configuration.CellID);
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,FullConstructorValid,The following statement contains a magic number: SteamID sid = new SteamID( 1234' SteamID.ConsoleInstance' EUniverse.Beta' EAccountType.Chat );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,FullConstructorValid,The following statement contains a magic number: Assert.Equal( 1234u' sid.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,FullConstructorValid,The following statement contains a magic number: sid = new SteamID( 4321' EUniverse.Invalid' EAccountType.Pending );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,FullConstructorValid,The following statement contains a magic number: Assert.Equal( 4321u' sid.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,LongConstructorAndSetterGetterValid,The following statement contains a magic number: SteamID sid = new SteamID( 103582791432294076 );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,LongConstructorAndSetterGetterValid,The following statement contains a magic number: Assert.Equal( 2772668u' sid.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,LongConstructorAndSetterGetterValid,The following statement contains a magic number: sid.SetFromUInt64( 157626004137848889 );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,LongConstructorAndSetterGetterValid,The following statement contains a magic number: Assert.Equal( 12345u' sid.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,LongConstructorAndSetterGetterValid,The following statement contains a magic number: Assert.Equal( 157626004137848889ul' sid.ConvertToUInt64() );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,Steam2CorrectParse,The following statement contains a magic number: Assert.Equal( 8983980u' sidEven.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,Steam2CorrectParse,The following statement contains a magic number: Assert.Equal( 8983981u' sidOdd.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetFromSteam3StringCorrectParse,The following statement contains a magic number: Assert.Equal( 123u' sidUser.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetFromSteam3StringCorrectParse,The following statement contains a magic number: Assert.Equal( 123u' sidAnonGSUser.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetFromSteam3StringCorrectParse,The following statement contains a magic number: Assert.Equal( 456u' sidAnonGSUser.AccountInstance );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetFromSteam3StringCorrectParse,The following statement contains a magic number: Assert.Equal( 123u' sidLobby.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetFromSteam3StringCorrectParse,The following statement contains a magic number: Assert.Equal( 123u' sidClanChat.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetFromSteam3StringCorrectParse,The following statement contains a magic number: Assert.Equal( 123u' sidMultiseat.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetFromSteam3StringCorrectParse,The following statement contains a magic number: Assert.Equal( 456u' sidMultiseat.AccountInstance );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetFromSteam3StringCorrectParse,The following statement contains a magic number: Assert.Equal( 456u' sidLowercaseI.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetFromOldStyleSteam3StringCorrectParse,The following statement contains a magic number: Assert.Equal( 123u' sidMultiseat.AccountID);
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetFromOldStyleSteam3StringCorrectParse,The following statement contains a magic number: Assert.Equal( 456u' sidMultiseat.AccountInstance );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetFromOldStyleSteam3StringCorrectParse,The following statement contains a magic number: Assert.Equal( 123u' sidAnonGSUser.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetFromOldStyleSteam3StringCorrectParse,The following statement contains a magic number: Assert.Equal( 456u' sidAnonGSUser.AccountInstance );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetValidAndHandlesClan,The following statement contains a magic number: sid.Set( 1234u' EUniverse.Internal' EAccountType.ContentServer );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetValidAndHandlesClan,The following statement contains a magic number: Assert.Equal( 1234u' sid.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetValidAndHandlesClan,The following statement contains a magic number: sid.Set( 4321u' EUniverse.Public' EAccountType.Clan );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SetValidAndHandlesClan,The following statement contains a magic number: Assert.Equal( 4321u' sid.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,Steam2RenderIsValid,The following statement contains a magic number: SteamID sid = 76561197969249708;
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,RendersSteam3ByDefault,The following statement contains a magic number: SteamID sid = 76561197969249708;
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SteamIDsEquality,The following statement contains a magic number: SteamID sid = 76561197969249708;
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SteamIDsEquality,The following statement contains a magic number: SteamID sid2 = new SteamID( 76561197969249708 );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SteamIDsEquality,The following statement contains a magic number: SteamID sid3 = 12345;
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SteamIDHashCodeUsesLongHashCode,The following statement contains a magic number: SteamID sid = 172376458626834;
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,SteamIDHashCodeUsesLongHashCode,The following statement contains a magic number: ulong longValue = 172376458626834;
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,InitializesInstancesCorrectly,The following statement contains a magic number: Assert.Equal( 1234u' sid.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,InitializesInstancesCorrectly,The following statement contains a magic number: Assert.Equal( 1234u' sid.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,InitializesInstancesCorrectly,The following statement contains a magic number: Assert.Equal( 1234u' sid.AccountID);
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,InitializesInstancesCorrectly,The following statement contains a magic number: Assert.Equal( 1234u' sid.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,RendersOutOfRangeAccountTypeAsLowercaseI,The following statement contains a magic number: SteamID sid = new SteamID( 123' EUniverse.Beta' (EAccountType)(-1) );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,ToChatIDConvertsWellKnownID,The following statement contains a magic number: var clanID = new SteamID( 4' EUniverse.Public' EAccountType.Clan );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,ToChatIDConvertsWellKnownID,The following statement contains a magic number: var expectedChatID = 110338190870577156UL;
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,ToChatIDDoesNotModifySelf,The following statement contains a magic number: var clanID = new SteamID( 4' EUniverse.Public' EAccountType.Clan );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,ToChatIDDoesNotModifySelf,The following statement contains a magic number: Assert.Equal( 4u' clanID.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,TryGetClanIDConvertsWellKnownID,The following statement contains a magic number: var clanID = new SteamID( 4' (uint)SteamID.ChatInstanceFlags.Clan' EUniverse.Public' EAccountType.Chat );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,TryGetClanIDConvertsWellKnownID,The following statement contains a magic number: Assert.Equal( 103582791429521412UL' groupID.ConvertToUInt64() );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,TryGetClanIDDoesNotModifySelf,The following statement contains a magic number: var clanID = new SteamID(4' (uint)SteamID.ChatInstanceFlags.Clan' EUniverse.Public' EAccountType.Chat );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,TryGetClanIDDoesNotModifySelf,The following statement contains a magic number: Assert.Equal( 4u' clanID.AccountID );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,TryGetClanIDReturnsFalseForAdHocChatRoom,The following statement contains a magic number: var chatID = new SteamID( 108093571196988453 );
Magic Number,Tests,SteamIDFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\SteamIDFacts.cs,TryGetClanIDOnlySupportsClanChatRooms,The following statement contains a magic number: var id = new SteamID( 4' ( uint )SteamID.ChatInstanceFlags.Clan' EUniverse.Public' type );
Magic Number,Tests,StreamHelpersFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\StreamHelpersFacts.cs,IsThreadSafe,The following statement contains a magic number: const int NumConcurrentThreads = 200;
Magic Number,Tests,StreamHelpersFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\StreamHelpersFacts.cs,ThreadStart,The following statement contains a magic number: i < 1000
Magic Number,Tests,StreamHelpersFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\StreamHelpersFacts.cs,ThreadStart,The following statement contains a magic number: switch (threadNumber % 7)                  {                      case 0: return s.ReadByte();                      case 1: return s.ReadInt64();                      case 2: return s.ReadUInt16();                      case 3: return s.ReadInt32();                      case 4: return s.ReadUInt32();                      case 5: return s.ReadInt64();                      case 6: return s.ReadUInt64();                      default: throw new Exception("Unreachable");                  }
Magic Number,Tests,StreamHelpersFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\StreamHelpersFacts.cs,ThreadStart,The following statement contains a magic number: switch (threadNumber % 7)                  {                      case 0: return s.ReadByte();                      case 1: return s.ReadInt64();                      case 2: return s.ReadUInt16();                      case 3: return s.ReadInt32();                      case 4: return s.ReadUInt32();                      case 5: return s.ReadInt64();                      case 6: return s.ReadUInt64();                      default: throw new Exception("Unreachable");                  }
Magic Number,Tests,StreamHelpersFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\StreamHelpersFacts.cs,ThreadStart,The following statement contains a magic number: switch (threadNumber % 7)                  {                      case 0: return s.ReadByte();                      case 1: return s.ReadInt64();                      case 2: return s.ReadUInt16();                      case 3: return s.ReadInt32();                      case 4: return s.ReadUInt32();                      case 5: return s.ReadInt64();                      case 6: return s.ReadUInt64();                      default: throw new Exception("Unreachable");                  }
Magic Number,Tests,StreamHelpersFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\StreamHelpersFacts.cs,ThreadStart,The following statement contains a magic number: switch (threadNumber % 7)                  {                      case 0: return s.ReadByte();                      case 1: return s.ReadInt64();                      case 2: return s.ReadUInt16();                      case 3: return s.ReadInt32();                      case 4: return s.ReadUInt32();                      case 5: return s.ReadInt64();                      case 6: return s.ReadUInt64();                      default: throw new Exception("Unreachable");                  }
Magic Number,Tests,StreamHelpersFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\StreamHelpersFacts.cs,ThreadStart,The following statement contains a magic number: switch (threadNumber % 7)                  {                      case 0: return s.ReadByte();                      case 1: return s.ReadInt64();                      case 2: return s.ReadUInt16();                      case 3: return s.ReadInt32();                      case 4: return s.ReadUInt32();                      case 5: return s.ReadInt64();                      case 6: return s.ReadUInt64();                      default: throw new Exception("Unreachable");                  }
Magic Number,Tests,StreamHelpersFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\StreamHelpersFacts.cs,ThreadStart,The following statement contains a magic number: switch (threadNumber % 7)                  {                      case 0: return s.ReadByte();                      case 1: return s.ReadInt64();                      case 2: return s.ReadUInt16();                      case 3: return s.ReadInt32();                      case 4: return s.ReadUInt32();                      case 5: return s.ReadInt64();                      case 6: return s.ReadUInt64();                      default: throw new Exception("Unreachable");                  }
Magic Number,Tests,WebAPIFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\WebAPIFacts.cs,WebAPIHasDefaultTimeout,The following statement contains a magic number: Assert.Equal( iface.Timeout' TimeSpan.FromSeconds( 100 ) );
Magic Number,Tests,WebAPIFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\WebAPIFacts.cs,WebAPIAsyncHasDefaultTimeout,The following statement contains a magic number: Assert.Equal( iface.Timeout' TimeSpan.FromSeconds( 100 ) );
Magic Number,Tests,WebAPIFacts,D:\research\architectureSmells\repos1\SteamRE_SteamKit\SteamKit2\Tests\WebAPIFacts.cs,UsesSingleParameterArgumentsDictionary,The following statement contains a magic number: Assert.Equal( 3' formData.Count );
