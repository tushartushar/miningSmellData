Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NSQnet.CLI,Program,C:\repos\ClothesHorse_NSQnet\NSQnet.CLI\Program.cs,Main,The length of the statement  "                    Console.WriteLine(String.Format("{0}::{2}.{1} Disconnected"' sub.Hostname' main_subscription.Channel' main_subscription.Topic)); " is 128.
Magic Number,NSQnet.CLI,Options,C:\repos\ClothesHorse_NSQnet\NSQnet.CLI\Program.cs,Options,The following statement contains a magic number: this.Port = 4161;
Magic Number,NSQnet.CLI,Program,C:\repos\ClothesHorse_NSQnet\NSQnet.CLI\Program.cs,Main,The following statement contains a magic number: nsq.MessageHandler = (sender' e) =>              {                  var sub = sender as NSQSubscriber;                    if (e.Message.Body.Length != 84)                  {                      throw new Exception("Bad Message!");                  }                    System.Threading.Interlocked.Increment(ref processed);                    sub.Finish(e.Message.MessageId);                  sub.ResetReadyCount();              };
Magic Number,NSQnet.CLI,Program,C:\repos\ClothesHorse_NSQnet\NSQnet.CLI\Program.cs,Main,The following statement contains a magic number: new Task(() =>              {                  while (true)                  {                      var delta = processed - last_processed;                      var time_delta = DateTime.Now - last_timestamp;                      var rate = (float)delta / (float)(time_delta.TotalMilliseconds / 1000);                        if (delta != 0)                      {                          lock(_consoleLock) {                              Console.WriteLine(String.Format("Processed {0} Messages at a rate of {1} m/sec"' processed' rate));                          }                          last_timestamp = DateTime.Now;                          last_processed = processed;                      }                        Thread.Sleep(500);                  }              }).Start();
Magic Number,NSQnet.CLI,Program,C:\repos\ClothesHorse_NSQnet\NSQnet.CLI\Program.cs,Main,The following statement contains a magic number: new Task(() =>              {                  while (true)                  {                      var delta = processed - last_processed;                      var time_delta = DateTime.Now - last_timestamp;                      var rate = (float)delta / (float)(time_delta.TotalMilliseconds / 1000);                        if (delta != 0)                      {                          lock(_consoleLock) {                              Console.WriteLine(String.Format("Processed {0} Messages at a rate of {1} m/sec"' processed' rate));                          }                          last_timestamp = DateTime.Now;                          last_processed = processed;                      }                        Thread.Sleep(500);                  }              }).Start();
