Implementation smell,Namespace,Class,File,Method,Description
Long Method,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,SubscribeSteamCallbacks,The method has 261 lines of code.
Complex Method,SteamBot,AdminUserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\AdminUserHandler.cs,AddCrateBySeries,Cyclomatic complexity of the method is 8
Complex Method,NDesk.Options,Option,C:\repos\Jessecar96_SteamBot\SteamBot\3rdparty\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 9
Complex Method,NDesk.Options,OptionSet,C:\repos\Jessecar96_SteamBot\SteamBot\3rdparty\Options.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Long Parameter List,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,Bot,The method has 5 parameters. Parameters: config' apiKey' handlerCreator' debug' process
Long Parameter List,NDesk.Options,OptionSet,C:\repos\Jessecar96_SteamBot\SteamBot\3rdparty\Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Long Identifier,SteamBot,SteamNotifications,C:\repos\Jessecar96_SteamBot\SteamBot\Notifications.cs,RequestCommentNotifications,The length of the parameter clientRequestCommentNotifications is 33.
Long Identifier,SteamBot,SteamNotifications,C:\repos\Jessecar96_SteamBot\SteamBot\Notifications.cs,HandleClientUserNotifications,The length of the parameter clientUserNotificationResponse is 30.
Long Statement,SteamBot,SteamTradeDemoHandler,C:\repos\Jessecar96_SteamBot\SteamBot\SteamTradeDemoHandler.cs,Validate,The length of the statement  "            errors.Add("This demo is meant to show you how to handle SteamInventory Items. Trade cannot be completed' unless you're an Admin."); " is 132.
Long Statement,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,HandleTradeSessionStart,The length of the statement  "                    response = "Trade failed. Could not correctly fetch your backpack. Either the inventory is inaccessible or your backpack is private."; " is 134.
Long Statement,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,GetMobileAuthCode,The length of the statement  "                SteamGuardAccount = Newtonsoft.Json.JsonConvert.DeserializeObject<SteamAuth.SteamGuardAccount>(File.ReadAllText(authFile)); " is 123.
Long Statement,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,UserLogOn,The length of the statement  "            FileInfo fi = new FileInfo(System.IO.Path.Combine("sentryfiles"'String.Format("{0}.sentryfile"' logOnDetails.Username))); " is 121.
Long Statement,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,OnUpdateMachineAuthCallback,The length of the statement  "            File.WriteAllBytes (System.IO.Path.Combine("sentryfiles"' String.Format("{0}.sentryfile"' logOnDetails.Username))' machineAuth.Data); " is 133.
Long Statement,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,OnUpdateMachineAuthCallback,The length of the statement  "                OneTimePassword = machineAuth.OneTimePassword' // not sure on this one yet' since we've had no examples of steam using OTPs " is 123.
Long Statement,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,FetchBotsInventory,The length of the statement  "                Log.Warn("The bot's backpack is private! If your bot adds any items it will fail! Your bot's backpack should be Public."); " is 122.
Long Statement,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,BackgroundWorkerOnDoWork,The length of the statement  "                    Log.Error("URI: {0} >> {1}"' (e.Response != null && e.Response.ResponseUri != null ? e.Response.ResponseUri.ToString() : "unknown")' e.ToString()); " is 147.
Long Statement,SteamBot,AdminUserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\AdminUserHandler.cs,PrintHelpMessage,The length of the statement  "            SendTradeMessage("{0} {1} [amount] [series] - adds all crates (optionally by series number' use 0 for amount to add all)"' AddCmd' AddCratesSubCmd); " is 148.
Long Statement,SteamBot,AdminUserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\AdminUserHandler.cs,PrintHelpMessage,The length of the statement  "            SendTradeMessage(@"{0} <craft_material_type> [amount] - adds all or a given amount of items of a given crafting type."' AddCmd); " is 128.
Long Statement,SteamBot,AdminUserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\AdminUserHandler.cs,PrintHelpMessage,The length of the statement  "            SendTradeMessage(@"See http://wiki.teamfortress.com/wiki/WebAPI/GetSchema for info about craft_material_type or defindex."); " is 124.
Long Statement,SteamBot,BotManager,C:\repos\Jessecar96_SteamBot\SteamBot\BotManager.cs,UserHandlerCreator,The length of the statement  "                throw new ArgumentException("Configured control class type was null. You probably named it wrong in your configuration file."' "bot"); " is 134.
Long Statement,SteamBot,Program,C:\repos\Jessecar96_SteamBot\SteamBot\Program.cs,BotManagerMode,The length of the statement  "                    "Configuration file Does not exist or is corrupt. Please rename 'settings-template.json' to 'settings.json' and modify the settings to match your environment"); " is 160.
Long Statement,SteamBot,UserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\UserHandler.cs,OnStatusError,The length of the statement  "            string errorMessage = String.Format("Trade with {0} ({1}) {2}"' otherUserName' OtherSID.ConvertToUInt64()' statusMessage); " is 122.
Long Statement,SteamBot,UserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\UserHandler.cs,SendMessage,The length of the statement  "                Log.Error(String.Format("Error occurred when sending message.  Message: \"{0}\" \nException: {1} "' message' ex.ToString())); " is 125.
Complex Conditional,NDesk.Options,Option,C:\repos\Jessecar96_SteamBot\SteamBot\3rdparty\Options.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 &&   					((names.Length == 1 && this.type != OptionValueType.None) ||  					 (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,NDesk.Options,OptionSet,C:\repos\Jessecar96_SteamBot\SteamBot\3rdparty\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length-1] == '+' || n [n.Length-1] == '-') &&  					Contains ((rn = n.Substring (0' n.Length-1)))"  is complex.
Magic Number,SteamBot,SteamTradeDemoHandler,C:\repos\Jessecar96_SteamBot\SteamBot\SteamTradeDemoHandler.cs,OnTradeInit,The following statement contains a magic number: contextId.Add(6);
Magic Number,SteamBot,SteamTradeDemoHandler,C:\repos\Jessecar96_SteamBot\SteamBot\SteamTradeDemoHandler.cs,OnTradeInit,The following statement contains a magic number: mySteamInventory.load(753' contextId' Bot.SteamClient.SteamID);
Magic Number,SteamBot,SteamTradeDemoHandler,C:\repos\Jessecar96_SteamBot\SteamBot\SteamTradeDemoHandler.cs,OnTradeInit,The following statement contains a magic number: OtherSteamInventory.load(753' contextId' OtherSID);
Magic Number,SteamBot,SteamTradeDemoHandler,C:\repos\Jessecar96_SteamBot\SteamBot\SteamTradeDemoHandler.cs,OnTradeAddItem,The following statement contains a magic number: switch (inventoryItem.AppId)              {                  case 440:                      SendTradeMessage("TF2 Item Added.");                      SendTradeMessage("Name: {0}"' schemaItem.Name);                      SendTradeMessage("Quality: {0}"' inventoryItem.Quality);                      SendTradeMessage("Level: {0}"' inventoryItem.Level);                      SendTradeMessage("Craftable: {0}"' (inventoryItem.IsNotCraftable ? "No" : "Yes"));                      break;                    case 753:                      GenericInventory.ItemDescription tmpDescription = OtherSteamInventory.getDescription(inventoryItem.Id);                      SendTradeMessage("Steam Inventory Item Added.");                      SendTradeMessage("Type: {0}"' tmpDescription.type);                      SendTradeMessage("Marketable: {0}"' (tmpDescription.marketable ? "Yes" : "No"));                      break;                    default:                      SendTradeMessage("Unknown item");                      break;              }
Magic Number,SteamBot,SteamTradeDemoHandler,C:\repos\Jessecar96_SteamBot\SteamBot\SteamTradeDemoHandler.cs,OnTradeAddItem,The following statement contains a magic number: switch (inventoryItem.AppId)              {                  case 440:                      SendTradeMessage("TF2 Item Added.");                      SendTradeMessage("Name: {0}"' schemaItem.Name);                      SendTradeMessage("Quality: {0}"' inventoryItem.Quality);                      SendTradeMessage("Level: {0}"' inventoryItem.Level);                      SendTradeMessage("Craftable: {0}"' (inventoryItem.IsNotCraftable ? "No" : "Yes"));                      break;                    case 753:                      GenericInventory.ItemDescription tmpDescription = OtherSteamInventory.getDescription(inventoryItem.Id);                      SendTradeMessage("Steam Inventory Item Added.");                      SendTradeMessage("Type: {0}"' tmpDescription.type);                      SendTradeMessage("Marketable: {0}"' (tmpDescription.marketable ? "Yes" : "No"));                      break;                    default:                      SendTradeMessage("Unknown item");                      break;              }
Magic Number,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,Bot,The following statement contains a magic number: tradePollingInterval = config.TradePollingInterval <= 100 ? 800 : config.TradePollingInterval;
Magic Number,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,Bot,The following statement contains a magic number: tradePollingInterval = config.TradePollingInterval <= 100 ? 800 : config.TradePollingInterval;
Magic Number,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,Bot,The following statement contains a magic number: tradeOfferPollingIntervalSecs = (config.TradeOfferPollingIntervalSecs == 0 ? 30 : config.TradeOfferPollingIntervalSecs);
Magic Number,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,Bot,The following statement contains a magic number: schemaLang = config.SchemaLang != null && config.SchemaLang.Length == 2 ? config.SchemaLang.ToLower() : "en";
Magic Number,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,TradeOfferPollingFunction,The following statement contains a magic number: while (tradeOfferThread == Thread.CurrentThread)              {                  try                  {                      tradeOfferManager.EnqueueUpdatedOffers();                  }                  catch (Exception e)                  {                      Log.Error("Error while polling trade offers: " + e);                  }                    Thread.Sleep(tradeOfferPollingIntervalSecs*1000);              }
Magic Number,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,WaitForInput,The following statement contains a magic number: while (true)              {                  if (consoleInput != null)                  {                      return consoleInput;                  }                  Thread.Sleep(5);              }
Magic Number,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,UserWebLogOn,The following statement contains a magic number: do              {                  IsLoggedIn = SteamWeb.Authenticate(myUniqueId' SteamClient' myUserNonce);                    if(!IsLoggedIn)                  {                      Log.Warn("Authentication failed' retrying in 2s...");                      Thread.Sleep(2000);                  }              } while(!IsLoggedIn);
Magic Number,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,BackgroundWorkerOnDoWork,The following statement contains a magic number: while (!botThread.CancellationPending)              {                  try                  {                      SteamCallbackManager.RunCallbacks();                        if(tradeOfferManager != null)                      {                          tradeOfferManager.HandleNextPendingTradeOfferUpdate();                      }                        Thread.Sleep(1);                  }                  catch (WebException e)                  {                      Log.Error("URI: {0} >> {1}"' (e.Response != null && e.Response.ResponseUri != null ? e.Response.ResponseUri.ToString() : "unknown")' e.ToString());                      System.Threading.Thread.Sleep(45000);//Steam is down' retry in 45 seconds.                  }                  catch (Exception e)                  {                      Log.Error("Unhandled exception occurred in bot: " + e);                  }              }
Magic Number,SteamBot,Bot,C:\repos\Jessecar96_SteamBot\SteamBot\Bot.cs,FireOnSteamGuardRequired,The following statement contains a magic number: if (handler != null)                  handler(this' e);              else              {                  while (true)                  {                      if (this.AuthCode != null)                      {                          e.SteamGuard = this.AuthCode;                          break;                      }                        Thread.Sleep(5);                  }              }
Magic Number,SteamBot,AdminUserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\AdminUserHandler.cs,HandleAddCommand,The following statement contains a magic number: switch (typeToAdd)              {                  case AddMetalSubCmd:                      AddItemsByCraftType("craft_bar"' amount);                      break;                  case AddWepsSubCmd:                      AddItemsByCraftType("weapon"' amount);                      break;                  case AddCratesSubCmd:                      // data[3] is the optional series number                      if (!String.IsNullOrEmpty(data[3]))                          AddCrateBySeries(data[3]' amount);                      else                          AddItemsByCraftType("supply_crate"' amount);                      break;                  case AddAllSubCmd:                      AddAllItems();                      break;                  default:                      AddItemsByCraftType(typeToAdd' amount);                      break;              }
Magic Number,SteamBot,AdminUserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\AdminUserHandler.cs,HandleAddCommand,The following statement contains a magic number: switch (typeToAdd)              {                  case AddMetalSubCmd:                      AddItemsByCraftType("craft_bar"' amount);                      break;                  case AddWepsSubCmd:                      AddItemsByCraftType("weapon"' amount);                      break;                  case AddCratesSubCmd:                      // data[3] is the optional series number                      if (!String.IsNullOrEmpty(data[3]))                          AddCrateBySeries(data[3]' amount);                      else                          AddItemsByCraftType("supply_crate"' amount);                      break;                  case AddAllSubCmd:                      AddAllItems();                      break;                  default:                      AddItemsByCraftType(typeToAdd' amount);                      break;              }
Magic Number,SteamBot,AdminUserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\AdminUserHandler.cs,GetSubCommand,The following statement contains a magic number: if (data.Length < 2)              {                  SendTradeMessage("No parameter for cmd");                  subCommand = null;                  return false;              }
Magic Number,SteamBot,AdminUserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\AdminUserHandler.cs,GetAddAmount,The following statement contains a magic number: if (data.Length > 2)              {                  // get the optional amount parameter                  if (!String.IsNullOrEmpty (data [2]))                  {                      uint.TryParse (data [2]' out amount);                  }              }
Magic Number,SteamBot,AdminUserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\AdminUserHandler.cs,GetAddAmount,The following statement contains a magic number: if (data.Length > 2)              {                  // get the optional amount parameter                  if (!String.IsNullOrEmpty (data [2]))                  {                      uint.TryParse (data [2]' out amount);                  }              }
Magic Number,SteamBot,AdminUserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\AdminUserHandler.cs,GetAddAmount,The following statement contains a magic number: if (data.Length > 2)              {                  // get the optional amount parameter                  if (!String.IsNullOrEmpty (data [2]))                  {                      uint.TryParse (data [2]' out amount);                  }              }
Magic Number,SteamBot,BotManager,C:\repos\Jessecar96_SteamBot\SteamBot\BotManager.cs,StartBots,The following statement contains a magic number: foreach (var runningBot in botProcs)              {                  runningBot.Start();                    Thread.Sleep(2000);              }
Magic Number,SteamBot,BotManagerInterpreter,C:\repos\Jessecar96_SteamBot\SteamBot\BotManagerInterpreter.cs,AuthSet,The following statement contains a magic number: if (xy.Length == 2)              {                  int index;                  string code = xy[1].Trim();                    if (int.TryParse(xy[0]' out index) && (index < manager.ConfigObject.Bots.Length))                  {                      Console.WriteLine("Authing bot with '" + code + "'");                      manager.AuthBot(index' code);                  }                  else if (!String.IsNullOrEmpty(xy[0]))                  {                      for (index = 0; index < manager.ConfigObject.Bots.Length; index++)                      {                          if (manager.ConfigObject.Bots[index].Username.Equals(xy[0]' StringComparison.CurrentCultureIgnoreCase))                          {                              Console.WriteLine("Authing bot with '" + code + "'");                              manager.AuthBot(index' code);                          }                      }                  }              }
Magic Number,SteamBot,BotManagerInterpreter,C:\repos\Jessecar96_SteamBot\SteamBot\BotManagerInterpreter.cs,ExecCommand,The following statement contains a magic number: if (cs.Length < 2)              {                  Console.WriteLine("Error: No command given to be executed.");                  return;              }
Magic Number,SteamBot,BotManagerInterpreter,C:\repos\Jessecar96_SteamBot\SteamBot\BotManagerInterpreter.cs,InputCommand,The following statement contains a magic number: if (cs.Length < 2)              {                  Console.WriteLine("Error: No input given.");                  return;              }
Magic Number,SteamBot,CommandSet,C:\repos\Jessecar96_SteamBot\SteamBot\BotManagerInterpreter.cs,Parse,The following statement contains a magic number: foreach (var option in this)                  {                      if (cs[0].Equals(option.Name' StringComparison.CurrentCultureIgnoreCase))                      {                          if (cs.Length > 2)                          {                              option.Func(c.Remove(0' cs[0].Length + 1));                          }                          else if (cs.Length > 1)                          {                              option.Func(cs[1]);                          }                          else                          {                              option.Func(String.Empty);                          }                      }                  }
Magic Number,SteamBot,UserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\UserHandler.cs,SendTradeMessageImpl,The following statement contains a magic number: if (message.Length > 100)              {                  Log.Warn("'{0}' is longer than 100 chars' it will be trimmed."' message);              }
Magic Number,SteamBot,SimpleUserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\SimpleUserHandler.cs,Validate,The following statement contains a magic number: foreach (TradeUserAssets asset in Trade.OtherOfferedItems)              {                  var item = Trade.OtherInventory.GetItem(asset.assetid);                  if (item.Defindex == 5000)                      AmountAdded += TF2Value.Scrap;                  else if (item.Defindex == 5001)                      AmountAdded += TF2Value.Reclaimed;                  else if (item.Defindex == 5002)                      AmountAdded += TF2Value.Refined;                  else                  {                      var schemaItem = Trade.CurrentSchema.GetItem (item.Defindex);                      errors.Add ("Item " + schemaItem.Name + " is not a metal.");                  }              }
Magic Number,SteamBot,SimpleUserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\SimpleUserHandler.cs,Validate,The following statement contains a magic number: foreach (TradeUserAssets asset in Trade.OtherOfferedItems)              {                  var item = Trade.OtherInventory.GetItem(asset.assetid);                  if (item.Defindex == 5000)                      AmountAdded += TF2Value.Scrap;                  else if (item.Defindex == 5001)                      AmountAdded += TF2Value.Reclaimed;                  else if (item.Defindex == 5002)                      AmountAdded += TF2Value.Refined;                  else                  {                      var schemaItem = Trade.CurrentSchema.GetItem (item.Defindex);                      errors.Add ("Item " + schemaItem.Name + " is not a metal.");                  }              }
Magic Number,SteamBot,SimpleUserHandler,C:\repos\Jessecar96_SteamBot\SteamBot\SimpleUserHandler.cs,Validate,The following statement contains a magic number: foreach (TradeUserAssets asset in Trade.OtherOfferedItems)              {                  var item = Trade.OtherInventory.GetItem(asset.assetid);                  if (item.Defindex == 5000)                      AmountAdded += TF2Value.Scrap;                  else if (item.Defindex == 5001)                      AmountAdded += TF2Value.Reclaimed;                  else if (item.Defindex == 5002)                      AmountAdded += TF2Value.Refined;                  else                  {                      var schemaItem = Trade.CurrentSchema.GetItem (item.Defindex);                      errors.Add ("Item " + schemaItem.Name + " is not a metal.");                  }              }
Magic Number,SteamBot.TF2GC,Crafting,C:\repos\Jessecar96_SteamBot\SteamBot\TF2GC\Crafting.cs,CraftItems,The following statement contains a magic number: CraftItems(bot' -2' items);
Magic Number,SteamBot.TF2GC,Crafting,C:\repos\Jessecar96_SteamBot\SteamBot\TF2GC\Crafting.cs,CraftItems,The following statement contains a magic number: if (bot.CurrentGame != 440)                  throw new Exception("SteamBot is not ingame with AppID 440; current AppID is " + bot.CurrentGame);
Magic Number,SteamBot.TF2GC,Crafting,C:\repos\Jessecar96_SteamBot\SteamBot\TF2GC\Crafting.cs,CraftItems,The following statement contains a magic number: bot.SteamGameCoordinator.Send(craftMsg' 440);
Magic Number,SteamBot.TF2GC,Items,C:\repos\Jessecar96_SteamBot\SteamBot\TF2GC\Items.cs,DeleteItem,The following statement contains a magic number: if (bot.CurrentGame != 440)                  throw new Exception("SteamBot is not ingame with AppID 440; current AppID is " + bot.CurrentGame);
Magic Number,SteamBot.TF2GC,Items,C:\repos\Jessecar96_SteamBot\SteamBot\TF2GC\Items.cs,DeleteItem,The following statement contains a magic number: bot.SteamGameCoordinator.Send(deleteMsg' 440);
Magic Number,SteamBot.TF2GC,MsgCraft,C:\repos\Jessecar96_SteamBot\SteamBot\TF2GC\MsgCraft.cs,GetEMsg,The following statement contains a magic number: return 1002;
Magic Number,SteamBot.TF2GC,MsgDelete,C:\repos\Jessecar96_SteamBot\SteamBot\TF2GC\MsgDelete.cs,GetEMsg,The following statement contains a magic number: return 1004;
Magic Number,NDesk.Options,OptionSet,C:\repos\Jessecar96_SteamBot\SteamBot\3rdparty\Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption (prototype' description' 2'   					delegate (OptionValueCollection v) {action (v [0]' v [1]);});
Magic Number,NDesk.Options,OptionSet,C:\repos\Jessecar96_SteamBot\SteamBot\3rdparty\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: foreach (Option p in this) {  				int written = 0;  				if (!WriteOptionPrototype (o' p' ref written))  					continue;    				if (written < OptionWidth)  					o.Write (new string (' '' OptionWidth - written));  				else {  					o.WriteLine ();  					o.Write (new string (' '' OptionWidth));  				}    				List<string> lines = GetLines (localizer (GetDescription (p.Description)));  				o.WriteLine (lines [0]);  				string prefix = new string (' '' OptionWidth+2);  				for (int i = 1; i < lines.Count; ++i) {  					o.Write (prefix);  					o.WriteLine (lines [i]);  				}  			}
Magic Number,NDesk.Options,OptionSet,C:\repos\Jessecar96_SteamBot\SteamBot\3rdparty\Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Magic Number,NDesk.Options,OptionSet,C:\repos\Jessecar96_SteamBot\SteamBot\3rdparty\Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Missing Default,SteamBot,SteamNotifications,C:\repos\Jessecar96_SteamBot\SteamBot\Notifications.cs,HandleMsg,The following switch statement is missing a default case: switch (packetMsg.MsgType)              {                  case EMsg.ClientNewLoginKey:                      HandleClientNewLoginKey(packetMsg);                      break;                    case EMsg.ClientUserNotifications:                      HandleClientUserNotifications(packetMsg);                      break;                    case EMsg.ClientCommentNotifications:                      HandleClientCommentNotifications(packetMsg);                      break;              }
Missing Default,SteamBot,SteamTradeDemoHandler,C:\repos\Jessecar96_SteamBot\SteamBot\SteamTradeDemoHandler.cs,OnTradeMessage,The following switch statement is missing a default case: switch (message.ToLower())              {                  case "errors":                      if (OtherSteamInventory.errors.Count > 0)                      {                          SendTradeMessage("User Errors:");                          foreach (string error in OtherSteamInventory.errors)                          {                              SendTradeMessage(" * {0}"' error);                          }                      }                        if (mySteamInventory.errors.Count > 0)                      {                          SendTradeMessage("Bot Errors:");                          foreach (string error in mySteamInventory.errors)                          {                              SendTradeMessage(" * {0}"' error);                          }                      }                  break;                    case "test":                      if (tested)                      {                          foreach (GenericInventory.Item item in mySteamInventory.items.Values)                          {                              Trade.RemoveItem(item);                          }                      }                      else                      {                          SendTradeMessage("Items on my bp: {0}"' mySteamInventory.items.Count);                          foreach (GenericInventory.Item item in mySteamInventory.items.Values)                          {                              Trade.AddItem(item);                          }                      }                        tested = !tested;                    break;                    case "remove":                      foreach (var item in mySteamInventory.items)                      {                          Trade.RemoveItem(item.Value.assetid' item.Value.appid' item.Value.contextid);                      }                  break;              }
Missing Default,SteamBot,Program,C:\repos\Jessecar96_SteamBot\SteamBot\Program.cs,ConsoleCtrlCheck,The following switch statement is missing a default case: switch (ctrlType)              {                  case CtrlTypes.CTRL_C_EVENT:                  case CtrlTypes.CTRL_BREAK_EVENT:                  case CtrlTypes.CTRL_CLOSE_EVENT:                  case CtrlTypes.CTRL_LOGOFF_EVENT:                  case CtrlTypes.CTRL_SHUTDOWN_EVENT:                      if (manager != null)                      {                          manager.StopBots();                      }                      isclosing = true;                      break;              }
Missing Default,NDesk.Options,OptionSet,C:\repos\Jessecar96_SteamBot\SteamBot\3rdparty\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  					case OptionValueType.None:  						c.OptionValues.Add (n);  						c.Option.Invoke (c);  						break;  					case OptionValueType.Optional:  					case OptionValueType.Required:   						ParseValue (v' c);  						break;  				}
Missing Default,NDesk.Options,OptionSet,C:\repos\Jessecar96_SteamBot\SteamBot\3rdparty\Options.cs,GetLineEnd,The following switch statement is missing a default case: switch (description [i]) {  					case ' ':  					case '\t':  					case '\v':  					case '-':  					case ''':  					case '.':  					case ';':  						sep = i;  						break;  					case '\n':  						return i;  				}
