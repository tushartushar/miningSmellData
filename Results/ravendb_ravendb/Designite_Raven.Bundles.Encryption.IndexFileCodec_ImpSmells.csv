Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Raven.Bundles.Encryption.IndexFileCodec,Program,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.Encryption.IndexFileCodec\Program.cs,Main,The length of the statement  "The filename must be the name of the file (without path) where it was originally used' as that is part of the encryption. " is 121.
Long Statement,Raven.Bundles.Encryption.IndexFileCodec,Program,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.Encryption.IndexFileCodec\Program.cs,Main,The length of the statement  "This tool will read the file contents from the specified input file' encrypt or decrypt them' and write to the specified output file. " is 133.
Magic Number,Raven.Bundles.Encryption.IndexFileCodec,Program,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.Encryption.IndexFileCodec\Program.cs,Main,The following statement contains a magic number: if (args.Length != 5 || !methods.ContainsKey(args[0]))              {                  Console.Error.WriteLine(@"Raven index file codec    Usage: Raven.Bundles.Encryption.IndexFileCodec {method} {key} {filename} {input} {output}    This tool only uses standard input and output for IO.  Method may be encrypt or decrypt.  The key must be a base64 encryption key.  The filename must be the name of the file (without path) where it was originally used' as that is part of the encryption.    This tool will read the file contents from the specified input file' encrypt or decrypt them' and write to the specified output file.  If decryption fails' a message will be written to standard error.  ");                  Environment.Exit((int)ExitCodes.InvalidArguments);                  return;              }
Magic Number,Raven.Bundles.Encryption.IndexFileCodec,Program,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.Encryption.IndexFileCodec\Program.cs,Main,The following statement contains a magic number: try              {                  using (var input = File.Open(args[3]' FileMode.Open' FileAccess.Read' FileShare.ReadWrite))                  using (var output = File.Open(args[4]' FileMode.Create' FileAccess.ReadWrite' FileShare.ReadWrite))                      methods[args[0]](password' args[2]' input' output);              }              catch (Exception ex)              {                  Console.Error.WriteLine(ex);                  Environment.Exit((int)ExitCodes.EncryptionError);              }
Magic Number,Raven.Bundles.Encryption.IndexFileCodec,Program,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.Encryption.IndexFileCodec\Program.cs,Main,The following statement contains a magic number: try              {                  using (var input = File.Open(args[3]' FileMode.Open' FileAccess.Read' FileShare.ReadWrite))                  using (var output = File.Open(args[4]' FileMode.Create' FileAccess.ReadWrite' FileShare.ReadWrite))                      methods[args[0]](password' args[2]' input' output);              }              catch (Exception ex)              {                  Console.Error.WriteLine(ex);                  Environment.Exit((int)ExitCodes.EncryptionError);              }
Magic Number,Raven.Bundles.Encryption.IndexFileCodec,Program,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.Encryption.IndexFileCodec\Program.cs,Main,The following statement contains a magic number: try              {                  using (var input = File.Open(args[3]' FileMode.Open' FileAccess.Read' FileShare.ReadWrite))                  using (var output = File.Open(args[4]' FileMode.Create' FileAccess.ReadWrite' FileShare.ReadWrite))                      methods[args[0]](password' args[2]' input' output);              }              catch (Exception ex)              {                  Console.Error.WriteLine(ex);                  Environment.Exit((int)ExitCodes.EncryptionError);              }
Magic Number,Raven.Bundles.Encryption.IndexFileCodec,Program,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.Encryption.IndexFileCodec\Program.cs,Encrypt,The following statement contains a magic number: input.CopyTo(new SeekableCryptoStream(new EncryptionSettings(password' typeof(Rijndael)' true' 128)' file' output));
Magic Number,Raven.Bundles.Encryption.IndexFileCodec,Program,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.Encryption.IndexFileCodec\Program.cs,Decrypt,The following statement contains a magic number: new SeekableCryptoStream(new EncryptionSettings(password' typeof(Rijndael)' true' 128)' file' input).CopyTo(output);
