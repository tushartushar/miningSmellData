Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Raven.Bundles.UniqueConstraints,UniqueConstraintsDeleteTrigger,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.UniqueConstraints\UniqueConstraintsDeleteTrigger.cs,OnDelete,Cyclomatic complexity of the method is 9
Complex Method,Raven.Bundles.UniqueConstraints,UniqueConstraintsPutTrigger,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.UniqueConstraints\UniqueConstraintsPutTrigger.cs,AllowPut,Cyclomatic complexity of the method is 10
Complex Method,Raven.Bundles.UniqueConstraints,UniqueConstraintsPutTrigger,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.UniqueConstraints\UniqueConstraintsPutTrigger.cs,OnPut,Cyclomatic complexity of the method is 11
Long Statement,Raven.Bundles.UniqueConstraints,Util,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.UniqueConstraints\Util.cs,GetConstraint,The length of the statement  "                    return new UniqueConstraint { PropName = property.Value<string>("Name")' CaseInsensitive = property.Value<bool>("CaseInsensitive") }; " is 133.
Long Statement,Raven.Bundles.UniqueConstraints,Util,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.UniqueConstraints\Util.cs,TryGetUniqueValues,The length of the statement  "            if (prop == null || prop.Type == JTokenType.Null || (prop.Type == JTokenType.String && string.IsNullOrEmpty(prop.Value<string>()))) " is 131.
Long Statement,Raven.Bundles.UniqueConstraints,Util,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.UniqueConstraints\Util.cs,TryGetUniqueValues,The length of the statement  "            uniqueValues = array != null ? array.Select(p => p.Value<string>()).Where(x => !string.IsNullOrEmpty(x)).ToArray() : new[] { prop.Value<string>() }; " is 148.
Complex Conditional,Raven.Bundles.UniqueConstraints,Util,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.UniqueConstraints\Util.cs,TryGetUniqueValues,The conditional expression  "prop == null || prop.Type == JTokenType.Null || (prop.Type == JTokenType.String && string.IsNullOrEmpty(prop.Value<string>()))"  is complex.
Magic Number,Raven.Bundles.UniqueConstraints,UniqueConstraintsPutTrigger,C:\repos\ravendb_ravendb\ToMigrate\Bundles\Raven.Bundles.UniqueConstraints\UniqueConstraintsPutTrigger.cs,AllowPut,The following statement contains a magic number: if (invalidFields.Length > 0)              {                  invalidFields.Length = invalidFields.Length - 2;                  return VetoResult.Deny("Ensure unique constraint violated for fields: " + invalidFields);              }
