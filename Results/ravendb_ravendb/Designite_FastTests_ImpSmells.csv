Implementation smell,Namespace,Class,File,Method,Description
Long Method,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The method has 112 lines of code.
Long Method,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The method has 126 lines of code.
Long Method,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The method has 141 lines of code.
Long Method,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,Errors2,The method has 443 lines of code.
Long Method,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The method has 286 lines of code.
Long Method,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,NumberOfDocumentsAndTombstonesToProcessShouldBeCalculatedCorrectly,The method has 126 lines of code.
Long Method,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,CanSetMapBatchSize,The method has 103 lines of code.
Long Method,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The method has 116 lines of code.
Long Method,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Order_by_string_integer_and_decimal_fields,The method has 105 lines of code.
Long Method,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The method has 206 lines of code.
Long Method,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,Cleanup,The method has 105 lines of code.
Complex Method,FastTests.Issues,RavenDB_6341,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-6341.cs,CommandsShouldNotHavePublicSettersInPropertiesOrNonReadOnlyPublicFields,Cyclomatic complexity of the method is 9
Complex Method,FastTests.Issues,RavenDB_10503,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10503.cs,InterfaceIDocumentQueryAndIRawDocumentQueryShouldOverrideAllEnumerableExtensions,Cyclomatic complexity of the method is 9
Complex Method,FastTests.Issues,RavenDB_10503,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10503.cs,GetSignature,Cyclomatic complexity of the method is 18
Complex Method,FastTests.Issues,RavenDB_10503,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10503.cs,TypeName,Cyclomatic complexity of the method is 10
Complex Method,FastTests.Issues,RavenDB_10503,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10503.cs,FindMethod,Cyclomatic complexity of the method is 8
Complex Method,FastTests.Issues,RavenDB_10503,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10503.cs,TypesAreEqual,Cyclomatic complexity of the method is 8
Complex Method,FastTests.Issues,RavenDB_9875,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_9875.cs,Commands_should_be_careful_about_blittable_usage,Cyclomatic complexity of the method is 10
Complex Method,FastTests.Server.Cluster,VersionValidation,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Cluster\VersionValidation.cs,AllClusterCommandHasCtor,Cyclomatic complexity of the method is 8
Complex Method,FastTests.Voron.FixedSize,RavenDB_6073,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\RavenDB_6073.cs,Branch_page_collapsing_during_tree_rebalancing,Cyclomatic complexity of the method is 9
Long Parameter List,FastTests.Blittable,PeepingTomTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\PeepingTomTest.cs,PeepingTomStreamTest,The method has 5 parameters. Parameters: originalSize' chunkSizeToRead' offset' context' token
Long Parameter List,FastTests.Issues,RavenDB_7329,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7329.cs,GetConfiguration,The method has 6 parameters. Parameters: publicServerUrl' publicTcpServerUrl' serverUrl' tcpServerUrl' certPath' unsecuredAccessAddressRange
Long Parameter List,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CreateOrders,The method has 5 parameters. Parameters: db' numberOfOrders' countries' employees' companies
Long Parameter List,FastTests.Server.Documents.Indexing,TestIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BasicAnalyzers.cs,GetMapEnumerator,The method has 5 parameters. Parameters: documents' collection' indexContext' stats' type
Long Parameter List,FastTests.Server.Documents.Indexing,TestIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BasicAnalyzers.cs,HandleDelete,The method has 5 parameters. Parameters: tombstone' collection' writer' indexContext' stats
Long Parameter List,FastTests.Server.Documents.Indexing,TestIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BasicAnalyzers.cs,HandleMap,The method has 6 parameters. Parameters: lowerId' id' mapResults' writer' indexContext' stats
Long Parameter List,FastTests.Server.Documents.Indexing,TestIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BasicAnalyzers.cs,GetQueryResultRetriever,The method has 5 parameters. Parameters: query' queryTimings' documentsContext' fieldsToFetch' includeDocumentsCommand
Long Identifier,FastTests.Blittable,JsonDeserializationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SerializationDeserializationValidation.cs,,The length of the parameter SerializationDeserializationValidation is 38.
Long Identifier,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,ReadDataTypesTest,The length of the parameter longEscapedCharsAndNonAsciiString is 33.
Long Identifier,FastTests.Issues,RavenDB_10503,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10503.cs,InterfaceIDocumentQueryAndIRawDocumentQueryShouldOverrideAllEnumerableExtensions,The length of the parameter missingRawDocumentQueryMethods is 30.
Long Identifier,FastTests.Issues,RavenDB_9875,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_9875.cs,,The length of the parameter _willNotUseTheCacheOutsideItsScopeBecauseWeDoubleCheckedThat is 60.
Long Identifier,FastTests.Voron.Journal,UncommittedTransactions,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\UncommittedTransactions.cs,UncommittedTransactionMustNotModifyPageTranslationTableOfLogFile,The length of the parameter pageAllocatedInUncommittedTransaction is 37.
Long Identifier,FastTests.Voron.Trees,FreeSpaceTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\FreeSpaceTest.cs,FreeSpaceHandlingShouldNotReturnPagesThatAreAlreadyAllocated,The length of the parameter freedInternallyByFreeSpaceHandling is 34.
Long Statement,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Valid_object_read_from_non_zero_offset,The length of the statement  "                        using (var builder = new BlittableJsonDocumentBuilder(context' BlittableJsonDocumentBuilder.UsageMode.None' "order/1"' parser' jsonParserState)) " is 144.
Long Statement,FastTests.Blittable,PartialParsingBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\PartialParsingBugs.cs,ParseJsonOneByteIncrements,The length of the statement  "            var builder = new BlittableJsonDocumentBuilder(ctx' BlittableJsonDocumentBuilder.UsageMode.ToDisk' "test"' parser' jsonParserState); " is 132.
Long Statement,FastTests.Blittable,PartialParsingBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\PartialParsingBugs.cs,ParseJsonAllAtOnce,The length of the statement  "            var builder = new BlittableJsonDocumentBuilder(ctx' BlittableJsonDocumentBuilder.UsageMode.ToDisk' "test"' parser' jsonParserState); " is 132.
Long Statement,FastTests.Blittable,PeepingTomTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\PeepingTomTest.cs,PeepingTomStreamTest,The length of the statement  "                    var expectedLength = originalSize < PeepingTomStream.BufferWindowSize ? originalSize : PeepingTomStream.BufferWindowSize; " is 121.
Long Statement,FastTests.Blittable,PeepingTomTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\PeepingTomTest.cs,PeepingTomStreamTest,The length of the statement  "                throw new InvalidOperationException($"Failed with originalSize {originalSize}' chunkSizeToRead {chunkSizeToRead}'  offset {offset}"' e); " is 136.
Long Statement,FastTests.Blittable.BlittableJsonWriterTests,BlittableFormatTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\BlittableFormatTests.cs,ShouldNotCrashForManyDifferentProperties,The length of the statement  "                        var compacted = ((JObject)serializer.Deserialize(new JsonTextReader(new StreamReader(stream)))).ToString(Formatting.None); " is 122.
Long Statement,FastTests.Blittable.BlittableJsonWriterTests,BlittableJsonTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\BlittableJsonTestBase.cs,GenerateSimpleEntityForFunctionalityTest2,The length of the statement  "            return @"{""<Name>i__Field"":""Oren""'""<Age>i__Field"":""34""'""<Dogs>i__Field"":[""Arava""'""Oscar""'""Phoebe""]'""<MegaDevices>i__Field"":[{""<Name>i__Field"":""Misteryous Brain Disruptor""'""<Usages>i__Field"":0'""Name"":""Misteryous Brain Disruptor""'""Usages"":0}'{""<Name>i__Field"":""Hockey stick""'""<Usages>i__Field"":4'""Name"":""Hockey stick""'""Usages"":4}]'""<Office>i__Field"":{""<Manager>i__Field"":{""<Name>i__Field"":""Assi""'""<Id>i__Field"":44'""Name"":""Assi""'""Id"":44}'""<Name>i__Field"":""Hibernating Rhinos""'""<Street>i__Field"":""Hanais 21""'""<City>i__Field"":""Hadera""'""Manager"":{""<Name>i__Field"":""Assi""'""<Id>i__Field"":44'""Name"":""Assi""'""Id"":44}'""Name"":""Hibernating Rhinos""'""Street"":""Hanais 21""'""City"":""Hadera""}'""Name"":""Oren""'""Age"":""34""'""Dogs"":[""Arava""'""Oscar""'""Phoebe""]'""MegaDevices"":[{""<Name>i__Field"":""Misteryous Brain Disruptor""'""<Usages>i__Field"":0'""Name"":""Misteryous Brain Disruptor""'""Usages"":0}'{""<Name>i__Field"":""Hockey stick""'""<Usages>i__Field"":4'""Name"":""Hockey stick""'""Usages"":4}]'""Office"":{""<Manager>i__Field"":{""<Name>i__Field"":""Assi""'""<Id>i__Field"":44'""Name"":""Assi""'""Id"":44}'""<Name>i__Field"":""Hibernating Rhinos""'""<Street>i__Field"":""Hanais 21""'""<City>i__Field"":""Hadera""'""Manager"":{""<Name>i__Field"":""Assi""'""<Id>i__Field"":44'""Name"":""Assi""'""Id"":44}'""Name"":""Hibernating Rhinos""'""Street"":""Hanais 21""'""City"":""Hadera""}}"; " is 1478.
Long Statement,FastTests.Blittable.BlittableJsonWriterTests,FunctionalityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\FunctionalityTests.cs,Generating_DictionaryDeserializationRoutine_should_work,The length of the statement  "            Func<BlittableJsonReaderObject' Dictionary<string' long>> deserializationFunc = JsonDeserializationBase.GenerateJsonDeserializationRoutine<Dictionary<string' long>>(); " is 167.
Long Statement,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,ReadDataTypesTest,The length of the statement  "                    Assert.Equal(1000' int.Parse((reader["Embedded"] as BlittableJsonReaderObject)["Value"].ToString()' CultureInfo.InvariantCulture)); " is 131.
Long Statement,FastTests.Client.Blittable,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Blittable\Serialization.cs,Can_Store_And_Load_Boolean_And_Nullable_Boolean,The length of the statement  "                    session.Store(new Dummy() { EntityName = "Dumb & Dumber"' LuckyNumber = 666' IsLucky = false' IsRich = null }' "dummies/2"); " is 124.
Long Statement,FastTests.Client.Blittable,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Blittable\Serialization.cs,Can_Store_And_Load_Nullable,The length of the statement  "                    session.Store(new NullableDummy() { NullInt = 1' NullBool = true' NullDouble = double.MinValue' NullFloat = float.MaxValue}' "dummies/1"); " is 138.
Long Statement,FastTests.Client.Blittable,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Blittable\Serialization.cs,Can_Store_And_Load_Nullable,The length of the statement  "                    session.Store(new NullableDummy() { NullInt = null' NullBool = null' NullDouble = null' NullFloat = null }' "dummies/2"); " is 121.
Long Statement,FastTests.Client,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInserts.cs,Simple_Bulk_Insert,The length of the statement  "                adminCertificate = RegisterClientCertificate(certificates.ServerCertificate.Value' certificates.ClientCertificate1.Value' new Dictionary<string' DatabaseAccess>()' SecurityClearance.ClusterAdmin); " is 196.
Long Statement,FastTests.Client,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInserts.cs,Simple_Bulk_Insert,The length of the statement  "                clientCertificate = RegisterClientCertificate(certificates.ServerCertificate.Value' certificates.ClientCertificate2.Value' new Dictionary<string' DatabaseAccess> " is 161.
Long Statement,FastTests.Client,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInserts.cs,Simple_Bulk_Insert_Should_Work,The length of the statement  "                var getDocumentCommand = new GetDocumentsCommand(new[] { "FooBars/1-A"' "FooBars/2-A"' "FooBars/3-A"' "FooBars/4-A" }' includes: null' metadataOnly: false); " is 156.
Long Statement,FastTests.Client,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInserts.cs,Bulk_Insert_Should_Throw_On_StoreAsync_Concurrent_Calls,The length of the statement  "                    var ae = Assert.Throws<AggregateException>(() => { Parallel.ForEach(localList' element => { bulkInsert.StoreAsync(element).Wait(); }); }); " is 138.
Long Statement,FastTests.Client,CanParseToObjectFromBlittable,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CanParseToObjectFromBlittable.cs,Directly,The length of the statement  "            var json = "{'Id':'users/1'' 'Name': 'Oren'' 'Dogs':['Arava'''Oscar'''Phoebe']' 'Age': 34' 'Children':[{'Name':'Date'}]}"; " is 122.
Long Statement,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The length of the statement  "                    session.Advanced.Patch(loaded' u => u.Stuff' roles => roles.Add(new Stuff { Key = 102 }' new Stuff { Phone = "123456" })); " is 122.
Long Statement,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The length of the statement  "                    session.Advanced.Patch(loaded' u => u.Stuff' roles => roles.Add(new Stuff { Key = 102 }' new Stuff { Phone = "123456" })); " is 122.
Long Statement,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,HiLoKeyGenerator_hangs_when_aggressive_caching_enabled_on_other_documentstore,The length of the statement  "                using (otherStore.AggressivelyCache()) // Note that we don't even use the other store' we just call AggressivelyCache on it " is 123.
Long Statement,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,HiLoKeyGenerator_async_hangs_when_aggressive_caching_enabled_on_other_documentstore,The length of the statement  "                using (otherStore.AggressivelyCache()) // Note that we don't even use the other store' we just call AggressivelyCache on it " is 123.
Long Statement,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The length of the statement  "                    session.Store(new GeekPerson { Name = "Bebop"' FavoritePrimes = new[] { 13' 43' 443' 997 }' FavoriteVeryLargePrimes = new[] { 5000000029' 5000000039 } }' "geeks/1"); " is 165.
Long Statement,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The length of the statement  "                    session.Store(new GeekPerson { Name = "Rocksteady"' FavoritePrimes = new[] { 2' 3' 5' 7 }' FavoriteVeryLargePrimes = new[] { 999999999989 } }' "geeks/2"); " is 154.
Long Statement,FastTests.Client,OnGoingTask,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\OnGoingTask.cs,GetSqlEtlTaskInfo,The length of the statement  "                    ConnectionString = @"Data Source=localhost\sqlexpress;Integrated Security=SSPI;Connection Timeout=3" + $";Initial Catalog=SqlReplication-{store.Database};"' " is 156.
Long Statement,FastTests.Client,QueriesWithVariables,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueriesWithVariables.cs,Query_With_Variables,The length of the statement  "                    session.Store(new User { Name = "Jerry"' LastName = "Garcia" ' FriendId = "users/2" ' Birthday = new DateTime(1942' 8' 1)}' "users/1"); " is 135.
Long Statement,FastTests.Client,QueriesWithVariables,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueriesWithVariables.cs,Query_With_Variables_IntoClass,The length of the statement  "                    session.Store(new User { Name = "Jerry"' LastName = "Garcia"' FriendId = "users/2"' Birthday = new DateTime(1942' 8' 1) }' "users/1"); " is 134.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The length of the statement  "                    newSession.Store(new Dog { Name = "Snoopy"' Breed = "Beagle"' Color = "White"' Age = 6' IsVaccinated = true }' "dogs/1"); " is 121.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The length of the statement  "                    newSession.Store(new Dog { Name = "Brian"' Breed = "Labrador"' Color = "White"' Age = 12' IsVaccinated = false }' "dogs/2"); " is 124.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The length of the statement  "                    newSession.Store(new Dog { Name = "Django"' Breed = "Jack Russel"' Color = "Black"' Age = 3' IsVaccinated = true }' "dogs/3"); " is 126.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The length of the statement  "                    newSession.Store(new Dog { Name = "Beethoven"' Breed = "St. Bernard"' Color = "Brown"' Age = 1' IsVaccinated = false }' "dogs/4"); " is 130.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The length of the statement  "                    newSession.Store(new Dog { Name = "Scooby Doo"' Breed = "Great Dane"' Color = "Brown"' Age = 0' IsVaccinated = false }' "dogs/5"); " is 130.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The length of the statement  "                    newSession.Store(new Dog { Name = "Old Yeller"' Breed = "Black Mouth Cur"' Color = "White"' Age = 2' IsVaccinated = true }' "dogs/6"); " is 134.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The length of the statement  "                    newSession.Store(new Dog { Name = "Benji"' Breed = "Mixed"' Color = "White"' Age = 0' IsVaccinated = false }' "dogs/7"); " is 120.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The length of the statement  "                    newSession.Store(new Dog { Name = "Lassie"' Breed = "Collie"' Color = "Brown"' Age = 6' IsVaccinated = true }' "dogs/8"); " is 121.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The length of the statement  "                    newSession.Store(new Dog { Name = "Snoopy"' Breed = "Beagle"' Color = "White"' Age = 6' IsVaccinated = true}' "dogs/1"); " is 120.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The length of the statement  "                    newSession.Store(new Dog { Name = "Brian"' Breed = "Labrador"' Color = "White"' Age = 12' IsVaccinated = false }' "dogs/2"); " is 124.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The length of the statement  "                    newSession.Store(new Dog { Name = "Django"' Breed = "Jack Russel"' Color = "Black"' Age = 3' IsVaccinated = true }' "dogs/3"); " is 126.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The length of the statement  "                    newSession.Store(new Dog { Name = "Beethoven"' Breed = "St. Bernard"' Color = "Brown"' Age = 1' IsVaccinated = false }' "dogs/4"); " is 130.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The length of the statement  "                    newSession.Store(new Dog { Name = "Scooby Doo"' Breed = "Great Dane"' Color = "Brown"' Age = 0' IsVaccinated = false }' "dogs/5"); " is 130.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The length of the statement  "                    newSession.Store(new Dog { Name = "Old Yeller"' Breed = "Black Mouth Cur"' Color = "White"' Age = 2' IsVaccinated = true }' "dogs/6"); " is 134.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The length of the statement  "                    newSession.Store(new Dog { Name = "Benji"' Breed = "Mixed"' Color = "White"' Age = 0' IsVaccinated = false }' "dogs/7"); " is 120.
Long Statement,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The length of the statement  "                    newSession.Store(new Dog { Name = "Lassie"' Breed = "Collie"' Color = "Brown"' Age = 6' IsVaccinated = true }' "dogs/8"); " is 121.
Long Statement,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The length of the statement  "                    await asyncSession.StoreAsync(new Dog { Name = "Snoopy"' Breed = "Beagle"' Color = "White"' Age = 6' IsVaccinated = true }' "dogs/1"); " is 134.
Long Statement,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The length of the statement  "                    await asyncSession.StoreAsync(new Dog { Name = "Brian"' Breed = "Labrador"' Color = "White"' Age = 12' IsVaccinated = false }' "dogs/2"); " is 137.
Long Statement,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The length of the statement  "                    await asyncSession.StoreAsync(new Dog { Name = "Django"' Breed = "Jack Russel"' Color = "Black"' Age = 3' IsVaccinated = true }' "dogs/3"); " is 139.
Long Statement,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The length of the statement  "                    await asyncSession.StoreAsync(new Dog { Name = "Beethoven"' Breed = "St. Bernard"' Color = "Brown"' Age = 1' IsVaccinated = false }' "dogs/4"); " is 143.
Long Statement,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The length of the statement  "                    await asyncSession.StoreAsync(new Dog { Name = "Scooby Doo"' Breed = "Great Dane"' Color = "Brown"' Age = 0' IsVaccinated = false }' "dogs/5"); " is 143.
Long Statement,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The length of the statement  "                    await asyncSession.StoreAsync(new Dog { Name = "Old Yeller"' Breed = "Black Mouth Cur"' Color = "White"' Age = 2' IsVaccinated = true }' "dogs/6"); " is 147.
Long Statement,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The length of the statement  "                    await asyncSession.StoreAsync(new Dog { Name = "Benji"' Breed = "Mixed"' Color = "White"' Age = 0' IsVaccinated = false }' "dogs/7"); " is 133.
Long Statement,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The length of the statement  "                    await asyncSession.StoreAsync(new Dog { Name = "Lassie"' Breed = "Collie"' Color = "Brown"' Age = 6' IsVaccinated = true }' "dogs/8"); " is 134.
Long Statement,FastTests.Client,TrackEntity,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\TrackEntity.cs,Deleting_Entity_That_Is_Not_Tracked_Should_Throw,The length of the statement  "                    Assert.Equal("Raven.Tests.Core.Utils.Entities.User is not associated with the session' cannot delete unknown entity instance"' e.Message); " is 138.
Long Statement,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,CanReset,The length of the statement  "                var index = await database.IndexStore.CreateIndex(new AutoMapIndexDefinition("Users"' new[] {new AutoIndexField {Name = "Name1"}})' " is 131.
Long Statement,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,CanDelete,The length of the statement  "                var index = await database.IndexStore.CreateIndex(new AutoMapIndexDefinition("Users"' new[] { new AutoIndexField { Name = "Name1" } })' Guid.NewGuid().ToString()); " is 163.
Long Statement,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,CanStopAndStart,The length of the statement  "                await database.IndexStore.CreateIndex(new AutoMapIndexDefinition("Users"' new[] { new AutoIndexField { Name = "Name1" } })' Guid.NewGuid().ToString()); " is 151.
Long Statement,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,CanStopAndStart,The length of the statement  "                await database.IndexStore.CreateIndex(new AutoMapIndexDefinition("Users"' new[] { new AutoIndexField { Name = "Name2" } })' Guid.NewGuid().ToString()); " is 151.
Long Statement,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,SetLockModeAndSetPriorityForAutoIndex,The length of the statement  "                var exception = await Assert.ThrowsAsync<InvalidOperationException>(() => store.Maintenance.SendAsync(new SetIndexesLockOperation(index.Name' IndexLockMode.LockedIgnore))); " is 172.
Long Statement,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanoutWhenOutputingBlittableObjectInstance,The length of the statement  "                    var res = session.Query<DateWithAmount' FanoutByPaymentsWithReduce>().Where(x => x.Amount == 42.833333333333336).ToList(); " is 122.
Long Statement,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanUseJavaScriptIndexWithDynamicFields,The length of the statement  "                    session.Query<User>("UsersByNameAndAnalyzedName").ProjectInto<UsersByNameAndAnalyzedName.Result>().Search(x => x.AnalyzedName' "Brendan") " is 137.
Long Statement,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanUseSpatialFieldsInternal,The length of the statement  "                session.Query<Location>(indexName).Spatial("Location"' criteria => criteria.WithinRadius(kalab' 32.56829122491778' 34.953954053921734)).Single(x => x.Description == "Dor beach"); " is 178.
Long Statement,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexSwitchCases,The length of the statement  "                    var res = session.Query<ProductsWarrentyResult>("ProductsWarrenty").Where(u => u.Duration > 20).ProjectInto<Product>().Single(); " is 128.
Long Statement,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,SubscriptionLongName,The length of the statement  "                    Name = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" " is 2275.
Long Statement,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldThrowOnAttemptToOpenAlreadyOpenedSubscription,The length of the statement  "                        Assert.True(await Assert.ThrowsAsync<SubscriptionInUseException>(() => secondSubscription.Run(x => { })).WaitAsync(_reasonableWaitTime)); " is 137.
Long Statement,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,WillAcknowledgeEmptyBatches,The length of the statement  "                    using (var filteredUsersSubscription = store.Subscriptions.GetSubscriptionWorker(new SubscriptionWorkerOptions(filteredUsersId) " is 127.
Long Statement,FastTests.Graph,BasicGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\BasicGraphQueries.cs,Query_with_no_matches_and_without_select_should_return_empty_result,The length of the statement  "                    var results = session.Advanced.RawQuery<JObject>(@"match (Dogs as a)-[Likes]->(Dogs as f)<-[Likes]-(Dogs as b)").ToList(); " is 122.
Long Statement,FastTests.Graph,BasicGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\BasicGraphQueries.cs,Mutliple_results_in_row_wont_flatten_results,The length of the statement  "                    var allVerticesQuery = session.Advanced.RawQuery<JObject>(@"match (_ as u)-[HasRated select Movie]->(_ as m)").ToList(); " is 120.
Long Statement,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanGraphQuery,The length of the statement  "                    FooBar res = session.Advanced.GraphQuery<FooBar>("match (Foo)-[Bars as _]->(Bars as Bar)").With("Foo"' session.Query<Foo>()).Single(); " is 134.
Long Statement,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,WaitForNonStaleResultsOnGraphQueriesWithClauseShouldWork,The length of the statement  "                        .With("Foo"' builder => builder.DocumentQuery<Foo>().WhereIn(x => x.Name' names).WaitForNonStaleResults(TimeSpan.FromMinutes(3))) " is 129.
Long Statement,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,WaitForNonStaleResultsOnGraphQueriesWithClauseShouldWork,The length of the statement  "                        .With("Bar"' session.Query<Bar>().Customize(x => x.WaitForNonStaleResults(TimeSpan.FromMinutes(5))).Where(x => x.Age >= 18)) " is 124.
Long Statement,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,WaitForNonStaleResultsOnGraphQueriesWithClauseShouldWork,The length of the statement  "                        .With("Foo"' builder => builder.AsyncDocumentQuery<Foo>().WhereIn(x => x.Name' names).WaitForNonStaleResults(TimeSpan.FromMinutes(3))) " is 134.
Long Statement,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,WaitForNonStaleResultsOnGraphQueriesWithClauseShouldWork,The length of the statement  "                        .With("Bar"' session.Query<Bar>().Customize(x => x.WaitForNonStaleResults(TimeSpan.FromMinutes(5))).Where(x => x.Age >= 18)) " is 124.
Long Statement,FastTests.Graph,Parsing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\Parsing.cs,CanRewriteQuery,The length of the statement  "                Assert.Equal("FROM Users WHERE City = 'Hadera'"' query.GraphQuery.WithDocumentQueries["u"].withQuery.ToString().Trim()); " is 120.
Long Statement,FastTests.Issues,RavenDB_10493,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-10493.cs,CanTranslateDateTimeMinValueMaxValue,The length of the statement  "                        $"declare function output(x) {{{Environment.NewLine}\tvar test = 1;{Environment.NewLine}\treturn {{ DateTime : x.DateTime' DateTimeMinValue : new Date(-62135596800000)' DateTimeMaxValue : new Date(253402297199999) }};{Environment.NewLine}}}{Environment.NewLine}from Articles as x select output(x)"; " is 298.
Long Statement,FastTests.Issues,RavenDB_12568,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-12568.cs,PuttingBlittableWithAttachmentsShouldThrowIfNotExist,The length of the statement  "                    Assert.Throws<RavenException>(() => requestExecutor.Execute(new PutDocumentCommand("foo/bar"' null' blittableJson)' context)); " is 126.
Long Statement,FastTests.Issues,RavenDB_12926,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-12926.cs,AsyncManualResetEventWaitAsyncWithCancellationShouldWork,The length of the statement  "            Assert.True(are.WaitOne(TimeSpan.FromSeconds(5))' "Waited for 30sec for AsyncManualResetEvent to be canceled be it didn't"); " is 124.
Long Statement,FastTests.Issues,RavenDB_5610,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-5610.cs,UpdateType,The length of the statement  "                indexDefinition.Configuration[RavenConfiguration.GetKey(x => x.Indexing.TimeToWaitBeforeMarkingAutoIndexAsIdle)] = "10"; " is 120.
Long Statement,FastTests.Issues,RavenDB_5610,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-5610.cs,UpdateType,The length of the statement  "                indexDefinition.Configuration[RavenConfiguration.GetKey(x => x.Indexing.TimeToWaitBeforeMarkingAutoIndexAsIdle)] = "20"; " is 120.
Long Statement,FastTests.Issues,RavenDB_6141,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-6141.cs,Inherits_server_settings_and_appends_resource_specific_suffix_paths,The length of the statement  "            Assert.Equal(new PathSetting($@"{_rootPathString}Deployment\Databases\Foo").FullPath' database.Core.DataDirectory.FullPath); " is 124.
Long Statement,FastTests.Issues,RavenDB_6141,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-6141.cs,Inherits_server_settings_and_appends_resource_specific_suffix_paths,The length of the statement  "            Assert.Equal(new PathSetting($@"{_rootPathString}indexes-temp\Databases\Foo").FullPath' database.Indexing.TempPath.FullPath); " is 125.
Long Statement,FastTests.Issues,RavenDB_6341,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-6341.cs,CommandsShouldNotHavePublicSettersInPropertiesOrNonReadOnlyPublicFields,The length of the statement  "                foreach (var field in System.Reflection.TypeExtensions.GetFields(commandType' BindingFlags.Instance | BindingFlags.Public)) " is 123.
Long Statement,FastTests.Issues,RavenDB_7260,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7260.cs,ShouldWork,The length of the statement  "            Assert.Equal($"Configuration '{RavenConfiguration.GetKey(x => x.Storage.ForceUsing32BitsPager)}' can only be set at server level."' e.Message); " is 143.
Long Statement,FastTests.Issues,RavenDB_7329,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7329.cs,PublicUrlShouldNotBeZeros,The length of the statement  "                Assert.Equal($"Invalid host value in {RavenConfiguration.GetKey(x => x.Core.PublicServerUrl)} configuration option: 0.0.0.0"' argException.Message); " is 148.
Long Statement,FastTests.Issues,RavenDB_7329,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7329.cs,PublicUrlShouldNotHavePortZero,The length of the statement  "                Assert.Equal($"Invalid port value in {RavenConfiguration.GetKey(x => x.Core.PublicServerUrl)} configuration option: 0."' argException.Message); " is 143.
Long Statement,FastTests.Issues,RavenDB_7329,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7329.cs,PublicTcpUrlShouldNotBeZeros,The length of the statement  "                Assert.Equal($"Invalid host value in {RavenConfiguration.GetKey(x => x.Core.PublicTcpServerUrl)} configuration option: 0.0.0.0"' argException.Message); " is 151.
Long Statement,FastTests.Issues,RavenDB_7329,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7329.cs,PublicTcpUrlShouldNotHavePortZero,The length of the statement  "                Assert.Equal($"Invalid port value in {RavenConfiguration.GetKey(x => x.Core.PublicTcpServerUrl)} configuration option: 0."' argException.Message); " is 146.
Long Statement,FastTests.Issues,RavenDB_7493,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7493.cs,Ensure_deserialization_routines_are_properly_created,The length of the statement  "                foreach (var type in new []{ typeof(JsonDeserializationClient)' typeof(JsonDeserializationCluster)' typeof(JsonDeserializationServer) }) " is 136.
Long Statement,FastTests.Issues,RavenDB_7493,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7493.cs,Ensure_deserialization_routines_are_properly_created,The length of the statement  "                            catch (Exception e) when (e.ToString().Contains("Failed to fetch property name")) // due to empty json we pass here' let's ignore it " is 132.
Long Statement,FastTests.Issues,RavenDB_7493,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7493.cs,Ensure_deserialization_routines_are_properly_created,The length of the statement  "                        catch (Exception e) when (e.ToString().Contains("Failed to fetch property name")) // due to empty json we pass here' let's ignore it " is 132.
Long Statement,FastTests.Issues,RavenDB_7636,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7636.cs,GivenNoCertificateSpecifiedAndServerBoundOutsideOfUnsecureAccessAllowedShouldError,The length of the statement  "                Assert.Equal($"Configured { RavenConfiguration.GetKey(x => x.Core.ServerUrls) } \"http://192.168.1.24\" is not within unsecured access address range. Use a server url within unsecure access address range ({ RavenConfiguration.GetKey(x => x.Security.UnsecuredAccessAllowed) }) or fill in certificate information."' exception.Message); " is 333.
Long Statement,FastTests.Issues,RavenDB_7636,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7636.cs,GetConfiguration,The length of the statement  "                RavenConfiguration.GetKey(x => x.Security.UnsecuredAccessAllowed)' Enum.GetName(typeof(UnsecuredAccessAddressRange)' unsecuredAccessAddressRange)); " is 147.
Long Statement,FastTests.Issues,RavenDB_10503,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10503.cs,InterfaceIDocumentQueryAndIRawDocumentQueryShouldOverrideAllEnumerableExtensions,The length of the statement  "                var documentQueryMethod = FindMethod(documentQueryTypeBase' methodName' allParameters.Select(x => x.ParameterType).ToArray()); " is 126.
Long Statement,FastTests.Issues,RavenDB_10503,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10503.cs,InterfaceIDocumentQueryAndIRawDocumentQueryShouldOverrideAllEnumerableExtensions,The length of the statement  "                var rawDocumentQueryMethod = FindMethod(rawDocumentQueryTypeBase' methodName' allParameters.Select(x => x.ParameterType).ToArray()); " is 132.
Long Statement,FastTests.Issues,RavenDB_10503,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10503.cs,WriteExtensionMethod,The length of the statement  "            sb.AppendLine("[Obsolete(\"This method is one of the 'System.Linq.Enumerable' extensions and the query will be materialized before execution of this method. It will be applied to in-memory results. If you want to get rid of this message please use '.ToList()' before execution of this method.\")]"); " is 299.
Long Statement,FastTests.Issues,RavenDB_10503,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10503.cs,WriteExtensionMethod,The length of the statement  "            sb.AppendLine("[Obsolete(\"This method is one of the 'System.Linq.Enumerable' extensions and the query will be materialized before execution of this method. It will be applied to in-memory results. If you want to get rid of this message please use '.ToList()' before execution of this method.\")]"); " is 299.
Long Statement,FastTests.Issues,RavenDB_10583,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10583.cs,TranslateEnumAsString,The length of the statement  "                        $"declare function output(x) {{{Environment.NewLine}\tvar test = x.Value===\"Value1\";{Environment.NewLine}\treturn {{ ShouldBeTrue : test }};{Environment.NewLine}}}{Environment.NewLine}from Articles as x select output(x)"; " is 223.
Long Statement,FastTests.Issues,RavenDB_10583,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10583.cs,TranslateEnumAsInteger,The length of the statement  "                        $"declare function output(x) {{{Environment.NewLine}\tvar test = x.Value===0;{Environment.NewLine}\treturn {{ ShouldBeTrue : test }};{Environment.NewLine}}}{Environment.NewLine}from Articles as x select output(x)"; " is 214.
Long Statement,FastTests.Issues,RavenDB_10644,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10644.cs,TranslateMathRound,The length of the statement  "                    Assert.Equal("from Articles as x select { Round : Math.round(x.Value)' Round2 : Math.round(x.Value * Math.pow(10' 2)) / Math.pow(10' 2)' Round4 : Math.round(x.Value * Math.pow(10' 4)) / Math.pow(10' 4) }"' query.ToString()); " is 224.
Long Statement,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The length of the statement  "                                    TestGeneratedDictionarySum2 = x.Elements.ToDictionary(a => a.Name' a => a.Decimal).Sum(a => a.Value)'  // JS: ToDictionary -> ToKeyValuePair -> Sum " is 147.
Long Statement,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The length of the statement  "                    //Assert.Equal("from Articles as x select { Round : Math.round(x.Value)' Round2 : Math.round(x.Value * Math.pow(10' 2)) / Math.pow(10' 2)' Round4 : Math.round(x.Value * Math.pow(10' 4)) / Math.pow(10' 4) }"' query.ToString()); " is 226.
Long Statement,FastTests.Issues,RavenDB_13906,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_13906.cs,OnAfterSaveChangesOnPatchShouldWork,The length of the statement  "                    var operation = store.Operations.Send(new PatchByQueryOperation("from Users update { this.Name = this.Name + '_J'; }")); " is 120.
Long Statement,FastTests.Issues,RavenDB_7953,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_7953.cs,StringMethodsShouldBeAvailableInLazyStringValue,The length of the statement  "                sb.AppendLine($"{method.ReturnType.Name} {method.Name}({string.Join("' "' parameters.Select(x => x.IsOptional ? $"{x.ParameterType.Name} {x.Name} = {x.DefaultValue?.GetType().Name}.{x.DefaultValue}" : $"{x.ParameterType.Name} {x.Name}"))})"); " is 242.
Long Statement,FastTests.Issues,RavenDB_8680,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_8680.cs,GetTestData,The length of the statement  "            yield return new object[] {"from Categories where id() = 'categories/8'"' $"FROM Categories WHERE id() = 'categories/8'{Environment.NewLine}"}; " is 143.
Long Statement,FastTests.Issues,RavenDB_8680,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_8680.cs,GetTestData,The length of the statement  "            yield return new object[] {"from Categories where id() in ('categories/8')"' $"FROM Categories WHERE id() IN ('categories/8'){Environment.NewLine}"}; " is 149.
Long Statement,FastTests.Issues,RavenDB_9348,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_9348.cs,IfConfigurationKeyIsStringArrayThenItShouldSupportValuesWithSemicolonPropely,The length of the statement  "            configuration.SetSetting(RavenConfiguration.GetKey(x => x.Core.ServerUrls)' "http://123.123.123.123:10105;http://123.123.123.124:10105"); " is 137.
Long Statement,FastTests.Issues,RavenDB_9875,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_9875.cs,Commands_should_be_careful_about_blittable_usage,The length of the statement  "                            sb.AppendLine("The type " + type.FullName + " has property " + item.Name + " of type " + item.PropertyType.FullName + " and didn't validate that is isn't copying the cached value correctly"); " is 191.
Long Statement,FastTests.Issues,RavenDB_9875,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_9875.cs,Commands_should_be_careful_about_blittable_usage,The length of the statement  "                            sb.AppendLine("The type " + type.FullName + " has filed " + item.Name + " of type " + item.FieldType.FullName + " and didn't validate that is isn't copying the cached value correctly"); " is 185.
Long Statement,FastTests.Issues,RavenDB_9900,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_9900.cs,Database_creation_using_relative_path_creates_directories_incorrectly,The length of the statement  "            Assert.Equal(new PathSetting("RavenData/MyWork/MyDatabaseFolder/Indexes").FullPath' database.Indexing.StoragePath.FullPath); " is 124.
Long Statement,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Empty_remote_change_vector_should_generate_already_merged,The length of the statement  "            Assert.Equal(ConflictStatus.AlreadyMerged' ChangeVectorUtils.GetConflictStatus(string.Empty' ChangeVector((Guid.NewGuid()' 2' 1)' (Guid.NewGuid()' 3' 2)))); " is 156.
Long Statement,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Empty_local_change_vector,The length of the statement  "            Assert.Equal(ConflictStatus.Update' ChangeVectorUtils.GetConflictStatus(ChangeVector((Guid.NewGuid()' 2' 1)' (Guid.NewGuid()' 3' 2))' string.Empty)); " is 149.
Long Statement,FastTests.Server.Basic,MaxSecondsForTaskToWaitForDatabaseToLoad,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\MaxSecondsForTaskToWaitForDatabaseToLoad.cs,Should_throw_when_there_is_timeout,The length of the statement  "                    using (var requestExecutor = RequestExecutor.CreateForSingleNodeWithoutConfigurationUpdates(url' name' null' DocumentConventions.Default)) " is 138.
Long Statement,FastTests.Server.Basic,MaxSecondsForTaskToWaitForDatabaseToLoad,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\MaxSecondsForTaskToWaitForDatabaseToLoad.cs,Should_throw_when_there_is_timeout,The length of the statement  "                    using (var requestExecutor = RequestExecutor.CreateForSingleNodeWithoutConfigurationUpdates(url' name' null' DocumentConventions.Default)) " is 138.
Long Statement,FastTests.Server.Basic,MaxSecondsForTaskToWaitForDatabaseToLoad,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\MaxSecondsForTaskToWaitForDatabaseToLoad.cs,GenerateDatabaseDoc,The length of the statement  "            doc.Settings[RavenConfiguration.GetKey(x => x.Indexing.MinNumberOfMapAttemptsAfterWhichBatchWillBeCanceledIfRunningLowOnMemory)] = int.MaxValue.ToString(); " is 155.
Long Statement,FastTests.Server.Cluster,VersionValidation,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Cluster\VersionValidation.cs,AllClusterCommandsHasVersion,The length of the statement  "                    $"Missing version in '{nameof(ClusterCommandsVersionManager)}.{nameof(ClusterCommandsVersionManager.ClusterCommandsVersions)}' for the command '{type.Name}'.")); " is 161.
Long Statement,FastTests.Server.Documents,DocumentsCrud,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentsCrud.cs,Initialize,The length of the statement  "            _disposeDatabase = CreatePersistentDocumentDatabase(NewDataPath(prefix: "DocumentsCrud")' out _documentDatabase' caller); " is 121.
Long Statement,FastTests.Server.Documents,DocumentsCrud,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentsCrud.cs,CanQueryByPrefix,The length of the statement  "                var documents = _documentDatabase.DocumentsStorage.GetDocumentsStartingWith(ctx' "users/"' null' null' null' 0' 100).ToList(); " is 126.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CheckDispose,The length of the statement  "                var ex = await Record.ExceptionAsync(() => index.Query(new IndexQueryServerSide($"FROM INDEX'{index.Name}'")' null' OperationCancelToken.None)); " is 144.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanPersist,The length of the statement  "                Assert.NotNull(await database.IndexStore.CreateIndex(new AutoMapIndexDefinition("Users"' new[] { name1 })' Guid.NewGuid().ToString())); " is 135.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanPersist,The length of the statement  "                var index2 = await database.IndexStore.CreateIndex(new AutoMapIndexDefinition("Users"' new[] { name2 })' Guid.NewGuid().ToString()); " is 132.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanPersist,The length of the statement  "                Assert.Equal(AutoFieldIndexing.Search | AutoFieldIndexing.Default' indexes[1].Definition.MapFields["Name2"].As<AutoIndexField>().Indexing); " is 139.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanResetInternal,The length of the statement  "            var path3 = Path.Combine(database.Configuration.Indexing.StoragePath.FullPath' IndexDefinitionBase.GetIndexNameSafeForFileSystem(def1.Name)); " is 141.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanResetInternal,The length of the statement  "            var path4 = Path.Combine(database.Configuration.Indexing.StoragePath.FullPath' IndexDefinitionBase.GetIndexNameSafeForFileSystem(def2.Name)); " is 141.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                var index0 = await database.IndexStore.CreateIndex(new AutoMapIndexDefinition("Users"' new[] { new AutoIndexField { Name = "Job"' Storage = FieldStorage.No } })' Guid.NewGuid().ToString()); " is 189.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                await database.ServerStore.Engine.PutAsync(new SetIndexStateCommand(index0.Name' IndexState.Idle' database.Name' Guid.NewGuid().ToString())); " is 141.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                                Server.ServerStore.NodeTag' new ClusterNodeStatusReport(new ServerReport()' new Dictionary<string' DatabaseStatusReport> " is 120.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                var index1 = await database.IndexStore.CreateIndex(new AutoMapIndexDefinition("Companies"' new[] { new AutoIndexField { Name = "Name"' Storage = FieldStorage.No } })' Guid.NewGuid().ToString()); " is 194.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                var index2 = await database.IndexStore.CreateIndex(new AutoMapIndexDefinition("Users"' new[] { new AutoIndexField { Name = "Age"' Storage = FieldStorage.No } })' Guid.NewGuid().ToString()); " is 189.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                    await index1.Query(new IndexQueryServerSide("FROM Companies")' context' OperationCancelToken.None); // last querying time " is 121.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                                Server.ServerStore.NodeTag' new ClusterNodeStatusReport(new ServerReport()' new Dictionary<string' DatabaseStatusReport> " is 120.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                    await Server.ServerStore.Observer.CleanUpUnusedAutoIndexes(state); // nothing should happen because difference between querying time between those two indexes is less than TimeToWaitBeforeMarkingAutoIndexAsIdle " is 210.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                database.Time.UtcDateTime = () => DateTime.UtcNow.Add(database.Configuration.Indexing.TimeToWaitBeforeMarkingAutoIndexAsIdle.AsTimeSpan); " is 137.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                    await index1.Query(new IndexQueryServerSide("FROM Companies")' context' OperationCancelToken.None); // last querying time " is 121.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                                Server.ServerStore.NodeTag' new ClusterNodeStatusReport(new ServerReport()' new Dictionary<string' DatabaseStatusReport> " is 120.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                    await Server.ServerStore.Observer.CleanUpUnusedAutoIndexes(state); // this will mark index2 as idle' because the difference between two indexes and index last querying time is more than TimeToWaitBeforeMarkingAutoIndexAsIdle " is 224.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                await database.ServerStore.Engine.PutAsync(new SetIndexStateCommand(index2.Name' IndexState.Idle' database.Name' Guid.NewGuid().ToString())); " is 141.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                                Server.ServerStore.NodeTag' new ClusterNodeStatusReport(new ServerReport()' new Dictionary<string' DatabaseStatusReport> " is 120.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                    await Server.ServerStore.Observer.CleanUpUnusedAutoIndexes(state); // should not remove anything' age will be greater than 2x TimeToWaitBeforeMarkingAutoIndexAsIdle but less than TimeToWaitBeforeDeletingAutoIndexMarkedAsIdle " is 224.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                await database.ServerStore.Engine.PutAsync(new SetIndexStateCommand(index1.Name' IndexState.Idle' database.Name' Guid.NewGuid().ToString())); " is 141.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                await database.ServerStore.Engine.PutAsync(new SetIndexStateCommand(index2.Name' IndexState.Idle' database.Name' Guid.NewGuid().ToString())); " is 141.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                database.Time.UtcDateTime = () => now.Add(database.Configuration.Indexing.TimeToWaitBeforeDeletingAutoIndexMarkedAsIdle.AsTimeSpan); " is 132.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The length of the statement  "                                Server.ServerStore.NodeTag' new ClusterNodeStatusReport(new ServerReport()' new Dictionary<string' DatabaseStatusReport> " is 120.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,IndexCreationOptions,The length of the statement  "                var definition1 = new AutoMapIndexDefinition("Users"' new[] { new AutoIndexField { Name = "Name"' Storage = FieldStorage.No } }); " is 129.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,IndexCreationOptions,The length of the statement  "                var definition2 = new AutoMapIndexDefinition("Users"' new[] { new AutoIndexField { Name = "Name"' Storage = FieldStorage.No } }); " is 129.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,IndexCreationOptions,The length of the statement  "                var definition3 = new AutoMapIndexDefinition("Users"' new[] { new AutoIndexField { Name = "Name"' Storage = FieldStorage.Yes } }); " is 130.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,IndexCreationOptions,The length of the statement  "                var e = await Assert.ThrowsAsync<IndexCreationException>(() => database.IndexStore.CreateIndex(definition3' Guid.NewGuid().ToString())); " is 136.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,LockMode,The length of the statement  "                var definition1 = new AutoMapIndexDefinition("Users"' new[] { new AutoIndexField { Name = "Name"' Storage = FieldStorage.No } }); " is 129.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,LockMode,The length of the statement  "                var definition2 = new AutoMapIndexDefinition("Users"' new[] { new AutoIndexField { Name = "Name"' Storage = FieldStorage.No } }); " is 129.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,IndexLoadErrorCreatesFaultyInMemoryIndexFakeAndAddsAlert,The length of the statement  "                var index = await database.IndexStore.CreateIndex(new AutoMapIndexDefinition("Users"' new[] { name1 })' Guid.NewGuid().ToString()); " is 131.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,IndexLoadErrorCreatesFaultyInMemoryIndexFakeAndAddsAlert,The length of the statement  "                    Assert.Equal(AlertType.IndexStore_IndexCouldNotBeOpened.ToString()' readAlert[nameof(AlertRaised.AlertType)].ToString()); " is 121.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanDeleteFaultyIndex,The length of the statement  "                var index = await database.IndexStore.CreateIndex(new AutoMapIndexDefinition("Users"' new[] { name1 })' Guid.NewGuid().ToString()); " is 131.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,ModifyDatabaseSettings,The length of the statement  "                var (etag' _) = await Server.ServerStore.WriteDatabaseRecordAsync(databaseName' databaseRecord' null' Guid.NewGuid().ToString()); " is 129.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUseSimpleReduction,The length of the statement  "                    var queryResult = await mri.Query(new IndexQueryServerSide($"FROM INDEX '{mri.Name}'")' context' OperationCancelToken.None); " is 124.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUseSimpleReduction,The length of the statement  "                    var queryResult = await mri.Query(new IndexQueryServerSide($"FROM INDEX '{mri.Name}' WHERE Count BETWEEN 2 AND 10")' context' " is 125.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUseSimpleReduction,The length of the statement  "                    var queryResult = await mri.Query(new IndexQueryServerSide($"FROM INDEX '{mri.Name}' WHERE Count >= 10")' context' OperationCancelToken.None); " is 142.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanDelete,The length of the statement  "                    var queryResult = await index.Query(new IndexQueryServerSide($"FROM INDEX '{index.Name}'")' context' OperationCancelToken.None); " is 128.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanDelete,The length of the statement  "                    var queryResult = await index.Query(new IndexQueryServerSide($"FROM INDEX '{index.Name}'")' context' OperationCancelToken.None); " is 128.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanDelete,The length of the statement  "                    var queryResult = await index.Query(new IndexQueryServerSide($"FROM INDEX '{index.Name}'")' context' OperationCancelToken.None); " is 128.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanDelete,The length of the statement  "                    var queryResult = await index.Query(new IndexQueryServerSide($"FROM INDEX '{index.Name}'")' context' OperationCancelToken.None); " is 128.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanDelete,The length of the statement  "                    var queryResult = await index.Query(new IndexQueryServerSide($"FROM INDEX '{index.Name}'")' context' OperationCancelToken.None); " is 128.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,DefinitionOfAutoMapReduceIndexIsPersisted,The length of the statement  "                Assert.NotNull(await database.IndexStore.CreateIndex(new AutoMapReduceIndexDefinition("Users"' new[] { count }' new[] { location })' Guid.NewGuid().ToString())); " is 161.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,DefinitionOfAutoMapReduceIndexIsPersisted,The length of the statement  "                var index = await database.IndexStore.CreateIndex(new AutoMapReduceIndexDefinition("Users"' new[] { count' sum }' new[] { location })' Guid.NewGuid().ToString()); " is 162.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,DefinitionOfAutoMapReduceIndexIsPersisted,The length of the statement  "                Assert.Equal(AutoFieldIndexing.Search | AutoFieldIndexing.Exact | AutoFieldIndexing.Default' definition.GroupByFields["Location"].Indexing); " is 140.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,DefinitionOfAutoMapReduceIndexIsPersisted,The length of the statement  "                Assert.Equal(AutoFieldIndexing.Search | AutoFieldIndexing.Exact | AutoFieldIndexing.Default' definition.GroupByFields["Location"].Indexing); " is 140.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanGroupByNestedFieldAndAggregateOnCollection,The length of the statement  "                    var queryResult = await mri.Query(new IndexQueryServerSide($"FROM INDEX '{mri.Name}' WHERE ShipTo.Country = 'Poland'")' context' OperationCancelToken.None); " is 156.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUpdateByChangingValue,The length of the statement  "                    var queryResult = await index.Query(new IndexQueryServerSide($"FROM INDEX '{index.Name}'")' context' OperationCancelToken.None); " is 128.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUpdateByChangingValue,The length of the statement  "                    var queryResult = await index.Query(new IndexQueryServerSide($"FROM INDEX '{index.Name}'")' context' OperationCancelToken.None); " is 128.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUpdateByChangingReduceKey,The length of the statement  "                    var queryResult = await index.Query(new IndexQueryServerSide($"FROM INDEX '{index.Name}'")' context' OperationCancelToken.None); " is 128.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUpdateByChangingReduceKey,The length of the statement  "                    var queryResult = await index.Query(new IndexQueryServerSide("FROM Users ORDER BY Location")' context' OperationCancelToken.None); " is 130.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,GroupByMultipleFields,The length of the statement  "                CreateOrders(db' 10' employees: new[] { "employees/1"' "employees/2" }' companies: new[] { "companies/1"' "companies/2"' "companies/3" }); " is 138.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,GroupByMultipleFields,The length of the statement  "                    var results = (await index.Query(new IndexQueryServerSide($"FROM INDEX '{index.Name}'")' context' OperationCancelToken.None)).Results; " is 134.
Long Statement,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,GroupByMultipleFields,The length of the statement  "                        var results = (await index.Query(new IndexQueryServerSide($"FROM INDEX '{index.Name}' WHERE Employee = 'employees/{employeeNumber}' AND Company = 'companies/{companyNumber}'") " is 175.
Long Statement,FastTests.Server.Documents.Indexing,BasicAnalyzers,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BasicAnalyzers.cs,CheckAnalyzers,The length of the statement  "            fields.Add("Field1"' new IndexField { Name = "Field1"' Analyzer = "StandardAnalyzer"' Indexing = FieldIndexing.Exact }); // 'NotAnalyzed' => 'KeywordAnalyzer' " is 158.
Long Statement,FastTests.Server.Documents.Indexing,BasicAnalyzers,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BasicAnalyzers.cs,CheckAnalyzers,The length of the statement  "            fields.Add("Field1"' new IndexField { Name = "Field1"' Analyzer = null' Indexing = FieldIndexing.Search }); // 'Analyzed = null' => 'StandardAnalyzer' " is 150.
Long Statement,FastTests.Server.Documents.Indexing,BasicAnalyzers,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BasicAnalyzers.cs,CheckAnalyzers,The length of the statement  "            fields.Add("Field1"' new IndexField { Name = "Field1"' Analyzer = typeof(NotForQueryingAnalyzer).AssemblyQualifiedName' Indexing = FieldIndexing.Search }); " is 155.
Long Statement,FastTests.Server.Documents.Indexing,BasicAnalyzers,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BasicAnalyzers.cs,CheckAnalyzers,The length of the statement  "            fields.Add("Field1"' new IndexField { Name = "Field1"' Analyzer = typeof(NotForQueryingAnalyzer).AssemblyQualifiedName' Indexing = FieldIndexing.Search }); " is 155.
Long Statement,FastTests.Server.Documents.Indexing,BasicAnalyzers,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BasicAnalyzers.cs,CheckAnalyzers,The length of the statement  "            fields.Add("Field1"' new IndexField { Name = "Field1"' Analyzer = typeof(NotForQueryingAnalyzer).AssemblyQualifiedName' Indexing = FieldIndexing.Search }); " is 155.
Long Statement,FastTests.Server.Documents.Indexing,BasicAnalyzers,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BasicAnalyzers.cs,CheckAnalyzers,The length of the statement  "            fields.Add("Field2"' new IndexField { Name = "Field2"' Analyzer = "KeywordAnalyzer"' Indexing = FieldIndexing.Search }); " is 120.
Long Statement,FastTests.Server.Documents.Indexing,BloomFilterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BloomFilterTests.cs,CannotMixFilters,The length of the statement  "                        Assert.Throws<InvalidOperationException>(() => collection.AddFilter(collection.CreateNewFilter(2' CollectionOfBloomFilters.Mode.X64))); " is 135.
Long Statement,FastTests.Server.Documents.Indexing,TranslatingLinqQueriesToIndexes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\TranslatingLinqQueriesToIndexes.cs,WillTranslateReferenceToIdTo__document_id,The length of the statement  "            var code = IndexDefinitionHelper.PruneToFailureLinqQueryAsStringToWorkableCode<Nestable' Nestable>(map' new DocumentConventions()' "docs"' true); " is 145.
Long Statement,FastTests.Server.Documents.Indexing,TranslatingLinqQueriesToIndexes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\TranslatingLinqQueriesToIndexes.cs,WillNotTranslateIdTo__document_idIfNotOnRootEntity,The length of the statement  "            var code = IndexDefinitionHelper.PruneToFailureLinqQueryAsStringToWorkableCode<Nestable' Nestable>(map' new DocumentConventions()' "docs"' true); " is 145.
Long Statement,FastTests.Server.Documents.Indexing,TranslatingLinqQueriesToIndexes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\TranslatingLinqQueriesToIndexes.cs,WillTranslateProperlyBothRootAndChild,The length of the statement  "            var code = IndexDefinitionHelper.PruneToFailureLinqQueryAsStringToWorkableCode<Nestable' Nestable>(map' new DocumentConventions()' "docs"' true); " is 145.
Long Statement,FastTests.Server.Documents.Indexing,TranslatingLinqQueriesToIndexes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\TranslatingLinqQueriesToIndexes.cs,WillTranslateAnonymousArray,The length of the statement  "            var code = IndexDefinitionHelper.PruneToFailureLinqQueryAsStringToWorkableCode<Nestable' Nestable>(map' new DocumentConventions()' "docs"' true); " is 145.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Returns_null_value_if_property_is_null,The length of the statement  "            Assert.Equal("users/1"' _sut.Document.GetField(Constants.Documents.Indexing.Fields.DocumentIdFieldName).StringValue(null)); " is 123.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Returns_empty_string_value_if_property_has_empty_string,The length of the statement  "            Assert.Equal("users/1"' _sut.Document.GetField(Constants.Documents.Indexing.Fields.DocumentIdFieldName).StringValue(null)); " is 123.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_string_value,The length of the statement  "            Assert.Equal("users/1"' _sut.Document.GetField(Constants.Documents.Indexing.Fields.DocumentIdFieldName).StringValue(null)); " is 123.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Reuses_cached_document_instance,The length of the statement  "            Assert.Equal("users/1"' _sut.Document.GetField(Constants.Documents.Indexing.Fields.DocumentIdFieldName).StringValue(null)); " is 123.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Reuses_cached_document_instance,The length of the statement  "            Assert.Equal("users/2"' _sut.Document.GetField(Constants.Documents.Indexing.Fields.DocumentIdFieldName).StringValue(null)); " is 123.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_numeric_fields,The length of the statement  "            Assert.Equal("users/1"' _sut.Document.GetField(Constants.Documents.Indexing.Fields.DocumentIdFieldName).StringValue(null)); " is 123.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_nested_string_value,The length of the statement  "            Assert.Equal("users/1"' _sut.Document.GetField(Constants.Documents.Indexing.Fields.DocumentIdFieldName).StringValue(null)); " is 123.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_string_value_nested_inside_collection,The length of the statement  "            Assert.Equal("users/1"' _sut.Document.GetField(Constants.Documents.Indexing.Fields.DocumentIdFieldName).StringValue(null)); " is 123.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_string_value_nested_inside_double_nested_collections,The length of the statement  "            Assert.Equal("companies/1"' _sut.Document.GetField(Constants.Documents.Indexing.Fields.DocumentIdFieldName).StringValue(null)); " is 127.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_complex_value,The length of the statement  "                Assert.Equal("true"' _sut.Document.GetField("Address" + LuceneDocumentConverterBase.ConvertToJsonSuffix).StringValue(null)); " is 124.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_complex_value,The length of the statement  "                Assert.Equal("true"' _sut.Document.GetField("ResidenceAddress" + LuceneDocumentConverterBase.ConvertToJsonSuffix).StringValue(null)); " is 133.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_complex_value,The length of the statement  "                Assert.Equal("users/1"' _sut.Document.GetField(Constants.Documents.Indexing.Fields.DocumentIdFieldName).StringValue(null)); " is 123.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_complex_value,The length of the statement  "                Assert.Equal("true"' _sut.Document.GetField("Address" + LuceneDocumentConverterBase.ConvertToJsonSuffix).StringValue(null)); " is 124.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_complex_value,The length of the statement  "                Assert.Equal("true"' _sut.Document.GetField("ResidenceAddress" + LuceneDocumentConverterBase.ConvertToJsonSuffix).StringValue(null)); " is 133.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_complex_value,The length of the statement  "                Assert.Equal("users/2"' _sut.Document.GetField(Constants.Documents.Indexing.Fields.DocumentIdFieldName).StringValue(null)); " is 123.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_array_value,The length of the statement  "            Assert.Equal("true"' _sut.Document.GetField("Friends" + LuceneDocumentConverterBase.IsArrayFieldSuffix).StringValue(null)); " is 123.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_array_value,The length of the statement  "            Assert.Equal("users/1"' _sut.Document.GetField(Constants.Documents.Indexing.Fields.DocumentIdFieldName).StringValue(null)); " is 123.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_array_having_complex_values,The length of the statement  "                Assert.Equal("true"' _sut.Document.GetField("Addresses" + LuceneDocumentConverterBase.ConvertToJsonSuffix).StringValue(null)); " is 126.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_array_having_complex_values,The length of the statement  "                Assert.Equal("true"' _sut.Document.GetField("Addresses" + LuceneDocumentConverterBase.IsArrayFieldSuffix).StringValue(null)); " is 125.
Long Statement,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_array_having_complex_values,The length of the statement  "                Assert.Equal("users/1"' _sut.Document.GetField(Constants.Documents.Indexing.Fields.DocumentIdFieldName).StringValue(null)); " is 123.
Long Statement,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,The_easiest_static_index,The length of the statement  "                        queryResult = await index.Query(new IndexQueryServerSide($"FROM '{index.Name}' WHERE Name = 'John'")' context' OperationCancelToken.None); " is 138.
Long Statement,FastTests.Server.Documents.Indexing.Static,BasicStaticMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapReduceIndexing.cs,The_simpliest_static_map_reduce_index,The length of the statement  "                        queryResult = await index.Query(new IndexQueryServerSide($"FROM INDEX '{index.Name}' WHERE Location = 'Poland'")' context' OperationCancelToken.None); " is 150.
Long Statement,FastTests.Server.Documents.Indexing.Static,BasicStaticMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapReduceIndexing.cs,CanPersist,The length of the statement  "                    Reduce = "from result in results group result by result.Location into g select new { Location = g.Key' Count = g.Sum(x => x.Count) }"' " is 134.
Long Statement,FastTests.Server.Documents.Indexing.Static,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\JavaScriptIndexTests.cs,CanUseGetMetadataMethodInJavascriptIndex,The length of the statement  "                    var ids = await s.Query<Company' JavaScriptIndexWithGetMetadataMethod>().ProjectInto<JavaScriptIndexWithGetMetadataMethod.Result>().ToListAsync(); " is 146.
Long Statement,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryDirectly,The length of the statement  "                    var users = session.Query<User' IndexReturningDictionary_MethodSyntax>().Customize(x => x.WaitForNonStaleResults()).ToList(); " is 125.
Long Statement,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryDirectly,The length of the statement  "                    users = session.Query<User' IndexReturningDictionary_MethodSyntax>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age == 32).ToList(); " is 145.
Long Statement,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryDirectly,The length of the statement  "                    users = session.Query<User' IndexReturningDictionary_QuerySyntax>().Customize(x => x.WaitForNonStaleResults()).ToList(); " is 120.
Long Statement,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryDirectly,The length of the statement  "                    users = session.Query<User' IndexReturningDictionary_QuerySyntax>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age == 32).ToList(); " is 144.
Long Statement,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanMapReduceIndexDictionaryDirectly,The length of the statement  "                    var results = session.Query<MapReduceIndexReturningDictionary_MethodSyntax.Result' MapReduceIndexReturningDictionary_MethodSyntax>().Customize(x => x.WaitForNonStaleResults()).ToList(); " is 185.
Long Statement,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanMapReduceIndexDictionaryDirectly,The length of the statement  "                    results = session.Query<MapReduceIndexReturningDictionary_MethodSyntax.Result' MapReduceIndexReturningDictionary_QuerySyntax>().Customize(x => x.WaitForNonStaleResults()).ToList(); " is 180.
Long Statement,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryWithComplexObjectsDirectly,The length of the statement  "                    people = session.Query<IndexReturningDictionaryWithComplexObjects_MethodSyntax.Result' IndexReturningDictionaryWithComplexObjects_MethodSyntax>() " is 145.
Long Statement,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryWithComplexObjectsDirectly,The length of the statement  "                    people = session.Query<IndexReturningDictionaryWithComplexObjects_MethodSyntax.Result' IndexReturningDictionaryWithComplexObjects_QuerySyntax>() " is 144.
Long Statement,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanMapReduceIndexDictionaryWithComplexObjectsDirectly,The length of the statement  "                    var results = session.Query<MapReduceIndexReturningDictionaryWithComplexObjects_MethodSyntax.Result' MapReduceIndexReturningDictionaryWithComplexObjects_MethodSyntax>() " is 168.
Long Statement,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanMapReduceIndexDictionaryWithComplexObjectsDirectly,The length of the statement  "                    results = session.Query<MapReduceIndexReturningDictionaryWithComplexObjects_MethodSyntax.Result' MapReduceIndexReturningDictionaryWithComplexObjects_MethodSyntax>() " is 164.
Long Statement,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanMapReduceIndexDictionaryWithComplexObjectsDirectly,The length of the statement  "                    results = session.Query<MapReduceIndexReturningDictionaryWithComplexObjects_MethodSyntax.Result' MapReduceIndexReturningDictionaryWithComplexObjects_QuerySyntax>() " is 163.
Long Statement,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanMapReduceIndexDictionaryWithComplexObjectsDirectly,The length of the statement  "                    results = session.Query<MapReduceIndexReturningDictionaryWithComplexObjects_MethodSyntax.Result' MapReduceIndexReturningDictionaryWithComplexObjects_QuerySyntax>() " is 163.
Long Statement,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexUsingDictionaryOutputPreceededBySelectWithAnonnymus,The length of the statement  "                    var persons = session.Query<Person' MixedSelectWithAnonymusAndDictionary>().Customize(x => x.WaitForNonStaleResults()).ToList(); " is 128.
Long Statement,FastTests.Server.Documents.Indexing.Static,MapReduceIndexReturningDictionary_QuerySyntax,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CreateIndexDefinition,The length of the statement  "                    Reduce = @"from result in results group result by result.Age into g select new Dictionary<string' object>() { {""Age""' g.Key}' {""Count""' g.Sum(x => x.Count)} }" " is 163.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.MapReduce,CreationOfAutoMapReduceIndexDefinition,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\CreationOfAutoMapReduceIndexDefinition.cs,Error_when_no_group_by_field,The length of the statement  "            var ex = Assert.Throws<QueryParser.ParseException>(() => new IndexQueryServerSide("FROM Users GROUP BY SELECT count() ")); " is 122.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.MapReduce,CreationOfAutoMapReduceIndexDefinition,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\CreationOfAutoMapReduceIndexDefinition.cs,Extends_mapping_based_on_existing_definition_if_group_by_fields_match,The length of the statement  "                new IndexQueryServerSide("FROM Users GROUP BY Location WHERE StartsWith(Location' 'A') ORDER BY Count SELECT Location' count() ")); " is 131.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.MapReduce,CreationOfAutoMapReduceIndexDefinition,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\CreationOfAutoMapReduceIndexDefinition.cs,Extends_mapping_based_on_existing_definition_if_group_by_fields_match,The length of the statement  "                "FROM Users GROUP BY Location WHERE StartsWith(Location' 'A') ORDER BY Age as long SELECT Location' count()' sum(Age) ")); " is 122.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_between_clause,The length of the statement  "                    var users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age >= 50 && x.Age <= 60).ToList(); " is 125.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_between_clause,The length of the statement  "                    users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age >= 30.1 && x.Age <= 40.0).ToList(); " is 125.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Where_clause_and_sorting,The length of the statement  "                    var usersSortedByAge = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Name == "Arek").OrderBy(x => x.Age).ToList(); " is 146.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Where_clause_and_sorting,The length of the statement  "                    var usersSortedByAge = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Name == "Arek").OrderByDescending(x => x.Age).ToList(); " is 156.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_string_field,The length of the statement  "                    orders = session.Query<Order>().Customize(x => x.WaitForNonStaleResults()).OrderByDescending(x => x.ShipTo.Country).ToList(); " is 125.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_integer_field,The length of the statement  "                    orders = session.Query<Order>().Customize(x => x.WaitForNonStaleResults()).OrderByDescending(x => x.ShipTo.ZipCode).ToList(); " is 125.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Collection_query,The length of the statement  "                    var users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Id.In("users/1"' "users/3")).ToList(); " is 128.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_query_on_dictionary,The length of the statement  "                    var items = session.Query<DictItem>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.StringDict["a"] == "b").ToList(); " is 127.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_query_on_dictionary,The length of the statement  "                    items = session.Query<DictItem>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.StringDict.Any(y => y.Key == "a")).ToList(); " is 134.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_query_on_dictionary,The length of the statement  "                    items = session.Query<DictItem>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.StringDict.Any(y => y.Value == "b" && y.Key == "b")).ToList(); " is 152.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_query_on_dictionary,The length of the statement  "                    items = session.Query<DictItem>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.StringDict.Any(y => y.Value == "c" || y.Key == "b")).ToList(); " is 152.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_query_on_dictionary,The length of the statement  "                    items = session.Query<DictItem>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.NumericDict[1] == 2).ToList(); " is 120.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_query_on_dictionary,The length of the statement  "                    items = session.Query<DictItem>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.NumericDict[1] >= 2).ToList(); " is 120.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_query_on_dictionary,The length of the statement  "                    items = session.Query<DictItem>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.StringDict["c c"] == "b").ToList(); // where StringDict.'c c' = 'b' " is 157.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,CreationOfAutoMapIndexDefinition,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\CreationOfAutoMapIndexDefinition.cs,ExtendsMappingBasedOnExistingDefinition,The length of the statement  "            _sut = DynamicQueryMapping.Create(new IndexQueryServerSide("FROM Users WHERE StartsWith(FirstName' 'a') ORDER BY Count AS long")); " is 130.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,CreationOfAutoMapIndexDefinition,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\CreationOfAutoMapIndexDefinition.cs,ExtendsMappingBasedOnExistingDefinition,The length of the statement  "            _sut = DynamicQueryMapping.Create(new IndexQueryServerSide("FROM Users WHERE StartsWith(LastName' 'A') ORDER BY Age AS double")); " is 129.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,CreationOfAutoMapIndexDefinition,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\CreationOfAutoMapIndexDefinition.cs,DefinitionExtensionWontDuplicateFields,The length of the statement  "            _sut = DynamicQueryMapping.Create(new IndexQueryServerSide("FROM Users WHERE StartsWith(FirstName' 'A') AND StartsWith(LastName' 'A') ORDER BY Age AS double' Count AS long")); " is 175.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,CreationOfAutoMapIndexDefinition,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\CreationOfAutoMapIndexDefinition.cs,DefinitionExtensionWontDuplicateFields,The length of the statement  "            _sut = DynamicQueryMapping.Create(new IndexQueryServerSide("FROM Users WHERE StartsWith(FirstName' 'A') AND AddressId = 'addresses/1' ORDER BY Age AS double' Count AS long")); " is 175.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,CreationOfAutoMapIndexDefinition,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\CreationOfAutoMapIndexDefinition.cs,ExtendsIndexingOptionsOfTheSameField,The length of the statement  "            Assert.Equal(AutoFieldIndexing.Default | AutoFieldIndexing.Search' definition.MapFields["FirstName"].As<AutoIndexField>().Indexing); " is 132.
Long Statement,FastTests.Server.Documents.Queries.Dynamic.Map,CreationOfAutoMapIndexDefinition,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\CreationOfAutoMapIndexDefinition.cs,ExtendsIndexingOptionsOfTheSameField,The length of the statement  "            Assert.Equal(AutoFieldIndexing.Default | AutoFieldIndexing.Search | AutoFieldIndexing.Exact' definition.MapFields["FirstName"].As<AutoIndexField>().Indexing); " is 158.
Long Statement,FastTests.Server.Documents.Queries,QueryingStopwordWithPrefixShouldWork,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\QueryingStopwordWithPrefixShouldWork.cs,CanQueryStopwordsWithPrefix,The length of the statement  "                    Assert.Single(session.Query<Foo>("FooByBar").Search(x => x.Bar' "And*").Customize(x => x.WaitForNonStaleResults()).ToList()); " is 125.
Long Statement,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfiguration,The length of the statement  "                using (var token = new OperationCancelToken(db.Configuration.Databases.OperationTimeout.AsTimeSpan' db.DatabaseShutdown)) " is 121.
Long Statement,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfiguration,The length of the statement  "                        NoCaching = true // we aren't changing the document only it's revisions' so we need to disable caching otherwise we will get 'Not-Modified' " is 139.
Long Statement,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfiguration,The length of the statement  "                using (var token = new OperationCancelToken(db.Configuration.Databases.OperationTimeout.AsTimeSpan' db.DatabaseShutdown)) " is 121.
Long Statement,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfigurationWithTombstones,The length of the statement  "                using (var token = new OperationCancelToken(db.Configuration.Databases.OperationTimeout.AsTimeSpan' db.DatabaseShutdown)) " is 121.
Long Statement,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfigurationWithTombstones,The length of the statement  "                using (var token = new OperationCancelToken(db.Configuration.Databases.OperationTimeout.AsTimeSpan' db.DatabaseShutdown)) " is 121.
Long Statement,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceEmptyConfigurationWillDeleteAllRevisions,The length of the statement  "                using (var token = new OperationCancelToken(db.Configuration.Databases.OperationTimeout.AsTimeSpan' db.DatabaseShutdown)) " is 121.
Long Statement,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,RemoveHasRevisionsFlag,The length of the statement  "                await RevisionsHelper.SetupRevisions(Server.ServerStore' store.Database' (config) => { config.Default.MinimumRevisionsToKeep = 0; }); " is 133.
Long Statement,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanLimitNumberOfRevisionsByAge,The length of the statement  "                await documentDatabase.RachisLogIndexNotifications.WaitForIndexNotification(index' Server.ServerStore.Engine.OperationTimeout); " is 127.
Long Statement,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,GetRevisionsBinEntries,The length of the statement  "                await RevisionsHelper.SetupRevisions(Server.ServerStore' store.Database' modifyConfiguration: configuration => configuration.Collections["Users"].PurgeOnDelete = false); " is 169.
Long Statement,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,GetRevisionsBinEntries,The length of the statement  "                    Assert.Contains(DocumentFlags.DeleteRevision.ToString()' revisionsMetadata[0].GetString(Constants.Documents.Metadata.Flags)); " is 125.
Long Statement,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,GetRevisionsBinEntries,The length of the statement  "                    Assert.Equal((DocumentFlags.HasRevisions | DocumentFlags.Revision).ToString()' revisionsMetadata[1].GetString(Constants.Documents.Metadata.Flags)); " is 147.
Long Statement,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,GetRevisionsBinEntries,The length of the statement  "                    Assert.Contains(DocumentFlags.DeleteRevision.ToString()' revisionsMetadata[2].GetString(Constants.Documents.Metadata.Flags)); " is 125.
Long Statement,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,GetRevisionsBinEntries,The length of the statement  "                    Assert.Equal((DocumentFlags.HasRevisions | DocumentFlags.Revision).ToString()' revisionsMetadata[3].GetString(Constants.Documents.Metadata.Flags)); " is 147.
Long Statement,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,DeleteRevisionsBeforeFromConsole,The length of the statement  "                await RevisionsHelper.SetupRevisions(Server.ServerStore' store.Database' modifyConfiguration: configuration => configuration.Collections["Users"].PurgeOnDelete = false); " is 169.
Long Statement,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,WaitUntilHasTombstones,The length of the statement  "                    Assert.False(true' store.Identifier + " -> Timed out while waiting for tombstones' we have " + tombstones.Count + " tombstones' but should have " + count); " is 155.
Long Statement,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,AddWatcherToReplicationTopology,The length of the statement  "            var result = await store.Maintenance.SendAsync(new PutConnectionStringOperation<RavenConnectionString>(new RavenConnectionString " is 128.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegment,The length of the statement  "            using (var context = new ByteStringContext<ByteStringDirectAllocator>(SharedMultipleUseFlag.None'ByteStringContext.MinBlockSizeInBytes)) " is 136.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegment,The length of the statement  "                context.Allocate((ByteStringContext.MinBlockSizeInBytes / 2) - sizeof(ByteStringStorage)' out var byteStringInFirstSegment); " is 124.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegment,The length of the statement  "                context.Allocate((ByteStringContext.MinBlockSizeInBytes / 2) - sizeof(ByteStringStorage)' out var byteStringWholeSegment); " is 122.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegment,The length of the statement  "                Assert.InRange((long)byteStringWholeSegment._pointer' startLocation' startLocation + ByteStringContext.MinBlockSizeInBytes); " is 124.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegment,The length of the statement  "                Assert.NotInRange((long)byteStringNextSegment._pointer' startLocation' startLocation + ByteStringContext.MinBlockSizeInBytes); " is 126.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegmentWithHistory,The length of the statement  "            using (var context = new ByteStringContext<ByteStringDirectAllocator>(SharedMultipleUseFlag.None' ByteStringContext.MinBlockSizeInBytes)) " is 137.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegmentWithHistory,The length of the statement  "            using (new ByteStringContext<ByteStringDirectAllocator>(SharedMultipleUseFlag.None' ByteStringContext.MinBlockSizeInBytes)) " is 123.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegmentWithHistory,The length of the statement  "            using (var context = new ByteStringContext<ByteStringDirectAllocator>(SharedMultipleUseFlag.None' ByteStringContext.MinBlockSizeInBytes)) " is 137.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegmentWithHistory,The length of the statement  "                context.Allocate((ByteStringContext.MinBlockSizeInBytes / 2) - sizeof(ByteStringStorage)' out var byteStringInFirstSegment); " is 124.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegmentWithHistory,The length of the statement  "                context.Allocate((ByteStringContext.MinBlockSizeInBytes / 2) - sizeof(ByteStringStorage)' out var byteStringWholeSegment); " is 122.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegmentWithHistory,The length of the statement  "                Assert.InRange((long)byteStringWholeSegment._pointer' startLocation' startLocation + ByteStringContext.MinBlockSizeInBytes); " is 124.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegmentWithHistory,The length of the statement  "                Assert.NotInRange((long)byteStringNextSegment._pointer' startLocation' startLocation + ByteStringContext.MinBlockSizeInBytes); " is 126.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionReleaseForReuseTheLeftOver,The length of the statement  "            using (var context = new ByteStringContext<ByteStringDirectAllocator>(SharedMultipleUseFlag.None' ByteStringContext.MinBlockSizeInBytes)) " is 137.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionReleaseForReuseTheLeftOver,The length of the statement  "                context.Allocate((ByteStringContext.MinBlockSizeInBytes / 2) - sizeof(ByteStringStorage)' out var byteStringInFirstSegment); " is 124.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionReleaseForReuseTheLeftOver,The length of the statement  "                context.Allocate((ByteStringContext.MinBlockSizeInBytes / 2) - sizeof(ByteStringStorage) + 1' out var byteStringInNewSegment); " is 126.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionReleaseForReuseTheLeftOver,The length of the statement  "                context.Allocate((ByteStringContext.MinBlockSizeInBytes / 2) - sizeof(ByteStringStorage)' out var byteStringInReusedSegment); " is 125.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionReleaseForReuseTheLeftOver,The length of the statement  "                Assert.NotInRange((long)byteStringInNewSegment._pointer' startLocation' startLocation + ByteStringContext.MinBlockSizeInBytes); " is 127.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionReleaseForReuseTheLeftOver,The length of the statement  "                Assert.InRange((long)byteStringInReusedSegment._pointer' startLocation' startLocation + ByteStringContext.MinBlockSizeInBytes); " is 127.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuse,The length of the statement  "            using (var context = new ByteStringContext<ByteStringDirectAllocator>(SharedMultipleUseFlag.None' ByteStringContext.MinBlockSizeInBytes)) " is 137.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuse,The length of the statement  "                Assert.NotInRange((long)byteStringNextSegment._pointer' ptrLocation' ptrLocation + ByteStringContext.MinBlockSizeInBytes); " is 122.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuseAsSegment,The length of the statement  "                // This allocation will have an allocation unit size of 128 and fit into the rest of the initial segment' which should be  " is 121.
Long Statement,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuseRepeatedly,The length of the statement  "            using (var context = new ByteStringContext<ByteStringDirectAllocator>(SharedMultipleUseFlag.None' ByteStringContext.MinBlockSizeInBytes)) " is 137.
Long Statement,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Marvin32_UseActualValues,The length of the statement  "            byte[] value = { (byte)'A'' 0' (byte)'b'' 0' (byte)'c'' 0' (byte)'d'' 0' (byte)'e'' 0' (byte)'f'' 0' (byte)'g'' 0' }; /* "Abcdefg" in UTF-16-LE */ " is 146.
Long Statement,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128,The length of the statement  "            var r1 = Hashing.Metro128.Calculate(Encoding.UTF8.GetBytes("012345678901234567890123456789012345678901234567890123456789012")' seed: 0); " is 136.
Long Statement,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Marvin32,The length of the statement  "            byte[] test = { (byte)'A'' 0' (byte)'b'' 0' (byte)'c'' 0' (byte)'d'' 0' (byte)'e'' 0' (byte)'f'' 0' (byte)'g'' 0' }; /* "Abcdefg" in UTF-16-LE */ " is 145.
Long Statement,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanProperlyReportIoMetrics,The length of the statement  "                var durationMeasurement = new IoMeterBuffer.DurationMeasurement(meterIoRate.Parent' IoMetrics.MeterType.JournalWrite' i + 1' 0' null) " is 133.
Long Statement,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The length of the statement  "            byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 }; " is 329.
Long Statement,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The length of the statement  "            byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 }; " is 329.
Long Statement,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,DoesNotLeakMemoryWhenClearing,The length of the statement  "                var allocation = context.GetMemory(Size / 2); // Since we start with half the amount we need' it will require an allocation " is 123.
Long Statement,FastTests.Utils,ExpirationHelper,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\ExpirationHelper.cs,SetupExpiration,The length of the statement  "            await documentDatabase.RachisLogIndexNotifications.WaitForIndexNotification(result.RaftCommandIndex.Value' serverStore.Engine.OperationTimeout); " is 144.
Long Statement,FastTests.Utils,RefreshHelper,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\RefreshHelper.cs,SetupExpiration,The length of the statement  "            await documentDatabase.RachisLogIndexNotifications.WaitForIndexNotification(result.RaftCommandIndex.Value' serverStore.Engine.OperationTimeout); " is 144.
Long Statement,FastTests.Utils,RevisionsHelper,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\RevisionsHelper.cs,SetupRevisions,The length of the statement  "            await documentDatabase.RachisLogIndexNotifications.WaitForIndexNotification(result.RaftCommandIndex.Value' serverStore.Engine.OperationTimeout); " is 144.
Long Statement,FastTests.Utils,RevisionsHelper,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\RevisionsHelper.cs,SetupRevisions,The length of the statement  "            await documentDatabase.RachisLogIndexNotifications.WaitForIndexNotification(index' serverStore.Engine.OperationTimeout); " is 120.
Long Statement,FastTests.Utils,RevisionsHelper,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\RevisionsHelper.cs,SetupRevisions,The length of the statement  "                var (index' _) = await serverStore.ModifyDatabaseRevisions(context' database' configurationJson' Guid.NewGuid().ToString()); " is 124.
Long Statement,FastTests.Voron.Backups,BackupToOneZipFile,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Backups\BackupToOneZipFile.cs,FullBackupToOneZipFile,The length of the statement  "                BackupMethods.Full.Restore(voronTempFileName.Combine("backup-test.backup")' voronTempFileName.Combine("backup-test.data")); " is 123.
Long Statement,FastTests.Voron.Backups,Full,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Backups\Full.cs,CanBackupAndRestoreSmall,The length of the statement  "            Env.FlushLogToDataFile(); // force writing data to the data file - this won't sync data to disk because there was another sync within last minute " is 145.
Long Statement,FastTests.Voron.Bugs,RavenDB_9153,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Bugs\RavenDB_9153.cs,Overflow_shrink_should_decrease_number_of_allocated_pages_in_scratch,The length of the statement  "                tx.LowLevelTransaction.ShrinkOverflowPage(page.PageNumber' reducedOverflowSize' new TreeMutableState(tx.LowLevelTransaction)); " is 126.
Long Statement,FastTests.Voron.Bugs,RavenDB_9153,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Bugs\RavenDB_9153.cs,Overflow_shrink_should_decrease_number_of_allocated_pages_in_scratch,The length of the statement  "                Assert.Equal(allocatedPagesCount - shrinkPages + 1 /* + 1 because free space handling allocated one page during shrink */' " is 122.
Long Statement,FastTests.Voron,LazyTransactionsRespectPageBoundaries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\LazyTransactionsRespectPageBoundaries.cs,CanSyncWhenLazyTransactionsHasBufferedMultipleTransactions,The length of the statement  "                Env.ScratchBufferPool.Free(tx.LowLevelTransaction' allocate.ScratchFileNumber' allocate.PositionInScratchBuffer' tx.LowLevelTransaction.Id); " is 140.
Long Statement,FastTests.Voron,StorageTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\StorageTest.cs,StartDatabase,The length of the statement  "            _storageEnvironment = new Lazy<StorageEnvironment>(() => new StorageEnvironment(Options)' LazyThreadSafetyMode.ExecutionAndPublication); " is 136.
Long Statement,FastTests.Voron,StorageTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\StorageTest.cs,ReadKey,The length of the statement  "            Slice.External(txh.Allocator' (byte*)node + node->KeySize + Constants.Tree.NodeHeaderSize' (ushort)node->DataSize' ByteStringType.Immutable' out var item2); " is 156.
Long Statement,FastTests.Voron.Compaction,StorageCompactionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Compaction\StorageCompactionTests.cs,CannotCompactStorageIfIncrementalBackupEnabled,The length of the statement  "                (StorageEnvironmentOptions.DirectoryStorageEnvironmentOptions)StorageEnvironmentOptions.ForPath(Path.Combine(DataDir' "Compacted")))); " is 134.
Long Statement,FastTests.Voron.Compaction,StorageCompactionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Compaction\StorageCompactionTests.cs,ShouldReportProgress,The length of the statement  "                (StorageEnvironmentOptions.DirectoryStorageEnvironmentOptions)StorageEnvironmentOptions.ForPath(Path.Combine(DataDir' "Compacted"))' " is 132.
Long Statement,FastTests.Voron.Compaction,StorageCompactionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Compaction\StorageCompactionTests.cs,ShouldReportProgress,The length of the statement  "                x => progressReport.Add($"{x.Message} ({x.TreeName} - {x.TreeProgress}/{x.TreeTotal}). Copied {x.GlobalProgress} of {x.GlobalTotal} trees.")); " is 142.
Long Statement,FastTests.Voron.Journal,UncommittedTransactions,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\UncommittedTransactions.cs,UncommittedTransactionMustNotModifyPageTranslationTableOfLogFile,The length of the statement  "                var readPage = Env.Journal.ReadPage(tx2.LowLevelTransaction'pageAllocatedInUncommittedTransaction' scratchPagerStates: null); " is 125.
Long Statement,FastTests.Voron.Tables,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Serialization.cs,SchemaDefEqual,The length of the statement  "            Assert.Equal(expected.Indexes.Keys.Count' expected.Indexes.Keys.Intersect(actual.Indexes.Keys' SliceComparer.Instance).Count()); " is 128.
Long Statement,FastTests.Voron.Tables,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Serialization.cs,SchemaDefEqual,The length of the statement  "            Assert.Equal(expected.FixedSizeIndexes.Keys.Count' expected.FixedSizeIndexes.Keys.Intersect(actual.FixedSizeIndexes.Keys' SliceComparer.Instance).Count()); " is 155.
Long Statement,FastTests.Voron.Trees,FreeSpaceTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\FreeSpaceTest.cs,ShouldReturnProperPageFromSecondSection,The length of the statement  "                Assert.Equal(FreeSpaceHandling.NumberOfPagesInSection + 1' Env.FreeSpaceHandling.TryAllocateFromFreeSpace(tx.LowLevelTransaction' 1)); " is 134.
Long Statement,FastTests.Voron.Trees,FreeSpaceTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\FreeSpaceTest.cs,FreeSpaceHandlingShouldNotReturnPagesThatAreAlreadyAllocated,The length of the statement  "            freeSpaceHandling.PageFreed += pageNumber => freedInternallyByFreeSpaceHandling.Add(pageNumber); // need to take into account pages freed by free space handling itself " is 167.
Long Statement,FastTests.Voron.Trees,FreeSpaceTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\FreeSpaceTest.cs,FreeSpaceHandlingShouldNotReturnPagesThatAreAlreadyAllocated,The length of the statement  "                    Assert.False(alreadyReused.Contains(page.Value)' "Free space handling returned a page number that has been already allocated. Page number: " + page); " is 149.
Long Statement,FastTests.Voron.Trees,FreeSpaceTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\FreeSpaceTest.cs,CanGetListOfAllFreedPages,The length of the statement  "                freedPages.ExceptWith(Env.FreeSpaceHandling.GetFreePagesOverheadPages(tx.LowLevelTransaction)); // need to take into account that some of free pages might be used for free space handling " is 186.
Complex Conditional,FastTests.Issues,RavenDB_6451,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-6451.cs,HasInvalidProperties,The conditional expression  "p.PropertyType.IsArray ||                      p.PropertyType.Namespace.StartsWith("System") ||                      p.PropertyType.GetTypeInfo().IsEnum ||                      p.PropertyType.GetTypeInfo().IsPrimitive"  is complex.
Complex Conditional,FastTests.Issues,RavenDB_6451,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-6451.cs,HasInvalidProperties,The conditional expression  "p.PropertyType.GetTypeInfo().IsPrimitive == false &&                      IsIEnumerable(p.PropertyType) == false &&                      p.PropertyType.GetTypeInfo().IsInterface == false &&                      p.PropertyType.GetTypeInfo().ContainsGenericParameters == false &&                      typeof(IEnumerable).IsAssignableFrom(p.PropertyType) == false &&                      HasInvalidProperties(p.PropertyType' visited)"  is complex.
Complex Conditional,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,GroupByMultipleFields,The conditional expression  "(employeeNumber == 1 && companyNumber == 2) || (employeeNumber == 2 && companyNumber == 3)"  is complex.
Virtual Method Call from Constructor,FastTests.Voron,StorageTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\StorageTest.cs,StorageTest,The constructor "StorageTest" calls a virtual method "Configure".
Empty Catch Block,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,RavenDB_3452_ShouldStopPullingDocsIfReleased,The method has an empty catch block.
Empty Catch Block,FastTests.Issues,RavenDB_7493,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7493.cs,Ensure_deserialization_routines_are_properly_created,The method has an empty catch block.
Empty Catch Block,FastTests.Issues,RavenDB_7493,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7493.cs,Ensure_deserialization_routines_are_properly_created,The method has an empty catch block.
Empty Catch Block,FastTests.Issues,RavenDB_8097,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-8097.cs,TcpServerUrlShouldOnlyAllowTcpScheme,The method has an empty catch block.
Empty Catch Block,FastTests.Issues,RavenDB_8097,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-8097.cs,ServerUrlShouldOnlyAllowHttpOrHttps,The method has an empty catch block.
Empty Catch Block,FastTests.Issues,RavenDB_8097,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-8097.cs,ServerUrlShouldBeValidUri,The method has an empty catch block.
Empty Catch Block,FastTests.Issues,RavenDB_10765,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10765.cs,GivenPathStartingWithIllegalKeywordShouldThrowArgumentException,The method has an empty catch block.
Empty Catch Block,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,WaitForDocumentDeletion,The method has an empty catch block.
Empty Catch Block,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_WhenEmptyAndSimultaneouslyTryPushAndTryAcquired_ShouldAcquiredLegal,The method has an empty catch block.
Empty Catch Block,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,CopyToThrowsAfterDispose,The method has an empty catch block.
Empty Catch Block,FastTests.Voron.Util,DisposingStream,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Util\StreamExtensions.cs,Dispose,The method has an empty catch block.
Magic Number,FastTests.Blittable.Benchmark,WriteToStreamBenchmark,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\Benchmark\WriteToStreamBenchmark.cs,Indexing,The following statement contains a magic number: i < 30
Magic Number,FastTests.Blittable.Benchmark,WriteToStreamBenchmark,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\Benchmark\WriteToStreamBenchmark.cs,PerformanceAnalysis,The following statement contains a magic number: GC.Collect(2);
Magic Number,FastTests.Blittable.Benchmark,WriteToStreamBenchmark,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\Benchmark\WriteToStreamBenchmark.cs,PerformanceAnalysis,The following statement contains a magic number: GC.Collect(2);
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_identical,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_identical,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_identical,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_identical,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_identical,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_identical,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_identical,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_identical,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_identical,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_identical,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_identical,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_identical,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_even_though_order_of_properties_is_different,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_even_though_order_of_properties_is_different,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_even_though_order_of_properties_is_different,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_even_though_order_of_properties_is_different,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_even_though_order_of_properties_is_different,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_even_though_order_of_properties_is_different,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Age"] = 30'                      ["Pie"] = 3.147'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                      ["Tags"] = null                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_even_though_order_of_properties_is_different,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Pie"] = 3.147'                      ["Age"] = 30'                      ["Address"] = new DynamicJsonValue()                      {                          ["ZipCode"] = 1234'                          ["City"] = "Atlanta"                      }'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Tags"] = null'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_even_though_order_of_properties_is_different,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Pie"] = 3.147'                      ["Age"] = 30'                      ["Address"] = new DynamicJsonValue()                      {                          ["ZipCode"] = 1234'                          ["City"] = "Atlanta"                      }'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Tags"] = null'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_even_though_order_of_properties_is_different,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Pie"] = 3.147'                      ["Age"] = 30'                      ["Address"] = new DynamicJsonValue()                      {                          ["ZipCode"] = 1234'                          ["City"] = "Atlanta"                      }'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Tags"] = null'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_even_though_order_of_properties_is_different,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Pie"] = 3.147'                      ["Age"] = 30'                      ["Address"] = new DynamicJsonValue()                      {                          ["ZipCode"] = 1234'                          ["City"] = "Atlanta"                      }'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Tags"] = null'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_even_though_order_of_properties_is_different,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Pie"] = 3.147'                      ["Age"] = 30'                      ["Address"] = new DynamicJsonValue()                      {                          ["ZipCode"] = 1234'                          ["City"] = "Atlanta"                      }'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Tags"] = null'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_even_though_order_of_properties_is_different,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Pie"] = 3.147'                      ["Age"] = 30'                      ["Address"] = new DynamicJsonValue()                      {                          ["ZipCode"] = 1234'                          ["City"] = "Atlanta"                      }'                      ["Numbers"] = new DynamicJsonArray()                      {                          1' 2' null' 3                      }'                      ["Tags"] = null'                      ["Friends"] = new DynamicJsonArray()                      {                          new DynamicJsonValue()                          {                              ["Name"] = "James"'                              ["ZipCode"] = 999                          }                      }'                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,GetHashCode_must_not_use_size_if_it_isnt_root,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Address"] = new DynamicJsonValue()                      {                          ["City"] = "Atlanta"'                          ["ZipCode"] = 1234                      }'                      ["Friends"] = "yes"                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,GetHashCode_must_not_use_size_if_it_isnt_root,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                        ["Address"] = new DynamicJsonValue()                      {                          ["ZipCode"] = 1234'                          ["City"] = "Atlanta"                      }'                      ["Friends"] = "no"                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_with_the_usage_of_memcmp_underneath,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Name"] = "Oren"'                      ["Age"] = 34'                      ["Dogs"] = new DynamicJsonArray()                      {                            "Arava"'                          "Oscar"'                          "Phoebe"                      }'                      ["Office"] = new DynamicJsonValue()                      {                          ["Name"] = "Hibernating Rhinos"'                          ["Street"] = "Hanasi 21"'                          ["City"] = "Hadera"'                      }                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_with_the_usage_of_memcmp_underneath,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Name"] = "Oren"'                      ["Age"] = 34'                      ["Dogs"] = new DynamicJsonArray()                      {                            "Arava"'                          "Oscar"'                          "Phoebe"                      }'                      ["Office"] = new DynamicJsonValue()                      {                          ["Name"] = "Hibernating Rhinos"'                          ["Street"] = "Hanasi 21"'                          ["City"] = "Hadera"'                      }                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_with_the_usage_of_memcmp_underneath_and_complex_nested_object,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Name"] = "Oren"'                      ["Age"] = 34'                      ["Dogs"] = new DynamicJsonArray()                      {                            "Arava"'                          "Oscar"'                          "Phoebe"                      }'                      ["Office"] = new DynamicJsonValue()                      {                          ["Name"] = new DynamicJsonValue()                          {                              ["Company"] = "Hibernating Rhinos"'                              ["Type"] = "LTD"'                          }'                          ["Street"] = "Hanasi 21"'                          ["City"] = "Hadera"'                      }                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_with_the_usage_of_memcmp_underneath_and_complex_nested_object,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Name"] = "Oren"'                      ["Age"] = 34'                      ["Dogs"] = new DynamicJsonArray()                      {                            "Arava"'                          "Oscar"'                          "Phoebe"                      }'                      ["Office"] = new DynamicJsonValue()                      {                          ["Name"] = new DynamicJsonValue()                          {                              ["Company"] = "Hibernating Rhinos"'                              ["Type"] = "LTD"'                          }'                          ["Street"] = "Hanasi 21"'                          ["City"] = "Hadera"'                      }                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Must_not_be_equal_if_nested_property_name_is_different,The following statement contains a magic number: var json1 = new DynamicJsonValue()                  {                      ["Name"] = "Oren"'                      ["Age"] = 34'                      ["Dogs"] = new DynamicJsonArray()                      {                            "Arava"'                          "Oscar"'                          "Phoebe"                      }'                      ["Office"] = new DynamicJsonValue()                      {                          ["Name"] = new DynamicJsonValue()                          {                              ["Company"] = "Hibernating Rhinos"'                              ["Type"] = "LTD"'                          }'                          ["Street"] = "Hanasi 21"'                          ["City"] = "Hadera"'                      }                  };
Magic Number,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Must_not_be_equal_if_nested_property_name_is_different,The following statement contains a magic number: var json2 = new DynamicJsonValue()                  {                      ["Name"] = "Oren"'                      ["Age"] = 34'                      ["Dogs"] = new DynamicJsonArray()                      {                            "Arava"'                          "Oscar"'                          "Phoebe"                      }'                      ["Office"] = new DynamicJsonValue()                      {                          ["Name"] = new DynamicJsonValue()                          {                              ["Company"] = "Hibernating Rhinos"'                              ["DDDD"] = "LTD"'                   // <---- property name is different here                          }'                          ["Street"] = "Hanasi 21"'                          ["City"] = "Hadera"'                      }                  };
Magic Number,FastTests.Blittable,BlittableParsing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableParsing.cs,CanParseProperly,The following statement contains a magic number: i < 3
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,InitCompany,The following statement contains a magic number: var address = new AddressClass              {                  City = city'                  Country = "3123456789"'                  Region = region'                  Line1 = "Ilnot"'                  Line2 = "21"'                  PostalCode = 12345              };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,InitCompany,The following statement contains a magic number: var employees = new Employee[10];
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,InitCompany,The following statement contains a magic number: i < 10
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Bool,The following statement contains a magic number: var blittable = new byte[16]              {                  0x02' 0x01' 0x01' 0x00' 0x07' 0x04' 0x74' 0x65' 0x6d' 0x70'                  0x00' 0x10' 0x06' 0x01' 0x0b' 0x51              };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Compressed_String,The following statement contains a magic number: var blittable = new byte[31]              {                  0x04' 0x0d' 0x1f' 0x61' 0x01' 0x00' 0xff' 0xff' 0x5f' 0x50'                  0x61' 0x61' 0x61' 0x61' 0x61' 0x00' 0x01' 0x10' 0x00' 0x06'                  0x04' 0x74' 0x65' 0x6d' 0x70' 0x00' 0x10' 0x06' 0x10' 0x1A'                  0x51              };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Float,The following statement contains a magic number: var blittable = new byte[22]              {                  0x05' 0x31' 0x2e' 0x33' 0x2e' 0x35' 0x00' 0x01' 0x07' 0x00'                  0x04' 0x04' 0x74' 0x65' 0x6d' 0x70' 0x00' 0x10' 0x06' 0x07'                  0x11' 0x51              };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Integer,The following statement contains a magic number: var blittable = new byte[26]              {                  0x80' 0x80' 0x80' 0x80' 0x80' 0x80' 0x80' 0x80' 0xd0' 0x86' 0x03'                  0x01' 0x0b' 0x00' 0x03' 0x04' 0x74' 0x65'                  0x6d' 0x70' 0x00' 0x10' 0x06' 0x0b' 0x15' 0x51              };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Long,The following statement contains a magic number: var blittable = new byte[26]              {                  0xfe' 0xff' 0xff' 0xff' 0xff' 0xff' 0xff' 0xff' 0xff' 0xff'                  0x01' 0x01' 0x0b' 0x00' 0x03' 0x04' 0x74' 0x65' 0x6d' 0x70'                  0x00' 0x10' 0x06' 0x0b' 0x15' 0x51              };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Names_Offset,The following statement contains a magic number: *(basePointer + size - 7) = 0x11;
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Names_Offset,The following statement contains a magic number: *(basePointer + size - 7) = 0x50;
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Names_Offset,The following statement contains a magic number: *(basePointer + size - 7) = 0x00;
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Names_Offset,The following statement contains a magic number: *(basePointer + size - 7) = 0x10;
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Names_Offset,The following statement contains a magic number: var listStart = size - 6;
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Names_Offset,The following statement contains a magic number: i < 2
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Null,The following statement contains a magic number: var blittable = new byte[16]              {                  0x01' 0x01' 0x01' 0x00' 0x08' 0x04' 0x74' 0x65' 0x6d' 0x70'                  0x00' 0x10' 0x06' 0x01' 0x0b' 0x51              };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Number_Of_Prop,The following statement contains a magic number: var blittable = new byte[192]              {                  0x0c' 0x46' 0x69' 0x72' 0x73' 0x74' 0x4e' 0x61' 0x6d' 0x65'                  0x20' 0x23' 0x30' 0x00' 0x0b' 0x4c' 0x61' 0x73' 0x74' 0x4e'                  0x61' 0x6d' 0x65' 0x20' 0x23' 0x30' 0x00' 0x00' 0x05' 0x55'                  0x73' 0x65' 0x72' 0x73' 0x00' 0x1d' 0x54' 0x72' 0x79' 0x6f'                  0x75' 0x74' 0x73' 0x2e' 0x50' 0x72' 0x6f' 0x67' 0x72' 0x61'                  0x6d' 0x2b' 0x55' 0x73' 0x65' 0x72' 0x2c' 0x20' 0x54' 0x72'                  0x79' 0x6f' 0x75' 0x74' 0x73' 0x00' 0x07' 0x75' 0x73' 0x65'                  0x72' 0x73' 0x2f' 0x30' 0x00' 0x03' 0x09' 0x06' 0x05' 0x28'                  0x05' 0x05' 0x2f' 0x04' 0x05' 0xFF' 0xFF' 0xFF' 0xFF' 0x0F'                  0x0a' 0x03' 0x51' 0x55' 0x00' 0x05' 0x47' 0x01' 0x05' 0x3a'                  0x02' 0x08' 0x09' 0x46' 0x69' 0x72' 0x73' 0x74' 0x4e' 0x61'                  0x6d' 0x65' 0x00' 0x08' 0x4c' 0x61' 0x73' 0x74' 0x4e' 0x61'                  0x6d' 0x65' 0x00' 0x04' 0x54' 0x61' 0x67' 0x73' 0x00' 0x09'                  0x40' 0x6d' 0x65' 0x74' 0x61' 0x64' 0x61' 0x74' 0x61' 0x00'                  0x11' 0x52' 0x61' 0x76' 0x65' 0x6e' 0x2d' 0x45' 0x6e' 0x74'                  0x69' 0x74' 0x79' 0x2d' 0x4e' 0x61' 0x6d' 0x65' 0x00' 0x0e'                  0x52' 0x61' 0x76' 0x65' 0x6e' 0x2d' 0x43' 0x6c' 0x72' 0x2d'                  0x54' 0x79' 0x70' 0x65' 0x00' 0x03' 0x40' 0x69' 0x64' 0x00'                  0x10' 0x4e' 0x43' 0x39' 0x33' 0x28' 0x15' 0x05' 0x55' 0x01'                  0xb4' 0x51              };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_String,The following statement contains a magic number: var blittable = new byte[26]              {                  0x08' 0x61' 0x62' 0x63' 0x64' 0x0a' 0x61' 0x62' 0x63' 0x01'                  0x03' 0x01' 0x0b' 0x00' 0x05' 0x04' 0x74' 0x65' 0x6d' 0x70'                  0x00' 0x10' 0x06' 0x0b' 0x15' 0x51              };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Valid_Blittable,The following statement contains a magic number: var allTokens = new AllTokensTypes                  {                      Bool = true'                      Float = 123.4567F'                      Int = 45679123'                      IntArray = new[] { 1' 2' 3 }'                      Null = null'                      Object = new Empty()'                      String = "qwertyuio"                  };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Valid_Blittable,The following statement contains a magic number: var allTokens = new AllTokensTypes                  {                      Bool = true'                      Float = 123.4567F'                      Int = 45679123'                      IntArray = new[] { 1' 2' 3 }'                      Null = null'                      Object = new Empty()'                      String = "qwertyuio"                  };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Valid_Blittable,The following statement contains a magic number: var allTokens = new AllTokensTypes                  {                      Bool = true'                      Float = 123.4567F'                      Int = 45679123'                      IntArray = new[] { 1' 2' 3 }'                      Null = null'                      Object = new Empty()'                      String = "qwertyuio"                  };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Valid_Blittable,The following statement contains a magic number: var allTokens = new AllTokensTypes                  {                      Bool = true'                      Float = 123.4567F'                      Int = 45679123'                      IntArray = new[] { 1' 2' 3 }'                      Null = null'                      Object = new Empty()'                      String = "qwertyuio"                  };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Valid_object_read_from_non_zero_offset,The following statement contains a magic number: byte[] buffer = new byte[4096];
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Valid_object_read_from_non_zero_offset,The following statement contains a magic number: var bufferOffset = 128;
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Valid_object_read_from_non_zero_offset,The following statement contains a magic number: var allTokens = new AllTokensTypes                      {                          Bool = true'                          Float = 123.4567F'                          Int = 45679123'                          IntArray = new[] { 1' 2' 3 }'                          Null = null'                          Object = new Empty()'                          String = "qwertyuio"                      };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Valid_object_read_from_non_zero_offset,The following statement contains a magic number: var allTokens = new AllTokensTypes                      {                          Bool = true'                          Float = 123.4567F'                          Int = 45679123'                          IntArray = new[] { 1' 2' 3 }'                          Null = null'                          Object = new Empty()'                          String = "qwertyuio"                      };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Valid_object_read_from_non_zero_offset,The following statement contains a magic number: var allTokens = new AllTokensTypes                      {                          Bool = true'                          Float = 123.4567F'                          Int = 45679123'                          IntArray = new[] { 1' 2' 3 }'                          Null = null'                          Object = new Empty()'                          String = "qwertyuio"                      };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Valid_object_read_from_non_zero_offset,The following statement contains a magic number: var allTokens = new AllTokensTypes                      {                          Bool = true'                          Float = 123.4567F'                          Int = 45679123'                          IntArray = new[] { 1' 2' 3 }'                          Null = null'                          Object = new Empty()'                          String = "qwertyuio"                      };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Valid_String_With_260_EscChar,The following statement contains a magic number: var temp = new Str                      {                          str = createRandomEscString(260)                      };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Valid_String_With_66K_EscChar,The following statement contains a magic number: var temp = new Str                      {                          str = createRandomEscString(66 * 1024)                      };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Valid_String_With_66K_EscChar,The following statement contains a magic number: var temp = new Str                      {                          str = createRandomEscString(66 * 1024)                      };
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Props_Offset,The following statement contains a magic number: *(basePointer + size - 2) = 0xbc;
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Props_Offset,The following statement contains a magic number: *(basePointer + size - 2) = 0x00;
Magic Number,FastTests.Blittable,BlittableValidationTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableValidationTest.cs,Invalid_Root_Metadata_Offset,The following statement contains a magic number: *(basePointer + size - 3) = 0x40;
Magic Number,FastTests.Blittable,MemoryPoolTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\MemoryPoolTests.cs,SerialAllocationAndRelease,The following statement contains a magic number: i < 1000
Magic Number,FastTests.Blittable,MemoryPoolTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\MemoryPoolTests.cs,ParallelAllocationAndReleaseSeperately,The following statement contains a magic number: Parallel.For(0' 100' RavenTestHelper.DefaultParallelOptions' x =>                  {                      for (var i = 0; i < 10; i++)                      {                          allocatedMemory.Add(pool.Allocate(i));                      }                  });
Magic Number,FastTests.Blittable,MemoryPoolTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\MemoryPoolTests.cs,ParallelAllocationAndReleaseSeperately,The following statement contains a magic number: Parallel.For(0' 100' RavenTestHelper.DefaultParallelOptions' x =>                  {                      for (var i = 0; i < 10; i++)                      {                          allocatedMemory.Add(pool.Allocate(i));                      }                  });
Magic Number,FastTests.Blittable,MemoryPoolTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\MemoryPoolTests.cs,ParallelSerialAllocationAndRelease,The following statement contains a magic number: Task.Run(() =>                  {                      for (var i = 0; i < 100; i++)                      {                          allocatedMemory.Add(pool.Allocate(i));                      }                      allocatedMemory.CompleteAdding();                  });
Magic Number,FastTests.Blittable,MemoryPoolTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\MemoryPoolTests.cs,ParallelSerialAllocationAndRelease,The following statement contains a magic number: allocatedMemory.TryTake(out tuple' 100)
Magic Number,FastTests.Blittable,MutatingJsonTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\MutatingJsonTests.cs,CanAddProperty,The following statement contains a magic number: AssertEqualAfterRoundTrip(source =>              {                  source.Modifications = new DynamicJsonValue                  {                      ["Age"] = 34                  };              }' @"{""Name"":""Oren""'""Dogs"":[""Arava""'""Oscar""'""Sunny""]'""State"":{""Sleep"":false}'""Age"":34}");
Magic Number,FastTests.Blittable,MutatingJsonTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\MutatingJsonTests.cs,CanAddNegativeIntegerProperty,The following statement contains a magic number: AssertEqualAfterRoundTrip(source =>              {                  source.Modifications = new DynamicJsonValue                  {                      ["Age"] = -34                  };              }' @"{""Name"":""Oren""'""Dogs"":[""Arava""'""Oscar""'""Sunny""]'""State"":{""Sleep"":false}'""Age"":-34}");
Magic Number,FastTests.Blittable,MutatingJsonTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\MutatingJsonTests.cs,CanCompressFields,The following statement contains a magic number: AssertEqualAfterRoundTrip(source =>              {                  source.Modifications = new DynamicJsonValue                  {                      ["Age"] = 34                  };              }'                  @"{""Name"":""there goes the man in the moon""'""Age"":34}"'                  @"{""Name"":""there goes the man in the moon""}");
Magic Number,FastTests.Blittable,MutatingJsonTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\MutatingJsonTests.cs,WillPreserveEscapes,The following statement contains a magic number: AssertEqualAfterRoundTrip(source =>              {                  source.Modifications = new DynamicJsonValue                  {                      ["Age"] = 34                  };              }' @"{""Name"":""Oren\r\n""'""Age"":34}"'                  @"{""Name"":""Oren\r\n""}");
Magic Number,FastTests.Blittable,MutatingJsonTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\MutatingJsonTests.cs,CanModifyArrayProperty,The following statement contains a magic number: AssertEqualAfterRoundTrip(source =>              {                  object result;                  source.TryGetMember("Dogs"' out result);                  var array = (BlittableJsonReaderArray)result;                  array.Modifications = new DynamicJsonArray                  {                      "Phoebe"                  };                  array.Modifications.RemoveAt(2);              }' @"{""Name"":""Oren""'""Dogs"":[""Arava""'""Oscar""'""Phoebe""]'""State"":{""Sleep"":false}}");
Magic Number,FastTests.Blittable,MutatingJsonTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\MutatingJsonTests.cs,CanRemoveAndAddProperty,The following statement contains a magic number: AssertEqualAfterRoundTrip(source =>              {                  source.Modifications = new DynamicJsonValue(source)                  {                      ["Pie"] = 3.147                  };                  source.Modifications.Remove("Dogs");              }' @"{""Name"":""Oren""'""State"":{""Sleep"":false}'""Pie"":3.147}");
Magic Number,FastTests.Blittable,ObjectJsonParsingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\ObjectJsonParsingTests.cs,CanGenerateJsonProperly,The following statement contains a magic number: AssertEqualAfterRoundTrip(new DynamicJsonValue              {                  ["Name"] = "Oren Eini"'                  ["Age"] = 34'                  ["Married"] = true'              }'                  "{\"Name\":\"Oren Eini\"'\"Age\":34'\"Married\":true}");
Magic Number,FastTests.Blittable,ObjectJsonParsingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\ObjectJsonParsingTests.cs,CanGenerateJsonProperly,The following statement contains a magic number: AssertEqualAfterRoundTrip(new DynamicJsonValue              {                  ["Name"] = "Oren Eini"'                  ["Age"] = 34'                  ["Married"] = true'                  ["Null"] = null'                  ["Pie"] = 3.14              }'                  "{\"Name\":\"Oren Eini\"'\"Age\":34'\"Married\":true'\"Null\":null'\"Pie\":3.14}");
Magic Number,FastTests.Blittable,ObjectJsonParsingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\ObjectJsonParsingTests.cs,CanGenerateJsonProperly,The following statement contains a magic number: AssertEqualAfterRoundTrip(new DynamicJsonValue              {                  ["Name"] = "Oren Eini"'                  ["Age"] = 34'                  ["Married"] = true'                  ["Null"] = null'                  ["Pie"] = 3.14              }'                  "{\"Name\":\"Oren Eini\"'\"Age\":34'\"Married\":true'\"Null\":null'\"Pie\":3.14}");
Magic Number,FastTests.Blittable,PeepingTomTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\PeepingTomTest.cs,PeepingTomStreamShouldPeepCorrectlyWithRandomValues,The following statement contains a magic number: var originalSize = random.Next(0' 128 * 1024);
Magic Number,FastTests.Blittable,PeepingTomTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\PeepingTomTest.cs,PeepingTomStreamShouldPeepCorrectlyWithRandomValues,The following statement contains a magic number: var originalSize = random.Next(0' 128 * 1024);
Magic Number,FastTests.Blittable,PeepingTomTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\PeepingTomTest.cs,PeepingTomStreamShouldPeepCorrectlyWithRandomValues,The following statement contains a magic number: var offset = chunkSizeToRead / 4;
Magic Number,FastTests.Blittable,PeepingTomTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\PeepingTomTest.cs,PeepingTomStreamTest,The following statement contains a magic number: bytes[i] = (byte)((i % 26) + 'a');
Magic Number,FastTests.Blittable,PeepingTomTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\PeepingTomTest.cs,PeepingTomStreamTest,The following statement contains a magic number: var expectedByte = (byte)(((originalSize - peepWindow.Length + i) % 26) + 'a');
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,RoundTrip,The following statement contains a magic number: var buffer = new byte[128];
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,RoundTrip,The following statement contains a magic number: var results = new byte[128];
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,CanHandleSmallBufferDecompression,The following statement contains a magic number: var buffer = new byte[128];
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,CanHandleSmallBufferDecompression,The following statement contains a magic number: var results = new byte[128];
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,CanHandleSmallBufferDecompression,The following statement contains a magic number: results[4] = 111;
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,CanHandleSmallBufferDecompression,The following statement contains a magic number: results[4] = 111;
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,CanHandleSmallBufferDecompression,The following statement contains a magic number: size = SmallStringCompression.Instance.Decompress(output' size' final' 4);
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,CanHandleSmallBufferDecompression,The following statement contains a magic number: Assert.Equal(111' results[4]);
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,CanHandleSmallBufferDecompression,The following statement contains a magic number: Assert.Equal(111' results[4]);
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,CanHandleSmallBufferCompression,The following statement contains a magic number: var buffer = new byte[128];
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,CanHandleSmallBufferCompression,The following statement contains a magic number: buffer[4] = 111;
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,CanHandleSmallBufferCompression,The following statement contains a magic number: buffer[4] = 111;
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,CanHandleSmallBufferCompression,The following statement contains a magic number: var size = SmallStringCompression.Instance.Compress(input' output' bytes.Length' 4);
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,CanHandleSmallBufferCompression,The following statement contains a magic number: Assert.Equal(111' buffer[4]);
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,CanHandleSmallBufferCompression,The following statement contains a magic number: Assert.Equal(111' buffer[4]);
Magic Number,FastTests.Blittable,SmallStringCompressionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\SmallStringCompressionTests.cs,SmallerForThoseValues,The following statement contains a magic number: var buffer = new byte[128];
Magic Number,FastTests.Blittable,UnmanagedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\UnmanagedStreamTests.cs,EnsureSingleChunk,The following statement contains a magic number: var buffer = new byte[1337];
Magic Number,FastTests.Blittable,UnmanagedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\UnmanagedStreamTests.cs,EnsureSingleChunk,The following statement contains a magic number: new Random(1337).NextBytes(buffer);
Magic Number,FastTests.Blittable,UnmanagedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\UnmanagedStreamTests.cs,EnsureSingleChunk,The following statement contains a magic number: i < 7
Magic Number,FastTests.Blittable,UnmanagedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\UnmanagedStreamTests.cs,EnsureSingleChunk,The following statement contains a magic number: buffer = new byte[buffer.Length * 7];
Magic Number,FastTests.Blittable,UnmanagedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\UnmanagedStreamTests.cs,BulkWriteAscendingSizeTest,The following statement contains a magic number: var allocatedMemoryData = ctx.GetMemory(rand.Next(1' i * 7));
Magic Number,FastTests.Blittable,UnmanagedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\UnmanagedStreamTests.cs,BulkWriteAscendingSizeTest,The following statement contains a magic number: i < 5000
Magic Number,FastTests.Blittable,UnmanagedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\UnmanagedStreamTests.cs,BigAlloc,The following statement contains a magic number: var size = 3917701;
Magic Number,FastTests.Blittable,UnmanagedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\UnmanagedStreamTests.cs,BulkWriteDescendingSizeTest,The following statement contains a magic number: var pointer = ctx.GetMemory(rand.Next(1' i * 7));
Magic Number,FastTests.Blittable,UnmanagedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\UnmanagedStreamTests.cs,SingleByteWritesTest,The following statement contains a magic number: var allocatedMemory = ctx.GetMemory(rand.Next(1' i * 7));
Magic Number,FastTests.Blittable,UnmanagedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\UnmanagedStreamTests.cs,SingleByteWritesTest,The following statement contains a magic number: i < 5000
Magic Number,FastTests.Blittable,UnmanagedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\UnmanagedStreamTests.cs,FillData,The following statement contains a magic number: *ptr = (byte)(i % 4);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ConcurrentAccessTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ConcurrentAccessTests.cs,ConcurrentWrite_WhenResetCachedPropertiesForNewDocument_ShouldThrowInformativeException,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() =>              {                    using (var context = JsonOperationContext.ShortTermSingleUse())                  using (var writer = new BlittableJsonWriter(context))                  using (var secondWriter = new BlittableJsonWriter(context))                  {                      secondWriter.WriteStartObject();                      secondWriter.WritePropertyName("Property1");                      secondWriter.WriteValue(4);                      secondWriter.WriteEndObject();                        context.CachedProperties.NewDocument();                      writer.WriteStartObject();                      writer.WritePropertyName("ObjectProp");                      writer.WriteValue(4);                      writer.WriteEndObject();                      writer.FinalizeDocument();                      var first = writer.CreateReader();                        secondWriter.FinalizeDocument();                      var second = secondWriter.CreateReader();                  }              });
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ConcurrentAccessTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ConcurrentAccessTests.cs,ConcurrentWrite_WhenResetCachedPropertiesForNewDocument_ShouldThrowInformativeException,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() =>              {                    using (var context = JsonOperationContext.ShortTermSingleUse())                  using (var writer = new BlittableJsonWriter(context))                  using (var secondWriter = new BlittableJsonWriter(context))                  {                      secondWriter.WriteStartObject();                      secondWriter.WritePropertyName("Property1");                      secondWriter.WriteValue(4);                      secondWriter.WriteEndObject();                        context.CachedProperties.NewDocument();                      writer.WriteStartObject();                      writer.WritePropertyName("ObjectProp");                      writer.WriteValue(4);                      writer.WriteEndObject();                      writer.FinalizeDocument();                      var first = writer.CreateReader();                        secondWriter.FinalizeDocument();                      var second = secondWriter.CreateReader();                  }              });
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ConcurrentAccessTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ConcurrentAccessTests.cs,AssertEmployees,The following statement contains a magic number: Parallel.ForEach(Enumerable.Range(0' 100)' RavenTestHelper.DefaultParallelOptions' x =>               {                   using (var localCtx = JsonOperationContext.ShortTermSingleUse())                   {                       AssertComplexEmployee(str' new BlittableJsonReaderObject(basePointer' size' localCtx)' localCtx);                   }               });
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,FunctionalityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\FunctionalityTests.cs,LongStringsTest,The following statement contains a magic number: var sampleObject = new              {                  SomeProperty = "text"'                  SomeNumber = 1'                  SomeArray = new[] { 1' 2' 3 }'                  SomeObject = new                  {                      SomeValue = 1'                      SomeArray = new[] { "a"' "b" }                  }'                  Value = originStr'                  AnotherNumber = 3              };
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,FunctionalityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\FunctionalityTests.cs,LongStringsTest,The following statement contains a magic number: var sampleObject = new              {                  SomeProperty = "text"'                  SomeNumber = 1'                  SomeArray = new[] { 1' 2' 3 }'                  SomeObject = new                  {                      SomeValue = 1'                      SomeArray = new[] { "a"' "b" }                  }'                  Value = originStr'                  AnotherNumber = 3              };
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,FunctionalityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\FunctionalityTests.cs,LongStringsTest,The following statement contains a magic number: var sampleObject = new              {                  SomeProperty = "text"'                  SomeNumber = 1'                  SomeArray = new[] { 1' 2' 3 }'                  SomeObject = new                  {                      SomeValue = 1'                      SomeArray = new[] { "a"' "b" }                  }'                  Value = originStr'                  AnotherNumber = 3              };
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,FunctionalityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\FunctionalityTests.cs,LongStringsTest,The following statement contains a magic number: Assert.Equal(sampleObject.SomeArray[2]' dynamicObject.SomeArray[2]);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,FunctionalityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\FunctionalityTests.cs,LongStringsTest,The following statement contains a magic number: Assert.Equal(sampleObject.SomeArray[2]' dynamicObject.SomeArray[2]);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntFlatStructure,The following statement contains a magic number: builder.WriteValue(44);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntFlatStructure,The following statement contains a magic number: builder.WriteValue(55);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntFlatStructure,The following statement contains a magic number: Assert.Equal(2' reader.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntFlatStructure,The following statement contains a magic number: Assert.Equal(44' int.Parse(volumeValue' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntFlatStructure,The following statement contains a magic number: Assert.Equal(55' int.Parse(heightValue' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntNestedStructure,The following statement contains a magic number: builder.WriteValue(44);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntNestedStructure,The following statement contains a magic number: builder.WriteValue(55);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntNestedStructure,The following statement contains a magic number: builder.WriteValue(22);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntNestedStructure,The following statement contains a magic number: builder.WriteValue(11);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntNestedStructure,The following statement contains a magic number: Assert.Equal(2' reader.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntNestedStructure,The following statement contains a magic number: Assert.Equal(44' int.Parse(data["Volume"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntNestedStructure,The following statement contains a magic number: Assert.Equal(55' int.Parse(data["Height"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntNestedStructure,The following statement contains a magic number: Assert.Equal(22' int.Parse(metadata["Ticks"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntNestedStructure,The following statement contains a magic number: Assert.Equal(11' int.Parse(metadata["Tacks"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: builder.WriteValue(44);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: builder.WriteValue(55);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: builder.WriteValue(22);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: builder.WriteValue(11);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: builder.WriteValue(78);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: builder.WriteValue(100);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: builder.WriteValue(2);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: builder.WriteValue(111);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: Assert.Equal(2' reader.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: Assert.Equal(2' data.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: Assert.Equal(44' int.Parse(data["Volume"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: Assert.Equal(55' int.Parse(data["Height"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: Assert.Equal(2' metadata.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: Assert.Equal(22' int.Parse(metadata["Ticks"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: Assert.Equal(11' int.Parse(metadata["Tacks"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: Assert.Equal(2' megaMetaData.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: Assert.Equal(2' metaObject.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: Assert.Equal(78' int.Parse(metaObject["Age"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: Assert.Equal(100' int.Parse(metaObject["Code"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: Assert.Equal(2' metaMetaData.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: Assert.Equal(2' int.Parse(metaMetaData["Tricks"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,BasicIntDeeperNestedStructure,The following statement contains a magic number: Assert.Equal(111' int.Parse(metaMetaData["Tracks"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithEmptyArray,The following statement contains a magic number: builder.WriteValue(55);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithEmptyArray,The following statement contains a magic number: Assert.Equal(2' reader.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithEmptyArray,The following statement contains a magic number: Assert.Equal(55' int.Parse(reader["Height"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithArrayOfEmptyObjects,The following statement contains a magic number: builder.WriteValue(55);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithArrayOfEmptyObjects,The following statement contains a magic number: Assert.Equal(2' reader.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithArrayOfEmptyObjects,The following statement contains a magic number: Assert.Equal(8' array.Length);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithArrayOfEmptyObjects,The following statement contains a magic number: i < 8
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithArrayOfEmptyObjects,The following statement contains a magic number: Assert.Equal(55' int.Parse(reader["Height"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithIntArrayTest,The following statement contains a magic number: builder.WriteValue(55);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithIntArrayTest,The following statement contains a magic number: Assert.Equal(2' reader.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithIntArrayTest,The following statement contains a magic number: Assert.Equal(8' array.Length);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithIntArrayTest,The following statement contains a magic number: i < 8
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithIntArrayTest,The following statement contains a magic number: Assert.Equal(55' int.Parse(reader["Height"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,ObjectWithNestedIntArrayTest,The following statement contains a magic number: j < 8
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,ObjectWithNestedIntArrayTest,The following statement contains a magic number: builder.WriteValue(55);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,ObjectWithNestedIntArrayTest,The following statement contains a magic number: Assert.Equal(2' reader.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,ObjectWithNestedIntArrayTest,The following statement contains a magic number: Assert.Equal(8' array.Length);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,ObjectWithNestedIntArrayTest,The following statement contains a magic number: j < 8
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,ObjectWithNestedIntArrayTest,The following statement contains a magic number: i < 8
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,ObjectWithNestedIntArrayTest,The following statement contains a magic number: Assert.Equal(55' int.Parse(reader["Height"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithObjectArray,The following statement contains a magic number: builder.WriteValue(55);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithObjectArray,The following statement contains a magic number: Assert.Equal(2' reader.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithObjectArray,The following statement contains a magic number: Assert.Equal(8' array.Length);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithObjectArray,The following statement contains a magic number: i < 8
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithObjectArray,The following statement contains a magic number: Assert.Equal(55' int.Parse(reader["Height"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithObjectArrayWithNestedArray,The following statement contains a magic number: j < 8
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithObjectArrayWithNestedArray,The following statement contains a magic number: builder.WriteValue(55);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithObjectArrayWithNestedArray,The following statement contains a magic number: Assert.Equal(2' reader.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithObjectArrayWithNestedArray,The following statement contains a magic number: Assert.Equal(8' array.Length);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithObjectArrayWithNestedArray,The following statement contains a magic number: j < 8
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithObjectArrayWithNestedArray,The following statement contains a magic number: i < 8
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,FlatObjectWithObjectArrayWithNestedArray,The following statement contains a magic number: Assert.Equal(55' int.Parse(reader["Height"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,SimpleArrayDocument,The following statement contains a magic number: Assert.Equal(8' reader.Length);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,SimpleArrayDocument,The following statement contains a magic number: i < 8
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,ReadDataTypesTest,The following statement contains a magic number: builder.WriteValue(1000);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,ReadDataTypesTest,The following statement contains a magic number: var lonEscapedCharsString = string.Join("'"' Enumerable.Repeat("\"Cool\""' 200).ToArray());
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,ReadDataTypesTest,The following statement contains a magic number: var longEscapedCharsAndNonAsciiString = string.Join("'"' Enumerable.Repeat("\"מגניב\""' 200).ToArray());
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,ReadDataTypesTest,The following statement contains a magic number: Assert.Equal(17' reader.Count);
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,ManualBuilderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\ManualBuilderTests.cs,ReadDataTypesTest,The following statement contains a magic number: Assert.Equal(1000' int.Parse((reader["Embedded"] as BlittableJsonReaderObject)["Value"].ToString()' CultureInfo.InvariantCulture));
Magic Number,FastTests.Blittable.BlittableJsonWriterTests,UnmanageJsonReaderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonWriterTests\UnmanageJsonReaderTests.cs,CanReadAll,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,FastTests.Client.Blittable,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Blittable\Serialization.cs,Can_Store_And_Load_Boolean_And_Nullable_Boolean,The following statement contains a magic number: session.Store(new Dummy() { EntityName = "Dumb"' LuckyNumber = 13' IsLucky = true' IsRich = true }' "dummies/1");
Magic Number,FastTests.Client.Blittable,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Blittable\Serialization.cs,Can_Store_And_Load_Boolean_And_Nullable_Boolean,The following statement contains a magic number: session.Store(new Dummy() { EntityName = "Dumb & Dumber"' LuckyNumber = 666' IsLucky = false' IsRich = null }' "dummies/2");
Magic Number,FastTests.Client,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInserts.cs,Simple_Bulk_Insert,The following statement contains a magic number: i < 1000
Magic Number,FastTests.Client,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInserts.cs,Simple_Bulk_Insert,The following statement contains a magic number: var len = session.Advanced.LoadStartingWith<FooBar>("FooBars/"' null' 0' 1000' null);
Magic Number,FastTests.Client,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInserts.cs,Simple_Bulk_Insert,The following statement contains a magic number: Assert.Equal(1000' len.Length);
Magic Number,FastTests.Client,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInserts.cs,Simple_Bulk_Insert_Should_Work,The following statement contains a magic number: await bulkInsert.StoreAsync(fooBars[2]);
Magic Number,FastTests.Client,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInserts.cs,Simple_Bulk_Insert_Should_Work,The following statement contains a magic number: await bulkInsert.StoreAsync(fooBars[3]);
Magic Number,FastTests.Client,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInserts.cs,Simple_Bulk_Insert_Should_Work,The following statement contains a magic number: Assert.Equal(4' results.Length);
Magic Number,FastTests.Client,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInserts.cs,Simple_Bulk_Insert_Should_Work,The following statement contains a magic number: var doc3 = results[2];
Magic Number,FastTests.Client,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInserts.cs,Simple_Bulk_Insert_Should_Work,The following statement contains a magic number: var doc4 = results[3];
Magic Number,FastTests.Client,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInserts.cs,Bulk_Insert_Should_Throw_On_StoreAsync_Concurrent_Calls,The following statement contains a magic number: var localList = new User[32];
Magic Number,FastTests.Client,CanParseToObjectFromBlittable,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CanParseToObjectFromBlittable.cs,Directly,The following statement contains a magic number: Assert.Equal(3' u.Dogs.Length);
Magic Number,FastTests.Client,CanParseToObjectFromBlittable,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CanParseToObjectFromBlittable.cs,Directly,The following statement contains a magic number: Assert.Equal("Phoebe"' u.Dogs[2]);
Magic Number,FastTests.Client,CanParseToObjectFromBlittable,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CanParseToObjectFromBlittable.cs,Directly,The following statement contains a magic number: Assert.Equal(34' u.Age);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations,The following statement contains a magic number: user3.Age = 3;
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations,The following statement contains a magic number: Assert.Equal(tempUser.Age' 3);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations,The following statement contains a magic number: user1.Age = 10;
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations,The following statement contains a magic number: Assert.Equal(tempUser.Age' 10);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_with_what_changed,The following statement contains a magic number: user3.Age = 3;
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_with_what_changed,The following statement contains a magic number: Assert.Equal(newSession.Advanced.WhatChanged().Count' 4);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_with_what_changed,The following statement contains a magic number: Assert.Equal(tempUser.Age' 3);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_with_what_changed,The following statement contains a magic number: user1.Age = 10;
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_with_what_changed,The following statement contains a magic number: Assert.Equal(newSession.Advanced.WhatChanged().Count' 2);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_with_what_changed,The following statement contains a magic number: Assert.Equal(tempUser.Age' 10);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Null,The following statement contains a magic number: user.Age = 3;
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: var family = new FamilyMembers()                      {                          Members = new [] {                              new member()                              {                                  Name = "Hibernating Rhinos"'                                  Age = 8                              }'                              new member()                              {                                  Name = "RavenDB"'                                  Age = 4                              }                          }                      };
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: var family = new FamilyMembers()                      {                          Members = new [] {                              new member()                              {                                  Name = "Hibernating Rhinos"'                                  Age = 8                              }'                              new member()                              {                                  Name = "RavenDB"'                                  Age = 4                              }                          }                      };
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: newFamily.Members = new[]                      {                          new member()                          {                              Name = "RavenDB"'                              Age = 4                          }'                          new member()                          {                              Name = "Hibernating Rhinos"'                              Age = 8                          }                      };
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: newFamily.Members = new[]                      {                          new member()                          {                              Name = "RavenDB"'                              Age = 4                          }'                          new member()                          {                              Name = "Hibernating Rhinos"'                              Age = 8                          }                      };
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(4 ' changes["family/1"].Length);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(8L' changes["family/1"][0].FieldOldValue);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(4L' changes["family/1"][0].FieldNewValue);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal("Name"' changes["family/1"][3].FieldName);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(DocumentsChanges.ChangeType.FieldChanged' changes["family/1"][3].Change);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal("RavenDB"' changes["family/1"][3].FieldOldValue.ToString());
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal("Hibernating Rhinos"' changes["family/1"][3].FieldNewValue.ToString());
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal("Age"' changes["family/1"][2].FieldName);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(DocumentsChanges.ChangeType.FieldChanged' changes["family/1"][2].Change);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(4L' changes["family/1"][2].FieldOldValue);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(4L' changes["family/1"][2].FieldOldValue);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(8L' changes["family/1"][2].FieldNewValue);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(8L' changes["family/1"][2].FieldNewValue);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: newFamily.Members = new[]                      {                          new member()                          {                              Name = "Toli"'                              Age = 5                          }'                          new member()                          {                              Name = "Boki"'                              Age = 15                          }                      };
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: newFamily.Members = new[]                      {                          new member()                          {                              Name = "Toli"'                              Age = 5                          }'                          new member()                          {                              Name = "Boki"'                              Age = 15                          }                      };
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(4' changes["family/1"].Length);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(8L' changes["family/1"][0].FieldOldValue);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(5L' changes["family/1"][0].FieldNewValue);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal("Name"' changes["family/1"][3].FieldName);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(DocumentsChanges.ChangeType.FieldChanged' changes["family/1"][3].Change);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal("RavenDB"' changes["family/1"][3].FieldOldValue.ToString());
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal("Boki"' changes["family/1"][3].FieldNewValue.ToString());
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal("Age"' changes["family/1"][2].FieldName);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(DocumentsChanges.ChangeType.FieldChanged' changes["family/1"][2].Change);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(4L' changes["family/1"][2].FieldOldValue);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(4L' changes["family/1"][2].FieldOldValue);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(15L' changes["family/1"][2].FieldNewValue);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_objects,The following statement contains a magic number: Assert.Equal(15L' changes["family/1"][2].FieldNewValue);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_Arrays,The following statement contains a magic number: Assert.Equal(4' change.Length);
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_Arrays,The following statement contains a magic number: Assert.Equal("c"' change[2].FieldOldValue.ToString());
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_Arrays,The following statement contains a magic number: Assert.Equal("a"' change[2].FieldNewValue.ToString());
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_Arrays,The following statement contains a magic number: Assert.Equal("d"' change[3].FieldOldValue.ToString());
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_Arrays,The following statement contains a magic number: Assert.Equal("b"' change[3].FieldNewValue.ToString());
Magic Number,FastTests.Client,CRUD,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\CRUD.cs,CRUD_Operations_With_Array_of_Arrays,The following statement contains a magic number: Assert.Equal(2' change.Length);
Magic Number,FastTests.Client,Events,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Events.cs,Before_Store_Listener,The following statement contains a magic number: store.OnBeforeStore += (object sender' BeforeStoreEventArgs e) =>                  {                      var user = e.Entity as User;                      if (user != null)                      {                          user.Count = 1000;                      }                        e.DocumentMetadata["Nice"] = "true";                  };
Magic Number,FastTests.Client,Events,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Events.cs,Before_Store_Listener,The following statement contains a magic number: Assert.Equal(user.Count' 1000);
Magic Number,FastTests.Client,Events,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Events.cs,Before_Store_Listener,The following statement contains a magic number: user.Age = 3;
Magic Number,FastTests.Client,Events,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Events.cs,Can_Load_Entity_From_Cache,The following statement contains a magic number: Assert.Equal(2' numberOfRequests);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatch,The following statement contains a magic number: var stuff = new Stuff[3];
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatch,The following statement contains a magic number: stuff[0] = new Stuff { Key = 6 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatch,The following statement contains a magic number: var user = new User { Numbers = new[] { 66 }' Stuff = stuff };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatch,The following statement contains a magic number: session.Advanced.Patch<User' int>(_docId' u => u.Numbers[0]' 31);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatch,The following statement contains a magic number: Assert.Equal(loaded.Numbers[0]' 31);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchAndModify,The following statement contains a magic number: var user = new User { Numbers = new[] { 66 } };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchAndModify,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Numbers[0]' 2);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplex,The following statement contains a magic number: var stuff = new Stuff[3];
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplex,The following statement contains a magic number: stuff[0] = new Stuff { Key = 6 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplex,The following statement contains a magic number: session.Advanced.Patch<User' object>(_docId' u => u.Stuff[1]'                          new Stuff { Key = 4' Phone = "9255864406"' Friend = new Friend() });
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplex,The following statement contains a magic number: Assert.Equal(loaded.Stuff[1].Key' 4);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplex,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Stuff[2]' new Stuff                      {                          Key = 4'                          Phone = "9255864406"'                          Pet = new Pet { Name = "Hanan"' Kind = "Dog" }'                          Friend = new Friend                          {                              Name = "Gonras"'                              Age = 28'                              Pet = new Pet { Name = "Miriam"' Kind = "Cat" }                          }'                          Dic = new Dictionary<string' string>                          {                              {"Ohio"' "Columbus"}'                              {"Utah"' "Salt Lake City"}'                              {"Texas"' "Austin"}'                              {"California"' "Sacramento"}'                          }                      });
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplex,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Stuff[2]' new Stuff                      {                          Key = 4'                          Phone = "9255864406"'                          Pet = new Pet { Name = "Hanan"' Kind = "Dog" }'                          Friend = new Friend                          {                              Name = "Gonras"'                              Age = 28'                              Pet = new Pet { Name = "Miriam"' Kind = "Cat" }                          }'                          Dic = new Dictionary<string' string>                          {                              {"Ohio"' "Columbus"}'                              {"Utah"' "Salt Lake City"}'                              {"Texas"' "Austin"}'                              {"California"' "Sacramento"}'                          }                      });
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplex,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Stuff[2]' new Stuff                      {                          Key = 4'                          Phone = "9255864406"'                          Pet = new Pet { Name = "Hanan"' Kind = "Dog" }'                          Friend = new Friend                          {                              Name = "Gonras"'                              Age = 28'                              Pet = new Pet { Name = "Miriam"' Kind = "Cat" }                          }'                          Dic = new Dictionary<string' string>                          {                              {"Ohio"' "Columbus"}'                              {"Utah"' "Salt Lake City"}'                              {"Texas"' "Austin"}'                              {"California"' "Sacramento"}'                          }                      });
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplex,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Pet.Name' "Hanan");
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplex,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Friend.Name' "Gonras");
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplex,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Friend.Pet.Name' "Miriam");
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplex,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Dic.Count' 4);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplex,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Dic.Count' 4);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplex,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Dic["Utah"]' "Salt Lake City");
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: stuff[0] = new Stuff { Key = 6 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: var user = new User { Stuff = stuff' Numbers = new[] { 1' 2 } };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: session.Advanced.Patch<User' int>(_docId' u => u.Numbers' roles => roles.Add(3));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: session.Advanced.Patch<User' Stuff>(_docId' u => u.Stuff' roles => roles.Add(new Stuff { Key = 75 }));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: Assert.Equal(loaded.Numbers[2]' 3);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: Assert.Equal(loaded.Numbers[2]' 3);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: Assert.Equal(loaded.Stuff[1].Key' 75);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Numbers' roles => roles.Add(101' 102' 103));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Numbers' roles => roles.Add(101' 102' 103));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Numbers' roles => roles.Add(101' 102' 103));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Stuff' roles => roles.Add(new Stuff { Key = 102 }' new Stuff { Phone = "123456" }));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: Assert.Equal(loaded.Numbers.Length' 6);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: Assert.Equal(loaded.Numbers[5]' 103);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: Assert.Equal(loaded.Numbers[5]' 103);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Key' 102);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Key' 102);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: Assert.Equal(loaded.Stuff[3].Phone' "123456");
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Numbers' roles => roles.Add(new[] { 201' 202' 203 }));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Numbers' roles => roles.Add(new[] { 201' 202' 203 }));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Numbers' roles => roles.Add(new[] { 201' 202' 203 }));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: Assert.Equal(loaded.Numbers.Length' 9);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: Assert.Equal(loaded.Numbers[7]' 202);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArray,The following statement contains a magic number: Assert.Equal(loaded.Numbers[7]' 202);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayUsingParamsOverload,The following statement contains a magic number: stuff[0] = new Stuff { Key = 6 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayUsingParamsOverload,The following statement contains a magic number: var user = new User { Stuff = stuff' Numbers = new[] { 1' 2 } };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayUsingParamsOverload,The following statement contains a magic number: var items = new[]                      {                          new Stuff                          {                              Key = 102                          }'                          new Stuff                          {                              Phone = "123456"                          }                      };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayUsingParamsOverload,The following statement contains a magic number: var numbers = new List<int> { 3' 4 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayUsingParamsOverload,The following statement contains a magic number: var numbers = new List<int> { 3' 4 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayUsingParamsOverload,The following statement contains a magic number: Assert.Equal(loaded.Stuff[1].Key' 102);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayUsingParamsOverload,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Phone' "123456");
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayUsingParamsOverload,The following statement contains a magic number: Assert.Equal(loaded.Numbers[2]' 3);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayUsingParamsOverload,The following statement contains a magic number: Assert.Equal(loaded.Numbers[2]' 3);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayUsingParamsOverload,The following statement contains a magic number: Assert.Equal(loaded.Numbers[3]' 4);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayUsingParamsOverload,The following statement contains a magic number: Assert.Equal(loaded.Numbers[3]' 4);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveFromArray,The following statement contains a magic number: var stuff = new Stuff[2];
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveFromArray,The following statement contains a magic number: stuff[0] = new Stuff { Key = 6 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveFromArray,The following statement contains a magic number: var user = new User { Stuff = stuff' Numbers = new[] { 1' 2' 3 } };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveFromArray,The following statement contains a magic number: var user = new User { Stuff = stuff' Numbers = new[] { 1' 2' 3 } };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveFromArray,The following statement contains a magic number: Assert.Equal(loaded.Numbers.Length' 2);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveFromArray,The following statement contains a magic number: Assert.Equal(loaded.Numbers[1]' 3);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanIncrement,The following statement contains a magic number: Stuff[] s = new Stuff[3];
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanIncrement,The following statement contains a magic number: s[0] = new Stuff { Key = 6 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanIncrement,The following statement contains a magic number: var user = new User { Numbers = new[] { 66 }' Stuff = s };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanIncrement,The following statement contains a magic number: Assert.Equal(loaded.Numbers[0]' 67);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanIncrement,The following statement contains a magic number: session.Advanced.Increment(loaded' u => u.Stuff[0].Key' -3);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanIncrement,The following statement contains a magic number: Assert.Equal(loaded.Stuff[0].Key' 3);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCalls,The following statement contains a magic number: var stuff = new Stuff[3];
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCalls,The following statement contains a magic number: stuff[0] = new Stuff { Key = 6 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCalls,The following statement contains a magic number: var user = new User { Numbers = new[] { 66 }' Stuff = stuff };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCalls,The following statement contains a magic number: var user2 = new User { Numbers = new[] { 1' 2' 3 }' Stuff = stuff };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCalls,The following statement contains a magic number: var user2 = new User { Numbers = new[] { 1' 2' 3 }' Stuff = stuff };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCalls,The following statement contains a magic number: session.Advanced.Patch<User' int>(_docId' u => u.Numbers[0]' 31);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCalls,The following statement contains a magic number: session.Advanced.Patch<User' int>(docId2' u => u.Numbers[0]' 123);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCalls,The following statement contains a magic number: Assert.Equal(2' ((InMemoryDocumentSessionOperations)session).DeferredCommandsCount);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCalls,The following statement contains a magic number: Assert.Equal(2' ((InMemoryDocumentSessionOperations)session).DeferredCommandsCount);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCalls,The following statement contains a magic number: session.Advanced.Patch<User' int>(_docId' u => u.Numbers' roles => roles.Add(77));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCalls,The following statement contains a magic number: session.Advanced.Patch<User' int>(_docId' u => u.Numbers' roles => roles.Add(88));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: var customer = new Customer              {                  Name = "Jerry"'                  Attachments = new List<AttachmentDetails>                  {                      new AttachmentDetails{ Name = "picture"' Size = 12}'                       new AttachmentDetails{ Name = "picture"' Size = 34 }'                      new AttachmentDetails{ Name = "file"' Size = 56}'                      new AttachmentDetails{ Name = "file"' Size = 78}'                      new AttachmentDetails{ Name = "file"' Size = 99}'                      new AttachmentDetails{ Name = "video" ' Size = 101}                  }              };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: var customer = new Customer              {                  Name = "Jerry"'                  Attachments = new List<AttachmentDetails>                  {                      new AttachmentDetails{ Name = "picture"' Size = 12}'                       new AttachmentDetails{ Name = "picture"' Size = 34 }'                      new AttachmentDetails{ Name = "file"' Size = 56}'                      new AttachmentDetails{ Name = "file"' Size = 78}'                      new AttachmentDetails{ Name = "file"' Size = 99}'                      new AttachmentDetails{ Name = "video" ' Size = 101}                  }              };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: var customer = new Customer              {                  Name = "Jerry"'                  Attachments = new List<AttachmentDetails>                  {                      new AttachmentDetails{ Name = "picture"' Size = 12}'                       new AttachmentDetails{ Name = "picture"' Size = 34 }'                      new AttachmentDetails{ Name = "file"' Size = 56}'                      new AttachmentDetails{ Name = "file"' Size = 78}'                      new AttachmentDetails{ Name = "file"' Size = 99}'                      new AttachmentDetails{ Name = "video" ' Size = 101}                  }              };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: var customer = new Customer              {                  Name = "Jerry"'                  Attachments = new List<AttachmentDetails>                  {                      new AttachmentDetails{ Name = "picture"' Size = 12}'                       new AttachmentDetails{ Name = "picture"' Size = 34 }'                      new AttachmentDetails{ Name = "file"' Size = 56}'                      new AttachmentDetails{ Name = "file"' Size = 78}'                      new AttachmentDetails{ Name = "file"' Size = 99}'                      new AttachmentDetails{ Name = "video" ' Size = 101}                  }              };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: var customer = new Customer              {                  Name = "Jerry"'                  Attachments = new List<AttachmentDetails>                  {                      new AttachmentDetails{ Name = "picture"' Size = 12}'                       new AttachmentDetails{ Name = "picture"' Size = 34 }'                      new AttachmentDetails{ Name = "file"' Size = 56}'                      new AttachmentDetails{ Name = "file"' Size = 78}'                      new AttachmentDetails{ Name = "file"' Size = 99}'                      new AttachmentDetails{ Name = "video" ' Size = 101}                  }              };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: var customer = new Customer              {                  Name = "Jerry"'                  Attachments = new List<AttachmentDetails>                  {                      new AttachmentDetails{ Name = "picture"' Size = 12}'                       new AttachmentDetails{ Name = "picture"' Size = 34 }'                      new AttachmentDetails{ Name = "file"' Size = 56}'                      new AttachmentDetails{ Name = "file"' Size = 78}'                      new AttachmentDetails{ Name = "file"' Size = 99}'                      new AttachmentDetails{ Name = "video" ' Size = 101}                  }              };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: Assert.Equal(3' loaded.Attachments.Count);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: Assert.Equal(12' loaded.Attachments[0].Size);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: Assert.Equal(34' loaded.Attachments[1].Size);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: Assert.Equal("video"' loaded.Attachments[2].Name);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: Assert.Equal(101' loaded.Attachments[2].Size);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: Assert.Equal(101' loaded.Attachments[2].Size);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: session.Advanced.Patch(                          loaded'                          x => x.Attachments'                          x => x.RemoveAll(y => y.Size < 30 || y.Size > 100));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: session.Advanced.Patch(                          loaded'                          x => x.Attachments'                          x => x.RemoveAll(y => y.Size < 30 || y.Size > 100));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArray,The following statement contains a magic number: Assert.Equal(34' loaded.Attachments[0].Size);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchAsync,The following statement contains a magic number: var stuff = new Stuff[3];
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchAsync,The following statement contains a magic number: stuff[0] = new Stuff { Key = 6 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchAsync,The following statement contains a magic number: var user = new User { Numbers = new[] { 66 }' Stuff = stuff };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchAsync,The following statement contains a magic number: session.Advanced.Patch<User' int>(_docId' u => u.Numbers[0]' 31);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchAsync,The following statement contains a magic number: Assert.Equal(loaded.Numbers[0]' 31);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchAndModifyAsync,The following statement contains a magic number: var user = new User { Numbers = new[] { 66 } };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchAndModifyAsync,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Numbers[0]' 2);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplexAsync,The following statement contains a magic number: var stuff = new Stuff[3];
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplexAsync,The following statement contains a magic number: stuff[0] = new Stuff { Key = 6 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplexAsync,The following statement contains a magic number: session.Advanced.Patch<User' object>(_docId' u => u.Stuff[1]'                          new Stuff { Key = 4' Phone = "9255864406"' Friend = new Friend() });
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplexAsync,The following statement contains a magic number: Assert.Equal(loaded.Stuff[1].Key' 4);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplexAsync,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Stuff[2]' new Stuff                      {                          Key = 4'                          Phone = "9255864406"'                          Pet = new Pet { Name = "Hanan"' Kind = "Dog" }'                          Friend = new Friend                          {                              Name = "Gonras"'                              Age = 28'                              Pet = new Pet { Name = "Miriam"' Kind = "Cat" }                          }'                          Dic = new Dictionary<string' string>                          {                              {"Ohio"' "Columbus"}'                              {"Utah"' "Salt Lake City"}'                              {"Texas"' "Austin"}'                              {"California"' "Sacramento"}'                          }                      });
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplexAsync,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Stuff[2]' new Stuff                      {                          Key = 4'                          Phone = "9255864406"'                          Pet = new Pet { Name = "Hanan"' Kind = "Dog" }'                          Friend = new Friend                          {                              Name = "Gonras"'                              Age = 28'                              Pet = new Pet { Name = "Miriam"' Kind = "Cat" }                          }'                          Dic = new Dictionary<string' string>                          {                              {"Ohio"' "Columbus"}'                              {"Utah"' "Salt Lake City"}'                              {"Texas"' "Austin"}'                              {"California"' "Sacramento"}'                          }                      });
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplexAsync,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Stuff[2]' new Stuff                      {                          Key = 4'                          Phone = "9255864406"'                          Pet = new Pet { Name = "Hanan"' Kind = "Dog" }'                          Friend = new Friend                          {                              Name = "Gonras"'                              Age = 28'                              Pet = new Pet { Name = "Miriam"' Kind = "Cat" }                          }'                          Dic = new Dictionary<string' string>                          {                              {"Ohio"' "Columbus"}'                              {"Utah"' "Salt Lake City"}'                              {"Texas"' "Austin"}'                              {"California"' "Sacramento"}'                          }                      });
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplexAsync,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Pet.Name' "Hanan");
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplexAsync,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Friend.Name' "Gonras");
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplexAsync,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Friend.Pet.Name' "Miriam");
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplexAsync,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Dic.Count' 4);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplexAsync,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Dic.Count' 4);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanPatchComplexAsync,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Dic["Utah"]' "Salt Lake City");
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: stuff[0] = new Stuff { Key = 6 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: var user = new User { Stuff = stuff' Numbers = new[] { 1' 2 } };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: session.Advanced.Patch<User' int>(_docId' u => u.Numbers' roles => roles.Add(3));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: session.Advanced.Patch<User' Stuff>(_docId' u => u.Stuff' roles => roles.Add(new Stuff { Key = 75 }));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: Assert.Equal(loaded.Numbers[2]' 3);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: Assert.Equal(loaded.Numbers[2]' 3);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: Assert.Equal(loaded.Stuff[1].Key' 75);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Numbers' roles => roles.Add(101' 102' 103));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Numbers' roles => roles.Add(101' 102' 103));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Numbers' roles => roles.Add(101' 102' 103));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Stuff' roles => roles.Add(new Stuff { Key = 102 }' new Stuff { Phone = "123456" }));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: Assert.Equal(loaded.Numbers.Length' 6);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: Assert.Equal(loaded.Numbers[5]' 103);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: Assert.Equal(loaded.Numbers[5]' 103);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Key' 102);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: Assert.Equal(loaded.Stuff[2].Key' 102);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: Assert.Equal(loaded.Stuff[3].Phone' "123456");
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Numbers' roles => roles.Add(new[] { 201' 202' 203 }));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Numbers' roles => roles.Add(new[] { 201' 202' 203 }));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: session.Advanced.Patch(loaded' u => u.Numbers' roles => roles.Add(new[] { 201' 202' 203 }));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: Assert.Equal(loaded.Numbers.Length' 9);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: Assert.Equal(loaded.Numbers[7]' 202);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanAddToArrayAsync,The following statement contains a magic number: Assert.Equal(loaded.Numbers[7]' 202);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveFromArrayAsync,The following statement contains a magic number: var stuff = new Stuff[2];
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveFromArrayAsync,The following statement contains a magic number: stuff[0] = new Stuff { Key = 6 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveFromArrayAsync,The following statement contains a magic number: var user = new User { Stuff = stuff' Numbers = new[] { 1' 2' 3 } };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveFromArrayAsync,The following statement contains a magic number: var user = new User { Stuff = stuff' Numbers = new[] { 1' 2' 3 } };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveFromArrayAsync,The following statement contains a magic number: Assert.Equal(loaded.Numbers.Length' 2);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveFromArrayAsync,The following statement contains a magic number: Assert.Equal(loaded.Numbers[1]' 3);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanIncrementAsync,The following statement contains a magic number: Stuff[] s = new Stuff[3];
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanIncrementAsync,The following statement contains a magic number: s[0] = new Stuff { Key = 6 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanIncrementAsync,The following statement contains a magic number: var user = new User { Numbers = new[] { 66 }' Stuff = s };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanIncrementAsync,The following statement contains a magic number: Assert.Equal(loaded.Numbers[0]' 67);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanIncrementAsync,The following statement contains a magic number: session.Advanced.Increment(loaded' u => u.Stuff[0].Key' -3);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanIncrementAsync,The following statement contains a magic number: Assert.Equal(loaded.Stuff[0].Key' 3);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCallsAsync,The following statement contains a magic number: var stuff = new Stuff[3];
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCallsAsync,The following statement contains a magic number: stuff[0] = new Stuff { Key = 6 };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCallsAsync,The following statement contains a magic number: var user = new User { Numbers = new[] { 66 }' Stuff = stuff };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCallsAsync,The following statement contains a magic number: var user2 = new User { Numbers = new[] { 1' 2' 3 }' Stuff = stuff };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCallsAsync,The following statement contains a magic number: var user2 = new User { Numbers = new[] { 1' 2' 3 }' Stuff = stuff };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCallsAsync,The following statement contains a magic number: session.Advanced.Patch<User' int>(_docId' u => u.Numbers[0]' 31);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCallsAsync,The following statement contains a magic number: session.Advanced.Patch<User' int>(docId2' u => u.Numbers[0]' 123);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCallsAsync,The following statement contains a magic number: Assert.Equal(2' ((InMemoryDocumentSessionOperations)session).DeferredCommandsCount);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCallsAsync,The following statement contains a magic number: Assert.Equal(2' ((InMemoryDocumentSessionOperations)session).DeferredCommandsCount);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCallsAsync,The following statement contains a magic number: session.Advanced.Patch<User' int>(_docId' u => u.Numbers' roles => roles.Add(77));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,ShouldMergePatchCallsAsync,The following statement contains a magic number: session.Advanced.Patch<User' int>(_docId' u => u.Numbers' roles => roles.Add(88));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: var customer = new Customer              {                  Name = "Jerry"'                  Attachments = new List<AttachmentDetails>                  {                      new AttachmentDetails{ Name = "picture"' Size = 12}'                      new AttachmentDetails{ Name = "picture"' Size = 34 }'                      new AttachmentDetails{ Name = "file"' Size = 56}'                      new AttachmentDetails{ Name = "file"' Size = 78}'                      new AttachmentDetails{ Name = "file"' Size = 99}'                      new AttachmentDetails{ Name = "video" ' Size = 101}                  }              };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: var customer = new Customer              {                  Name = "Jerry"'                  Attachments = new List<AttachmentDetails>                  {                      new AttachmentDetails{ Name = "picture"' Size = 12}'                      new AttachmentDetails{ Name = "picture"' Size = 34 }'                      new AttachmentDetails{ Name = "file"' Size = 56}'                      new AttachmentDetails{ Name = "file"' Size = 78}'                      new AttachmentDetails{ Name = "file"' Size = 99}'                      new AttachmentDetails{ Name = "video" ' Size = 101}                  }              };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: var customer = new Customer              {                  Name = "Jerry"'                  Attachments = new List<AttachmentDetails>                  {                      new AttachmentDetails{ Name = "picture"' Size = 12}'                      new AttachmentDetails{ Name = "picture"' Size = 34 }'                      new AttachmentDetails{ Name = "file"' Size = 56}'                      new AttachmentDetails{ Name = "file"' Size = 78}'                      new AttachmentDetails{ Name = "file"' Size = 99}'                      new AttachmentDetails{ Name = "video" ' Size = 101}                  }              };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: var customer = new Customer              {                  Name = "Jerry"'                  Attachments = new List<AttachmentDetails>                  {                      new AttachmentDetails{ Name = "picture"' Size = 12}'                      new AttachmentDetails{ Name = "picture"' Size = 34 }'                      new AttachmentDetails{ Name = "file"' Size = 56}'                      new AttachmentDetails{ Name = "file"' Size = 78}'                      new AttachmentDetails{ Name = "file"' Size = 99}'                      new AttachmentDetails{ Name = "video" ' Size = 101}                  }              };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: var customer = new Customer              {                  Name = "Jerry"'                  Attachments = new List<AttachmentDetails>                  {                      new AttachmentDetails{ Name = "picture"' Size = 12}'                      new AttachmentDetails{ Name = "picture"' Size = 34 }'                      new AttachmentDetails{ Name = "file"' Size = 56}'                      new AttachmentDetails{ Name = "file"' Size = 78}'                      new AttachmentDetails{ Name = "file"' Size = 99}'                      new AttachmentDetails{ Name = "video" ' Size = 101}                  }              };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: var customer = new Customer              {                  Name = "Jerry"'                  Attachments = new List<AttachmentDetails>                  {                      new AttachmentDetails{ Name = "picture"' Size = 12}'                      new AttachmentDetails{ Name = "picture"' Size = 34 }'                      new AttachmentDetails{ Name = "file"' Size = 56}'                      new AttachmentDetails{ Name = "file"' Size = 78}'                      new AttachmentDetails{ Name = "file"' Size = 99}'                      new AttachmentDetails{ Name = "video" ' Size = 101}                  }              };
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: Assert.Equal(3' loaded.Attachments.Count);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: Assert.Equal(12' loaded.Attachments[0].Size);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: Assert.Equal(34' loaded.Attachments[1].Size);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: Assert.Equal("video"' loaded.Attachments[2].Name);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: Assert.Equal(101' loaded.Attachments[2].Size);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: Assert.Equal(101' loaded.Attachments[2].Size);
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: session.Advanced.Patch(                          loaded'                          x => x.Attachments'                          x => x.RemoveAll(y => y.Size < 30 || y.Size > 100));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: session.Advanced.Patch(                          loaded'                          x => x.Attachments'                          x => x.RemoveAll(y => y.Size < 30 || y.Size > 100));
Magic Number,FastTests.Client,FirstClassPatch,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\FirstClassPatch.cs,CanRemoveAllFromArrayAsync,The following statement contains a magic number: Assert.Equal(34' loaded.Attachments[0].Size);
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,Hilo_Cannot_Go_Down,The following statement contains a magic number: var hiloDoc = new HiloDoc                      {                          Max = 32                      };
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,Hilo_Cannot_Go_Down,The following statement contains a magic number: hiloDoc.Max = 12;
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,Hilo_Cannot_Go_Down,The following statement contains a magic number: i < 128
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,HiLo_Async_MultiDb,The following statement contains a magic number: session.Store(new HiloDoc                      {                          Max = 64                      }' "Raven/Hilo/users");
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,HiLo_Async_MultiDb,The following statement contains a magic number: session.Store(new HiloDoc                      {                          Max = 128                      }' "Raven/Hilo/products");
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,Capacity_Should_Double,The following statement contains a magic number: session.Store(new HiloDoc                      {                          Max = 64                      }' "Raven/Hilo/users");
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,Capacity_Should_Double,The following statement contains a magic number: i < 32
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,Capacity_Should_Double,The following statement contains a magic number: Assert.Equal(max' 96);
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,Capacity_Should_Double,The following statement contains a magic number: Assert.Equal(max' 160);
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,Return_Unused_Range_On_Dispose,The following statement contains a magic number: session.Store(new HiloDoc                      {                          Max = 32                      }' "Raven/Hilo/users");
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,Return_Unused_Range_On_Dispose,The following statement contains a magic number: Assert.Equal(34' max);
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,Should_Resolve_Conflict_With_Highest_Number,The following statement contains a magic number: var hiloDoc = new HiloDoc                      {                          Max = 128                      };
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,Should_Resolve_Conflict_With_Highest_Number,The following statement contains a magic number: var hiloDoc2 = new HiloDoc                      {                          Max = 64                      };
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,Should_Resolve_Conflict_With_Highest_Number,The following statement contains a magic number: Assert.Equal(nextId' 129);
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,WaitForMarkerDocumentAndAllPrecedingDocumentsToReplicate,The following statement contains a magic number: Thread.Sleep(32);
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,WaitForMarkerDocumentAndAllPrecedingDocumentsToReplicate,The following statement contains a magic number: sp.Elapsed.TotalSeconds > (Debugger.IsAttached ? 60 * 1024 : 30)
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,WaitForMarkerDocumentAndAllPrecedingDocumentsToReplicate,The following statement contains a magic number: sp.Elapsed.TotalSeconds > (Debugger.IsAttached ? 60 * 1024 : 30)
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,WaitForMarkerDocumentAndAllPrecedingDocumentsToReplicate,The following statement contains a magic number: sp.Elapsed.TotalSeconds > (Debugger.IsAttached ? 60 * 1024 : 30)
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,ConcurrencyTester,The following statement contains a magic number: waitingThreadCount.Wait(5000);
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,HiLoKeyGenerator_works_without_aggressive_caching,The following statement contains a magic number: Assert.Equal(2L' hiLoKeyGenerator.NextIdAsync().GetAwaiter().GetResult());
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,HiLoKeyGenerator_async_hangs_when_aggressive_caching_enabled,The following statement contains a magic number: Assert.Equal(2L' await hiLoKeyGenerator.NextIdAsync());
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,HiLoKeyGenerator_hangs_when_aggressive_caching_enabled,The following statement contains a magic number: Assert.Equal(2L' hiLoKeyGenerator.NextIdAsync().GetAwaiter().GetResult());
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,HiLoKeyGenerator_hangs_when_aggressive_caching_enabled_on_other_documentstore,The following statement contains a magic number: Assert.Equal(2L' hilo.NextIdAsync().GetAwaiter().GetResult());
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,HiLoKeyGenerator_async_hangs_when_aggressive_caching_enabled_on_other_documentstore,The following statement contains a magic number: Assert.Equal(2L' await hilo.NextIdAsync());
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,CanReplicateHiLoTombstone,The following statement contains a magic number: var marker = WaitForDocumentToReplicate<User>(store2' "marker/doc"' 15 * 1000);
Magic Number,FastTests.Client,Hilo,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\HiLo.cs,CanReplicateHiLoTombstone,The following statement contains a magic number: var marker = WaitForDocumentToReplicate<User>(store2' "marker/doc"' 15 * 1000);
Magic Number,FastTests.Client,Includes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Includes.cs,Can_Use_Includes_Within_Multi_Load,The following statement contains a magic number: Assert.Equal(3' orders.Count);
Magic Number,FastTests.Client,Includes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Includes.cs,Can_Use_Includes_Within_Multi_Load,The following statement contains a magic number: Assert.Equal(2' customers.Count);
Magic Number,FastTests.Client,Includes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Includes.cs,Can_Query_With_Include_By_Primary_String_Property,The following statement contains a magic number: session.Store(new Order { CustomerId = "customers/1"' TotalPrice = 200D }' "orders/1234");
Magic Number,FastTests.Client,Includes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Includes.cs,Can_Query_With_Include_By_Primary_String_Property,The following statement contains a magic number: session.Store(new Order { CustomerId = "customers/2"' TotalPrice = 50D }' "orders/1235");
Magic Number,FastTests.Client,Includes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Includes.cs,Can_Query_With_Include_By_Primary_String_Property,The following statement contains a magic number: session.Store(new Order { CustomerId = "customers/3"' TotalPrice = 300D }' "orders/1236");
Magic Number,FastTests.Client,Includes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Includes.cs,Can_Query_With_Include_By_Primary_String_Property,The following statement contains a magic number: var orders = session.Query<Order>()                          .Include(x => x.CustomerId)                          .Where(x => x.TotalPrice > 100)                          .ToList();
Magic Number,FastTests.Client,Includes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Includes.cs,Can_Query_With_Include_By_Primary_String_Property,The following statement contains a magic number: Assert.Equal(2' orders.Count);
Magic Number,FastTests.Client,Includes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Includes.cs,Can_Include_By_Primary_List_Of_Strings,The following statement contains a magic number: Assert.Equal(3' order.SupplierIds.Count());
Magic Number,FastTests.Client,Includes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Includes.cs,Can_Include_By_Primary_List_Of_Strings_Using_IIncludeBuilder,The following statement contains a magic number: Assert.Equal(3' order.SupplierIds.Count());
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Documents_By_ids,The following statement contains a magic number: Assert.Equal(user.Count' 2);
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Multi_Ids_With_Null_Should_Return_Dictionary_Without_nulls,The following statement contains a magic number: Assert.Equal(users2.Count' 2);
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: session.Store(new GeekPerson { Name = "Bebop"' FavoritePrimes = new[] { 13' 43' 443' 997 }' FavoriteVeryLargePrimes = new[] { 5000000029' 5000000039 } }' "geeks/1");
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: session.Store(new GeekPerson { Name = "Bebop"' FavoritePrimes = new[] { 13' 43' 443' 997 }' FavoriteVeryLargePrimes = new[] { 5000000029' 5000000039 } }' "geeks/1");
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: session.Store(new GeekPerson { Name = "Bebop"' FavoritePrimes = new[] { 13' 43' 443' 997 }' FavoriteVeryLargePrimes = new[] { 5000000029' 5000000039 } }' "geeks/1");
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: session.Store(new GeekPerson { Name = "Bebop"' FavoritePrimes = new[] { 13' 43' 443' 997 }' FavoriteVeryLargePrimes = new[] { 5000000029' 5000000039 } }' "geeks/1");
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: session.Store(new GeekPerson { Name = "Bebop"' FavoritePrimes = new[] { 13' 43' 443' 997 }' FavoriteVeryLargePrimes = new[] { 5000000029' 5000000039 } }' "geeks/1");
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: session.Store(new GeekPerson { Name = "Bebop"' FavoritePrimes = new[] { 13' 43' 443' 997 }' FavoriteVeryLargePrimes = new[] { 5000000029' 5000000039 } }' "geeks/1");
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: session.Store(new GeekPerson { Name = "Rocksteady"' FavoritePrimes = new[] { 2' 3' 5' 7 }' FavoriteVeryLargePrimes = new[] { 999999999989 } }' "geeks/2");
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: session.Store(new GeekPerson { Name = "Rocksteady"' FavoritePrimes = new[] { 2' 3' 5' 7 }' FavoriteVeryLargePrimes = new[] { 999999999989 } }' "geeks/2");
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: session.Store(new GeekPerson { Name = "Rocksteady"' FavoritePrimes = new[] { 2' 3' 5' 7 }' FavoriteVeryLargePrimes = new[] { 999999999989 } }' "geeks/2");
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: session.Store(new GeekPerson { Name = "Rocksteady"' FavoritePrimes = new[] { 2' 3' 5' 7 }' FavoriteVeryLargePrimes = new[] { 999999999989 } }' "geeks/2");
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: session.Store(new GeekPerson { Name = "Rocksteady"' FavoritePrimes = new[] { 2' 3' 5' 7 }' FavoriteVeryLargePrimes = new[] { 999999999989 } }' "geeks/2");
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: Assert.Equal(geek1.FavoritePrimes[1]' 43);
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: Assert.Equal(geek1.FavoriteVeryLargePrimes[1]' 5000000039);
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: Assert.Equal(geek2.FavoritePrimes[3]' 7);
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: Assert.Equal(geek2.FavoritePrimes[3]' 7);
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Load_Document_With_Int_Array_And_Long_Array,The following statement contains a magic number: Assert.Equal(geek2.FavoriteVeryLargePrimes[0]' 999999999989);
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Should_Load_Many_Ids_As_Post_Request,The following statement contains a magic number: i < 200
Magic Number,FastTests.Client,Load,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Load.cs,Should_Load_Many_Ids_As_Post_Request_Directly,The following statement contains a magic number: i < 200
Magic Number,FastTests.Client,LoadAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\LoadAsync.cs,Load_Documents_By_ids_Async,The following statement contains a magic number: Assert.Equal(user.Count' 2);
Magic Number,FastTests.Client,LoadIntoStream,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\LoadIntoStream.cs,CanLoadByIdsIntoStream,The following statement contains a magic number: Assert.Equal(res.Children().Count()' 3);
Magic Number,FastTests.Client,LoadIntoStream,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\LoadIntoStream.cs,CanLoadStartingWithIntoStream,The following statement contains a magic number: Assert.Equal(res.Children().Count()' 7);
Magic Number,FastTests.Client,LoadIntoStreamAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\LoadIntoStreamAsync.cs,CanLoadByIdsIntoStreamAsync,The following statement contains a magic number: Assert.Equal(res.Children().Count()' 3);
Magic Number,FastTests.Client,LoadIntoStreamAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\LoadIntoStreamAsync.cs,CanLoadStartingWithIntoStreamAsync,The following statement contains a magic number: Assert.Equal(res.Children().Count()' 7);
Magic Number,FastTests.Client,NextAndSeedIdentities,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\NextAndSeedIdentities.cs,SeedIdentityFor,The following statement contains a magic number: var result1 = store.Maintenance.Send(new SeedIdentityForOperation("users"' 1990));
Magic Number,FastTests.Client,NextAndSeedIdentities,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\NextAndSeedIdentities.cs,SeedIdentityFor,The following statement contains a magic number: Assert.Equal(1990' result1);
Magic Number,FastTests.Client,NextAndSeedIdentities,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\NextAndSeedIdentities.cs,SeedIdentityFor,The following statement contains a magic number: var result2 = store.Maintenance.Send(new SeedIdentityForOperation("users"' 1975));
Magic Number,FastTests.Client,NextAndSeedIdentities,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\NextAndSeedIdentities.cs,SeedIdentityFor,The following statement contains a magic number: Assert.Equal(1991' result2);
Magic Number,FastTests.Client,NextAndSeedIdentities,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\NextAndSeedIdentities.cs,SeedIdentityFor,The following statement contains a magic number: var result3 = store.Maintenance.Send(new SeedIdentityForOperation("users"' 1975' forceUpdate: true));
Magic Number,FastTests.Client,NextAndSeedIdentities,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\NextAndSeedIdentities.cs,SeedIdentityFor,The following statement contains a magic number: Assert.Equal(1975' result3);
Magic Number,FastTests.Client,QueriesWithVariables,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueriesWithVariables.cs,Query_With_Simple_Constants,The following statement contains a magic number: const int age = 65;
Magic Number,FastTests.Client,QueriesWithVariables,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueriesWithVariables.cs,Query_With_Simple_Constants_IntoClass,The following statement contains a magic number: const int age = 65;
Magic Number,FastTests.Client,QueriesWithVariables,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueriesWithVariables.cs,Query_With_Variables,The following statement contains a magic number: session.Store(new User { Name = "Jerry"' LastName = "Garcia" ' FriendId = "users/2" ' Birthday = new DateTime(1942' 8' 1)}' "users/1");
Magic Number,FastTests.Client,QueriesWithVariables,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueriesWithVariables.cs,Query_With_Variables,The following statement contains a magic number: session.Store(new User { Name = "Jerry"' LastName = "Garcia" ' FriendId = "users/2" ' Birthday = new DateTime(1942' 8' 1)}' "users/1");
Magic Number,FastTests.Client,QueriesWithVariables,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueriesWithVariables.cs,Query_With_Variables_IntoClass,The following statement contains a magic number: session.Store(new User { Name = "Jerry"' LastName = "Garcia"' FriendId = "users/2"' Birthday = new DateTime(1942' 8' 1) }' "users/1");
Magic Number,FastTests.Client,QueriesWithVariables,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueriesWithVariables.cs,Query_With_Variables_IntoClass,The following statement contains a magic number: session.Store(new User { Name = "Jerry"' LastName = "Garcia"' FriendId = "users/2"' Birthday = new DateTime(1942' 8' 1) }' "users/1");
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,RawQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/1"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)1.0' Quantity = 3 }'                              new OrderLine{ PricePerUnit = (decimal)1.5' Quantity = 3 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,RawQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/1"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)1.0' Quantity = 3 }'                              new OrderLine{ PricePerUnit = (decimal)1.5' Quantity = 3 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,RawQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/1"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)1.0' Quantity = 3 }'                              new OrderLine{ PricePerUnit = (decimal)1.5' Quantity = 3 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,RawQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/1"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)1.0' Quantity = 5 }'                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,RawQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,RawQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,RawQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,RawQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,RawQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,RawQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,RawQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,RawQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,RawQuery_with_transformation_function_should_work,The following statement contains a magic number: Assert.Equal(3'rawQuery.Count);
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,LinqQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/1"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)1.0' Quantity = 3 }'                              new OrderLine{ PricePerUnit = (decimal)1.5' Quantity = 3 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,LinqQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/1"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)1.0' Quantity = 3 }'                              new OrderLine{ PricePerUnit = (decimal)1.5' Quantity = 3 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,LinqQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/1"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)1.0' Quantity = 3 }'                              new OrderLine{ PricePerUnit = (decimal)1.5' Quantity = 3 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,LinqQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/1"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)1.0' Quantity = 5 }'                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,LinqQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,LinqQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,LinqQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,LinqQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,LinqQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,LinqQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,LinqQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,LinqQuery_with_transformation_function_should_work,The following statement contains a magic number: session.Store(new Order                      {                          Company = "companies/2"'                          Lines = new List<OrderLine>                          {                              new OrderLine{ PricePerUnit = (decimal)3.0' Quantity = 6' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)8.0' Quantity = 3' Discount = (decimal)3.5}'                              new OrderLine{ PricePerUnit = (decimal)1.8' Quantity = 2 }                          }                      });
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,LinqQuery_with_transformation_function_should_work,The following statement contains a magic number: Assert.Equal(3'complexLinqQuery.Count);
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_Simple,The following statement contains a magic number: Assert.Equal(queryResult.Count' 3);
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Where_Clause,The following statement contains a magic number: Assert.Equal(queryResult.Count' 2);
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Where_Clause,The following statement contains a magic number: Assert.Equal(queryResult3.Count' 2);
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The following statement contains a magic number: newSession.Store(new Dog { Name = "Snoopy"' Breed = "Beagle"' Color = "White"' Age = 6' IsVaccinated = true }' "dogs/1");
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The following statement contains a magic number: newSession.Store(new Dog { Name = "Brian"' Breed = "Labrador"' Color = "White"' Age = 12' IsVaccinated = false }' "dogs/2");
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The following statement contains a magic number: newSession.Store(new Dog { Name = "Django"' Breed = "Jack Russel"' Color = "Black"' Age = 3' IsVaccinated = true }' "dogs/3");
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The following statement contains a magic number: newSession.Store(new Dog { Name = "Old Yeller"' Breed = "Black Mouth Cur"' Color = "White"' Age = 2' IsVaccinated = true }' "dogs/6");
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The following statement contains a magic number: newSession.Store(new Dog { Name = "Lassie"' Breed = "Collie"' Color = "Brown"' Age = 6' IsVaccinated = true }' "dogs/8");
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The following statement contains a magic number: queryResult = newSession.Query<DogsIndex.Result' DogsIndex>()                              .Customize(x => x.WaitForNonStaleResults())                              .OrderBy(x => x.Name' OrderingType.AlphaNumeric)                              .Where(x => x.Age > 2)                              .ToList();
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The following statement contains a magic number: Assert.Equal(queryResult[2].Name' "Lassie");
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_With_Customize,The following statement contains a magic number: Assert.Equal(queryResult[3].Name' "Snoopy");
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_Long_Request,The following statement contains a magic number: var longName = new string('x'' 2048);
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The following statement contains a magic number: newSession.Store(new Dog { Name = "Snoopy"' Breed = "Beagle"' Color = "White"' Age = 6' IsVaccinated = true}' "dogs/1");
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The following statement contains a magic number: newSession.Store(new Dog { Name = "Brian"' Breed = "Labrador"' Color = "White"' Age = 12' IsVaccinated = false }' "dogs/2");
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The following statement contains a magic number: newSession.Store(new Dog { Name = "Django"' Breed = "Jack Russel"' Color = "Black"' Age = 3' IsVaccinated = true }' "dogs/3");
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The following statement contains a magic number: newSession.Store(new Dog { Name = "Old Yeller"' Breed = "Black Mouth Cur"' Color = "White"' Age = 2' IsVaccinated = true }' "dogs/6");
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The following statement contains a magic number: newSession.Store(new Dog { Name = "Lassie"' Breed = "Collie"' Color = "Brown"' Age = 6' IsVaccinated = true }' "dogs/8");
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The following statement contains a magic number: var queryResult = newSession.Query<DogsIndex.Result' DogsIndex>()                          .Where(x => x.Age > 2 && x.IsVaccinated == false)                          .ToList();
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The following statement contains a magic number: var queryResult2 = newSession.Query<DogsIndex.Result' DogsIndex>()                          .Where(x => x.Age <= 2 && x.IsVaccinated == false)                          .ToList();
Magic Number,FastTests.Client,Query,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Query.cs,Query_By_Index,The following statement contains a magic number: Assert.Equal(queryResult2.Count' 3);
Magic Number,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_Simple,The following statement contains a magic number: Assert.Equal(queryResult.Count' 3);
Magic Number,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_With_Where_Clause,The following statement contains a magic number: Assert.Equal(queryResult.Count' 2);
Magic Number,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The following statement contains a magic number: await asyncSession.StoreAsync(new Dog { Name = "Snoopy"' Breed = "Beagle"' Color = "White"' Age = 6' IsVaccinated = true }' "dogs/1");
Magic Number,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The following statement contains a magic number: await asyncSession.StoreAsync(new Dog { Name = "Brian"' Breed = "Labrador"' Color = "White"' Age = 12' IsVaccinated = false }' "dogs/2");
Magic Number,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The following statement contains a magic number: await asyncSession.StoreAsync(new Dog { Name = "Django"' Breed = "Jack Russel"' Color = "Black"' Age = 3' IsVaccinated = true }' "dogs/3");
Magic Number,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The following statement contains a magic number: await asyncSession.StoreAsync(new Dog { Name = "Old Yeller"' Breed = "Black Mouth Cur"' Color = "White"' Age = 2' IsVaccinated = true }' "dogs/6");
Magic Number,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The following statement contains a magic number: await asyncSession.StoreAsync(new Dog { Name = "Lassie"' Breed = "Collie"' Color = "Brown"' Age = 6' IsVaccinated = true }' "dogs/8");
Magic Number,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The following statement contains a magic number: var queryResult = await asyncSession.Query<DogsIndex.Result' DogsIndex>()                          .Where(x => x.Age > 2 && x.IsVaccinated == false)                          .ToListAsync();
Magic Number,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The following statement contains a magic number: var queryResult2 = await asyncSession.Query<DogsIndex.Result' DogsIndex>()                          .Where(x => x.Age <= 2 && x.IsVaccinated == false)                          .ToListAsync();
Magic Number,FastTests.Client,QueryAsync,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryAsync.cs,QueryAsync_By_Index,The following statement contains a magic number: Assert.Equal(queryResult2.Count' 3);
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,DynamicQueryingDateTimeShouldWork,The following statement contains a magic number: var res = session.Query<PersonAndDate>().Where(x => x.Date.Year >= 1400).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,DynamicQueryingDateTimeShouldWork,The following statement contains a magic number: Assert.Equal(3'res.Count);
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,DynamicQueryingDateTimeShouldWork,The following statement contains a magic number: res = session.Query<PersonAndDate>().Where(x => x.Date.Day < 7).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,DynamicQueryingDateTimeShouldWork,The following statement contains a magic number: Assert.Equal(4' res.Count);
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,DynamicQueryingDateTimeShouldWork,The following statement contains a magic number: res = session.Query<PersonAndDate>().Where(x => x.Date.Month > 7 && x.Date.Month <= 11).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,DynamicQueryingDateTimeShouldWork,The following statement contains a magic number: res = session.Query<PersonAndDate>().Where(x => x.Date.Month > 7 && x.Date.Month <= 11).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,DynamicQueryingDateTimeShouldWork,The following statement contains a magic number: res = session.Query<PersonAndDate>().Where(x => x.Date.Hour >= 20 ).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,DynamicQueryingDateTimeShouldWork,The following statement contains a magic number: res = session.Query<PersonAndDate>().Where(x => x.Date.Minute <= 20).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,DynamicQueryingDateTimeShouldWork,The following statement contains a magic number: Assert.Equal(3' res.Count);
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,DynamicQueryingDateTimeShouldWork,The following statement contains a magic number: res = session.Query<PersonAndDate>().Where(x => x.Date.Second == 43).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,DynamicQueryingDateTimeShouldWork,The following statement contains a magic number: res = session.Query<PersonAndDate>().Where(x => x.Date.Ticks > 600000000000000000L).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,StaticQueryingDateTimeShouldWork,The following statement contains a magic number: var res = session.Query<PersonAndDate>(index.IndexName).Where(x => x.Date.Year >= 1400).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,StaticQueryingDateTimeShouldWork,The following statement contains a magic number: Assert.Equal(3' res.Count);
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,StaticQueryingDateTimeShouldWork,The following statement contains a magic number: res = session.Query<PersonAndDate>(index.IndexName).Where(x => x.Date.Day < 7).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,StaticQueryingDateTimeShouldWork,The following statement contains a magic number: Assert.Equal(4' res.Count);
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,StaticQueryingDateTimeShouldWork,The following statement contains a magic number: res = session.Query<PersonAndDate>(index.IndexName).Where(x => x.Date.Month > 7 && x.Date.Month <= 11).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,StaticQueryingDateTimeShouldWork,The following statement contains a magic number: res = session.Query<PersonAndDate>(index.IndexName).Where(x => x.Date.Month > 7 && x.Date.Month <= 11).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,StaticQueryingDateTimeShouldWork,The following statement contains a magic number: res = session.Query<PersonAndDate>(index.IndexName).Where(x => x.Date.Hour >= 20).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,StaticQueryingDateTimeShouldWork,The following statement contains a magic number: res = session.Query<PersonAndDate>(index.IndexName).Where(x => x.Date.Minute <= 20).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,StaticQueryingDateTimeShouldWork,The following statement contains a magic number: Assert.Equal(3' res.Count);
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,StaticQueryingDateTimeShouldWork,The following statement contains a magic number: res = session.Query<PersonAndDate>(index.IndexName).Where(x => x.Date.Second == 43).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,StaticQueryingDateTimeShouldWork,The following statement contains a magic number: res = session.Query<PersonAndDate>(index.IndexName).Where(x => x.Date.Ticks > 600000000000000000L).ToList();
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Oren"'                      Date= new DateTime(1234' 5' 6' 7' 8' 9)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Oren"'                      Date= new DateTime(1234' 5' 6' 7' 8' 9)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Oren"'                      Date= new DateTime(1234' 5' 6' 7' 8' 9)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Oren"'                      Date= new DateTime(1234' 5' 6' 7' 8' 9)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Oren"'                      Date= new DateTime(1234' 5' 6' 7' 8' 9)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Oren"'                      Date= new DateTime(1234' 5' 6' 7' 8' 9)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Tal"'                      Date = new DateTime(1400' 11' 6' 3' 23' 43)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Tal"'                      Date = new DateTime(1400' 11' 6' 3' 23' 43)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Tal"'                      Date = new DateTime(1400' 11' 6' 3' 23' 43)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Tal"'                      Date = new DateTime(1400' 11' 6' 3' 23' 43)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Tal"'                      Date = new DateTime(1400' 11' 6' 3' 23' 43)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Tal"'                      Date = new DateTime(1400' 11' 6' 3' 23' 43)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Maxim"'                      Date = new DateTime(1654' 7' 17' 11' 24' 51)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Maxim"'                      Date = new DateTime(1654' 7' 17' 11' 24' 51)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Maxim"'                      Date = new DateTime(1654' 7' 17' 11' 24' 51)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Maxim"'                      Date = new DateTime(1654' 7' 17' 11' 24' 51)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Maxim"'                      Date = new DateTime(1654' 7' 17' 11' 24' 51)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Maxim"'                      Date = new DateTime(1654' 7' 17' 11' 24' 51)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Michael"'                      Date = new DateTime(666' 12' 4' 7' 11' 45)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Michael"'                      Date = new DateTime(666' 12' 4' 7' 11' 45)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Michael"'                      Date = new DateTime(666' 12' 4' 7' 11' 45)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Michael"'                      Date = new DateTime(666' 12' 4' 7' 11' 45)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Michael"'                      Date = new DateTime(666' 12' 4' 7' 11' 45)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Michael"'                      Date = new DateTime(666' 12' 4' 7' 11' 45)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Karmel"'                      Date = new DateTime(2025' 4' 28' 23' 28' 23)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Karmel"'                      Date = new DateTime(2025' 4' 28' 23' 28' 23)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Karmel"'                      Date = new DateTime(2025' 4' 28' 23' 28' 23)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Karmel"'                      Date = new DateTime(2025' 4' 28' 23' 28' 23)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Karmel"'                      Date = new DateTime(2025' 4' 28' 23' 28' 23)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Karmel"'                      Date = new DateTime(2025' 4' 28' 23' 28' 23)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Grisha"'                      Date = new DateTime(11' 2' 17' 19' 23' 31)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Grisha"'                      Date = new DateTime(11' 2' 17' 19' 23' 31)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Grisha"'                      Date = new DateTime(11' 2' 17' 19' 23' 31)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Grisha"'                      Date = new DateTime(11' 2' 17' 19' 23' 31)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Grisha"'                      Date = new DateTime(11' 2' 17' 19' 23' 31)                  });
Magic Number,FastTests.Client,QueryDateTime,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryDateTime.cs,SetupStoreAndPushSomeEntities,The following statement contains a magic number: session.Store(new PersonAndDate                  {                      Name = "Grisha"'                      Date = new DateTime(11' 2' 17' 19' 23' 31)                  });
Magic Number,FastTests.Client,QueryIntoStream,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryIntoStream.cs,QueryWithToStream,The following statement contains a magic number: Assert.Equal(res.Children().Count()' 3);
Magic Number,FastTests.Client,QueryIntoStream,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryIntoStream.cs,DocumentQueryWithToStream,The following statement contains a magic number: Assert.Equal(res.Children().Count()' 3);
Magic Number,FastTests.Client,QueryIntoStream,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryIntoStream.cs,QueryWithToStreamAsync,The following statement contains a magic number: Assert.Equal(res.Children().Count()' 3);
Magic Number,FastTests.Client,QueryIntoStream,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\QueryIntoStream.cs,DocumentQueryWithToStreamAsync,The following statement contains a magic number: Assert.Equal(res.Children().Count()' 3);
Magic Number,FastTests.Client,Store,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Store.cs,Store_Documents,The following statement contains a magic number: Assert.Equal(user.Count' 2);
Magic Number,FastTests.Client,Store,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Store.cs,Refresh_stored_document,The following statement contains a magic number: loadedUser.Age = 10;
Magic Number,FastTests.Client,Update,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Update.cs,Update_Document,The following statement contains a magic number: user.Age = 2;
Magic Number,FastTests.Client,Update,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Update.cs,Update_Document,The following statement contains a magic number: Assert.Equal(newUser.Age' 2);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,What_Changed_New_Field,The following statement contains a magic number: user.Age = 5;
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,What_Changed_Removed_Field,The following statement contains a magic number: newSession.Store(new NameAndAge()                      {                          Name = "Toli"'                          Age = 5                      }                      ' "users/1");
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,What_Changed_Change_Field,The following statement contains a magic number: newSession.Store(new BasicAge()                      {                          Age = 5                      }                      ' "users/1");
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,What_Changed_Change_Field,The following statement contains a magic number: Assert.Equal(changes["users/1"].Length' 2);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,What_Changed_Array_Value_Changed,The following statement contains a magic number: arr.Array = new[] {(dynamic)"a"' 2' "c"};
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,What_Changed_Array_Value_Changed,The following statement contains a magic number: Assert.Equal(2' changes["users/1"].Length);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,What_Changed_Array_Value_Changed,The following statement contains a magic number: Assert.Equal(2L' changes["users/1"][0].FieldNewValue);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,What_Changed_Array_Value_Added,The following statement contains a magic number: arr.Array = new[] {(dynamic)"a"' 1' "b"' "c"' 2};
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,What_Changed_Array_Value_Added,The following statement contains a magic number: Assert.Equal(2' changes["arr/1"].Length);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,What_Changed_Array_Value_Added,The following statement contains a magic number: Assert.Equal(2L' changes["arr/1"][1].FieldNewValue);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,What_Changed_Array_Value_Removed,The following statement contains a magic number: Assert.Equal(2' changes["arr/1"].Length);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,RavenDB_8169,The following statement contains a magic number: newSession.Store(new Double                      {                          Number = 2.0                      }' "num/2");
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,WhatChanged_should_be_idempotent_operation,The following statement contains a magic number: Assert.Equal(3' session.Advanced.WhatChanged().Count);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,WhatChanged_should_be_idempotent_operation,The following statement contains a magic number: user1.Age = 10;
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,WhatChanged_should_be_idempotent_operation,The following statement contains a magic number: Assert.Equal(2' session.Advanced.WhatChanged().Count);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,WhatChanged_should_be_idempotent_operation,The following statement contains a magic number: Assert.Equal(2' session.Advanced.WhatChanged().Count);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,RemovingAndAddingSameAmountOfFieldsToObjectShouldWork,The following statement contains a magic number: Assert.True(changes[docID].Length == 5);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,RemovingAndAddingSameAmountOfFieldsToObjectShouldWork,The following statement contains a magic number: Assert.True(changes[docID][3].Change == DocumentsChanges.ChangeType.ArrayValueChanged);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,RemovingAndAddingSameAmountOfFieldsToObjectShouldWork,The following statement contains a magic number: Assert.True(changes[docID][3].FieldName == "Test-A");
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,RemovingAndAddingSameAmountOfFieldsToObjectShouldWork,The following statement contains a magic number: Assert.True(changes[docID][4].Change == DocumentsChanges.ChangeType.ArrayValueChanged);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,RemovingAndAddingSameAmountOfFieldsToObjectShouldWork,The following statement contains a magic number: Assert.True(changes[docID][4].FieldName == "Test-A");
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,RemovingAndAddingSameAmountOfFieldsToObjectShouldWork,The following statement contains a magic number: Assert.True(changes[docID].Length == 7);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,RemovingAndAddingSameAmountOfFieldsToObjectShouldWork,The following statement contains a magic number: Assert.True(changes[docID][5].Change == DocumentsChanges.ChangeType.NewField);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,RemovingAndAddingSameAmountOfFieldsToObjectShouldWork,The following statement contains a magic number: Assert.True(changes[docID][5].FieldName == "Test-B");
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,RemovingAndAddingSameAmountOfFieldsToObjectShouldWork,The following statement contains a magic number: Assert.True(changes[docID][6].Change == DocumentsChanges.ChangeType.NewField);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,RemovingAndAddingSameAmountOfFieldsToObjectShouldWork,The following statement contains a magic number: Assert.True(changes[docID][6].FieldName == "Test-D");
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,RemovingAndAddingSameAmountOfFieldsToObjectShouldWork,The following statement contains a magic number: Assert.True(changes[docID][4].Change == DocumentsChanges.ChangeType.NewField);
Magic Number,FastTests.Client,WhatChanged,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\WhatChanged.cs,RemovingAndAddingSameAmountOfFieldsToObjectShouldWork,The following statement contains a magic number: Assert.True(changes[docID][4].FieldName == "Test-B");
Magic Number,FastTests.Client.BulkInsert,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInsert\BulkInserts.cs,SimpleBulkInsertShouldWork,The following statement contains a magic number: bulkInsert.Store(fooBars[2]);
Magic Number,FastTests.Client.BulkInsert,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInsert\BulkInserts.cs,SimpleBulkInsertShouldWork,The following statement contains a magic number: bulkInsert.Store(fooBars[3]);
Magic Number,FastTests.Client.BulkInsert,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInsert\BulkInserts.cs,AsyncSimpleBulkInsertShouldWork,The following statement contains a magic number: await bulkInsert.StoreAsync(fooBars[2]);
Magic Number,FastTests.Client.BulkInsert,BulkInserts,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\BulkInsert\BulkInserts.cs,AsyncSimpleBulkInsertShouldWork,The following statement contains a magic number: await bulkInsert.StoreAsync(fooBars[3]);
Magic Number,FastTests.Client.Documents,BasicDocuments,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Documents\BasicDocuments.cs,GetAsync,The following statement contains a magic number: Assert.Equal(2' docs.Results.Length);
Magic Number,FastTests.Client.Documents,BasicDocuments,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Documents\BasicDocuments.cs,GetAsync,The following statement contains a magic number: Assert.Equal(2' docs.Results.Length);
Magic Number,FastTests.Client.Indexing,DebugIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\DebugIndexing.cs,QueriesRunning,The following statement contains a magic number: q = session.Advanced.DocumentQuery<Person>()                          .WhereEquals(x => x.Name' "John")                          .Take(20)                          .GetIndexQuery();
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,CanStopAndStart,The following statement contains a magic number: Assert.Equal(2' status.Indexes.Length);
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,CanStopAndStart,The following statement contains a magic number: Assert.Equal(2' status.Indexes.Length);
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,CanStopAndStart,The following statement contains a magic number: Assert.Equal(2' status.Indexes.Length);
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,CanStopAndStart,The following statement contains a magic number: Assert.Equal(2' status.Indexes.Length);
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,CanStopAndStart,The following statement contains a magic number: Assert.Equal(2' status.Indexes.Length);
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,SetLockModeAndSetPriorityForAutoIndex,The following statement contains a magic number: var indexes = await store.Maintenance.SendAsync(new GetIndexesOperation(0' 128));
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,GetErrors,The following statement contains a magic number: Assert.Equal(2' error.Errors.Length);
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,GetErrors,The following statement contains a magic number: Assert.Equal(2' stats.ErrorsCount);
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,GetDefinition,The following statement contains a magic number: var definitions = await store.Maintenance.SendAsync(new GetIndexesOperation(0' 128));
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,GetTerms,The following statement contains a magic number: var terms = await store                      .Maintenance                      .SendAsync(new GetTermsOperation(indexName' "Name"' null' 128));
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,GetTerms,The following statement contains a magic number: Assert.Equal(2' terms.Length);
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,Performance,The following statement contains a magic number: Assert.Equal(2' performanceStats.Length);
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,GetIndexNames,The following statement contains a magic number: var indexNames = store.Maintenance.Send(new GetIndexNamesOperation(0' 10));
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,CanExplain,The following statement contains a magic number: users = session.Query<User>()                          .Statistics(out stats)                          .Where(x => x.Age > 10)                          .ToList();
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,MoreLikeThis,The following statement contains a magic number: Assert.Equal(3' list.Count);
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,MoreLikeThis,The following statement contains a magic number: Assert.Equal("We do"' list[2].Title);
Magic Number,FastTests.Client.Indexing,IndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexesFromClient.cs,MoreLikeThis,The following statement contains a magic number: Assert.Equal("prototype"' list[2].Desc);
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanCompileIndexWithExtensions,The following statement contains a magic number: var p = new Person() { Name = "Methuselah"' Age = 969 };
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_Dictionary,The following statement contains a magic number: session.Store(new Person                      {                          Name = "aviv"'                          Contacts = new Dictionary<string' long>                          {                              {                                  "jerry"' 5554866812                              }'                              {                                  "bob"' 5554866813                              }'                              {                                  "ayende"' 5554866814                              }                          }                        });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_Dictionary,The following statement contains a magic number: session.Store(new Person                      {                          Name = "aviv"'                          Contacts = new Dictionary<string' long>                          {                              {                                  "jerry"' 5554866812                              }'                              {                                  "bob"' 5554866813                              }'                              {                                  "ayende"' 5554866814                              }                          }                        });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_Dictionary,The following statement contains a magic number: session.Store(new Person                      {                          Name = "aviv"'                          Contacts = new Dictionary<string' long>                          {                              {                                  "jerry"' 5554866812                              }'                              {                                  "bob"' 5554866813                              }'                              {                                  "ayende"' 5554866814                              }                          }                        });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_Dictionary,The following statement contains a magic number: session.Store(new Person                      {                          Name = "reeb"'                          Contacts = new Dictionary<string' long>                          {                              {                                  "david"' 5554866815                              }'                              {                                  "ayende"' 5554866814                              }                          }                      });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_Dictionary,The following statement contains a magic number: session.Store(new Person                      {                          Name = "reeb"'                          Contacts = new Dictionary<string' long>                          {                              {                                  "david"' 5554866815                              }'                              {                                  "ayende"' 5554866814                              }                          }                      });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_DateTime,The following statement contains a magic number: session.Store(new Person                      {                          Name = "aviv"'                          Event = new Event                          {                              StartTime = new DateTime(2018' 1' 1)'                              EndTime = new DateTime(2020' 1' 1)                          }                      });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_DateTime,The following statement contains a magic number: session.Store(new Person                      {                          Name = "aviv"'                          Event = new Event                          {                              StartTime = new DateTime(2018' 1' 1)'                              EndTime = new DateTime(2020' 1' 1)                          }                      });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_DateTime,The following statement contains a magic number: session.Store(new Person                      {                          Name = "reeb"'                          Event = new Event                          {                              StartTime = new DateTime(2018' 1' 1)'                              EndTime = new DateTime(2018' 2' 1)                          }                      });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_DateTime,The following statement contains a magic number: session.Store(new Person                      {                          Name = "reeb"'                          Event = new Event                          {                              StartTime = new DateTime(2018' 1' 1)'                              EndTime = new DateTime(2018' 2' 1)                          }                      });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_DateTime,The following statement contains a magic number: session.Store(new Person                      {                          Name = "reeb"'                          Event = new Event                          {                              StartTime = new DateTime(2018' 1' 1)'                              EndTime = new DateTime(2018' 2' 1)                          }                      });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_DictionaryFunctions,The following statement contains a magic number: session.Store(new Person                      {                          Name = "aviv"'                          Contacts = new Dictionary<string' long>                          {                              {                                  "jerry"' 5554866812                              }'                              {                                  "bob"' 5554866813                              }'                              {                                  "ayende"' 5554866814                              }                          }                        });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_DictionaryFunctions,The following statement contains a magic number: session.Store(new Person                      {                          Name = "aviv"'                          Contacts = new Dictionary<string' long>                          {                              {                                  "jerry"' 5554866812                              }'                              {                                  "bob"' 5554866813                              }'                              {                                  "ayende"' 5554866814                              }                          }                        });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_DictionaryFunctions,The following statement contains a magic number: session.Store(new Person                      {                          Name = "aviv"'                          Contacts = new Dictionary<string' long>                          {                              {                                  "jerry"' 5554866812                              }'                              {                                  "bob"' 5554866813                              }'                              {                                  "ayende"' 5554866814                              }                          }                        });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_DictionaryFunctions,The following statement contains a magic number: session.Store(new Person                      {                          Name = "reeb"'                          Contacts = new Dictionary<string' long>                          {                              {                                  "david"' 5554866815                              }'                              {                                  "ayende"' 5554866814                              }'                              {                                  "home"' 1024                              }                          }                      });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_DictionaryFunctions,The following statement contains a magic number: session.Store(new Person                      {                          Name = "reeb"'                          Contacts = new Dictionary<string' long>                          {                              {                                  "david"' 5554866815                              }'                              {                                  "ayende"' 5554866814                              }'                              {                                  "home"' 1024                              }                          }                      });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_DictionaryFunctions,The following statement contains a magic number: session.Store(new Person                      {                          Name = "reeb"'                          Contacts = new Dictionary<string' long>                          {                              {                                  "david"' 5554866815                              }'                              {                                  "ayende"' 5554866814                              }'                              {                                  "home"' 1024                              }                          }                      });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithIEnumerableParameterAndIEnumerableReturnType,The following statement contains a magic number: Assert.Equal(2' combined.Count);
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithUintReturnType,The following statement contains a magic number: session.Store(new Person                      {                          Name = "aviv"'                          Age = 33                      });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithUintReturnType,The following statement contains a magic number: session.Store(new Person                      {                          Name = "egor"'                          Age = 29                      });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithArrayReturnType,The following statement contains a magic number: session.Store(new Person                      {                          Name = "aviv"'                          Numbers = new []                          {                              6' 6' 6                          }                                                });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithArrayReturnType,The following statement contains a magic number: session.Store(new Person                      {                          Name = "aviv"'                          Numbers = new []                          {                              6' 6' 6                          }                                                });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithArrayReturnType,The following statement contains a magic number: session.Store(new Person                      {                          Name = "aviv"'                          Numbers = new []                          {                              6' 6' 6                          }                                                });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithArrayReturnType,The following statement contains a magic number: session.Store(new Person                      {                          Name = "reeb"'                          Numbers = new[]                          {                              10                          }                        });
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithListParameterAndListReturnType,The following statement contains a magic number: var newFriends = session.Query<PeopleIndex19.Result' PeopleIndex19>()                          .Where(p => p.FriendsCount > 3)                          .Select(p => p.NewFriends)                          .Single();
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithListParameterAndListReturnType,The following statement contains a magic number: Assert.Equal(4' newFriends.Count);
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithListParameterAndListReturnType,The following statement contains a magic number: Assert.Equal("ayende"' newFriends[2]);
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithListParameterAndListReturnType,The following statement contains a magic number: Assert.Equal("ppekrol"' newFriends[3]);
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithValueTypeListReturnType,The following statement contains a magic number: Assert.Equal(3' numbers.Count);
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithValueTypeListReturnType,The following statement contains a magic number: Assert.Equal(2' numbers[1]);
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithValueTypeListReturnType,The following statement contains a magic number: Assert.Equal(3' numbers[2]);
Magic Number,FastTests.Client.Indexing,IndexExtensionFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,CanUseMethodFromExtensionsInIndex_WithValueTypeListReturnType,The following statement contains a magic number: Assert.Equal(3' numbers[2]);
Magic Number,FastTests.Client.Indexing,PeopleIndex9,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,PeopleIndex9,The following statement contains a magic number: Map = people => from person in people                      where Foo9(person.Event.StartTime' person.Event.EndTime).TotalDays < 100                      select new                      {                          person.Name                      };
Magic Number,FastTests.Client.Indexing,PeopleIndex10,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,PeopleIndex10,The following statement contains a magic number: Map = people => from person in people                      where Foo10(person.Contacts) > 100                       select new                      {                          person.Name                      };
Magic Number,FastTests.Client.Indexing,PeopleIndex13,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,PeopleIndex13,The following statement contains a magic number: Map = people => from person in people                                  where Foo13(person) > 30                                  select new                                  {                                      person.Name                                  };
Magic Number,FastTests.Client.Indexing,PeopleIndex17,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,PeopleIndex17,The following statement contains a magic number: Map = people => from person in people                                  where Foo17(person).Count > 2                                  select new                                  {                                      person.Name                                  };
Magic Number,FastTests.Client.Indexing,PeopleIndex18,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,PeopleIndex18,The following statement contains a magic number: Map = people => from person in people                                  where Foo18(person).Count() > 2                                  select new                                  {                                      person.Name                                  };
Magic Number,FastTests.Client.Indexing,PeopleUtil,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,Foo20,The following statement contains a magic number: var x = new List<int>              {                     1' 2' 3              };
Magic Number,FastTests.Client.Indexing,PeopleUtil,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\IndexExtensionFromClient.cs,Foo20,The following statement contains a magic number: var x = new List<int>              {                     1' 2' 3              };
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexTimeSpan,The following statement contains a magic number: session.Store(new Teemo                      {                          Description = "5 minutes"'                          Duration = TimeSpan.FromMinutes(5)                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexTimeSpan,The following statement contains a magic number: session.Query<Teemo>("TeemoByDuration").Single(x => x.Duration == TimeSpan.FromMinutes(5));
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Foo"'                          Numbers = new[] { 4' 6' 11' 9 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Foo"'                          Numbers = new[] { 4' 6' 11' 9 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Foo"'                          Numbers = new[] { 4' 6' 11' 9 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Foo"'                          Numbers = new[] { 4' 6' 11' 9 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Bar"'                          Numbers = new[] { 3' 8' 5' 17 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Bar"'                          Numbers = new[] { 3' 8' 5' 17 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Bar"'                          Numbers = new[] { 3' 8' 5' 17 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Bar"'                          Numbers = new[] { 3' 8' 5' 17 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapWithFanout,The following statement contains a magic number: var result = session.Query<FanoutByNumbers.Result>("FanoutByNumbers")                          .Where(x => x.Sum == 17)                          .OfType<Fanout>()                          .Single();
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanoutWhenOutputingBlittableObjectInstance,The following statement contains a magic number: session.Store(new Customer                      {                          Name = "John Smidth"'                          Status = "Active"'                          Subscription = "Monthly"'                          Payments = new []                          {                              new DateWithAmount("2018-09-01"'58)'                              new DateWithAmount("2018-10-01"'48)'                              new DateWithAmount("2018-11-01"'75)'                              new DateWithAmount("2018-12-01"'42)'                              new DateWithAmount("2019-01-01"'34)                          }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanoutWhenOutputingBlittableObjectInstance,The following statement contains a magic number: session.Store(new Customer                      {                          Name = "John Smidth"'                          Status = "Active"'                          Subscription = "Monthly"'                          Payments = new []                          {                              new DateWithAmount("2018-09-01"'58)'                              new DateWithAmount("2018-10-01"'48)'                              new DateWithAmount("2018-11-01"'75)'                              new DateWithAmount("2018-12-01"'42)'                              new DateWithAmount("2019-01-01"'34)                          }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanoutWhenOutputingBlittableObjectInstance,The following statement contains a magic number: session.Store(new Customer                      {                          Name = "John Smidth"'                          Status = "Active"'                          Subscription = "Monthly"'                          Payments = new []                          {                              new DateWithAmount("2018-09-01"'58)'                              new DateWithAmount("2018-10-01"'48)'                              new DateWithAmount("2018-11-01"'75)'                              new DateWithAmount("2018-12-01"'42)'                              new DateWithAmount("2019-01-01"'34)                          }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanoutWhenOutputingBlittableObjectInstance,The following statement contains a magic number: session.Store(new Customer                      {                          Name = "John Smidth"'                          Status = "Active"'                          Subscription = "Monthly"'                          Payments = new []                          {                              new DateWithAmount("2018-09-01"'58)'                              new DateWithAmount("2018-10-01"'48)'                              new DateWithAmount("2018-11-01"'75)'                              new DateWithAmount("2018-12-01"'42)'                              new DateWithAmount("2019-01-01"'34)                          }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanoutWhenOutputingBlittableObjectInstance,The following statement contains a magic number: session.Store(new Customer                      {                          Name = "John Smidth"'                          Status = "Active"'                          Subscription = "Monthly"'                          Payments = new []                          {                              new DateWithAmount("2018-09-01"'58)'                              new DateWithAmount("2018-10-01"'48)'                              new DateWithAmount("2018-11-01"'75)'                              new DateWithAmount("2018-12-01"'42)'                              new DateWithAmount("2019-01-01"'34)                          }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanoutWhenOutputingBlittableObjectInstance,The following statement contains a magic number: var res = session.Query<DateWithAmount' FanoutByPaymentsWithReduce>().Where(x => x.Amount == 42.833333333333336).ToList();
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanoutWhenOutputingBlittableObjectInstance,The following statement contains a magic number: Assert.Equal(3' res.Count);
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Foo"'                          Numbers = new[] { 4' 6' 11' 9 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Foo"'                          Numbers = new[] { 4' 6' 11' 9 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Foo"'                          Numbers = new[] { 4' 6' 11' 9 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Foo"'                          Numbers = new[] { 4' 6' 11' 9 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Bar"'                          Numbers = new[] { 3' 8' 5' 17 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Bar"'                          Numbers = new[] { 3' 8' 5' 17 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Bar"'                          Numbers = new[] { 3' 8' 5' 17 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanout,The following statement contains a magic number: session.Store(new Fanout                      {                          Foo = "Bar"'                          Numbers = new[] { 3' 8' 5' 17 }                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexMapReduceWithFanout,The following statement contains a magic number: var result = session.Query<FanoutByNumbersWithReduce.Result>("FanoutByNumbersWithReduce")                          .Where(x => x.Sum == 33)                          .Single();
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanUseSpatialFields,The following statement contains a magic number: var kalab = 10;
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanUseDynamicSpatialFields,The following statement contains a magic number: var kalab = 10;
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanUseSpatialFieldsInternal,The following statement contains a magic number: session.Store(new Location                  {                      Description = "Dor beach"'                      Latitude = 32.61059534196809'                      Longitude = 34.918146686510454                    });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanUseSpatialFieldsInternal,The following statement contains a magic number: session.Store(new Location                  {                      Description = "Dor beach"'                      Latitude = 32.61059534196809'                      Longitude = 34.918146686510454                    });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanUseSpatialFieldsInternal,The following statement contains a magic number: session.Store(new Location                  {                      Description = "Kfar Galim"'                      Latitude = 32.76724701152615'                      Longitude = 34.957999421620116                    });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanUseSpatialFieldsInternal,The following statement contains a magic number: session.Store(new Location                  {                      Description = "Kfar Galim"'                      Latitude = 32.76724701152615'                      Longitude = 34.957999421620116                    });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanUseSpatialFieldsInternal,The following statement contains a magic number: session.Query<Location>(indexName).Spatial("Location"' criteria => criteria.WithinRadius(kalab' 32.56829122491778' 34.953954053921734)).Single(x => x.Description == "Dor beach");
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanUseSpatialFieldsInternal,The following statement contains a magic number: session.Query<Location>(indexName).Spatial("Location"' criteria => criteria.WithinRadius(kalab' 32.56829122491778' 34.953954053921734)).Single(x => x.Description == "Dor beach");
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,ReduceNullValuesInternal,The following statement contains a magic number: var res = session.Query<User>("UsersReducedByName").OfType<ReduceResults>().Single(x => x.Count == 3);
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,OutputReduceToCollection,The following statement contains a magic number: session.Store(new Product { Name = "Lakkalikööri"' Category = "categories/1-A"' PricePerUnit = 13 });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,OutputReduceToCollection,The following statement contains a magic number: session.Store(new Product { Name = "Original Frankfurter"' Category = "categories/1-A"' PricePerUnit = 16 });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,OutputReduceToCollection,The following statement contains a magic number: session.Store(new Product { Name = "Röd Kaviar"' Category = "categories/2-A"' PricePerUnit = 18 });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,DateCheckMapReduce,The following statement contains a magic number: session.Store(new Order                      {                          Lines = new List<OrderLine>                          {                              new OrderLine() {ProductName = "Chang"}'                              new OrderLine() {ProductName = "Aniseed Syrup"}'                              new OrderLine() {ProductName = "Chef Anton's Cajun Seasoning"}                          }'                          OrderedAt = new DateTime(1998' 5' 6)                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,DateCheckMapReduce,The following statement contains a magic number: session.Store(new Order                      {                          Lines = new List<OrderLine>                          {                              new OrderLine() {ProductName = "Chang"}'                              new OrderLine() {ProductName = "Aniseed Syrup"}'                              new OrderLine() {ProductName = "Chef Anton's Cajun Seasoning"}                          }'                          OrderedAt = new DateTime(1998' 5' 6)                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,DateCheckMapReduce,The following statement contains a magic number: session.Store(new Order                      {                          Lines = new List<OrderLine>                          {                              new OrderLine() {ProductName = "Chang"}'                              new OrderLine() {ProductName = "Aniseed Syrup"}'                              new OrderLine() {ProductName = "Chef Anton's Cajun Seasoning"}                          }'                          OrderedAt = new DateTime(1998' 5' 6)                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,DateCheckMapReduce,The following statement contains a magic number: session.Store(new Order                      {                          Lines = new List<OrderLine>                          {                              new OrderLine() {ProductName = "Grandma's Boysenberry Spread"}'                              new OrderLine() {ProductName = "Tofu"}'                              new OrderLine() {ProductName = "Teatime Chocolate Biscuits"}                          }'                          OrderedAt = new DateTime(1998' 5' 10)                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,DateCheckMapReduce,The following statement contains a magic number: session.Store(new Order                      {                          Lines = new List<OrderLine>                          {                              new OrderLine() {ProductName = "Grandma's Boysenberry Spread"}'                              new OrderLine() {ProductName = "Tofu"}'                              new OrderLine() {ProductName = "Teatime Chocolate Biscuits"}                          }'                          OrderedAt = new DateTime(1998' 5' 10)                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,DateCheckMapReduce,The following statement contains a magic number: session.Store(new Order                      {                          Lines = new List<OrderLine>                          {                              new OrderLine() {ProductName = "Grandma's Boysenberry Spread"}'                              new OrderLine() {ProductName = "Tofu"}'                              new OrderLine() {ProductName = "Teatime Chocolate Biscuits"}                          }'                          OrderedAt = new DateTime(1998' 5' 10)                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,DateCheckMapReduce,The following statement contains a magic number: session.Store(new Order                      {                          Lines = new List<OrderLine>                          {                              new OrderLine() {ProductName = "Guaraná Fantástica"}'                              new OrderLine() {ProductName = "NuNuCa Nuß-Nougat-Creme"}'                              new OrderLine() {ProductName = "Perth Pasties"}'                              new OrderLine() {ProductName = "Outback Lager"}                          }'                          OrderedAt = new DateTime(1998' 4' 30)                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,DateCheckMapReduce,The following statement contains a magic number: session.Store(new Order                      {                          Lines = new List<OrderLine>                          {                              new OrderLine() {ProductName = "Guaraná Fantástica"}'                              new OrderLine() {ProductName = "NuNuCa Nuß-Nougat-Creme"}'                              new OrderLine() {ProductName = "Perth Pasties"}'                              new OrderLine() {ProductName = "Outback Lager"}                          }'                          OrderedAt = new DateTime(1998' 4' 30)                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,DateCheckMapReduce,The following statement contains a magic number: session.Store(new Order                      {                          Lines = new List<OrderLine>                          {                              new OrderLine() {ProductName = "Guaraná Fantástica"}'                              new OrderLine() {ProductName = "NuNuCa Nuß-Nougat-Creme"}'                              new OrderLine() {ProductName = "Perth Pasties"}'                              new OrderLine() {ProductName = "Outback Lager"}                          }'                          OrderedAt = new DateTime(1998' 4' 30)                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,DateCheckMapReduce,The following statement contains a magic number: var res = session.Query<Product_Sales_ByMonth.Result>("Product/Sales/ByMonth")                          .Where(x => x.Count == 6)                          .ToList();
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,DateCheckMapReduce,The following statement contains a magic number: Assert.Equal(res[0].Month.Month' 5);
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexSwitchCases,The following statement contains a magic number: session.Store(new Product                      {                          Name = "p3"'                          Mode = "New"'                          Manufacturer = "ACME"'                          Type = 2                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexSwitchCases,The following statement contains a magic number: session.Store(new Product                      {                          Name = "p4"'                          Mode = "New"'                          Manufacturer = "EMCA"'                          Type = 2                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexSwitchCases,The following statement contains a magic number: session.Store(new Product                      {                          Name = "p5"'                          Mode = "Refurbished"'                          Manufacturer = "EMCA"'                          Type = 2                      });
Magic Number,FastTests.Client.Indexing,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\JavaScriptIndexTests.cs,CanIndexSwitchCases,The following statement contains a magic number: var res = session.Query<ProductsWarrentyResult>("ProductsWarrenty").Where(u => u.Duration > 20).ProjectInto<Product>().Single();
Magic Number,FastTests.Client.Indexing,StaticIndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\StaticIndexesFromClient.cs,Can_Put_And_Replace,The following statement contains a magic number: await session.StoreAsync(new UserAndAge { Name = "Boki"' Age = 14 });
Magic Number,FastTests.Client.Indexing,StaticIndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\StaticIndexesFromClient.cs,Can_Put_And_Replace,The following statement contains a magic number: await session.StoreAsync(new UserAndAge { Name = "Toli"' Age = 5 });
Magic Number,FastTests.Client.Indexing,StaticIndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\StaticIndexesFromClient.cs,Can_Put_Replace_And_Back_To_Original,The following statement contains a magic number: await session.StoreAsync(new UserAndAge { Name = "Boki"' Age = 14 }' cts.Token);
Magic Number,FastTests.Client.Indexing,StaticIndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\StaticIndexesFromClient.cs,Can_Put_Replace_And_Back_To_Original,The following statement contains a magic number: await session.StoreAsync(new UserAndAge { Name = "Toli"' Age = 5 }' cts.Token);
Magic Number,FastTests.Client.Indexing,StaticIndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\StaticIndexesFromClient.cs,Can_start_and_stop_index,The following statement contains a magic number: await session.StoreAsync(new UserAndAge { Name = "Boki"' Age = 14 });
Magic Number,FastTests.Client.Indexing,StaticIndexesFromClient,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Indexing\StaticIndexesFromClient.cs,Can_start_and_stop_index,The following statement contains a magic number: await session.StoreAsync(new UserAndAge { Name = "Toli"' Age = 5 });
Magic Number,FastTests.Client.Queries,RegexQueryTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Queries\RegexQueryTests.cs,QueriesWithRegexShouldWork,The following statement contains a magic number: var res = session.Advanced.RawQuery<RegexMe>("from RegexMes as r where Regex(r.Text'\"^[a-z ]{2'4}love\")")                          .WaitForNonStaleResults(TimeSpan.FromMinutes(3))                          .ToList();
Magic Number,FastTests.Client.Queries,RegexQueryTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Queries\RegexQueryTests.cs,QueriesWithRegexShouldWork,The following statement contains a magic number: Assert.Equal(4' res.Count);
Magic Number,FastTests.Client.Queries,RegexQueryTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Queries\RegexQueryTests.cs,QueriesWithRegexFromDocumentQuery,The following statement contains a magic number: Assert.Equal(4' result.Count);
Magic Number,FastTests.Client.Queries,RegexQueryTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Queries\RegexQueryTests.cs,QueriesWithRegexFromDocumentQuery,The following statement contains a magic number: Assert.Equal(4' result.Count);
Magic Number,FastTests.Client.Queries,RegexQueryTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Queries\RegexQueryTests.cs,QueriesWithRegexFromLinqProvider,The following statement contains a magic number: Assert.Equal(4' result.Count);
Magic Number,FastTests.Client.Queries,RegexQueryTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Queries\RegexQueryTests.cs,QueriesWithRegexFromLinqProvider_QueryExpressionSyntax,The following statement contains a magic number: Assert.Equal(4' query.Count);
Magic Number,FastTests.Client.Queries,RegexQueryTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Queries\RegexQueryTests.cs,QueriesWithRegexAndEscapedCharsShouldWork,The following statement contains a magic number: var res = session.Advanced.RawQuery<RegexMe>("from RegexMes as r where Regex(r.Text'\"^(\\\\w+\\\\s+){4}\\\\w+$\")")                          .WaitForNonStaleResults(TimeSpan.FromMinutes(3))                          .ToList();
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,CanDeleteSubscription,The following statement contains a magic number: var subscriptions = await store.Subscriptions.GetSubscriptionsAsync(0' 5);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,CanDeleteSubscription,The following statement contains a magic number: Assert.Equal(2' subscriptions.Count);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,CanDeleteSubscription,The following statement contains a magic number: subscriptions = await store.Subscriptions.GetSubscriptionsAsync(0' 5);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldThrowWhenOpeningNoExisingSubscription,The following statement contains a magic number: var subscription = store.Subscriptions.GetSubscriptionWorker(new SubscriptionWorkerOptions("1")                  {                      TimeToWaitBeforeConnectionRetry = TimeSpan.FromSeconds(5)                  });
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldBeAbleToChangeBufferSizes,The following statement contains a magic number: session.Store(new User { Age = 31 }' "users/1");
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldBeAbleToChangeBufferSizes,The following statement contains a magic number: session.Store(new User { Age = 27 }' "users/12");
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldBeAbleToChangeBufferSizes,The following statement contains a magic number: session.Store(new User { Age = 25 }' "users/3");
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldBeAbleToChangeBufferSizes,The following statement contains a magic number: Assert.Equal(31' age);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldBeAbleToChangeBufferSizes,The following statement contains a magic number: Assert.Equal(27' age);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldBeAbleToChangeBufferSizes,The following statement contains a magic number: Assert.Equal(25' age);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldBeAbleToChangeBufferSizes,The following statement contains a magic number: var expectedSendBufferSize = 4 * 1024;
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldBeAbleToChangeBufferSizes,The following statement contains a magic number: var expectedSendBufferSize = 4 * 1024;
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldBeAbleToChangeBufferSizes,The following statement contains a magic number: var expectedReceiveBufferSize = 3 * 1024;
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldBeAbleToChangeBufferSizes,The following statement contains a magic number: var expectedReceiveBufferSize = 3 * 1024;
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldBeAbleToChangeBufferSizes,The following statement contains a magic number: expectedSendBufferSize *= 2;
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldBeAbleToChangeBufferSizes,The following statement contains a magic number: expectedReceiveBufferSize *= 2;
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldStreamAllDocumentsAfterSubscriptionCreation,The following statement contains a magic number: session.Store(new User { Age = 31 }' "users/1");
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldStreamAllDocumentsAfterSubscriptionCreation,The following statement contains a magic number: session.Store(new User { Age = 27 }' "users/12");
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldStreamAllDocumentsAfterSubscriptionCreation,The following statement contains a magic number: session.Store(new User { Age = 25 }' "users/3");
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldStreamAllDocumentsAfterSubscriptionCreation,The following statement contains a magic number: Assert.Equal(31' age);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldStreamAllDocumentsAfterSubscriptionCreation,The following statement contains a magic number: Assert.Equal(27' age);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldStreamAllDocumentsAfterSubscriptionCreation,The following statement contains a magic number: Assert.Equal(25' age);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldStreamAllDocumentsAfterSubscriptionCreation,The following statement contains a magic number: expectedSendBufferSize *= 2;
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldStreamAllDocumentsAfterSubscriptionCreation,The following statement contains a magic number: expectedReceiveBufferSize *= 2;
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldRespectMaxDocCountInBatch,The following statement contains a magic number: i < 100
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldRespectMaxDocCountInBatch,The following statement contains a magic number: var cd = new CountdownEvent(100);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldRespectMaxDocCountInBatch,The following statement contains a magic number: var t = subscription.Run(batch =>                      {                          cd.Signal(batch.NumberOfItemsInBatch);                          Assert.True(batch.NumberOfItemsInBatch <= 25);                      });
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldRespectCollectionCriteria,The following statement contains a magic number: i < 100
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldRespectCollectionCriteria,The following statement contains a magic number: var docs = new CountdownEvent(100);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldRespectStartsWithCriteria,The following statement contains a magic number: session.Store(new User()' i % 2 == 0 ? "users/" : "users/favorite/");
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldRespectStartsWithCriteria,The following statement contains a magic number: i < 100
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldRespectStartsWithCriteria,The following statement contains a magic number: var docs = new CountdownEvent(50);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,WillAcknowledgeEmptyBatches,The following statement contains a magic number: var subscriptionDocuments = store.Subscriptions.GetSubscriptions(0' 10);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,WillAcknowledgeEmptyBatches,The following statement contains a magic number: var allDocs = new CountdownEvent(500);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,WillAcknowledgeEmptyBatches,The following statement contains a magic number: i < 500
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,ShouldKeepPullingDocsAfterServerRestart,The following statement contains a magic number: i < 150
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,CanReleaseSubscription,The following statement contains a magic number: subscriptionWorker = store.Subscriptions.GetSubscriptionWorker(new SubscriptionWorkerOptions(id)                  {                      Strategy = SubscriptionOpeningStrategy.OpenIfFree'                      TimeToWaitBeforeConnectionRetry = TimeSpan.FromSeconds(5)                  });
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,CanReleaseSubscription,The following statement contains a magic number: throwingSubscriptionWorker = store.Subscriptions.GetSubscriptionWorker(new SubscriptionWorkerOptions(id)                  {                      Strategy = SubscriptionOpeningStrategy.OpenIfFree'                      TimeToWaitBeforeConnectionRetry = TimeSpan.FromSeconds(5)                  });
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,CanReleaseSubscription,The following statement contains a magic number: notThrowingSubscriptionWorker = store.Subscriptions.GetSubscriptionWorker(new SubscriptionWorkerOptions(id)                  {                      TimeToWaitBeforeConnectionRetry = TimeSpan.FromSeconds(5)'                      Strategy = SubscriptionOpeningStrategy.WaitForFree                  });
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,RavenDB_3453_ShouldDeserializeTheWholeDocumentsAfterTypedSubscription,The following statement contains a magic number: session.Store(new User                          {                              Age = 31                          }' "users/1");
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,RavenDB_3453_ShouldDeserializeTheWholeDocumentsAfterTypedSubscription,The following statement contains a magic number: session.Store(new User                          {                              Age = 27                          }' "users/12");
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,RavenDB_3453_ShouldDeserializeTheWholeDocumentsAfterTypedSubscription,The following statement contains a magic number: session.Store(new User                          {                              Age = 25                          }' "users/3");
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,RavenDB_3453_ShouldDeserializeTheWholeDocumentsAfterTypedSubscription,The following statement contains a magic number: Assert.Equal(31' user.Age);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,RavenDB_3453_ShouldDeserializeTheWholeDocumentsAfterTypedSubscription,The following statement contains a magic number: Assert.Equal(27' user.Age);
Magic Number,FastTests.Client.Subscriptions,SubscriptionsBasic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Client\Subscriptions\SubscriptionsBasic.cs,RavenDB_3453_ShouldDeserializeTheWholeDocumentsAfterTypedSubscription,The following statement contains a magic number: Assert.Equal(25' user.Age);
Magic Number,FastTests.Graph,BasicGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\BasicGraphQueries.cs,Empty_vertex_node_should_work,The following statement contains a magic number: Assert.Equal(5' results.Count);
Magic Number,FastTests.Graph,BasicGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\BasicGraphQueries.cs,Can_query_without_collection_identifier,The following statement contains a magic number: Assert.Equal(9' allVerticesQuery.Count);
Magic Number,FastTests.Graph,BasicGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\BasicGraphQueries.cs,Can_query_without_collection_identifier,The following statement contains a magic number: Assert.Equal(3' docTypes.Count(t => t == "Genres"));
Magic Number,FastTests.Graph,BasicGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\BasicGraphQueries.cs,Can_query_without_collection_identifier,The following statement contains a magic number: Assert.Equal(3' docTypes.Count(t => t == "Movies"));
Magic Number,FastTests.Graph,BasicGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\BasicGraphQueries.cs,Can_query_without_collection_identifier,The following statement contains a magic number: Assert.Equal(3' docTypes.Count(t => t == "Users"));
Magic Number,FastTests.Graph,BasicGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\BasicGraphQueries.cs,Can_use_explicit_with_clause,The following statement contains a magic number: Assert.Equal(3' results.Count);
Magic Number,FastTests.Graph,BasicGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\BasicGraphQueries.cs,Can_use_explicit_with_clause,The following statement contains a magic number: Assert.Equal(3' docTypes.Count(t => t == "Users"));
Magic Number,FastTests.Graph,BasicGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\BasicGraphQueries.cs,FindReferences,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanAggregateQueryParametersProperly,The following statement contains a magic number: var bar = new Bar { Name = "Barvazon"' Age = 19 };
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanAggregateQueryParametersProperly,The following statement contains a magic number: var res = session.Advanced.GraphQuery<FooBar>("match (Foo)-[Bars as _]->(Bars as Bar)")                          .With("Foo"' builder => builder.DocumentQuery<Foo>().WhereIn(x => x.Name' names))                          .With("Bar"' session.Query<Bar>().Where(x => x.Age >= 18))                          .WaitForNonStaleResults()                          .ToList();
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,WaitForNonStaleResultsOnGraphQueriesWithClauseShouldWork,The following statement contains a magic number: var query = session.Advanced.GraphQuery<FooBar>("match (Foo)-[Bars as _]->(Bars as Bar)")                          .With("Foo"' builder => builder.DocumentQuery<Foo>().WhereIn(x => x.Name' names).WaitForNonStaleResults(TimeSpan.FromMinutes(3)))                          .With("Bar"' session.Query<Bar>().Customize(x => x.WaitForNonStaleResults(TimeSpan.FromMinutes(5))).Where(x => x.Age >= 18))                          .WaitForNonStaleResults()                          .GetIndexQuery();
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,WaitForNonStaleResultsOnGraphQueriesWithClauseShouldWork,The following statement contains a magic number: var query = session.Advanced.GraphQuery<FooBar>("match (Foo)-[Bars as _]->(Bars as Bar)")                          .With("Foo"' builder => builder.DocumentQuery<Foo>().WhereIn(x => x.Name' names).WaitForNonStaleResults(TimeSpan.FromMinutes(3)))                          .With("Bar"' session.Query<Bar>().Customize(x => x.WaitForNonStaleResults(TimeSpan.FromMinutes(5))).Where(x => x.Age >= 18))                          .WaitForNonStaleResults()                          .GetIndexQuery();
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,WaitForNonStaleResultsOnGraphQueriesWithClauseShouldWork,The following statement contains a magic number: var query = session.Advanced.GraphQuery<FooBar>("match (Foo)-[Bars as _]->(Bars as Bar)")                          .With("Foo"' builder => builder.DocumentQuery<Foo>().WhereIn(x => x.Name' names).WaitForNonStaleResults(TimeSpan.FromMinutes(3)))                          .With("Bar"' session.Query<Bar>().Customize(x => x.WaitForNonStaleResults(TimeSpan.FromMinutes(5))).Where(x => x.Age >= 18))                          .WaitForNonStaleResults()                          .GetIndexQuery();
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,WaitForNonStaleResultsOnGraphQueriesWithClauseShouldWork,The following statement contains a magic number: Assert.Equal(TimeSpan.FromMinutes(5)' query.WaitForNonStaleResultsTimeout);
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,WaitForNonStaleResultsOnGraphQueriesWithClauseShouldWork,The following statement contains a magic number: var query = session.Advanced.AsyncGraphQuery<FooBar>("match (Foo)-[Bars as _]->(Bars as Bar)")                          .With("Foo"' builder => builder.AsyncDocumentQuery<Foo>().WhereIn(x => x.Name' names).WaitForNonStaleResults(TimeSpan.FromMinutes(3)))                          .With("Bar"' session.Query<Bar>().Customize(x => x.WaitForNonStaleResults(TimeSpan.FromMinutes(5))).Where(x => x.Age >= 18))                          .WaitForNonStaleResults()                          .GetIndexQuery();
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,WaitForNonStaleResultsOnGraphQueriesWithClauseShouldWork,The following statement contains a magic number: var query = session.Advanced.AsyncGraphQuery<FooBar>("match (Foo)-[Bars as _]->(Bars as Bar)")                          .With("Foo"' builder => builder.AsyncDocumentQuery<Foo>().WhereIn(x => x.Name' names).WaitForNonStaleResults(TimeSpan.FromMinutes(3)))                          .With("Bar"' session.Query<Bar>().Customize(x => x.WaitForNonStaleResults(TimeSpan.FromMinutes(5))).Where(x => x.Age >= 18))                          .WaitForNonStaleResults()                          .GetIndexQuery();
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,WaitForNonStaleResultsOnGraphQueriesWithClauseShouldWork,The following statement contains a magic number: var query = session.Advanced.AsyncGraphQuery<FooBar>("match (Foo)-[Bars as _]->(Bars as Bar)")                          .With("Foo"' builder => builder.AsyncDocumentQuery<Foo>().WhereIn(x => x.Name' names).WaitForNonStaleResults(TimeSpan.FromMinutes(3)))                          .With("Bar"' session.Query<Bar>().Customize(x => x.WaitForNonStaleResults(TimeSpan.FromMinutes(5))).Where(x => x.Age >= 18))                          .WaitForNonStaleResults()                          .GetIndexQuery();
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,WaitForNonStaleResultsOnGraphQueriesWithClauseShouldWork,The following statement contains a magic number: Assert.Equal(TimeSpan.FromMinutes(5)' query.WaitForNonStaleResultsTimeout);
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: session.Store(                          new Friend                          {                              Name = "F1"'                              Age = 21'                              Friends = new[]                              {                                  new FriendDescriptor                                  {                                      FriendId = "Friend/2"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(1024)                                  }'                                  new FriendDescriptor                                  {                                      FriendId = "Friend/3"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(678)                                  }'                                  new FriendDescriptor                                  {                                      FriendId = "Friend/4"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(345)                                  }                              }                          }' "Friend/1");
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: session.Store(                          new Friend                          {                              Name = "F1"'                              Age = 21'                              Friends = new[]                              {                                  new FriendDescriptor                                  {                                      FriendId = "Friend/2"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(1024)                                  }'                                  new FriendDescriptor                                  {                                      FriendId = "Friend/3"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(678)                                  }'                                  new FriendDescriptor                                  {                                      FriendId = "Friend/4"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(345)                                  }                              }                          }' "Friend/1");
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: session.Store(                          new Friend                          {                              Name = "F1"'                              Age = 21'                              Friends = new[]                              {                                  new FriendDescriptor                                  {                                      FriendId = "Friend/2"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(1024)                                  }'                                  new FriendDescriptor                                  {                                      FriendId = "Friend/3"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(678)                                  }'                                  new FriendDescriptor                                  {                                      FriendId = "Friend/4"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(345)                                  }                              }                          }' "Friend/1");
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: session.Store(                          new Friend                          {                              Name = "F1"'                              Age = 21'                              Friends = new[]                              {                                  new FriendDescriptor                                  {                                      FriendId = "Friend/2"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(1024)                                  }'                                  new FriendDescriptor                                  {                                      FriendId = "Friend/3"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(678)                                  }'                                  new FriendDescriptor                                  {                                      FriendId = "Friend/4"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(345)                                  }                              }                          }' "Friend/1");
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: session.Store(                          new Friend                          {                              Name = "F2"'                              Age = 19'                              Friends = new[]                              {                                  new FriendDescriptor                                  {                                      FriendId = "Friend/1"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(1024)                                  }'                                  new FriendDescriptor                                  {                                      FriendId = "Friend/4"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(304)                                  }                              }                          }' "Friend/2");
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: session.Store(                          new Friend                          {                              Name = "F2"'                              Age = 19'                              Friends = new[]                              {                                  new FriendDescriptor                                  {                                      FriendId = "Friend/1"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(1024)                                  }'                                  new FriendDescriptor                                  {                                      FriendId = "Friend/4"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(304)                                  }                              }                          }' "Friend/2");
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: session.Store(                          new Friend                          {                              Name = "F2"'                              Age = 19'                              Friends = new[]                              {                                  new FriendDescriptor                                  {                                      FriendId = "Friend/1"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(1024)                                  }'                                  new FriendDescriptor                                  {                                      FriendId = "Friend/4"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(304)                                  }                              }                          }' "Friend/2");
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: session.Store(                          new Friend                          {                              Name = "F3"'                              Age = 41'                              Friends = new[]                              {                                  new FriendDescriptor                                  {                                      FriendId = "Friend/1"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(678)                                  }                              }                          }' "Friend/3");
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: session.Store(                          new Friend                          {                              Name = "F3"'                              Age = 41'                              Friends = new[]                              {                                  new FriendDescriptor                                  {                                      FriendId = "Friend/1"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(678)                                  }                              }                          }' "Friend/3");
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: session.Store(                          new Friend                          {                              Name = "F4"'                              Age = 32'                              Friends = new[]                              {                                  new FriendDescriptor                                  {                                      FriendId = "Friend/2"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(304)                                  }'                                  new FriendDescriptor                                  {                                      FriendId = "Friend/1"'                                      FriendsSince = DateTime.UtcNow -  TimeSpan.FromDays(345)                                  }                              }                          }' "Friend/4");
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: session.Store(                          new Friend                          {                              Name = "F4"'                              Age = 32'                              Friends = new[]                              {                                  new FriendDescriptor                                  {                                      FriendId = "Friend/2"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(304)                                  }'                                  new FriendDescriptor                                  {                                      FriendId = "Friend/1"'                                      FriendsSince = DateTime.UtcNow -  TimeSpan.FromDays(345)                                  }                              }                          }' "Friend/4");
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: session.Store(                          new Friend                          {                              Name = "F4"'                              Age = 32'                              Friends = new[]                              {                                  new FriendDescriptor                                  {                                      FriendId = "Friend/2"'                                      FriendsSince = DateTime.UtcNow - TimeSpan.FromDays(304)                                  }'                                  new FriendDescriptor                                  {                                      FriendId = "Friend/1"'                                      FriendsSince = DateTime.UtcNow -  TimeSpan.FromDays(345)                                  }                              }                          }' "Friend/4");
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: Assert.Equal(res.Count' 4);
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: Assert.Equal(res[2].Name' "F1");
Magic Number,FastTests.Graph,ClientGraphQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\ClientGraphQueries.cs,CanUseWithEdges,The following statement contains a magic number: Assert.Equal(res[3].Name' "F2");
Magic Number,FastTests.Graph,Parsing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\Parsing.cs,CanParseComplexGraph,The following statement contains a magic number: Assert.Equal(3' ((PatternMatchElementExpression)left.Left).Path.Length);
Magic Number,FastTests.Graph,Parsing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\Parsing.cs,CanParseComplexGraph,The following statement contains a magic number: Assert.Equal(3' ((PatternMatchElementExpression)left.Right).Path.Length);
Magic Number,FastTests.Graph,Parsing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\Parsing.cs,CanParseComplexGraph,The following statement contains a magic number: Assert.Equal(3' right.Path.Length);
Magic Number,FastTests.Graph,Parsing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\Parsing.cs,CanParsePath,The following statement contains a magic number: Assert.Equal(3' p.Path.Length);
Magic Number,FastTests.Graph,Parsing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\Parsing.cs,CanParsePath,The following statement contains a magic number: Assert.Equal("m"' p.Path[2].Alias);
Magic Number,FastTests.Graph,Parsing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\Parsing.cs,CanParsePath,The following statement contains a magic number: Assert.Equal(EdgeType.Right' p.Path[2].EdgeType);
Magic Number,FastTests.Graph,Parsing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\Parsing.cs,CanParseIncomingPaths,The following statement contains a magic number: Assert.Equal(3' p.Path.Length);
Magic Number,FastTests.Graph,Parsing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\Parsing.cs,CanParseIncomingPaths,The following statement contains a magic number: Assert.Equal("m"' p.Path[2].Alias);
Magic Number,FastTests.Graph,Parsing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\Parsing.cs,CanParseIncomingPaths,The following statement contains a magic number: Assert.Equal(EdgeType.Right' p.Path[2].EdgeType);
Magic Number,FastTests.Graph,Parsing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\Parsing.cs,CanRewriteQuery,The following statement contains a magic number: Assert.Equal(3' p.Path.Length);
Magic Number,FastTests.Graph,Parsing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\Parsing.cs,CanRewriteQuery,The following statement contains a magic number: Assert.Equal("m"' p.Path[2].Alias);
Magic Number,FastTests.Graph,Parsing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Graph\Parsing.cs,CanRewriteQuery,The following statement contains a magic number: Assert.Equal(EdgeType.Right' p.Path[2].EdgeType);
Magic Number,FastTests.Issues,MapReduce2,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-11781.cs,MapReduce2,The following statement contains a magic number: Map = users => from user in users                                 select new Result                                 {                                     Name = user.Name'                                     Count = 2                                 };
Magic Number,FastTests.Issues,RavenDB_12567,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-12567.cs,Recursive_queries_with_self_cycles_and_regular_cycles_should_properly_work,The following statement contains a magic number: Assert.Equal(queryResults.Count' 7);
Magic Number,FastTests.Issues,RavenDB_12926,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-12926.cs,AsyncManualResetEventWaitAsyncWithCancellationShouldWork,The following statement contains a magic number: SpinWait.SpinUntil(() => DateTime.UtcNow - start > TimeSpan.FromMilliseconds(100));
Magic Number,FastTests.Issues,RavenDB_12926,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-12926.cs,AsyncManualResetEventWaitAsyncWithCancellationShouldWork,The following statement contains a magic number: Assert.True(are.WaitOne(TimeSpan.FromSeconds(5))' "Waited for 30sec for AsyncManualResetEvent to be canceled be it didn't");
Magic Number,FastTests.Issues,RavenDB_12946,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-12946.cs,Raven_Should_Support_Include_More_Than_Once_On_Same_Doc,The following statement contains a magic number: const int numberOfDocs = 335;
Magic Number,FastTests.Issues,RavenDB_12946,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-12946.cs,Raven_Should_Support_Include_More_Than_Once_On_Same_Doc,The following statement contains a magic number: Assert.Equal(335' list.Count);
Magic Number,FastTests.Issues,RavenDB_12946,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-12946.cs,Raven_Should_Support_Include_More_Than_Once_On_Same_Doc,The following statement contains a magic number: Assert.Equal(2' session.Advanced.NumberOfRequests);
Magic Number,FastTests.Issues,RavenDB_5178,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-5178.cs,CanUsePathLongerThan260Chars,The following statement contains a magic number: var longName = "LongDatabaseName_" + new string('z'' 100);
Magic Number,FastTests.Issues,RavenDB_5610,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-5610.cs,WillUpdate,The following statement contains a magic number: Assert.Equal(33' index.Configuration.MapTimeout.AsTimeSpan.TotalSeconds);
Magic Number,FastTests.Issues,RavenDB_5610,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-5610.cs,WillUpdate,The following statement contains a magic number: Assert.Equal(30' index.Configuration.MapTimeout.AsTimeSpan.TotalSeconds);
Magic Number,FastTests.Issues,RavenDB_5610,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-5610.cs,WillUpdate,The following statement contains a magic number: Assert.Equal(30' index.Configuration.MapTimeout.AsTimeSpan.TotalSeconds);
Magic Number,FastTests.Issues,RavenDB_7329,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7329.cs,GivenPortZeroInTcpServerUrlShouldTakeItFromArg,The following statement contains a magic number: var result = config.Core.GetNodeTcpServerUrl("http://localhost:8080"' 38888);
Magic Number,FastTests.Issues,RavenDB_7329,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB-7329.cs,GivenPublicTcpServerUrlItShouldUseThatForNodeTcpServerUrl,The following statement contains a magic number: var result = config.Core.GetNodeTcpServerUrl("http://localhost:8080"' 37777);
Magic Number,FastTests.Issues,RavenDB_10644,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10644.cs,TranslateMathRound,The following statement contains a magic number: session.Store(new Article                      {                          Value = 2.5555555M                      });
Magic Number,FastTests.Issues,RavenDB_10644,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10644.cs,TranslateMathRound,The following statement contains a magic number: var query = from x in session.Query<Article>()                                  select new                                  {                                      Round = Math.Round(x.Value)'                                      Round2 = Math.Round(x.Value' 2)'                                      Round4 = Math.Round(x.Value' 4)                                  };
Magic Number,FastTests.Issues,RavenDB_10644,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10644.cs,TranslateMathRound,The following statement contains a magic number: var query = from x in session.Query<Article>()                                  select new                                  {                                      Round = Math.Round(x.Value)'                                      Round2 = Math.Round(x.Value' 2)'                                      Round4 = Math.Round(x.Value' 4)                                  };
Magic Number,FastTests.Issues,RavenDB_10644,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10644.cs,TranslateMathRound,The following statement contains a magic number: Assert.Equal(3' result[0].Round);
Magic Number,FastTests.Issues,RavenDB_10644,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10644.cs,TranslateMathRound,The following statement contains a magic number: Assert.Equal(2.56M' result[0].Round2);
Magic Number,FastTests.Issues,RavenDB_10644,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10644.cs,TranslateMathRound,The following statement contains a magic number: Assert.Equal(2.5556M' result[0].Round4);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: session.Store(new Article                      {                          Value = 1'                          Elements = new List<Element>()                          {                              new Element()                              {                                  Name = "a"'                                  Value = "b"'                                  Decimal = 3.2M                              }'                              new Element()                              {                                  Name = "a"'                                  Value = "b"'                                  Decimal = 3.5M                              }                          }'                          Values = new Dictionary<string' int>()                          {                              ["test"] = 2'                              ["test1"] = 3'                              ["test2"] = 4                          }                      });
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: session.Store(new Article                      {                          Value = 1'                          Elements = new List<Element>()                          {                              new Element()                              {                                  Name = "a"'                                  Value = "b"'                                  Decimal = 3.2M                              }'                              new Element()                              {                                  Name = "a"'                                  Value = "b"'                                  Decimal = 3.5M                              }                          }'                          Values = new Dictionary<string' int>()                          {                              ["test"] = 2'                              ["test1"] = 3'                              ["test2"] = 4                          }                      });
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: session.Store(new Article                      {                          Value = 1'                          Elements = new List<Element>()                          {                              new Element()                              {                                  Name = "a"'                                  Value = "b"'                                  Decimal = 3.2M                              }'                              new Element()                              {                                  Name = "a"'                                  Value = "b"'                                  Decimal = 3.5M                              }                          }'                          Values = new Dictionary<string' int>()                          {                              ["test"] = 2'                              ["test1"] = 3'                              ["test2"] = 4                          }                      });
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: session.Store(new Article                      {                          Value = 1'                          Elements = new List<Element>()                          {                              new Element()                              {                                  Name = "a"'                                  Value = "b"'                                  Decimal = 3.2M                              }'                              new Element()                              {                                  Name = "a"'                                  Value = "b"'                                  Decimal = 3.5M                              }                          }'                          Values = new Dictionary<string' int>()                          {                              ["test"] = 2'                              ["test1"] = 3'                              ["test2"] = 4                          }                      });
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: session.Store(new Article                      {                          Value = 1'                          Elements = new List<Element>()                          {                              new Element()                              {                                  Name = "a"'                                  Value = "b"'                                  Decimal = 3.2M                              }'                              new Element()                              {                                  Name = "a"'                                  Value = "b"'                                  Decimal = 3.5M                              }                          }'                          Values = new Dictionary<string' int>()                          {                              ["test"] = 2'                              ["test1"] = 3'                              ["test2"] = 4                          }                      });
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: session.Store(new Article                      {                          Value = 2'                          Elements = new List<Element>()                          {                              new Element()                              {                                  Name = "aa"'                                  Value = "ba"'                                  Decimal = 3.5M                              }                          }'                          Values = new Dictionary<string' int>()                          {                              ["test"] = 1'                              ["test1"] = 2'                              ["test2"] = 3                          }                      });
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: session.Store(new Article                      {                          Value = 2'                          Elements = new List<Element>()                          {                              new Element()                              {                                  Name = "aa"'                                  Value = "ba"'                                  Decimal = 3.5M                              }                          }'                          Values = new Dictionary<string' int>()                          {                              ["test"] = 1'                              ["test1"] = 2'                              ["test2"] = 3                          }                      });
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: session.Store(new Article                      {                          Value = 2'                          Elements = new List<Element>()                          {                              new Element()                              {                                  Name = "aa"'                                  Value = "ba"'                                  Decimal = 3.5M                              }                          }'                          Values = new Dictionary<string' int>()                          {                              ["test"] = 1'                              ["test1"] = 2'                              ["test2"] = 3                          }                      });
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: session.Store(new Article                      {                          Value = 2'                          Elements = new List<Element>()                          {                              new Element()                              {                                  Name = "aa"'                                  Value = "ba"'                                  Decimal = 3.5M                              }                          }'                          Values = new Dictionary<string' int>()                          {                              ["test"] = 1'                              ["test1"] = 2'                              ["test2"] = 3                          }                      });
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(3' result[0].TestDictionary1.Count);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(3' result[0].TestDictionary2.Count);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(3' result[0].TestDictionaryDirectAccess1);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(new[] { 2'3'4 }' result[0].TestDictionaryDirectAccess4);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(new[] { 2'3'4 }' result[0].TestDictionaryDirectAccess4);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(new[] { 2'3'4 }' result[0].TestDictionaryDirectAccess4);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(9' result[0].TestDictionarySum1);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(9' result[0].TestDictionarySum2);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(9' result[0].TestDictionarySum3);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(3' result[0].TestDictionaryAverage1);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(3' result[0].TestDictionaryAverage2);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(3' result[0].TestDictionaryAverage3);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(3' result[0].TestDictionaryFunc1);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(new[] { 2' 3' 4 }' result[0].TestDictionaryFunc2);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(new[] { 2' 3' 4 }' result[0].TestDictionaryFunc2);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(new[] { 2' 3' 4 }' result[0].TestDictionaryFunc2);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(3.5M' result[0].TestGeneratedDictionarySum1);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(3.5M' result[0].TestGeneratedDictionarySum2);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(3.5M' result[0].TestGeneratedDictionaryAverage1);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(3.5M' result[0].TestGeneratedDictionaryAverage2);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(new[] { 3.5M }' result[0].TestGeneratedDictionaryDirectAccess2);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(6.7M' result[0].TestList1);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(6.7M' result[0].TestList2);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(6.7M' result[0].TestList3);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(3.35M' result[0].TestList4);
Magic Number,FastTests.Issues,RavenDB_10659,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_10659.cs,TranslateDictionaryFunctions,The following statement contains a magic number: Assert.Equal(3.35M' result[0].TestList5);
Magic Number,FastTests.Issues,RavenDB_12731,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_12731.cs,CanCompareLazyStringValueAndLazyCompressedStringValue,The following statement contains a magic number: writer.WriteString(new string('c'' 1024 * 1024));
Magic Number,FastTests.Issues,RavenDB_12731,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_12731.cs,CanCompareLazyStringValueAndLazyCompressedStringValue,The following statement contains a magic number: writer.WriteString(new string('c'' 1024 * 1024));
Magic Number,FastTests.Issues,RavenDB_13338,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_13338.cs,DynamicObjectIdShouldBeStrippedFromDocument,The following statement contains a magic number: Assert.Equal(2' entity.Properties().Count());
Magic Number,FastTests.Issues,RavenDB_13891,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_13891.cs,PatchedDocumentShouldBeReplaced,The following statement contains a magic number: i < 3
Magic Number,FastTests.Issues,RavenDB_7654,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_7654.cs,TimeSpanCanBeParsedFromStringIntAndDouble,The following statement contains a magic number: var ts = TimeSpan.FromMinutes(77);
Magic Number,FastTests.Issues,RavenDB_9348,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Issues\RavenDB_9348.cs,IfConfigurationKeyIsStringArrayThenItShouldSupportValuesWithSemicolonPropely,The following statement contains a magic number: Assert.Equal(2' configuration.Core.ServerUrls.Length);
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Empty_remote_change_vector_should_generate_already_merged,The following statement contains a magic number: Assert.Equal(ConflictStatus.AlreadyMerged' ChangeVectorUtils.GetConflictStatus(string.Empty' ChangeVector((Guid.NewGuid()' 2' 1)' (Guid.NewGuid()' 3' 2))));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Empty_remote_change_vector_should_generate_already_merged,The following statement contains a magic number: Assert.Equal(ConflictStatus.AlreadyMerged' ChangeVectorUtils.GetConflictStatus(string.Empty' ChangeVector((Guid.NewGuid()' 2' 1)' (Guid.NewGuid()' 3' 2))));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Empty_remote_change_vector_should_generate_already_merged,The following statement contains a magic number: Assert.Equal(ConflictStatus.AlreadyMerged' ChangeVectorUtils.GetConflictStatus(string.Empty' ChangeVector((Guid.NewGuid()' 2' 1)' (Guid.NewGuid()' 3' 2))));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Empty_local_change_vector,The following statement contains a magic number: Assert.Equal(ConflictStatus.Update' ChangeVectorUtils.GetConflictStatus(ChangeVector((Guid.NewGuid()' 2' 1)' (Guid.NewGuid()' 3' 2))' string.Empty));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Empty_local_change_vector,The following statement contains a magic number: Assert.Equal(ConflictStatus.Update' ChangeVectorUtils.GetConflictStatus(ChangeVector((Guid.NewGuid()' 2' 1)' (Guid.NewGuid()' 3' 2))' string.Empty));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Empty_local_change_vector,The following statement contains a magic number: Assert.Equal(ConflictStatus.Update' ChangeVectorUtils.GetConflictStatus(ChangeVector((Guid.NewGuid()' 2' 1)' (Guid.NewGuid()' 3' 2))' string.Empty));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Change_vector_has_negative_etag,The following statement contains a magic number: var changeVectorWithNegatoveEtag = ChangeVector((Guid.NewGuid()' 2' 1)' (Guid.NewGuid()' -3' 2));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Change_vector_has_negative_etag,The following statement contains a magic number: var changeVectorWithNegatoveEtag = ChangeVector((Guid.NewGuid()' 2' 1)' (Guid.NewGuid()' -3' 2));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Change_vector_has_negative_etag,The following statement contains a magic number: var changeVectorWithNegatoveEtag = ChangeVector((Guid.NewGuid()' 2' 1)' (Guid.NewGuid()' -3' 2));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Change_vector_has_negative_etag,The following statement contains a magic number: var changeVector = ChangeVector((Guid.NewGuid()' 2' 1)' (Guid.NewGuid()' 3' 2));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Change_vector_has_negative_etag,The following statement contains a magic number: var changeVector = ChangeVector((Guid.NewGuid()' 2' 1)' (Guid.NewGuid()' 3' 2));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Change_vector_has_negative_etag,The following statement contains a magic number: var changeVector = ChangeVector((Guid.NewGuid()' 2' 1)' (Guid.NewGuid()' 3' 2));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_all_remote_etags_large_than_local,The following statement contains a magic number: var tags = Enumerable.Range(0' 3).ToArray();
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_all_remote_etags_large_than_local,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 5' tags[0])' (dbIds[1]' 5' tags[1])' (dbIds[2]' 5' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_all_remote_etags_large_than_local,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 5' tags[0])' (dbIds[1]' 5' tags[1])' (dbIds[2]' 5' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_all_remote_etags_large_than_local,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 5' tags[0])' (dbIds[1]' 5' tags[1])' (dbIds[2]' 5' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_all_remote_etags_large_than_local,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 5' tags[0])' (dbIds[1]' 5' tags[1])' (dbIds[2]' 5' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_all_remote_etags_large_than_local,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 5' tags[0])' (dbIds[1]' 5' tags[1])' (dbIds[2]' 5' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_all_remote_etags_large_than_local,The following statement contains a magic number: var tags = Enumerable.Range(0' 3).ToArray();
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_all_remote_etags_large_than_local,The following statement contains a magic number: var remote = ChangeVector((dbIds[2]' 5' tags[2])' (dbIds[1]' 5' tags[1])' (dbIds[0]' 5' tags[0]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_all_remote_etags_large_than_local,The following statement contains a magic number: var remote = ChangeVector((dbIds[2]' 5' tags[2])' (dbIds[1]' 5' tags[1])' (dbIds[0]' 5' tags[0]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_all_remote_etags_large_than_local,The following statement contains a magic number: var remote = ChangeVector((dbIds[2]' 5' tags[2])' (dbIds[1]' 5' tags[1])' (dbIds[0]' 5' tags[0]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_all_remote_etags_large_than_local,The following statement contains a magic number: var remote = ChangeVector((dbIds[2]' 5' tags[2])' (dbIds[1]' 5' tags[1])' (dbIds[0]' 5' tags[0]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_all_remote_etags_large_than_local,The following statement contains a magic number: var remote = ChangeVector((dbIds[2]' 5' tags[2])' (dbIds[1]' 5' tags[1])' (dbIds[0]' 5' tags[0]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_all_local_etags_large_than_remote,The following statement contains a magic number: var tags = Enumerable.Range(0' 3).ToArray();
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_all_local_etags_large_than_remote,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 1' tags[0])' (dbIds[1]' 1' tags[1])' (dbIds[2]' 1' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_all_local_etags_large_than_remote,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 1' tags[0])' (dbIds[1]' 1' tags[1])' (dbIds[2]' 1' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_all_local_etags_large_than_remote,The following statement contains a magic number: var local = ChangeVector((dbIds[0]' 5' tags[0])' (dbIds[1]' 5' tags[1]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_all_local_etags_large_than_remote,The following statement contains a magic number: var local = ChangeVector((dbIds[0]' 5' tags[0])' (dbIds[1]' 5' tags[1]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_all_local_etags_large_than_remote,The following statement contains a magic number: var tags = Enumerable.Range(0' 3).ToArray();
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_all_local_etags_large_than_remote,The following statement contains a magic number: var remote = ChangeVector((dbIds[2]' 1' tags[2])' (dbIds[1]' 1' tags[1])' (dbIds[0]' 1' tags[0]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_all_local_etags_large_than_remote,The following statement contains a magic number: var remote = ChangeVector((dbIds[2]' 1' tags[2])' (dbIds[1]' 1' tags[1])' (dbIds[0]' 1' tags[0]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_all_local_etags_large_than_remote,The following statement contains a magic number: var local = ChangeVector((dbIds[0]' 5' tags[0])' (dbIds[1]' 5' tags[1]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_all_local_etags_large_than_remote,The following statement contains a magic number: var local = ChangeVector((dbIds[0]' 5' tags[0])' (dbIds[1]' 5' tags[1]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_some_local_etags_large_than_remote,The following statement contains a magic number: var tags = Enumerable.Range(0' 3).ToArray();
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_some_local_etags_large_than_remote,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 1' tags[0])' (dbIds[1]' 5' tags[1])' (dbIds[2]' 1' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_some_local_etags_large_than_remote,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 1' tags[0])' (dbIds[1]' 5' tags[1])' (dbIds[2]' 1' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_some_local_etags_large_than_remote,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 1' tags[0])' (dbIds[1]' 5' tags[1])' (dbIds[2]' 1' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_same_order_and_some_local_etags_large_than_remote,The following statement contains a magic number: var local = ChangeVector((dbIds[0]' 5' tags[0])' (dbIds[1]' 1' tags[1]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_some_local_etags_large_than_remote,The following statement contains a magic number: var tags = Enumerable.Range(0' 3).ToArray();
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_some_local_etags_large_than_remote,The following statement contains a magic number: var remote = ChangeVector((dbIds[2]' 1' tags[2])' (dbIds[1]' 5' tags[1])' (dbIds[0]' 1' tags[0]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_some_local_etags_large_than_remote,The following statement contains a magic number: var remote = ChangeVector((dbIds[2]' 1' tags[2])' (dbIds[1]' 5' tags[1])' (dbIds[0]' 1' tags[0]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_some_local_etags_large_than_remote,The following statement contains a magic number: var remote = ChangeVector((dbIds[2]' 1' tags[2])' (dbIds[1]' 5' tags[1])' (dbIds[0]' 1' tags[0]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Remote_has_entries_not_in_local_with_entries_not_same_order_and_some_local_etags_large_than_remote,The following statement contains a magic number: var local = ChangeVector((dbIds[0]' 5' tags[0])' (dbIds[1]' 1' tags[1]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_equal_length_same_order_should_work,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' 10' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_longer_same_order_should_work_all_remote_etags_larger,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' 10' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_longer_same_order_should_work_all_remote_etags_larger,The following statement contains a magic number: length - i >= 5
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_longer_same_order_should_work_all_remote_etags_smaller,The following statement contains a magic number: localVectorData.Add((dbIds[i]' 10' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_longer_same_order_should_work_all_remote_etags_smaller,The following statement contains a magic number: length - i >= 5
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_longer_same_order_should_work_some_remote_etags_smaller_and_some_larger,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' i % 3 == 0 ? 10 : 1' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_longer_same_order_should_work_some_remote_etags_smaller_and_some_larger,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' i % 3 == 0 ? 10 : 1' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_longer_same_order_should_work_some_remote_etags_smaller_and_some_larger,The following statement contains a magic number: localVectorData.Add((dbIds[i]' i % 2 == 0 ? 10 : 1' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_longer_same_order_should_work_some_remote_etags_smaller_and_some_larger,The following statement contains a magic number: localVectorData.Add((dbIds[i]' i % 2 == 0 ? 10 : 1' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_longer_same_order_should_work_some_remote_etags_smaller_and_some_larger,The following statement contains a magic number: length - i >= 5
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_local_longer_same_order_should_work,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' 10' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_local_longer_same_order_should_work,The following statement contains a magic number: length - i >= 5
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_equal_length_different_order_should_work_all_remote_larger,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' 10' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_equal_length_different_order_should_work_all_local_larger,The following statement contains a magic number: localVectorData.Add((dbIds[j]' 10' tags[j]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_equal_length_different_order_should_work_some_local_larger_some_smaller,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' i % 4 == 0 ? 11 : 1' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_equal_length_different_order_should_work_some_local_larger_some_smaller,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' i % 4 == 0 ? 11 : 1' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_equal_length_different_order_should_work_some_local_larger_some_smaller,The following statement contains a magic number: localVectorData.Add((dbIds[j]' 10' tags[j]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_longer_different_order_should_work_some_local_larger_some_smaller,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' i % 2 == 0 ? 11 : 1' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_longer_different_order_should_work_some_local_larger_some_smaller,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' i % 2 == 0 ? 11 : 1' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_longer_different_order_should_work_some_local_larger_some_smaller,The following statement contains a magic number: localVectorData.Add((dbIds[j]' 10' tags[j]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_longer_different_order_should_work_some_local_larger_some_smaller,The following statement contains a magic number: j >= 10
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_local_longer_different_order_should_work_some_local_larger_some_smaller,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' i % 4 == 0 ? 11 : 1' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_local_longer_different_order_should_work_some_local_larger_some_smaller,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' i % 4 == 0 ? 11 : 1' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_local_longer_different_order_should_work_some_local_larger_some_smaller,The following statement contains a magic number: length - i >= 10
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_local_longer_different_order_should_work_some_local_larger_some_smaller,The following statement contains a magic number: localVectorData.Add((dbIds[j]' 10' tags[j]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_larger_different_order_should_work_all_local_larger,The following statement contains a magic number: localVectorData.Add((dbIds[j]' 10' tags[j]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_larger_different_order_should_work_all_local_larger,The following statement contains a magic number: j >= 10
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_local_larger_different_order_should_work_all_local_larger,The following statement contains a magic number: length - i >= 10
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_local_larger_different_order_should_work_all_local_larger,The following statement contains a magic number: localVectorData.Add((dbIds[j]' 10' tags[j]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_larger_different_order_should_work_all_remote_larger,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' 10' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_remote_larger_different_order_should_work_all_remote_larger,The following statement contains a magic number: j >= 10
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_local_larger_different_order_should_work_all_remote_larger,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' 10' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Very_large_change_vectors_local_larger_different_order_should_work_all_remote_larger,The following statement contains a magic number: length - i >= 10
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Only_one_etag_is_larger_at_remote,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' i == length / 2 ? 15 : 5' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Only_one_etag_is_larger_at_remote,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' i == length / 2 ? 15 : 5' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Only_one_etag_is_larger_at_remote,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' i == length / 2 ? 15 : 5' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Only_one_etag_is_larger_at_remote,The following statement contains a magic number: localVectorData.Add((dbIds[j]' 10' tags[j]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Only_one_etag_is_larger_at_local,The following statement contains a magic number: remoteVectorData.Add((dbIds[i]' 10' tags[i]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Only_one_etag_is_larger_at_local,The following statement contains a magic number: localVectorData.Add((dbIds[j]' i == length / 2 ? 15 : 5' tags[j]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Only_one_etag_is_larger_at_local,The following statement contains a magic number: localVectorData.Add((dbIds[j]' i == length / 2 ? 15 : 5' tags[j]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Only_one_etag_is_larger_at_local,The following statement contains a magic number: localVectorData.Add((dbIds[j]' i == length / 2 ? 15 : 5' tags[j]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_smaller,The following statement contains a magic number: var tags = Enumerable.Range(0' 3).ToArray();
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_smaller,The following statement contains a magic number: var remote = ChangeVector((dbIds[1]' 1' tags[1])' (dbIds[2]' 1' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_smaller,The following statement contains a magic number: var remote = ChangeVector((dbIds[1]' 1' tags[1])' (dbIds[2]' 1' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_smaller,The following statement contains a magic number: var local = ChangeVector((dbIds[0]' 10' tags[0])' (dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_smaller,The following statement contains a magic number: var local = ChangeVector((dbIds[0]' 10' tags[0])' (dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_smaller,The following statement contains a magic number: var local = ChangeVector((dbIds[0]' 10' tags[0])' (dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_smaller,The following statement contains a magic number: var local = ChangeVector((dbIds[0]' 10' tags[0])' (dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_smaller,The following statement contains a magic number: var local = ChangeVector((dbIds[0]' 10' tags[0])' (dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_smaller,The following statement contains a magic number: var tags = Enumerable.Range(0' 3).ToArray();
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_smaller,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 1' tags[0])' (dbIds[1]' 1' tags[1])' (dbIds[2]' 1' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_smaller,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 1' tags[0])' (dbIds[1]' 1' tags[1])' (dbIds[2]' 1' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_smaller,The following statement contains a magic number: var local = ChangeVector((dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_smaller,The following statement contains a magic number: var local = ChangeVector((dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_smaller,The following statement contains a magic number: var local = ChangeVector((dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_smaller,The following statement contains a magic number: var local = ChangeVector((dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_larger,The following statement contains a magic number: var tags = Enumerable.Range(0' 3).ToArray();
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_larger,The following statement contains a magic number: var remote = ChangeVector((dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_larger,The following statement contains a magic number: var remote = ChangeVector((dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_larger,The following statement contains a magic number: var remote = ChangeVector((dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_larger,The following statement contains a magic number: var remote = ChangeVector((dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_larger,The following statement contains a magic number: var local = ChangeVector((dbIds[0]' 1' tags[0])' (dbIds[1]' 1' tags[1])' (dbIds[2]' 1' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_remote_smaller_with_remote_etags_larger,The following statement contains a magic number: var local = ChangeVector((dbIds[0]' 1' tags[0])' (dbIds[1]' 1' tags[1])' (dbIds[2]' 1' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_larger,The following statement contains a magic number: var tags = Enumerable.Range(0' 3).ToArray();
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_larger,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 10' tags[0])' (dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_larger,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 10' tags[0])' (dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_larger,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 10' tags[0])' (dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_larger,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 10' tags[0])' (dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_larger,The following statement contains a magic number: var remote = ChangeVector((dbIds[0]' 10' tags[0])' (dbIds[1]' 10' tags[1])' (dbIds[2]' 10' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_larger,The following statement contains a magic number: var local = ChangeVector((dbIds[1]' 1' tags[1])' (dbIds[2]' 1' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,Different_change_vectors_with_different_prefix_local_smaller_with_remote_etags_larger,The following statement contains a magic number: var local = ChangeVector((dbIds[1]' 1' tags[1])' (dbIds[2]' 1' tags[2]));
Magic Number,FastTests.Server.Basic,ChangeVectorConflictStatusTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\ChangeVectorConflictStatusTests.cs,ToChangeVector_should_properly_parse_change_vector,The following statement contains a magic number: var changeVector = new[]              {                  new ChangeVectorEntry                  {                      DbId = DbId()'                      Etag = 1'                      NodeTag = 0                  }'                  new ChangeVectorEntry                  {                      DbId = DbId()'                      Etag = 1'                      NodeTag = 1                  }'                  new ChangeVectorEntry                  {                      DbId = DbId()'                      Etag = 1'                      NodeTag = 2                  }              };
Magic Number,FastTests.Server.Basic,IdleOperations,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\IdleOperations.cs,Should_Cleanup_Resources,The following statement contains a magic number: i % 2 == 0
Magic Number,FastTests.Server.Basic,IdleOperations,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\IdleOperations.cs,Should_Cleanup_Resources,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Basic,IdleOperations,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\IdleOperations.cs,Should_Cleanup_Resources,The following statement contains a magic number: i % 2 == 1
Magic Number,FastTests.Server.Basic,IdleOperations,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\IdleOperations.cs,Should_Cleanup_Resources,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Basic,MaxSecondsForTaskToWaitForDatabaseToLoad,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\MaxSecondsForTaskToWaitForDatabaseToLoad.cs,Should_not_throw_when_there_no_timeout,The following statement contains a magic number: Server.Configuration.Server.MaxTimeForTaskToWaitForDatabaseToLoad = new TimeSetting(10' TimeUnit.Seconds);
Magic Number,FastTests.Server.Basic,MaxSecondsForTaskToWaitForDatabaseToLoad,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\MaxSecondsForTaskToWaitForDatabaseToLoad.cs,Should_not_throw_when_there_no_timeout,The following statement contains a magic number: int retries = 3;
Magic Number,FastTests.Server.Basic,MaxSecondsForTaskToWaitForDatabaseToLoad,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\MaxSecondsForTaskToWaitForDatabaseToLoad.cs,Should_not_throw_when_there_no_timeout,The following statement contains a magic number: i < 3
Magic Number,FastTests.Server.Basic,MaxSecondsForTaskToWaitForDatabaseToLoad,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Basic\MaxSecondsForTaskToWaitForDatabaseToLoad.cs,Should_throw_when_there_is_timeout,The following statement contains a magic number: Server.ServerStore.DatabasesLandlord.OnDatabaseLoaded += s =>              {                  mre.Set();                  Thread.Sleep(100);              };
Magic Number,FastTests.Server.Documents,Collections,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Collections.cs,CanSurviveRestart,The following statement contains a magic number: Assert.Equal(2' collectionStats.Collections.Count);
Magic Number,FastTests.Server.Documents,Collections,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Collections.cs,CanSurviveRestart,The following statement contains a magic number: Assert.Equal(2' orders.Value);
Magic Number,FastTests.Server.Documents,Collections,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Collections.cs,CanSurviveRestart,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,FastTests.Server.Documents,Collections,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Collections.cs,CanSurviveRestart,The following statement contains a magic number: i < 15
Magic Number,FastTests.Server.Documents,Collections,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Collections.cs,CanSurviveRestart,The following statement contains a magic number: Assert.Equal(2' collectionStats.Collections.Count);
Magic Number,FastTests.Server.Documents,Collections,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Collections.cs,CanSurviveRestart,The following statement contains a magic number: Assert.Equal(2' orders.Value);
Magic Number,FastTests.Server.Documents,DocumentIdWorkerTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentIdWorkerTests.cs,GetLower_WhenStringAscii_ShouldNotModifyTheValueAcceptToLower,The following statement contains a magic number: i <= 127
Magic Number,FastTests.Server.Documents,DocumentsCrud,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentsCrud.cs,CanQueryByGlobalEtag,The following statement contains a magic number: var documents = _documentDatabase.DocumentsStorage.GetDocumentsFrom(ctx' 0' 0' 100).ToList();
Magic Number,FastTests.Server.Documents,DocumentsCrud,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentsCrud.cs,CanQueryByGlobalEtag,The following statement contains a magic number: Assert.Equal(3' documents.Count);
Magic Number,FastTests.Server.Documents,DocumentsCrud,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentsCrud.cs,CanQueryByGlobalEtag,The following statement contains a magic number: documents[2].Data.TryGet("Name"' out name);
Magic Number,FastTests.Server.Documents,DocumentsCrud,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentsCrud.cs,EtagsArePersisted,The following statement contains a magic number: Assert.Equal(2' putResult.Etag);
Magic Number,FastTests.Server.Documents,DocumentsCrud,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentsCrud.cs,EtagsArePersistedWithDeletes,The following statement contains a magic number: Assert.Equal(3' putResult.Etag);
Magic Number,FastTests.Server.Documents,DocumentsCrud,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentsCrud.cs,CanQueryByPrefix,The following statement contains a magic number: var documents = _documentDatabase.DocumentsStorage.GetDocumentsStartingWith(ctx' "users/"' null' null' null' 0' 100).ToList();
Magic Number,FastTests.Server.Documents,DocumentsCrud,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentsCrud.cs,CanQueryByPrefix,The following statement contains a magic number: Assert.Equal(2' documents.Count);
Magic Number,FastTests.Server.Documents,DocumentsCrud,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentsCrud.cs,CanQueryByCollectionEtag,The following statement contains a magic number: var documents = _documentDatabase.DocumentsStorage.GetDocumentsFrom(ctx' "Users"' 0' 0' 10).ToList();
Magic Number,FastTests.Server.Documents,DocumentsCrud,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentsCrud.cs,CanQueryByCollectionEtag,The following statement contains a magic number: Assert.Equal(2' documents.Count);
Magic Number,FastTests.Server.Documents,DocumentsCrud,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentsCrud.cs,PutDocumentWithoutId,The following statement contains a magic number: i < 5
Magic Number,FastTests.Server.Documents,DocumentsCrud,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentsCrud.cs,PutDocumentWithoutId,The following statement contains a magic number: var putResult = _documentDatabase.DocumentsStorage.Put(ctx' id + 5' null' doc);
Magic Number,FastTests.Server.Documents,DocumentsCrud,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\DocumentsCrud.cs,PutDocumentWithoutId,The following statement contains a magic number: Assert.True(putResult.Etag >= 5);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanPersist,The following statement contains a magic number: Assert.Equal(2' indexes.Count);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanDeleteInternal,The following statement contains a magic number: Assert.Equal(2' database.IndexStore.GetIndexesForCollection("Users").Count());
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanDeleteInternal,The following statement contains a magic number: Assert.True(SpinWait.SpinUntil(() => Directory.Exists(path1) == false' TimeSpan.FromSeconds(5)));
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanDeleteInternal,The following statement contains a magic number: Assert.True(SpinWait.SpinUntil(() => Directory.Exists(path2) == false' TimeSpan.FromSeconds(5)));
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanResetInternal,The following statement contains a magic number: Assert.Equal(2' indexesAfterReset.Count());
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanResetInternal,The following statement contains a magic number: Assert.Equal(2' indexes.Count);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanResetInternal,The following statement contains a magic number: Assert.Equal(2' indexes.Count);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(2' index.GetLastMappedEtagsForDebug().Values.Min());
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(2' batchStats.MapAttempts);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(2' batchStats.MapSuccesses);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(2' stats.EntriesCount);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(2' stats.MapAttempts);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(2' stats.MapSuccesses);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(2' stats.Collections.First().Value.LastProcessedDocumentEtag);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(3' index.GetLastMappedEtagsForDebug().Values.Min());
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(3' stats.EntriesCount);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(3' stats.MapAttempts);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(3' stats.MapSuccesses);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(3' stats.Collections.First().Value.LastProcessedDocumentEtag);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(4' index.GetLastProcessedTombstonesPerCollection().Values.Min());
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(2' stats.EntriesCount);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(3' stats.MapAttempts);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(3' stats.MapSuccesses);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,SimpleIndexing,The following statement contains a magic number: Assert.Equal(3' stats.Collections.First().Value.LastProcessedDocumentEtag);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,WriteErrors,The following statement contains a magic number: Assert.True(mre.WaitOne(TimeSpan.FromSeconds(15)));
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,WriteErrors,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,WriteErrors,The following statement contains a magic number: Assert.True(SpinWait.SpinUntil(() => index.Status == IndexRunningStatus.Paused' TimeSpan.FromSeconds(5)));
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,Errors,The following statement contains a magic number: Assert.Equal(2' errors.Count);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The following statement contains a magic number: Assert.True(SpinWait.SpinUntil(() => database.IndexStore.GetIndex(indexName) == null' TimeSpan.FromSeconds(15)));
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The following statement contains a magic number: Assert.True(SpinWait.SpinUntil(() => condition(database.IndexStore.GetIndex(indexName))' TimeSpan.FromSeconds(15)));
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanDeleteFaultyIndex,The following statement contains a magic number: Thread.Sleep(16);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,CanDeleteFaultyIndex,The following statement contains a magic number: i < 5
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUseSimpleReduction,The following statement contains a magic number: CreateUsers(db' 2' "Poland");
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUseSimpleReduction,The following statement contains a magic number: Assert.Equal(2L' count);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,MultipleReduceKeys,The following statement contains a magic number: var cts = new CancellationTokenSource(TimeSpan.FromSeconds(60));
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanDelete,The following statement contains a magic number: const long numberOfUsers = 10;
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,DefinitionOfAutoMapReduceIndexIsPersisted,The following statement contains a magic number: Assert.Equal(2' indexes.Count);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,DefinitionOfAutoMapReduceIndexIsPersisted,The following statement contains a magic number: Assert.Equal(2' indexes[1].Definition.MapFields.Count);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanGroupByNestedFieldAndAggregateOnCollection,The following statement contains a magic number: CreateOrders(db' 5' new[] { "Poland"' "Israel" });
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanGroupByNestedFieldAndAggregateOnCollection,The following statement contains a magic number: Assert.Equal(63.6' price' 1);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanGroupByNestedFieldAndAggregateOnCollection,The following statement contains a magic number: Assert.Equal(9L' quantity);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanStoreAndReadReduceStats,The following statement contains a magic number: index._indexStorage.UpdateStats(SystemTime.UtcNow' new IndexingRunStats                  {                      ReduceAttempts = 1000'                      ReduceSuccesses = 900'                      ReduceErrors = 100'                  });
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanStoreAndReadReduceStats,The following statement contains a magic number: index._indexStorage.UpdateStats(SystemTime.UtcNow' new IndexingRunStats                  {                      ReduceAttempts = 1000'                      ReduceSuccesses = 900'                      ReduceErrors = 100'                  });
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanStoreAndReadReduceStats,The following statement contains a magic number: index._indexStorage.UpdateStats(SystemTime.UtcNow' new IndexingRunStats                  {                      ReduceAttempts = 1000'                      ReduceSuccesses = 900'                      ReduceErrors = 100'                  });
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanStoreAndReadReduceStats,The following statement contains a magic number: Assert.Equal(1000' stats.ReduceAttempts);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanStoreAndReadReduceStats,The following statement contains a magic number: Assert.Equal(900' stats.ReduceSuccesses);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanStoreAndReadReduceStats,The following statement contains a magic number: Assert.Equal(100' stats.ReduceErrors);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUpdateByChangingValue,The following statement contains a magic number: CreateUsers(db' 2' "Poland");
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUpdateByChangingValue,The following statement contains a magic number: Assert.Equal(41L' results[0].Data["Age"]);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUpdateByChangingValue,The following statement contains a magic number: Assert.Equal(51L' results[0].Data["Age"]);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUpdateByChangingReduceKey,The following statement contains a magic number: CreateUsers(db' 2' "Poland");
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUpdateByChangingReduceKey,The following statement contains a magic number: Assert.Equal(41L' results[0].Data["Age"]);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUpdateByChangingReduceKey,The following statement contains a magic number: Assert.Equal(2' results.Count);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUpdateByChangingReduceKey,The following statement contains a magic number: Assert.Equal(20L' results[0].Data["Age"]);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,CanUpdateByChangingReduceKey,The following statement contains a magic number: Assert.Equal(21L' results[1].Data["Age"]);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,GroupByMultipleFields,The following statement contains a magic number: CreateOrders(db' 10' employees: new[] { "employees/1"' "employees/2" }' companies: new[] { "companies/1"' "companies/2"' "companies/3" });
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,GroupByMultipleFields,The following statement contains a magic number: Assert.Equal(6' results.Count);
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,GroupByMultipleFields,The following statement contains a magic number: var employeeNumber = i % 2 + 1;
Magic Number,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapReduceIndexing.cs,GroupByMultipleFields,The following statement contains a magic number: var companyNumber = i % 3 + 1;
Magic Number,FastTests.Server.Documents.Indexing,BloomFilterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BloomFilterTests.cs,Basic,The following statement contains a magic number: Assert.Equal(2' filter.Count);
Magic Number,FastTests.Server.Documents.Indexing,BloomFilterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BloomFilterTests.cs,Basic,The following statement contains a magic number: Assert.Equal(2' filter.Count);
Magic Number,FastTests.Server.Documents.Indexing,BloomFilterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BloomFilterTests.cs,CheckWritability,The following statement contains a magic number: Assert.Equal(2' filter.Count);
Magic Number,FastTests.Server.Documents.Indexing,BloomFilterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BloomFilterTests.cs,CheckReadonly,The following statement contains a magic number: tree.Increment("Count64"' 2);
Magic Number,FastTests.Server.Documents.Indexing,BloomFilterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BloomFilterTests.cs,CheckReadonly,The following statement contains a magic number: Assert.Equal(2' collection.Count);
Magic Number,FastTests.Server.Documents.Indexing,BloomFilterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BloomFilterTests.cs,WillExpand,The following statement contains a magic number: i < CollectionOfBloomFilters.BloomFilter32.MaxCapacity * 1.2
Magic Number,FastTests.Server.Documents.Indexing,BloomFilterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BloomFilterTests.cs,WillExpand,The following statement contains a magic number: Assert.Equal(2' collection.Count);
Magic Number,FastTests.Server.Documents.Indexing,BloomFilterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BloomFilterTests.cs,WillExpand,The following statement contains a magic number: Assert.Equal(2' collection.Count);
Magic Number,FastTests.Server.Documents.Indexing,BloomFilterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\BloomFilterTests.cs,CannotMixFilters,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => collection.AddFilter(collection.CreateNewFilter(2' CollectionOfBloomFilters.Mode.X64)));
Magic Number,FastTests.Server.Documents.Indexing,FullTextSearchOnAutoIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\FullTextSearchOnAutoIndex.cs,CanUseFullTextSearchInAutoMapReduceIndex,The following statement contains a magic number: Assert.Equal(2' results[0].Count);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LazyStringValueReaderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LazyStringValueReaderTests.cs,Can_reuse_reader_multiple_times,The following statement contains a magic number: var bytes = RandomString(2000);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LazyStringValueReaderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LazyStringValueReaderTests.cs,Can_reuse_reader_multiple_times,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LazyStringValueReaderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LazyStringValueReaderTests.cs,CompareLazyCompressedStringValue,The following statement contains a magic number: writer.WriteString(new string('c'' 1024 * 1024));
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LazyStringValueReaderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LazyStringValueReaderTests.cs,CompareLazyCompressedStringValue,The following statement contains a magic number: writer.WriteString(new string('c'' 1024 * 1024));
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LazyStringValueReaderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LazyStringValueReaderTests.cs,RandomString,The following statement contains a magic number: var charLength = random.Next(1' 2000);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LazyStringValueReaderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LazyStringValueReaderTests.cs,RandomString,The following statement contains a magic number: c += (char)32;
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LazyStringValueReaderTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LazyStringValueReaderTests.cs,RandomString,The following statement contains a magic number: c < 32
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Returns_null_value_if_property_is_null,The following statement contains a magic number: Assert.Equal(2' _sut.Document.GetFields().Count);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Returns_empty_string_value_if_property_has_empty_string,The following statement contains a magic number: Assert.Equal(2' _sut.Document.GetFields().Count);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_string_value,The following statement contains a magic number: Assert.Equal(2' _sut.Document.GetFields().Count);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_numeric_fields,The following statement contains a magic number: var doc = create_doc(new DynamicJsonValue              {                  ["Weight"] = 70.1'                  ["Age"] = 25'              }' "users/1");
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_numeric_fields,The following statement contains a magic number: var doc = create_doc(new DynamicJsonValue              {                  ["Weight"] = 70.1'                  ["Age"] = 25'              }' "users/1");
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_numeric_fields,The following statement contains a magic number: Assert.Equal(1 + 2 * 3' _sut.Document.GetFields().Count);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_numeric_fields,The following statement contains a magic number: Assert.Equal(1 + 2 * 3' _sut.Document.GetFields().Count);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_numeric_fields,The following statement contains a magic number: Assert.Equal(70.1' weightNumeric.NumericValue);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_numeric_fields,The following statement contains a magic number: Assert.Equal(70L' weightNumeric.NumericValue);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_numeric_fields,The following statement contains a magic number: Assert.Equal(25L' ageNumeric.NumericValue);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_numeric_fields,The following statement contains a magic number: Assert.Equal(25.0' ageNumeric.NumericValue);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_nested_string_value,The following statement contains a magic number: Assert.Equal(2' _sut.Document.GetFields().Count);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_string_value_nested_inside_collection,The following statement contains a magic number: Assert.Equal(4' _sut.Document.GetFields().Count);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_string_value_nested_inside_collection,The following statement contains a magic number: Assert.Equal(2' _sut.Document.GetFields("Friends[].Name").Length);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_string_value_nested_inside_double_nested_collections,The following statement contains a magic number: Assert.Equal(5' _sut.Document.GetFields().Count);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_string_value_nested_inside_double_nested_collections,The following statement contains a magic number: Assert.Equal(3' _sut.Document.GetFields("Companies[].Products[].Name").Length);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_string_value_nested_inside_double_nested_collections,The following statement contains a magic number: Assert.Equal("Optical Mouse V2"' _sut.Document.GetFields("Companies[].Products[].Name")[2].ReaderValue.ReadToEnd());
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_complex_value,The following statement contains a magic number: Assert.Equal(5' _sut.Document.GetFields().Count);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_complex_value,The following statement contains a magic number: Assert.Equal(5' _sut.Document.GetFields().Count);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_array_value,The following statement contains a magic number: Assert.Equal(4' _sut.Document.GetFields().Count);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,LuceneDocumentConverterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\LuceneDocumentConverterTests.cs,Conversion_of_array_having_complex_values,The following statement contains a magic number: Assert.Equal(5' _sut.Document.GetFields().Count);
Magic Number,FastTests.Server.Documents.Indexing.Lucene,UsingUnicode,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Lucene\UsingUnicode.cs,TextEnteredShouldNotBeNormalized,The following statement contains a magic number: Assert.Equal(2' result);
Magic Number,FastTests.Server.Documents.Indexing.MapReduce,ReduceKeyProcessorTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\MapReduce\ReduceKeyProcessorTests.cs,Can_handle_values_of_different_types,The following statement contains a magic number: var sut = new ReduceKeyProcessor(9' bufferPool);
Magic Number,FastTests.Server.Documents.Indexing.MapReduce,ReduceKeyProcessorTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\MapReduce\ReduceKeyProcessorTests.cs,Can_handle_values_of_different_types,The following statement contains a magic number: sut.Process(bsc' new DynamicJsonArray()                  {                      1'                      2'                      null'                      3                  });
Magic Number,FastTests.Server.Documents.Indexing.MapReduce,ReduceKeyProcessorTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\MapReduce\ReduceKeyProcessorTests.cs,Can_handle_values_of_different_types,The following statement contains a magic number: sut.Process(bsc' new DynamicJsonArray()                  {                      1'                      2'                      null'                      3                  });
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,The_easiest_static_index,The following statement contains a magic number: Assert.Equal(2' batchStats.MapAttempts);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,The_easiest_static_index,The following statement contains a magic number: Assert.Equal(2' batchStats.MapSuccesses);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,The_easiest_static_index,The following statement contains a magic number: Assert.Equal(2' queryResult.Results.Count);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,CanInheritConfiguration,The following statement contains a magic number: Assert.Equal(33' (int)index.Configuration.MapTimeout.AsTimeSpan.TotalSeconds);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,IndexDefinitionSerialization,The following statement contains a magic number: indexDefinition.Fields = new Dictionary<string' IndexFieldOptions>              {                  {"f1"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Geography'                              Units = SpatialUnits.Miles'                              MinY = 3'                              MinX = 5'                              MaxY = 2'                              MaxX = 5'                              Strategy = SpatialSearchStrategy.QuadPrefixTree'                              MaxTreeLevel = 2                          }'                          Indexing = FieldIndexing.No'                          Suggestions = true'                          Storage = FieldStorage.Yes'                          Analyzer = "a1"'                          TermVector = FieldTermVector.WithPositionsAndOffsets                      }                  }'                  {"f2"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Cartesian'                              Units = SpatialUnits.Kilometers'                              MinY = 5'                              MinX = 2'                              MaxY = 9'                              MaxX = 3'                              Strategy = SpatialSearchStrategy.BoundingBox'                              MaxTreeLevel = 5                          }'                          Indexing = FieldIndexing.Exact'                          Suggestions = false'                          Storage = FieldStorage.No'                          Analyzer = "a2"'                          TermVector = FieldTermVector.WithPositions                      }                  }              };
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,IndexDefinitionSerialization,The following statement contains a magic number: indexDefinition.Fields = new Dictionary<string' IndexFieldOptions>              {                  {"f1"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Geography'                              Units = SpatialUnits.Miles'                              MinY = 3'                              MinX = 5'                              MaxY = 2'                              MaxX = 5'                              Strategy = SpatialSearchStrategy.QuadPrefixTree'                              MaxTreeLevel = 2                          }'                          Indexing = FieldIndexing.No'                          Suggestions = true'                          Storage = FieldStorage.Yes'                          Analyzer = "a1"'                          TermVector = FieldTermVector.WithPositionsAndOffsets                      }                  }'                  {"f2"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Cartesian'                              Units = SpatialUnits.Kilometers'                              MinY = 5'                              MinX = 2'                              MaxY = 9'                              MaxX = 3'                              Strategy = SpatialSearchStrategy.BoundingBox'                              MaxTreeLevel = 5                          }'                          Indexing = FieldIndexing.Exact'                          Suggestions = false'                          Storage = FieldStorage.No'                          Analyzer = "a2"'                          TermVector = FieldTermVector.WithPositions                      }                  }              };
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,IndexDefinitionSerialization,The following statement contains a magic number: indexDefinition.Fields = new Dictionary<string' IndexFieldOptions>              {                  {"f1"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Geography'                              Units = SpatialUnits.Miles'                              MinY = 3'                              MinX = 5'                              MaxY = 2'                              MaxX = 5'                              Strategy = SpatialSearchStrategy.QuadPrefixTree'                              MaxTreeLevel = 2                          }'                          Indexing = FieldIndexing.No'                          Suggestions = true'                          Storage = FieldStorage.Yes'                          Analyzer = "a1"'                          TermVector = FieldTermVector.WithPositionsAndOffsets                      }                  }'                  {"f2"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Cartesian'                              Units = SpatialUnits.Kilometers'                              MinY = 5'                              MinX = 2'                              MaxY = 9'                              MaxX = 3'                              Strategy = SpatialSearchStrategy.BoundingBox'                              MaxTreeLevel = 5                          }'                          Indexing = FieldIndexing.Exact'                          Suggestions = false'                          Storage = FieldStorage.No'                          Analyzer = "a2"'                          TermVector = FieldTermVector.WithPositions                      }                  }              };
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,IndexDefinitionSerialization,The following statement contains a magic number: indexDefinition.Fields = new Dictionary<string' IndexFieldOptions>              {                  {"f1"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Geography'                              Units = SpatialUnits.Miles'                              MinY = 3'                              MinX = 5'                              MaxY = 2'                              MaxX = 5'                              Strategy = SpatialSearchStrategy.QuadPrefixTree'                              MaxTreeLevel = 2                          }'                          Indexing = FieldIndexing.No'                          Suggestions = true'                          Storage = FieldStorage.Yes'                          Analyzer = "a1"'                          TermVector = FieldTermVector.WithPositionsAndOffsets                      }                  }'                  {"f2"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Cartesian'                              Units = SpatialUnits.Kilometers'                              MinY = 5'                              MinX = 2'                              MaxY = 9'                              MaxX = 3'                              Strategy = SpatialSearchStrategy.BoundingBox'                              MaxTreeLevel = 5                          }'                          Indexing = FieldIndexing.Exact'                          Suggestions = false'                          Storage = FieldStorage.No'                          Analyzer = "a2"'                          TermVector = FieldTermVector.WithPositions                      }                  }              };
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,IndexDefinitionSerialization,The following statement contains a magic number: indexDefinition.Fields = new Dictionary<string' IndexFieldOptions>              {                  {"f1"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Geography'                              Units = SpatialUnits.Miles'                              MinY = 3'                              MinX = 5'                              MaxY = 2'                              MaxX = 5'                              Strategy = SpatialSearchStrategy.QuadPrefixTree'                              MaxTreeLevel = 2                          }'                          Indexing = FieldIndexing.No'                          Suggestions = true'                          Storage = FieldStorage.Yes'                          Analyzer = "a1"'                          TermVector = FieldTermVector.WithPositionsAndOffsets                      }                  }'                  {"f2"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Cartesian'                              Units = SpatialUnits.Kilometers'                              MinY = 5'                              MinX = 2'                              MaxY = 9'                              MaxX = 3'                              Strategy = SpatialSearchStrategy.BoundingBox'                              MaxTreeLevel = 5                          }'                          Indexing = FieldIndexing.Exact'                          Suggestions = false'                          Storage = FieldStorage.No'                          Analyzer = "a2"'                          TermVector = FieldTermVector.WithPositions                      }                  }              };
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,IndexDefinitionSerialization,The following statement contains a magic number: indexDefinition.Fields = new Dictionary<string' IndexFieldOptions>              {                  {"f1"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Geography'                              Units = SpatialUnits.Miles'                              MinY = 3'                              MinX = 5'                              MaxY = 2'                              MaxX = 5'                              Strategy = SpatialSearchStrategy.QuadPrefixTree'                              MaxTreeLevel = 2                          }'                          Indexing = FieldIndexing.No'                          Suggestions = true'                          Storage = FieldStorage.Yes'                          Analyzer = "a1"'                          TermVector = FieldTermVector.WithPositionsAndOffsets                      }                  }'                  {"f2"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Cartesian'                              Units = SpatialUnits.Kilometers'                              MinY = 5'                              MinX = 2'                              MaxY = 9'                              MaxX = 3'                              Strategy = SpatialSearchStrategy.BoundingBox'                              MaxTreeLevel = 5                          }'                          Indexing = FieldIndexing.Exact'                          Suggestions = false'                          Storage = FieldStorage.No'                          Analyzer = "a2"'                          TermVector = FieldTermVector.WithPositions                      }                  }              };
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,IndexDefinitionSerialization,The following statement contains a magic number: indexDefinition.Fields = new Dictionary<string' IndexFieldOptions>              {                  {"f1"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Geography'                              Units = SpatialUnits.Miles'                              MinY = 3'                              MinX = 5'                              MaxY = 2'                              MaxX = 5'                              Strategy = SpatialSearchStrategy.QuadPrefixTree'                              MaxTreeLevel = 2                          }'                          Indexing = FieldIndexing.No'                          Suggestions = true'                          Storage = FieldStorage.Yes'                          Analyzer = "a1"'                          TermVector = FieldTermVector.WithPositionsAndOffsets                      }                  }'                  {"f2"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Cartesian'                              Units = SpatialUnits.Kilometers'                              MinY = 5'                              MinX = 2'                              MaxY = 9'                              MaxX = 3'                              Strategy = SpatialSearchStrategy.BoundingBox'                              MaxTreeLevel = 5                          }'                          Indexing = FieldIndexing.Exact'                          Suggestions = false'                          Storage = FieldStorage.No'                          Analyzer = "a2"'                          TermVector = FieldTermVector.WithPositions                      }                  }              };
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,IndexDefinitionSerialization,The following statement contains a magic number: indexDefinition.Fields = new Dictionary<string' IndexFieldOptions>              {                  {"f1"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Geography'                              Units = SpatialUnits.Miles'                              MinY = 3'                              MinX = 5'                              MaxY = 2'                              MaxX = 5'                              Strategy = SpatialSearchStrategy.QuadPrefixTree'                              MaxTreeLevel = 2                          }'                          Indexing = FieldIndexing.No'                          Suggestions = true'                          Storage = FieldStorage.Yes'                          Analyzer = "a1"'                          TermVector = FieldTermVector.WithPositionsAndOffsets                      }                  }'                  {"f2"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Cartesian'                              Units = SpatialUnits.Kilometers'                              MinY = 5'                              MinX = 2'                              MaxY = 9'                              MaxX = 3'                              Strategy = SpatialSearchStrategy.BoundingBox'                              MaxTreeLevel = 5                          }'                          Indexing = FieldIndexing.Exact'                          Suggestions = false'                          Storage = FieldStorage.No'                          Analyzer = "a2"'                          TermVector = FieldTermVector.WithPositions                      }                  }              };
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,IndexDefinitionSerialization,The following statement contains a magic number: indexDefinition.Fields = new Dictionary<string' IndexFieldOptions>              {                  {"f1"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Geography'                              Units = SpatialUnits.Miles'                              MinY = 3'                              MinX = 5'                              MaxY = 2'                              MaxX = 5'                              Strategy = SpatialSearchStrategy.QuadPrefixTree'                              MaxTreeLevel = 2                          }'                          Indexing = FieldIndexing.No'                          Suggestions = true'                          Storage = FieldStorage.Yes'                          Analyzer = "a1"'                          TermVector = FieldTermVector.WithPositionsAndOffsets                      }                  }'                  {"f2"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Cartesian'                              Units = SpatialUnits.Kilometers'                              MinY = 5'                              MinX = 2'                              MaxY = 9'                              MaxX = 3'                              Strategy = SpatialSearchStrategy.BoundingBox'                              MaxTreeLevel = 5                          }'                          Indexing = FieldIndexing.Exact'                          Suggestions = false'                          Storage = FieldStorage.No'                          Analyzer = "a2"'                          TermVector = FieldTermVector.WithPositions                      }                  }              };
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,IndexDefinitionSerialization,The following statement contains a magic number: indexDefinition.Fields = new Dictionary<string' IndexFieldOptions>              {                  {"f1"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Geography'                              Units = SpatialUnits.Miles'                              MinY = 3'                              MinX = 5'                              MaxY = 2'                              MaxX = 5'                              Strategy = SpatialSearchStrategy.QuadPrefixTree'                              MaxTreeLevel = 2                          }'                          Indexing = FieldIndexing.No'                          Suggestions = true'                          Storage = FieldStorage.Yes'                          Analyzer = "a1"'                          TermVector = FieldTermVector.WithPositionsAndOffsets                      }                  }'                  {"f2"' new IndexFieldOptions                      {                          Spatial = new SpatialOptions                          {                              Type = SpatialFieldType.Cartesian'                              Units = SpatialUnits.Kilometers'                              MinY = 5'                              MinX = 2'                              MaxY = 9'                              MaxX = 3'                              Strategy = SpatialSearchStrategy.BoundingBox'                              MaxTreeLevel = 5                          }'                          Indexing = FieldIndexing.Exact'                          Suggestions = false'                          Storage = FieldStorage.No'                          Analyzer = "a2"'                          TermVector = FieldTermVector.WithPositions                      }                  }              };
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,StalenessCalculationShouldWorkForAllDocsIndexes,The following statement contains a magic number: Assert.Equal(2' batchStats.MapAttempts);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,StalenessCalculationShouldWorkForAllDocsIndexes,The following statement contains a magic number: Assert.Equal(2' batchStats.MapSuccesses);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,NumberOfDocumentsAndTombstonesToProcessShouldBeCalculatedCorrectly,The following statement contains a magic number: Assert.Equal(2' progress.Collections["Users"].NumberOfDocumentsToProcess);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,NumberOfDocumentsAndTombstonesToProcessShouldBeCalculatedCorrectly,The following statement contains a magic number: Assert.Equal(2' progress.Collections["Users"].TotalNumberOfDocuments);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,NumberOfDocumentsAndTombstonesToProcessShouldBeCalculatedCorrectly,The following statement contains a magic number: Assert.Equal(2' progress.Collections["Users"].LastProcessedDocumentEtag);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,NumberOfDocumentsAndTombstonesToProcessShouldBeCalculatedCorrectly,The following statement contains a magic number: Assert.Equal(2' progress.Collections["Users"].TotalNumberOfDocuments);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,NumberOfDocumentsAndTombstonesToProcessShouldBeCalculatedCorrectly,The following statement contains a magic number: Assert.Equal(2' progress.Collections["Users"].LastProcessedDocumentEtag);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,NumberOfDocumentsAndTombstonesToProcessShouldBeCalculatedCorrectly,The following statement contains a magic number: Assert.Equal(2' progress.Collections["Users"].TotalNumberOfDocuments);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,NumberOfDocumentsAndTombstonesToProcessShouldBeCalculatedCorrectly,The following statement contains a magic number: Assert.Equal(5' progress.Collections["Users"].LastProcessedDocumentEtag);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,NumberOfDocumentsAndTombstonesToProcessShouldBeCalculatedCorrectly,The following statement contains a magic number: Assert.Equal(4' progress.Collections["Users"].LastProcessedTombstoneEtag);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapIndexing.cs,NumberOfDocumentsAndTombstonesToProcessShouldBeCalculatedCorrectly,The following statement contains a magic number: Assert.Equal(2' progress.Collections["Users"].TotalNumberOfDocuments);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapReduceIndexing.cs,The_simpliest_static_map_reduce_index,The following statement contains a magic number: Assert.Equal(2' batchStats.MapAttempts);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapReduceIndexing.cs,The_simpliest_static_map_reduce_index,The following statement contains a magic number: Assert.Equal(2' batchStats.MapSuccesses);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapReduceIndexing.cs,The_simpliest_static_map_reduce_index,The following statement contains a magic number: Assert.Equal(2' batchStats.ReduceAttempts);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapReduceIndexing.cs,The_simpliest_static_map_reduce_index,The following statement contains a magic number: Assert.Equal(2' batchStats.ReduceSuccesses);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapReduceIndexing.cs,The_simpliest_static_map_reduce_index,The following statement contains a magic number: Assert.Equal(2L' results[0].Data["CountInteger"]);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapReduceIndexing.cs,The_simpliest_static_map_reduce_index,The following statement contains a magic number: Assert.Equal(2.0' (LazyNumberValue)results[0].Data["CountDouble"]);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapReduceIndexing.cs,The_simpliest_static_map_reduce_index,The following statement contains a magic number: Assert.Equal(2L' results[0].Data["CastedInteger"]);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapReduceIndexing.cs,CanPersist,The following statement contains a magic number: Assert.Equal(2' indexes[0].Definition.MapFields.Count);
Magic Number,FastTests.Server.Documents.Indexing.Static,BasicStaticMapReduceIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\BasicStaticMapReduceIndexing.cs,CanPersist,The following statement contains a magic number: Assert.Equal(3' indexes[1].Definition.MapFields.Count);
Magic Number,FastTests.Server.Documents.Indexing.Static,DynamicBlittableJsonTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\DynamicBlittableJsonTests.cs,Can_get_simple_values,The following statement contains a magic number: Assert.Equal(22.0' user.Age);
Magic Number,FastTests.Server.Documents.Indexing.Static,DynamicBlittableJsonTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\DynamicBlittableJsonTests.cs,Can_get_simple_values,The following statement contains a magic number: Assert.Equal(2' user.Friends.Length);
Magic Number,FastTests.Server.Documents.Indexing.Static,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\JavaScriptIndexTests.cs,CanUseIdMethodInJavascriptIndex,The following statement contains a magic number: i < 20
Magic Number,FastTests.Server.Documents.Indexing.Static,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\JavaScriptIndexTests.cs,CanUseIdMethodInJavascriptIndex,The following statement contains a magic number: Assert.Equal(10' ids.Count);
Magic Number,FastTests.Server.Documents.Indexing.Static,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\JavaScriptIndexTests.cs,CanUseIdMethodInJavascriptIndex,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Indexing.Static,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\JavaScriptIndexTests.cs,CanUseGetMetadataMethodInJavascriptIndex,The following statement contains a magic number: i < 20
Magic Number,FastTests.Server.Documents.Indexing.Static,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\JavaScriptIndexTests.cs,CanUseGetMetadataMethodInJavascriptIndex,The following statement contains a magic number: Assert.Equal(10' ids.Count);
Magic Number,FastTests.Server.Documents.Indexing.Static,JavaScriptIndexTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\JavaScriptIndexTests.cs,CanUseGetMetadataMethodInJavascriptIndex,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryDirectly,The following statement contains a magic number: session.Store(new User()                      {                          Name = "arek"'                          Age = 32'                      });
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryDirectly,The following statement contains a magic number: session.Store(new User()                      {                          Name = "joe"'                          Age = 33                      });
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryDirectly,The following statement contains a magic number: Assert.Equal(2' users.Count);
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryDirectly,The following statement contains a magic number: users = session.Query<User' IndexReturningDictionary_MethodSyntax>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age == 32).ToList();
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryDirectly,The following statement contains a magic number: Assert.Equal(2' users.Count);
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryDirectly,The following statement contains a magic number: users = session.Query<User' IndexReturningDictionary_QuerySyntax>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age == 32).ToList();
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanMapReduceIndexDictionaryDirectly,The following statement contains a magic number: session.Store(new User()                      {                          Name = "arek"'                          Age = 32                      });
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanMapReduceIndexDictionaryDirectly,The following statement contains a magic number: session.Store(new User()                      {                          Name = "joe"'                          Age = 32                      });
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanMapReduceIndexDictionaryDirectly,The following statement contains a magic number: Assert.Equal(2' results[0].Count);
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanMapReduceIndexDictionaryDirectly,The following statement contains a magic number: Assert.Equal(32' results[0].Age);
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanMapReduceIndexDictionaryDirectly,The following statement contains a magic number: Assert.Equal(2' results[0].Count);
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanMapReduceIndexDictionaryDirectly,The following statement contains a magic number: Assert.Equal(32' results[0].Age);
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryWithComplexObjectsDirectly,The following statement contains a magic number: session.Store(new PersonWithAddress()                      {                          Name = "doe"'                          Address = new Address()                          {                              City = "LA"'                              Country = "USA"'                              ZipCode = 2                          }                      });
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryWithComplexObjectsDirectly,The following statement contains a magic number: Assert.Equal(2' people.Count);
Magic Number,FastTests.Server.Documents.Indexing.Static,RavenDB_11687,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Static\RavenDB_11687.cs,CanIndexDictionaryWithComplexObjectsDirectly,The following statement contains a magic number: Assert.Equal(2' people.Count);
Magic Number,FastTests.Server.Documents.Operations,BasicOperationsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Operations\BasicOperationsTests.cs,Can_notify_about_operations_progress_and_completion,The following statement contains a magic number: var token = new OperationCancelToken(TimeSpan.FromMinutes(2)' CancellationToken.None);
Magic Number,FastTests.Server.Documents.Operations,BasicOperationsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Operations\BasicOperationsTests.cs,Can_notify_about_operations_progress_and_completion,The following statement contains a magic number: db.Operations.AddOperation(null'"Operations Test"' (Raven.Server.Documents.Operations.Operations.OperationType) 0'                       onProgress => Task.Factory.StartNew<IOperationResult>(() =>                      {                          var p = new DeterminateProgress                          {                              Total = 1024'                              Processed = 0                          };                          onProgress(p);                          mre.Wait(token.Token);                          mre.Reset();                            p.Processed = 500;                          onProgress(p);                            mre.Wait(token.Token);                            return new SampleOperationResult                          {                              Message = "I'm done"                          };                      })' operationId' token: token);
Magic Number,FastTests.Server.Documents.Operations,BasicOperationsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Operations\BasicOperationsTests.cs,Can_notify_about_operations_progress_and_completion,The following statement contains a magic number: db.Operations.AddOperation(null'"Operations Test"' (Raven.Server.Documents.Operations.Operations.OperationType) 0'                       onProgress => Task.Factory.StartNew<IOperationResult>(() =>                      {                          var p = new DeterminateProgress                          {                              Total = 1024'                              Processed = 0                          };                          onProgress(p);                          mre.Wait(token.Token);                          mre.Reset();                            p.Processed = 500;                          onProgress(p);                            mre.Wait(token.Token);                            return new SampleOperationResult                          {                              Message = "I'm done"                          };                      })' operationId' token: token);
Magic Number,FastTests.Server.Documents.Operations,BasicOperationsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Operations\BasicOperationsTests.cs,Can_notify_about_operations_progress_and_completion,The following statement contains a magic number: Assert.Equal(1024' progress.Total);
Magic Number,FastTests.Server.Documents.Operations,BasicOperationsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Operations\BasicOperationsTests.cs,Can_notify_about_operations_progress_and_completion,The following statement contains a magic number: Assert.Equal(1024' progress.Total);
Magic Number,FastTests.Server.Documents.Operations,BasicOperationsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Operations\BasicOperationsTests.cs,Can_notify_about_operations_progress_and_completion,The following statement contains a magic number: Assert.Equal(500' progress.Processed);
Magic Number,FastTests.Server.Documents.Operations,BasicOperationsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Operations\BasicOperationsTests.cs,Can_notify_about_exception_in_operation,The following statement contains a magic number: Assert.True(notifications.TryTake(out change' TimeSpan.FromSeconds(30)));
Magic Number,FastTests.Server.Documents.Operations,BasicOperationsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Operations\BasicOperationsTests.cs,Can_serialize_in_progress_state_to_json,The following statement contains a magic number: var state = new OperationState              {                  Progress = new DeterminateProgress                  {                      Processed = 1'                      Total = 100                  }              };
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_count,The following statement contains a magic number: var addressesCount = session.Query<Address>()                          .Customize(x => x.WaitForNonStaleResults())                          .GroupBy(x => x.City)                          .Select(x => new                          {                              City = x.Key'                              Count = x.Count()'                          })                          .Where(x => x.Count == 2)                          .ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_count,The following statement contains a magic number: Assert.Equal(2' addressesCount[0].Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_count,The following statement contains a magic number: var addressesTotalCount =                          session.Query<Address>().Customize(x => x.WaitForNonStaleResults()).GroupBy(x => x.City).Select(                              x =>                                  new AddressReduceResult // using class instead of anonymous object                                  {                                      City = x.Key'                                      TotalCount = x.Count()'                                  })                              .Where(x => x.TotalCount == 2)                              .ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_count,The following statement contains a magic number: Assert.Equal(2' addressesTotalCount[0].TotalCount);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_count,The following statement contains a magic number: var addressesCount =                          session.Query<Address>().Customize(x => x.WaitForNonStaleResults()).GroupBy(x => x.City' x => 1'                              (key' g) => new                              {                                  City = key'                                  Count = g.Count()                              }).Where(x => x.Count == 2)                              .ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_count,The following statement contains a magic number: Assert.Equal(2' addressesCount[0].Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_count,The following statement contains a magic number: var addressesTotalCount =                          session.Query<Address>().Customize(x => x.WaitForNonStaleResults()).GroupBy(x => x.City' x => 1'                              (key' g) => new AddressReduceResult // using class instead of anonymous object                              {                                  City = key'                                  TotalCount = g.Count()                              }).Where(x => x.TotalCount == 2)                              .ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_count,The following statement contains a magic number: Assert.Equal(2' addressesTotalCount[0].TotalCount);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_count,The following statement contains a magic number: var indexDefinitions = store.Maintenance.Send(new GetIndexesOperation(0' 10));
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: await session.StoreAsync(new OrderLine                      {                          ProductName = "Chair"'                          Quantity = 3                      });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: await session.StoreAsync(new OrderLine                      {                          ProductName = "Desk"'                          Quantity = 2                      });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: Assert.Equal(2' sumOfLinesByName.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: Assert.Equal(4' sumOfLinesByName[0].TotalQuantity);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: Assert.Equal(2' sumOfLinesByName[1].TotalQuantity);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: Assert.Equal(2' sumOfLinesByNameClass.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: Assert.Equal(4' sumOfLinesByNameClass[0].OrderedQuantity);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: Assert.Equal(2' sumOfLinesByNameClass[1].OrderedQuantity);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: Assert.Equal(4' sumOfLinesByNameClass[0].OrderedQuantity);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: var sumOfLinesByName =                          session.Query<OrderLine>().Customize(x => x.WaitForNonStaleResults()).GroupBy(x => x.ProductName' x => x.Quantity'                              (anyKeyName' g) =>                                  new                                  {                                      NameOfProduct = anyKeyName'                                      OrderedQuantity = g.Sum()                                  })                              .Where(x => x.OrderedQuantity == 2)                              .ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: Assert.Equal(2' sumOfLinesByName[0].OrderedQuantity);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: Assert.Equal(4' sumOfLinesByName[0].OrderedQuantity);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: var sumOfLinesByNameClass =                          session.Query<OrderLine>().Customize(x => x.WaitForNonStaleResults()).GroupBy(x => x.ProductName' x => x.Quantity)                              .Select((group' i) => new OrderLineReduceResult                              {                                  NameOfProduct = group.Key'                                  OrderedQuantity = group.Sum(x => x)                              })                              .Where(x => x.OrderedQuantity == 2)                              .ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: Assert.Equal(2' sumOfLinesByNameClass[0].OrderedQuantity);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_string_calculate_sum,The following statement contains a magic number: var indexDefinitions = store.Maintenance.Send(new GetIndexesOperation(0' 10));
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Can_project_in_map_reduce,The following statement contains a magic number: var indexDefinitions = store.Maintenance.Send(new GetIndexesOperation(0' 10));
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Can_project_in_map_reduce,The following statement contains a magic number: Assert.Equal(2' results.Count());
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Can_project_in_map_reduce,The following statement contains a magic number: Assert.Equal(2' json.BlittableJson.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Order_by_string_integer_and_decimal_fields,The following statement contains a magic number: await session.StoreAsync(new OrderLine                      {                          ProductName = "Chair"'                          Quantity = 1'                          PricePerUnit = 1.2m                      });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Order_by_string_integer_and_decimal_fields,The following statement contains a magic number: await session.StoreAsync(new OrderLine                      {                          ProductName = "Chair"'                          Quantity = 3'                          PricePerUnit = 3.3m                      });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Order_by_string_integer_and_decimal_fields,The following statement contains a magic number: await session.StoreAsync(new OrderLine                      {                          ProductName = "Chair"'                          Quantity = 3'                          PricePerUnit = 3.3m                      });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Order_by_string_integer_and_decimal_fields,The following statement contains a magic number: await session.StoreAsync(new OrderLine                      {                          ProductName = "Desk"'                          Quantity = 2'                          PricePerUnit = 2.7m                      });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Order_by_string_integer_and_decimal_fields,The following statement contains a magic number: await session.StoreAsync(new OrderLine                      {                          ProductName = "Desk"'                          Quantity = 2'                          PricePerUnit = 2.7m                      });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_nested_field_sum_on_collection,The following statement contains a magic number: session.Store(new Order                      {                          ShipTo = new Address { Country = "Norway" }'                          Lines = new List<OrderLine>                          {                              new OrderLine                              {                                  Quantity = 2                              }'                              new OrderLine                              {                                  Quantity = 2                              }                          }                      });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_nested_field_sum_on_collection,The following statement contains a magic number: session.Store(new Order                      {                          ShipTo = new Address { Country = "Norway" }'                          Lines = new List<OrderLine>                          {                              new OrderLine                              {                                  Quantity = 2                              }'                              new OrderLine                              {                                  Quantity = 2                              }                          }                      });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_nested_field_sum_on_collection,The following statement contains a magic number: Assert.Equal(2' orders.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_nested_field_sum_on_collection,The following statement contains a magic number: Assert.Equal(5' orders[0].OrderedQuantity);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_nested_field_sum_on_collection,The following statement contains a magic number: Assert.Equal(2' orders.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_nested_field_sum_on_collection,The following statement contains a magic number: Assert.Equal(5' orders[0].OrderedQuantity);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_number,The following statement contains a magic number: session.Store(new User                      {                          Age = 30                      });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_number,The following statement contains a magic number: session.Store(new User                      {                          Age = 30                      });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,BasicDynamicMapReduceQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\BasicDynamicMapReduceQueries.cs,Group_by_number,The following statement contains a magic number: Assert.Equal(2' results[0].Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The following statement contains a magic number: Assert.Equal(2' orders.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The following statement contains a magic number: Assert.Equal(2' orders[1].Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The following statement contains a magic number: Assert.Equal(2' orders.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The following statement contains a magic number: Assert.Equal(2' orders[1].Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The following statement contains a magic number: Assert.Equal(2' orders.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The following statement contains a magic number: Assert.Equal(2' orders[1].Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The following statement contains a magic number: Assert.Equal(2' orders.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The following statement contains a magic number: Assert.Equal(2' orders[1].Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The following statement contains a magic number: Assert.Equal(2' orders.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The following statement contains a magic number: Assert.Equal(2' orders[1].Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The following statement contains a magic number: Assert.Equal(2' orders.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The following statement contains a magic number: Assert.Equal(2' orders[1].Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The following statement contains a magic number: Assert.Equal(2' orders.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The following statement contains a magic number: Assert.Equal(2' orders[1].Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Select_composite_group_by_key,The following statement contains a magic number: Assert.Equal(2' orders.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Select_composite_group_by_key,The following statement contains a magic number: Assert.Equal(2' orders[1].Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Select_composite_group_by_key,The following statement contains a magic number: Assert.Equal(2' orders2.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Select_composite_group_by_key,The following statement contains a magic number: Assert.Equal(2' orders2[1].Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_where_equals_clause,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Foo"' Age = 40 });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_where_equals_clause,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Bar"' Age = 50 });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_where_equals_clause,The following statement contains a magic number: var users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age == 50).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_between_clause,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Foo"' Age = 40 });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_between_clause,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Bar"' Age = 50 });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_between_clause,The following statement contains a magic number: var users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age >= 50 && x.Age <= 60).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_between_clause,The following statement contains a magic number: var users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age >= 50 && x.Age <= 60).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_between_clause,The following statement contains a magic number: users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age >= 30.1 && x.Age <= 40.0).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_between_clause,The following statement contains a magic number: users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age >= 30.1 && x.Age <= 40.0).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_range_where_clause,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Fitzchak"' Age = 40 });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_range_where_clause,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Arek"' Age = 50 });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_range_where_clause,The following statement contains a magic number: var users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age > 40).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_range_where_clause,The following statement contains a magic number: users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age < 50).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_range_where_clause,The following statement contains a magic number: users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age >= 40).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_range_where_clause,The following statement contains a magic number: Assert.Equal(2' users.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_range_where_clause,The following statement contains a magic number: users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age <= 50).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Numeric_range_where_clause,The following statement contains a magic number: Assert.Equal(2' users.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Where_clause_and_sorting,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Arek"' Age = 25 }' "users/1");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Where_clause_and_sorting,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Jan"' Age = 27 }' "users/2");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Where_clause_and_sorting,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Arek"' Age = 39 }' "users/3");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Where_clause_and_sorting,The following statement contains a magic number: Assert.Equal(2' usersSortedByAge.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Where_clause_and_sorting,The following statement contains a magic number: Assert.Equal(2' usersSortedByAge.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_doubles,The following statement contains a magic number: await session.StoreAsync(new Camera { Megapixels = 1.3 }' "cameras/1");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_doubles,The following statement contains a magic number: await session.StoreAsync(new Camera { Megapixels = 0.5 }' "cameras/2");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_doubles,The following statement contains a magic number: await session.StoreAsync(new Camera { Megapixels = 2.0 }' "cameras/4");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_doubles,The following statement contains a magic number: Assert.Equal("cameras/1"' cameras[2].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_doubles,The following statement contains a magic number: Assert.Equal("cameras/4"' cameras[3].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_integers,The following statement contains a magic number: await session.StoreAsync(new Camera { Zoom = 5 }' "cameras/1");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_integers,The following statement contains a magic number: await session.StoreAsync(new Camera { Zoom = 10 }' "cameras/2");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_integers,The following statement contains a magic number: await session.StoreAsync(new Camera { Zoom = 40 }' "cameras/3");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_integers,The following statement contains a magic number: await session.StoreAsync(new Camera { Zoom = 15 }' "cameras/4");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_integers,The following statement contains a magic number: Assert.Equal("cameras/4"' cameras[2].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_integers,The following statement contains a magic number: Assert.Equal("cameras/3"' cameras[3].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_string_field,The following statement contains a magic number: Assert.Equal("orders/1"' orders[2].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_string_field,The following statement contains a magic number: Assert.Equal("orders/3"' orders[3].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_string_field,The following statement contains a magic number: Assert.Equal("orders/2"' orders[2].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_string_field,The following statement contains a magic number: Assert.Equal("orders/4"' orders[3].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_string_field,The following statement contains a magic number: var indexes = store.Maintenance.Send(new GetIndexesOperation(0' 10)).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_integer_field,The following statement contains a magic number: await session.StoreAsync(new Order { ShipTo = new Address { ZipCode = 3000 } }' "orders/1");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_integer_field,The following statement contains a magic number: await session.StoreAsync(new Order { ShipTo = new Address { ZipCode = 222 } }' "orders/2");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_integer_field,The following statement contains a magic number: await session.StoreAsync(new Order { ShipTo = new Address { ZipCode = 5599 } }' "orders/3");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_integer_field,The following statement contains a magic number: await session.StoreAsync(new Order { ShipTo = new Address { ZipCode = 111 } }' "orders/4");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_integer_field,The following statement contains a magic number: Assert.Equal("orders/1"' orders[2].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_integer_field,The following statement contains a magic number: Assert.Equal("orders/3"' orders[3].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_integer_field,The following statement contains a magic number: Assert.Equal("orders/2"' orders[2].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_integer_field,The following statement contains a magic number: Assert.Equal("orders/4"' orders[3].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_nested_integer_field,The following statement contains a magic number: var indexes = store.Maintenance.Send(new GetIndexesOperation(0' 10)).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_strings,The following statement contains a magic number: Assert.Equal("users/3"' users[2].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Sorting_by_strings,The following statement contains a magic number: Assert.Equal("users/2"' users[2].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Partial_match,The following statement contains a magic number: await session.StoreAsync(new User { Name = "David"' Age = 31 }' "users/1");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Partial_match,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Adam"' Age = 12 }' "users/2");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Partial_match,The following statement contains a magic number: await session.StoreAsync(new User { Name = "John"' Age = 24 }' "users/3");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Partial_match,The following statement contains a magic number: Assert.Equal("users/3"' users[2].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Partial_match,The following statement contains a magic number: users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.Age > 20).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Partial_match,The following statement contains a magic number: Assert.Equal(2' users.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Partial_match,The following statement contains a magic number: var indexes = store.Maintenance.Send(new GetIndexesOperation(0' 10))                          .OrderBy(x=>x.Name.Length)                          .ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Empty_query,The following statement contains a magic number: await session.StoreAsync(new User { Name = "David"' Age = 31 }' "users/1");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Empty_query,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Adam"' Age = 12 }' "users/2");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Empty_query,The following statement contains a magic number: await session.StoreAsync(new User { Name = "John"' Age = 24 }' "users/3");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Empty_query,The following statement contains a magic number: await session.StoreAsync(new User { Name = "James"' Age = 24 }' "users/4");
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Empty_query,The following statement contains a magic number: Assert.Equal(4' users.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Empty_query,The following statement contains a magic number: Assert.Equal("users/3"' users[2].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Empty_query,The following statement contains a magic number: Assert.Equal("users/4"' users[3].Id);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Empty_query,The following statement contains a magic number: users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Skip(1).Take(2).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Empty_query,The following statement contains a magic number: Assert.Equal(2' users.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Empty_query,The following statement contains a magic number: users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Skip(3).Take(10).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Empty_query,The following statement contains a magic number: users = session.Query<User>().Customize(x => x.WaitForNonStaleResults()).Skip(3).Take(10).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_project_in_map,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Fitzchak"' Age = 30 });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_project_in_map,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Arek"' Age = 31 });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_project_in_map,The following statement contains a magic number: var names = session.Query<User>()                          .Customize(x => x.WaitForNonStaleResults())                          .Statistics(out stats)                          .Where(x => x.Age > 10)                          .Select(x => x.Name)                          .ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_project_in_map,The following statement contains a magic number: Assert.Equal(2' names.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_project_in_map,The following statement contains a magic number: var complex = session.Query<User>()                          .Customize(x => x.WaitForNonStaleResults())                          .Statistics(out stats)                          .Where(x => x.Age > 10)                          .Select(x => new                          {                              x.Name'                              x.Age                          })                          .ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_project_in_map,The following statement contains a magic number: Assert.Equal(2' complex.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_project_in_map,The following statement contains a magic number: Assert.True(complex.Any(x => x.Name == "Arek" && x.Age == 31));
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_project_in_map,The following statement contains a magic number: Assert.True(complex.Any(x => x.Name == "Fitzchak" && x.Age == 30));
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Collection_query,The following statement contains a magic number: Assert.Equal(2' users.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_query_on_dictionary,The following statement contains a magic number: session.Store(new DictItem                      {                          NumericDict = new Dictionary<int' int>                          {                              {0' 2}'                              {1' 2}                          }'                          StringDict = new Dictionary<string' string>()                          {                              { "a"' "b" }'                              { "b"' "b" }'                              { "c c"' "b" }                          }                      });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_query_on_dictionary,The following statement contains a magic number: session.Store(new DictItem                      {                          NumericDict = new Dictionary<int' int>                          {                              {0' 2}'                              {1' 2}                          }'                          StringDict = new Dictionary<string' string>()                          {                              { "a"' "b" }'                              { "b"' "b" }'                              { "c c"' "b" }                          }                      });
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_query_on_dictionary,The following statement contains a magic number: Assert.Equal(2' items.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_query_on_dictionary,The following statement contains a magic number: Assert.Equal(2' items.Count);
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_query_on_dictionary,The following statement contains a magic number: items = session.Query<DictItem>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.NumericDict[1] == 2).ToList();
Magic Number,FastTests.Server.Documents.Queries.Dynamic.Map,BasicDynamicMapQueries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\Map\BasicDynamicMapQueries.cs,Can_query_on_dictionary,The following statement contains a magic number: items = session.Query<DictItem>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.NumericDict[1] >= 2).ToList();
Magic Number,FastTests.Server.Documents.Queries,NotModifiedQueryResults,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\NotModifiedQueryResults.cs,Returns_correct_results_from_cache_if_server_response_was_not_modified,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Arek"' Age = 25 }' "users/1");
Magic Number,FastTests.Server.Documents.Queries,NotModifiedQueryResults,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\NotModifiedQueryResults.cs,Returns_correct_results_from_cache_if_server_response_was_not_modified,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Jan"' Age = 27 }' "users/2");
Magic Number,FastTests.Server.Documents.Queries,NotModifiedQueryResults,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\NotModifiedQueryResults.cs,Returns_correct_results_from_cache_if_server_response_was_not_modified,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Arek"' Age = 39 }' "users/3");
Magic Number,FastTests.Server.Documents.Queries,NotModifiedQueryResults,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\NotModifiedQueryResults.cs,Returns_correct_results_from_cache_if_server_response_was_not_modified,The following statement contains a magic number: Assert.Equal(2' users.Results.Length);
Magic Number,FastTests.Server.Documents.Queries,NotModifiedQueryResults,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\NotModifiedQueryResults.cs,Returns_correct_results_from_cache_if_server_response_was_not_modified,The following statement contains a magic number: Assert.Equal(2' users.Results.Length);
Magic Number,FastTests.Server.Documents.Queries,DocumentQueryWithDefaultOperator,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\RavenDB_6065.cs,QueryWithOrOperators,The following statement contains a magic number: session.Store(new Person { Name = "Fred"' Gender = 'M'' Age = 30 });
Magic Number,FastTests.Server.Documents.Queries,DocumentQueryWithDefaultOperator,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\RavenDB_6065.cs,QueryWithOrOperators,The following statement contains a magic number: session.Store(new Person { Name = "John"' Gender = 'M'' Age = 23 });
Magic Number,FastTests.Server.Documents.Queries,DocumentQueryWithDefaultOperator,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\RavenDB_6065.cs,QueryWithOrOperators,The following statement contains a magic number: session.Store(new Person { Name = "Sally"' Gender = 'F'' Age = 45 });
Magic Number,FastTests.Server.Documents.Queries,DocumentQueryWithDefaultOperator,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\RavenDB_6065.cs,QueryWithOrOperators,The following statement contains a magic number: session.Store(new Person { Name = "Jane"' Gender = 'F'' Age = 16 });
Magic Number,FastTests.Server.Documents.Queries,DocumentQueryWithDefaultOperator,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\RavenDB_6065.cs,QueryWithOrOperators,The following statement contains a magic number: session.Store(new Person { Name = "Matt"' Gender = 'M'' Age = 18 });
Magic Number,FastTests.Server.Documents.Queries,DocumentQueryWithDefaultOperator,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\RavenDB_6065.cs,QueryWithOrOperators,The following statement contains a magic number: session.Store(new Person { Name = "Emma"' Gender = 'F'' Age = 28 });
Magic Number,FastTests.Server.Documents.Queries,DocumentQueryWithDefaultOperator,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\RavenDB_6065.cs,QueryWithOrOperators,The following statement contains a magic number: var query = session.Advanced.DocumentQuery<Person>()                          .UsingDefaultOperator(QueryOperator.And) // Breaks the query' now only appears to match the last operand                          .WhereEquals("Gender"' 'F') // Should match 3 documents                          .OrElse()                          .WhereEquals("Name"' "Fred") // Should match 1 document                          .OrElse()                          .WhereEquals("Age"' 18);
Magic Number,FastTests.Server.Documents.Queries,DocumentQueryWithDefaultOperator,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\RavenDB_6065.cs,QueryWithOrOperators,The following statement contains a magic number: Assert.Equal(5' results.Count);
Magic Number,FastTests.Server.Documents.Queries,WaitingForNonStaleResults,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\WaitingForNonStaleResults.cs,Cutoff_etag_usage,The following statement contains a magic number: Assert.Equal(2' users.Count);
Magic Number,FastTests.Server.Documents.Queries,WaitingForNonStaleResults,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\WaitingForNonStaleResults.cs,As_of_now_usage,The following statement contains a magic number: Assert.Equal(2' users.Count);
Magic Number,FastTests.Server.Documents.Queries,WaitingForNonStaleResults,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\WaitingForNonStaleResults.cs,Throws_if_exceeds_timeout,The following statement contains a magic number: var timeout = 1000;
Magic Number,FastTests.Server.Documents.Queries,WaitingForNonStaleResults,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\WaitingForNonStaleResults.cs,Throws_if_exceeds_timeout,The following statement contains a magic number: timeout *= 25;
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetRevisionsByChangeVectors,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetRevisionsByChangeVectors,The following statement contains a magic number: Assert.Equal(11' revisionsMetadata.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,ZeroMinimumRevisionsToKeepShouldWork,The following statement contains a magic number: var configuration = new RevisionsConfiguration                  {                      Default = new RevisionsCollectionConfiguration                      {                          Disabled = false'                          MinimumRevisionsToKeep = 10                      }'                        Collections = new Dictionary<string' RevisionsCollectionConfiguration>                      {                          ["Users"] = new RevisionsCollectionConfiguration                          {                              Disabled = false'                              MinimumRevisionsToKeep = 0                          }                      }                  };
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfiguration,The following statement contains a magic number: var configuration = new RevisionsConfiguration                  {                      Default = new RevisionsCollectionConfiguration                      {                          Disabled = false'                          MinimumRevisionsToKeep = 10                      }                  };
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfiguration,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfiguration,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfiguration,The following statement contains a magic number: configuration.Default.MinimumRevisionsToKeep = 5;
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfiguration,The following statement contains a magic number: Assert.Equal(Math.Min(i + 1' 5)' foo.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfiguration,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfiguration,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfigurationWithTombstones,The following statement contains a magic number: var configuration = new RevisionsConfiguration                  {                      Default = new RevisionsCollectionConfiguration                      {                          Disabled = false'                          MinimumRevisionsToKeep = 10                      }                  };
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfigurationWithTombstones,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfigurationWithTombstones,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfigurationWithTombstones,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfigurationWithTombstones,The following statement contains a magic number: configuration.Default.MinimumRevisionsToKeep = 5;
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfigurationWithTombstones,The following statement contains a magic number: Assert.Equal(Math.Min(i + 2' 5)' foo.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfigurationWithTombstones,The following statement contains a magic number: Assert.Equal(Math.Min(i + 2' 5)' foo.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfigurationWithTombstones,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceRevisionConfigurationWithTombstones,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceEmptyConfigurationWillDeleteAllRevisions,The following statement contains a magic number: var configuration = new RevisionsConfiguration                  {                      Default = new RevisionsCollectionConfiguration { Disabled = false' MinimumRevisionsToKeep = 10 }'                      Collections = new Dictionary<string' RevisionsCollectionConfiguration>                      {                          ["Dummy"] = new RevisionsCollectionConfiguration {Disabled = false' MinimumRevisionsToKeep = 10}                      }                  };
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,EnforceEmptyConfigurationWillDeleteAllRevisions,The following statement contains a magic number: var configuration = new RevisionsConfiguration                  {                      Default = new RevisionsCollectionConfiguration { Disabled = false' MinimumRevisionsToKeep = 10 }'                      Collections = new Dictionary<string' RevisionsCollectionConfiguration>                      {                          ["Dummy"] = new RevisionsCollectionConfiguration {Disabled = false' MinimumRevisionsToKeep = 10}                      }                  };
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetAllRevisionsFor,The following statement contains a magic number: Assert.Equal(2' companiesRevisions.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,ServerSaveBundlesAfterRestart,The following statement contains a magic number: Assert.Equal(2' companiesRevisions.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,WillCreateRevision,The following statement contains a magic number: Assert.Equal(3' users.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,WillCreateRevision,The following statement contains a magic number: Assert.Equal("Hibernating"' users[2].Name);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,WillCreateValidRevisionWhenCompressionDocumentWasSaved,The following statement contains a magic number: var user = new User { Name = new string('1'' 4096 * 2) };
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,WillCreateValidRevisionWhenCompressionDocumentWasSaved,The following statement contains a magic number: var user = new User { Name = new string('1'' 4096 * 2) };
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,WillNotCreateRevision,The following statement contains a magic number: var product = new Product { Description = "A fine document db"' Quantity = 5 };
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,WillDeleteOldRevisions,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,WillDeleteOldRevisions,The following statement contains a magic number: Assert.Equal(5' revisions.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,WillDeleteOldRevisions,The following statement contains a magic number: Assert.Equal("Company #2: 5"' revisions[4].Name);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,WillDeleteRevisionsIfDeleted_OnlyIfPurgeOnDeleteIsTrue,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,WillDeleteRevisionsIfDeleted_OnlyIfPurgeOnDeleteIsTrue,The following statement contains a magic number: Assert.Equal(5' companies.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,WillDeleteRevisionsIfDeleted_OnlyIfPurgeOnDeleteIsTrue,The following statement contains a magic number: Assert.Equal(5' companies.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,RevisionsOrder,The following statement contains a magic number: Assert.Equal(3' users.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,RevisionsOrder,The following statement contains a magic number: Assert.Equal("Hibernating"' users[2].Name);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: session.CountersFor(company).Increment("Likes"' 100);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: session.CountersFor(company).Increment("Likes"' 50);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: Assert.Equal(3' companiesRevisions.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: Assert.Equal(100L' revisionCounters["Likes"]);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: Assert.Null(companiesRevisions[2].Name);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: session.CountersFor(company).Increment("Dislikes"' 20);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: Assert.Equal(5' companiesRevisions.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: Assert.Equal(2' revisionCounters.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: Assert.Equal(150L' revisionCounters["Likes"]);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: Assert.Equal(20L' revisionCounters["Dislikes"]);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: Assert.Equal(150L' revisionCounters["Likes"]);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: Assert.Equal("HR"' companiesRevisions[2].Name);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: revisionCounters = (IMetadataDictionary)metadatas[2][Constants.Documents.Metadata.RevisionCounters];
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: Assert.Equal(100L' revisionCounters["Likes"]);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: Assert.Equal("HR"' companiesRevisions[3].Name);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: Assert.False(metadatas[3].TryGetValue(Constants.Documents.Metadata.RevisionCounters' out _));
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: Assert.Null(companiesRevisions[4].Name);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanGetCountersSnapshotInRevisions,The following statement contains a magic number: Assert.False(metadatas[4].TryGetValue(Constants.Documents.Metadata.RevisionCounters' out _));
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanLimitNumberOfRevisionsByAge,The following statement contains a magic number: var revisionsAgeLimit = TimeSpan.FromSeconds(10);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,CanLimitNumberOfRevisionsByAge,The following statement contains a magic number: Assert.Equal(2' userRevisions.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,GetRevisionsBinEntries,The following statement contains a magic number: i < 2
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,GetRevisionsBinEntries,The following statement contains a magic number: Assert.Equal(4' statistics.CountOfRevisionDocuments);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,GetRevisionsBinEntries,The following statement contains a magic number: Assert.Equal(4' users.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,GetRevisionsBinEntries,The following statement contains a magic number: Assert.Equal(null' users[2].Name);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,GetRevisionsBinEntries,The following statement contains a magic number: Assert.Equal("Fitzchak"' users[3].Name);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,GetRevisionsBinEntries,The following statement contains a magic number: Assert.Equal(4' revisionsMetadata.Count);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,GetRevisionsBinEntries,The following statement contains a magic number: Assert.Contains(DocumentFlags.DeleteRevision.ToString()' revisionsMetadata[2].GetString(Constants.Documents.Metadata.Flags));
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,GetRevisionsBinEntries,The following statement contains a magic number: Assert.Equal((DocumentFlags.HasRevisions | DocumentFlags.Revision).ToString()' revisionsMetadata[3].GetString(Constants.Documents.Metadata.Flags));
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,DeleteRevisionsBeforeFromConsole,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,DeleteRevisionsBeforeFromConsole,The following statement contains a magic number: await session.StoreAsync(new User { Name = "Fitzchak " + (i + 100) });
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,DeleteRevisionsBeforeFromConsole,The following statement contains a magic number: i < 10
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,DeleteRevisionsBeforeFromConsole,The following statement contains a magic number: Assert.Equal(21' statistics.CountOfDocuments);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,DeleteRevisionsBeforeFromConsole,The following statement contains a magic number: Assert.Equal(20' statistics.CountOfRevisionDocuments);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,DeleteRevisionsBeforeFromConsole,The following statement contains a magic number: Assert.Equal(21' statistics.CountOfDocuments);
Magic Number,FastTests.Server.Documents.Revisions,RevisionsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Revisions\RevisionsTests.cs,DeleteRevisionsBeforeFromConsole,The following statement contains a magic number: Assert.Equal(10' statistics.CountOfRevisionDocuments);
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,Cleanup,The following statement contains a magic number: var count = database.DocumentsStorage.GetTombstonesFrom(context' "Users"' 0' 0' 128).Count();
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,Cleanup,The following statement contains a magic number: var count = database.DocumentsStorage.GetTombstonesFrom(context' "Users"' 0' 0' 128).Count();
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,Cleanup,The following statement contains a magic number: var count = database.DocumentsStorage.GetTombstonesFrom(context' "Users"' 0' 0' 128).Count();
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,Cleanup,The following statement contains a magic number: Assert.Equal(4' tombstones["Users"]);
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,Cleanup,The following statement contains a magic number: var count = database.DocumentsStorage.GetTombstonesFrom(context' "Users"' 0' 0' 128).Count();
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,Cleanup,The following statement contains a magic number: Assert.Equal(2' count);
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,Cleanup,The following statement contains a magic number: var list = database.DocumentsStorage.GetTombstonesFrom(context' "Users"' 0' 0' 128).ToList();
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,Cleanup,The following statement contains a magic number: Assert.Equal(5' list[0].Etag);
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,CleanupOfMultiMapIndexWithLoadDocument,The following statement contains a magic number: Assert.Equal(2' tombstones.Count);
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,CleanupOfMultiMapIndexWithLoadDocument,The following statement contains a magic number: var count = database.DocumentsStorage.GetTombstonesFrom(context' "Orders"' 0' 0' 128).Count();
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,CleanupOfMultiMapIndexWithLoadDocument,The following statement contains a magic number: Assert.Equal(2' tombstones.Count);
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,CleanupOfMultiMapIndexWithLoadDocument,The following statement contains a magic number: var count = database.DocumentsStorage.GetTombstonesFrom(context' "Orders"' 0' 0' 128).Count();
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,CleanupOfMultiMapIndexWithLoadDocument,The following statement contains a magic number: var count = database.DocumentsStorage.GetTombstonesFrom(context' "Orders"' 0' 0' 128).Count();
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,CleanupOfMultiMapIndexWithLoadDocument,The following statement contains a magic number: Assert.Equal(2' tombstones.Count);
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,CleanupOfMultiMapIndexWithLoadDocument,The following statement contains a magic number: Assert.Equal(2' tombstones["Orders"]);
Magic Number,FastTests.Server.Documents.Tombstones,BasicTombstones,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Tombstones\BasicTombstones.cs,CleanupOfMultiMapIndexWithLoadDocument,The following statement contains a magic number: var list = database.DocumentsStorage.GetTombstonesFrom(context' "Orders"' 0' 0' 128).ToList();
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_nested_values,The following statement contains a magic number: var doc = create_doc(new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["Address"] = new DynamicJsonValue                  {                      ["City"] = "New York City"'                      ["Details"] = new DynamicJsonValue                      {                          ["Floor"] = 2                      }                  }              });
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_nested_values,The following statement contains a magic number: Assert.Equal(2L' read);
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_values_nested_in_array,The following statement contains a magic number: Assert.Equal(2' items.Count);
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_array_values,The following statement contains a magic number: Assert.Equal(2' items.Count);
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_values_nested_in_array_as_objects,The following statement contains a magic number: Assert.Equal(2' items.Count);
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_value_nested_in_object_of_array_of_arrays,The following statement contains a magic number: Assert.Equal(3' items.Count);
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_value_nested_in_object_of_array_of_arrays,The following statement contains a magic number: Assert.Equal("foo/3"' items[2].ToString());
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_value_nested_in_object_of_array_of_arrays,The following statement contains a magic number: Assert.Equal(3' items.Count);
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_value_nested_in_object_of_array_of_arrays,The following statement contains a magic number: Assert.Equal("foo/3"' items[2].ToString());
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_values_of_multidimensional_array,The following statement contains a magic number: Assert.Equal(3' items.Count);
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_values_of_multidimensional_array,The following statement contains a magic number: Assert.Equal("foo/3"' items[2].ToString());
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_values_of_multidimensional_array,The following statement contains a magic number: Assert.Equal(3' items.Count);
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_values_of_multidimensional_array,The following statement contains a magic number: Assert.Equal("foo/3"' items[2].ToString());
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_values_of_multidimensional_array,The following statement contains a magic number: Assert.Equal(3' items.Count);
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_values_of_multidimensional_array,The following statement contains a magic number: Assert.Equal("foo/3"' items[2].ToString());
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_value_nested_in_nested_object_of_array_of_arrays,The following statement contains a magic number: Assert.Equal(3' items.Count);
Magic Number,FastTests.Server.Json,BlittableJsonTraverserTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Json\BlittableJsonTraverserTests.cs,Reads_value_nested_in_nested_object_of_array_of_arrays,The following statement contains a magic number: Assert.Equal("baz/3"' items[2].ToString());
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_from_etag_zero_should_work,The following statement contains a magic number: session.Store(new User                      {                          Name = "John Dow"'                          Age = 30                      }' "users/1");
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_from_etag_zero_should_work,The following statement contains a magic number: session.Store(new User                      {                          Name = "Jane Dow"'                          Age = 31                      }' "users/2");
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_from_etag_zero_should_work,The following statement contains a magic number: var replicated1 = WaitForDocumentToReplicate<User>(store2' "users/1"' 15000);
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_from_etag_zero_should_work,The following statement contains a magic number: Assert.Equal(30' replicated1.Age);
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_from_etag_zero_should_work,The following statement contains a magic number: var replicated2 = WaitForDocumentToReplicate<User>(store2' "users/2"' 5000);
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_from_etag_zero_should_work,The following statement contains a magic number: Assert.Equal(31' replicated2.Age);
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: session.Store(new User                      {                          Name = "John Dow"'                          Age = 30                      }' "users/1");
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: session.Store(new User                      {                          Name = "Jane Dow"'                          Age = 31                      }' "users/2");
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: session.Store(new User                      {                          Name = "Jack Dow"'                          Age = 33                      }' "users/3");
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: session.Store(new User                      {                          Name = "Jessy Dow"'                          Age = 34                      }' "users/4");
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: WaitForDocumentToReplicate<User>(store2' "users/1"' 15000);
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: WaitForDocumentToReplicate<User>(store2' "users/2"' 15000);
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: WaitForDocumentToReplicate<User>(store2' "users/3"' 15000);
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: WaitForDocumentToReplicate<User>(store2' "users/4"' 15000);
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_master_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: session.Store(new User                      {                          Name = "John Dow"'                          Age = 30                      }' "users/1");
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_master_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: session.Store(new User                      {                          Name = "Jane Dow"'                          Age = 31                      }' "users/2");
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_master_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: session.Store(new User                      {                          Name = "Jack Dow"'                          Age = 33                      }' "users/3");
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_master_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: session.Store(new User                      {                          Name = "Jessy Dow"'                          Age = 34                      }' "users/4");
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_master_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: Assert.NotNull(WaitForDocumentToReplicate<User>(store1' "users/1"' 15000));
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_master_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: Assert.NotNull(WaitForDocumentToReplicate<User>(store1' "users/2"' 15000));
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_master_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: Assert.NotNull(WaitForDocumentToReplicate<User>(store1' "users/3"' 15000));
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_master_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: Assert.NotNull(WaitForDocumentToReplicate<User>(store1' "users/4"' 15000));
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_master_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: Assert.NotNull(WaitForDocumentToReplicate<User>(store2' "users/1"' 15000));
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_master_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: Assert.NotNull(WaitForDocumentToReplicate<User>(store2' "users/2"' 15000));
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_master_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: Assert.NotNull(WaitForDocumentToReplicate<User>(store2' "users/3"' 15000));
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_master_replication_with_multiple_PUTS_should_work,The following statement contains a magic number: Assert.NotNull(WaitForDocumentToReplicate<User>(store2' "users/4"' 15000));
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_with_exceptions_should_work,The following statement contains a magic number: session.Store(new User                      {                          Name = "John Dow"'                          Age = 30                      }' "users/1");
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_with_exceptions_should_work,The following statement contains a magic number: session.Store(new User                      {                          Name = "Jane Dow"'                          Age = 31                      }' "users/2");
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_with_exceptions_should_work,The following statement contains a magic number: var replicated1 = WaitForDocumentToReplicate<User>(store2' "users/1"' 15000);
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_with_exceptions_should_work,The following statement contains a magic number: Assert.Equal(30' replicated1.Age);
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_with_exceptions_should_work,The following statement contains a magic number: var replicated2 = WaitForDocumentToReplicate<User>(store2' "users/2"' 5000);
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Master_slave_replication_with_exceptions_should_work,The following statement contains a magic number: Assert.Equal(31' replicated2.Age);
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Can_get_performance_stats,The following statement contains a magic number: session.Store(new User                      {                          Name = "John Dow"'                          Age = 30                      }' "users/1");
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Can_get_performance_stats,The following statement contains a magic number: session.Store(new User                      {                          Name = "Jane Dow"'                          Age = 31                      }' "users/2");
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Can_get_performance_stats,The following statement contains a magic number: Assert.NotNull(WaitForDocumentToReplicate<User>(store2' "users/1"' 15000));
Magic Number,FastTests.Server.Replication,ReplicationBasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationBasicTests.cs,Can_get_performance_stats,The following statement contains a magic number: Assert.NotNull(WaitForDocumentToReplicate<User>(store2' "users/2"' 5000));
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,EnsureReplicating,The following statement contains a magic number: Assert.NotNull(WaitForDocumentToReplicate<object>(dst' id' 15 * 1000));
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,EnsureReplicating,The following statement contains a magic number: Assert.NotNull(WaitForDocumentToReplicate<object>(dst' id' 15 * 1000));
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,WaitUntilHasConflict,The following statement contains a magic number: var timeout = 5000;
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,WaitUntilHasConflict,The following statement contains a magic number: timeout *= 100;
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,WaitUntilHasConflict,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,WaitForDocumentDeletion,The following statement contains a magic number: timeout *= 100;
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,WaitForDocumentDeletion,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,WaitUntilHasTombstones,The following statement contains a magic number: int timeout = 15000;
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,WaitUntilHasTombstones,The following statement contains a magic number: timeout *= 100;
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,WaitUntilHasTombstones,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,WaitForDocumentToReplicate,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,WaitForDocumentWithAttachmentToReplicate,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,CreateDuoCluster,The following statement contains a magic number: var leader = await CreateRaftClusterAndGetLeader(2);
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,CreateDuoCluster,The following statement contains a magic number: var res = CreateClusterDatabase(caller' source' 2);
Magic Number,FastTests.Server.Replication,ReplicationTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Replication\ReplicationTestBase.cs,CreateDuoCluster,The following statement contains a magic number: await WaitForRaftIndexToBeAppliedInCluster(res.RaftCommandIndex' TimeSpan.FromSeconds(5));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(1' Bits.MostSignificantBit(2));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(1' Bits.MostSignificantBit(3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(2' Bits.MostSignificantBit(4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(2' Bits.MostSignificantBit(4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(15' Bits.MostSignificantBit(0x0000FF00));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(30' Bits.MostSignificantBit(0x40B79DF0));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(1' Bits.MostSignificantBit((uint)2));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(1' Bits.MostSignificantBit((uint)3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(2' Bits.MostSignificantBit((uint)4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(2' Bits.MostSignificantBit((uint)4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(15' Bits.MostSignificantBit((uint)0x0000FF00));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(31' Bits.MostSignificantBit((uint)0xFFFF0000));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(30' Bits.MostSignificantBit((uint)0x40B79DF0));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(1' Bits.MostSignificantBit((long)2));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(1' Bits.MostSignificantBit((long)3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(2' Bits.MostSignificantBit((long)4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(2' Bits.MostSignificantBit((long)4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(15' Bits.MostSignificantBit((long)0x0000FF00));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(31' Bits.MostSignificantBit((long)0xFFFF0000));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(30' Bits.MostSignificantBit((long)0x40B79DF0));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(62' Bits.MostSignificantBit((long)0x40B79DF0FFFF0000));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(1' Bits.MostSignificantBit((ulong)2));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(1' Bits.MostSignificantBit((ulong)3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(2' Bits.MostSignificantBit((ulong)4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(2' Bits.MostSignificantBit((ulong)4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(15' Bits.MostSignificantBit((ulong)0x0000FF00));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(31' Bits.MostSignificantBit((ulong)0xFFFF0000));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(30' Bits.MostSignificantBit((ulong)0x40B79DF0));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_MostSignificativeBit,The following statement contains a magic number: Assert.Equal(62' Bits.MostSignificantBit((ulong)0x40B79DF0FFFF0000));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(32' Bits.LeadingZeroes(0));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(31' Bits.LeadingZeroes(1));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(30' Bits.LeadingZeroes(2));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(30' Bits.LeadingZeroes(2));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(30' Bits.LeadingZeroes(3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(30' Bits.LeadingZeroes(3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(29' Bits.LeadingZeroes(4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(29' Bits.LeadingZeroes(4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(16' Bits.LeadingZeroes(0x0000FF00));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(32' Bits.LeadingZeroes((uint)0));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(31' Bits.LeadingZeroes((uint)1));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(30' Bits.LeadingZeroes((uint)2));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(30' Bits.LeadingZeroes((uint)2));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(30' Bits.LeadingZeroes((uint)3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(30' Bits.LeadingZeroes((uint)3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(29' Bits.LeadingZeroes((uint)4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(29' Bits.LeadingZeroes((uint)4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_LeadingZeroes,The following statement contains a magic number: Assert.Equal(16' Bits.LeadingZeroes((uint)0x0000FF00));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(1' Bits.CeilLog2(2));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(2' Bits.CeilLog2(3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(2' Bits.CeilLog2(3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(2' Bits.CeilLog2(4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(2' Bits.CeilLog2(4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(16' Bits.CeilLog2(0x0000FF00));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(31' Bits.CeilLog2(0x40B79DF0));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(1' Bits.CeilLog2((uint)2));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(2' Bits.CeilLog2((uint)3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(2' Bits.CeilLog2((uint)3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(2' Bits.CeilLog2((uint)4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(2' Bits.CeilLog2((uint)4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(16' Bits.CeilLog2((uint)0x0000FF00));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(32' Bits.CeilLog2((uint)0xFFFF0000));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_Ceil2Log,The following statement contains a magic number: Assert.Equal(31' Bits.CeilLog2((uint)0x40B79DF0));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_NextPowerOf2,The following statement contains a magic number: i < 31
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_NextPowerOf2,The following statement contains a magic number: i < 62
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(2' Bits.PowerOf2(2));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(2' Bits.PowerOf2(2));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(4' Bits.PowerOf2(3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(4' Bits.PowerOf2(3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(4' Bits.PowerOf2(4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(4' Bits.PowerOf2(4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(256' Bits.PowerOf2(129));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(256' Bits.PowerOf2(129));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(256' Bits.PowerOf2(255));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(256' Bits.PowerOf2(255));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(2' Bits.PowerOf2((long)2));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(2' Bits.PowerOf2((long)2));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(4' Bits.PowerOf2((long)3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(4' Bits.PowerOf2((long)3));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(4' Bits.PowerOf2((long)4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(4' Bits.PowerOf2((long)4));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(256' Bits.PowerOf2((long)129));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(256' Bits.PowerOf2((long)129));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(256' Bits.PowerOf2((long)255));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_PowerOf2Fixed,The following statement contains a magic number: Assert.Equal(256' Bits.PowerOf2((long)255));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_TrailingAndLeadingZeroes,The following statement contains a magic number: long number = 210;
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_TrailingAndLeadingZeroes,The following statement contains a magic number: Assert.Equal(56 - 32' Bits.LeadingZeroes((int)number));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_TrailingAndLeadingZeroes,The following statement contains a magic number: Assert.Equal(56 - 32' Bits.LeadingZeroes((int)number));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_TrailingAndLeadingZeroes,The following statement contains a magic number: Assert.Equal(56 - 32' Bits.LeadingZeroes((uint)number));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_TrailingAndLeadingZeroes,The following statement contains a magic number: Assert.Equal(56 - 32' Bits.LeadingZeroes((uint)number));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_TrailingAndLeadingZeroes,The following statement contains a magic number: Assert.Equal(56' Bits.LeadingZeroes(number));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_TrailingAndLeadingZeroes,The following statement contains a magic number: Assert.Equal(56' Bits.LeadingZeroes((ulong)number));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_TrailingAndLeadingZeroes,The following statement contains a magic number: number = 6917529027641081856;
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_TrailingAndLeadingZeroes,The following statement contains a magic number: Assert.Equal(7' Bits.TrailingZeroesInBytes(number));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_TrailingAndLeadingZeroes,The following statement contains a magic number: Assert.Equal(7' Bits.TrailingZeroesInBytes((ulong)number));
Magic Number,FastTests.Sparrow,BitsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Bits.cs,Bits_TrailingAndLeadingZeroes,The following statement contains a magic number: number = 170;
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,Lifecycle,The following statement contains a magic number: context.Allocate(512' out var byteString);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,Lifecycle,The following statement contains a magic number: Assert.Equal(512' byteString.Length);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,Lifecycle,The following statement contains a magic number: Assert.Equal(1024' byteString._pointer->Size);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,Lifecycle,The following statement contains a magic number: context.Allocate(1024 - sizeof(ByteStringStorage)' out var byteStringWithExactSize);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,Lifecycle,The following statement contains a magic number: Assert.Equal(1024 - sizeof(ByteStringStorage)' byteStringWithExactSize.Length);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,Lifecycle,The following statement contains a magic number: Assert.Equal(1024' byteStringWithExactSize._pointer->Size);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegment,The following statement contains a magic number: context.Allocate((ByteStringContext.MinBlockSizeInBytes / 2) - sizeof(ByteStringStorage)' out var byteStringInFirstSegment);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegment,The following statement contains a magic number: context.Allocate((ByteStringContext.MinBlockSizeInBytes / 2) - sizeof(ByteStringStorage)' out var byteStringWholeSegment);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegmentWithHistory,The following statement contains a magic number: context.Allocate(ByteStringContext.MinBlockSizeInBytes * 2' out var _);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegmentWithHistory,The following statement contains a magic number: i < 10
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegmentWithHistory,The following statement contains a magic number: context.Allocate((ByteStringContext.MinBlockSizeInBytes / 2) - sizeof(ByteStringStorage)' out var byteStringInFirstSegment);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionInsideWholeSegmentWithHistory,The following statement contains a magic number: context.Allocate((ByteStringContext.MinBlockSizeInBytes / 2) - sizeof(ByteStringStorage)' out var byteStringWholeSegment);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionReleaseForReuseTheLeftOver,The following statement contains a magic number: context.Allocate((ByteStringContext.MinBlockSizeInBytes / 2) - sizeof(ByteStringStorage)' out var byteStringInFirstSegment);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionReleaseForReuseTheLeftOver,The following statement contains a magic number: context.Allocate((ByteStringContext.MinBlockSizeInBytes / 2) - sizeof(ByteStringStorage) + 1' out var byteStringInNewSegment);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,ConstructionReleaseForReuseTheLeftOver,The following statement contains a magic number: context.Allocate((ByteStringContext.MinBlockSizeInBytes / 2) - sizeof(ByteStringStorage)' out var byteStringInReusedSegment);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuse,The following statement contains a magic number: context.Allocate(ByteStringContext.MinBlockSizeInBytes / 2 - sizeof(ByteStringStorage)' out var byteStringInFirst);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuse,The following statement contains a magic number: context.Allocate(ByteStringContext.MinBlockSizeInBytes / 2 - sizeof(ByteStringStorage)' out var byteStringInSecond);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuse,The following statement contains a magic number: context.Allocate(ByteStringContext.MinBlockSizeInBytes / 2 - sizeof(ByteStringStorage)' out var byteStringReused);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuse,The following statement contains a magic number: context.Allocate(ByteStringContext.MinBlockSizeInBytes / 2 - sizeof(ByteStringStorage)' out var byteStringNextSegment);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuseAsSegment,The following statement contains a magic number: int allocationBlockSize = 2 * ByteStringContext.MinBlockSizeInBytes + 128 + sizeof(ByteStringStorage);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuseAsSegment,The following statement contains a magic number: int allocationBlockSize = 2 * ByteStringContext.MinBlockSizeInBytes + 128 + sizeof(ByteStringStorage);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuseAsSegment,The following statement contains a magic number: context.Allocate(2 * ByteStringContext.MinBlockSizeInBytes - sizeof(ByteStringStorage)' out var byteStringInFirst);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuseAsSegment,The following statement contains a magic number: context.Allocate(512' out var byteStringReused);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuseAsSegment,The following statement contains a magic number: context.Allocate(64' out var byteStringReusedFromBucket);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuseRepeatedly,The following statement contains a magic number: context.Allocate(ByteStringContext.MinBlockSizeInBytes / 2 - sizeof(ByteStringStorage)' out var first);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuseRepeatedly,The following statement contains a magic number: context.Allocate(ByteStringContext.MinBlockSizeInBytes / 2 - sizeof(ByteStringStorage)' out var repeat);
Magic Number,FastTests.Sparrow,ByteStringTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\ByteStringTests.cs,AllocateAndReleaseShouldReuseRepeatedly,The following statement contains a magic number: i < 100
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeNoDifference,The following statement contains a magic number: var fst = new byte[4096];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeNoDifference,The following statement contains a magic number: var sec = new byte[4096];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeNoDifference,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                    Assert.True(diffPages.IsDiff);                  Assert.Equal(0' diffPages.OutputSize);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeNoDifference,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                    Assert.True(diffPages.IsDiff);                  Assert.Equal(0' diffPages.OutputSize);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference,The following statement contains a magic number: var fst = new byte[4096];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference,The following statement contains a magic number: var sec = new byte[4096];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference,The following statement contains a magic number: sec[12] ++;
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference,The following statement contains a magic number: sec[433]++;
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                    Assert.Equal(96' diffPages.OutputSize);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                    Assert.Equal(96' diffPages.OutputSize);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                    Assert.Equal(96' diffPages.OutputSize);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifferenceFromNew,The following statement contains a magic number: var fst = new byte[4096];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifferenceFromNew,The following statement contains a magic number: fst[12]++;
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifferenceFromNew,The following statement contains a magic number: fst[433]++;
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifferenceFromNew,The following statement contains a magic number: fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeNew(one' 4096);                  Assert.True(diffPages.IsDiff);                    Assert.Equal(96' diffPages.OutputSize);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifferenceFromNew,The following statement contains a magic number: fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeNew(one' 4096);                  Assert.True(diffPages.IsDiff);                    Assert.Equal(96' diffPages.OutputSize);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifferenceFromNew,The following statement contains a magic number: fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeNew(one' 4096);                  Assert.True(diffPages.IsDiff);                    Assert.Equal(96' diffPages.OutputSize);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyit,The following statement contains a magic number: var fst = new byte[4096];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyit,The following statement contains a magic number: var sec = new byte[4096];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyit,The following statement contains a magic number: var trd = new byte[4096];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyit,The following statement contains a magic number: sec[12]++;
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyit,The following statement contains a magic number: sec[433]++;
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyit,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tri = trd)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                  Assert.True(diffPages.IsDiff);                    Memory.Copy(tri' one' 4096);                  new DiffApplier                  {                      Destination = tri'                      Diff = tmp'                      Size = 4096'                      DiffSize = diffPages.OutputSize                  }.Apply(false);                    var result = Memory.Compare(tri' two' 4096' out int position);                  Assert.Equal(0' result);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyit,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tri = trd)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                  Assert.True(diffPages.IsDiff);                    Memory.Copy(tri' one' 4096);                  new DiffApplier                  {                      Destination = tri'                      Diff = tmp'                      Size = 4096'                      DiffSize = diffPages.OutputSize                  }.Apply(false);                    var result = Memory.Compare(tri' two' 4096' out int position);                  Assert.Equal(0' result);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyit,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tri = trd)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                  Assert.True(diffPages.IsDiff);                    Memory.Copy(tri' one' 4096);                  new DiffApplier                  {                      Destination = tri'                      Diff = tmp'                      Size = 4096'                      DiffSize = diffPages.OutputSize                  }.Apply(false);                    var result = Memory.Compare(tri' two' 4096' out int position);                  Assert.Equal(0' result);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyit,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tri = trd)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                  Assert.True(diffPages.IsDiff);                    Memory.Copy(tri' one' 4096);                  new DiffApplier                  {                      Destination = tri'                      Diff = tmp'                      Size = 4096'                      DiffSize = diffPages.OutputSize                  }.Apply(false);                    var result = Memory.Compare(tri' two' 4096' out int position);                  Assert.Equal(0' result);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyit,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tri = trd)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                  Assert.True(diffPages.IsDiff);                    Memory.Copy(tri' one' 4096);                  new DiffApplier                  {                      Destination = tri'                      Diff = tmp'                      Size = 4096'                      DiffSize = diffPages.OutputSize                  }.Apply(false);                    var result = Memory.Compare(tri' two' 4096' out int position);                  Assert.Equal(0' result);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyOnBig,The following statement contains a magic number: var fst = new byte[4096 * 4];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyOnBig,The following statement contains a magic number: var fst = new byte[4096 * 4];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyOnBig,The following statement contains a magic number: var sec = new byte[4096 * 4];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyOnBig,The following statement contains a magic number: var sec = new byte[4096 * 4];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyOnBig,The following statement contains a magic number: var trd = new byte[4096 * 4];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyOnBig,The following statement contains a magic number: var trd = new byte[4096 * 4];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyOnBig,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tri = trd)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                  Assert.True(diffPages.IsDiff);                    Memory.Copy(tri' one' 4096);                  new DiffApplier                  {                      Destination = tri'                      Diff = tmp'                      Size = 4096'                      DiffSize = diffPages.OutputSize                  }.Apply(false);                    var result = Memory.Compare(tri' two' 4096' out int position);                  Assert.Equal(0' result);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyOnBig,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tri = trd)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                  Assert.True(diffPages.IsDiff);                    Memory.Copy(tri' one' 4096);                  new DiffApplier                  {                      Destination = tri'                      Diff = tmp'                      Size = 4096'                      DiffSize = diffPages.OutputSize                  }.Apply(false);                    var result = Memory.Compare(tri' two' 4096' out int position);                  Assert.Equal(0' result);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyOnBig,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tri = trd)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                  Assert.True(diffPages.IsDiff);                    Memory.Copy(tri' one' 4096);                  new DiffApplier                  {                      Destination = tri'                      Diff = tmp'                      Size = 4096'                      DiffSize = diffPages.OutputSize                  }.Apply(false);                    var result = Memory.Compare(tri' two' 4096' out int position);                  Assert.Equal(0' result);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyOnBig,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tri = trd)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                  Assert.True(diffPages.IsDiff);                    Memory.Copy(tri' one' 4096);                  new DiffApplier                  {                      Destination = tri'                      Diff = tmp'                      Size = 4096'                      DiffSize = diffPages.OutputSize                  }.Apply(false);                    var result = Memory.Compare(tri' two' 4096' out int position);                  Assert.Equal(0' result);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CanComputeSmallDifference_AndThenApplyOnBig,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tri = trd)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                  Assert.True(diffPages.IsDiff);                    Memory.Copy(tri' one' 4096);                  new DiffApplier                  {                      Destination = tri'                      Diff = tmp'                      Size = 4096'                      DiffSize = diffPages.OutputSize                  }.Apply(false);                    var result = Memory.Compare(tri' two' 4096' out int position);                  Assert.Equal(0' result);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,ComputeAndThenApplyRandomized,The following statement contains a magic number: const int Size = 4096 * 4;
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,ComputeAndThenApplyRandomized,The following statement contains a magic number: const int Size = 4096 * 4;
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,ComputeAndThenApplyRandomized,The following statement contains a magic number: var rnd = new Random(1337);
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,ComputeAndThenApplyRandomized,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tri = trd)              fixed (byte* tmp = new byte[Size])              {                                  for (int i = 0; i < 4096; i++)                  {                      // We are going to change one byte at a time and try to reconstruct.                       int idx = rnd.Next(Size);                      sec[idx]++;                        var diffPages = new DiffPages                      {                          Output = tmp'                      };                        Memory.Set(tri' 0' Size);                      Memory.Set(tmp' 0' Size);                        diffPages.ComputeDiff(one' two' Size);                      if (!diffPages.IsDiff)                          return;                        Memory.Copy(tri' one' Size);                      new DiffApplier                      {                          Destination = tri'                          Diff = tmp'                          Size = Size'                          DiffSize = diffPages.OutputSize                      }.Apply(false);                        var result = Memory.Compare(tri' two' Size' out int position);                      if ( result != 0 )                          Console.WriteLine($"The position at fault is '{position}'");                      Assert.Equal(0' result);                  }              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CompletelyDifferent,The following statement contains a magic number: var fst = new byte[4096];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CompletelyDifferent,The following statement contains a magic number: var sec = new byte[4096];
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CompletelyDifferent,The following statement contains a magic number: new Random(2).NextBytes(sec);
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CompletelyDifferent,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                    Assert.False(diffPages.IsDiff);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,CompletelyDifferent,The following statement contains a magic number: fixed (byte* two = sec)              fixed (byte* tmp = new byte[4096])              {                  var diffPages = new DiffPages                  {                      Output = tmp'                  };                    diffPages.ComputeDiff(one' two' 4096);                    Assert.False(diffPages.IsDiff);              }
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,Applying_diff_calculated_as_new_multiple_times,The following statement contains a magic number: const int size = 4096;
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,Applying_diff_calculated_as_new_multiple_times,The following statement contains a magic number: fst[i] = (byte)r.Next(0' 255);
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,Applying_diff_calculated_as_new_multiple_times,The following statement contains a magic number: sec[(size - 1) - i] = (byte)r.Next(0' 255);
Magic Number,FastTests.Sparrow,DiffPagesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\DiffPagesTests.cs,Applying_diff_calculated_as_new_multiple_times,The following statement contains a magic number: i < 10
Magic Number,FastTests.Sparrow,EncryptionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\EncryptionTests.cs,WriteAndReadPageUsingCryptoPager,The following statement contains a magic number: cryptoPager.EnsureContinuous(17' 1);
Magic Number,FastTests.Sparrow,EncryptionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\EncryptionTests.cs,WriteAndReadPageUsingCryptoPager,The following statement contains a magic number: var pagePointer = cryptoPager.AcquirePagePointerForNewPage(tx' 17' 1);
Magic Number,FastTests.Sparrow,EncryptionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\EncryptionTests.cs,WriteAndReadPageUsingCryptoPager,The following statement contains a magic number: header->PageNumber = 17;
Magic Number,FastTests.Sparrow,EncryptionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\EncryptionTests.cs,WriteAndReadPageUsingCryptoPager,The following statement contains a magic number: var pagePointer = cryptoPager.AcquirePagePointer(tx' 17);
Magic Number,FastTests.Sparrow,EncryptionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\EncryptionTests.cs,WriteAndReadPageUsingCryptoPager,The following statement contains a magic number: Assert.True(pagePointer[666] == 'X');
Magic Number,FastTests.Sparrow,EncryptionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\EncryptionTests.cs,WriteAndReadPageUsingCryptoPager,The following statement contains a magic number: Assert.True(pagePointer[1039] == 'X');
Magic Number,FastTests.Sparrow,EncryptionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\EncryptionTests.cs,WriteSeekAndReadInTempCryptoStream,The following statement contains a magic number: var bytes = new byte[r.Next(128' 1024 * 1024 * 4)];
Magic Number,FastTests.Sparrow,EncryptionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\EncryptionTests.cs,WriteSeekAndReadInTempCryptoStream,The following statement contains a magic number: var bytes = new byte[r.Next(128' 1024 * 1024 * 4)];
Magic Number,FastTests.Sparrow,EncryptionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\EncryptionTests.cs,WriteSeekAndReadInTempCryptoStream,The following statement contains a magic number: var bytes = new byte[r.Next(128' 1024 * 1024 * 4)];
Magic Number,FastTests.Sparrow,EncryptionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\EncryptionTests.cs,WriteSeekAndReadInTempCryptoStream,The following statement contains a magic number: var bytes = new byte[r.Next(128' 1024 * 1024 * 4)];
Magic Number,FastTests.Sparrow,EncryptionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\EncryptionTests.cs,WriteSeekAndReadInTempCryptoStream,The following statement contains a magic number: var someRandomLocationInTheMiddle = r.Next(0' bytes.Length - 7);
Magic Number,FastTests.Sparrow,EncryptionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\EncryptionTests.cs,WriteSeekAndReadInTempCryptoStream,The following statement contains a magic number: fixed (byte* b = bytes)                  {                      // injecting 7 'X' characters                      Memory.Set(b + someRandomLocationInTheMiddle' (byte)'X'' 7);                  }
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32,The following statement contains a magic number: expected = 3571373779;
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Marvin32_IntArrayEquivalence,The following statement contains a magic number: int[] test = { 32' 5' 11588' 5 };
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Marvin32_IntArrayEquivalence,The following statement contains a magic number: int[] test = { 32' 5' 11588' 5 };
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Marvin32_IntArrayEquivalence,The following statement contains a magic number: int[] test = { 32' 5' 11588' 5 };
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Marvin32_IntArrayEquivalence,The following statement contains a magic number: int[] test = { 32' 5' 11588' 5 };
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_EquivalenceInDifferentMemoryLocations,The following statement contains a magic number: uint result = Hashing.XXHash32.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_EquivalenceInDifferentMemoryLocations,The following statement contains a magic number: uint expected = Hashing.XXHash32.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_EquivalenceInDifferentMemoryLocations,The following statement contains a magic number: result = Hashing.XXHash32.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_EquivalenceInDifferentMemoryLocations,The following statement contains a magic number: expected = Hashing.XXHash32.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_EquivalenceInDifferentMemoryLocations,The following statement contains a magic number: result = Hashing.XXHash32.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_EquivalenceInDifferentMemoryLocations,The following statement contains a magic number: expected = Hashing.XXHash32.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash64_EquivalenceInDifferentMemoryLocationsXXHash64,The following statement contains a magic number: ulong result = Hashing.XXHash64.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash64_EquivalenceInDifferentMemoryLocationsXXHash64,The following statement contains a magic number: ulong expected = Hashing.XXHash64.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash64_EquivalenceInDifferentMemoryLocationsXXHash64,The following statement contains a magic number: result = Hashing.XXHash64.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash64_EquivalenceInDifferentMemoryLocationsXXHash64,The following statement contains a magic number: expected = Hashing.XXHash64.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash64_EquivalenceInDifferentMemoryLocationsXXHash64,The following statement contains a magic number: result = Hashing.XXHash64.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash64_EquivalenceInDifferentMemoryLocationsXXHash64,The following statement contains a magic number: expected = Hashing.XXHash64.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128_EquivalenceInDifferentMemoryLocations,The following statement contains a magic number: var result = Hashing.Metro128.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128_EquivalenceInDifferentMemoryLocations,The following statement contains a magic number: var expected = Hashing.Metro128.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128_EquivalenceInDifferentMemoryLocations,The following statement contains a magic number: result = Hashing.Metro128.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128_EquivalenceInDifferentMemoryLocations,The following statement contains a magic number: expected = Hashing.Metro128.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128_EquivalenceInDifferentMemoryLocations,The following statement contains a magic number: result = Hashing.Metro128.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128_EquivalenceInDifferentMemoryLocations,The following statement contains a magic number: expected = Hashing.Metro128.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_NotEquivalenceOfBytesWithString,The following statement contains a magic number: uint result = Hashing.XXHash32.CalculateRaw(value' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_NotEquivalenceOfBytesWithString,The following statement contains a magic number: uint expected = Hashing.XXHash32.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_NotEquivalenceOfBytesWithString,The following statement contains a magic number: result = Hashing.XXHash32.CalculateRaw(value' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_NotEquivalenceOfBytesWithString,The following statement contains a magic number: expected = Hashing.XXHash32.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_NotEquivalenceOfBytesWithString,The following statement contains a magic number: result = Hashing.XXHash32.CalculateRaw(value' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_NotEquivalenceOfBytesWithString,The following statement contains a magic number: expected = Hashing.XXHash32.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash64_NotEquivalenceOfBytesWithString,The following statement contains a magic number: ulong result = Hashing.XXHash64.CalculateRaw(value' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash64_NotEquivalenceOfBytesWithString,The following statement contains a magic number: ulong expected = Hashing.XXHash64.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash64_NotEquivalenceOfBytesWithString,The following statement contains a magic number: result = Hashing.XXHash64.CalculateRaw(value' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash64_NotEquivalenceOfBytesWithString,The following statement contains a magic number: expected = Hashing.XXHash64.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash64_NotEquivalenceOfBytesWithString,The following statement contains a magic number: result = Hashing.XXHash64.CalculateRaw(value' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash64_NotEquivalenceOfBytesWithString,The following statement contains a magic number: expected = Hashing.XXHash64.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128_NotEquivalenceOfBytesWithString,The following statement contains a magic number: var result = Hashing.Metro128.CalculateRaw(value' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128_NotEquivalenceOfBytesWithString,The following statement contains a magic number: var expected = Hashing.Metro128.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128_NotEquivalenceOfBytesWithString,The following statement contains a magic number: result = Hashing.Metro128.CalculateRaw(value' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128_NotEquivalenceOfBytesWithString,The following statement contains a magic number: expected = Hashing.Metro128.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128_NotEquivalenceOfBytesWithString,The following statement contains a magic number: result = Hashing.Metro128.CalculateRaw(value' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128_NotEquivalenceOfBytesWithString,The following statement contains a magic number: expected = Hashing.Metro128.Calculate(Encoding.UTF8.GetBytes(value)' seed: 10);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_IterativeHashingEquivalence,The following statement contains a magic number: var rnd = new Random(1000);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_IterativeHashingEquivalence,The following statement contains a magic number: uint seed = 233;
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_IterativeHashingPrefixing,The following statement contains a magic number: var rnd = new Random(1000);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_IterativeHashingPrefixing,The following statement contains a magic number: uint seed = 233;
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: int h1 = Hashing.HashCombiner.CombineInline(1991' 13);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: int h1 = Hashing.HashCombiner.CombineInline(1991' 13);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: int h2 = Hashing.HashCombiner.CombineInline(1991' 12);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: int h2 = Hashing.HashCombiner.CombineInline(1991' 12);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_StreamedHashingEquivalence,The following statement contains a magic number: var rnd = new Random(1000);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash32_StreamedHashingEquivalence,The following statement contains a magic number: uint seed = 233;
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash64_StreamedHashingEquivalence,The following statement contains a magic number: var rnd = new Random(1000);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,XXHash64_StreamedHashingEquivalence,The following statement contains a magic number: uint seed = 233;
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128_StreamedHashingEquivalence,The following statement contains a magic number: var rnd = new Random(1000);
Magic Number,FastTests.Sparrow,HashingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Hashing.cs,Metro128_StreamedHashingEquivalence,The following statement contains a magic number: uint seed = 233;
Magic Number,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanProperlyReportIoMetrics,The following statement contains a magic number: var metrics = new IoMetrics(4' 4);
Magic Number,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanProperlyReportIoMetrics,The following statement contains a magic number: var metrics = new IoMetrics(4' 4);
Magic Number,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanProperlyReportIoMetrics,The following statement contains a magic number: var durationMeasurement = new IoMeterBuffer.DurationMeasurement(meterIoRate.Parent' IoMetrics.MeterType.JournalWrite' i + 1' 0' null)                  {                      Start = now'                      End = now.AddMilliseconds(2)                  };
Magic Number,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanProperlyReportIoMetrics,The following statement contains a magic number: i < 6
Magic Number,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanProperlyReportIoMetrics,The following statement contains a magic number: Assert.InRange(currentItem.Duration.TotalMilliseconds' 0' 2);
Magic Number,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanProperlyReportIoMetrics,The following statement contains a magic number: Assert.Equal(1 + 2 + 3 + 4 + 5' historyItems[0].TotalSize);
Magic Number,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanProperlyReportIoMetrics,The following statement contains a magic number: Assert.Equal(1 + 2 + 3 + 4 + 5' historyItems[0].TotalSize);
Magic Number,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanProperlyReportIoMetrics,The following statement contains a magic number: Assert.Equal(1 + 2 + 3 + 4 + 5' historyItems[0].TotalSize);
Magic Number,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanProperlyReportIoMetrics,The following statement contains a magic number: Assert.Equal(1 + 2 + 3 + 4 + 5' historyItems[0].TotalSize);
Magic Number,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanProperlyReportIoMetrics,The following statement contains a magic number: Assert.Equal(6L' currentItems[0].Size);
Magic Number,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanReportMetricsInParallel,The following statement contains a magic number: var currentBuffer = 2048;
Magic Number,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanReportMetricsInParallel,The following statement contains a magic number: var historicalBuffer = 20000;
Magic Number,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanReportMetricsInParallel,The following statement contains a magic number: var forIterations = 1000 * 1000;
Magic Number,FastTests.Sparrow,IoMetric,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\IoMetric.cs,CanReportMetricsInParallel,The following statement contains a magic number: var forIterations = 1000 * 1000;
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress2,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,LZ4Tests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\LZ4.cs,Compress,The following statement contains a magic number: byte[] input = new byte[] { 3' 3' 2' 2' 3' 0' 2' 0' 2' 1' 0' 1' 3' 1' 3' 0' 3' 0' 2' 0' 2' 1' 3' 1' 0' 3' 0' 0' 2' 0' 1' 2' 2' 2' 3' 2' 0' 0' 2' 1' 2' 2' 0' 3' 0' 0' 3' 2' 0' 2' 1' 2' 3' 2' 2' 1' 3' 0' 1' 0' 3' 1' 1' 2' 0' 2' 2' 1' 2' 1' 0' 3' 2' 0' 2' 0' 1' 3' 1' 3' 3' 2' 3' 0' 2' 2' 2' 0' 3' 2' 2' 0' 2' 2' 2' 0' 0' 1' 3' 1 };
Magic Number,FastTests.Sparrow,MemoryTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Memory.cs,LongRoundedSize,The following statement contains a magic number: var s1 = new byte[8] { 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00 };
Magic Number,FastTests.Sparrow,MemoryTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Memory.cs,LongRoundedSize,The following statement contains a magic number: var s2 = new byte[8] { 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00 };
Magic Number,FastTests.Sparrow,MemoryTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Memory.cs,SmallerThanBigLoop,The following statement contains a magic number: size < 8
Magic Number,FastTests.Sparrow,MemoryTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Memory.cs,IncreasingSizeForLoop,The following statement contains a magic number: size < 1024
Magic Number,FastTests.Sparrow,PtrBitVectorTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\PtrBitVector.cs,SetIndex,The following statement contains a magic number: var original = new byte[8] { 0x00' 0x00' 0x00' 0x80' 0x00' 0x00' 0x00' 0x00 };
Magic Number,FastTests.Sparrow,PtrBitVectorTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\PtrBitVector.cs,SetIndex,The following statement contains a magic number: var ptr = new PtrBitVector(storage' 64);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_SingleItemPush,The following statement contains a magic number: var rb = new SingleConsumerRingBuffer<long>(3);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_SingleItemPush,The following statement contains a magic number: long item = 910;
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_SingleItemPush,The following statement contains a magic number: Assert.Equal(4' span.Length);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_SingleItemPush,The following statement contains a magic number: Assert.Equal(910' span[0].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_SingleItemPush,The following statement contains a magic number: Assert.Equal(910' span[1].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_SingleItemPush,The following statement contains a magic number: Assert.Equal(910' span[2].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_SingleItemPush,The following statement contains a magic number: Assert.Equal(910' span[2].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_SingleItemPush,The following statement contains a magic number: Assert.Equal(910' span[3].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_SingleItemPush,The following statement contains a magic number: Assert.Equal(910' span[3].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_SingleItemPush,The following statement contains a magic number: item = 911;
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_SingleItemPush,The following statement contains a magic number: Assert.Equal(911' span[0].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsPush,The following statement contains a magic number: var rb = new SingleConsumerRingBuffer<long>(4);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsPush,The following statement contains a magic number: long item = 910;
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsPush,The following statement contains a magic number: Assert.Equal(2' span.Length);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsPush,The following statement contains a magic number: Assert.Equal(910' span[0].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsPush,The following statement contains a magic number: Assert.Equal(910' span[1].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsPush,The following statement contains a magic number: item = 911;
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsPush,The following statement contains a magic number: item = 912;
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsPush,The following statement contains a magic number: Assert.Equal(2' span.Length);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsPush,The following statement contains a magic number: Assert.Equal(911' span[0].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsPush,The following statement contains a magic number: Assert.Equal(911' span[1].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsPush,The following statement contains a magic number: Assert.Equal(912' span[0].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsSingleAcquirePush,The following statement contains a magic number: var rb = new SingleConsumerRingBuffer<long>(4);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsSingleAcquirePush,The following statement contains a magic number: long item = 910;
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsSingleAcquirePush,The following statement contains a magic number: item = 911;
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsSingleAcquirePush,The following statement contains a magic number: Assert.Equal(910' ringItem.Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsSingleAcquirePush,The following statement contains a magic number: Assert.Equal(911' ringItem.Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsSingleAcquirePush,The following statement contains a magic number: item = 912;
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsSingleAcquirePush,The following statement contains a magic number: item = 913;
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsSingleAcquirePush,The following statement contains a magic number: Assert.Equal(912' ringItem.Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsSingleAcquirePush,The following statement contains a magic number: Assert.Equal(912' ringItem.Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleItemsSingleAcquirePush,The following statement contains a magic number: Assert.Equal(913' ringItem.Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleAcquires_SingleRelease,The following statement contains a magic number: var rb = new SingleConsumerRingBuffer<long>(4);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleAcquires_SingleRelease,The following statement contains a magic number: long item = 910;
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleAcquires_SingleRelease,The following statement contains a magic number: Assert.Equal(2' span.Length);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleAcquires_SingleRelease,The following statement contains a magic number: Assert.Equal(910' span[0].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleAcquires_SingleRelease,The following statement contains a magic number: Assert.Equal(910' span[1].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleAcquires_SingleRelease,The following statement contains a magic number: item = 911;
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleAcquires_SingleRelease,The following statement contains a magic number: Assert.Equal(2' span.Length);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleAcquires_SingleRelease,The following statement contains a magic number: Assert.Equal(911' span[0].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleAcquires_SingleRelease,The following statement contains a magic number: Assert.Equal(911' span[1].Item);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleAcquires_SingleRelease,The following statement contains a magic number: item = 912;
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_MultipleAcquires_SingleRelease,The following statement contains a magic number: item = 912;
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_WhenEmptyAndSimultaneouslyTryPushAndTryAcquired_ShouldAcquiredLegal,The following statement contains a magic number: var rb = new SingleConsumerRingBuffer<TestItem>(4);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_WhenEmptyAndSimultaneouslyTryPushAndTryAcquired_ShouldAcquiredLegal,The following statement contains a magic number: var finished = new Barrier(2);
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_WhenEmptyAndSimultaneouslyTryPushAndTryAcquired_ShouldAcquiredLegal,The following statement contains a magic number: j < 100
Magic Number,FastTests.Sparrow,RingBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\RingBufferTests.cs,RingBuffer_WhenEmptyAndSimultaneouslyTryPushAndTryAcquired_ShouldAcquiredLegal,The following statement contains a magic number: i < 1000
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,Small,The following statement contains a magic number: int[] values = { 9' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,Small,The following statement contains a magic number: int[] values = { 9' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,Small,The following statement contains a magic number: int[] values = { 9' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,Small,The following statement contains a magic number: int[] values = { 9' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,Small,The following statement contains a magic number: int[] values = { 9' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,Small,The following statement contains a magic number: int[] values = { 9' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,Small,The following statement contains a magic number: int[] values = { 9' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,SmallWithDuplicates,The following statement contains a magic number: int[] values = { 9' 9' 9' 9' 2' 2' 2' 1 };
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,SmallWithDuplicates,The following statement contains a magic number: int[] values = { 9' 9' 9' 9' 2' 2' 2' 1 };
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,SmallWithDuplicates,The following statement contains a magic number: int[] values = { 9' 9' 9' 9' 2' 2' 2' 1 };
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,SmallWithDuplicates,The following statement contains a magic number: int[] values = { 9' 9' 9' 9' 2' 2' 2' 1 };
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,SmallWithDuplicates,The following statement contains a magic number: int[] values = { 9' 9' 9' 9' 2' 2' 2' 1 };
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,SmallWithDuplicates,The following statement contains a magic number: int[] values = { 9' 9' 9' 9' 2' 2' 2' 1 };
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,SmallWithDuplicates,The following statement contains a magic number: int[] values = { 9' 9' 9' 9' 2' 2' 2' 1 };
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,GeneratorWithDuplicates,The following statement contains a magic number: result[i] = gen.Next(0' size / 4);
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,IncreasingSizes,The following statement contains a magic number: i < 512
Magic Number,FastTests.Sparrow,SortingTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\Sorting.cs,IncreasingSizesWithValues,The following statement contains a magic number: i < 512
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,UnmanagedWriteBufferTests,The following statement contains a magic number: AllocationsBatch = new byte[2 * DefaultBufferSize];
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,WriteSingleByteNoAllocations,The following statement contains a magic number: var allocation = context.GetMemory(2);
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,WriteSingleByteNoAllocations,The following statement contains a magic number: buffer.WriteByte(10);
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,WriteSingleByteNoAllocations,The following statement contains a magic number: Assert.Equal(allocation.Address[0]' 10);
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,WriteTwoBytesWithAllocation,The following statement contains a magic number: buffer.WriteByte(10);
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,WriteTwoBytesWithAllocation,The following statement contains a magic number: Assert.Equal(allocation.Address[0]' 10);
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,WriteTwoBytesWithAllocation,The following statement contains a magic number: buffer.WriteByte(20);
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,WriteTwoBytesWithAllocation,The following statement contains a magic number: Assert.Equal(buffer.SizeInBytes' 2);
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,WriteMultipleBytesWithAllocations,The following statement contains a magic number: i < 2*DefaultBufferSize
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,ClearResetsSizeAndEffectivellyClears,The following statement contains a magic number: outputBuffer[i] = 124;
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,ClearResetsSizeAndEffectivellyClears,The following statement contains a magic number: Assert.Equal(b' 124);
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,WriteByteThrowsAfterDispose,The following statement contains a magic number: Assert.Throws(typeof(ObjectDisposedException)' () => buffer.WriteByte(10));
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,DoesNotLeakMemoryWhenClearing,The following statement contains a magic number: int Size = 1024;
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,DoesNotLeakMemoryWhenClearing,The following statement contains a magic number: var allocation = context.GetMemory(Size / 2);
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,BehavesWithRespectToCopying,The following statement contains a magic number: bufferCopy.WriteByte(2);
Magic Number,FastTests.Sparrow,UnmanagedWriteBufferTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Sparrow\UnmanagedWriteBufferTests.cs,BehavesWithRespectToCopying,The following statement contains a magic number: buffer.WriteByte(3);
Magic Number,FastTests.Utils,ChunkedMmapStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\ChunkedMmapStreamTests.cs,Can_seek_and_read_from_chunked_mmap_file,The following statement contains a magic number: i < 1000
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_of_nested_objects_with_prefix_should_work,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["Foo"] = new DynamicJsonValue                  {                      ["Bar"] = new DynamicJsonValue                      {                          ["C"] = new DynamicJsonArray(new[]                          {                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 1                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["YABC"] = 2                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 3                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 4                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 5                                      }                                  }                              }'                          })                      }                  }              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_of_nested_objects_with_prefix_should_work,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["Foo"] = new DynamicJsonValue                  {                      ["Bar"] = new DynamicJsonValue                      {                          ["C"] = new DynamicJsonArray(new[]                          {                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 1                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["YABC"] = 2                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 3                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 4                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 5                                      }                                  }                              }'                          })                      }                  }              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_of_nested_objects_with_prefix_should_work,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["Foo"] = new DynamicJsonValue                  {                      ["Bar"] = new DynamicJsonValue                      {                          ["C"] = new DynamicJsonArray(new[]                          {                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 1                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["YABC"] = 2                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 3                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 4                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 5                                      }                                  }                              }'                          })                      }                  }              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_of_nested_objects_with_prefix_should_work,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["Foo"] = new DynamicJsonValue                  {                      ["Bar"] = new DynamicJsonValue                      {                          ["C"] = new DynamicJsonArray(new[]                          {                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 1                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["YABC"] = 2                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 3                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 4                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 5                                      }                                  }                              }'                          })                      }                  }              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_of_nested_objects_with_suffix_should_work,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["Foo"] = new DynamicJsonValue                  {                      ["Bar"] = new DynamicJsonValue                      {                          ["C"] = new DynamicJsonArray(new[]                          {                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 1                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["YABC"] = 2                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 3                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 4                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 5                                      }                                  }                              }'                          })                      }                  }              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_of_nested_objects_with_suffix_should_work,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["Foo"] = new DynamicJsonValue                  {                      ["Bar"] = new DynamicJsonValue                      {                          ["C"] = new DynamicJsonArray(new[]                          {                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 1                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["YABC"] = 2                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 3                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 4                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 5                                      }                                  }                              }'                          })                      }                  }              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_of_nested_objects_with_suffix_should_work,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["Foo"] = new DynamicJsonValue                  {                      ["Bar"] = new DynamicJsonValue                      {                          ["C"] = new DynamicJsonArray(new[]                          {                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 1                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["YABC"] = 2                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 3                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 4                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 5                                      }                                  }                              }'                          })                      }                  }              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_of_nested_objects_with_suffix_should_work,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["Foo"] = new DynamicJsonValue                  {                      ["Bar"] = new DynamicJsonValue                      {                          ["C"] = new DynamicJsonArray(new[]                          {                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 1                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["YABC"] = 2                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 3                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 4                                      }                                  }                              }'                              new DynamicJsonValue                              {                                  ["A"] = new DynamicJsonValue                                  {                                      ["X"] = new DynamicJsonValue                                      {                                          ["Y"] = 5                                      }                                  }                              }'                          })                      }                  }              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object_with_prefix1,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId"] = new DynamicJsonArray(new object[] { 1' 2' 3 })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object_with_prefix1,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId"] = new DynamicJsonArray(new object[] { 1' 2' 3 })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object_with_suffix1,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId"] = new DynamicJsonArray(new object[] { 1' 2' 3 })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object_with_suffix1,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId"] = new DynamicJsonArray(new object[] { 1' 2' 3 })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object_with_prefix2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId"] = new DynamicJsonArray(new[]                  {                      new DynamicJsonValue                      {                          ["Foo"] = 11                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 2                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 3                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 4                      }'                  })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object_with_prefix2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId"] = new DynamicJsonArray(new[]                  {                      new DynamicJsonValue                      {                          ["Foo"] = 11                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 2                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 3                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 4                      }'                  })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object_with_prefix2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId"] = new DynamicJsonArray(new[]                  {                      new DynamicJsonValue                      {                          ["Foo"] = 11                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 2                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 3                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 4                      }'                  })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object_with_prefix2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId"] = new DynamicJsonArray(new[]                  {                      new DynamicJsonValue                      {                          ["Foo"] = 11                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 2                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 3                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 4                      }'                  })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object_with_suffix2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId"] = new DynamicJsonArray(new[]                  {                      new DynamicJsonValue                      {                          ["Foo"] = 11                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 2                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 3                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 4                      }'                  })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object_with_suffix2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId"] = new DynamicJsonArray(new[]                  {                      new DynamicJsonValue                      {                          ["Foo"] = 11                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 2                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 3                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 4                      }'                  })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object_with_suffix2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId"] = new DynamicJsonArray(new[]                  {                      new DynamicJsonValue                      {                          ["Foo"] = 11                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 2                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 3                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 4                      }'                  })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object_with_suffix2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId"] = new DynamicJsonArray(new[]                  {                      new DynamicJsonValue                      {                          ["Foo"] = 11                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 2                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 3                      }'                      new DynamicJsonValue                      {                          ["Foo"] = 4                      }'                  })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId1"] = new DynamicJsonArray(new object[] { 1' 2' 3 })'                  ["ContactInfoId2"] = new DynamicJsonArray(new object[] { 1.1' 2.2' 3.3 })'                  ["ContactInfoId3"] = new DynamicJsonArray(new object[] { (long)1' (long)2' (long)3 })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId1"] = new DynamicJsonArray(new object[] { 1' 2' 3 })'                  ["ContactInfoId2"] = new DynamicJsonArray(new object[] { 1.1' 2.2' 3.3 })'                  ["ContactInfoId3"] = new DynamicJsonArray(new object[] { (long)1' (long)2' (long)3 })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId1"] = new DynamicJsonArray(new object[] { 1' 2' 3 })'                  ["ContactInfoId2"] = new DynamicJsonArray(new object[] { 1.1' 2.2' 3.3 })'                  ["ContactInfoId3"] = new DynamicJsonArray(new object[] { (long)1' (long)2' (long)3 })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId1"] = new DynamicJsonArray(new object[] { 1' 2' 3 })'                  ["ContactInfoId2"] = new DynamicJsonArray(new object[] { 1.1' 2.2' 3.3 })'                  ["ContactInfoId3"] = new DynamicJsonArray(new object[] { (long)1' (long)2' (long)3 })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId1"] = new DynamicJsonArray(new object[] { 1' 2' 3 })'                  ["ContactInfoId2"] = new DynamicJsonArray(new object[] { 1.1' 2.2' 3.3 })'                  ["ContactInfoId3"] = new DynamicJsonArray(new object[] { (long)1' (long)2' (long)3 })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId1"] = new DynamicJsonArray(new object[] { 1' 2' 3 })'                  ["ContactInfoId2"] = new DynamicJsonArray(new object[] { 1.1' 2.2' 3.3 })'                  ["ContactInfoId3"] = new DynamicJsonArray(new object[] { (long)1' (long)2' (long)3 })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_with_array_selection_should_work_in_flat_object2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  ["ContactInfoId1"] = new DynamicJsonArray(new object[] { 1' 2' 3 })'                  ["ContactInfoId2"] = new DynamicJsonArray(new object[] { 1.1' 2.2' 3.3 })'                  ["ContactInfoId3"] = new DynamicJsonArray(new object[] { (long)1' (long)2' (long)3 })              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_should_work_in_flat_object2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  //for numbers' only int32' int64 and double are supported                  ["ContactInfoId"] = 12'                  ["ContactInfoId2"] = (long)56'                  ["ContactInfoId3"] = 78.89' //this one is double              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_should_work_in_flat_object2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  //for numbers' only int32' int64 and double are supported                  ["ContactInfoId"] = 12'                  ["ContactInfoId2"] = (long)56'                  ["ContactInfoId3"] = 78.89' //this one is double              };
Magic Number,FastTests.Utils,IncludeUtilTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\IncludeUtilTests.cs,FindDocIdFromPath_should_work_in_flat_object2,The following statement contains a magic number: var obj = new DynamicJsonValue              {                  ["Name"] = "John Doe"'                  //for numbers' only int32' int64 and double are supported                  ["ContactInfoId"] = 12'                  ["ContactInfoId2"] = (long)56'                  ["ContactInfoId3"] = 78.89' //this one is double              };
Magic Number,FastTests.Utils,LimitedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\LimitedStreamTests.cs,Should_properly_read_ranges,The following statement contains a magic number: var bytes = new byte[r.Next(128' 1024 * 1024 * 3)];
Magic Number,FastTests.Utils,LimitedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\LimitedStreamTests.cs,Should_properly_read_ranges,The following statement contains a magic number: var bytes = new byte[r.Next(128' 1024 * 1024 * 3)];
Magic Number,FastTests.Utils,LimitedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\LimitedStreamTests.cs,Should_properly_read_ranges,The following statement contains a magic number: var bytes = new byte[r.Next(128' 1024 * 1024 * 3)];
Magic Number,FastTests.Utils,LimitedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\LimitedStreamTests.cs,Should_properly_read_ranges,The following statement contains a magic number: var bytes = new byte[r.Next(128' 1024 * 1024 * 3)];
Magic Number,FastTests.Utils,LimitedStreamTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\LimitedStreamTests.cs,Should_properly_read_ranges,The following statement contains a magic number: var max = r.Next(1' bytes.Length / 2);
Magic Number,FastTests.Utils,RevisionsHelper,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\RevisionsHelper.cs,SetupRevisions,The following statement contains a magic number: var configuration = new RevisionsConfiguration              {                  Default = new RevisionsCollectionConfiguration                  {                      Disabled = false'                      MinimumRevisionsToKeep = 5                  }'                  Collections = new Dictionary<string' RevisionsCollectionConfiguration>                  {                      ["Users"] = new RevisionsCollectionConfiguration                      {                          Disabled = false'                          PurgeOnDelete = true'                          MinimumRevisionsToKeep = 123                      }'                      ["People"] = new RevisionsCollectionConfiguration                      {                          Disabled = false'                          MinimumRevisionsToKeep = 10                      }'                      ["Comments"] = new RevisionsCollectionConfiguration                      {                          Disabled = true                      }'                      ["Products"] = new RevisionsCollectionConfiguration                      {                          Disabled = true                      }                  }              };
Magic Number,FastTests.Utils,RevisionsHelper,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\RevisionsHelper.cs,SetupRevisions,The following statement contains a magic number: var configuration = new RevisionsConfiguration              {                  Default = new RevisionsCollectionConfiguration                  {                      Disabled = false'                      MinimumRevisionsToKeep = 5                  }'                  Collections = new Dictionary<string' RevisionsCollectionConfiguration>                  {                      ["Users"] = new RevisionsCollectionConfiguration                      {                          Disabled = false'                          PurgeOnDelete = true'                          MinimumRevisionsToKeep = 123                      }'                      ["People"] = new RevisionsCollectionConfiguration                      {                          Disabled = false'                          MinimumRevisionsToKeep = 10                      }'                      ["Comments"] = new RevisionsCollectionConfiguration                      {                          Disabled = true                      }'                      ["Products"] = new RevisionsCollectionConfiguration                      {                          Disabled = true                      }                  }              };
Magic Number,FastTests.Utils,RevisionsHelper,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Utils\RevisionsHelper.cs,SetupRevisions,The following statement contains a magic number: var configuration = new RevisionsConfiguration              {                  Default = new RevisionsCollectionConfiguration                  {                      Disabled = false'                      MinimumRevisionsToKeep = 5                  }'                  Collections = new Dictionary<string' RevisionsCollectionConfiguration>                  {                      ["Users"] = new RevisionsCollectionConfiguration                      {                          Disabled = false'                          PurgeOnDelete = true'                          MinimumRevisionsToKeep = 123                      }'                      ["People"] = new RevisionsCollectionConfiguration                      {                          Disabled = false'                          MinimumRevisionsToKeep = 10                      }'                      ["Comments"] = new RevisionsCollectionConfiguration                      {                          Disabled = true                      }'                      ["Products"] = new RevisionsCollectionConfiguration                      {                          Disabled = true                      }                  }              };
Magic Number,FastTests.Voron.Backups,BackupToOneZipFile,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Backups\BackupToOneZipFile.cs,FullBackupToOneZipFile,The following statement contains a magic number: await RevisionsHelper.SetupRevisions(Server.ServerStore' database.Name' modifyConfiguration: configuration =>                  {                      configuration.Collections["Users"].PurgeOnDelete = false;                      configuration.Collections["Users"].MinimumRevisionsToKeep = 13;                  });
Magic Number,FastTests.Voron.Backups,BackupToOneZipFile,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Backups\BackupToOneZipFile.cs,FullBackupToOneZipFile,The following statement contains a magic number: Assert.Equal(2' indexes.Count);
Magic Number,FastTests.Voron.Backups,Full,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Backups\Full.cs,Configure,The following statement contains a magic number: options.MaxLogFileSize = 1000 * Constants.Storage.PageSize;
Magic Number,FastTests.Voron.Backups,Full,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Backups\Full.cs,CanBackupAndRestoreSmall,The following statement contains a magic number: var buffer = new byte[8192];
Magic Number,FastTests.Voron.Backups,Full,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Backups\Full.cs,CanBackupAndRestoreSmall,The following statement contains a magic number: i < 2
Magic Number,FastTests.Voron.Backups,Full,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Backups\Full.cs,CanBackupAndRestoreSmall,The following statement contains a magic number: i < 4
Magic Number,FastTests.Voron.Backups,Full,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Backups\Full.cs,CanBackupAndRestoreSmall,The following statement contains a magic number: i < 4
Magic Number,FastTests.Voron.Backups,RavenDB_3115,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Backups\RavenDB_3115.cs,ModifyOptions,The following statement contains a magic number: options.MaxLogFileSize = 1000 * Constants.Storage.PageSize;
Magic Number,FastTests.Voron.Backups,RavenDB_3115,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Backups\RavenDB_3115.cs,ShouldCorrectlyLoadAfterRestartIfIncrementalBackupWasDone,The following statement contains a magic number: var bytes = new byte[1024];
Magic Number,FastTests.Voron.Backups,RavenDB_3115,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Backups\RavenDB_3115.cs,ShouldCorrectlyLoadAfterRestartIfIncrementalBackupWasDone,The following statement contains a magic number: i < 100
Magic Number,FastTests.Voron.Backups,RavenDB_3115,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Backups\RavenDB_3115.cs,ShouldCorrectlyLoadAfterRestartIfIncrementalBackupWasDone,The following statement contains a magic number: j < 100
Magic Number,FastTests.Voron.Bugs,GlobalFixedSizeTreeInMulitpleTables,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Bugs\GlobalFixedSizeTreeInMulitpleTables.cs,CanBeSafelyModifiedOnEither,The following statement contains a magic number: revisionsSchema.Create(tx' "users"' 32);
Magic Number,FastTests.Voron.Bugs,GlobalFixedSizeTreeInMulitpleTables,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Bugs\GlobalFixedSizeTreeInMulitpleTables.cs,CanBeSafelyModifiedOnEither,The following statement contains a magic number: revisionsSchema.Create(tx' "people"' 32);
Magic Number,FastTests.Voron.Bugs,GlobalFixedSizeTreeInMulitpleTables,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Bugs\GlobalFixedSizeTreeInMulitpleTables.cs,CanBeSafelyModifiedOnEither,The following statement contains a magic number: i < 127
Magic Number,FastTests.Voron.Bugs,RavenDB_9153,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Bugs\RavenDB_9153.cs,Overflow_shrink_should_decrease_number_of_allocated_pages_in_scratch,The following statement contains a magic number: var overflowSize = 4 * Constants.Storage.PageSize;
Magic Number,FastTests.Voron.Bugs,RavenDB_9153,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Bugs\RavenDB_9153.cs,Overflow_shrink_should_decrease_number_of_allocated_pages_in_scratch,The following statement contains a magic number: var reducedOverflowSize = 2 * Constants.Storage.PageSize;
Magic Number,FastTests.Voron.Bugs,RavenDB_9225,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Bugs\RavenDB_9225.cs,VariableSizeTree_DeletingFromMiddle,The following statement contains a magic number: ushort valSize = 1008;
Magic Number,FastTests.Voron.Bugs,RavenDB_9225,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Bugs\RavenDB_9225.cs,FixedSizeTree_DeletingFromMiddle,The following statement contains a magic number: ushort valSize = 1008;
Magic Number,FastTests.Voron,LazyTransactionsRespectPageBoundaries,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\LazyTransactionsRespectPageBoundaries.cs,CanSyncWhenLazyTransactionsHasBufferedMultipleTransactions,The following statement contains a magic number: allocate = Env.ScratchBufferPool.Allocate(tx.LowLevelTransaction' 60);
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,Single_MultiAdd_And_Read_DataStored,The following statement contains a magic number: var buffer = new byte[1000];
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,MultiDelete_Remains_One_Entry_The_Data_Is_Retrieved_With_MultiRead,The following statement contains a magic number: const int INPUT_COUNT = 3;
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,MultiDelete_Remains_One_Entry_The_Data_Is_Retrieved_With_MultiRead,The following statement contains a magic number: const int INPUT_DATA_SIZE = 1000;
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,MultiDelete_Remains_No_Entries_ChildTreeKey_Doesnt_Exist,The following statement contains a magic number: const int INPUT_COUNT = 3;
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,MultiDelete_Remains_No_Entries_ChildTreeKey_Doesnt_Exist,The following statement contains a magic number: const int INPUT_DATA_SIZE = 1000;
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,Single_MultiAdd_And_Single_MultiDelete_DataDeleted,The following statement contains a magic number: var buffer = new byte[1000];
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,Multiple_MultiAdd_And_MultiDelete_InTheSame_Transaction_EntryDeleted,The following statement contains a magic number: const int INPUT_COUNT = 25;
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,Multiple_MultiAdd_And_MultiDelete_InTheSame_Transaction_EntryDeleted,The following statement contains a magic number: const int INPUT_DATA_SIZE = 1000;
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,Multiple_MultiAdd_And_MultiDelete_InTheSame_Transaction_EntryDeleted,The following statement contains a magic number: var indexToDelete = new Random(1234).Next(0' INPUT_COUNT - 1);
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,NamedTree_Multiple_MultiAdd_And_MultiDelete_InTheSame_Transaction_EntryDeleted,The following statement contains a magic number: const int INPUT_COUNT = 25;
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,NamedTree_Multiple_MultiAdd_And_MultiDelete_InTheSame_Transaction_EntryDeleted,The following statement contains a magic number: const int INPUT_DATA_SIZE = 1000;
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,NamedTree_Multiple_MultiAdd_And_MultiDelete_InTheSame_Transaction_EntryDeleted,The following statement contains a magic number: var indexToDelete = new Random(1234).Next(0' INPUT_COUNT - 1);
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,NamedTree_Multiple_MultiAdd_MultiDelete_Once_And_Read_EntryDeleted,The following statement contains a magic number: const int INPUT_COUNT = 25;
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,NamedTree_Multiple_MultiAdd_MultiDelete_Once_And_Read_EntryDeleted,The following statement contains a magic number: const int INPUT_DATA_SIZE = 1000;
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,NamedTree_Multiple_MultiAdd_MultiDelete_Once_And_Read_EntryDeleted,The following statement contains a magic number: var indexToDelete = new Random(1234).Next(0' INPUT_COUNT - 1);
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,Multiple_MultiAdd_MultiDelete_Once_And_Read_EntryDeleted,The following statement contains a magic number: const int INPUT_COUNT = 25;
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,Multiple_MultiAdd_MultiDelete_Once_And_Read_EntryDeleted,The following statement contains a magic number: const int INPUT_DATA_SIZE = 1000;
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,Multiple_MultiAdd_MultiDelete_Once_And_Read_EntryDeleted,The following statement contains a magic number: var indexToDelete = new Random(1234).Next(0' INPUT_COUNT - 1);
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,Multiple_MultiAdd_And_Read_DataStored,The following statement contains a magic number: const int INPUT_COUNT = 3;
Magic Number,FastTests.Voron,MultiValueTree,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\MultiValueTree.cs,Multiple_MultiAdd_And_Read_DataStored,The following statement contains a magic number: const int INPUT_DATA_SIZE = 1000;
Magic Number,FastTests.Voron,RavenDB_9847,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RavenDB-9847.cs,Can_get_updated_overflow_value_in_same_tx,The following statement contains a magic number: tree.Add("one"' Enumerable.Range(0' 1024 * 5).Select(i => (byte)1).ToArray());
Magic Number,FastTests.Voron,RavenDB_9847,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RavenDB-9847.cs,Can_get_updated_overflow_value_in_same_tx,The following statement contains a magic number: tree.Add("one"' Enumerable.Range(0' 1024 * 5).Select(i => (byte)1).ToArray());
Magic Number,FastTests.Voron,RavenDB_9847,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RavenDB-9847.cs,Can_get_updated_overflow_value_in_same_tx,The following statement contains a magic number: tree.Add("one"' Enumerable.Range(0' 1024 * 5).Select(i => (byte)2).ToArray());
Magic Number,FastTests.Voron,RavenDB_9847,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RavenDB-9847.cs,Can_get_updated_overflow_value_in_same_tx,The following statement contains a magic number: tree.Add("one"' Enumerable.Range(0' 1024 * 5).Select(i => (byte)2).ToArray());
Magic Number,FastTests.Voron,RavenDB_9847,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RavenDB-9847.cs,Can_get_updated_overflow_value_in_same_tx,The following statement contains a magic number: tree.Add("one"' Enumerable.Range(0' 1024 * 5).Select(i => (byte)2).ToArray());
Magic Number,FastTests.Voron,RavenDB_9847,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RavenDB-9847.cs,Can_get_updated_overflow_value_in_same_tx,The following statement contains a magic number: var bytes = reader.Reader.ReadBytes(1024 * 5);
Magic Number,FastTests.Voron,RavenDB_9847,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RavenDB-9847.cs,Can_get_updated_overflow_value_in_same_tx,The following statement contains a magic number: var bytes = reader.Reader.ReadBytes(1024 * 5);
Magic Number,FastTests.Voron,RavenDB_9847,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RavenDB-9847.cs,Can_get_updated_overflow_value_in_same_tx,The following statement contains a magic number: Assert.Equal(2' bytes[i]);
Magic Number,FastTests.Voron,RavenDB_9847,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RavenDB-9847.cs,Can_get_updated_overflow_value_in_same_tx,The following statement contains a magic number: i < 1024*5
Magic Number,FastTests.Voron,RavenDB_9847,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RavenDB-9847.cs,Can_get_updated_overflow_value_in_same_tx,The following statement contains a magic number: i < 1024*5
Magic Number,FastTests.Voron,ValidHeaders,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ValidHeaders.cs,FileHeader,The following statement contains a magic number: var seed = 4;
Magic Number,FastTests.Voron.Compaction,StorageCompactionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Compaction\StorageCompactionTests.cs,ShouldPreserveTables,The following statement contains a magic number: r.NextDouble() < 0.5
Magic Number,FastTests.Voron.Compaction,StorageCompactionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Compaction\StorageCompactionTests.cs,ShouldPreserveTables,The following statement contains a magic number: schema.Create(tx' "test"' 16);
Magic Number,FastTests.Voron.Compaction,StorageCompactionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Compaction\StorageCompactionTests.cs,CannotCompactStorageIfIncrementalBackupEnabled,The following statement contains a magic number: tree.Add("record/1"' new byte[9]);
Magic Number,FastTests.Voron.Compaction,StorageCompactionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Compaction\StorageCompactionTests.cs,CannotCompactStorageIfIncrementalBackupEnabled,The following statement contains a magic number: tree.Add("record/2"' new byte[9]);
Magic Number,FastTests.Voron.Compaction,StorageCompactionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Compaction\StorageCompactionTests.cs,ShouldDeleteCurrentJournalEvenThoughItHasAvailableSpace,The following statement contains a magic number: tree.Add("apple"' new byte[123]);
Magic Number,FastTests.Voron.Compaction,StorageCompactionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Compaction\StorageCompactionTests.cs,ShouldDeleteCurrentJournalEvenThoughItHasAvailableSpace,The following statement contains a magic number: tree.Add("orange"' new byte[99]);
Magic Number,FastTests.Voron.Compaction,StorageCompactionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Compaction\StorageCompactionTests.cs,ShouldDeleteCurrentJournalEvenThoughItHasAvailableSpace,The following statement contains a magic number: tree.Add("peach"' new byte[144]);
Magic Number,FastTests.Voron.Compaction,StorageCompactionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Compaction\StorageCompactionTests.cs,ShouldReportProgress,The following statement contains a magic number: tree.Add("apple"' new byte[123]);
Magic Number,FastTests.Voron.Compaction,StorageCompactionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Compaction\StorageCompactionTests.cs,ShouldReportProgress,The following statement contains a magic number: tree.Add("orange"' new byte[99]);
Magic Number,FastTests.Voron.Compaction,StorageCompactionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Compaction\StorageCompactionTests.cs,ShouldReportProgress,The following statement contains a magic number: tree2.Add("carrot"' new byte[123]);
Magic Number,FastTests.Voron.Compaction,StorageCompactionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Compaction\StorageCompactionTests.cs,ShouldReportProgress,The following statement contains a magic number: tree2.Add("potato"' new byte[99]);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' valSize: 8);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate,The following statement contains a magic number: fst.Add(2' new byte[8]);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate,The following statement contains a magic number: fst.Add(2' new byte[8]);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate,The following statement contains a magic number: fst.Add(3' new byte[8]);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate,The following statement contains a magic number: fst.Add(3' new byte[8]);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' valSize: 8);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate,The following statement contains a magic number: fst.Add(1' new byte[8]);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate,The following statement contains a magic number: fst.Add(2' new byte[8]);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate,The following statement contains a magic number: fst.Add(2' new byte[8]);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' valSize: 8);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate,The following statement contains a magic number: Assert.Equal(3' fst.NumberOfEntries);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate,The following statement contains a magic number: Assert.Equal(2' it.CurrentKey);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate,The following statement contains a magic number: Assert.Equal(3' it.CurrentKey);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate_Many,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' valSize: 8);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate_Many,The following statement contains a magic number: fst.Add(i' new byte[8]);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate_Many,The following statement contains a magic number: i < 300
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate_Many,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' valSize: 8);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate_Many,The following statement contains a magic number: fst.Add(i' new byte[8]);
Magic Number,FastTests.Voron.FixedSize,FixedSizeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\FixedSizeBugs.cs,CanAddDuplicate_Many,The following statement contains a magic number: i < 300
Magic Number,FastTests.Voron.FixedSize,LargeFixedSizeTreeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\LargeFixedSizeTreeBugs.cs,DeleteRangeShouldModifyPage,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' valSize: 128);
Magic Number,FastTests.Voron.FixedSize,LargeFixedSizeTreeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\LargeFixedSizeTreeBugs.cs,DeleteRangeShouldModifyPage,The following statement contains a magic number: var bytes = new byte[128];
Magic Number,FastTests.Voron.FixedSize,LargeFixedSizeTreeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\LargeFixedSizeTreeBugs.cs,DeleteRangeShouldModifyPage,The following statement contains a magic number: i < 100
Magic Number,FastTests.Voron.FixedSize,LargeFixedSizeTreeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\LargeFixedSizeTreeBugs.cs,DeleteRangeShouldModifyPage,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' valSize: 128);
Magic Number,FastTests.Voron.FixedSize,LargeFixedSizeTreeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\LargeFixedSizeTreeBugs.cs,DeleteRangeShouldModifyPage,The following statement contains a magic number: fst.DeleteRange(20' 70);
Magic Number,FastTests.Voron.FixedSize,LargeFixedSizeTreeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\LargeFixedSizeTreeBugs.cs,DeleteRangeShouldModifyPage,The following statement contains a magic number: fst.DeleteRange(20' 70);
Magic Number,FastTests.Voron.FixedSize,LargeFixedSizeTreeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\LargeFixedSizeTreeBugs.cs,DeleteRangeShouldModifyPage,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' valSize: 128);
Magic Number,FastTests.Voron.FixedSize,LargeFixedSizeTreeBugs,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\LargeFixedSizeTreeBugs.cs,DeleteRangeShouldModifyPage,The following statement contains a magic number: Assert.False(fst.Contains(21));
Magic Number,FastTests.Voron.FixedSize,RavenDB_6073,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\RavenDB_6073.cs,Branch_page_collapsing_during_tree_rebalancing,The following statement contains a magic number: var numberOfItems = 10000;
Magic Number,FastTests.Voron.FixedSize,RavenDB_6073,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\RavenDB_6073.cs,Branch_page_collapsing_during_tree_rebalancing,The following statement contains a magic number: ushort valueSize = Constants.Storage.PageSize/16;
Magic Number,FastTests.Voron.FixedSize,RavenDB_6073,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\RavenDB_6073.cs,Branch_page_collapsing_during_tree_rebalancing,The following statement contains a magic number: Assert.True(fst.Depth >= 3);
Magic Number,FastTests.Voron.FixedSize,RavenDB_6350,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\RavenDB_6350.cs,Invalid_usage_of_DirectAdds,The following statement contains a magic number: var numberOfItems = 100;
Magic Number,FastTests.Voron.FixedSize,RavenDB_6350,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\RavenDB_6350.cs,Invalid_usage_of_DirectAdds,The following statement contains a magic number: ushort valueSize = Constants.Storage.PageSize / 16;
Magic Number,FastTests.Voron.FixedSize,RavenDB_6350,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\RavenDB_6350.cs,Invalid_usage_of_DirectAdds,The following statement contains a magic number: parent.Add($"aaaaa-{i}"' new byte[1000]);
Magic Number,FastTests.Voron.FixedSize,RavenDB_6350,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\RavenDB_6350.cs,Invalid_usage_of_DirectAdds,The following statement contains a magic number: parent.Add($"dummy-8"' new byte[1300]);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,TimeSeries,The following statement contains a magic number: var fst = tx.FixedTreeFor(watchId' valSize: 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,TimeSeries,The following statement contains a magic number: Slice.From(Allocator' BitConverter.GetBytes(80D)' out val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,TimeSeries,The following statement contains a magic number: fst.Add(DateTime.Today.AddHours(8).Ticks' val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,TimeSeries,The following statement contains a magic number: Slice.From(Allocator' BitConverter.GetBytes(65D)' out val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,TimeSeries,The following statement contains a magic number: fst.Add(DateTime.Today.AddHours(9).Ticks' val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,TimeSeries,The following statement contains a magic number: Slice.From(Allocator' BitConverter.GetBytes(44D)' out val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,TimeSeries,The following statement contains a magic number: fst.Add(DateTime.Today.AddHours(10).Ticks' val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,TimeSeries,The following statement contains a magic number: var fst = tx.FixedTreeFor(watchId' valSize: 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,TimeSeries,The following statement contains a magic number: Assert.True(it.Seek(DateTime.Today.AddHours(7).Ticks));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,TimeSeries,The following statement contains a magic number: var buffer = new byte[8];
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,TimeSeries,The following statement contains a magic number: Assert.Equal(80D' BitConverter.ToDouble(buffer' 0));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,TimeSeries,The following statement contains a magic number: Assert.Equal(65D' BitConverter.ToDouble(buffer' 0));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,TimeSeries,The following statement contains a magic number: Assert.Equal(44d' BitConverter.ToDouble(buffer' 0));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd,The following statement contains a magic number: fst.Add(2);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd,The following statement contains a magic number: Assert.True(fst.Contains(2));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd,The following statement contains a magic number: Assert.False(fst.Contains(3));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,SeekShouldGiveTheNextKey,The following statement contains a magic number: fst.Add(635634432000000000);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,SeekShouldGiveTheNextKey,The following statement contains a magic number: fst.Add(635634468000000000);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,SeekShouldGiveTheNextKey,The following statement contains a magic number: fst.Add(635634504000000000);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,SeekShouldGiveTheNextKey,The following statement contains a magic number: Assert.True(it.Seek(635634432000000000));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,SeekShouldGiveTheNextKey,The following statement contains a magic number: Assert.Equal(635634432000000000' it.CurrentKey);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,SeekShouldGiveTheNextKey,The following statement contains a magic number: Assert.True(it.Seek(635634468000000000));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,SeekShouldGiveTheNextKey,The following statement contains a magic number: Assert.Equal(635634468000000000' it.CurrentKey);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,SeekShouldGiveTheNextKey,The following statement contains a magic number: Assert.True(it.Seek(635634504000000000));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,SeekShouldGiveTheNextKey,The following statement contains a magic number: Assert.Equal(635634504000000000' it.CurrentKey);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,SeekShouldGiveTheNextKey,The following statement contains a magic number: Assert.False(it.Seek(635634504000000001));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_Mixed,The following statement contains a magic number: fst.Add(2);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_Mixed,The following statement contains a magic number: fst.Add(6);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_Mixed,The following statement contains a magic number: fst.Add(3);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_Mixed,The following statement contains a magic number: fst.Add(-3);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_Mixed,The following statement contains a magic number: Assert.True(fst.Contains(2));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_Mixed,The following statement contains a magic number: Assert.False(fst.Contains(5));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_Mixed,The following statement contains a magic number: Assert.True(fst.Contains(6));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_Mixed,The following statement contains a magic number: Assert.False(fst.Contains(4));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_Mixed,The following statement contains a magic number: Assert.True(fst.Contains(-3));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_Mixed,The following statement contains a magic number: Assert.True(fst.Contains(3));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanIterate,The following statement contains a magic number: fst.Add(3);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanIterate,The following statement contains a magic number: fst.Add(2);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanIterate,The following statement contains a magic number: Assert.Equal(2L' it.CurrentKey);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanIterate,The following statement contains a magic number: Assert.Equal(3L' it.CurrentKey);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanRemove,The following statement contains a magic number: fst.Add(2);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanRemove,The following statement contains a magic number: fst.Add(3);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanRemove,The following statement contains a magic number: fst.Delete(2);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanRemove,The following statement contains a magic number: Assert.False(fst.Contains(2));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanRemove,The following statement contains a magic number: Assert.True(fst.Contains(3));
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRange,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRange,The following statement contains a magic number: Slice.From(Allocator' BitConverter.GetBytes(i + 10L)' out val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRange,The following statement contains a magic number: i <= 10
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRange,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRange,The following statement contains a magic number: var itemsRemoved = fst.DeleteRange(2' 5);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRange,The following statement contains a magic number: var itemsRemoved = fst.DeleteRange(2' 5);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRange,The following statement contains a magic number: Assert.Equal(4' itemsRemoved.NumberOfEntriesDeleted);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRange,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRange,The following statement contains a magic number: i >= 2 && i <= 5
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRange,The following statement contains a magic number: i >= 2 && i <= 5
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRange,The following statement contains a magic number: i <= 10
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRangeWithGaps,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRangeWithGaps,The following statement contains a magic number: Slice.From(Allocator' BitConverter.GetBytes(i + 10L)' out val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRangeWithGaps,The following statement contains a magic number: i <= 10
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRangeWithGaps,The following statement contains a magic number: Slice.From(Allocator' BitConverter.GetBytes(i + 10L)' out val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRangeWithGaps,The following statement contains a magic number: i <= 40
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRangeWithGaps,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRangeWithGaps,The following statement contains a magic number: var itemsRemoved = fst.DeleteRange(2' 35);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRangeWithGaps,The following statement contains a magic number: var itemsRemoved = fst.DeleteRange(2' 35);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRangeWithGaps,The following statement contains a magic number: Assert.Equal(15' itemsRemoved.NumberOfEntriesDeleted);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRangeWithGaps,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRangeWithGaps,The following statement contains a magic number: i >= 2
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRangeWithGaps,The following statement contains a magic number: i <= 10
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRangeWithGaps,The following statement contains a magic number: i <= 35
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteRangeWithGaps,The following statement contains a magic number: i <= 40
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteAllRange,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteAllRange,The following statement contains a magic number: Slice.From(Allocator' BitConverter.GetBytes(i + 10L)' out val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteAllRange,The following statement contains a magic number: i <= 10
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteAllRange,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteAllRange,The following statement contains a magic number: Assert.Equal(10' itemsRemoved.NumberOfEntriesDeleted);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteAllRange,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanDeleteAllRange,The following statement contains a magic number: i <= 10
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_WithValue,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_WithValue,The following statement contains a magic number: Slice.From(Allocator' BitConverter.GetBytes(2L)' out val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_WithValue,The following statement contains a magic number: fst.Add(2' val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_WithValue,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanAdd_WithValue,The following statement contains a magic number: Assert.Equal(2L' read.CreateReader().ReadLittleEndianInt64());
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanRemove_WithValue,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanRemove_WithValue,The following statement contains a magic number: Slice.From(Allocator' BitConverter.GetBytes(2L)' out val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanRemove_WithValue,The following statement contains a magic number: fst.Add(2' val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanRemove_WithValue,The following statement contains a magic number: Slice.From(Allocator' BitConverter.GetBytes(3L)' out val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanRemove_WithValue,The following statement contains a magic number: fst.Add(3' val);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanRemove_WithValue,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanRemove_WithValue,The following statement contains a magic number: fst.Delete(2);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanRemove_WithValue,The following statement contains a magic number: var fst = tx.FixedTreeFor(treeId' 8);
Magic Number,FastTests.Voron.FixedSize,SimpleFixedSizeTrees,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\FixedSize\SimpleFixedSizeTrees.cs,CanRemove_WithValue,The following statement contains a magic number: Assert.Equal(3L' read.CreateReader().ReadLittleEndianInt64());
Magic Number,FastTests.Voron.Journal,BasicActions,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\BasicActions.cs,Configure,The following statement contains a magic number: options.MaxLogFileSize = 10 * Constants.Storage.PageSize;
Magic Number,FastTests.Voron.Journal,BasicActions,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\BasicActions.cs,CanUseMultipleLogFiles,The following statement contains a magic number: var bytes = new byte[Constants.Storage.PageSize / 4];
Magic Number,FastTests.Voron.Journal,BasicActions,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\BasicActions.cs,CanUseMultipleLogFiles,The following statement contains a magic number: i < 30
Magic Number,FastTests.Voron.Journal,BasicActions,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\BasicActions.cs,CanUseMultipleLogFiles,The following statement contains a magic number: i < 15
Magic Number,FastTests.Voron.Journal,BasicActions,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\BasicActions.cs,CanFlushDataFromLogToDataFile,The following statement contains a magic number: i < 100
Magic Number,FastTests.Voron.Journal,BasicActions,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\BasicActions.cs,CanFlushDataFromLogToDataFile,The following statement contains a magic number: i < 100
Magic Number,FastTests.Voron.Journal,Mvcc,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\Mvcc.cs,Configure,The following statement contains a magic number: options.MaxLogFileSize = 3 * Constants.Storage.PageSize;
Magic Number,FastTests.Voron.Journal,Mvcc,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\Mvcc.cs,ShouldNotFlushUntilThereAreActiveOlderTransactions,The following statement contains a magic number: var ones = new byte[3000];
Magic Number,FastTests.Voron.Journal,Mvcc,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\Mvcc.cs,ShouldNotFlushUntilThereAreActiveOlderTransactions,The following statement contains a magic number: var nines = new byte[3000];
Magic Number,FastTests.Voron.Journal,Mvcc,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\Mvcc.cs,ShouldNotFlushUntilThereAreActiveOlderTransactions,The following statement contains a magic number: nines[i] = 9;
Magic Number,FastTests.Voron.Journal,Mvcc,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\Mvcc.cs,ShouldNotFlushUntilThereAreActiveOlderTransactions,The following statement contains a magic number: i < 3000
Magic Number,FastTests.Voron.Journal,Mvcc,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\Mvcc.cs,ShouldNotFlushUntilThereAreActiveOlderTransactions,The following statement contains a magic number: i < 3000
Magic Number,FastTests.Voron.Journal,UncommittedTransactions,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Journal\UncommittedTransactions.cs,Configure,The following statement contains a magic number: options.MaxLogFileSize = 10 * Constants.Storage.PageSize;
Magic Number,FastTests.Voron.LeafsCompression,RavenDB_5384_DecompressionBuffersPoolTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\LeafsCompression\RavenDB_5384_DecompressionBuffersPoolTests.cs,Configure,The following statement contains a magic number: options.MaxScratchBufferSize = _64KB * 4;
Magic Number,FastTests.Voron.LeafsCompression,RavenDB_5384_DecompressionBuffersPoolTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\LeafsCompression\RavenDB_5384_DecompressionBuffersPoolTests.cs,Should_cleanup_scratch_files_which_are_no_longer_necessary,The following statement contains a magic number: Assert.Equal(2' Env.DecompressionBuffers.NumberOfScratchFiles);
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: var keySize = 1024;
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tree.Add(new string('9'' keySize)' new MemoryStream(new byte[3]));
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tree.Add(new string('1'' keySize)' new MemoryStream(new byte[3]));
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tree.Add(new string('4'' 1000)' new MemoryStream(new byte[2]));
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tree.Add(new string('4'' 1000)' new MemoryStream(new byte[2]));
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tree.Add(new string('5'' keySize)' new MemoryStream(new byte[2]));
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tree.Add(new string('8'' keySize)' new MemoryStream(new byte[3]));
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tree.Add(new string('2'' keySize)' new MemoryStream(new byte[2]));
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tree.Add(new string('6'' keySize)' new MemoryStream(new byte[2]));
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tree.Add(new string('0'' keySize)' new MemoryStream(new byte[4]));
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tree.Add(new string('3'' 1000)' new MemoryStream(new byte[1]));
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tree.Add(new string('4'' 1000)' new MemoryStream(new byte[21]));
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tree.Add(new string('4'' 1000)' new MemoryStream(new byte[21]));
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: var readResult = tree.Read(new string('4'' 1000));
Magic Number,FastTests.Voron.Optimizations,Writes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: Assert.Equal(21' readResult.Reader.Length);
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,CanReadAndWriteFromSection,The following statement contains a magic number: Assert.True(section.TryAllocate(15' out id));
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,CanAllocateMultipleValues,The following statement contains a magic number: Assert.True(section.TryAllocate(random.Next(16'256)' out id));
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,CanAllocateMultipleValues,The following statement contains a magic number: Assert.True(section.TryAllocate(random.Next(16'256)' out id));
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,CanAllocateMultipleValues,The following statement contains a magic number: i < 100
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,CanAllocateEnoughToFillEntireSection,The following statement contains a magic number: int allocationSize = 1020;
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,CanAllocateEnoughToFillEntireSection,The following statement contains a magic number: var idToFree = list[list.Count/2];
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,CanReadAndWriteFromSection_SingleTx,The following statement contains a magic number: Assert.True(section.TryAllocate(15' out id));
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,CanReadAndWriteFromSection_AfterFlush,The following statement contains a magic number: Assert.True(section.TryAllocate(15' out id));
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,ShouldNotReturnMoreIdsThanTotalNumberOfEntriesInSection,The following statement contains a magic number: Assert.True(section.TryAllocate(16' out newId));
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,ShouldReturnValidIdsOfEntriesInSectionThatAreReadable,The following statement contains a magic number: Assert.True(section.TryAllocate(2000' out idWhichIsGoingToBeDeleted1));
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,ShouldReturnValidIdsOfEntriesInSectionThatAreReadable,The following statement contains a magic number: Assert.True(section.TryAllocate(2000' out idWhichIsGoingToBeDeleted2));
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,ShouldReturnValidIdsOfEntriesInSectionThatAreReadable,The following statement contains a magic number: WriteValue(section' idWhichIsGoingToBeDeleted2' 2.ToString("0000000000000"));
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,ShouldReturnValidIdsOfEntriesInSectionThatAreReadable,The following statement contains a magic number: Assert.True(section.TryAllocate(2000' out existingId));
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,ShouldReturnValidIdsOfEntriesInSectionThatAreReadable,The following statement contains a magic number: WriteValue(section' existingId' 3.ToString("0000000000000"));
Magic Number,FastTests.Voron.RawData,SmallDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\RawData\SmallDataSection.cs,ShouldReturnValidIdsOfEntriesInSectionThatAreReadable,The following statement contains a magic number: AssertValueMatches(section' existingId' 3.ToString("0000000000000"));
Magic Number,FastTests.Voron.ScratchBuffer,ActivelyUsedBytesTracking,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ActivelyUsedBytesTracking.cs,Scratch_file_is_aware_of_potentialy_active_readers,The following statement contains a magic number: var numberOfPages = 20;
Magic Number,FastTests.Voron.ScratchBuffer,ActivelyUsedBytesTracking,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ActivelyUsedBytesTracking.cs,Scratch_file_is_aware_of_potentialy_active_readers,The following statement contains a magic number: Assert.False(file.HasActivelyUsedBytes(2));
Magic Number,FastTests.Voron.ScratchBuffer,ActivelyUsedBytesTracking,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ActivelyUsedBytesTracking.cs,Scratch_file_is_aware_of_potentialy_active_readers,The following statement contains a magic number: file.Free(1' 3);
Magic Number,FastTests.Voron.ScratchBuffer,ActivelyUsedBytesTracking,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ActivelyUsedBytesTracking.cs,Scratch_file_is_aware_of_potentialy_active_readers,The following statement contains a magic number: file.Free(2' 4);
Magic Number,FastTests.Voron.ScratchBuffer,ActivelyUsedBytesTracking,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ActivelyUsedBytesTracking.cs,Scratch_file_is_aware_of_potentialy_active_readers,The following statement contains a magic number: file.Free(2' 4);
Magic Number,FastTests.Voron.ScratchBuffer,ActivelyUsedBytesTracking,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ActivelyUsedBytesTracking.cs,Scratch_file_is_aware_of_potentialy_active_readers,The following statement contains a magic number: file.Free(3' 7);
Magic Number,FastTests.Voron.ScratchBuffer,ActivelyUsedBytesTracking,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ActivelyUsedBytesTracking.cs,Scratch_file_is_aware_of_potentialy_active_readers,The following statement contains a magic number: file.Free(3' 7);
Magic Number,FastTests.Voron.ScratchBuffer,ActivelyUsedBytesTracking,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ActivelyUsedBytesTracking.cs,Scratch_file_is_aware_of_potentialy_active_readers,The following statement contains a magic number: file.Free(4' 9);
Magic Number,FastTests.Voron.ScratchBuffer,ActivelyUsedBytesTracking,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ActivelyUsedBytesTracking.cs,Scratch_file_is_aware_of_potentialy_active_readers,The following statement contains a magic number: file.Free(4' 9);
Magic Number,FastTests.Voron.ScratchBuffer,ActivelyUsedBytesTracking,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ActivelyUsedBytesTracking.cs,Scratch_file_is_aware_of_potentialy_active_readers,The following statement contains a magic number: i <= 9
Magic Number,FastTests.Voron.ScratchBuffer,ActivelyUsedBytesTracking,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ActivelyUsedBytesTracking.cs,Scratch_file_is_aware_of_potentialy_active_readers,The following statement contains a magic number: Assert.False(file.HasActivelyUsedBytes(10));
Magic Number,FastTests.Voron.ScratchBuffer,ActivelyUsedBytesTracking,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ActivelyUsedBytesTracking.cs,Scratch_file_is_aware_of_potentialy_active_readers,The following statement contains a magic number: Assert.False(file.HasActivelyUsedBytes(20));
Magic Number,FastTests.Voron.ScratchBuffer,ScratchCanForceToFlushOldPages,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ScratchCanForceToFlushOldPages.cs,CanForceToFlushPagesOlderThanOldestActiveTransactionToFreePagesFromScratch,The following statement contains a magic number: tree.Add("bars/1"' new string('a'' 1000));
Magic Number,FastTests.Voron.ScratchBuffer,ScratchCanForceToFlushOldPages,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ScratchCanForceToFlushOldPages.cs,CanForceToFlushPagesOlderThanOldestActiveTransactionToFreePagesFromScratch,The following statement contains a magic number: tree.Add("bars/1"' new string('b'' 1000));
Magic Number,FastTests.Voron.ScratchBuffer,ScratchCanForceToFlushOldPages,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ScratchCanForceToFlushOldPages.cs,CanForceToFlushPagesOlderThanOldestActiveTransactionToFreePagesFromScratch,The following statement contains a magic number: tree.Add("bars/1"' new string('c'' 1000));
Magic Number,FastTests.Voron.ScratchBuffer,ScratchCanForceToFlushOldPages,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\ScratchBuffer\ScratchCanForceToFlushOldPages.cs,CanForceToFlushPagesOlderThanOldestActiveTransactionToFreePagesFromScratch,The following statement contains a magic number: Assert.Equal(new string('c'' 1000)' v.ToString());
Magic Number,FastTests.Voron.Tables,Allocations,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Allocations.cs,IndexPagesWillBeNearby_64,The following statement contains a magic number: DocsSchema.Create(tx' "docs"' 16);
Magic Number,FastTests.Voron.Tables,Allocations,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Allocations.cs,IndexPagesWillBeNearby_64,The following statement contains a magic number: var largeString = new string('a'' 1024);
Magic Number,FastTests.Voron.Tables,Allocations,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Allocations.cs,IndexPagesWillBeNearby_64,The following statement contains a magic number: i < 2500
Magic Number,FastTests.Voron.Tables,Allocations,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Allocations.cs,IndexPagesWillBeNearby_64,The following statement contains a magic number: Assert.True((maxPage - minPage) < 256);
Magic Number,FastTests.Voron.Tables,Allocations,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Allocations.cs,IndexPagesWillBeNearby_32,The following statement contains a magic number: DocsSchema.Create(tx' "docs"' 16);
Magic Number,FastTests.Voron.Tables,Allocations,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Allocations.cs,IndexPagesWillBeNearby_32,The following statement contains a magic number: var largeString = new string('a'' 1024);
Magic Number,FastTests.Voron.Tables,Allocations,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Allocations.cs,IndexPagesWillBeNearby_32,The following statement contains a magic number: i < 250
Magic Number,FastTests.Voron.Tables,Allocations,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Allocations.cs,IndexPagesWillBeNearby_32,The following statement contains a magic number: Assert.True((maxPage - minPage) < 128);
Magic Number,FastTests.Voron.Tables,BasicUsage,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\BasicUsage.cs,CanInsertThenRead,The following statement contains a magic number: DocsSchema.Create(tx' "docs"' 16);
Magic Number,FastTests.Voron.Tables,BasicUsage,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\BasicUsage.cs,CanInsertThenRead,The following statement contains a magic number: var read = handle.Read(3' out size);
Magic Number,FastTests.Voron.Tables,BasicUsage,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\BasicUsage.cs,CanInsertThenUpdateThenRead,The following statement contains a magic number: DocsSchema.Create(tx' "docs"'16);
Magic Number,FastTests.Voron.Tables,BasicUsage,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\BasicUsage.cs,CanInsertThenUpdateThenRead,The following statement contains a magic number: SetHelper(docs' "users/1"' "Users"' 2L' "{'Name': 'Eini'}");
Magic Number,FastTests.Voron.Tables,BasicUsage,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\BasicUsage.cs,CanInsertThenUpdateThenRead,The following statement contains a magic number: var read = handle.Read(3' out size);
Magic Number,FastTests.Voron.Tables,BasicUsage,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\BasicUsage.cs,CanInsertThenDelete,The following statement contains a magic number: DocsSchema.Create(tx' "docs"' 16);
Magic Number,FastTests.Voron.Tables,BasicUsage,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\BasicUsage.cs,HasCorrespondingRootObjectType,The following statement contains a magic number: DocsSchema.Create(tx' "docs"' 16);
Magic Number,FastTests.Voron.Tables,CompositeIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\CompositeIndex.cs,CanInsertThenReadByComposite,The following statement contains a magic number: DocsSchema.Create(tx' "docs"' 16);
Magic Number,FastTests.Voron.Tables,CompositeIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\CompositeIndex.cs,CanInsertThenReadByComposite,The following statement contains a magic number: SetHelper(docs' "users/2"' "Users"' 2L' "{'Name': 'Eini'}");
Magic Number,FastTests.Voron.Tables,CompositeIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\CompositeIndex.cs,CanInsertThenReadByComposite,The following statement contains a magic number: Assert.Equal("Users"' valueReader.ReadString(5));
Magic Number,FastTests.Voron.Tables,CompositeIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\CompositeIndex.cs,CanInsertThenReadByComposite,The following statement contains a magic number: Assert.Equal("{'Name': 'Oren'}"' Encoding.UTF8.GetString(handle.Read(3' out size)' size));
Magic Number,FastTests.Voron.Tables,CompositeIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\CompositeIndex.cs,CanInsertThenReadByComposite,The following statement contains a magic number: Assert.Equal("Users"' valueReader.ReadString(5));
Magic Number,FastTests.Voron.Tables,CompositeIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\CompositeIndex.cs,CanInsertThenReadByComposite,The following statement contains a magic number: Assert.Equal(2L' valueReader.ReadBigEndianInt64());
Magic Number,FastTests.Voron.Tables,CompositeIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\CompositeIndex.cs,CanInsertThenReadByComposite,The following statement contains a magic number: Assert.Equal("{'Name': 'Eini'}"' Encoding.UTF8.GetString(handle.Read(3' out size)' size));
Magic Number,FastTests.Voron.Tables,CompositeIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\CompositeIndex.cs,CanInsertThenDeleteByComposite,The following statement contains a magic number: DocsSchema.Create(tx' "docs"' 16);
Magic Number,FastTests.Voron.Tables,CompositeIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\CompositeIndex.cs,CanInsertThenUpdateThenByComposite,The following statement contains a magic number: DocsSchema.Create(tx' "docs"' 16);
Magic Number,FastTests.Voron.Tables,CompositeIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\CompositeIndex.cs,CanInsertThenUpdateThenByComposite,The following statement contains a magic number: SetHelper(docs' "users/1"' "Users"' 2L' "{'Name': 'Eini'}");
Magic Number,FastTests.Voron.Tables,CompositeIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\CompositeIndex.cs,CanInsertThenUpdateThenByComposite,The following statement contains a magic number: Assert.Equal("Users"' valueReader.ReadString(5));
Magic Number,FastTests.Voron.Tables,CompositeIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\CompositeIndex.cs,CanInsertThenUpdateThenByComposite,The following statement contains a magic number: Assert.Equal(2L' valueReader.ReadBigEndianInt64());
Magic Number,FastTests.Voron.Tables,CompositeIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\CompositeIndex.cs,CanInsertThenUpdateThenByComposite,The following statement contains a magic number: Assert.Equal("{'Name': 'Eini'}"' Encoding.UTF8.GetString(handle.Reader.Read(3' out size)' size));
Magic Number,FastTests.Voron.Tables,SecondayIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\SecondayIndex.cs,CanInsertThenReadBySecondary,The following statement contains a magic number: DocsSchema.Create(tx' "docs"' 16);
Magic Number,FastTests.Voron.Tables,SecondayIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\SecondayIndex.cs,CanInsertThenReadBySecondary,The following statement contains a magic number: Assert.Equal("{'Name': 'Oren'}"' Encoding.UTF8.GetString(handle.Read(3' out size)' size));
Magic Number,FastTests.Voron.Tables,SecondayIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\SecondayIndex.cs,CanInsertThenDeleteBySecondary,The following statement contains a magic number: DocsSchema.Create(tx' "docs"' 16);
Magic Number,FastTests.Voron.Tables,SecondayIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\SecondayIndex.cs,CanInsertThenUpdateThenBySecondary,The following statement contains a magic number: DocsSchema.Create(tx' "docs"' 16);
Magic Number,FastTests.Voron.Tables,SecondayIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\SecondayIndex.cs,CanInsertThenUpdateThenBySecondary,The following statement contains a magic number: SetHelper(docs' "users/1"' "Users"' 2L' "{'Name': 'Eini'}");
Magic Number,FastTests.Voron.Tables,SecondayIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\SecondayIndex.cs,CanInsertThenUpdateThenBySecondary,The following statement contains a magic number: Assert.Equal(2L' reader.Key.CreateReader().ReadBigEndianInt64());
Magic Number,FastTests.Voron.Tables,SecondayIndex,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\SecondayIndex.cs,CanInsertThenUpdateThenBySecondary,The following statement contains a magic number: Assert.Equal("{'Name': 'Eini'}"' Encoding.UTF8.GetString(handle.Reader.Read(3' out size)' size));
Magic Number,FastTests.Voron.Tables,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Serialization.cs,CanSerializeNormalIndex,The following statement contains a magic number: var expectedIndex = new TableSchema.SchemaIndexDef                  {                      StartIndex = 2'                      Count = 1'                  };
Magic Number,FastTests.Voron.Tables,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Serialization.cs,CanSerializeFixedIndex,The following statement contains a magic number: var expectedIndex = new TableSchema.FixedSizeSchemaIndexDef                  {                      StartIndex = 2'                      IsGlobal = true'                  };
Magic Number,FastTests.Voron.Tables,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Serialization.cs,CanSerializeSchema,The following statement contains a magic number: var def1 = new TableSchema.SchemaIndexDef                  {                      StartIndex = 2'                      Count = 1'                  };
Magic Number,FastTests.Voron.Tables,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Serialization.cs,CanSerializeSchema,The following statement contains a magic number: var def2 = new TableSchema.FixedSizeSchemaIndexDef()                  {                      StartIndex = 2'                      IsGlobal = true'                  };
Magic Number,FastTests.Voron.Tables,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Serialization.cs,CanSerializeSchema,The following statement contains a magic number: var tableSchema = new TableSchema()                      .DefineIndex(def1)                      .DefineFixedSizeIndex(def2)                      .DefineKey(new TableSchema.SchemaIndexDef                      {                          StartIndex = 3'                          Count = 1'                      });
Magic Number,FastTests.Voron.Tables,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Serialization.cs,CanSerializeMultiIndexSchema,The following statement contains a magic number: var def1 = new TableSchema.SchemaIndexDef                  {                      StartIndex = 2'                      Count = 1'                  };
Magic Number,FastTests.Voron.Tables,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Serialization.cs,CanSerializeMultiIndexSchema,The following statement contains a magic number: var def3 = new TableSchema.FixedSizeSchemaIndexDef()                  {                      StartIndex = 2'                      IsGlobal = true'                  };
Magic Number,FastTests.Voron.Tables,Serialization,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Serialization.cs,CanSerializeMultiIndexSchema,The following statement contains a magic number: var tableSchema = new TableSchema()                      .DefineIndex(def1)                      .DefineIndex(def2)                      .DefineFixedSizeIndex(def3)                      .DefineKey(new TableSchema.SchemaIndexDef                      {                          StartIndex = 3'                          Count = 1'                      });
Magic Number,FastTests.Voron.Tables,TableIndexes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\TableIndexes.cs,Insert_same_value_to_fixed_sized_index_throws,The following statement contains a magic number: tableSchema.Create(tx' "Items"' 16);
Magic Number,FastTests.Voron.Tables,TableIndexes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\TableIndexes.cs,Update_same_value_to_fixed_sized_index_throws,The following statement contains a magic number: tableSchema.Create(tx' "Items"' 16);
Magic Number,FastTests.Voron.Tables,TableIndexes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\TableIndexes.cs,Update_same_value_to_fixed_sized_index_throws,The following statement contains a magic number: const long number2 = 2L;
Magic Number,FastTests.Voron.Tables,TableIndexes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\TableIndexes.cs,Update_same_value_to_fixed_sized_index_throws,The following statement contains a magic number: const long number3 = 3L;
Magic Number,FastTests.Voron.Tables,TableIndexes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\TableIndexes.cs,Insert_same_value_to_index_deosnt_throw,The following statement contains a magic number: tableSchema.Create(tx' "Items"' 16);
Magic Number,FastTests.Voron.Tables,TableIndexes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\TableIndexes.cs,Update_same_value_to_index_doesnt_throw,The following statement contains a magic number: tableSchema.Create(tx' "Items"' 16);
Magic Number,FastTests.Voron.Tables,TableIndexes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\TableIndexes.cs,Update_same_value_to_index_doesnt_throw,The following statement contains a magic number: const long number2 = 2L;
Magic Number,FastTests.Voron.Tables,TableIndexes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\TableIndexes.cs,Update_same_value_to_index_doesnt_throw,The following statement contains a magic number: const long number3 = 3L;
Magic Number,FastTests.Voron.Tables,TableStorageTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\TableStorageTest.cs,Configure,The following statement contains a magic number: DocsSchema = new TableSchema()                  .DefineIndex(new TableSchema.SchemaIndexDef                  {                      StartIndex = 2'                      Count = 1'                      Name = EtagsSlice                  })                  .DefineIndex(new TableSchema.SchemaIndexDef                  {                      StartIndex = 1'                      Count = 2'                      Name = EtagAndCollectionSlice                  })                  .DefineKey(new TableSchema.SchemaIndexDef                  {                      StartIndex = 0'                      Count = 1                  });
Magic Number,FastTests.Voron.Tables,TableStorageTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\TableStorageTest.cs,Configure,The following statement contains a magic number: DocsSchema = new TableSchema()                  .DefineIndex(new TableSchema.SchemaIndexDef                  {                      StartIndex = 2'                      Count = 1'                      Name = EtagsSlice                  })                  .DefineIndex(new TableSchema.SchemaIndexDef                  {                      StartIndex = 1'                      Count = 2'                      Name = EtagAndCollectionSlice                  })                  .DefineKey(new TableSchema.SchemaIndexDef                  {                      StartIndex = 0'                      Count = 1                  });
Magic Number,FastTests.Voron.Tables,TableValueTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\TableValue.cs,CanBuild,The following statement contains a magic number: Assert.Equal(longer.Length + oren.Length + fun.Length + 3 + 1' tableValue.Size);
Magic Number,FastTests.Voron.Tables,TableValueTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\TableValue.cs,CanRead,The following statement contains a magic number: var p = reader.Read(2' out size);
Magic Number,FastTests.Voron.Tables,Validate,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Validate.cs,ErrorsOnInvalidVariableSizeDef,The following statement contains a magic number: var expectedIndex = new TableSchema.SchemaIndexDef                  {                      StartIndex = 2'                      Count = 1'                                        };
Magic Number,FastTests.Voron.Tables,Validate,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Validate.cs,ErrorsOnInvalidFixedSizeDef,The following statement contains a magic number: var expectedIndex = new TableSchema.FixedSizeSchemaIndexDef                  {                      StartIndex = 2'                  };
Magic Number,FastTests.Voron.Tables,Validate,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Validate.cs,ErrorsOnInvalidFixedSizeDef,The following statement contains a magic number: var actualIndex = new TableSchema.FixedSizeSchemaIndexDef                  {                      StartIndex = 5'                  };
Magic Number,FastTests.Voron.Tables,Validate,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Validate.cs,ErrorsOnInvalidSchemaWithSingleFixedIndex,The following statement contains a magic number: var def = new TableSchema.FixedSizeSchemaIndexDef                  {                      StartIndex = 2'                  };
Magic Number,FastTests.Voron.Tables,Validate,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Validate.cs,ErrorsOnInvalidSchemaWithSingleFixedIndex,The following statement contains a magic number: def = new TableSchema.FixedSizeSchemaIndexDef                  {                      StartIndex = 4'                  };
Magic Number,FastTests.Voron.Tables,Validate,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Validate.cs,ErrorsOnInvalidSchemaWithSingleVariableIndex,The following statement contains a magic number: var def = new TableSchema.SchemaIndexDef                  {                      Count = 3'                      StartIndex = 2'                  };
Magic Number,FastTests.Voron.Tables,Validate,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Validate.cs,ErrorsOnInvalidSchemaWithSingleVariableIndex,The following statement contains a magic number: var def = new TableSchema.SchemaIndexDef                  {                      Count = 3'                      StartIndex = 2'                  };
Magic Number,FastTests.Voron.Tables,Validate,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Validate.cs,ErrorsOnInvalidSchemaWithSingleVariableIndex,The following statement contains a magic number: def = new TableSchema.SchemaIndexDef                  {                      StartIndex = 4'                  };
Magic Number,FastTests.Voron.Tables,Validate,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Validate.cs,ErrorsOnInvalidSchemaWithMultipleIndexes,The following statement contains a magic number: var def = new TableSchema.SchemaIndexDef                  {                      Count = 3'                      StartIndex = 2'                  };
Magic Number,FastTests.Voron.Tables,Validate,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Validate.cs,ErrorsOnInvalidSchemaWithMultipleIndexes,The following statement contains a magic number: var def = new TableSchema.SchemaIndexDef                  {                      Count = 3'                      StartIndex = 2'                  };
Magic Number,FastTests.Voron.Tables,Validate,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Tables\Validate.cs,ErrorsOnInvalidSchemaWithMultipleIndexes,The following statement contains a magic number: def = new TableSchema.SchemaIndexDef                  {                      StartIndex = 4'                  };
Magic Number,FastTests.Voron.Trees,Basic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Basic.cs,CanAddVeryLargeValue,The following statement contains a magic number: var buffer = new byte[Constants.Storage.PageSize *2];
Magic Number,FastTests.Voron.Trees,Basic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Basic.cs,CanAddVeryLargeValue,The following statement contains a magic number: Assert.Equal(4' tree.State.PageCount);
Magic Number,FastTests.Voron.Trees,Basic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Basic.cs,CanAddVeryLargeValue,The following statement contains a magic number: Assert.Equal(3' tree.State.OverflowPages);
Magic Number,FastTests.Voron.Trees,Basic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Basic.cs,CanAddEnoughToCausePageSplit,The following statement contains a magic number: size < (Constants.Storage.PageSize+ Constants.Storage.PageSize/2)
Magic Number,FastTests.Voron.Trees,Basic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Basic.cs,CanAddEnoughToCausePageSplit,The following statement contains a magic number: Assert.Equal(4' tree.State.PageCount);
Magic Number,FastTests.Voron.Trees,Basic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Basic.cs,CanAddEnoughToCausePageSplit,The following statement contains a magic number: Assert.Equal(3' tree.State.LeafPages);
Magic Number,FastTests.Voron.Trees,Basic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Basic.cs,CanAddEnoughToCausePageSplit,The following statement contains a magic number: Assert.Equal(2' tree.State.Depth);
Magic Number,FastTests.Voron.Trees,Basic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Basic.cs,AfterPageSplitAllDataIsValid,The following statement contains a magic number: const int count = 256;
Magic Number,FastTests.Voron.Trees,Basic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Basic.cs,PageSplitsAllAround,The following statement contains a magic number: j < 5
Magic Number,FastTests.Voron.Trees,Basic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Basic.cs,PageSplitsAllAround,The following statement contains a magic number: i < 256
Magic Number,FastTests.Voron.Trees,Basic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Basic.cs,PageSplitsAllAround,The following statement contains a magic number: j < 5
Magic Number,FastTests.Voron.Trees,Basic,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Basic.cs,PageSplitsAllAround,The following statement contains a magic number: i < 256
Magic Number,FastTests.Voron.Trees,CanDefrag,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\CanDefrag.cs,CanDeleteAtRoot,The following statement contains a magic number: var size = 250;
Magic Number,FastTests.Voron.Trees,CanDefrag,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\CanDefrag.cs,CanDeleteAtRoot,The following statement contains a magic number: tree.Add(string.Format("{0'5}"' i * 2)' StreamFor("abcdefg"));
Magic Number,FastTests.Voron.Trees,CanDefrag,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\CanDefrag.cs,CanDeleteAtRoot,The following statement contains a magic number: tree.Delete(string.Format("{0'5}"' i * 2));
Magic Number,FastTests.Voron.Trees,CanDefrag,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\CanDefrag.cs,CanDeleteAtRoot,The following statement contains a magic number: i < size / 2
Magic Number,FastTests.Voron.Trees,CanDefrag,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\CanDefrag.cs,CanDeleteAtRoot,The following statement contains a magic number: tree.Add("  244"' new MemoryStream(new byte[512]));
Magic Number,FastTests.Voron.Trees,Deletes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Deletes.cs,CanAddVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: var buffer = new byte[Constants.Storage.PageSize*2];
Magic Number,FastTests.Voron.Trees,Deletes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Deletes.cs,CanAddVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: Assert.Equal(4' tree.State.PageCount);
Magic Number,FastTests.Voron.Trees,Deletes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Deletes.cs,CanAddVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: Assert.Equal(3' tree.State.OverflowPages);
Magic Number,FastTests.Voron.Trees,Deletes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Deletes.cs,CanDeleteAtRoot,The following statement contains a magic number: i < 1000
Magic Number,FastTests.Voron.Trees,Deletes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Deletes.cs,CanDeleteAtRoot,The following statement contains a magic number: i < 1000
Magic Number,FastTests.Voron.Trees,Deletes,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Deletes.cs,CanDeleteAtRoot,The following statement contains a magic number: i < 15
Magic Number,FastTests.Voron.Trees,FreeSpaceTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\FreeSpaceTest.cs,WillBeReused,The following statement contains a magic number: var buffer = new byte[512];
Magic Number,FastTests.Voron.Trees,FreeSpaceTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\FreeSpaceTest.cs,WillBeReused,The following statement contains a magic number: i < 25
Magic Number,FastTests.Voron.Trees,FreeSpaceTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\FreeSpaceTest.cs,WillBeReused,The following statement contains a magic number: i < 25
Magic Number,FastTests.Voron.Trees,FreeSpaceTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\FreeSpaceTest.cs,WillBeReused,The following statement contains a magic number: i < 25
Magic Number,FastTests.Voron.Trees,FreeSpaceTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\FreeSpaceTest.cs,WillBeReused,The following statement contains a magic number: Assert.True(Env.NextPageNumber - old < 2' "This test will not pass until we finish merging the free space branch");
Magic Number,FastTests.Voron.Trees,FreeSpaceTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\FreeSpaceTest.cs,CanReuseMostOfFreePages_RemainingOnesCanBeTakenToHandleFreeSpace,The following statement contains a magic number: var minNumberOfFreePages = numberOfFreedPages * 0.8;
Magic Number,FastTests.Voron.Trees,FreeSpaceTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\FreeSpaceTest.cs,FreeSpaceHandlingShouldNotReturnPagesThatAreAlreadyAllocated,The following statement contains a magic number: maxPageNumber = random.Next(0' 40000);
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithAdditionsAndRemovals,The following statement contains a magic number: tree.Add(string.Format("{0}1"' i)' new MemoryStream(new byte[1472]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithAdditionsAndRemovals,The following statement contains a magic number: tree.Add(string.Format("{0}2"' i)' new MemoryStream(new byte[992]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithAdditionsAndRemovals,The following statement contains a magic number: tree.Add(string.Format("{0}3"' i)' new MemoryStream(new byte[1632]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithAdditionsAndRemovals,The following statement contains a magic number: tree.Add(string.Format("{0}4"' i)' new MemoryStream(new byte[632]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithAdditionsAndRemovals,The following statement contains a magic number: tree.Add(string.Format("{0}5"' i)' new MemoryStream(new byte[824]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithAdditionsAndRemovals,The following statement contains a magic number: tree.Add(string.Format("{0}6"' i)' new MemoryStream(new byte[1096]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithAdditionsAndRemovals,The following statement contains a magic number: tree.Add(string.Format("{0}7"' i)' new MemoryStream(new byte[2048]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithAdditionsAndRemovals,The following statement contains a magic number: tree.Add(string.Format("{0}8"' i)' new MemoryStream(new byte[1228]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithAdditionsAndRemovals,The following statement contains a magic number: tree.Add(string.Format("{0}9"' i)' new MemoryStream(new byte[8192]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithAdditionsAndRemovals,The following statement contains a magic number: Assert.Equal(tree.State.NumberOfEntries' 9 * (i + 1));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithAdditionsAndRemovals,The following statement contains a magic number: i < 80
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithAdditionsAndRemovals,The following statement contains a magic number: Assert.Equal(tree.State.NumberOfEntries' 9 * i);
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}1"' i)' new MemoryStream(new byte[1472]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}2"' i)' new MemoryStream(new byte[992]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}3"' i)' new MemoryStream(new byte[1632]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}4"' i)' new MemoryStream(new byte[632]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}5"' i)' new MemoryStream(new byte[824]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}6"' i)' new MemoryStream(new byte[1096]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}7"' i)' new MemoryStream(new byte[2048]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}8"' i)' new MemoryStream(new byte[1228]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}9"' i)' new MemoryStream(new byte[8192]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: Assert.Equal(tree.State.NumberOfEntries' 9 * (i + 1));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: i < 80
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}9"' i)' new MemoryStream(new byte[1472]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}8"' i)' new MemoryStream(new byte[992]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}7"' i)' new MemoryStream(new byte[1632]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}6"' i)' new MemoryStream(new byte[632]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}5"' i)' new MemoryStream(new byte[824]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}4"' i)' new MemoryStream(new byte[1096]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}3"' i)' new MemoryStream(new byte[2048]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}2"' i)' new MemoryStream(new byte[1228]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: tree.Add(string.Format("{0}1"' i)' new MemoryStream(new byte[8192]));
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: Assert.Equal(tree.State.NumberOfEntries' 9 * 80);
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: Assert.Equal(tree.State.NumberOfEntries' 9 * 80);
Magic Number,FastTests.Voron.Trees,ItemCount,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\ItemsCount.cs,ItemCountIsConsistentWithUpdates,The following statement contains a magic number: i < 80
Magic Number,FastTests.Voron.Trees,Iteration,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Iteration.cs,CanIterateInOrder,The following statement contains a magic number: var buffer = new byte[512];
Magic Number,FastTests.Voron.Trees,Iteration,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Iteration.cs,CanIterateInOrder,The following statement contains a magic number: i < 25
Magic Number,FastTests.Voron.Trees,Iteration,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Iteration.cs,CanIterateInOrder,The following statement contains a magic number: i < 24
Magic Number,FastTests.Voron.Trees,Iteration,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Iteration.cs,CanIterateInOrder,The following statement contains a magic number: Assert.Equal(24.ToString("0000")' iterator.CurrentKey.ToString());
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,CanMergeRight,The following statement contains a magic number: tree.Add("1"' new MemoryStream(new byte[1472]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,CanMergeRight,The following statement contains a magic number: tree.Add("2"' new MemoryStream(new byte[992]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,CanMergeRight,The following statement contains a magic number: tree.Add("3"' new MemoryStream(new byte[1632]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,CanMergeRight,The following statement contains a magic number: tree.Add("4"' new MemoryStream(new byte[632]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,CanMergeRight,The following statement contains a magic number: tree.Add("5"' new MemoryStream(new byte[824]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,CanMergeRight,The following statement contains a magic number: tree.Add("6"' new MemoryStream(new byte[1096]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,CanMergeLeft,The following statement contains a magic number: tree.Add("1"' new MemoryStream(new byte[1524]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,CanMergeLeft,The following statement contains a magic number: tree.Add("2"' new MemoryStream(new byte[1524]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,CanMergeLeft,The following statement contains a magic number: tree.Add("3"' new MemoryStream(new byte[1024]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,CanMergeLeft,The following statement contains a magic number: tree.Add("4"' new MemoryStream(new byte[64]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tree.Add(string.Format("{0}1"' i)' new MemoryStream(new byte[1472]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tree.Add(string.Format("{0}2"' i)' new MemoryStream(new byte[992]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tree.Add(string.Format("{0}3"' i)' new MemoryStream(new byte[1632]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tree.Add(string.Format("{0}4"' i)' new MemoryStream(new byte[632]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tree.Add(string.Format("{0}5"' i)' new MemoryStream(new byte[824]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tree.Add(string.Format("{0}6"' i)' new MemoryStream(new byte[1096]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tree.Add(string.Format("{0}7"' i)' new MemoryStream(new byte[2048]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tree.Add(string.Format("{0}8"' i)' new MemoryStream(new byte[1228]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tree.Add(string.Format("{0}9"' i)' new MemoryStream(new byte[8192]));
Magic Number,FastTests.Voron.Trees,Rebalance,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: i < 80
Magic Number,FastTests.Voron.Trees,TreeRenaming,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeRenaming.cs,CanRenameTree,The following statement contains a magic number: tree.Add("items/1"' new byte[] { 1' 2' 3 });
Magic Number,FastTests.Voron.Trees,TreeRenaming,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeRenaming.cs,CanRenameTree,The following statement contains a magic number: tree.Add("items/1"' new byte[] { 1' 2' 3 });
Magic Number,FastTests.Voron.Trees,TreeRenaming,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeRenaming.cs,CanRenameTree,The following statement contains a magic number: tree.Add("items/2"' new byte[] { 1' 2' 3 });
Magic Number,FastTests.Voron.Trees,TreeRenaming,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeRenaming.cs,CanRenameTree,The following statement contains a magic number: tree.Add("items/2"' new byte[] { 1' 2' 3 });
Magic Number,FastTests.Voron.Trees,TreeRenaming,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeRenaming.cs,CanRenameTree,The following statement contains a magic number: tree.Add("items/3"' new byte[] { 1' 2' 3 });
Magic Number,FastTests.Voron.Trees,TreeRenaming,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeRenaming.cs,CanRenameTree,The following statement contains a magic number: tree.Add("items/3"' new byte[] { 1' 2' 3 });
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,TotalPageCountConsistsOfLeafBrancheAndOverflowPages,The following statement contains a magic number: tree.Add("test" + new string('-'' r.Next(128)) + i' new byte[r.Next(512)]);
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,TotalPageCountConsistsOfLeafBrancheAndOverflowPages,The following statement contains a magic number: tree.Add("test" + new string('-'' r.Next(128)) + i' new byte[r.Next(512)]);
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,TotalPageCountConsistsOfLeafBrancheAndOverflowPages,The following statement contains a magic number: tree.Add("overflow" + new string('-'' r.Next(128)) + i' new byte[r.Next(8192)]);
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,TotalPageCountConsistsOfLeafBrancheAndOverflowPages,The following statement contains a magic number: tree.Add("overflow" + new string('-'' r.Next(128)) + i' new byte[r.Next(8192)]);
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,HasReducedNumberOfPagesAfterRemovingHalfOfEntries,The following statement contains a magic number: var testKey = "test" + new string('-'' 128);
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,HasReducedNumberOfPagesAfterRemovingHalfOfEntries,The following statement contains a magic number: var smallValue = new byte[256];
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,HasReducedNumberOfPagesAfterRemovingHalfOfEntries,The following statement contains a magic number: var largeValue = new byte[Constants.Storage.PageSize * 2];
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,HasReducedNumberOfPagesAfterRemovingHalfOfEntries,The following statement contains a magic number: var overflowKey = "overflow" + new string('-'' 128);
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,HasReducedNumberOfPagesAfterRemovingHalfOfEntries,The following statement contains a magic number: size < 32 * Constants.Storage.PageSize
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,HasReducedNumberOfPagesAfterRemovingHalfOfEntries,The following statement contains a magic number: size < 6 * Constants.Storage.PageSize
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,HasReducedNumberOfPagesAfterRemovingHalfOfEntries,The following statement contains a magic number: tree.Delete("test" + new string('-'' 128) + i);
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,HasReducedNumberOfPagesAfterRemovingHalfOfEntries,The following statement contains a magic number: i < numberOfRegularItems / 2
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,HasReducedNumberOfPagesAfterRemovingHalfOfEntries,The following statement contains a magic number: tree.Delete("overflow" + new string('-'' 128) + 0);
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,HasReducedTreeDepthValueAfterRemovingEntries,The following statement contains a magic number: var key = "test" + new string('-'' 256);
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,HasReducedTreeDepthValueAfterRemovingEntries,The following statement contains a magic number: var value = new byte[256];
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,HasReducedTreeDepthValueAfterRemovingEntries,The following statement contains a magic number: size += Tree.CalcSizeOfEmbeddedEntry(s.Length' 256);
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,HasReducedTreeDepthValueAfterRemovingEntries,The following statement contains a magic number: size < 128*Constants.Storage.PageSize
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,HasReducedTreeDepthValueAfterRemovingEntries,The following statement contains a magic number: i < numberOfItems * 0.75
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,AllPagesCantHasDuplicatesInMultiTrees,The following statement contains a magic number: i < 100
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,MustNotProduceNegativePageCountNumber,The following statement contains a magic number: i < 50
Magic Number,FastTests.Voron.Trees,TreeStateTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\TreeStateTests.cs,MustNotProduceNegativePageCountNumber,The following statement contains a magic number: i < 50
Magic Number,FastTests.Voron.Trees,Updates,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Updates.cs,CanUpdateVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: var buffer = new byte[Constants.Storage.PageSize*2];
Magic Number,FastTests.Voron.Trees,Updates,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Updates.cs,CanUpdateVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: Assert.Equal(4' tree.State.PageCount);
Magic Number,FastTests.Voron.Trees,Updates,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Updates.cs,CanUpdateVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: Assert.Equal(3' tree.State.OverflowPages);
Magic Number,FastTests.Voron.Trees,Updates,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Updates.cs,CanUpdateVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: buffer = new byte[Constants.Storage.PageSize * 2 * 2];
Magic Number,FastTests.Voron.Trees,Updates,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Updates.cs,CanUpdateVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: buffer = new byte[Constants.Storage.PageSize * 2 * 2];
Magic Number,FastTests.Voron.Trees,Updates,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Updates.cs,CanUpdateVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: Assert.Equal(6' tree.State.PageCount);
Magic Number,FastTests.Voron.Trees,Updates,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Trees\Updates.cs,CanUpdateVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: Assert.Equal(5' tree.State.OverflowPages);
Magic Number,FastTests.Voron.Util,ImmutableAppendOnlyTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Util\ImmutableAppendOnlyTests.cs,CanAddAndRemove,The following statement contains a magic number: var list = ImmutableAppendOnlyList<long>.Empty                  .Append(1)                  .Append(2);
Magic Number,FastTests.Voron.Util,StreamExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Util\StreamExtensions.cs,ReadData,The following statement contains a magic number: const int defaultBufferSize = 1024*16;
Magic Number,FastTests.Voron.Util,StreamExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Util\StreamExtensions.cs,ReadData,The following statement contains a magic number: const int defaultBufferSize = 1024*16;
Magic Number,FastTests.Voron.Util,StreamExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Util\StreamExtensions.cs,ReadDataAsync,The following statement contains a magic number: const int defaultBufferSize = 1024*16;
Magic Number,FastTests.Voron.Util,StreamExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Voron\Util\StreamExtensions.cs,ReadDataAsync,The following statement contains a magic number: const int defaultBufferSize = 1024*16;
Duplicate Code,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_identical,The method contains a code clone-set at the following line numbers (starting from the method definition): ((5' 27)' (29' 51))
Duplicate Code,FastTests.Blittable,BlittableJsonEqualityTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Blittable\BlittableJsonEqualityTests.cs,Equals_with_the_usage_of_memcmp_underneath_and_complex_nested_object,The method contains a code clone-set at the following line numbers (starting from the method definition): ((5' 26)' (28' 49))
Duplicate Code,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,Errors2,The method contains a code clone-set at the following line numbers (starting from the method definition): ((6' 25)' (7' 26)' (8' 27)' (9' 28)' (10' 29)' (11' 30)' (12' 31)' (13' 32)' (14' 33)' (15' 34)' (16' 35)' (17' 36)' (18' 37)' (19' 38)' (20' 39)' (21' 40)' (22' 41)' (23' 42)' (24' 43)' (25' 44)' (26' 45)' (27' 46)' (28' 47)' (29' 48)' (30' 49)' (31' 50)' (32' 51)' (33' 52)' (34' 53)' (35' 54)' (36' 55)' (37' 56)' (38' 57)' (39' 58)' (40' 59)' (41' 60)' (42' 61)' (43' 62)' (44' 63)' (45' 64)' (46' 65)' (47' 66)' (48' 67)' (49' 68)' (50' 69)' (51' 70)' (52' 71)' (53' 72)' (54' 73)' (55' 74)' (56' 75)' (57' 76)' (58' 77)' (59' 78)' (60' 79)' (61' 80)' (62' 81)' (63' 82)' (64' 83)' (65' 84)' (66' 85)' (67' 86)' (68' 87)' (69' 88)' (70' 89)' (71' 90)' (72' 91)' (73' 92)' (74' 93)' (75' 94)' (76' 95)' (77' 96)' (78' 97)' (79' 98)' (80' 99)' (81' 100)' (82' 101)' (83' 102)' (84' 103)' (85' 104)' (86' 105)' (87' 106)' (88' 107)' (89' 108)' (90' 109)' (91' 110)' (92' 111)' (93' 112)' (94' 113)' (95' 114)' (96' 115)' (97' 116)' (98' 117)' (99' 118)' (100' 119)' (101' 120)' (102' 121)' (103' 122)' (104' 123)' (105' 124)' (106' 125)' (107' 126)' (108' 127)' (109' 128)' (110' 129)' (111' 130)' (112' 131)' (113' 132)' (114' 133)' (115' 134)' (116' 135)' (117' 136)' (118' 137))
Duplicate Code,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,Errors2,The method contains a code clone-set at the following line numbers (starting from the method definition): ((6' 136)' (7' 137))
Duplicate Code,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,Errors2,The method contains a code clone-set at the following line numbers (starting from the method definition): ((6' 25)' (8' 27)' (9' 28)' (10' 29)' (11' 30)' (12' 31)' (13' 32)' (14' 33)' (15' 34)' (16' 35)' (17' 36)' (18' 37)' (19' 38)' (20' 39)' (21' 40)' (22' 41)' (23' 42)' (24' 43)' (25' 44)' (26' 45)' (27' 46)' (28' 47)' (29' 48)' (30' 49)' (31' 50)' (32' 51)' (33' 52)' (34' 53)' (35' 54)' (36' 55)' (37' 56)' (38' 57)' (39' 58)' (40' 59)' (41' 60)' (42' 61)' (43' 62)' (44' 63)' (45' 64)' (46' 65)' (47' 66)' (48' 67)' (49' 68)' (50' 69)' (51' 70)' (52' 71)' (53' 72)' (54' 73)' (55' 74)' (56' 75)' (57' 76)' (58' 77)' (59' 78)' (60' 79)' (61' 80)' (62' 81)' (63' 82)' (64' 83)' (65' 84)' (66' 85)' (67' 86)' (68' 87)' (69' 88)' (70' 89)' (71' 90)' (72' 91)' (73' 92)' (74' 93)' (75' 94)' (76' 95)' (77' 96)' (78' 97)' (79' 98)' (80' 99)' (81' 100)' (82' 101)' (83' 102)' (84' 103)' (85' 104)' (86' 105)' (87' 106)' (88' 107)' (89' 108)' (90' 109)' (91' 110)' (92' 111)' (93' 112)' (94' 113)' (95' 114)' (96' 115)' (97' 116)' (98' 117)' (99' 118)' (100' 119)' (101' 120)' (102' 121)' (103' 122)' (104' 123)' (105' 124)' (106' 125)' (107' 126)' (108' 127)' (109' 128)' (110' 129)' (111' 130)' (112' 131)' (113' 132)' (114' 133)' (115' 134)' (116' 135)' (117' 136)' (118' 137))
Duplicate Code,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,Errors2,The method contains a code clone-set at the following line numbers (starting from the method definition): ((218' 364)' (219' 365))
Duplicate Code,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,Errors2,The method contains a code clone-set at the following line numbers (starting from the method definition): ((218' 237)' (219' 238)' (220' 239)' (221' 240)' (222' 241)' (223' 242)' (224' 243)' (225' 244)' (226' 245)' (227' 246)' (228' 247)' (229' 248)' (230' 249)' (231' 250)' (232' 251)' (233' 252)' (234' 253)' (235' 254)' (236' 255)' (237' 256)' (238' 257)' (239' 258)' (240' 259)' (241' 260)' (242' 261)' (243' 262)' (244' 263)' (245' 264)' (246' 265)' (247' 266)' (248' 267)' (249' 268)' (250' 269)' (251' 270)' (252' 271)' (253' 272)' (254' 273)' (255' 274)' (256' 275)' (257' 276)' (258' 277)' (259' 278)' (260' 279)' (261' 280)' (262' 281)' (263' 282)' (264' 283)' (265' 284)' (266' 285)' (267' 286)' (268' 287)' (269' 288)' (270' 289)' (271' 290)' (272' 291)' (273' 292)' (274' 293)' (275' 294)' (276' 295)' (277' 296)' (278' 297)' (279' 298)' (280' 299)' (281' 300)' (282' 301)' (283' 302)' (284' 303)' (285' 304)' (286' 305)' (287' 306)' (288' 307)' (289' 308)' (290' 309)' (291' 310)' (292' 311)' (293' 312)' (294' 313)' (295' 314)' (296' 315)' (297' 316)' (298' 317)' (299' 318)' (300' 319)' (301' 320)' (302' 321)' (303' 322)' (304' 323)' (305' 324)' (306' 325)' (307' 326)' (308' 327)' (309' 328)' (310' 329)' (311' 330)' (312' 331)' (313' 332)' (314' 333)' (315' 334)' (316' 335)' (317' 336)' (318' 337)' (319' 338)' (320' 339)' (321' 340)' (322' 341)' (323' 342)' (324' 343)' (325' 344)' (326' 345)' (327' 346)' (328' 347)' (329' 348)' (330' 349)' (331' 350)' (332' 351)' (333' 352)' (334' 353)' (335' 354)' (336' 355)' (337' 356)' (338' 357)' (339' 358)' (340' 359)' (341' 360)' (342' 361)' (343' 362)' (344' 363)' (345' 364)' (346' 365))
Duplicate Code,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,Errors2,The method contains a code clone-set at the following line numbers (starting from the method definition): ((218' 237)' (220' 239)' (221' 240)' (222' 241)' (223' 242)' (224' 243)' (225' 244)' (226' 245)' (227' 246)' (228' 247)' (229' 248)' (230' 249)' (231' 250)' (232' 251)' (233' 252)' (234' 253)' (235' 254)' (236' 255)' (237' 256)' (238' 257)' (239' 258)' (240' 259)' (241' 260)' (242' 261)' (243' 262)' (244' 263)' (245' 264)' (246' 265)' (247' 266)' (248' 267)' (249' 268)' (250' 269)' (251' 270)' (252' 271)' (253' 272)' (254' 273)' (255' 274)' (256' 275)' (257' 276)' (258' 277)' (259' 278)' (260' 279)' (261' 280)' (262' 281)' (263' 282)' (264' 283)' (265' 284)' (266' 285)' (267' 286)' (268' 287)' (269' 288)' (270' 289)' (271' 290)' (272' 291)' (273' 292)' (274' 293)' (275' 294)' (276' 295)' (277' 296)' (278' 297)' (279' 298)' (280' 299)' (281' 300)' (282' 301)' (283' 302)' (284' 303)' (285' 304)' (286' 305)' (287' 306)' (288' 307)' (289' 308)' (290' 309)' (291' 310)' (292' 311)' (293' 312)' (294' 313)' (295' 314)' (296' 315)' (297' 316)' (298' 317)' (299' 318)' (300' 319)' (301' 320)' (302' 321)' (303' 322)' (304' 323)' (305' 324)' (306' 325)' (307' 326)' (308' 327)' (309' 328)' (310' 329)' (311' 330)' (312' 331)' (313' 332)' (314' 333)' (315' 334)' (316' 335)' (317' 336)' (318' 337)' (319' 338)' (320' 339)' (321' 340)' (322' 341)' (323' 342)' (324' 343)' (325' 344)' (326' 345)' (327' 346)' (328' 347)' (329' 348)' (330' 349)' (331' 350)' (332' 351)' (333' 352)' (334' 353)' (335' 354)' (336' 355)' (337' 356)' (338' 357)' (339' 358)' (340' 359)' (341' 360)' (342' 361)' (343' 362)' (344' 363)' (345' 364)' (346' 365))
Duplicate Code,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,Errors2,The method contains a code clone-set at the following line numbers (starting from the method definition): ((366' 420)' (367' 421))
Duplicate Code,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,Errors2,The method contains a code clone-set at the following line numbers (starting from the method definition): ((366' 385)' (367' 386)' (368' 387)' (369' 388)' (370' 389)' (371' 390)' (372' 391)' (373' 392)' (374' 393)' (375' 394)' (376' 395)' (377' 396)' (378' 397)' (379' 398)' (380' 399)' (381' 400)' (382' 401)' (383' 402)' (384' 403)' (385' 404)' (386' 405)' (387' 406)' (388' 407)' (389' 408)' (390' 409)' (391' 410)' (392' 411)' (393' 412)' (394' 413)' (395' 414)' (396' 415)' (397' 416)' (398' 417)' (399' 418)' (400' 419)' (401' 420)' (402' 421))
Duplicate Code,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,Errors2,The method contains a code clone-set at the following line numbers (starting from the method definition): ((366' 385)' (368' 387)' (369' 388)' (370' 389)' (371' 390)' (372' 391)' (373' 392)' (374' 393)' (375' 394)' (376' 395)' (377' 396)' (378' 397)' (379' 398)' (380' 399)' (381' 400)' (382' 401)' (383' 402)' (384' 403)' (385' 404)' (386' 405)' (387' 406)' (388' 407)' (389' 408)' (390' 409)' (391' 410)' (392' 411)' (393' 412)' (394' 413)' (395' 414)' (396' 415)' (397' 416)' (398' 417)' (399' 418)' (400' 419)' (401' 420)' (402' 421))
Duplicate Code,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The method contains a code clone-set at the following line numbers (starting from the method definition): ((77' 124)' (137' 184)' (197' 244))
Duplicate Code,FastTests.Server.Documents.Indexing.Auto,BasicAutoMapIndexing,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Indexing\Auto\BasicAutoMapIndexing.cs,AutoIndexesShouldBeMarkedAsIdleAndDeleted,The method contains a code clone-set at the following line numbers (starting from the method definition): ((77' 102)' (257' 282)' (137' 162)' (197' 222))
Duplicate Code,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The method contains a code clone-set at the following line numbers (starting from the method definition): ((36' 61)' (66' 91))
Duplicate Code,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The method contains a code clone-set at the following line numbers (starting from the method definition): ((96' 121)' (127' 152))
Duplicate Code,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The method contains a code clone-set at the following line numbers (starting from the method definition): ((100' 121)' (161' 182))
Duplicate Code,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The method contains a code clone-set at the following line numbers (starting from the method definition): ((131' 157)' (161' 187))
Duplicate Code,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The method contains a code clone-set at the following line numbers (starting from the method definition): ((101' 120)' (132' 151)' (162' 181)' (192' 211))
Duplicate Code,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The method contains a code clone-set at the following line numbers (starting from the method definition): ((101' 121)' (192' 212))
Duplicate Code,FastTests.Server.Documents.Queries.Dynamic.MapReduce,GroupByMultipleFields,C:\research\architectureSmells\repos\ravendb_ravendb\test\FastTests\Server\Documents\Queries\Dynamic\MapReduce\GroupByMultipleFields.cs,Group_by_multiple_fields,The method contains a code clone-set at the following line numbers (starting from the method definition): ((132' 155)' (192' 215)' (162' 185))
