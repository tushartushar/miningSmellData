Implementation smell,Namespace,Class,File,Method,Description
Long Method,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,PutIfMatch,The method has 172 lines of code.
Long Method,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,GetOrAdd,The method has 150 lines of code.
Long Method,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,CalculateMemUsageFromSmaps,The method has 279 lines of code.
Long Method,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,FromBase64_Decode,The method has 140 lines of code.
Complex Method,Sparrow.Server,ByteStringMemoryCache,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,Allocate,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,Sodium,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,TryGetValue,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,PutIfMatch,Cyclomatic complexity of the method is 24
Complex Method,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,GetOrAdd,Cyclomatic complexity of the method is 16
Complex Method,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,PutSlotCopy,Cyclomatic complexity of the method is 10
Complex Method,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,HelpCopyImpl,Cyclomatic complexity of the method is 13
Complex Method,Sparrow.Server.Collections.LockFree,LockFreeConcurrentDictionary<TKey;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\LockFreeConcurrentDictionary.cs,LockFreeConcurrentDictionary,Cyclomatic complexity of the method is 14
Complex Method,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,WindowsIsSwappingOnHddInsteadOfSsd,Cyclomatic complexity of the method is 10
Complex Method,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,PosixIsSwappingOnHddInsteadOfSsd,Cyclomatic complexity of the method is 11
Complex Method,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,SetMemoryRecords,Cyclomatic complexity of the method is 12
Complex Method,Sparrow.Server.Platform,Pal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Pal.cs,Pal,Cyclomatic complexity of the method is 9
Complex Method,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Platform.Posix,KernelVirtualFileSystemUtils,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,ReadSwapInformationFromSwapsFile,Cyclomatic complexity of the method is 9
Complex Method,Sparrow.Platform.Posix,KernelVirtualFileSystemUtils,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,GetAllDisksFromPartitionsFile,Cyclomatic complexity of the method is 9
Complex Method,Sparrow.Platform.Posix,BufferedPosixKeyValueOutputValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,SearchInBuffer,Cyclomatic complexity of the method is 10
Complex Method,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,CalculateMemUsageFromSmaps,Cyclomatic complexity of the method is 57
Complex Method,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeDiff,Cyclomatic complexity of the method is 10
Complex Method,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeNew,Cyclomatic complexity of the method is 10
Complex Method,Sparrow.Server.Utils,DiffApplier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,Apply,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Server.Utils,EchoStream,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\EchoStream.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Server.Utils,ReusableStringReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\ReusableStringReader.cs,Read,Cyclomatic complexity of the method is 8
Long Parameter List,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,From,The method has 5 parameters. Parameters: value' offset' count' type' str
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_kdf_derive_from_key,The method has 5 parameters. Parameters: subkey' subkeylen' subkeyid' ctx' key
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_stream_xchacha20_xor_ic,The method has 6 parameters. Parameters: c' m' mlen' n' ic' k
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_aead_xchacha20poly1305_ietf_encrypt,The method has 9 parameters. Parameters: c' clen' m' mlen' ad' adlen' nsec' npub' k
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_aead_xchacha20poly1305_ietf_decrypt,The method has 9 parameters. Parameters: m' mlen' nsec' c' clen' ad' adlen' npub' k
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_aead_xchacha20poly1305_ietf_encrypt_detached,The method has 10 parameters. Parameters: c' mac' maclen_p' m' mlen' ad' adlen' nsec' npub' k
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_aead_xchacha20poly1305_ietf_decrypt_detached,The method has 9 parameters. Parameters: m' nsec' c' clen' mac' ad' adlen' npub' k
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_box_seal_open,The method has 5 parameters. Parameters: m' c' clen' pk' sk
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_generichash,The method has 6 parameters. Parameters: out' outlen' in' inlen' key' keylen
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_kx_client_session_keys,The method has 5 parameters. Parameters: rx' tx' client_pk' client_sk' server_pk
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_kx_server_session_keys,The method has 5 parameters. Parameters: rx' tx' server_pk' server_sk' client_pk
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_box_easy,The method has 6 parameters. Parameters: c' m' mlen' n' pk' sk
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_box_open_easy,The method has 6 parameters. Parameters: m' c' clen' n' pk' sk
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_sign_detached,The method has 5 parameters. Parameters: sig' siglen' m' mlen' sk
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_secretstream_xchacha20poly1305_push,The method has 8 parameters. Parameters: state' c' clen_p' m' mlen' ad' adlen' tag
Long Parameter List,Sparrow.Server,Sodium,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Sodium.Additional.cs,crypto_secretstream_xchacha20poly1305_pull,The method has 8 parameters. Parameters: state' m' mlen_p' tag_p' c' clen' ad' adlen
Long Parameter List,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,CreateFileW,The method has 7 parameters. Parameters: lpFileName' dwDesiredAccess' dwShareMode' lpSecurityAttributes' dwCreationDisposition' dwFlagsAndAttributes' hTemplateFile
Long Parameter List,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,DeviceIoControl,The method has 8 parameters. Parameters: hDevice' dwIoControlCode' lpInBuffer' nInBufferSize' lpOutBuffer' nOutBufferSize' lpBytesReturned' lpOverlapped
Long Parameter List,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,DeviceIoControl,The method has 8 parameters. Parameters: hDevice' dwIoControlCode' lpInBuffer' nInBufferSize' lpOutBuffer' nOutBufferSize' lpBytesReturned' lpOverlapped
Long Parameter List,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,FormatMessage,The method has 7 parameters. Parameters: dwFlags' lpSource' dwMessageId' dwLanguageId' lpBuffer' nSize' Arguments
Long Parameter List,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,DeviceIoControl,The method has 8 parameters. Parameters: hDevice' dwIoControlCode' lpInBuffer' nInBufferSize' lpOutBuffer' nOutBufferSize' lpBytesReturned' lpOverlapped
Long Parameter List,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,BuildPosixMemoryInfoResult,The method has 8 parameters. Parameters: availableRam' totalPhysicalMemory' commitedMemory' commitLimit' availableWithoutTotalCleanMemory' sharedCleanMemory' workingSet' extended
Long Parameter List,Sparrow.Server.Meters,DurationMeasurement,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Meters\IoMeterBuffer.cs,DurationMeasurement,The method has 5 parameters. Parameters: parent' type' size' fileSize' onFileChange
Long Parameter List,Sparrow.Server.Platform,Pal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Pal.cs,rvn_create_and_mmap64_file,The method has 7 parameters. Parameters: filename' initialFileSize' flags' handle' baseAddress' actualFileSize' errorCode
Long Parameter List,Sparrow.Server.Platform,Pal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Pal.cs,rvn_create_and_mmap64_file,The method has 7 parameters. Parameters: filename' initialFileSize' flags' handle' baseAddress' actualFileSize' errorCode
Long Parameter List,Sparrow.Server.Platform,Pal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Pal.cs,rvn_open_journal_for_writes,The method has 7 parameters. Parameters: filename' mode' requiredSize' supportDurability' handle' actualSize' errorCode
Long Parameter List,Sparrow.Server.Platform,Pal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Pal.cs,rvn_open_journal_for_writes,The method has 7 parameters. Parameters: fileName' mode' requiredSize' supportDurability' handle' actualSize' errorCode
Long Parameter List,Sparrow.Server.Platform,Pal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Pal.cs,rvn_write_journal,The method has 5 parameters. Parameters: handle' buffer' size' offset' errorCode
Long Parameter List,Sparrow.Server.Platform,Pal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Pal.cs,rvn_read_journal,The method has 6 parameters. Parameters: handle' buffer' requiredSize' offset' actualSize' errorCode
Long Parameter List,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,mmap64_posix,The method has 6 parameters. Parameters: start' length' prot' flags' fd' offset
Long Parameter List,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,mmap64_mac,The method has 6 parameters. Parameters: start' length' prot' flags' fd' offset
Long Parameter List,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,mmap64,The method has 6 parameters. Parameters: start' length' prot' flags' fd' offset
Long Parameter List,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,PwriteOrThrow,The method has 6 parameters. Parameters: fd' buffer' count' offset' file' debug
Long Parameter List,Sparrow.Platform.Posix.macOS,macSyscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\macOS\macSyscall.cs,sysctl,The method has 6 parameters. Parameters: name' nameLen' oldP' oldLenP' newP' newLen
Long Parameter List,Sparrow.Platform.Posix.macOS,macSyscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\macOS\macSyscall.cs,proc_pidinfo,The method has 5 parameters. Parameters: pid' flavor' arg' buffer' bufferSize
Long Parameter List,Sparrow.Server.Utils,DiskSpaceChecker,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiskSpaceChecker.cs,CreateFile,The method has 7 parameters. Parameters: filename' access' share' securityAttributes' creationDisposition' flagsAndAttributes' templateFile
Long Identifier,Sparrow.Server,ByteStringContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,,The length of the parameter DefaultAllocationBlockSizeInBytes is 33.
Long Identifier,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,,The length of the parameter _internalReadyToUseMemorySegments is 33.
Long Identifier,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,,The length of the parameter _internalReusableStringPoolCount is 32.
Long Identifier,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,GetPhysicalDriveNumber,The length of the parameter IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS is 36.
Long Identifier,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,GetPhysicalDriveNumber,The length of the parameter returned_query_disk_extents_size is 32.
Long Identifier,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,,The length of the parameter StorageDeviceSeekPenaltyProperty is 32.
Long Identifier,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,SetFreeCommittedMemory,The length of the parameter minimumFreeCommittedMemoryPercentage is 36.
Long Identifier,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,BuildPosixMemoryInfoResult,The length of the parameter availableWithoutTotalCleanMemory is 32.
Long Identifier,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,GetMemoryInfoMacOs,The length of the parameter availableWithoutTotalCleanMemory is 32.
Long Identifier,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,,The length of the parameter _failedToGetAvailablePhysicalMemory is 35.
Long Identifier,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,,The length of the parameter _minimumFreeCommittedMemoryPercentage is 37.
Long Identifier,Sparrow.LowMemory,ProcMemInfoResults,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,,The length of the parameter AvailableWithoutTotalCleanMemory is 32.
Long Statement,Sparrow.Server,AsyncManualResetEvent,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\AsyncManualResetEvent.cs,Reset,The length of the statement  "                    Interlocked.CompareExchange(ref _tcs' new TaskCompletionSource<bool>(TaskCreationOptions.RunContinuationsAsynchronously)' tcs) == tcs) " is 134.
Long Statement,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,AllocateExternal,The length of the statement  "            Debug.Assert((type & ByteStringType.External) != 0' "This allocation routine is only for use with external storage byte strings."); " is 131.
Long Statement,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,AllocateInternal,The length of the statement  "            Debug.Assert((type & ByteStringType.External) == 0' "This allocation routine is only for use with internal storage byte strings."); " is 131.
Long Statement,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,AllocateInternal,The length of the statement  "            type &= ~ByteStringType.External; // We are allocating internal' so we will force it (even if we are checking for it in debug). " is 127.
Long Statement,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,AllocateInternal,The length of the statement  "            if (allocationSize <= ByteStringContext.MinBlockSizeInBytes && _internalReusableStringPoolCount[reusablePoolIndex] != 0) " is 120.
Long Statement,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,AllocateInternal,The length of the statement  "            return AllocateWholeSegment(length' type); // We will pass the length because this is a whole allocated segment able to hold a length size ByteString. " is 150.
Long Statement,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,ReleaseExternal,The length of the statement  "            // We are releasing' therefore we should validate among other things if an immutable string changed and if we are the owners. " is 125.
Long Statement,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,Release,The length of the statement  "            // We are releasing' therefore we should validate among other things if an immutable string changed and if we are the owners. " is 125.
Long Statement,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,From,The length of the statement  "            Debug.Assert((type & ByteStringType.External) == 0' $"{nameof(From)} is not expected to be called with the '{nameof(ByteStringType.External)}' requested type' use {nameof(FromPtr)} instead."); " is 192.
Long Statement,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,FromPtr,The length of the statement  "            str = AllocateExternal(valuePtr' size' type | ByteStringType.External); // We are allocating external' so we will force it (even if we are checking for it in debug). " is 165.
Long Statement,Sparrow.Server.Collections.LockFree,LockFreeConcurrentDictionary<TKey;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\LockFreeConcurrentDictionary.cs,Remove,The length of the statement  "            return _table.PutIfMatch(keyValuePair.Key' DictionaryImpl.TOMBSTONE' ref oldValObj' DictionaryImpl.ValueMatch.OldValue); " is 120.
Long Statement,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,HasNoSeekPenalty,The length of the statement  "                var IOCTL_STORAGE_QUERY_PROPERTY = CTL_CODE(IOCTL_STORAGE_BASE' 0x500' METHOD_BUFFERED' FILE_ANY_ACCESS); // From winioctl.h " is 124.
Long Statement,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,HasNoSeekPenalty,The length of the statement  "                querySeekPenaltyResult = DeviceIoControl(hDrive' IOCTL_STORAGE_QUERY_PROPERTY' ref query_seek_penalty' (uint)Marshal.SizeOf(query_seek_penalty)' ref querySeekPenaltyDesc' (uint)Marshal.SizeOf(querySeekPenaltyDesc)' out returnedQuerySeekPenaltySize' IntPtr.Zero); " is 262.
Long Statement,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,HasNominalMediaRotationRate,The length of the statement  "                var ioctlAtaPassThrough = CTL_CODE(IOCTL_SCSI_BASE' 0x040b' METHOD_BUFFERED' FILE_READ_ACCESS | FILE_WRITE_ACCESS); // From ntddscsi.h " is 134.
Long Statement,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,HasNominalMediaRotationRate,The length of the statement  "                result = DeviceIoControl(hDrive' ioctlAtaPassThrough' ref id_query' (uint)Marshal.SizeOf(id_query)' ref id_query' (uint)Marshal.SizeOf(id_query)' " is 145.
Long Statement,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,GetPhysicalDriveNumber,The length of the statement  "                uint IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS = CTL_CODE(IOCTL_VOLUME_BASE' 0' METHOD_BUFFERED' FILE_ANY_ACCESS); // From winioctl.h " is 128.
Long Statement,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,GetPhysicalDriveNumber,The length of the statement  "                query_disk_extents_result = DeviceIoControl(hDrive' IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS' IntPtr.Zero' 0' ref query_disk_extents' " is 129.
Long Statement,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,PosixIsSwappingOnHddInsteadOfSsd,The length of the statement  "                Log.Info("Error while trying to determine if hdd swaps instead of ssd on linux' ignoring this check and assuming no hddswap"' ex); " is 130.
Long Statement,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,SetFreeCommittedMemory,The length of the statement  "                throw new ArgumentException($"MinimumFreeCommittedMemory must be positive' but was: {minimumFreeCommittedMemoryPercentage}"); " is 125.
Long Statement,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,ThrowInsufficientMemory,The length of the statement  "            throw new EarlyOutOfMemoryException($"The amount of available memory to commit on the system is low. Commit charge: {memInfo.CurrentCommitCharge} / {memInfo.TotalCommittableMemory}. Memory: {memInfo.TotalPhysicalMemory - memInfo.AvailableMemory} / {memInfo.TotalPhysicalMemory}"); " is 280.
Long Statement,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,GetMemoryInfo,The length of the statement  "                    Logger.Info("Error while trying to get available memory' will stop trying and report that there is 256MB free only from now on"' e); " is 132.
Long Statement,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,GetMemoryInfoLinux,The length of the statement  "                    var realAvailable = maxMemoryUsage - cgroupMemoryUsage.Value + fromProcMemInfo.SharedCleanMemory.GetValue(SizeUnit.Bytes); " is 122.
Long Statement,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,GetMemoryInfoMacOs,The length of the statement  "                    Logger.Info("Failure when trying to read physical memory info from MacOS' error code was: " + Marshal.GetLastWin32Error()); " is 123.
Long Statement,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,GetMemoryInfoMacOs,The length of the statement  "             * Wired memory: Information in this memory can't be moved to the hard disk' so it must stay in RAM. The amount of Wired memory depends on the applications you are using. " is 169.
Long Statement,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,GetMemoryInfoMacOs,The length of the statement  "            var availableWithoutTotalCleanMemory = availableRamInBytes; // mac (unlike other linux distros) does calculate accurate available memory " is 136.
Long Statement,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,GetMemoryInfoMacOs,The length of the statement  "            return BuildPosixMemoryInfoResult(availableRamInBytes' totalPhysicalMemory' commitedMemory' commitLimit' availableWithoutTotalCleanMemory' Size.Zero' workingSet' extended); " is 172.
Long Statement,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,GetSharedCleanInBytes,The length of the statement  "            var sharedClean = process.WorkingSet64 - AbstractLowMemoryMonitor.GetUnmanagedAllocationsInBytes() - AbstractLowMemoryMonitor.GetManagedMemoryInBytes() - mappedDirty; " is 166.
Long Statement,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,IsHighDirtyMemory,The length of the statement  "                $"Total Physical Mem={memInfo.TotalPhysicalMemory.GetValue(SizeUnit.Bytes)}' Total Scratch Allocated Memory={totalScratchMemory} (which is above {percentageFromPhysicalMem}% physical {TotalPhysicalMemory.GetValue(SizeUnit.Bytes)} memory)' Available Memory={memInfo.AvailableMemory.GetValue(SizeUnit.Bytes)}"; " is 308.
Long Statement,Sparrow.Server.Platform,NativeMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\PlatformSpecific.cs,Allocate4KbAlignedMemory,The length of the statement  "                var allocate4KbAllignedMemory = Win32MemoryProtectMethods.VirtualAlloc(null' (UIntPtr)size' Win32MemoryProtectMethods.AllocationType.COMMIT' " is 140.
Long Statement,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The length of the statement  "            var msync = Syscall.msync((IntPtr)virtualAlloc' (UIntPtr)(uint)allocatedSize' MsyncFlags.MS_SYNC | MsyncFlags.MS_INVALIDATE); " is 125.
Long Statement,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The length of the statement  "                throw new InvalidOperationException("Failed to free call msync " + (IntPtr)virtualAlloc + ". Err=" + Marshal.GetLastWin32Error()); " is 130.
Long Statement,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The length of the statement  "             msync = Syscall.msync((IntPtr)virtualAlloc' (UIntPtr)(uint)allocatedSize' MsyncFlags.MS_SYNC | MsyncFlags.MS_INVALIDATE); " is 121.
Long Statement,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The length of the statement  "                throw new InvalidOperationException("Failed to free call msync " + (IntPtr)virtualAlloc + ". Err=" + Marshal.GetLastWin32Error()); " is 130.
Long Statement,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Free,The length of the statement  "            // var msync = Syscall.msync((IntPtr)virtualAlloc' (UIntPtr)(uint)dwSize' MsyncFlags.MS_SYNC | MsyncFlags.MS_INVALIDATE); " is 121.
Long Statement,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Free,The length of the statement  "            //     throw new InvalidOperationException("Failed to free call msync " + (IntPtr)address + ". Err=" + Marshal.GetLastWin32Error()); " is 132.
Long Statement,Sparrow.Server.Platform.Posix,PosixMemoryQueryMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixMemoryQueryMethods.cs,WillCauseHardPageFault,The length of the statement  "                    throw new MemoryInfoException($"Failed to mincore address: {new IntPtr(address).ToInt64()}' with length: {length}. Last Error = {Marshal.GetLastWin32Error()}"); " is 160.
Long Statement,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,PwriteOrThrow,The length of the statement  "                            $"Failed to ${debug} {file} with count={count}' offset={offset}' actuallyWritten={actuallyWritten} (regular mount' not a cifs/nfs mount)"); " is 139.
Long Statement,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,PwriteOrThrow,The length of the statement  "                    $"Failed to pwrite {file} with count={count}' offset={offset}' actuallyWritten={actuallyWritten}" + (cifsRetryOccured ? " (in cifs/nfs mount)" : "")); " is 150.
Long Statement,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,AllocateFileSpace,The length of the statement  "                    throw new IOException($"Tried too many times to call posix_fallocate {file}' but always got EINTR' cannot retry again"); " is 120.
Long Statement,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,SyncDirectory,The length of the statement  "                // (TODO: change it to lstat / FileInfo(path).Target in the future when https://github.com/dotnet/corefx/issues/26310 is fixed) " is 127.
Long Statement,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,CalculateMemUsageFromSmaps,The length of the statement  "            using (var fileStream = new FileStream($"/proc/{currentProcess.Id}/smaps"' FileMode.Open' FileAccess.Read' FileShare.Read)) " is 123.
Long Statement,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,CalculateMemUsageFromSmaps,The length of the statement  "                                    $"Additional Info: switchBuffer={switchBuffer}' foundK/B={foundK}/{foundValue}' valueSearchPosition={valueSearchPosition}' bytesSearched={bytesSearched}" + " is 155.
Long Statement,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,CalculateMemUsageFromSmaps,The length of the statement  "                                    $"' posInTempBuf={posInTempBuf}' searchedBuffer={searchedBuffer}' _tempBufferBytes=<{Encoding.UTF8.GetString(_tempBufferBytes)}" + " is 130.
Long Statement,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,CalculateMemUsageFromSmaps,The length of the statement  "                                    $"' buffer 0=<{Encoding.UTF8.GetString(_smapsBuffer[0])}>. buffer 1={Encoding.UTF8.GetString(_smapsBuffer[1])}End of Addtional Info."; " is 134.
Long Statement,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,ThrowOnNullString,The length of the statement  "            throw new InvalidDataException("Got term 'Locked' (end of single mapping data) with no filename (in 'resultString') after rw-s"); " is 129.
Long Statement,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,ThrowNotRwsTermAfterLockedTerm,The length of the statement  "                $"Found '{Encoding.UTF8.GetString(term)}' string in /proc/{processId}/smaps' but previous search did not end with '{Encoding.UTF8.GetString(_lockedBytes)}' (instead got {state})"); " is 180.
Long Statement,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,ThrowNotContainsValidValue,The length of the statement  "            throw new InvalidDataException($"Found '{Encoding.UTF8.GetString(term)}' string in /proc/{processId}/smaps' but no value"); " is 123.
Long Statement,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,ThrowNotContainsKbValue,The length of the statement  "                $"Found '{Encoding.UTF8.GetString(term)}' string in /proc/{processId}/smaps' and value but not in kB - invalid format. " + addtionalInfo); " is 138.
Long Statement,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The length of the statement  "            var virtualAlloc = Win32MemoryProtectMethods.VirtualAlloc(null' (UIntPtr)allocatedSize' Win32MemoryProtectMethods.AllocationType.COMMIT' " is 136.
Long Statement,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The length of the statement  "            if (Win32MemoryProtectMethods.VirtualProtect(virtualAlloc' (UIntPtr)(4096)' Win32MemoryProtectMethods.MemoryProtection.NOACCESS' " is 128.
Long Statement,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The length of the statement  "                throw new Win32Exception(Marshal.GetLastWin32Error()' "Failed to VirtualProtect (ElectricFence) at address=" + new IntPtr(virtualAlloc)); " is 137.
Long Statement,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The length of the statement  "            if (Win32MemoryProtectMethods.VirtualProtect(virtualAlloc + (sizeInPages + 1) * 4096' (UIntPtr)(4096)' Win32MemoryProtectMethods.MemoryProtection.NOACCESS' " is 155.
Long Statement,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The length of the statement  "                throw new Win32Exception(Marshal.GetLastWin32Error()' "Failed to VirtualProtect (ElectricFence) at address=" + new IntPtr(virtualAlloc + (sizeInPages + 1) * 4096)); " is 164.
Long Statement,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Free,The length of the statement  "            if (Win32MemoryProtectMethods.VirtualProtect(address' (UIntPtr)4096' Win32MemoryProtectMethods.MemoryProtection.READWRITE' out protect) == " is 138.
Long Statement,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Free,The length of the statement  "                throw new Win32Exception(Marshal.GetLastWin32Error()' "Failed to VirtualProtect (ElectricFence) at address=" + new IntPtr(address)); " is 132.
Long Statement,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Free,The length of the statement  "            if (Win32MemoryProtectMethods.VirtualFree(address' (UIntPtr)dwSize' Win32MemoryProtectMethods.FreeType.MEM_DECOMMIT) == false) " is 126.
Long Statement,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Free,The length of the statement  "                throw new Win32Exception(Marshal.GetLastWin32Error()' "Failed to VirtualFree (ElectricFence) at address=" + new IntPtr(address)); " is 129.
Long Statement,Sparrow.Server.Platform.Win32,Win32MemoryQueryMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32MemoryQueryMethods.cs,GetEncodedFilename,The length of the statement  "                stringLength = Win32MemoryProtectMethods.GetMappedFileName(processHandle' memoryBasicInformation.BaseAddress.ToPointer()' pFilename' 2048); " is 139.
Long Statement,Sparrow.Server.Platform.Win32,Win32MemoryQueryMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32MemoryQueryMethods.cs,AddressWillCauseHardPageFault,The length of the statement  "                if (QueryWorkingSetEx(GetCurrentProcess()' (byte*)pWsInfo' (uint)(sizeof(PPSAPI_WORKING_SET_EX_INFORMATION) * pages)) == false) " is 127.
Long Statement,Sparrow.Server.Platform.Win32,Win32MemoryQueryMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32MemoryQueryMethods.cs,AddressWillCauseHardPageFault,The length of the statement  "                        $"Failed to QueryWorkingSetEx address: {new IntPtr(address).ToInt64()}' with length: {length}. processId = {GetCurrentProcess()}"); " is 131.
Long Statement,Sparrow.Server.Utils,TaskExecutor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\TaskExecutor.cs,CompleteAndReplace,The length of the statement  "            var task2 = Interlocked.Exchange(ref task' new TaskCompletionSource<object>(TaskCreationOptions.RunContinuationsAsynchronously)); " is 129.
Long Statement,Sparrow.Server.Utils,TaskExecutor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\TaskExecutor.cs,CompleteReplaceAndExecute,The length of the statement  "            var task2 = Interlocked.Exchange(ref task' new TaskCompletionSource<object>(TaskCreationOptions.RunContinuationsAsynchronously)); " is 129.
Complex Conditional,Sparrow.Platform.Posix,KernelVirtualFileSystemUtils,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,ReadSwapInformationFromSwapsFile,The conditional expression  "items[0].Equals("Filename") == false ||                      items[1].Equals("Type") == false ||                      items[2].Equals("Size") == false ||                      items[3].Equals("Used") == false ||                      items[4].Equals("Priority") == false"  is complex.
Complex Conditional,Sparrow.Platform.Posix,KernelVirtualFileSystemUtils,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,GetAllDisksFromPartitionsFile,The conditional expression  "items[0].Equals("major") == false ||                      items[1].Equals("minor") == false ||                      items[2].Equals("#blocks") == false ||                      items[3].Equals("name") == false"  is complex.
Complex Conditional,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,FromBase64_Decode,The conditional expression  "lastChar != (Int32)' ' && lastChar != (Int32)'\n' && lastChar != (Int32)'\r' && lastChar != (Int32)'\t'"  is complex.
Complex Conditional,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeDiff,The conditional expression  "o0 != m0 || o1 != m1 || o2 != m2 || o3 != m3"  is complex.
Complex Conditional,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeNew,The conditional expression  "0 != m0 || 0 != m1 || 0 != m2 || 0 != m3"  is complex.
Empty Catch Block,Sparrow.Server.Utils,Runner,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\TaskExecutor.cs,Run,The method has an empty catch block.
Magic Number,Sparrow.Server,ByteStringStorage,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,GetContentHash,The following statement contains a magic number: IntPtr.Size == 4
Magic Number,Sparrow.Server,ByteStringContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,ByteStringContext,The following statement contains a magic number: Debug.Assert((PlatformDetails.Is32Bits ? 24 : 32) == ExternalAlignedSize' "(PlatformDetails.Is32Bits ? 24 : 32) == ExternalAlignedSize");
Magic Number,Sparrow.Server,ByteStringContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,ByteStringContext,The following statement contains a magic number: Debug.Assert((PlatformDetails.Is32Bits ? 24 : 32) == ExternalAlignedSize' "(PlatformDetails.Is32Bits ? 24 : 32) == ExternalAlignedSize");
Magic Number,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,ByteStringContext,The following statement contains a magic number: _externalStringPool = new FastStack<IntPtr>(64);
Magic Number,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,Reset,The following statement contains a magic number: Debug.Assert(_wholeSegments.Count >= 2);
Magic Number,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,Reset,The following statement contains a magic number: index = _wholeSegments.Count - 2;
Magic Number,Sparrow.Server,ByteStringContext<TAllocator>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\ByteString.cs,Reset,The following statement contains a magic number: _wholeSegments.Count == 2
Magic Number,Sparrow.Server,Format,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Format.cs,ToBase64Unpadded,The following statement contains a magic number: string result = new string(' '' 22);
Magic Number,Sparrow.Server,Format,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Format.cs,ToBase64Unpadded,The following statement contains a magic number: int size = Base64.ConvertToBase64ArrayUnpadded(pChars' (byte*)&guid' 0' 16);
Magic Number,Sparrow.Server,Format,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Format.cs,ToBase64Unpadded,The following statement contains a magic number: Debug.Assert(size == 22);
Magic Number,Sparrow.Server,Backwards,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Format.cs,WriteNumber,The following statement contains a magic number: ulong div = value / 10;
Magic Number,Sparrow.Server,Backwards,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Format.cs,WriteNumber,The following statement contains a magic number: ulong v = value - div * 10;
Magic Number,Sparrow.Server,Backwards,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Format.cs,WriteNumber,The following statement contains a magic number: ulong div = value / 10;
Magic Number,Sparrow.Server,Backwards,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Format.cs,WriteNumber,The following statement contains a magic number: ulong v = value - div * 10;
Magic Number,Sparrow.Server,Backwards,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Format.cs,WriteNumber,The following statement contains a magic number: long div = value / 10;
Magic Number,Sparrow.Server,Backwards,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Format.cs,WriteNumber,The following statement contains a magic number: long v = value - div * 10;
Magic Number,Sparrow.Server.Collections,ConcurrentLruSet<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\ConcurrentLruSet.cs,ClearHalf,The following statement contains a magic number: current.Skip(current.Count / 2)
Magic Number,Sparrow.Server.Collections,ConcurrentLruSet<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\ConcurrentLruSet.cs,ClearHalf,The following statement contains a magic number: current.Take(current.Count / 2)
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.cs,ReduceHashToIndex,The following statement contains a magic number: h ^= (uint)fullHash >> 15;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.cs,ReduceHashToIndex,The following statement contains a magic number: h ^= (uint)h >> 7;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,AlignToPowerOfTwo,The following statement contains a magic number: size |= size >> 2;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,AlignToPowerOfTwo,The following statement contains a magic number: size |= size >> 4;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,AlignToPowerOfTwo,The following statement contains a magic number: size |= size >> 8;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,AlignToPowerOfTwo,The following statement contains a magic number: size |= size >> 16;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,ReprobeResizeCheck,The following statement contains a magic number: const int reprobeCheckPeriod = 16 - 1;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,TableIsCrowded,The following statement contains a magic number: return EstimatedSlotsUsed > (len >> 2) * 3;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,TableIsCrowded,The following statement contains a magic number: return EstimatedSlotsUsed > (len >> 2) * 3;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,HelpCopyImpl,The following statement contains a magic number: const int CHUNK_SIZE = 16;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,HelpCopyImpl,The following statement contains a magic number: claimedChunk > (toCopy / (CHUNK_SIZE / 2))
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,ResizeImpl,The following statement contains a magic number: const int MAX_SIZE = 1 << 30;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,ResizeImpl,The following statement contains a magic number: const int MAX_CHURN_SIZE = 1 << 15;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,ResizeImpl,The following statement contains a magic number: int kBs4 = (((newsz << 1) + 4) << 3/*word to bytes*/) >> 12/*kBs4*/;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,ResizeImpl,The following statement contains a magic number: int kBs4 = (((newsz << 1) + 4) << 3/*word to bytes*/) >> 12/*kBs4*/;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,ResizeImpl,The following statement contains a magic number: int kBs4 = (((newsz << 1) + 4) << 3/*word to bytes*/) >> 12/*kBs4*/;
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,ResizeImpl,The following statement contains a magic number: SpinWait.SpinUntil(() => this._newTable != null' 8 * kBs4);
Magic Number,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,ResizeImpl,The following statement contains a magic number: kBs4 > 0 && Interlocked.Increment(ref _resizers) >= 2
Magic Number,Sparrow.Server.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Extensions\RavenDateTimeExtensions.cs,GetDefaultRavenFormat,The following statement contains a magic number: int size = 27 + (isUtc ? 1 : 0);
Magic Number,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,CTL_CODE,The following statement contains a magic number: return ((DeviceType << 16) | (Access << 14) | (Function << 2) | Method);
Magic Number,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,CTL_CODE,The following statement contains a magic number: return ((DeviceType << 16) | (Access << 14) | (Function << 2) | Method);
Magic Number,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,CTL_CODE,The following statement contains a magic number: return ((DeviceType << 16) | (Access << 14) | (Function << 2) | Method);
Magic Number,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,HasNominalMediaRotationRate,The following statement contains a magic number: id_query.data = new ushort[256];
Magic Number,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,HasNominalMediaRotationRate,The following statement contains a magic number: id_query.header.DataTransferLength = (uint)(id_query.data.Length * 2);
Magic Number,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,HasNominalMediaRotationRate,The following statement contains a magic number: id_query.header.TimeOutValue = 3;
Magic Number,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,HasNominalMediaRotationRate,The following statement contains a magic number: id_query.header.PreviousTaskFile = new byte[8];
Magic Number,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,HasNominalMediaRotationRate,The following statement contains a magic number: id_query.header.CurrentTaskFile = new byte[8];
Magic Number,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,HasNominalMediaRotationRate,The following statement contains a magic number: id_query.header.CurrentTaskFile[6] = 0xec;
Magic Number,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,HasNominalMediaRotationRate,The following statement contains a magic number: const int kNominalMediaRotRateWordIndex = 217;
Magic Number,Sparrow.Server.LowMemory,CheckPageFileOnHdd,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\CheckPageFileOnHdd.cs,GetErrorMessage,The following statement contains a magic number: var message = new StringBuilder(255);
Magic Number,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,IsEarlyOutOfMemoryInternal,The following statement contains a magic number: return Size.Min(                          _lowMemoryCommitLimitInMb'                          // needs to be bigger than the MaxFreeCommittedMemoryToKeep                          Size.Max(currentValue / 20' minFreeToKeep * 1.5));
Magic Number,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,IsEarlyOutOfMemoryInternal,The following statement contains a magic number: return Size.Min(                          _lowMemoryCommitLimitInMb'                          // needs to be bigger than the MaxFreeCommittedMemoryToKeep                          Size.Max(currentValue / 20' minFreeToKeep * 1.5));
Magic Number,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,GetRssMemoryUsage,The following statement contains a magic number: return vmrss * 1024;
Magic Number,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,GetMemoryInfoMacOs,The following statement contains a magic number: macSyscall.sysctl(mib' 2' &physicalMemory' &len' null' UIntPtr.Zero) != 0
Magic Number,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,GetMemoryInfoMacOs,The following statement contains a magic number: macSyscall.sysctl(mib' 2' &swapu' &len' null' UIntPtr.Zero) != 0
Magic Number,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,GetSharedCleanInBytes,The following statement contains a magic number: allocated < totalMapped / 2
Magic Number,Sparrow.LowMemory,MemoryInformation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\LowMemory\MemoryInformation.cs,SetMemoryRecords,The following statement contains a magic number: MemByTime.TryPeek(out var existing) &&                     (now - existing.Item2) > TimeSpan.FromMinutes(5)
Magic Number,Sparrow.Server.Meters,GeneralWaitPerformanceMetrics,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Meters\GeneralWaitPerformanceMetrics.cs,ToJson,The following statement contains a magic number: var recentStats = new PerformanceMetricsRecentStats                  {                      Start = meter.Start.GetDefaultRavenFormat(isUtc: true)'                      Counter = meter.Counter'                      Duration = Math.Round(meter.Duration.TotalMilliseconds' 2)'                      Type = Type                  };
Magic Number,Sparrow.Server.Meters,IoMetrics,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Meters\IoMetrics.cs,FileClosed,The following statement contains a magic number: _closedFiles.Count > 16
Magic Number,Sparrow.Server.Meters,PerformanceMetrics,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Meters\PerformanceMetrics.cs,AddHistoryStats,The following statement contains a magic number: var historyStats = new PerformanceMetricsHistoryStats                  {                      Start = meter.TotalTimeStart.GetDefaultRavenFormat(isUtc: true)'                      End = meter.TotalTimeEnd.GetDefaultRavenFormat(isUtc: true)'                      Counter = meter.TotalCounter'                      Duration = Math.Round((meter.TotalTimeEnd - meter.TotalTimeStart).TotalMilliseconds' 2)'                      ActiveDuration = Math.Round(meter.TotalTime.TotalMilliseconds' 2)'                      MaxDuration = Math.Round(meter.MaxTime.TotalMilliseconds' 2)'                      MinDuration = Math.Round(meter.MinTime.TotalMilliseconds' 2)'                      Type = Type                  };
Magic Number,Sparrow.Server.Meters,PerformanceMetrics,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Meters\PerformanceMetrics.cs,AddHistoryStats,The following statement contains a magic number: var historyStats = new PerformanceMetricsHistoryStats                  {                      Start = meter.TotalTimeStart.GetDefaultRavenFormat(isUtc: true)'                      End = meter.TotalTimeEnd.GetDefaultRavenFormat(isUtc: true)'                      Counter = meter.TotalCounter'                      Duration = Math.Round((meter.TotalTimeEnd - meter.TotalTimeStart).TotalMilliseconds' 2)'                      ActiveDuration = Math.Round(meter.TotalTime.TotalMilliseconds' 2)'                      MaxDuration = Math.Round(meter.MaxTime.TotalMilliseconds' 2)'                      MinDuration = Math.Round(meter.MinTime.TotalMilliseconds' 2)'                      Type = Type                  };
Magic Number,Sparrow.Server.Meters,PerformanceMetrics,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Meters\PerformanceMetrics.cs,AddHistoryStats,The following statement contains a magic number: var historyStats = new PerformanceMetricsHistoryStats                  {                      Start = meter.TotalTimeStart.GetDefaultRavenFormat(isUtc: true)'                      End = meter.TotalTimeEnd.GetDefaultRavenFormat(isUtc: true)'                      Counter = meter.TotalCounter'                      Duration = Math.Round((meter.TotalTimeEnd - meter.TotalTimeStart).TotalMilliseconds' 2)'                      ActiveDuration = Math.Round(meter.TotalTime.TotalMilliseconds' 2)'                      MaxDuration = Math.Round(meter.MaxTime.TotalMilliseconds' 2)'                      MinDuration = Math.Round(meter.MinTime.TotalMilliseconds' 2)'                      Type = Type                  };
Magic Number,Sparrow.Server.Meters,PerformanceMetrics,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Meters\PerformanceMetrics.cs,AddHistoryStats,The following statement contains a magic number: var historyStats = new PerformanceMetricsHistoryStats                  {                      Start = meter.TotalTimeStart.GetDefaultRavenFormat(isUtc: true)'                      End = meter.TotalTimeEnd.GetDefaultRavenFormat(isUtc: true)'                      Counter = meter.TotalCounter'                      Duration = Math.Round((meter.TotalTimeEnd - meter.TotalTimeStart).TotalMilliseconds' 2)'                      ActiveDuration = Math.Round(meter.TotalTime.TotalMilliseconds' 2)'                      MaxDuration = Math.Round(meter.MaxTime.TotalMilliseconds' 2)'                      MinDuration = Math.Round(meter.MinTime.TotalMilliseconds' 2)'                      Type = Type                  };
Magic Number,Sparrow.Server.Meters,TransactionPerformanceMetrics,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Meters\TransactionPerformanceMetrics.cs,MarkInternalWindowEnd,The following statement contains a magic number: Math.Abs(Math.Round((_lastState.End - _lastState.Start).TotalMilliseconds' 2)) < double.Epsilon
Magic Number,Sparrow.Server.Meters,TransactionPerformanceMetrics,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Meters\TransactionPerformanceMetrics.cs,ToJson,The following statement contains a magic number: var recentStats = new TransactionPerformanceMetricsRecentStats                  {                      Start = meter.Start.GetDefaultRavenFormat(isUtc: true)'                      Counter = meter.Counter'                      CommandsCounter = meter.CommandsCounter'                      Duration = Math.Round(meter.Duration.TotalMilliseconds' 2)'                      InternalWindows = new List<InternalWindowDuration>()'                      Type = Type                  };
Magic Number,Sparrow.Server.Meters,InternalWindowDuration,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Meters\TransactionPerformanceMetrics.cs,ToJson,The following statement contains a magic number: return new DynamicJsonValue                  {                      [nameof(Start)] = Start.GetDefaultRavenFormat(isUtc: true)'                      [nameof(End)] = End.GetDefaultRavenFormat(isUtc: true)'                      [nameof(Duration)] = Math.Round(Duration.TotalMilliseconds' 2)                  };
Magic Number,Sparrow.Server.Platform,PalHelper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\PalHelper.cs,GetNativeErrorString,The following statement contains a magic number: const int maxNativeErrorStr = 256;
Magic Number,Sparrow.Server.Platform,NativeMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\PlatformSpecific.cs,Allocate4KbAlignedMemory,The following statement contains a magic number: var rc = Syscall.posix_memalign(&ptr' (IntPtr)4096' (IntPtr)size);
Magic Number,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The following statement contains a magic number: var remaining = size % 4096;
Magic Number,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The following statement contains a magic number: var sizeInPages = (size / 4096) + (remaining == 0 ? 0 : 1);
Magic Number,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The following statement contains a magic number: var allocatedSize = ((sizeInPages + 2) * 4096);
Magic Number,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The following statement contains a magic number: var allocatedSize = ((sizeInPages + 2) * 4096);
Magic Number,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The following statement contains a magic number: Syscall.mprotect((IntPtr)virtualAlloc' new IntPtr(4096)' ProtFlag.PROT_NONE) != 0
Magic Number,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The following statement contains a magic number: Syscall.mprotect((IntPtr)(virtualAlloc + 4096 + (sizeInPages*4096))' new IntPtr(4096)' ProtFlag.PROT_NONE) != 0
Magic Number,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The following statement contains a magic number: Syscall.mprotect((IntPtr)(virtualAlloc + 4096 + (sizeInPages*4096))' new IntPtr(4096)' ProtFlag.PROT_NONE) != 0
Magic Number,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The following statement contains a magic number: Syscall.mprotect((IntPtr)(virtualAlloc + 4096 + (sizeInPages*4096))' new IntPtr(4096)' ProtFlag.PROT_NONE) != 0
Magic Number,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The following statement contains a magic number: var firstWritablePage = virtualAlloc + 4096;
Magic Number,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The following statement contains a magic number: Memory.Set(firstWritablePage' 0xED' 4096 * sizeInPages);
Magic Number,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Allocate,The following statement contains a magic number: return firstWritablePage + (4096 - remaining);
Magic Number,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Free,The following statement contains a magic number: var remaining = (int)((long)p % 4096);
Magic Number,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Free,The following statement contains a magic number: var address = firstWritablePage - 4096;
Magic Number,Sparrow.Server.Platform.Posix,PosixElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixElectricFencedMemory.cs,Free,The following statement contains a magic number: Syscall.mprotect((IntPtr)address' new IntPtr(4096)' ProtFlag.PROT_READ) != 0
Magic Number,Sparrow.Server.Platform.Posix,PosixMemoryQueryMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixMemoryQueryMethods.cs,WillCauseHardPageFault,The following statement contains a magic number: var p = stackalloc IntPtr[2];
Magic Number,Sparrow.Server.Platform.Posix,PosixMemoryQueryMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\PosixMemoryQueryMethods.cs,WillCauseHardPageFault,The following statement contains a magic number: vecSize > 4
Magic Number,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,PwriteOrThrow,The following statement contains a magic number: Thread.Sleep(10 * ((cifsRetries + 1) ^ 3));
Magic Number,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,PwriteOrThrow,The following statement contains a magic number: Thread.Sleep(10 * ((cifsRetries + 1) ^ 3));
Magic Number,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,PwriteOrThrow,The following statement contains a magic number: cifsRetries < 3
Magic Number,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,AllocateFileSpace,The following statement contains a magic number: int retries = 1024;
Magic Number,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,SyncDirectory,The following statement contains a magic number: var buffSize = 64;
Magic Number,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,SyncDirectory,The following statement contains a magic number: buffSize = 8192;
Magic Number,Sparrow.Platform.Posix,KernelVirtualFileSystemUtils,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,ReadSwapInformationFromSwapsFile,The following statement contains a magic number: const int numberOfRow = 5;
Magic Number,Sparrow.Platform.Posix,KernelVirtualFileSystemUtils,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,ReadSwapInformationFromSwapsFile,The following statement contains a magic number: items[0].Equals("Filename") == false ||                      items[1].Equals("Type") == false ||                      items[2].Equals("Size") == false ||                      items[3].Equals("Used") == false ||                      items[4].Equals("Priority") == false
Magic Number,Sparrow.Platform.Posix,KernelVirtualFileSystemUtils,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,ReadSwapInformationFromSwapsFile,The following statement contains a magic number: items[0].Equals("Filename") == false ||                      items[1].Equals("Type") == false ||                      items[2].Equals("Size") == false ||                      items[3].Equals("Used") == false ||                      items[4].Equals("Priority") == false
Magic Number,Sparrow.Platform.Posix,KernelVirtualFileSystemUtils,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,ReadSwapInformationFromSwapsFile,The following statement contains a magic number: items[0].Equals("Filename") == false ||                      items[1].Equals("Type") == false ||                      items[2].Equals("Size") == false ||                      items[3].Equals("Used") == false ||                      items[4].Equals("Priority") == false
Magic Number,Sparrow.Platform.Posix,KernelVirtualFileSystemUtils,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,GetAllDisksFromPartitionsFile,The following statement contains a magic number: items.Length < 5
Magic Number,Sparrow.Platform.Posix,KernelVirtualFileSystemUtils,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,GetAllDisksFromPartitionsFile,The following statement contains a magic number: items[0].Equals("major") == false ||                      items[1].Equals("minor") == false ||                      items[2].Equals("#blocks") == false ||                      items[3].Equals("name") == false
Magic Number,Sparrow.Platform.Posix,KernelVirtualFileSystemUtils,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,GetAllDisksFromPartitionsFile,The following statement contains a magic number: items[0].Equals("major") == false ||                      items[1].Equals("minor") == false ||                      items[2].Equals("#blocks") == false ||                      items[3].Equals("name") == false
Magic Number,Sparrow.Platform.Posix,KernelVirtualFileSystemUtils,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,GetAllDisksFromPartitionsFile,The following statement contains a magic number: items.Length % 4 != 0
Magic Number,Sparrow.Platform.Posix,BufferedPosixKeyValueOutputValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,BufferedPosixKeyValueOutputValueReader,The following statement contains a magic number: _buffer = ArrayPool<byte>.Shared.Rent(8 * 1024);
Magic Number,Sparrow.Platform.Posix,BufferedPosixKeyValueOutputValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,BufferedPosixKeyValueOutputValueReader,The following statement contains a magic number: _buffer = ArrayPool<byte>.Shared.Rent(8 * 1024);
Magic Number,Sparrow.Platform.Posix,BufferedPosixKeyValueOutputValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\KernelVirtualFileSystemUtils.cs,ExtractNumericValueFromKeyValuePairsFormattedFile,The following statement contains a magic number: value *= 10;
Magic Number,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,CalculateMemUsageFromSmaps,The following statement contains a magic number: var nextBuffer = (_currentBuffer + 1) % 2;
Magic Number,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,CalculateMemUsageFromSmaps,The following statement contains a magic number: searchedBuffer = (searchedBuffer + 1) % 2;
Magic Number,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,CalculateMemUsageFromSmaps,The following statement contains a magic number: searchedBuffer = (_currentBuffer + 1) % 2;
Magic Number,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,CalculateMemUsageFromSmaps,The following statement contains a magic number: multiplier *= 10;
Magic Number,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,CalculateMemUsageFromSmaps,The following statement contains a magic number: resultLong *= 1024;
Magic Number,Sparrow.Platform.Posix,SmapsReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\SmapsReader.cs,CalculateMemUsageFromSmaps,The following statement contains a magic number: _currentBuffer = (_currentBuffer + 1) % 2;
Magic Number,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The following statement contains a magic number: var remaining = size % 4096;
Magic Number,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The following statement contains a magic number: var sizeInPages = (size / 4096) + (remaining == 0 ? 0 : 1);
Magic Number,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The following statement contains a magic number: var allocatedSize = ((sizeInPages + 2) * 4096);
Magic Number,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The following statement contains a magic number: var allocatedSize = ((sizeInPages + 2) * 4096);
Magic Number,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The following statement contains a magic number: Win32MemoryProtectMethods.VirtualProtect(virtualAlloc' (UIntPtr)(4096)' Win32MemoryProtectMethods.MemoryProtection.NOACCESS'                      out protect) == false
Magic Number,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The following statement contains a magic number: throw new Win32Exception(Marshal.GetLastWin32Error()' "Failed to VirtualProtect (ElectricFence) at address=" + new IntPtr(virtualAlloc + (sizeInPages + 1) * 4096));
Magic Number,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The following statement contains a magic number: Win32MemoryProtectMethods.VirtualProtect(virtualAlloc + (sizeInPages + 1) * 4096' (UIntPtr)(4096)' Win32MemoryProtectMethods.MemoryProtection.NOACCESS'                      out protect) == false
Magic Number,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The following statement contains a magic number: Win32MemoryProtectMethods.VirtualProtect(virtualAlloc + (sizeInPages + 1) * 4096' (UIntPtr)(4096)' Win32MemoryProtectMethods.MemoryProtection.NOACCESS'                      out protect) == false
Magic Number,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The following statement contains a magic number: var firstWritablePage = virtualAlloc + 4096;
Magic Number,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The following statement contains a magic number: Memory.Set(firstWritablePage' 0xED' 4096 * sizeInPages);
Magic Number,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Allocate,The following statement contains a magic number: return firstWritablePage + (4096 - remaining);
Magic Number,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Free,The following statement contains a magic number: var remaining = (int)((long)p % 4096);
Magic Number,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Free,The following statement contains a magic number: var address = firstWritablePage - 4096;
Magic Number,Sparrow.Server.Platform.Win32,Win32ElectricFencedMemory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32ElectricFencedMemory.cs,Free,The following statement contains a magic number: Win32MemoryProtectMethods.VirtualProtect(address' (UIntPtr)4096' Win32MemoryProtectMethods.MemoryProtection.READWRITE' out protect) ==                  false
Magic Number,Sparrow.Server.Platform.Win32,Win32MemoryQueryMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32MemoryQueryMethods.cs,GetEncodedFilename,The following statement contains a magic number: var memData = BuffersPool.Allocate(2048);
Magic Number,Sparrow.Server.Platform.Win32,Win32MemoryQueryMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32MemoryQueryMethods.cs,GetEncodedFilename,The following statement contains a magic number: stringLength = Win32MemoryProtectMethods.GetMappedFileName(processHandle' memoryBasicInformation.BaseAddress.ToPointer()' pFilename' 2048);
Magic Number,Sparrow.Server.Platform.Win32,Win32MemoryQueryMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32MemoryQueryMethods.cs,AddressWillCauseHardPageFault,The following statement contains a magic number: var p = stackalloc PPSAPI_WORKING_SET_EX_INFORMATION[2];
Magic Number,Sparrow.Server.Platform.Win32,Win32MemoryQueryMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Win32\Win32MemoryQueryMethods.cs,AddressWillCauseHardPageFault,The following statement contains a magic number: pages > 2
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,FromBase64_ComputeResultLength,The following statement contains a magic number: padding = 2;
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,FromBase64_ComputeResultLength,The following statement contains a magic number: return (usefulInputLength / 4) * 3 + padding;
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,FromBase64_ComputeResultLength,The following statement contains a magic number: return (usefulInputLength / 4) * 3 + padding;
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,FromBase64_Decode,The following statement contains a magic number: currBlockCodes = (currBlockCodes << 6) | currCode;
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,FromBase64_Decode,The following statement contains a magic number: (Int32)(endDestPtr - destPtr) < 3
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,FromBase64_Decode,The following statement contains a magic number: *(destPtr) = (Byte)(currBlockCodes >> 16);
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,FromBase64_Decode,The following statement contains a magic number: *(destPtr + 1) = (Byte)(currBlockCodes >> 8);
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,FromBase64_Decode,The following statement contains a magic number: *(destPtr + 2) = (Byte)(currBlockCodes);
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,FromBase64_Decode,The following statement contains a magic number: destPtr += 3;
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,FromBase64_Decode,The following statement contains a magic number: currBlockCodes <<= 6;
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,FromBase64_Decode,The following statement contains a magic number: *(destPtr++) = (Byte)(currBlockCodes >> 16);
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,FromBase64_Decode,The following statement contains a magic number: *(destPtr++) = (Byte)(currBlockCodes >> 8);
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,CalculateAndValidateOutputLength,The following statement contains a magic number: long outlen = ((long)inputLength) / 3 * 4;
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,CalculateAndValidateOutputLength,The following statement contains a magic number: long outlen = ((long)inputLength) / 3 * 4;
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,CalculateAndValidateOutputLength,The following statement contains a magic number: outlen += ((inputLength % 3) != 0) ? 4 : 0;
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,CalculateAndValidateOutputLength,The following statement contains a magic number: outlen += ((inputLength % 3) != 0) ? 4 : 0;
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: int lengthmod3 = length % 3;
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: outChars[j] = base64[(inData[i] & 0xfc) >> 2];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: outChars[j + 2] = base64[((inData[i + 1] & 0x0f) << 2) | ((inData[i + 2] & 0xc0) >> 6)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: outChars[j + 2] = base64[((inData[i + 1] & 0x0f) << 2) | ((inData[i + 2] & 0xc0) >> 6)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: outChars[j + 2] = base64[((inData[i + 1] & 0x0f) << 2) | ((inData[i + 2] & 0xc0) >> 6)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: outChars[j + 2] = base64[((inData[i + 1] & 0x0f) << 2) | ((inData[i + 2] & 0xc0) >> 6)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: outChars[j + 3] = base64[(inData[i + 2] & 0x3f)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: outChars[j + 3] = base64[(inData[i + 2] & 0x3f)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: j += 4;
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: int lengthmod3 = length % 3;
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: outChars[j] = base64[(inData[i] & 0xfc) >> 2];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: outChars[j + 2] = base64[((inData[i + 1] & 0x0f) << 2) | ((inData[i + 2] & 0xc0) >> 6)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: outChars[j + 2] = base64[((inData[i + 1] & 0x0f) << 2) | ((inData[i + 2] & 0xc0) >> 6)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: outChars[j + 2] = base64[((inData[i + 1] & 0x0f) << 2) | ((inData[i + 2] & 0xc0) >> 6)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: outChars[j + 2] = base64[((inData[i + 1] & 0x0f) << 2) | ((inData[i + 2] & 0xc0) >> 6)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: outChars[j + 3] = base64[(inData[i + 2] & 0x3f)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: outChars[j + 3] = base64[(inData[i + 2] & 0x3f)];
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: j += 4;
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          j += 3;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          j += 2;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          j += 3;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          j += 2;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          j += 3;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          j += 2;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          j += 3;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          j += 2;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          j += 3;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          j += 2;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          j += 3;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          j += 2;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          j += 3;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          j += 2;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          j += 3;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          j += 2;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          j += 3;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          j += 2;                          break;                  }
Magic Number,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following statement contains a magic number: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          j += 3;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          j += 2;                          break;                  }
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeDiff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeDiff,The following statement contains a magic number: long m2 = modifiedPtr[2];
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeDiff,The following statement contains a magic number: long o2 = originalPtr[2];
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeDiff,The following statement contains a magic number: long m3 = modifiedPtr[3];
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeDiff,The following statement contains a magic number: long o3 = originalPtr[3];
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeDiff,The following statement contains a magic number: start = i + 4;
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeDiff,The following statement contains a magic number: OutputSize + countCheck + sizeof(long) * 2 > size
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeDiff,The following statement contains a magic number: start = i + 4;
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeDiff,The following statement contains a magic number: OutputSize + (allZeros ? 0 : length) + sizeof(long) * 2 > size
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeNew,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeNew,The following statement contains a magic number: long m2 = modifiedPtr[2];
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeNew,The following statement contains a magic number: long m3 = modifiedPtr[3];
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeNew,The following statement contains a magic number: start = i + 4;
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeNew,The following statement contains a magic number: OutputSize + countCheck + sizeof(long) * 2 > size
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeNew,The following statement contains a magic number: start = i + 4;
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,ComputeNew,The following statement contains a magic number: OutputSize + (allZeros ? 0 : length) + sizeof(long) * 2 > size
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,WriteDiffNonZeroes,The following statement contains a magic number: outputSize += sizeof(long) * 2;
Magic Number,Sparrow.Server.Utils,DiffPages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,WriteDiffAllZeroes,The following statement contains a magic number: OutputSize += sizeof(long) * 2;
Magic Number,Sparrow.Server.Utils,DiffApplier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,Apply,The following statement contains a magic number: AssertInvalidDiffSize(pos' sizeof(long) * 2);
Magic Number,Sparrow.Server.Utils,DiffApplier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,Apply,The following statement contains a magic number: pos + sizeof(long) * 2 > diffSize
Magic Number,Sparrow.Server.Utils,DiffApplier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiffPages.cs,Apply,The following statement contains a magic number: pos += sizeof(long) * 2;
Magic Number,Sparrow.Server.Utils,DiskSpaceChecker,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiskSpaceChecker.cs,GetWindowsRealPathByHandle,The following statement contains a magic number: GetPath(256' out var realPath) == false
Magic Number,Sparrow.Server.Utils,DiskSpaceChecker,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiskSpaceChecker.cs,GetWindowsRealPathByHandle,The following statement contains a magic number: realPath = "\\" + realPath.Substring(7);
Magic Number,Sparrow.Server.Utils,DiskSpaceChecker,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiskSpaceChecker.cs,GetWindowsRealPathByHandle,The following statement contains a magic number: realPath.Length >= 8 && realPath.StartsWith("\\\\?\\UNC\\"' StringComparison.OrdinalIgnoreCase)
Magic Number,Sparrow.Server.Utils,DiskSpaceChecker,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiskSpaceChecker.cs,GetWindowsRealPathByHandle,The following statement contains a magic number: realPath = realPath.Substring(4);
Magic Number,Sparrow.Server.Utils,DiskSpaceChecker,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\DiskSpaceChecker.cs,GetWindowsRealPathByHandle,The following statement contains a magic number: realPath.Length >= 4 && realPath.StartsWith("\\\\?\\"' StringComparison.OrdinalIgnoreCase)
Magic Number,Sparrow.Server.Utils,FileHelper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\FileHelper.cs,CalculateHash,The following statement contains a magic number: var readBuffer = new byte[4096];
Magic Number,Sparrow.Server.Utils,Runner,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\TaskExecutor.cs,Run,The following statement contains a magic number: tries < 5
Missing Default,Sparrow.Server.Collections.LockFree,DictionaryImpl<TKey;TKeyStore;TValue>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Collections\LockFree\DictionaryImpl.Enumerators.cs,PutIfMatch,The following switch statement is missing a default case: switch (match)                  {                      case ValueMatch.Any:                          if (newVal == entryValue)                          {                              // Do not update!                              goto FAILED;                          }                          break;                        case ValueMatch.NullOrDead:                          if (entryValueNullOrDead)                          {                              break;                          }                            oldVal = entryValue;                          goto FAILED;                        case ValueMatch.NotNullOrDead:                          if (entryValueNullOrDead)                          {                              goto FAILED;                          }                          break;                      case ValueMatch.OldValue:                          Debug.Assert(oldVal != null);                          if (!oldVal.Equals(entryValue))                          {                              oldVal = entryValue;                              goto FAILED;                          }                          break;                  }
Missing Default,Sparrow.Server.Platform.Posix,Syscall,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Platform\Posix\Syscall.cs,AllocateFileSpace,The following switch statement is missing a default case: switch (result)                  {                      case (int)Errno.EINVAL:                      case (int)Errno.EFBIG: // can occure on >4GB allocation on fs such as ntfs-3g' W95 FAT32' etc.                          // fallocate is not supported' we'll use lseek instead                          usingWrite = true;                          byte b = 0;                          PwriteOrThrow(fd' &b' 1L' size - 1' file' "pwrite in order to fallocate where fallocate is not supported");                                                  return 0;                                          }
Missing Default,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64Array,The following switch statement is missing a default case: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          outChars[j + 2] = base64[64]; //Pad                          outChars[j + 3] = base64[64]; //Pad                          j += 4;                          break;                  }
Missing Default,Sparrow.Server.Utils,Base64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow.Server\Utils\Base64.cs,ConvertToBase64ArrayUnpadded,The following switch statement is missing a default case: switch (lengthmod3)                  {                      case 2: //One character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[((inData[i] & 0x03) << 4) | ((inData[i + 1] & 0xf0) >> 4)];                          outChars[j + 2] = base64[(inData[i + 1] & 0x0f) << 2];                          j += 3;                          break;                      case 1: // Two character padding needed                          outChars[j] = base64[(inData[i] & 0xfc) >> 2];                          outChars[j + 1] = base64[(inData[i] & 0x03) << 4];                          j += 2;                          break;                  }
