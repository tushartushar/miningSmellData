Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,Execute,The length of the parameter numberOfAdditionalMapReduceIndexes is 34.
Long Statement,Indexing.Benchmark,IndexingBenchmark,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\IndexingBenchmark.cs,Execute,The length of the statement  "                Console.WriteLine($"It took {sw.Elapsed} to return a non stale result. {test.NumberOfRelevantDocs / sw.Elapsed.TotalSeconds:#'#} docs / sec indexed"); " is 150.
Long Statement,Indexing.Benchmark,Orders_Totals,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\MapIndexesBench.cs,CreateIndexDefinition,The length of the statement  "                    //select new { order.Employee'  order.Company' Total = order.Lines.Sum(l=>(l.Quantity * l.PricePerUnit) *  ( 1 - l.Discount)) }" }' " is 131.
Long Statement,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,Execute,The length of the statement  "            Console.WriteLine($"Indexing stopped. Number of indexes in the database: {_store.Maintenance.Send(new GetStatisticsOperation()).Indexes.Length}"); " is 146.
Long Statement,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,Execute,The length of the statement  "            Console.WriteLine($"Indexing stopped. Number of indexes in the database: {_store.Maintenance.Send(new GetStatisticsOperation()).Indexes.Length}"); " is 146.
Long Statement,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,Execute,The length of the statement  "            Console.WriteLine($"Putting additional indexes: {numberOfAdditionaMapIndexes} map and {numberOfAdditionalMapReduceIndexes} map-reduce"); " is 136.
Long Statement,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,Execute,The length of the statement  "            Console.WriteLine($"Indexing is working again. Number of indexes in the database: {_store.Maintenance.Send(new GetStatisticsOperation()).Indexes.Length}. Waiting for non stale results"); " is 186.
Magic Number,Indexing.Benchmark,IndexingBenchmark,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\IndexingBenchmark.cs,Execute,The following statement contains a magic number: var stalenessTimeout = TimeSpan.FromMinutes(15);
Magic Number,Indexing.Benchmark,IndexingBenchmark,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\IndexingBenchmark.cs,Execute,The following statement contains a magic number: do                      {                          var queryCommand = new QueryCommand((InMemoryDocumentSessionOperations)session' new IndexQuery                          {                              Query = $"FROM INDEX '{test.Index.IndexName}' LIMIT 0 OFFSET 0"                          });                            requestExecuter.Execute(queryCommand' context);                            result = queryCommand.Result;                            Thread.Sleep(100);                      } while (result.IsStale || sw.Elapsed > stalenessTimeout);
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,Program,The following statement contains a magic number: _store.Maintenance.Server.Send(new GetDatabaseNamesOperation(0' 100)).Contains(DbName)
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,Execute,The following statement contains a magic number: _store.Maintenance.Send(new GetIndexNamesOperation(0' 1024))
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,Execute,The following statement contains a magic number: _store.Maintenance.Send(new GetIndexNamesOperation(0' 1024))
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,Execute,The following statement contains a magic number: var numberOfAdditionaMapIndexes = 10;
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,Execute,The following statement contains a magic number: var numberOfAdditionalMapReduceIndexes = 5;
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,Execute,The following statement contains a magic number: i < numberOfAdditionaMapIndexes / 2
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,WaitForNonStaleIndexes,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,InsertDocs,The following statement contains a magic number: var order = new Order                          {                              Company = $"companies/{_random.Next(1' NumberOfCompanyDocuments)}"'                              Employee = $"employees/{_random.Next(1' NumberOfEmployeeDocuments)}"'                              Lines = CreateOrderLines(_random.Next(0' 15))'                              Freight = _random.Next()'                              OrderedAt = DateTime.Now'                              RequireAt = DateTime.Now.AddDays(_random.Next(1' 30))'                              ShippedAt = DateTime.Now'                              ShipTo = new Address                              {                                  Country = $"Country{_random.Next(0' 10)}"'                                  City = $"City{_random.Next(0' 100)}"'                                  Street = $"Street{_random.Next(0' 1000)}"'                                  ZipCode = _random.Next(0' 9999)                              }'                              ShipVia = $"shippers/{_random.Next(0' 10)}"                          };
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,InsertDocs,The following statement contains a magic number: var order = new Order                          {                              Company = $"companies/{_random.Next(1' NumberOfCompanyDocuments)}"'                              Employee = $"employees/{_random.Next(1' NumberOfEmployeeDocuments)}"'                              Lines = CreateOrderLines(_random.Next(0' 15))'                              Freight = _random.Next()'                              OrderedAt = DateTime.Now'                              RequireAt = DateTime.Now.AddDays(_random.Next(1' 30))'                              ShippedAt = DateTime.Now'                              ShipTo = new Address                              {                                  Country = $"Country{_random.Next(0' 10)}"'                                  City = $"City{_random.Next(0' 100)}"'                                  Street = $"Street{_random.Next(0' 1000)}"'                                  ZipCode = _random.Next(0' 9999)                              }'                              ShipVia = $"shippers/{_random.Next(0' 10)}"                          };
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,InsertDocs,The following statement contains a magic number: var order = new Order                          {                              Company = $"companies/{_random.Next(1' NumberOfCompanyDocuments)}"'                              Employee = $"employees/{_random.Next(1' NumberOfEmployeeDocuments)}"'                              Lines = CreateOrderLines(_random.Next(0' 15))'                              Freight = _random.Next()'                              OrderedAt = DateTime.Now'                              RequireAt = DateTime.Now.AddDays(_random.Next(1' 30))'                              ShippedAt = DateTime.Now'                              ShipTo = new Address                              {                                  Country = $"Country{_random.Next(0' 10)}"'                                  City = $"City{_random.Next(0' 100)}"'                                  Street = $"Street{_random.Next(0' 1000)}"'                                  ZipCode = _random.Next(0' 9999)                              }'                              ShipVia = $"shippers/{_random.Next(0' 10)}"                          };
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,InsertDocs,The following statement contains a magic number: var order = new Order                          {                              Company = $"companies/{_random.Next(1' NumberOfCompanyDocuments)}"'                              Employee = $"employees/{_random.Next(1' NumberOfEmployeeDocuments)}"'                              Lines = CreateOrderLines(_random.Next(0' 15))'                              Freight = _random.Next()'                              OrderedAt = DateTime.Now'                              RequireAt = DateTime.Now.AddDays(_random.Next(1' 30))'                              ShippedAt = DateTime.Now'                              ShipTo = new Address                              {                                  Country = $"Country{_random.Next(0' 10)}"'                                  City = $"City{_random.Next(0' 100)}"'                                  Street = $"Street{_random.Next(0' 1000)}"'                                  ZipCode = _random.Next(0' 9999)                              }'                              ShipVia = $"shippers/{_random.Next(0' 10)}"                          };
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,InsertDocs,The following statement contains a magic number: var order = new Order                          {                              Company = $"companies/{_random.Next(1' NumberOfCompanyDocuments)}"'                              Employee = $"employees/{_random.Next(1' NumberOfEmployeeDocuments)}"'                              Lines = CreateOrderLines(_random.Next(0' 15))'                              Freight = _random.Next()'                              OrderedAt = DateTime.Now'                              RequireAt = DateTime.Now.AddDays(_random.Next(1' 30))'                              ShippedAt = DateTime.Now'                              ShipTo = new Address                              {                                  Country = $"Country{_random.Next(0' 10)}"'                                  City = $"City{_random.Next(0' 100)}"'                                  Street = $"Street{_random.Next(0' 1000)}"'                                  ZipCode = _random.Next(0' 9999)                              }'                              ShipVia = $"shippers/{_random.Next(0' 10)}"                          };
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,InsertDocs,The following statement contains a magic number: var order = new Order                          {                              Company = $"companies/{_random.Next(1' NumberOfCompanyDocuments)}"'                              Employee = $"employees/{_random.Next(1' NumberOfEmployeeDocuments)}"'                              Lines = CreateOrderLines(_random.Next(0' 15))'                              Freight = _random.Next()'                              OrderedAt = DateTime.Now'                              RequireAt = DateTime.Now.AddDays(_random.Next(1' 30))'                              ShippedAt = DateTime.Now'                              ShipTo = new Address                              {                                  Country = $"Country{_random.Next(0' 10)}"'                                  City = $"City{_random.Next(0' 100)}"'                                  Street = $"Street{_random.Next(0' 1000)}"'                                  ZipCode = _random.Next(0' 9999)                              }'                              ShipVia = $"shippers/{_random.Next(0' 10)}"                          };
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,InsertDocs,The following statement contains a magic number: var order = new Order                          {                              Company = $"companies/{_random.Next(1' NumberOfCompanyDocuments)}"'                              Employee = $"employees/{_random.Next(1' NumberOfEmployeeDocuments)}"'                              Lines = CreateOrderLines(_random.Next(0' 15))'                              Freight = _random.Next()'                              OrderedAt = DateTime.Now'                              RequireAt = DateTime.Now.AddDays(_random.Next(1' 30))'                              ShippedAt = DateTime.Now'                              ShipTo = new Address                              {                                  Country = $"Country{_random.Next(0' 10)}"'                                  City = $"City{_random.Next(0' 100)}"'                                  Street = $"Street{_random.Next(0' 1000)}"'                                  ZipCode = _random.Next(0' 9999)                              }'                              ShipVia = $"shippers/{_random.Next(0' 10)}"                          };
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,InsertDocs,The following statement contains a magic number: var employee = new Employee()                          {                              FirstName = $"FirstName-{i % 123}"'                              LastName = $"LastName-{i % 456}"'                              Address = new Address()                              {                                  Country = i % 2 == 0 ? "PL" : "IL"'                                  City = $"City-{i % 77}"'                                  Street = $"Street-{i % 199}"'                                  ZipCode = i % 999                              }                          };
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,InsertDocs,The following statement contains a magic number: var employee = new Employee()                          {                              FirstName = $"FirstName-{i % 123}"'                              LastName = $"LastName-{i % 456}"'                              Address = new Address()                              {                                  Country = i % 2 == 0 ? "PL" : "IL"'                                  City = $"City-{i % 77}"'                                  Street = $"Street-{i % 199}"'                                  ZipCode = i % 999                              }                          };
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,InsertDocs,The following statement contains a magic number: var employee = new Employee()                          {                              FirstName = $"FirstName-{i % 123}"'                              LastName = $"LastName-{i % 456}"'                              Address = new Address()                              {                                  Country = i % 2 == 0 ? "PL" : "IL"'                                  City = $"City-{i % 77}"'                                  Street = $"Street-{i % 199}"'                                  ZipCode = i % 999                              }                          };
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,InsertDocs,The following statement contains a magic number: var employee = new Employee()                          {                              FirstName = $"FirstName-{i % 123}"'                              LastName = $"LastName-{i % 456}"'                              Address = new Address()                              {                                  Country = i % 2 == 0 ? "PL" : "IL"'                                  City = $"City-{i % 77}"'                                  Street = $"Street-{i % 199}"'                                  ZipCode = i % 999                              }                          };
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,InsertDocs,The following statement contains a magic number: var employee = new Employee()                          {                              FirstName = $"FirstName-{i % 123}"'                              LastName = $"LastName-{i % 456}"'                              Address = new Address()                              {                                  Country = i % 2 == 0 ? "PL" : "IL"'                                  City = $"City-{i % 77}"'                                  Street = $"Street-{i % 199}"'                                  ZipCode = i % 999                              }                          };
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,InsertDocs,The following statement contains a magic number: var employee = new Employee()                          {                              FirstName = $"FirstName-{i % 123}"'                              LastName = $"LastName-{i % 456}"'                              Address = new Address()                              {                                  Country = i % 2 == 0 ? "PL" : "IL"'                                  City = $"City-{i % 77}"'                                  Street = $"Street-{i % 199}"'                                  ZipCode = i % 999                              }                          };
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,InsertDocs,The following statement contains a magic number: progress.Report(100);
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,CreateOrderLines,The following statement contains a magic number: lines.Add(new OrderLine()                  {                      Discount = _random.Next(0' 1)'                      PricePerUnit = _random.Next(1' 999)'                      Product = $"products/{_random.Next(1' 9999)}"'                      ProductName = "ProductName"                  });
Magic Number,Indexing.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\Program.cs,CreateOrderLines,The following statement contains a magic number: lines.Add(new OrderLine()                  {                      Discount = _random.Next(0' 1)'                      PricePerUnit = _random.Next(1' 999)'                      Product = $"products/{_random.Next(1' 9999)}"'                      ProductName = "ProductName"                  });
Magic Number,Indexing.Benchmark,ProgressBar,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\ProgressBar.cs,ProgressBar,The following statement contains a magic number: timer = new Timer(TimerHandler' null' 0' 1000);
Magic Number,Indexing.Benchmark,ProgressBar,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Indexing.Benchmark\ProgressBar.cs,TimerHandler,The following statement contains a magic number: int percent = (int)(currentProgress * 100);
