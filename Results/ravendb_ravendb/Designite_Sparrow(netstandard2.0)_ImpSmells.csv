Implementation smell,Namespace,Class,File,Method,Description
Long Method,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The method has 222 lines of code.
Long Method,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The method has 162 lines of code.
Long Method,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,ReadInternal,The method has 139 lines of code.
Long Method,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The method has 148 lines of code.
Long Method,Sparrow.Json.Parsing,ObjectJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\ObjectJsonParser.cs,Read,The method has 293 lines of code.
Long Method,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,Read,The method has 113 lines of code.
Complex Method,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,Cyclomatic complexity of the method is 13
Complex Method,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,IntroSort,Cyclomatic complexity of the method is 9
Complex Method,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,IntroSort,Cyclomatic complexity of the method is 9
Complex Method,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,Cyclomatic complexity of the method is 23
Complex Method,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,Cyclomatic complexity of the method is 28
Complex Method,Sparrow.Compression,SmallStringCompression,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\SmallStringCompression.cs,Compress,Cyclomatic complexity of the method is 15
Complex Method,Sparrow.Json,ArenaMemoryAllocator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\ArenaMemoryAllocator.cs,ResetArena,Cyclomatic complexity of the method is 9
Complex Method,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,ReadInternal,Cyclomatic complexity of the method is 24
Complex Method,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,ReadJsonValue,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,TryConvertType,Cyclomatic complexity of the method is 22
Complex Method,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,ConvertType,Cyclomatic complexity of the method is 22
Complex Method,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,BlittableValidation,Cyclomatic complexity of the method is 9
Complex Method,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,PropertiesValidation,Cyclomatic complexity of the method is 21
Complex Method,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,Equals,Cyclomatic complexity of the method is 10
Complex Method,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,AssertNoModifications,Cyclomatic complexity of the method is 11
Complex Method,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteValue,Cyclomatic complexity of the method is 10
Complex Method,Sparrow.Json,CachedProperties,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\CachedProperties.cs,UnlikelySortProperties,Cyclomatic complexity of the method is 9
Complex Method,Sparrow.Json,JsonContextPoolBase<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonContextPoolBase.cs,EnsureCurrentThreadContextWillBeReleased,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Json,JsonContextPoolBase<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonContextPoolBase.cs,CleanThreadLocalState,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GenerateJsonDeserializationRoutine,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,Cyclomatic complexity of the method is 21
Complex Method,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,ToDictionary,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,WriteObject,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,WriteValue,Cyclomatic complexity of the method is 10
Complex Method,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,LazyStringParser,Cyclomatic complexity of the method is 9
Complex Method,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,Cyclomatic complexity of the method is 24
Complex Method,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,Cyclomatic complexity of the method is 24
Complex Method,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,Cyclomatic complexity of the method is 25
Complex Method,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,Cyclomatic complexity of the method is 25
Complex Method,Sparrow.Json,ManualBlittableJsonDocumentBuilder<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\ManualBlittableJsonDocumentBuilder.cs,WriteObjectEnd,Cyclomatic complexity of the method is 10
Complex Method,Sparrow.Json,ManualBlittableJsonDocumentBuilder<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\ManualBlittableJsonDocumentBuilder.cs,WriteArrayEnd,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Json,ManualBlittableJsonDocumentBuilder<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\ManualBlittableJsonDocumentBuilder.cs,WriteValue,Cyclomatic complexity of the method is 10
Complex Method,Sparrow.Json.Parsing,ObjectJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\ObjectJsonParser.cs,Read,Cyclomatic complexity of the method is 49
Complex Method,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,Read,Cyclomatic complexity of the method is 16
Complex Method,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ReadUnlikely,Cyclomatic complexity of the method is 14
Complex Method,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ContinueParsingValue,Cyclomatic complexity of the method is 18
Complex Method,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ParseNumber,Cyclomatic complexity of the method is 10
Complex Method,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ParseNumberUnlikely,Cyclomatic complexity of the method is 10
Complex Method,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ParseString,Cyclomatic complexity of the method is 18
Complex Method,Sparrow.Json.Parsing,UnmanagedJsonParserHelper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParserHelper.cs,ReadArrayToMemory,Cyclomatic complexity of the method is 9
Complex Method,Sparrow.Logging,LoggingFilter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingFilter.cs,ParseInput,Cyclomatic complexity of the method is 10
Complex Method,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,BackgroundLogger,Cyclomatic complexity of the method is 17
Complex Method,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,RunLowMemoryHandlers,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Utils,CommandLineArgumentEscaper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\CommandLineArgumentEscaper.cs,EscapeSingleArg,Cyclomatic complexity of the method is 8
Complex Method,Sparrow.Utils,NativeMemoryCleaner<TStack;TPooledItem>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\NativeMemoryCleaner.cs,CleanNativeMemory,Cyclomatic complexity of the method is 9
Long Parameter List,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,SwapIfGreaterWithItems3,The method has 5 parameters. Parameters: keys' values' a' b' c
Long Parameter List,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,IntroSort,The method has 5 parameters. Parameters: keys' values' lo' hi' depthLimit
Long Parameter List,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,PickPivotAndPartitionUnlikely,The method has 5 parameters. Parameters: keys' values' lo' hi' middle
Long Parameter List,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,DownHeap,The method has 5 parameters. Parameters: keys' values' i' n' lo
Long Parameter List,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,Encode64LongBuffer,The method has 5 parameters. Parameters: input' output' inputLength' outputLength' acceleration
Long Parameter List,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,Encode64,The method has 5 parameters. Parameters: input' output' inputLength' outputLength' acceleration
Long Parameter List,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The method has 6 parameters. Parameters: dictPtr' source' dest' inputSize' maxOutputSize' acceleration
Long Parameter List,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,Decode64LongBuffers,The method has 5 parameters. Parameters: input' inputLength' output' outputLength' knownOutputLength
Long Parameter List,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,Decode64,The method has 5 parameters. Parameters: input' inputLength' output' outputLength' knownOutputLength
Long Parameter List,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The method has 8 parameters. Parameters: source' dest' inputSize' outputSize' targetOutputSize' lowPrefix' dictStart' dictSize
Long Parameter List,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,BlittableJsonDocumentBuilder,The method has 5 parameters. Parameters: context' state' reader' writer' modifier
Long Parameter List,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,BlittableJsonDocumentBuilder,The method has 7 parameters. Parameters: context' mode' debugTag' reader' state' writer' modifier
Long Parameter List,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,BlittableJsonDocumentBuilder,The method has 6 parameters. Parameters: context' state' mode' debugTag' reader' writer
Long Parameter List,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,GetPropertyTypeAndPosition,The method has 5 parameters. Parameters: index' metadataSize' token' position' propertyId
Long Parameter List,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,PropertiesValidation,The method has 5 parameters. Parameters: rootTokenTypen' mainPropOffsetSize' mainPropIdSize' objStartOffset' numberOfPropsNames
Long Parameter List,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,AssertNoModifications,The method has 5 parameters. Parameters: data' id' assertChildren' assertRemovals' assertProperties
Long Parameter List,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,UnlikelyWriteLargeString,The method has 5 parameters. Parameters: numberOfEscapeSequences' strSrcBuffer' escapeSequencePos' strBuffer' size
Long Parameter List,Sparrow.Json,BlittableJsonTextWriterExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriterExtensions.cs,WriteArray,The method has 5 parameters. Parameters: writer' context' name' items' onWrite
Long Parameter List,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteValue,The method has 5 parameters. Parameters: buffer' size' token' mode' initialCompressedSize
Long Parameter List,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteValue,The method has 6 parameters. Parameters: buffer' size' escapePositions' token' mode' initialCompressedSize
Long Parameter List,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteValue,The method has 6 parameters. Parameters: buffer' size' escapePositions' token' mode' initialCompressedSize
Long Parameter List,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,TryCompressValue,The method has 7 parameters. Parameters: buffer' position' size' token' mode' initialCompressedSize' maxGoodCompressionSize
Long Parameter List,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ParseToMemory,The method has 5 parameters. Parameters: stream' debugTag' mode' bytes' modifier
Long Parameter List,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ParseBuffer,The method has 5 parameters. Parameters: buffer' length' debugTag' mode' modifier
Long Parameter List,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ParseToMemoryAsync,The method has 5 parameters. Parameters: webSocket' debugTag' mode' bytes' token
Long Parameter List,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ParseToMemoryAsync,The method has 6 parameters. Parameters: stream' documentId' mode' bytes' token' maxSize
Long Parameter List,Sparrow.Json,LazyCompressedStringValue,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyCompressedStringValue.cs,LazyCompressedStringValue,The method has 5 parameters. Parameters: str' buffer' uncompressedSize' compressedSize' context
Long Parameter List,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,DateToTicks,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' fraction
Long Parameter List,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ReadToken,The method has 5 parameters. Parameters: pos' couldRead' tokenBuffer' tokenString' jsonParserTokenContinuation
Long Parameter List,Sparrow.Json.Parsing,UnmanagedJsonParserHelper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParserHelper.cs,ReadString,The method has 5 parameters. Parameters: context' peepingTomStream' parser' state' buffer
Long Parameter List,Sparrow.Json.Parsing,UnmanagedJsonParserHelper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParserHelper.cs,ReadLong,The method has 5 parameters. Parameters: context' peepingTomStream' parser' state' buffer
Long Parameter List,Sparrow.Json.Parsing,UnmanagedJsonParserHelper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParserHelper.cs,ReadArrayToMemory,The method has 5 parameters. Parameters: context' peepingTomStream' parser' state' buffer
Long Parameter List,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,LoggingSource,The method has 6 parameters. Parameters: logMode' path' name' retentionTime' retentionSize' compress
Long Parameter List,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,SetupLogMode,The method has 5 parameters. Parameters: logMode' path' retentionTime' retentionSize' compress
Long Parameter List,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,SetupLogMode,The method has 5 parameters. Parameters: logMode' path' retentionTime' retentionSize' compress
Long Parameter List,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,AddLowMemEvent,The method has 6 parameters. Parameters: reason' availableMem' totalUnmanaged' totalScratchDirty' physicalMem' currentcommitCharge
Long Parameter List,Sparrow.Utils,NativeMemoryCleaner<TStack;TPooledItem>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\NativeMemoryCleaner.cs,NativeMemoryCleaner,The method has 5 parameters. Parameters: cleanupTarget' getContexts' lowMemoryFlag' period' idleTime
Long Parameter List,Sparrow.Utils,SafeFileStream,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\SafeFileStream.cs,Create,The method has 6 parameters. Parameters: path' mode' access' share' bufferSize' options
Long Parameter List,Sparrow.Utils,SafeFileStream,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\SafeFileStream.cs,Create,The method has 6 parameters. Parameters: path' mode' access' share' bufferSize' useAsync
Long Identifier,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,CreateLazyStringValueFromParserState,The length of the parameter lazyStringValueFromParserState is 30.
Long Identifier,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WritePropertyNames,The length of the parameter propertyArrayOffsetValueByteSize is 32.
Long Identifier,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,Reset,The length of the parameter forceReleaseLongLivedAllocator is 30.
Long Identifier,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,,The length of the parameter _arenaAllocatorForLongLivedValues is 33.
Long Identifier,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,,The length of the parameter _numberOfAllocatedStringsValues is 31.
Long Identifier,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,,The length of the parameter MemoryStreamCacheMaxCapacityInBytes is 35.
Long Identifier,Sparrow.Json,LazyStringValue,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringValue.cs,,The length of the parameter _lazyStringTempComparisonBuffer is 31.
Long Identifier,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,,The length of the parameter TimeToWaitForLoggingToEndInMilliseconds is 39.
Long Identifier,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,Initialize,The length of the parameter useTotalDirtyMemInsteadOfMemUsage is 33.
Long Identifier,Sparrow.LowMemory,MemoryInfoResult,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\MemoryInfoResult.cs,,The length of the parameter AvailableWithoutTotalCleanMemory is 32.
Long Identifier,Sparrow.Utils,ThreadStats,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\NativeMemory.cs,,The length of the parameter CurrentlyAllocatedForProcessing is 31.
Long Statement,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The length of the statement  "                            h32 = Bits.RotateLeft32(state.V1' 1) + Bits.RotateLeft32(state.V2' 7) + Bits.RotateLeft32(state.V3' 12) + Bits.RotateLeft32(state.V4' 18); " is 138.
Long Statement,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The length of the statement  "                        throw new NotSupportedException("Streaming process does not support resuming with buffers whose size is not 16 bytes aligned. Supporting it would impact performance."); " is 168.
Long Statement,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The length of the statement  "                        throw new NotSupportedException("Streaming process does not support resuming with buffers whose size is not 16 bytes aligned. Supporting it would impact performance."); " is 168.
Long Statement,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The length of the statement  "                    v0 += *((ulong*)ptr) * Metro128Constants.K2; ptr += sizeof(ulong); v0 = Bits.RotateRight64(v0' 33) * Metro128Constants.K3; " is 122.
Long Statement,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The length of the statement  "                    v1 += *((uint*)ptr) * Metro128Constants.K2; ptr += sizeof(uint); v1 = Bits.RotateRight64(v1' 33) * Metro128Constants.K3; " is 120.
Long Statement,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The length of the statement  "                    v0 += *((ushort*)ptr) * Metro128Constants.K2; ptr += sizeof(ushort); v0 = Bits.RotateRight64(v0' 33) * Metro128Constants.K3; " is 124.
Long Statement,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The length of the statement  "                        throw new NotSupportedException("Streaming process does not support resuming with buffers whose size is not 32 bytes aligned. Supporting it would impact performance."); " is 168.
Long Statement,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The length of the statement  "                                v0 += *((ulong*)ptr) * Metro128Constants.K2; ptr += sizeof(ulong); v0 = Bits.RotateRight64(v0' 33) * Metro128Constants.K3; " is 122.
Long Statement,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The length of the statement  "                                v1 += *((uint*)ptr) * Metro128Constants.K2; ptr += sizeof(uint); v1 = Bits.RotateRight64(v1' 33) * Metro128Constants.K3; " is 120.
Long Statement,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The length of the statement  "                                v0 += *((ushort*)ptr) * Metro128Constants.K2; ptr += sizeof(ushort); v0 = Bits.RotateRight64(v0' 33) * Metro128Constants.K3; " is 124.
Long Statement,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The length of the statement  "            // This is the only place where sparrow calls direct pInvoke (replace when Unsafe.Compare/Buffer.Compare will be available)             " is 123.
Long Statement,Sparrow,ObjectPool<T;TResetBehavior>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\ObjectPool.cs,ForgetTrackedObject,The length of the statement  "            Debug.WriteLine(string.Format("TRACEOBJECTPOOLLEAKS_BEGIN\nObject of type {0} was freed' but was not from pool. \n Callstack: \n {1} TRACEOBJECTPOOLLEAKS_END"' typeof(T)' trace)); " is 179.
Long Statement,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,IntroSort,The length of the statement  "                int left = lo' right = hi - 1; // We already partitioned lo and hi and put the pivot in hi - 1.  And we pre-increment & decrement below. " is 136.
Long Statement,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,PickPivotAndPartitionUnlikely,The length of the statement  "            int left = lo' right = hi - 1; // We already partitioned lo and hi and put the pivot in hi - 1.  And we pre-increment & decrement below. " is 136.
Long Statement,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,IntroSort,The length of the statement  "                int left = lo' right = hi - 1; // We already partitioned lo and hi and put the pivot in hi - 1.  And we pre-increment & decrement below. " is 136.
Long Statement,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,PickPivotAndPartitionUnlikely,The length of the statement  "            int left = lo' right = hi - 1; // We already partitioned lo and hi and put the pivot in hi - 1.  And we pre-increment & decrement below. " is 136.
Long Statement,Sparrow,StringSegmentEqualityStructComparer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\StringComparer.cs,Equals,The length of the statement  "                goto ReturnFalse;  // PERF: Because this method is going to be inlined' in case of false we will want to jump at the end.      " is 121.
Long Statement,Sparrow,OrdinalStringStructComparer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\StringComparer.cs,Equals,The length of the statement  "                goto ReturnFalse;  // PERF: Because this method is going to be inlined' in case of false we will want to jump at the end.      " is 121.
Long Statement,Sparrow,OrdinalIgnoreCaseStringStructComparer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\StringComparer.cs,Equals,The length of the statement  "                goto ReturnFalse;  // PERF: Because this method is going to be inlined' in case of false we will want to jump at the end.      " is 121.
Long Statement,Sparrow,StringSegment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\StringSegment.cs,ThrowInvalidArguments,The length of the statement  "                return ThrowHelper.GetArgumentException("Offset and length are out of bounds for the string or length is greater than the number of characters from index to the end of the string."); " is 182.
Long Statement,Sparrow,StringSegment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\StringSegment.cs,ThrowInvalidArguments,The length of the statement  "                return ThrowHelper.GetArgumentException("Offset and length are out of bounds for this StringSegment or length is greater than the number of characters to the end of this StringSegment."); " is 187.
Long Statement,Sparrow,StringSegmentComparer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\StringSegmentComparer.cs,GetHashCode,The length of the statement  "            // .NET Core strings use randomized hash codes for security reasons. Consequently we must materialize the StringSegment as a string " is 131.
Long Statement,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,Encode64LongBuffer,The length of the statement  "            // LZ4 can handle a bit less then 2GB. we will handle the compression/decompression devided to parts for above 1GB inputs " is 121.
Long Statement,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,Encode64,The length of the statement  "                    return LZ4_compress_generic<LimitedOutput' ByU16' NoDict' NoDictIssue>(&ctx' input' output' inputLength' outputLength' acceleration); " is 133.
Long Statement,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,Encode64,The length of the statement  "                    return LZ4_compress_generic<LimitedOutput' ByU32' NoDict' NoDictIssue>(&ctx' input' output' inputLength' outputLength' acceleration); " is 133.
Long Statement,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The length of the statement  "                    if ((typeof(TLimited) == typeof(LimitedOutput)) && (op + litLength + (2 + 1 + LASTLITERALS) + (litLength / 255) > olimit)) " is 122.
Long Statement,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The length of the statement  "                if (((typeof(TDictionaryType) == typeof(DictSmall)) ? (match >= lowRefLimit) : true) && (match + MAX_DISTANCE >= ip) && (*(uint*)(match + refDelta) == *(uint*)(ip))) " is 165.
Long Statement,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The length of the statement  "                if ((typeof(TLimited) == typeof(LimitedOutput)) && ((op - dest) + lastRun + 1 + ((lastRun + 255 - RUN_MASK) / 255) > maxOutputSize)) " is 132.
Long Statement,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_count,The length of the statement  "            // JIT: We make local copies of the parameters because the JIT will not be able to figure out yet that it can safely inline " is 123.
Long Statement,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_count,The length of the statement  "            if ((pIn < (pInLimit - 1)) && (*((ushort*)pMatch) == *((ushort*)pIn))) { pIn += sizeof(ushort); pMatch += sizeof(ushort); } " is 123.
Long Statement,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,Decode64,The length of the statement  "                var length = LZ4_decompress_generic<EndOnInputSize' Full' NoDict>(input' output' inputLength' outputLength' 0' output' null' 0); " is 128.
Long Statement,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,Decode64,The length of the statement  "                var length = LZ4_decompress_generic<EndOnOutputSize' Full' WithPrefix64K>(input' output' inputLength' outputLength' 0' output - (64 * Constants.Size.Kilobyte)' null' 64 * Constants.Size.Kilobyte); " is 196.
Long Statement,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The length of the statement  "            if ((typeof(TEarlyEnd) == typeof(Partial)) && (oexit > oend - MFLIMIT)) oexit = oend - MFLIMIT;                          // targetOutputSize too high => decode everything " is 170.
Long Statement,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The length of the statement  "                    if ((typeof(TEndCondition) == typeof(EndOnInputSize)) && (op + length) < op) goto _output_error;   /* overflow detection */ " is 123.
Long Statement,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The length of the statement  "                    if ((typeof(TEndCondition) == typeof(EndOnInputSize)) && (ip + length) < ip) goto _output_error;   /* overflow detection */ " is 123.
Long Statement,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The length of the statement  "                if (((typeof(TEndCondition) == typeof(EndOnInputSize)) && ((cpy > (typeof(TEarlyEnd) == typeof(Partial) ? oexit : oend - MFLIMIT)) || (ip + length > iend - (2 + 1 + LASTLITERALS)))) " is 181.
Long Statement,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ThrowMemoryIsNotBigEnough,The length of the statement  "            throw new ArgumentException($"The memory passed to {nameof(GetDefaultRavenFormat)} is not big enough' we require at least 28 bytes to operate. This exception should never ever happen."); " is 186.
Long Statement,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,ReadInternal,The length of the statement  "                        _writeToken = _writer.WriteObjectMetadata(currentState.Properties' currentState.FirstWrite' currentState.MaxPropertyId); " is 120.
Long Statement,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,ReadInternal,The length of the statement  "                            _writeToken = _writer.WriteObjectMetadata(currentState.Properties' currentState.FirstWrite' currentState.MaxPropertyId); " is 120.
Long Statement,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,ThrowExpectedStartOfArray,The length of the statement  "            throw new InvalidStartOfObjectException("Expected start of array' but got " + _state.CurrentTokenType + _reader.GenerateErrorState()); " is 134.
Long Statement,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,ThrowExpectedStartOfObject,The length of the statement  "            throw new InvalidStartOfObjectException("Expected start of object' but got " + _state.CurrentTokenType + _reader.GenerateErrorState()); " is 135.
Long Statement,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,ReadJsonValue,The length of the statement  "                    start = _writer.WriteValue(_state.StringBuffer' _state.StringSize' _state.EscapePositions' out stringToken' _mode' _state.CompressedSize); " is 138.
Long Statement,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,ReadJsonValue,The length of the statement  "                    if (_state.EscapePositions.Count == 0 && _state.CompressedSize == null && (_mode & UsageMode.CompressSmallStrings) == 0 && _state.StringSize < 128) " is 147.
Long Statement,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,ReadJsonValue,The length of the statement  "                        start = _writer.WriteValue(_state.StringBuffer' _state.StringSize' _state.EscapePositions' out stringToken' _mode' _state.CompressedSize); " is 138.
Long Statement,Sparrow.Json,PropertyTag,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,ToString,The length of the statement  "                return $"{nameof(Position)}: {Position}' {nameof(Property)}: {Property.Comparer} {Property.PropertyId}' {nameof(Type)}: {(BlittableJsonToken)Type}"; " is 148.
Long Statement,Sparrow.Json,BlittableJsonReaderArray,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderArray.cs,Clone,The length of the statement  "                                throw new InvalidDataException($"Actual value type is {itr.Current.GetType()}. Should be known serialized type and should not happen. "); " is 137.
Long Statement,Sparrow.Json,BlittableJsonReaderArray,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderArray.cs,Dispose,The length of the statement  "            // this is required only in cases that we get a BlittableJsonReaderArray' which is an only child of an BlittableJsonReaderObject and we lose track of it's parent'  " is 162.
Long Statement,Sparrow.Json,BlittableJsonReaderBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderBase.cs,AssertContextNotDisposed,The length of the statement  "                throw new ObjectDisposedException("blittable's context has been disposed' blittable should not be used now in that case!"); " is 123.
Long Statement,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,TryConvertType,The length of the statement  "                        if (DateTime.TryParseExact(dateTimeString' DefaultFormat.DateTimeFormatsToRead' CultureInfo.InvariantCulture' DateTimeStyles.RoundtripKind' out DateTime time) == false) " is 168.
Long Statement,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,TryConvertType,The length of the statement  "                        if (DateTimeOffset.TryParseExact(dateTimeOffsetString' DefaultFormat.DateTimeFormatsToRead' CultureInfo.InvariantCulture' " is 121.
Long Statement,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,ConvertType,The length of the statement  "                        if (DateTime.TryParseExact(dateTimeString' DefaultFormat.DateTimeFormatsToRead' CultureInfo.InvariantCulture' DateTimeStyles.RoundtripKind' " is 139.
Long Statement,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,ConvertType,The length of the statement  "                        if (DateTimeOffset.TryParseExact(dateTimeOffsetString' DefaultFormat.DateTimeFormatsToRead' CultureInfo.InvariantCulture' " is 121.
Long Statement,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,CompareTokens,The length of the statement  "            return (firstClearedToken == BlittableJsonToken.EmbeddedBlittable && secondClearedToken == BlittableJsonToken.StartObject " is 121.
Long Statement,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,PropertiesValidation,The length of the statement  "                        if (Utf8Parser.TryParse(new ReadOnlySpan<byte>(numberCharsStart' numberLength)' out double _' out var consumed) == false || " is 123.
Long Statement,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,PropertiesValidation,The length of the statement  "                        var blittableJsonReaderObject = new BlittableJsonReaderObject(_mem + propValueOffset + offsetLen' stringLength' _context); " is 122.
Long Statement,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,AssertNoModifications,The length of the statement  "                throw new InvalidOperationException($"Both {nameof(assertRemovals)} and {nameof(assertProperties)} cannot be set to false."); " is 125.
Long Statement,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,AssertNoModifications,The length of the statement  "            if (assertProperties && data.Modifications?.Properties.Count > 0 && data.Modifications.Properties.Count > data.Modifications.ModificationsIndex) " is 144.
Long Statement,Sparrow.Json,AsyncBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,ThrowInvalidTypeException,The length of the statement  "            throw new ArgumentException($"Expected stream to be MemoryStream' but got {(typeOfStream == null ? "null" : typeOfStream.ToString())}."); " is 137.
Long Statement,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteString,The length of the statement  "            var numberOfEscapeSequences = skipEscaping ? 0 : BlittableJsonReaderBase.ReadVariableSizeInt(str.Buffer' ref escapeSequencePos); " is 128.
Long Statement,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,EnsureDecimalPlace,The length of the statement  "            if (double.IsNaN(value) || double.IsInfinity(value) || double.IsNegativeInfinity(value) || text.IndexOf('.') != -1 || text.IndexOf('E') != -1 || text.IndexOf('e') != -1) " is 169.
Long Statement,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WritePropertyNames,The length of the statement  "            // Find the minimal space to store the offsets (byte'short'int) and raise the appropriate flag in the properties metadata " is 121.
Long Statement,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteNumber,The length of the statement  "            Debug.Assert(sizeOfValue == sizeof(byte) || sizeOfValue == sizeof(short) || sizeOfValue == sizeof(int)' $"Unsupported size {sizeOfValue}"); " is 139.
Long Statement,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteValue,The length of the statement  "                size = TryCompressValue(ref buffer' ref _position' size' ref token' mode' initialCompressedSize' maxGoodCompressionSize); " is 121.
Long Statement,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteValue,The length of the statement  "                size = TryCompressValue(ref buffer' ref position' size' ref token' mode' initialCompressedSize' maxGoodCompressionSize); " is 120.
Long Statement,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteValue,The length of the statement  "                size = TryCompressValue(ref buffer' ref _position' size' ref token' mode' initialCompressedSize' maxGoodCompressionSize); " is 121.
Long Statement,Sparrow.Json,JsonContextPoolBase<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonContextPoolBase.cs,CleanThreadLocalState,The length of the statement  "                    // we want to clear our JsonContextPool's current thread's state from the _releaser' but to avoid touching any other states " is 123.
Long Statement,Sparrow.Json,JsonContextPoolBase<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonContextPoolBase.cs,CleanThreadLocalState,The length of the statement  "                        if (Interlocked.CompareExchange(ref threadIdHolder.ThreadId' -1' NativeMemory.CurrentThreadStats.InternalId) == NativeMemory.CurrentThreadStats.InternalId) " is 155.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GenerateJsonDeserializationRoutine,The length of the statement  "                    var methodToCall = typeof(IFillFromBlittableJson).GetMethod(nameof(IFillFromBlittableJson.FillFromBlittableJson)' BindingFlags.Public | BindingFlags.Instance); " is 159.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GenerateJsonDeserializationRoutine,The length of the statement  "                var lambda = Expression.Lambda<Func<BlittableJsonReaderObject' T>>(Expression.Block(vars.Values' Expression.MemberInit(instance' propInit))' json); " is 147.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,ThrowDeserializationError,The length of the statement  "            throw new InvalidOperationException($"Cannot create deserialization routine for '{type.FullName}' because '{fieldInfo.Name}' is readonly field"); " is 145.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                var tryGet = Expression.Call(json' nameof(BlittableJsonReaderObject.TryGet)' genericTypes' Expression.Constant(propertyName)' value); " is 133.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                    .GetMethod(propertyType == typeof(TimeSpan) ? nameof(TryGetTimeSpan) : nameof(TryGetNullableTimeSpan)' BindingFlags.NonPublic | BindingFlags.Static); " is 149.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                            var methodToCall = typeof(JsonDeserializationBase).GetMethod(nameof(ToDictionaryOfString)' BindingFlags.NonPublic | BindingFlags.Static); " is 137.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                            var methodToCall = typeof(JsonDeserializationBase).GetMethod(nameof(ToDictionaryOfEnumKeys)' BindingFlags.NonPublic | BindingFlags.Static) " is 138.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                        throw new NotSupportedException(propertyType.FullName + " is not supported by the deserializer' please add support to it"); " is 123.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                        var methodToCall = typeof(JsonDeserializationBase).GetMethod(nameof(ToDictionaryOfDictionaryOfStringArray)' BindingFlags.NonPublic | BindingFlags.Static); " is 154.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                        var methodToCall = typeof(JsonDeserializationBase).GetMethod(nameof(ToDictionaryOfStringArray)' BindingFlags.NonPublic | BindingFlags.Static); " is 142.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                        var methodToCall = typeof(JsonDeserializationBase).GetMethod(nameof(ToDictionaryOfStringList)' BindingFlags.NonPublic | BindingFlags.Static); " is 141.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                        var methodToCall = typeof(JsonDeserializationBase).GetMethod(nameof(ToDictionaryOfList)' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod(listType); " is 163.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                        var methodToCall = typeof(JsonDeserializationBase).GetMethod(nameof(ToDictionaryOfEnum)' BindingFlags.NonPublic | BindingFlags.Static); " is 135.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                        var methodToCall = typeof(JsonDeserializationBase).GetMethod(nameof(ToDictionaryOfPrimitive)' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod(valueType); " is 169.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                        var methodToCall = typeof(JsonDeserializationBase).GetMethod(nameof(ToDictionary)' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod(propertyType.GenericTypeArguments[0]' valueType); " is 196.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                    var method = typeof(JsonDeserializationBase).GetMethod(nameof(ToCollectionOfString)' BindingFlags.NonPublic | BindingFlags.Static); " is 131.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                    var methodToCall = typeof(JsonDeserializationBase).GetMethod(nameof(ToList)' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod(valueType); " is 152.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                var method = typeof(JsonDeserializationBase).GetMethod(nameof(ToArrayOfString)' BindingFlags.NonPublic | BindingFlags.Static); " is 126.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                var methodToCall = typeof(JsonDeserializationBase).GetMethod(nameof(ToArray)' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod(valueType); " is 153.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                var methodToCall = typeof(JsonDeserializationBase).GetMethod(nameof(GetPrimitiveProperty)' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod(propertyType); " is 169.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The length of the statement  "                var methodToCall = typeof(JsonDeserializationBase).GetMethod(nameof(ToObject)' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod(propertyType); " is 157.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,ToDictionary,The length of the statement  "            var dictionary = new Dictionary<TK' TV>((IEqualityComparer<TK>)StringComparer.Ordinal); // we need to deserialize it as we got it' keys could be case sensitive - RavenDB-8713 " is 174.
Long Statement,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,ThrowInvalidPrimitiveCastException,The length of the statement  "            throw new InvalidCastException($"Failed to fetch property name = {prop} of type {type} from json with value : [{json}]"); " is 121.
Long Statement,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ThrowAlreadyDisposedForLongLivedAllocator,The length of the statement  "            throw new ObjectDisposedException("Could not allocated long lived memory' because the context is after Reset() but before Renew(). Is it possible that you have tried to use the context AFTER it was returned to the context pool?"); " is 230.
Long Statement,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,GetLazyString,The length of the statement  "                LazyStringValue result = longLived == false ? AllocateStringValue(field.Value' address' actualSize) : new LazyStringValue(field.Value' address' actualSize' this); " is 162.
Long Statement,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ParseToMemory,The length of the statement  "            using (var builder = new BlittableJsonDocumentBuilder(this' mode' debugTag' parser' _jsonParserState' modifier: modifier)) " is 122.
Long Statement,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ParseBuffer,The length of the statement  "            using (var builder = new BlittableJsonDocumentBuilder(this' mode' debugTag' parser' _jsonParserState' modifier: modifier)) " is 122.
Long Statement,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ParseBufferToArray,The length of the statement  "            using (var builder = new BlittableJsonDocumentBuilder(this' mode' debugTag' parser' _jsonParserState' modifier: modifier)) " is 122.
Long Statement,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,Reset,The length of the statement  "            // We don't reset _arenaAllocatorForLongLivedValues. It's used as a cache buffer for long lived strings like field names. " is 121.
Long Statement,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,Reset,The length of the statement  "            // When a context is re-used' the buffer containing those field names was not reset and the strings are still valid and alive. " is 126.
Long Statement,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ClearUnreturnedPathCache,The length of the statement  "                //idly there shouldn't be unreleased path cache but we do have placed where we don't dispose of blittable object readers " is 120.
Long Statement,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ThrowUseAfterFree,The length of the statement  "                $"UseAfterFree detected! Attempt to return memory from previous generation' Reset has already been called and the memory reused! Allocated by: {allocation.AllocatedBy}. Thread name: {Thread.CurrentThread.Name}"); " is 212.
Long Statement,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ThrowUseAfterFree,The length of the statement  "                $"UseAfterFree detected! Attempt to return memory from previous generation' Reset has already been called and the memory reused! Thread name: {Thread.CurrentThread.Name}"); " is 172.
Long Statement,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber2,The length of the statement  "            // PERF: We use ptr + offset to ensure we can hijack the chip front-end to do the arithmetic instead of relying on the backend " is 126.
Long Statement,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber2,The length of the statement  "            // PERF: We use ptr + offset to ensure we can hijack the chip front-end to do the arithmetic instead of relying on the backend " is 126.
Long Statement,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber3,The length of the statement  "            // PERF: We use ptr + offset to ensure we can hijack the chip front-end to do the arithmetic instead of relying on the backend " is 126.
Long Statement,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber3,The length of the statement  "            // PERF: We use ptr + offset to ensure we can hijack the chip front-end to do the arithmetic instead of relying on the backend " is 126.
Long Statement,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber4,The length of the statement  "            // PERF: We use ptr + offset to ensure we can hijack the chip front-end to do the arithmetic instead of relying on the backend " is 126.
Long Statement,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber4,The length of the statement  "            // PERF: We use ptr + offset to ensure we can hijack the chip front-end to do the arithmetic instead of relying on the backend " is 126.
Long Statement,Sparrow.Json,LazyStringValue,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringValue.cs,ValidateIndexes,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(startIndex)' startIndex' $"startIndex ({startIndex}) is greater than the length of this string."); " is 143.
Long Statement,Sparrow.Json,LazyStringValue,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringValue.cs,ValidateIndexes,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(count)' count' $"count ({count}) is greater than the length of this string minus startIndex."); " is 140.
Long Statement,Sparrow.Json,ManualBlittableJsonDocumentBuilder<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\ManualBlittableJsonDocumentBuilder.cs,StartWriteObject,The length of the statement  "            previousState.State = previousState.State == ContinuationState.ReadPropertyValue ? ContinuationState.ReadPropertyName : previousState.State; " is 140.
Long Statement,Sparrow.Json,ManualBlittableJsonDocumentBuilder<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\ManualBlittableJsonDocumentBuilder.cs,WriteArrayEnd,The length of the statement  "                    _writeToken = _writer.WriteObjectMetadata(currentState.Properties' currentState.FirstWrite' currentState.MaxPropertyId); " is 120.
Long Statement,Sparrow.Json,ManualBlittableJsonDocumentBuilder<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\ManualBlittableJsonDocumentBuilder.cs,WriteValue,The length of the statement  "            //public unsafe int WriteValue(byte* buffer' int size' out BlittableJsonToken token' UsageMode mode' int? initialCompressedSize) " is 128.
Long Statement,Sparrow.Json,UnmanagedBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedBuffersPool.cs,FreeAllPooledMemory,The length of the statement  "                    NativeMemory.Free(allocatedMemoryDatas.Address' allocatedMemoryDatas.SizeInBytes' allocatedMemoryDatas.AllocatingThread); " is 121.
Long Statement,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,ThrowInvalidSizeForEscapeControlChars,The length of the statement  "            throw new InvalidOperationException($"The previousComputedMaxSize: {previousComputedMaxSize} is too small to support the required escape positions. Did you not call FindMaxNumberOfEscapePositions?"); " is 199.
Long Statement,Sparrow.Json.Parsing,ObjectJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\ObjectJsonParser.cs,Read,The length of the statement  "                            throw new InvalidOperationException("Trying to directly modify a DynamicJsonValue with a source' but you need to place the source (blittable)' not the json value in the parent."); " is 179.
Long Statement,Sparrow.Json.Parsing,ObjectJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\ObjectJsonParser.cs,Read,The length of the statement  "                        var propIndex = modifications.SourceProperties.Properties.Array[modifications.SourceIndex + modifications.SourceProperties.Properties.Offset]; " is 142.
Long Statement,Sparrow.Json.Parsing,ObjectJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\ObjectJsonParser.cs,EnsureDecimalPlace,The length of the statement  "            if (double.IsNaN(value) || double.IsInfinity(value) || text.IndexOf('.') != -1 || text.IndexOf('E') != -1 || text.IndexOf('e') != -1) " is 133.
Long Statement,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,Read,The length of the statement  "                    if (state.CurrentTokenType == JsonParserToken.Separator || state.CurrentTokenType == JsonParserToken.StartObject || state.CurrentTokenType == JsonParserToken.StartArray) " is 169.
Long Statement,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ParseString,The length of the statement  "                        _unmanagedWriteBuffer.Write(currentBuffer + _currentStrStart' (int)currentPos - _currentStrStart - 1 /* don't include the escape or the last quote */); " is 151.
Long Statement,Sparrow.Json.Parsing,UnmanagedJsonParserHelper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParserHelper.cs,ReadAsync,The length of the statement  "            var read = await peepingTomStream.ReadAsync(buffer.Buffer.Array' buffer.Buffer.Offset' buffer.Length).ConfigureAwait(false); " is 124.
Long Statement,Sparrow.Json.Parsing,UnmanagedJsonParserHelper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParserHelper.cs,ThrowInvalidJson,The length of the statement  "            throw new InvalidOperationException("Invalid JSON. " + msg + " on " + parser.GenerateErrorState() + ". Last 4KB of read strem : '" + peepedWindow + "'"); " is 153.
Long Statement,Sparrow.Json.Parsing,UnmanagedJsonParserHelper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParserHelper.cs,ReadObject,The length of the statement  "                    throw new EndOfStreamException("Stream ended without reaching end of json content" + GetPeepingTomBufferAsString(peepingTomStream)); " is 132.
Long Statement,Sparrow.Json.Parsing,UnmanagedJsonParserHelper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParserHelper.cs,ReadObjectAsync,The length of the statement  "                var read = await peepingTomStream.ReadAsync(buffer.Buffer.Array' buffer.Buffer.Offset' buffer.Length).ConfigureAwait(false); " is 124.
Long Statement,Sparrow.Json.Parsing,UnmanagedJsonParserHelper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParserHelper.cs,ReadArrayToMemory,The length of the statement  "                using (var builder = new BlittableJsonDocumentBuilder(context' BlittableJsonDocumentBuilder.UsageMode.None' "readArray/singleResult"' parser' state)) " is 149.
Long Statement,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,Register,The length of the statement  "            await source.SendAsync(new ArraySegment<byte>(_headerRow)' WebSocketMessageType.Text' true' token).ConfigureAwait(false); " is 121.
Long Statement,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,TryGetNewStreamAndApplyRetentionPolicies,The length of the statement  "                fileName = Path.Combine(_path' _dateString) + "." + nextLogNumber.ToString("000"' CultureInfo.InvariantCulture) + ".log"; " is 121.
Long Statement,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,MonitorMemoryUsage,The length of the statement  "                                timeout = 1000; // on EarlyOOM just run cleaners once (CheckMemoryStatus will run in 1000mSec and will return system to normal) " is 127.
Long Statement,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,MonitorMemoryUsage,The length of the statement  "                                _logger.Info("Out of memory error in the low memory notification thread' will wait 5 seconds before trying to check memory status again. The system is likely running out of memory"); " is 182.
Long Statement,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,GetLowMemory,The length of the statement  "            memStats = (memInfo.AvailableMemory' memInfo.TotalScratchDirtyMemory' memInfo.TotalPhysicalMemory' memInfo.CurrentCommitCharge); " is 128.
Long Statement,Sparrow.Threading,DisposeOnce<TOperationMode>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Threading\DisposeOnce.cs,Dispose,The length of the statement  "                            Tuple.Create(new MultipleUseFlag()' new TaskCompletionSource<object>(TaskCreationOptions.RunContinuationsAsynchronously))' " is 122.
Long Statement,Sparrow.Threading,DisposeOnceAsync<TOperationMode>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Threading\DisposeOnce.cs,DisposeAsync,The length of the statement  "                            Tuple.Create(new MultipleUseFlag()' new TaskCompletionSource<object>(TaskCreationOptions.RunContinuationsAsynchronously))' " is 122.
Complex Conditional,Sparrow.Collections,FastList<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Collections\FastList.cs,Clear,The conditional expression  "typeof(T) == typeof(int) || typeof(T) == typeof(uint) || typeof(T) == typeof(byte) ||                  typeof(T) == typeof(short) || typeof(T) == typeof(long) || typeof(T) == typeof(ulong)"  is complex.
Complex Conditional,Sparrow.Collections,FastList<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Collections\FastList.cs,RemoveRange,The conditional expression  "typeof(T) != typeof(int) && typeof(T) != typeof(uint) && typeof(T) != typeof(byte) &&                  typeof(T) != typeof(short) && typeof(T) != typeof(long) && typeof(T) != typeof(ulong)"  is complex.
Complex Conditional,Sparrow,StringSegment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\StringSegment.cs,Substring,The conditional expression  "!HasValue || offset < 0 || length < 0 || (uint)(offset + length) > (uint)Length"  is complex.
Complex Conditional,Sparrow,StringSegment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\StringSegment.cs,Subsegment,The conditional expression  "!HasValue || offset < 0 || length < 0 || (uint)(offset + length) > (uint)Length"  is complex.
Complex Conditional,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The conditional expression  "((typeof(TEndCondition) == typeof(EndOnInputSize)) && ((cpy > (typeof(TEarlyEnd) == typeof(Partial) ? oexit : oend - MFLIMIT)) || (ip + length > iend - (2 + 1 + LASTLITERALS))))                      || ((typeof(TEndCondition) == typeof(EndOnOutputSize)) && (cpy > oend - COPYLENGTH))"  is complex.
Complex Conditional,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,ReadJsonValue,The conditional expression  "_state.EscapePositions.Count == 0 && _state.CompressedSize == null && (_mode & UsageMode.CompressSmallStrings) == 0 && _state.StringSize < 128"  is complex.
Complex Conditional,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,EnsureDecimalPlace,The conditional expression  "double.IsNaN(value) || double.IsInfinity(value) || double.IsNegativeInfinity(value) || text.IndexOf('.') != -1 || text.IndexOf('E') != -1 || text.IndexOf('e') != -1"  is complex.
Complex Conditional,Sparrow.Json,JsonDeserializationBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonDeserializationBase.cs,GetValue,The conditional expression  "type == typeof(string) ||                  type == typeof(bool) ||                  type == typeof(long) ||                  type == typeof(ulong) ||                  type == typeof(int) ||                  type == typeof(uint) ||                  type == typeof(float) ||                  type == typeof(double) ||                  type == typeof(decimal) ||                  type.GetTypeInfo().IsEnum ||                  type == typeof(Guid) ||                  type == typeof(DateTime) ||                  type == typeof(DateTimeOffset) ||                  type == typeof(BlittableJsonReaderArray) ||                  type == typeof(BlittableJsonReaderObject)"  is complex.
Complex Conditional,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,DateToTicks,The conditional expression  "year >= 1 && year <= 9999 && month >= 1 && month <= 12"  is complex.
Complex Conditional,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The conditional expression  "buffer[4] != '-' || buffer[7] != '-' || buffer[10] != 'T' ||                  buffer[13] != ':' || buffer[16] != ':' || buffer[16] != ':'"  is complex.
Complex Conditional,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The conditional expression  "buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-')"  is complex.
Complex Conditional,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The conditional expression  "buffer[4] != '-' || buffer[7] != '-' || buffer[10] != 'T' ||                  buffer[13] != ':' || buffer[16] != ':' || buffer[16] != ':'"  is complex.
Complex Conditional,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The conditional expression  "buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-')"  is complex.
Complex Conditional,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsMaxSize,The conditional expression  "value == 92 || value == 34 || (value >= 8 && value <= 13 && value != 11)"  is complex.
Complex Conditional,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsIn,The conditional expression  "value == 92 || value == 34 || (value >= 8 && value <= 13 && value != 11)"  is complex.
Complex Conditional,Sparrow.Json.Parsing,ObjectJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\ObjectJsonParser.cs,Read,The conditional expression  "current is int || current is byte || current is sbyte || current is short || current is ushort"  is complex.
Complex Conditional,Sparrow.Json.Parsing,ObjectJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\ObjectJsonParser.cs,EnsureDecimalPlace,The conditional expression  "double.IsNaN(value) || double.IsInfinity(value) || text.IndexOf('.') != -1 || text.IndexOf('E') != -1 || text.IndexOf('e') != -1"  is complex.
Complex Conditional,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ParseNumber,The conditional expression  "b == ' ' || b == ''' || b == '}' || b == ']' || ParseNumberTable[b] == ParseNumberAction.ParseEnd"  is complex.
Complex Conditional,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,SetupLogMode,The conditional expression  "LogMode == logMode && path == _path && retentionTime == RetentionTime && compress == Compressing"  is complex.
Virtual Method Call from Constructor,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,JsonOperationContext,The constructor "JsonOperationContext" calls a virtual method "Reset".
Empty Catch Block,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,CleanupOldLogFiles,The method has an empty catch block.
Empty Catch Block,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,CleanupAlreadyCompressedLogFiles,The method has an empty catch block.
Empty Catch Block,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,BackgroundLoggerCompress,The method has an empty catch block.
Empty Catch Block,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,ActualWriteToLogTargets,The method has an empty catch block.
Empty Catch Block,Sparrow.Logging,LogInfo,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,LogInfo,The method has an empty catch block.
Empty Catch Block,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,RunLowMemoryHandlers,The method has an empty catch block.
Empty Catch Block,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,MonitorMemoryUsage,The method has an empty catch block.
Empty Catch Block,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,CheckMemoryStatus,The method has an empty catch block.
Empty Catch Block,Sparrow.Utils,NativeMemoryCleaner<TStack;TPooledItem>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\NativeMemoryCleaner.cs,CleanNativeMemory,The method has an empty catch block.
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,NumberOfSetBits,The following statement contains a magic number: i = (i & 0x3333333333333333) + ((i >> 2) & 0x3333333333333333);
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,NumberOfSetBits,The following statement contains a magic number: return (((i + (i >> 4)) & 0xF0F0F0F0F0F0F0F) * 0x101010101010101) >> 56;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,NumberOfSetBits,The following statement contains a magic number: return (((i + (i >> 4)) & 0xF0F0F0F0F0F0F0F) * 0x101010101010101) >> 56;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n |= n >> 2;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n |= n >> 4;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n |= n >> 8;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n |= n >> 16;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: return MultiplyDeBruijnBitPosition[(n * 0x07C4ACDDU) >> 27];
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n |= n >> 2;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n |= n >> 4;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n |= n >> 8;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n |= n >> 16;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: return MultiplyDeBruijnBitPosition[(uint)(n * 0x07C4ACDDU) >> 27];
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n >>= (1 << 5);
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: msb += (1 << 5);
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n >>= (1 << 4);
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: msb += (1 << 4);
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n |= n << 16;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n |= n << 32;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: t |= t << 15;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: t |= t << 30;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: t |= t << 60;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: return (int)((ulong)msb + (t >> 60));
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n >>= ( 1 << 5 );
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: msb += ( 1 << 5 );
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n >>= ( 1 << 4 );
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: msb += ( 1 << 4 );
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n |= n << 16;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: n |= n << 32;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: t |= t << 15;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: t |= t << 30;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: t |= t << 60;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,MostSignificantBit,The following statement contains a magic number: return (int)( msb + ( t >> 60 ) );
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,LeadingZeroes,The following statement contains a magic number: return 32;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,LeadingZeroes,The following statement contains a magic number: return 31 - MostSignificantBit(n);
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,LeadingZeroes,The following statement contains a magic number: return 32;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,LeadingZeroes,The following statement contains a magic number: return 31 - MostSignificantBit(n);
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,LeadingZeroes,The following statement contains a magic number: return 64;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,LeadingZeroes,The following statement contains a magic number: return 63 - MostSignificantBit(n);
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,LeadingZeroes,The following statement contains a magic number: return 64;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,LeadingZeroes,The following statement contains a magic number: return 63 - MostSignificantBit(n);
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,CeilLog2,The following statement contains a magic number: v |= v >> 2;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,CeilLog2,The following statement contains a magic number: v |= v >> 4;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,CeilLog2,The following statement contains a magic number: v |= v >> 8;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,CeilLog2,The following statement contains a magic number: v |= v >> 16;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,CeilLog2,The following statement contains a magic number: int pos = MultiplyDeBruijnBitPosition[(uint)(v * 0x07C4ACDDU) >> 27];
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,CeilLog2,The following statement contains a magic number: v |= v >> 2;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,CeilLog2,The following statement contains a magic number: v |= v >> 4;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,CeilLog2,The following statement contains a magic number: v |= v >> 8;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,CeilLog2,The following statement contains a magic number: v |= v >> 16;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,CeilLog2,The following statement contains a magic number: int pos = MultiplyDeBruijnBitPosition[(uint)(v * 0x07C4ACDDU) >> 27];
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,FloorLog2,The following statement contains a magic number: v |= v >> 2;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,FloorLog2,The following statement contains a magic number: v |= v >> 4;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,FloorLog2,The following statement contains a magic number: v |= v >> 8;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,FloorLog2,The following statement contains a magic number: v |= v >> 16;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,FloorLog2,The following statement contains a magic number: return MultiplyDeBruijnBitPosition[(uint)(v * 0x07C4ACDDU) >> 27];
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,FloorLog2,The following statement contains a magic number: v |= v >> 2;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,FloorLog2,The following statement contains a magic number: v |= v >> 4;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,FloorLog2,The following statement contains a magic number: v |= v >> 8;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,FloorLog2,The following statement contains a magic number: v |= v >> 16;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,FloorLog2,The following statement contains a magic number: return MultiplyDeBruijnBitPosition[(uint)(v * 0x07C4ACDDU) >> 27];
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,PowerOf2Internal,The following statement contains a magic number: v |= v >> 2;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,PowerOf2Internal,The following statement contains a magic number: v |= v >> 4;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,PowerOf2Internal,The following statement contains a magic number: v |= v >> 8;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,PowerOf2Internal,The following statement contains a magic number: v |= v >> 16;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,PowerOf2Internal,The following statement contains a magic number: v |= v >> 2;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,PowerOf2Internal,The following statement contains a magic number: v |= v >> 4;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,PowerOf2Internal,The following statement contains a magic number: v |= v >> 8;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,PowerOf2Internal,The following statement contains a magic number: v |= v >> 16;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,PowerOf2Internal,The following statement contains a magic number: v |= v >> 32;
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,RotateLeft32,The following statement contains a magic number: return (value << count) | (value >> (32 - count));
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,RotateRight32,The following statement contains a magic number: return (value >> count) | (value << (32 - count));
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,RotateLeft64,The following statement contains a magic number: return (value << count) | (value >> (64 - count));
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,RotateRight64,The following statement contains a magic number: return (value >> count) | (value << (64 - count));
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,SwapBytes,The following statement contains a magic number: return ((value & 0xff000000) >> 24) |                     ((value & 0x00ff0000) >> 8)  |                     ((value & 0x0000ff00) << 8)  |                     ((value & 0x000000ff) << 24);
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,SwapBytes,The following statement contains a magic number: return ((value & 0xff000000) >> 24) |                     ((value & 0x00ff0000) >> 8)  |                     ((value & 0x0000ff00) << 8)  |                     ((value & 0x000000ff) << 24);
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,SwapBytes,The following statement contains a magic number: return ((value & 0xff000000) >> 24) |                     ((value & 0x00ff0000) >> 8)  |                     ((value & 0x0000ff00) << 8)  |                     ((value & 0x000000ff) << 24);
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,SwapBytes,The following statement contains a magic number: return ((value & 0xff000000) >> 24) |                     ((value & 0x00ff0000) >> 8)  |                     ((value & 0x0000ff00) << 8)  |                     ((value & 0x000000ff) << 24);
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,SwapBytes,The following statement contains a magic number: return (((value & 0xff00000000000000UL) >> 56) |                      ((value & 0x00ff000000000000UL) >> 40) |                      ((value & 0x0000ff0000000000UL) >> 24) |                      ((value & 0x000000ff00000000UL) >> 8) |                      ((value & 0x00000000ff000000UL) << 8) |                      ((value & 0x0000000000ff0000UL) << 24) |                      ((value & 0x000000000000ff00UL) << 40) |                      ((value & 0x00000000000000ffUL) << 56));
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,SwapBytes,The following statement contains a magic number: return (((value & 0xff00000000000000UL) >> 56) |                      ((value & 0x00ff000000000000UL) >> 40) |                      ((value & 0x0000ff0000000000UL) >> 24) |                      ((value & 0x000000ff00000000UL) >> 8) |                      ((value & 0x00000000ff000000UL) << 8) |                      ((value & 0x0000000000ff0000UL) << 24) |                      ((value & 0x000000000000ff00UL) << 40) |                      ((value & 0x00000000000000ffUL) << 56));
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,SwapBytes,The following statement contains a magic number: return (((value & 0xff00000000000000UL) >> 56) |                      ((value & 0x00ff000000000000UL) >> 40) |                      ((value & 0x0000ff0000000000UL) >> 24) |                      ((value & 0x000000ff00000000UL) >> 8) |                      ((value & 0x00000000ff000000UL) << 8) |                      ((value & 0x0000000000ff0000UL) << 24) |                      ((value & 0x000000000000ff00UL) << 40) |                      ((value & 0x00000000000000ffUL) << 56));
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,SwapBytes,The following statement contains a magic number: return (((value & 0xff00000000000000UL) >> 56) |                      ((value & 0x00ff000000000000UL) >> 40) |                      ((value & 0x0000ff0000000000UL) >> 24) |                      ((value & 0x000000ff00000000UL) >> 8) |                      ((value & 0x00000000ff000000UL) << 8) |                      ((value & 0x0000000000ff0000UL) << 24) |                      ((value & 0x000000000000ff00UL) << 40) |                      ((value & 0x00000000000000ffUL) << 56));
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,SwapBytes,The following statement contains a magic number: return (((value & 0xff00000000000000UL) >> 56) |                      ((value & 0x00ff000000000000UL) >> 40) |                      ((value & 0x0000ff0000000000UL) >> 24) |                      ((value & 0x000000ff00000000UL) >> 8) |                      ((value & 0x00000000ff000000UL) << 8) |                      ((value & 0x0000000000ff0000UL) << 24) |                      ((value & 0x000000000000ff00UL) << 40) |                      ((value & 0x00000000000000ffUL) << 56));
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,SwapBytes,The following statement contains a magic number: return (((value & 0xff00000000000000UL) >> 56) |                      ((value & 0x00ff000000000000UL) >> 40) |                      ((value & 0x0000ff0000000000UL) >> 24) |                      ((value & 0x000000ff00000000UL) >> 8) |                      ((value & 0x00000000ff000000UL) << 8) |                      ((value & 0x0000000000ff0000UL) << 24) |                      ((value & 0x000000000000ff00UL) << 40) |                      ((value & 0x00000000000000ffUL) << 56));
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,SwapBytes,The following statement contains a magic number: return (((value & 0xff00000000000000UL) >> 56) |                      ((value & 0x00ff000000000000UL) >> 40) |                      ((value & 0x0000ff0000000000UL) >> 24) |                      ((value & 0x000000ff00000000UL) >> 8) |                      ((value & 0x00000000ff000000UL) << 8) |                      ((value & 0x0000000000ff0000UL) << 24) |                      ((value & 0x000000000000ff00UL) << 40) |                      ((value & 0x00000000000000ffUL) << 56));
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,SwapBytes,The following statement contains a magic number: return (((value & 0xff00000000000000UL) >> 56) |                      ((value & 0x00ff000000000000UL) >> 40) |                      ((value & 0x0000ff0000000000UL) >> 24) |                      ((value & 0x000000ff00000000UL) >> 8) |                      ((value & 0x00000000ff000000UL) << 8) |                      ((value & 0x0000000000ff0000UL) << 24) |                      ((value & 0x000000000000ff00UL) << 40) |                      ((value & 0x00000000000000ffUL) << 56));
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,TrailingZeroesInBytes,The following statement contains a magic number: return DeBruijnBytePos64[((value & (ulong)(-(long)value)) * 0x0218A392CDABBD3FUL) >> 58];
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,TrailingZeroesInBytes,The following statement contains a magic number: return DeBruijnBytePos64[((ulong)(value & -value) * 0x0218A392CDABBD3FUL) >> 58];
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,TrailingZeroesInBytes,The following statement contains a magic number: return DeBruijnBytePos32[((value & (uint)(-(int)value)) * 0x077CB531U) >> 27];
Magic Number,Sparrow.Binary,Bits,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Binary\Bits.cs,TrailingZeroesInBytes,The following statement contains a magic number: return DeBruijnBytePos32[((uint)(value & -value) * 0x077CB531U) >> 27];
Magic Number,Sparrow.Collections,FastList<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Collections\FastList.cs,EnsureCapacity,The following statement contains a magic number: int newCapacity = _items.Length == 0 ? DefaultCapacity : _items.Length * 2;
Magic Number,Sparrow.Collections,Enumerator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Collections\FastList.cs,Enumerator,The following statement contains a magic number: _index = -2;
Magic Number,Sparrow.Collections,Enumerator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Collections\FastList.cs,MoveNext,The following statement contains a magic number: _index == -2
Magic Number,Sparrow.Collections,Enumerator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Collections\FastList.cs,ThrowEnumerationNotStartedOrEnded,The following statement contains a magic number: Debug.Assert(_index == -1 || _index == -2);
Magic Number,Sparrow.Collections,Enumerator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Collections\FastList.cs,ThrowEnumerationNotStartedOrEnded,The following statement contains a magic number: throw new InvalidOperationException(_index == -2 ? "Enumeration has not started" : "Enumeration has already ended");
Magic Number,Sparrow.Collections,Enumerator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Collections\FastList.cs,Reset,The following statement contains a magic number: _index = -2;
Magic Number,Sparrow.Collections,FastStack<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Collections\FastStack.cs,CopyTo,The following statement contains a magic number: Array.Resize(ref _array' dstIndex + srcSize + 4 * DefaultCapacity);
Magic Number,Sparrow.Collections,FastStack<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Collections\FastStack.cs,PushUnlikely,The following statement contains a magic number: Array.Resize(ref _array' (_array.Length == 0) ? DefaultCapacity : 2 * _array.Length);
Magic Number,Sparrow.Collections,SingleConsumerRingBuffer<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Collections\RingBuffer.cs,SingleConsumerRingBuffer,The following statement contains a magic number: !Bits.IsPowerOfTwo(size) || size < 2
Magic Number,Sparrow,Metro128Hash,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ToByteArray,The following statement contains a magic number: var result = new byte[sizeof(ulong) * 2];
Magic Number,Sparrow,Metro128Hash,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,FromByteArray,The following statement contains a magic number: source.Length != sizeof(ulong) * 2
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: a ^= (a >> 47);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: b ^= (b >> 47);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: a ^= (a >> 47);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: b ^= (b >> 47);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = ~key + (key << 15);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key ^ (key >> 12);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key + (key << 2);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key ^ (key >> 4);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key * 2057;
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key ^ (key >> 16);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = (~key) + (key << 18);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key ^ (key >> 31);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key * 21;
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key ^ (key >> 11);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key + (key << 6);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key ^ (key >> 22);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = (~key) + (key << 18);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key ^ (key >> 31);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key * 21;
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key ^ (key >> 11);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key + (key << 6);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Mix,The following statement contains a magic number: key = key ^ (key >> 22);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: ulong key = ((ulong)upper << 32) | lower;
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: key = (~key) + (key << 18);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: key = key ^ (key >> 31);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: key = key * 21;
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: key = key ^ (key >> 11);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: key = key + (key << 6);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: key = key ^ (key >> 22);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: ulong key = (x << 32) | (uint)lower;
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: key = (~key) + (key << 18);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: key = key ^ (key >> 31);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: key = key * 21;
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: key = key ^ (key >> 11);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: key = key + (key << 6);
Magic Number,Sparrow,Hashing,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Combine,The following statement contains a magic number: key = key ^ (key >> 22);
Magic Number,Sparrow,OrdinalIgnoreCaseModifier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Modify,The following statement contains a magic number: ch >= 65 && ch <= 90
Magic Number,Sparrow,OrdinalIgnoreCaseModifier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Modify,The following statement contains a magic number: ch >= 65 && ch <= 90
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: byte* limit = bEnd - 16;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v3 += ((uint*)buffer)[2] * XXHash32Constants.PRIME32_2;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v4 += ((uint*)buffer)[3] * XXHash32Constants.PRIME32_2;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: buffer += 4 * sizeof(uint);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v1 = Bits.RotateLeft32(v1' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v2 = Bits.RotateLeft32(v2' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v3 = Bits.RotateLeft32(v3' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v4 = Bits.RotateLeft32(v4' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(v1' 1) + Bits.RotateLeft32(v2' 7) + Bits.RotateLeft32(v3' 12) + Bits.RotateLeft32(v4' 18);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(v1' 1) + Bits.RotateLeft32(v2' 7) + Bits.RotateLeft32(v3' 12) + Bits.RotateLeft32(v4' 18);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(v1' 1) + Bits.RotateLeft32(v2' 7) + Bits.RotateLeft32(v3' 12) + Bits.RotateLeft32(v4' 18);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: len >= 16
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(h32' 17) * XXHash32Constants.PRIME32_4;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: buffer += 4;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: buffer + 4 <= bEnd
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(h32' 11) * XXHash32Constants.PRIME32_1;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 ^= h32 >> 15;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 ^= h32 >> 13;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 ^= h32 >> 16;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: uint limit = len - 8;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v2 += CharToUInt32<TCharacterModifier>(buffer' position + 2) * XXHash32Constants.PRIME32_2;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v3 += CharToUInt32<TCharacterModifier>(buffer' position + 4) * XXHash32Constants.PRIME32_2;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v4 += CharToUInt32<TCharacterModifier>(buffer' position + 6) * XXHash32Constants.PRIME32_2;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: position += 8;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v1 = Bits.RotateLeft32(v1' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v2 = Bits.RotateLeft32(v2' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v3 = Bits.RotateLeft32(v3' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v4 = Bits.RotateLeft32(v4' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(v1' 1) + Bits.RotateLeft32(v2' 7) + Bits.RotateLeft32(v3' 12) + Bits.RotateLeft32(v4' 18);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(v1' 1) + Bits.RotateLeft32(v2' 7) + Bits.RotateLeft32(v3' 12) + Bits.RotateLeft32(v4' 18);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(v1' 1) + Bits.RotateLeft32(v2' 7) + Bits.RotateLeft32(v3' 12) + Bits.RotateLeft32(v4' 18);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: len >= 8
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(h32' 17) * XXHash32Constants.PRIME32_4;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: position += 2;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: position + 2 <= len
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 ^= h32 >> 15;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 ^= h32 >> 13;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 ^= h32 >> 16;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CharToUInt32,The following statement contains a magic number: return (uint)modifier.Modify(buffer[(int)position + 1]) << 16 | modifier.Modify(buffer[(int)position]);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: byte* limit = bEnd - 16;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: int iterations = Math.Min((int)((bEnd - buffer) / (4 * sizeof(uint)))' startFrom / (4 * sizeof(uint)));
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: int iterations = Math.Min((int)((bEnd - buffer) / (4 * sizeof(uint)))' startFrom / (4 * sizeof(uint)));
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: buffer += iterations * 4 * sizeof(uint);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: state.V1 = Bits.RotateLeft32(state.V1' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: state.V2 = Bits.RotateLeft32(state.V2' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: state.V3 = Bits.RotateLeft32(state.V3' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: state.V4 = Bits.RotateLeft32(state.V4' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(state.V1' 1) + Bits.RotateLeft32(state.V2' 7) + Bits.RotateLeft32(state.V3' 12) + Bits.RotateLeft32(state.V4' 18);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(state.V1' 1) + Bits.RotateLeft32(state.V2' 7) + Bits.RotateLeft32(state.V3' 12) + Bits.RotateLeft32(state.V4' 18);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(state.V1' 1) + Bits.RotateLeft32(state.V2' 7) + Bits.RotateLeft32(state.V3' 12) + Bits.RotateLeft32(state.V4' 18);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: len >= 16
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(h32' 17) * XXHash32Constants.PRIME32_4;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: buffer += 4;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: buffer + 4 <= bEnd
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(h32' 11) * XXHash32Constants.PRIME32_1;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 ^= h32 >> 15;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 ^= h32 >> 13;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h32 ^= h32 >> 16;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,PreprocessInline,The following statement contains a magic number: int iterations = (int)((bEnd - buffer) / (4 * sizeof(uint))) + 1;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,PreprocessInline,The following statement contains a magic number: v3 += ((uint*)buffer)[2] * XXHash32Constants.PRIME32_2;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,PreprocessInline,The following statement contains a magic number: v4 += ((uint*)buffer)[3] * XXHash32Constants.PRIME32_2;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,PreprocessInline,The following statement contains a magic number: buffer += 4 * sizeof(uint);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,PreprocessInline,The following statement contains a magic number: v1 = Bits.RotateLeft32(v1' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,PreprocessInline,The following statement contains a magic number: v2 = Bits.RotateLeft32(v2' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,PreprocessInline,The following statement contains a magic number: v3 = Bits.RotateLeft32(v3' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,PreprocessInline,The following statement contains a magic number: v4 = Bits.RotateLeft32(v4' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,PreprocessInline,The following statement contains a magic number: len >= 16
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v3 += ((uint*)buffer)[2] * XXHash32Constants.PRIME32_2;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v4 += ((uint*)buffer)[3] * XXHash32Constants.PRIME32_2;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: buffer += 4 * sizeof(uint);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v1 = Bits.RotateLeft32(v1' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v2 = Bits.RotateLeft32(v2' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v3 = Bits.RotateLeft32(v3' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v4 = Bits.RotateLeft32(v4' 13);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(v1' 1) + Bits.RotateLeft32(v2' 7) + Bits.RotateLeft32(v3' 12) + Bits.RotateLeft32(v4' 18);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(v1' 1) + Bits.RotateLeft32(v2' 7) + Bits.RotateLeft32(v3' 12) + Bits.RotateLeft32(v4' 18);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(v1' 1) + Bits.RotateLeft32(v2' 7) + Bits.RotateLeft32(v3' 12) + Bits.RotateLeft32(v4' 18);
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(h32' 17) * XXHash32Constants.PRIME32_4;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: buffer += 4;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: buffer + 4 <= bEnd
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h32 = Bits.RotateLeft32(h32' 11) * XXHash32Constants.PRIME32_1;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h32 ^= h32 >> 15;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h32 ^= h32 >> 13;
Magic Number,Sparrow,XXHash32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h32 ^= h32 >> 16;
Magic Number,Sparrow,JumpConsistentHash,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Calculate,The following statement contains a magic number: key = key * 2862933555777941757UL + 1;
Magic Number,Sparrow,JumpConsistentHash,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Calculate,The following statement contains a magic number: j = (long)((b + 1) * ((1L << 31) / ((double)(key >> 33) + 1)));
Magic Number,Sparrow,JumpConsistentHash,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,Calculate,The following statement contains a magic number: j = (long)((b + 1) * ((1L << 31) / ((double)(key >> 33) + 1)));
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: byte* limit = bEnd - 32;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v3 += ((ulong*)buffer)[2] * XXHash64Constants.PRIME64_2;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v4 += ((ulong*)buffer)[3] * XXHash64Constants.PRIME64_2;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: buffer += 4 * sizeof(ulong);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v1 = Bits.RotateLeft64(v1' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v2 = Bits.RotateLeft64(v2' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v3 = Bits.RotateLeft64(v3' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v4 = Bits.RotateLeft64(v4' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h64 = Bits.RotateLeft64(v1' 1) + Bits.RotateLeft64(v2' 7) + Bits.RotateLeft64(v3' 12) + Bits.RotateLeft64(v4' 18);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h64 = Bits.RotateLeft64(v1' 1) + Bits.RotateLeft64(v2' 7) + Bits.RotateLeft64(v3' 12) + Bits.RotateLeft64(v4' 18);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h64 = Bits.RotateLeft64(v1' 1) + Bits.RotateLeft64(v2' 7) + Bits.RotateLeft64(v3' 12) + Bits.RotateLeft64(v4' 18);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v1 = Bits.RotateLeft64(v1' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v2 = Bits.RotateLeft64(v2' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v3 = Bits.RotateLeft64(v3' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v4 = Bits.RotateLeft64(v4' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: len >= 32
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: k1 = Bits.RotateLeft64(k1' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h64 = Bits.RotateLeft64(h64' 27) * XXHash64Constants.PRIME64_1 + XXHash64Constants.PRIME64_4;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: buffer += 8;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: buffer + 8 <= bEnd
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h64 = Bits.RotateLeft64(h64' 23) * XXHash64Constants.PRIME64_2 + XXHash64Constants.PRIME64_3;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: buffer += 4;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: buffer + 4 <= bEnd
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h64 = Bits.RotateLeft64(h64' 11) * XXHash64Constants.PRIME64_1;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h64 ^= h64 >> 33;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h64 ^= h64 >> 29;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: h64 ^= h64 >> 32;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v3 += ((ulong*)buffer)[2] * XXHash64Constants.PRIME64_2;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v4 += ((ulong*)buffer)[3] * XXHash64Constants.PRIME64_2;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: buffer += 4 * sizeof(ulong);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v1 = Bits.RotateLeft64(v1' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v2 = Bits.RotateLeft64(v2' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v3 = Bits.RotateLeft64(v3' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v4 = Bits.RotateLeft64(v4' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h64 = Bits.RotateLeft64(v1' 1) + Bits.RotateLeft64(v2' 7) + Bits.RotateLeft64(v3' 12) + Bits.RotateLeft64(v4' 18);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h64 = Bits.RotateLeft64(v1' 1) + Bits.RotateLeft64(v2' 7) + Bits.RotateLeft64(v3' 12) + Bits.RotateLeft64(v4' 18);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h64 = Bits.RotateLeft64(v1' 1) + Bits.RotateLeft64(v2' 7) + Bits.RotateLeft64(v3' 12) + Bits.RotateLeft64(v4' 18);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v1 = Bits.RotateLeft64(v1' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v2 = Bits.RotateLeft64(v2' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v3 = Bits.RotateLeft64(v3' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v4 = Bits.RotateLeft64(v4' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: k1 = Bits.RotateLeft64(k1' 31);
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h64 = Bits.RotateLeft64(h64' 27) * XXHash64Constants.PRIME64_1 + XXHash64Constants.PRIME64_4;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: buffer += 8;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: buffer + 8 <= bEnd
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h64 = Bits.RotateLeft64(h64' 23) * XXHash64Constants.PRIME64_2 + XXHash64Constants.PRIME64_3;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: buffer += 4;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: buffer + 4 <= bEnd
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h64 = Bits.RotateLeft64(h64' 11) * XXHash64Constants.PRIME64_1;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h64 ^= h64 >> 33;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h64 ^= h64 >> 29;
Magic Number,Sparrow,XXHash64,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: h64 ^= h64 >> 32;
Magic Number,Sparrow,HashCombiner,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CombineInline,The following statement contains a magic number: uint shift5 = ((uint)x << 5) | ((uint)x >> 27);
Magic Number,Sparrow,HashCombiner,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CombineInline,The following statement contains a magic number: uint shift5 = ((uint)x << 5) | ((uint)x >> 27);
Magic Number,Sparrow,HashCombiner,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CombineInline,The following statement contains a magic number: uint shift5 = (x << 5) | (x >> 27);
Magic Number,Sparrow,HashCombiner,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CombineInline,The following statement contains a magic number: uint shift5 = (x << 5) | (x >> 27);
Magic Number,Sparrow,HashCombiner,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CombineInline,The following statement contains a magic number: ulong shift5 = (ux << 10) | (ux >> 54);
Magic Number,Sparrow,HashCombiner,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CombineInline,The following statement contains a magic number: ulong shift5 = (ux << 10) | (ux >> 54);
Magic Number,Sparrow,HashCombiner,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CombineInline,The following statement contains a magic number: ulong shift5 = (x << 10) | (x >> 54);
Magic Number,Sparrow,HashCombiner,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CombineInline,The following statement contains a magic number: ulong shift5 = (x << 10) | (x >> 54);
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v0 = Bits.RotateRight64(v0' 29) + v2;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v1 = Bits.RotateRight64(v1' 29) + v3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v2 += ((ulong*)ptr)[2] * Metro128Constants.K2;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v3 += ((ulong*)ptr)[3] * Metro128Constants.K3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v2 = Bits.RotateRight64(v2' 29) + v0;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v3 = Bits.RotateRight64(v3' 29) + v1;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: ptr += 4 * sizeof(ulong);
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v2 ^= Bits.RotateRight64(((v0 + v3) * Metro128Constants.K0) + v1' 21) * Metro128Constants.K1;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v3 ^= Bits.RotateRight64(((v1 + v2) * Metro128Constants.K1) + v0' 21) * Metro128Constants.K0;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v0 ^= Bits.RotateRight64(((v0 + v2) * Metro128Constants.K0) + v3' 21) * Metro128Constants.K1;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v1 ^= Bits.RotateRight64(((v1 + v3) * Metro128Constants.K1) + v2' 21) * Metro128Constants.K0;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: length >= 32
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v0 = Bits.RotateRight64(v0' 33) * Metro128Constants.K3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v1 = Bits.RotateRight64(v1' 33) * Metro128Constants.K3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: ptr += 2 * sizeof(ulong);
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v0 ^= Bits.RotateRight64((v0 * Metro128Constants.K2) + v1' 45) * Metro128Constants.K1;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v1 ^= Bits.RotateRight64((v1 * Metro128Constants.K3) + v0' 45) * Metro128Constants.K0;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: (end - ptr) >= 16
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v0 = Bits.RotateRight64(v0' 33) * Metro128Constants.K3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v0 ^= Bits.RotateRight64((v0 * Metro128Constants.K2) + v1' 27) * Metro128Constants.K1;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: (end - ptr) >= 8
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v1 = Bits.RotateRight64(v1' 33) * Metro128Constants.K3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v1 ^= Bits.RotateRight64((v1 * Metro128Constants.K3) + v0' 46) * Metro128Constants.K0;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: (end - ptr) >= 4
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v0 = Bits.RotateRight64(v0' 33) * Metro128Constants.K3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v0 ^= Bits.RotateRight64((v0 * Metro128Constants.K2) + v1' 22) * Metro128Constants.K1;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: (end - ptr) >= 2
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v1 = Bits.RotateRight64(v1' 33) * Metro128Constants.K3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v1 ^= Bits.RotateRight64((v1 * Metro128Constants.K3) + v0' 58) * Metro128Constants.K0;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v0 += Bits.RotateRight64((v0 * Metro128Constants.K0) + v1' 13);
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v1 += Bits.RotateRight64((v1 * Metro128Constants.K1) + v0' 37);
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v0 += Bits.RotateRight64((v0 * Metro128Constants.K2) + v1' 13);
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: v1 += Bits.RotateRight64((v1 * Metro128Constants.K3) + v0' 37);
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v0 = Bits.RotateRight64(v0' 29) + v2;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v1 = Bits.RotateRight64(v1' 29) + v3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v2 += ((ulong*)ptr)[2] * Metro128Constants.K2;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v3 += ((ulong*)ptr)[3] * Metro128Constants.K3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v2 = Bits.RotateRight64(v2' 29) + v0;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: v3 = Bits.RotateRight64(v3' 29) + v1;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,ProcessInline,The following statement contains a magic number: ptr <= (end - 32)
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v2 ^= Bits.RotateRight64(((v0 + v3) * Metro128Constants.K0) + v1' 21) * Metro128Constants.K1;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v3 ^= Bits.RotateRight64(((v1 + v2) * Metro128Constants.K1) + v0' 21) * Metro128Constants.K0;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v0 ^= Bits.RotateRight64(((v0 + v2) * Metro128Constants.K0) + v3' 21) * Metro128Constants.K1;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v1 ^= Bits.RotateRight64(((v1 + v3) * Metro128Constants.K1) + v2' 21) * Metro128Constants.K0;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v0 = Bits.RotateRight64(v0' 33) * Metro128Constants.K3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v1 = Bits.RotateRight64(v1' 33) * Metro128Constants.K3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: ptr += 2 * sizeof(ulong);
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v0 ^= Bits.RotateRight64((v0 * Metro128Constants.K2) + v1' 45) * Metro128Constants.K1;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v1 ^= Bits.RotateRight64((v1 * Metro128Constants.K3) + v0' 45) * Metro128Constants.K0;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: (end - ptr) >= 16
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v0 = Bits.RotateRight64(v0' 33) * Metro128Constants.K3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v0 ^= Bits.RotateRight64((v0 * Metro128Constants.K2) + v1' 27) * Metro128Constants.K1;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: (end - ptr) >= 8
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v1 = Bits.RotateRight64(v1' 33) * Metro128Constants.K3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v1 ^= Bits.RotateRight64((v1 * Metro128Constants.K3) + v0' 46) * Metro128Constants.K0;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: (end - ptr) >= 4
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v0 = Bits.RotateRight64(v0' 33) * Metro128Constants.K3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v0 ^= Bits.RotateRight64((v0 * Metro128Constants.K2) + v1' 22) * Metro128Constants.K1;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: (end - ptr) >= 2
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v1 = Bits.RotateRight64(v1' 33) * Metro128Constants.K3;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v1 ^= Bits.RotateRight64((v1 * Metro128Constants.K3) + v0' 58) * Metro128Constants.K0;
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v0 += Bits.RotateRight64((v0 * Metro128Constants.K0) + v1' 13);
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v1 += Bits.RotateRight64((v1 * Metro128Constants.K1) + v0' 37);
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v0 += Bits.RotateRight64((v0 * Metro128Constants.K2) + v1' 13);
Magic Number,Sparrow,Metro128,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,EndProcessInline,The following statement contains a magic number: v1 += Bits.RotateRight64((v1 * Metro128Constants.K3) + v0' 37);
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: uint high = (uint)(seed >> 32);
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: uint high = (uint)(seed >> 32);
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: uint high = (uint)(seed >> 32);
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: uint high = (uint)(seed >> 32);
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: uint high = (uint)(seed >> 32);
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: final = (final << 8) | ptr[2];
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: final = (final << 8) | ptr[2];
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: rest == 3
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: final = (final << 8) | ptr[1];
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: rest >= 2
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: final = (final << 8) | ptr[0];
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: uint high = (uint)(seed >> 32);
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: int len2 = len - 2;
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: position += 2;
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CalculateInline,The following statement contains a magic number: final = (final << 16) | modifier.Modify(buffer[position]);
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,CharToUInt32,The following statement contains a magic number: return (uint)modifier.Modify(buffer[position + 1]) << 16 | modifier.Modify(buffer[position]);
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,MarvinMix,The following statement contains a magic number: low = Bits.RotateLeft32(low' 20) + high;
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,MarvinMix,The following statement contains a magic number: high = Bits.RotateLeft32(high' 9) ^ low;
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,MarvinMix,The following statement contains a magic number: low = Bits.RotateLeft32(low' 27) + high;
Magic Number,Sparrow,Marvin32,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Hashing.cs,MarvinMix,The following statement contains a magic number: high = Bits.RotateLeft32(high' 19);
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: (size & 7) == 0
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: bpx += 4;
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: (size & 4) != 0
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: bpx += 2;
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: (size & 2) != 0
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: byte* loopEnd = end - 16;
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: bpx += 8;
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: *((ulong*)(bpx + 8)) != *(ulong*)(bpx + 8 + offset)
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: *((ulong*)(bpx + 8)) != *(ulong*)(bpx + 8 + offset)
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: bpx += 16;
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: size < 8
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: int l = size >> 3;
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: bpx += 4;
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: bpx += 2;
Magic Number,Sparrow,Memory,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Memory.cs,CompareInline,The following statement contains a magic number: (size & 2) != 0
Magic Number,Sparrow,Size,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Size.cs,ToString,The following statement contains a magic number: return $"{Math.Round(_valueInBytes / (double)OneTb' 4):#'#.####} TBytes";
Magic Number,Sparrow,Size,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Size.cs,ToString,The following statement contains a magic number: return $"{Math.Round(_valueInBytes / (double)OneGb' 3):#'#.###} GBytes";
Magic Number,Sparrow,Size,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Size.cs,ToString,The following statement contains a magic number: return $"{Math.Round(_valueInBytes / (double)OneMb' 2):#'#.##} MBytes";
Magic Number,Sparrow,Size,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Size.cs,ToString,The following statement contains a magic number: return $"{Math.Round(_valueInBytes / (double)OneKb' 2):#'#.##} KBytes";
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,Sort,The following statement contains a magic number: keys.Length < 2
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,Sort,The following statement contains a magic number: IntroSort(keys' 0' keys.Length - 1' 2 * Bits.FloorLog2(keys.Length));
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,Sort,The following statement contains a magic number: length < 2
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,Sort,The following statement contains a magic number: IntroSort(keys' index' length + index - 1' 2 * Bits.FloorLog2(keys.Length));
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,SwapIfGreaterWithItems3,The following statement contains a magic number: int times = b == c ? 3 : -1;
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,IntroSort,The following statement contains a magic number: int middle = (hi + lo) / 2;
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,IntroSort,The following statement contains a magic number: partitionSize >= 4
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,IntroSort,The following statement contains a magic number: int mid = partitionSize == 3 ? hi - 1 : hi;
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,IntroSort,The following statement contains a magic number: partitionSize >= 2
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,DownHeap,The following statement contains a magic number: int child = 2 * i;
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,DownHeap,The following statement contains a magic number: i <= n / 2
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,Sort,The following statement contains a magic number: keys.Length < 2
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,Sort,The following statement contains a magic number: IntroSort(keys' values' 0' keys.Length - 1' 2 * Bits.FloorLog2(keys.Length));
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,Sort,The following statement contains a magic number: length < 2
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,Sort,The following statement contains a magic number: IntroSort(keys' values' index' length + index - 1' 2 * Bits.FloorLog2(keys.Length));
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,SwapIfGreaterWithItems3,The following statement contains a magic number: int times = b == c ? 3 : -1;
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,IntroSort,The following statement contains a magic number: int middle = (hi + lo) / 2;
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,IntroSort,The following statement contains a magic number: partitionSize >= 4
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,IntroSort,The following statement contains a magic number: int mid = partitionSize == 3 ? hi - 1 : hi;
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,IntroSort,The following statement contains a magic number: partitionSize >= 2
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,DownHeap,The following statement contains a magic number: int child = 2 * i;
Magic Number,Sparrow,Sorter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Sorter.cs,DownHeap,The following statement contains a magic number: i <= n / 2
Magic Number,Sparrow,CaseInsensitiveStringSegmentEqualityComparer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\StringComparer.cs,GetHashCode,The following statement contains a magic number: IntPtr.Size == 4
Magic Number,Sparrow,OrdinalIgnoreCaseStringStructComparer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\StringComparer.cs,Equals,The following statement contains a magic number: xch >= 65 && xch <= 90
Magic Number,Sparrow,OrdinalIgnoreCaseStringStructComparer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\StringComparer.cs,Equals,The following statement contains a magic number: xch >= 65 && xch <= 90
Magic Number,Sparrow,OrdinalIgnoreCaseStringStructComparer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\StringComparer.cs,Equals,The following statement contains a magic number: ych >= 65 && ych <= 90
Magic Number,Sparrow,OrdinalIgnoreCaseStringStructComparer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\StringComparer.cs,Equals,The following statement contains a magic number: ych >= 65 && ych <= 90
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,MaximumOutputLength,The following statement contains a magic number: return size + (size / 255) + 16;
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,MaximumOutputLength,The following statement contains a magic number: return size + (size / 255) + 16;
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The following statement contains a magic number: do                      {                          int h = forwardH;                          ip = forwardIp;                          forwardIp += step;                          step = (searchMatchNb++ >> LZ4_skipTrigger);                            if (forwardIp > mflimit)                              goto _last_literals;                            match = LZ4_getPositionOnHash<TTableType>(h' ctx' @base);                          if (typeof(TDictionaryType) == typeof(UsingExtDict))                          {                              if (match < source)                              {                                  refDelta = dictDelta;                                  lowLimit = dictionary;                              }                              else                              {                                  refDelta = 0;                                  lowLimit = source;                              }                          }                            if (typeof(TTableType) == typeof(ByU16))                          {                              ulong value = *((ulong*)forwardIp) * prime5bytes >> (40 - ByU16HashLog);                              forwardH = (int)(value & ByU16HashMask);                              ((ushort*)ctx->hashTable)[h] = (ushort)(ip - @base);                          }                          else if (typeof(TTableType) == typeof(ByU32))                          {                              ulong value = (*((ulong*)forwardIp) * prime5bytes >> (40 - ByU32HashLog));                              forwardH = (int)(value & ByU32HashMask);                              ctx->hashTable[h] = (int)(ip - @base);                          }                          else throw new NotSupportedException("TTableType directive is not supported.");                      }                      while (((typeof(TDictionaryType) == typeof(DictSmall)) ? (match < lowRefLimit) : false) ||                             ((typeof(TTableType) == typeof(ByU16)) ? false : (match + MAX_DISTANCE < ip)) ||                             (*(uint*)(match + refDelta) != *((uint*)ip)));
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The following statement contains a magic number: do                      {                          int h = forwardH;                          ip = forwardIp;                          forwardIp += step;                          step = (searchMatchNb++ >> LZ4_skipTrigger);                            if (forwardIp > mflimit)                              goto _last_literals;                            match = LZ4_getPositionOnHash<TTableType>(h' ctx' @base);                          if (typeof(TDictionaryType) == typeof(UsingExtDict))                          {                              if (match < source)                              {                                  refDelta = dictDelta;                                  lowLimit = dictionary;                              }                              else                              {                                  refDelta = 0;                                  lowLimit = source;                              }                          }                            if (typeof(TTableType) == typeof(ByU16))                          {                              ulong value = *((ulong*)forwardIp) * prime5bytes >> (40 - ByU16HashLog);                              forwardH = (int)(value & ByU16HashMask);                              ((ushort*)ctx->hashTable)[h] = (ushort)(ip - @base);                          }                          else if (typeof(TTableType) == typeof(ByU32))                          {                              ulong value = (*((ulong*)forwardIp) * prime5bytes >> (40 - ByU32HashLog));                              forwardH = (int)(value & ByU32HashMask);                              ctx->hashTable[h] = (int)(ip - @base);                          }                          else throw new NotSupportedException("TTableType directive is not supported.");                      }                      while (((typeof(TDictionaryType) == typeof(DictSmall)) ? (match < lowRefLimit) : false) ||                             ((typeof(TTableType) == typeof(ByU16)) ? false : (match + MAX_DISTANCE < ip)) ||                             (*(uint*)(match + refDelta) != *((uint*)ip)));
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The following statement contains a magic number: *op++ = 255;
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The following statement contains a magic number: *(ushort*)op = (255 << 8 | 255);
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The following statement contains a magic number: *(ushort*)op = (255 << 8 | 255);
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The following statement contains a magic number: *(ushort*)op = (255 << 8 | 255);
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The following statement contains a magic number: matchLength -= 255;
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The following statement contains a magic number: *op++ = 255;
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The following statement contains a magic number: LZ4_putPosition<TTableType>(ip - 2' ctx' @base);
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The following statement contains a magic number: (typeof(TLimited) == typeof(LimitedOutput)) && ((op - dest) + lastRun + 1 + ((lastRun + 255 - RUN_MASK) / 255) > maxOutputSize)
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The following statement contains a magic number: (typeof(TLimited) == typeof(LimitedOutput)) && ((op - dest) + lastRun + 1 + ((lastRun + 255 - RUN_MASK) / 255) > maxOutputSize)
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The following statement contains a magic number: *op++ = 255;
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_compress_generic,The following statement contains a magic number: accumulator >= 255
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_count,The following statement contains a magic number: (pIn < (pInLimit - 3)) && (*((uint*)pMatch) == *((uint*)(pIn)))
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_hashPosition,The following statement contains a magic number: ulong value = *((ulong*)sequence) * prime5bytes >> (40 - ByU16HashLog);
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The following statement contains a magic number: bool checkOffset = ((typeof(TEndCondition) == typeof(EndOnInputSize)) && (dictSize < 64 * Constants.Size.Kilobyte));
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The following statement contains a magic number: ((typeof(TEndCondition) == typeof(EndOnInputSize)) && ((cpy > (typeof(TEarlyEnd) == typeof(Partial) ? oexit : oend - MFLIMIT)) || (ip + length > iend - (2 + 1 + LASTLITERALS))))                      || ((typeof(TEndCondition) == typeof(EndOnOutputSize)) && (cpy > oend - COPYLENGTH))
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The following statement contains a magic number: op[2] = match[2];
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The following statement contains a magic number: op[2] = match[2];
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The following statement contains a magic number: op[3] = match[3];
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The following statement contains a magic number: op[3] = match[3];
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The following statement contains a magic number: *((uint*)(op + 4)) = *(uint*)match;
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The following statement contains a magic number: op += 8;
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The following statement contains a magic number: (op - match) < 8
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The following statement contains a magic number: WildCopy(op' match' (oend - 8));
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The following statement contains a magic number: match += (oend - 8) - op;
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The following statement contains a magic number: op = oend - 8;
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The following statement contains a magic number: op < oend - 8
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,LZ4_decompress_generic,The following statement contains a magic number: cpy > oend - 12
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,WildCopy,The following statement contains a magic number: dest + 2 * sizeof(ulong) >= destEnd
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,WildCopy,The following statement contains a magic number: ((ulong*)dest)[2] = ((ulong*)src)[2];
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,WildCopy,The following statement contains a magic number: ((ulong*)dest)[2] = ((ulong*)src)[2];
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,WildCopy,The following statement contains a magic number: dest + 3 * sizeof(ulong) >= destEnd
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,WildCopy,The following statement contains a magic number: ((ulong*)dest)[3] = ((ulong*)src)[3];
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,WildCopy,The following statement contains a magic number: ((ulong*)dest)[3] = ((ulong*)src)[3];
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,WildCopy,The following statement contains a magic number: dest += 4 * sizeof(ulong);
Magic Number,Sparrow.Compression,LZ4,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\LZ4.cs,WildCopy,The following statement contains a magic number: src +=  4 * sizeof(ulong);
Magic Number,Sparrow.Compression,SmallStringCompression,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\SmallStringCompression.cs,SmallStringCompression,The following statement contains a magic number: termsTable.Length + 8 > byte.MaxValue
Magic Number,Sparrow.Compression,SmallStringCompression,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\SmallStringCompression.cs,SmallStringCompression,The following statement contains a magic number: _maxVerbatimLen = Math.Min(byte.MaxValue - termsTable.Length' 48);
Magic Number,Sparrow.Compression,SmallStringCompression,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\SmallStringCompression.cs,SmallStringCompression,The following statement contains a magic number: var ptr = (byte*)NativeMemory.AllocateMemory(byteCount + 2);
Magic Number,Sparrow.Compression,SmallStringCompression,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\SmallStringCompression.cs,AddToHash,The following statement contains a magic number: int h = ptr[1] << 3;
Magic Number,Sparrow.Compression,SmallStringCompression,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\SmallStringCompression.cs,AddToHash,The following statement contains a magic number: h += ptr[2];
Magic Number,Sparrow.Compression,SmallStringCompression,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\SmallStringCompression.cs,AddToHash,The following statement contains a magic number: byteCount == 2
Magic Number,Sparrow.Compression,SmallStringCompression,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\SmallStringCompression.cs,AddToHash,The following statement contains a magic number: h ^= ptr[3];
Magic Number,Sparrow.Compression,SmallStringCompression,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\SmallStringCompression.cs,Compress,The following statement contains a magic number: h1 = input[i] << 3;
Magic Number,Sparrow.Compression,SmallStringCompression,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\SmallStringCompression.cs,Compress,The following statement contains a magic number: h3 = h2 ^ input[i + 2];
Magic Number,Sparrow.Compression,SmallStringCompression,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\SmallStringCompression.cs,Compress,The following statement contains a magic number: i + 2 < inputLen
Magic Number,Sparrow.Compression,SmallStringCompression,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Compression\SmallStringCompression.cs,Compress,The following statement contains a magic number: switch (size)                      {                          case 1: slot = _hashTable[h1 % _hashTable.Length]; break;                          case 2: slot = _hashTable[h2 % _hashTable.Length]; break;                          default: slot = _hashTable[h3 % _hashTable.Length]; break;                      }
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsCache,The following statement contains a magic number: var c = new char[10000][];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsCache,The following statement contains a magic number: c[i] = new[]                  {                      (char) (i/1000 + '0')'                      (char) ((i%1000)/100 + '0')'                      (char) ((i%100)/10 + '0')'                      (char) (i%10 + '0')                  };
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsCache,The following statement contains a magic number: c[i] = new[]                  {                      (char) (i/1000 + '0')'                      (char) ((i%1000)/100 + '0')'                      (char) ((i%100)/10 + '0')'                      (char) (i%10 + '0')                  };
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsCache,The following statement contains a magic number: c[i] = new[]                  {                      (char) (i/1000 + '0')'                      (char) ((i%1000)/100 + '0')'                      (char) ((i%100)/10 + '0')'                      (char) (i%10 + '0')                  };
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsCache,The following statement contains a magic number: c[i] = new[]                  {                      (char) (i/1000 + '0')'                      (char) ((i%1000)/100 + '0')'                      (char) ((i%100)/10 + '0')'                      (char) (i%10 + '0')                  };
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsCache,The following statement contains a magic number: c[i] = new[]                  {                      (char) (i/1000 + '0')'                      (char) ((i%1000)/100 + '0')'                      (char) ((i%100)/10 + '0')'                      (char) (i%10 + '0')                  };
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsCache,The following statement contains a magic number: c[i] = new[]                  {                      (char) (i/1000 + '0')'                      (char) ((i%1000)/100 + '0')'                      (char) ((i%100)/10 + '0')'                      (char) (i%10 + '0')                  };
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsCache,The following statement contains a magic number: i < 10000
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsByteCache,The following statement contains a magic number: var c = new byte[10000][];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsByteCache,The following statement contains a magic number: c[i] = new[]                  {                      (byte) (i/1000 + '0')'                      (byte) ((i%1000)/100 + '0')'                      (byte) ((i%100)/10 + '0')'                      (byte) (i%10 + '0')                  };
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsByteCache,The following statement contains a magic number: c[i] = new[]                  {                      (byte) (i/1000 + '0')'                      (byte) ((i%1000)/100 + '0')'                      (byte) ((i%100)/10 + '0')'                      (byte) (i%10 + '0')                  };
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsByteCache,The following statement contains a magic number: c[i] = new[]                  {                      (byte) (i/1000 + '0')'                      (byte) ((i%1000)/100 + '0')'                      (byte) ((i%100)/10 + '0')'                      (byte) (i%10 + '0')                  };
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsByteCache,The following statement contains a magic number: c[i] = new[]                  {                      (byte) (i/1000 + '0')'                      (byte) ((i%1000)/100 + '0')'                      (byte) ((i%100)/10 + '0')'                      (byte) (i%10 + '0')                  };
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsByteCache,The following statement contains a magic number: c[i] = new[]                  {                      (byte) (i/1000 + '0')'                      (byte) ((i%1000)/100 + '0')'                      (byte) ((i%100)/10 + '0')'                      (byte) (i%10 + '0')                  };
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsByteCache,The following statement contains a magic number: c[i] = new[]                  {                      (byte) (i/1000 + '0')'                      (byte) ((i%1000)/100 + '0')'                      (byte) ((i%100)/10 + '0')'                      (byte) (i%10 + '0')                  };
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,CreateFourDigitsByteCache,The following statement contains a magic number: i < 10000
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: y100 = 3;
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: y100 == 4
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: y1 = 3;
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: y1 == 4
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: var year = y400 * 400 + y100 * 100 + y4 * 4 + y1 + 1;
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: var year = y400 * 400 + y100 * 100 + y4 * 4 + y1 + 1;
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: var year = y400 * 400 + y100 * 100 + y4 * 4 + y1 + 1;
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: bool leapYear = y1 == 3 && (y4 != 24 || y100 == 3);
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: bool leapYear = y1 == 3 && (y4 != 24 || y100 == 3);
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: bool leapYear = y1 == 3 && (y4 != 24 || y100 == 3);
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: int month = n >> 5 + 1;
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[2] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[2] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[3] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[3] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[4] = '-';
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[5] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[5] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[5 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[5 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[7] = '-';
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[8] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[8] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[8 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[8 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[10] = 'T';
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: v = _fourDigits[(ticks / TicksPerHour) % 24];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[11] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[11] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[11 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[11 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[13] = ':';
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: v = _fourDigits[(ticks / TicksPerMinute) % 60];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[14] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[14] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[14 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[14 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[16] = ':';
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: v = _fourDigits[(ticks / TicksPerSecond) % 60];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[17] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[17] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[17 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[17 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[19] = '.';
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: long fraction = (ticks % 10000000);
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: v = _fourDigits[fraction / 10000];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[20] = v[1];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[21] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[21] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[22] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[22] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: fraction = fraction % 10000;
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[23] = v[0];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[24] = v[1];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[25] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[25] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[26] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[26] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: y100 = 3;
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: y100 == 4
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: y1 = 3;
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: y1 == 4
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: var year = y400 * 400 + y100 * 100 + y4 * 4 + y1 + 1;
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: var year = y400 * 400 + y100 * 100 + y4 * 4 + y1 + 1;
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: var year = y400 * 400 + y100 * 100 + y4 * 4 + y1 + 1;
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: bool leapYear = y1 == 3 && (y4 != 24 || y100 == 3);
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: bool leapYear = y1 == 3 && (y4 != 24 || y100 == 3);
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: bool leapYear = y1 == 3 && (y4 != 24 || y100 == 3);
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: int month = n >> 5 + 1;
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[2] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[2] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[3] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[3] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[4] = (byte)'-';
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[5] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[5] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[5 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[5 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[7] = (byte)'-';
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[8] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[8] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[8 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[8 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[10] = (byte)'T';
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: v = _fourDigitsByte[(ticks / TicksPerHour) % 24];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[11] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[11] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[11 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[11 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[13] = (byte)':';
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: v = _fourDigitsByte[(ticks / TicksPerMinute) % 60];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[14] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[14] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[14 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[14 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[16] = (byte)':';
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: v = _fourDigitsByte[(ticks / TicksPerSecond) % 60];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[17] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[17] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[17 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[17 + 1] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[19] = (byte)'.';
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: long fraction = (ticks % 10000000);
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: v = _fourDigitsByte[fraction / 10000];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[20] = v[1];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[21] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[21] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[22] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[22] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: fraction = fraction % 10000;
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[23] = v[0];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[24] = v[1];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[25] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[25] = v[2];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[26] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ProcessDefaultRavenFormat,The following statement contains a magic number: chars[26] = v[3];
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,GetDefaultRavenFormat,The following statement contains a magic number: string result = new string('Z'' 27 + (isUtc ? 1 : 0));
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,GetDefaultRavenFormat,The following statement contains a magic number: int size = 27 + (isUtc ? 1 : 0);
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,GetDefaultRavenFormat,The following statement contains a magic number: int size = 27 + (isUtc ? 1 : 0);
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ParseDateMicrosoft,The following statement contains a magic number: var value = text.Substring(6' text.Length - 8);
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ParseDateMicrosoft,The following statement contains a magic number: var value = text.Substring(6' text.Length - 8);
Magic Number,Sparrow.Extensions,RavenDateTimeExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\RavenDateTimeExtensions.cs,ConvertJavaScriptTicksToDateTime,The following statement contains a magic number: var dateTime = new DateTime((javaScriptTicks * 10000) + InitialJavaScriptDateTicks' DateTimeKind.Utc);
Magic Number,Sparrow.Extensions,StringExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Extensions\StringExtensions.cs,GetUtf8MaxSize,The following statement contains a magic number: int result = ascii + nonAscii * 4;
Magic Number,Sparrow.Json,ArenaMemoryAllocator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\ArenaMemoryAllocator.cs,GetPreferredSize,The following statement contains a magic number: return ApplyLimit(Math.Max(Bits.PowerOf2(requestedSize) * 3' _initialSize));
Magic Number,Sparrow.Json,ArenaMemoryAllocator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\ArenaMemoryAllocator.cs,ResetArena,The following statement contains a magic number: _allocated = Math.Max(_allocated / 2' _initialSize);
Magic Number,Sparrow.Json,ArenaMemoryAllocator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\ArenaMemoryAllocator.cs,ResetArena,The following statement contains a magic number: _allocated / 2 > _used && _allocated > _initialSize * 2
Magic Number,Sparrow.Json,ArenaMemoryAllocator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\ArenaMemoryAllocator.cs,ResetArena,The following statement contains a magic number: _allocated / 2 > _used && _allocated > _initialSize * 2
Magic Number,Sparrow.Json,BlittableJsonReaderBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderBase.cs,ReadNumber,The following statement contains a magic number: returnValue |= *(value + 1) << 8;
Magic Number,Sparrow.Json,BlittableJsonReaderBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderBase.cs,ReadNumber,The following statement contains a magic number: returnValue |= *(short*)(value + 2) << 16;
Magic Number,Sparrow.Json,BlittableJsonReaderBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderBase.cs,ReadNumber,The following statement contains a magic number: returnValue |= *(short*)(value + 2) << 16;
Magic Number,Sparrow.Json,BlittableJsonReaderBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderBase.cs,ReadVariableSizeInt,The following statement contains a magic number: shift == 35
Magic Number,Sparrow.Json,BlittableJsonReaderBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderBase.cs,ReadVariableSizeInt,The following statement contains a magic number: shift += 7;
Magic Number,Sparrow.Json,BlittableJsonReaderBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderBase.cs,ReadVariableSizeIntInReverse,The following statement contains a magic number: shift == 35
Magic Number,Sparrow.Json,BlittableJsonReaderBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderBase.cs,ReadVariableSizeIntInReverse,The following statement contains a magic number: shift += 7;
Magic Number,Sparrow.Json,BlittableJsonReaderBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderBase.cs,ReadVariableSizeLong,The following statement contains a magic number: shift == 70
Magic Number,Sparrow.Json,BlittableJsonReaderBase,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderBase.cs,ReadVariableSizeLong,The following statement contains a magic number: shift += 7;
Magic Number,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,BlittableJsonReaderObject,The following statement contains a magic number: var propOffsetStart = _size - 2;
Magic Number,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,GetPropertyIndex,The following statement contains a magic number: int mid = (min + max) / 2;
Magic Number,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,GetPropertyIndex,The following statement contains a magic number: mid = (min + max) / 2;
Magic Number,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,StringValidation,The following statement contains a magic number: switch (escChar)                      {                          case '\\':                          case '/':                          case '"':                          case '\b':                          case '\f':                          case '\n':                          case '\r':                          case '\t':                              break;                          default:                              if (escChar >= 32)                                  throw new InvalidDataException("String not valid' invalid escape character: " + escChar);                              break;                      }
Magic Number,Sparrow.Json,AsyncBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,MaybeOuterFlushAsync,The following statement contains a magic number: innerStream.Length * 2 <= innerStream.Capacity
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,AbstractBlittableJsonTextWriter,The following statement contains a magic number: ControlCodeEscapes = new byte[32][];
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,AbstractBlittableJsonTextWriter,The following statement contains a magic number: i < 32
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,AbstractBlittableJsonTextWriter,The following statement contains a magic number: EscapeCharacters = new byte[256];
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,AbstractBlittableJsonTextWriter,The following statement contains a magic number: i < 32
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,AbstractBlittableJsonTextWriter,The following statement contains a magic number: EscapeCharacters[i] = 255;
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,AbstractBlittableJsonTextWriter,The following statement contains a magic number: _parserAuxiliarMemory = context.GetMemory(32);
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteString,The following statement contains a magic number: const int NumberOfQuotesChars = 2;
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteString,The following statement contains a magic number: int bufferSize = 2 * numberOfEscapeSequences + size + NumberOfQuotesChars;
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,UnlikelyWriteEscapeSequences,The following statement contains a magic number: int bufferSize = 2 * numberOfEscapeSequences + size + 1;
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteEscapeCharacter,The following statement contains a magic number: EnsureBuffer(6);
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteEscapeCharacter,The following statement contains a magic number: Memory.Copy(buffer + _pos' esc' 4);
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteEscapeCharacter,The following statement contains a magic number: _pos += 4;
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteEscapeCharacter,The following statement contains a magic number: EnsureBuffer(2);
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteEscapeCharacter,The following statement contains a magic number: r != 255
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteString,The following statement contains a magic number: int bufferSize = 2 * numberOfEscapeSequences + size + 2;
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteString,The following statement contains a magic number: int bufferSize = 2 * numberOfEscapeSequences + size + 2;
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteRawStringWhichMustBeWithoutEscapeChars,The following statement contains a magic number: EnsureBuffer(size + 2);
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteNull,The following statement contains a magic number: EnsureBuffer(4);
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteNull,The following statement contains a magic number: i < 4
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteBool,The following statement contains a magic number: EnsureBuffer(5);
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteInteger,The following statement contains a magic number: var v = val % 10;
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteInteger,The following statement contains a magic number: val /= 10;
Magic Number,Sparrow.Json,AbstractBlittableJsonTextWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonTextWriter.cs,WriteNewLine,The following statement contains a magic number: EnsureBuffer(2);
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,BlittableWriter,The following statement contains a magic number: _innerBuffer = _context.GetMemory(32);
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,BlittableWriter,The following statement contains a magic number: _innerBuffer = _context.GetMemory(32);
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,ResetAndRenew,The following statement contains a magic number: _innerBuffer = _context.GetMemory(32);
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteNumber,The following statement contains a magic number: _unmanagedWriteBuffer.WriteByte((byte)(value >> 8));
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteNumber,The following statement contains a magic number: _unmanagedWriteBuffer.WriteByte((byte)(value >> 16));
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteNumber,The following statement contains a magic number: _unmanagedWriteBuffer.WriteByte((byte)(value >> 24));
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteVariableSizeLong,The following statement contains a magic number: var v = (ulong)((value << 1) ^ (value >> 63));
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteVariableSizeLong,The following statement contains a magic number: v >>= 7;
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteVariableSizeInt,The following statement contains a magic number: v >>= 7;
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteVariableSizeIntInReverse,The following statement contains a magic number: v >>= 7;
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteValue,The following statement contains a magic number: int maxGoodCompressionSize = size - sizeof(int) * 2;
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteValue,The following statement contains a magic number: int maxGoodCompressionSize = size - sizeof(int) * 2;
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,WriteValue,The following statement contains a magic number: int maxGoodCompressionSize = size - sizeof(int) * 2;
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,TryCompressValue,The following statement contains a magic number: bool shouldCompress = initialCompressedSize.HasValue ||                                    (((mode & UsageMode.CompressStrings) == UsageMode.CompressStrings) && (size > 128)) ||                                    ((mode & UsageMode.CompressSmallStrings) == UsageMode.CompressSmallStrings) && (size <= 128);
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,TryCompressValue,The following statement contains a magic number: bool shouldCompress = initialCompressedSize.HasValue ||                                    (((mode & UsageMode.CompressStrings) == UsageMode.CompressStrings) && (size > 128)) ||                                    ((mode & UsageMode.CompressSmallStrings) == UsageMode.CompressSmallStrings) && (size <= 128);
Magic Number,Sparrow.Json,BlittableWriter<TWriter>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableWriter.cs,CompressBuffer,The following statement contains a magic number: size > 128
Magic Number,Sparrow.Json,JsonContextPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonContextPool.cs,CreateContext,The following statement contains a magic number: return new JsonOperationContext(4096' 16 * 1024' LowMemoryFlag);
Magic Number,Sparrow.Json,JsonContextPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonContextPool.cs,CreateContext,The following statement contains a magic number: return new JsonOperationContext(4096' 16 * 1024' LowMemoryFlag);
Magic Number,Sparrow.Json,JsonContextPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonContextPool.cs,CreateContext,The following statement contains a magic number: return new JsonOperationContext(4096' 16 * 1024' LowMemoryFlag);
Magic Number,Sparrow.Json,JsonContextPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonContextPool.cs,CreateContext,The following statement contains a magic number: return new JsonOperationContext(32*1024' 16*1024' LowMemoryFlag);
Magic Number,Sparrow.Json,JsonContextPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonContextPool.cs,CreateContext,The following statement contains a magic number: return new JsonOperationContext(32*1024' 16*1024' LowMemoryFlag);
Magic Number,Sparrow.Json,JsonContextPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonContextPool.cs,CreateContext,The following statement contains a magic number: return new JsonOperationContext(32*1024' 16*1024' LowMemoryFlag);
Magic Number,Sparrow.Json,JsonContextPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonContextPool.cs,CreateContext,The following statement contains a magic number: return new JsonOperationContext(32*1024' 16*1024' LowMemoryFlag);
Magic Number,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ReleasePathCache,The following statement contains a magic number: _numberOfAllocatedPathCaches < _allocatePathCaches.Length - 1 && pathCache.Count < 256
Magic Number,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,AllocateStringValue,The following statement contains a magic number: _numberOfAllocatedStringsValues < 32 * 1_024
Magic Number,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ShortTermSingleUse,The following statement contains a magic number: return new JsonOperationContext(4096' 1024' SharedMultipleUseFlag.None);
Magic Number,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ShortTermSingleUse,The following statement contains a magic number: return new JsonOperationContext(4096' 1024' SharedMultipleUseFlag.None);
Magic Number,Sparrow.Json,JsonOperationContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,ParseBufferToArray,The following statement contains a magic number: var maxChars = buffer.Length / 8;
Magic Number,Sparrow.Json,ManagedPinnedBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,CreateSmallBuffers,The following statement contains a magic number: Debug.Assert(Size * 8 > 80 * 1024);
Magic Number,Sparrow.Json,ManagedPinnedBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,CreateSmallBuffers,The following statement contains a magic number: Debug.Assert(Size * 8 > 80 * 1024);
Magic Number,Sparrow.Json,ManagedPinnedBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,CreateSmallBuffers,The following statement contains a magic number: Debug.Assert(Size * 8 > 80 * 1024);
Magic Number,Sparrow.Json,ManagedPinnedBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,CreateSmallBuffers,The following statement contains a magic number: var buffer = new byte[Size * 8];
Magic Number,Sparrow.Json,ManagedPinnedBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,CreateSmallBuffers,The following statement contains a magic number: i < 7
Magic Number,Sparrow.Json,ManagedPinnedBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\JsonOperationContext.cs,CreateSmallBuffers,The following statement contains a magic number: return new BufferSegment                  {                      Array = buffer'                      Count = Size'                      Offset = Size * 7'                  };
Magic Number,Sparrow.Json,LazyCompressedStringValue,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyCompressedStringValue.cs,DecompressToBuffer,The following statement contains a magic number: UncompressedSize > 128
Magic Number,Sparrow.Json,LazyCompressedStringValue,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyCompressedStringValue.cs,GetHashCode,The following statement contains a magic number: IntPtr.Size == 4
Magic Number,Sparrow.Json,LazyNumberValue,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyNumberValue.cs,Equals,The following statement contains a magic number: obj is LazyStringValue l &&                  l.Length == 3
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,LazyStringParser,The following statement contains a magic number: shift1 = (int*)NativeMemory.AllocateMemory(256 * sizeof(int));
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,LazyStringParser,The following statement contains a magic number: i < 256
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,LazyStringParser,The following statement contains a magic number: shift10 = (int*)NativeMemory.AllocateMemory(256 * sizeof(int));
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,LazyStringParser,The following statement contains a magic number: shift10[i] = 10 * (int)(i - '0');
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,LazyStringParser,The following statement contains a magic number: i < 256
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,LazyStringParser,The following statement contains a magic number: shift100 = (int*)NativeMemory.AllocateMemory(256 * sizeof(int));
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,LazyStringParser,The following statement contains a magic number: shift100[i] = 100 * (int)(i - '0');
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,LazyStringParser,The following statement contains a magic number: i < 256
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,LazyStringParser,The following statement contains a magic number: shift1000 = (int*)NativeMemory.AllocateMemory(256 * sizeof(int));
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,LazyStringParser,The following statement contains a magic number: shift1000[i] = 1000 * (int)(i - '0');
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,LazyStringParser,The following statement contains a magic number: i < 256
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,DateToTicks,The following statement contains a magic number: int n = y * 365 + y / 4 - y / 100 + y / 400 + days[month - 1] + day - 1;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,DateToTicks,The following statement contains a magic number: int n = y * 365 + y / 4 - y / 100 + y / 400 + days[month - 1] + day - 1;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,DateToTicks,The following statement contains a magic number: int n = y * 365 + y / 4 - y / 100 + y / 400 + days[month - 1] + day - 1;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,DateToTicks,The following statement contains a magic number: int n = y * 365 + y / 4 - y / 100 + y / 400 + days[month - 1] + day - 1;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,DateToTicks,The following statement contains a magic number: year >= 1 && year <= 9999 && month >= 1 && month <= 12
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,DateToTicks,The following statement contains a magic number: year >= 1 && year <= 9999 && month >= 1 && month <= 12
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,DateToTicks,The following statement contains a magic number: long totalSeconds = (long)hour * 3600 + (long)minute * 60 + (long)second;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,DateToTicks,The following statement contains a magic number: long totalSeconds = (long)hour * 3600 + (long)minute * 60 + (long)second;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: len < 8
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: len < indexOfDays + 1 + 8
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: len > 8
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: buffer[2] != ':' || buffer[5] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: buffer[2] != ':' || buffer[5] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: TryParseNumber2(buffer' 3' out minutes) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: TryParseNumber2(buffer' 6' out seconds) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: remainingLen > 7
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: TryParseNumber(buffer + 9' remainingLen' out ticks) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: ticks *= 10;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: i < 7
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: len < 8
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: len < indexOfDays + 1 + 8
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: len > 8
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: buffer[2] != ':' || buffer[5] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: buffer[2] != ':' || buffer[5] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: TryParseNumber2(buffer' 3' out int minutes) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: TryParseNumber2(buffer' 6' out int seconds) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: remainingLen > 7
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: TryParseNumber(buffer + 9' remainingLen' out ticks) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: ticks *= 10;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseTimeSpan,The following statement contains a magic number: i < 7
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: len < 19 || len > 33
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: len < 19 || len > 33
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: buffer[4] != '-' || buffer[7] != '-' || buffer[10] != 'T' ||                  buffer[13] != ':' || buffer[16] != ':' || buffer[16] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: buffer[4] != '-' || buffer[7] != '-' || buffer[10] != 'T' ||                  buffer[13] != ':' || buffer[16] != ':' || buffer[16] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: buffer[4] != '-' || buffer[7] != '-' || buffer[10] != 'T' ||                  buffer[13] != ':' || buffer[16] != ':' || buffer[16] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: buffer[4] != '-' || buffer[7] != '-' || buffer[10] != 'T' ||                  buffer[13] != ':' || buffer[16] != ':' || buffer[16] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: buffer[4] != '-' || buffer[7] != '-' || buffer[10] != 'T' ||                  buffer[13] != ':' || buffer[16] != ':' || buffer[16] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: buffer[4] != '-' || buffer[7] != '-' || buffer[10] != 'T' ||                  buffer[13] != ':' || buffer[16] != ':' || buffer[16] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: TryParseNumber2(buffer' 5' out int month) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: TryParseNumber2(buffer' 8' out int day) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: TryParseNumber2(buffer' 11' out int hour) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: TryParseNumber2(buffer' 14' out int minute) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: TryParseNumber2(buffer' 17' out int second) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: len < 19 || len > 33
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: len < 19 || len > 33
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: buffer[4] != '-' || buffer[7] != '-' || buffer[10] != 'T' ||                  buffer[13] != ':' || buffer[16] != ':' || buffer[16] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: buffer[4] != '-' || buffer[7] != '-' || buffer[10] != 'T' ||                  buffer[13] != ':' || buffer[16] != ':' || buffer[16] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: buffer[4] != '-' || buffer[7] != '-' || buffer[10] != 'T' ||                  buffer[13] != ':' || buffer[16] != ':' || buffer[16] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: buffer[4] != '-' || buffer[7] != '-' || buffer[10] != 'T' ||                  buffer[13] != ':' || buffer[16] != ':' || buffer[16] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: buffer[4] != '-' || buffer[7] != '-' || buffer[10] != 'T' ||                  buffer[13] != ':' || buffer[16] != ':' || buffer[16] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTime,The following statement contains a magic number: buffer[4] != '-' || buffer[7] != '-' || buffer[10] != 'T' ||                  buffer[13] != ':' || buffer[16] != ':' || buffer[16] != ':'
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: TryParseNumber2(buffer' 5' out int month) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: TryParseNumber2(buffer' 8' out int day) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: TryParseNumber2(buffer' 11' out int hour) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: TryParseNumber2(buffer' 14' out int minute) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: TryParseNumber2(buffer' 17' out int second) == false
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following statement contains a magic number: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber,The following statement contains a magic number: val *= 10;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber,The following statement contains a magic number: val *= 10;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber2,The following statement contains a magic number: bool isAscii = ((ptr + offset)[0] | (ptr + offset)[1]) < 256;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber3,The following statement contains a magic number: int r2 = shift1[(ptr + offset)[2]];
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber3,The following statement contains a magic number: bool isAscii = ((ptr + offset)[0] | (ptr + offset)[1] | (ptr + offset)[2]) < 256;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber3,The following statement contains a magic number: bool isAscii = ((ptr + offset)[0] | (ptr + offset)[1] | (ptr + offset)[2]) < 256;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber3,The following statement contains a magic number: int r2 = shift1[(ptr + offset)[2]];
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber4,The following statement contains a magic number: int r2 = shift10[(ptr + offset)[2]];
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber4,The following statement contains a magic number: int r3 = shift1[(ptr + offset)[3]];
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber4,The following statement contains a magic number: bool isAscii = ((ptr + offset)[0] | (ptr + offset)[1] | (ptr + offset)[2] | (ptr + offset)[3]) < 256;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber4,The following statement contains a magic number: bool isAscii = ((ptr + offset)[0] | (ptr + offset)[1] | (ptr + offset)[2] | (ptr + offset)[3]) < 256;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber4,The following statement contains a magic number: bool isAscii = ((ptr + offset)[0] | (ptr + offset)[1] | (ptr + offset)[2] | (ptr + offset)[3]) < 256;
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber4,The following statement contains a magic number: int r2 = shift10[(ptr + offset)[2]];
Magic Number,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseNumber4,The following statement contains a magic number: int r3 = shift1[(ptr + offset)[3]];
Magic Number,Sparrow.Json,LazyStringValueStructComparer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringValue.cs,GetHashCode,The following statement contains a magic number: IntPtr.Size == 4
Magic Number,Sparrow.Json,LazyStringValue,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringValue.cs,GetHashCode,The following statement contains a magic number: _hashCode = IntPtr.Size == 4                  ? (int)Hashing.XXHash32.CalculateInline(Buffer' Size)                  : (int)Hashing.XXHash64.CalculateInline(Buffer' (ulong)Size);
Magic Number,Sparrow.Json,LazyStringValue,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringValue.cs,IsControlCodeCharacter,The following statement contains a magic number: return b < 32 || (b >= 127 && b <= 159);
Magic Number,Sparrow.Json,LazyStringValue,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringValue.cs,IsControlCodeCharacter,The following statement contains a magic number: return b < 32 || (b >= 127 && b <= 159);
Magic Number,Sparrow.Json,LazyStringValue,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringValue.cs,IsControlCodeCharacter,The following statement contains a magic number: return b < 32 || (b >= 127 && b <= 159);
Magic Number,Sparrow.Json,UnmanagedBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedBuffersPool.cs,UnmanagedBuffersPool,The following statement contains a magic number: _freeSegments = new ConcurrentStack<AllocatedMemoryData>[32];
Magic Number,Sparrow.Json,UnmanagedBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedBuffersPool.cs,GetIndexSize,The following statement contains a magic number: switch (index)              {                  case 1:                  case 2:                  case 3:                  case 4:                  case 5:                      index = 5;                      return 16;                  case 12:                  case 13:                      index = 13;                      return 4096;                  default:                      return powerBy2Size;              }
Magic Number,Sparrow.Json,UnmanagedBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedBuffersPool.cs,GetIndexSize,The following statement contains a magic number: switch (index)              {                  case 1:                  case 2:                  case 3:                  case 4:                  case 5:                      index = 5;                      return 16;                  case 12:                  case 13:                      index = 13;                      return 4096;                  default:                      return powerBy2Size;              }
Magic Number,Sparrow.Json,UnmanagedBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedBuffersPool.cs,GetIndexSize,The following statement contains a magic number: switch (index)              {                  case 1:                  case 2:                  case 3:                  case 4:                  case 5:                      index = 5;                      return 16;                  case 12:                  case 13:                      index = 13;                      return 4096;                  default:                      return powerBy2Size;              }
Magic Number,Sparrow.Json,UnmanagedBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedBuffersPool.cs,GetIndexSize,The following statement contains a magic number: switch (index)              {                  case 1:                  case 2:                  case 3:                  case 4:                  case 5:                      index = 5;                      return 16;                  case 12:                  case 13:                      index = 13;                      return 4096;                  default:                      return powerBy2Size;              }
Magic Number,Sparrow.Json,UnmanagedBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedBuffersPool.cs,GetIndexSize,The following statement contains a magic number: switch (index)              {                  case 1:                  case 2:                  case 3:                  case 4:                  case 5:                      index = 5;                      return 16;                  case 12:                  case 13:                      index = 13;                      return 4096;                  default:                      return powerBy2Size;              }
Magic Number,Sparrow.Json,UnmanagedBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedBuffersPool.cs,GetIndexSize,The following statement contains a magic number: switch (index)              {                  case 1:                  case 2:                  case 3:                  case 4:                  case 5:                      index = 5;                      return 16;                  case 12:                  case 13:                      index = 13;                      return 4096;                  default:                      return powerBy2Size;              }
Magic Number,Sparrow.Json,UnmanagedBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedBuffersPool.cs,GetIndexSize,The following statement contains a magic number: switch (index)              {                  case 1:                  case 2:                  case 3:                  case 4:                  case 5:                      index = 5;                      return 16;                  case 12:                  case 13:                      index = 13;                      return 4096;                  default:                      return powerBy2Size;              }
Magic Number,Sparrow.Json,UnmanagedBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedBuffersPool.cs,GetIndexSize,The following statement contains a magic number: switch (index)              {                  case 1:                  case 2:                  case 3:                  case 4:                  case 5:                      index = 5;                      return 16;                  case 12:                  case 13:                      index = 13;                      return 4096;                  default:                      return powerBy2Size;              }
Magic Number,Sparrow.Json,UnmanagedBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedBuffersPool.cs,GetIndexSize,The following statement contains a magic number: switch (index)              {                  case 1:                  case 2:                  case 3:                  case 4:                  case 5:                      index = 5;                      return 16;                  case 12:                  case 13:                      index = 13;                      return 4096;                  default:                      return powerBy2Size;              }
Magic Number,Sparrow.Json,UnmanagedBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedBuffersPool.cs,GetIndexSize,The following statement contains a magic number: switch (index)              {                  case 1:                  case 2:                  case 3:                  case 4:                  case 5:                      index = 5;                      return 16;                  case 12:                  case 13:                      index = 13;                      return 4096;                  default:                      return powerBy2Size;              }
Magic Number,Sparrow.Json,UnmanagedBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedBuffersPool.cs,GetIndexFromSize,The following statement contains a magic number: size > 1024 * 1024
Magic Number,Sparrow.Json,UnmanagedBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedBuffersPool.cs,GetIndexFromSize,The following statement contains a magic number: size > 1024 * 1024
Magic Number,Sparrow.Json,UnmanagedWriteBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedWriteBuffer.cs,AllocateNextSegment,The following statement contains a magic number: var segmentSize = Math.Max(Bits.PowerOf2(required)' _head.Allocation.SizeInBytes * 2);
Magic Number,Sparrow.Json,UnmanagedWriteBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedWriteBuffer.cs,AllocateNextSegment,The following statement contains a magic number: const int oneMb = 1024 * 1024;
Magic Number,Sparrow.Json,UnmanagedWriteBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\UnmanagedWriteBuffer.cs,AllocateNextSegment,The following statement contains a magic number: const int oneMb = 1024 * 1024;
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,WriteVariableSizeInt,The following statement contains a magic number: v >>= 7;
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,VariableSizeIntSize,The following statement contains a magic number: v >>= 7;
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsMaxSize,The following statement contains a magic number: value == 92 || value == 34 || (value >= 8 && value <= 13 && value != 11)
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsMaxSize,The following statement contains a magic number: value == 92 || value == 34 || (value >= 8 && value <= 13 && value != 11)
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsMaxSize,The following statement contains a magic number: value == 92 || value == 34 || (value >= 8 && value <= 13 && value != 11)
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsMaxSize,The following statement contains a magic number: value == 92 || value == 34 || (value >= 8 && value <= 13 && value != 11)
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsMaxSize,The following statement contains a magic number: value == 92 || value == 34 || (value >= 8 && value <= 13 && value != 11)
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsMaxSize,The following statement contains a magic number: value < 32
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsIn,The following statement contains a magic number: value == 92 || value == 34 || (value >= 8 && value <= 13 && value != 11)
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsIn,The following statement contains a magic number: value == 92 || value == 34 || (value >= 8 && value <= 13 && value != 11)
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsIn,The following statement contains a magic number: value == 92 || value == 34 || (value >= 8 && value <= 13 && value != 11)
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsIn,The following statement contains a magic number: value == 92 || value == 34 || (value >= 8 && value <= 13 && value != 11)
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsIn,The following statement contains a magic number: value == 92 || value == 34 || (value >= 8 && value <= 13 && value != 11)
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsIn,The following statement contains a magic number: Memory.Copy(str + i + 2' controlString' 4);
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsIn,The following statement contains a magic number: Memory.Copy(str + i + 2' controlString' 4);
Magic Number,Sparrow.Json.Parsing,JsonParserState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\JsonParserState.cs,FindEscapePositionsIn,The following statement contains a magic number: value < 32
Magic Number,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,UnmanagedJsonParser,The following statement contains a magic number: ParseStringTable = new byte[255];
Magic Number,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,UnmanagedJsonParser,The following statement contains a magic number: ParseNumberTable = new ParseNumberAction[255];
Magic Number,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ParseNumber,The following statement contains a magic number: var next = (value * 10) + digit;
Magic Number,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ParseNumber,The following statement contains a magic number: digit <= 9
Magic Number,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ParseUnicodeValue,The following statement contains a magic number: val = (val << 4) | (b - (byte)'0');
Magic Number,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ParseUnicodeValue,The following statement contains a magic number: i < 4
Magic Number,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ParseUnicodeValue,The following statement contains a magic number: val < 32
Magic Number,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,WriteUnicodeCharacterToStringBuffer,The following statement contains a magic number: var smallBuffer = stackalloc byte[8];
Magic Number,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,WriteUnicodeCharacterToStringBuffer,The following statement contains a magic number: var byteCount = Encodings.Utf8.GetBytes(chars' 1' smallBuffer' 8);
Magic Number,Sparrow.Json.Parsing,UnmanagedJsonParserHelper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParserHelper.cs,ReadArrayToMemory,The following statement contains a magic number: docsCountOnCachedRenewSession <= 16 * 1024
Magic Number,Sparrow.Json.Parsing,UnmanagedJsonParserHelper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParserHelper.cs,ReadArrayToMemory,The following statement contains a magic number: docsCountOnCachedRenewSession <= 16 * 1024
Magic Number,Sparrow.Logging,LoggingFilter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingFilter.cs,Add,The following statement contains a magic number: parts.Length != 2
Magic Number,Sparrow.Logging,LoggingFilter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingFilter.cs,ParseInput,The following statement contains a magic number: args.Length < 2
Magic Number,Sparrow.Logging,LoggingFilter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingFilter.cs,ParseInput,The following statement contains a magic number: switch (args[1])              {                  case "help":                      return GetHelp();                  case "list":                      return List();                  case "only":                      if (args.Length != 3)                          return "Invalid number of arguments for filter only";                      return Add(args[2]' true);                  case "except":                      if (args.Length != 3)                          return "Invalid number of arguments for filter except";                      return Add(args[2]' false);                  case "del":                      if (args.Length != 3)                          return "Invalid number of arguments for filter del ";                      return Delete(args[2]);              }
Magic Number,Sparrow.Logging,LoggingFilter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingFilter.cs,ParseInput,The following statement contains a magic number: switch (args[1])              {                  case "help":                      return GetHelp();                  case "list":                      return List();                  case "only":                      if (args.Length != 3)                          return "Invalid number of arguments for filter only";                      return Add(args[2]' true);                  case "except":                      if (args.Length != 3)                          return "Invalid number of arguments for filter except";                      return Add(args[2]' false);                  case "del":                      if (args.Length != 3)                          return "Invalid number of arguments for filter del ";                      return Delete(args[2]);              }
Magic Number,Sparrow.Logging,LoggingFilter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingFilter.cs,ParseInput,The following statement contains a magic number: switch (args[1])              {                  case "help":                      return GetHelp();                  case "list":                      return List();                  case "only":                      if (args.Length != 3)                          return "Invalid number of arguments for filter only";                      return Add(args[2]' true);                  case "except":                      if (args.Length != 3)                          return "Invalid number of arguments for filter except";                      return Add(args[2]' false);                  case "del":                      if (args.Length != 3)                          return "Invalid number of arguments for filter del ";                      return Delete(args[2]);              }
Magic Number,Sparrow.Logging,LoggingFilter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingFilter.cs,ParseInput,The following statement contains a magic number: switch (args[1])              {                  case "help":                      return GetHelp();                  case "list":                      return List();                  case "only":                      if (args.Length != 3)                          return "Invalid number of arguments for filter only";                      return Add(args[2]' true);                  case "except":                      if (args.Length != 3)                          return "Invalid number of arguments for filter except";                      return Add(args[2]' false);                  case "del":                      if (args.Length != 3)                          return "Invalid number of arguments for filter del ";                      return Delete(args[2]);              }
Magic Number,Sparrow.Logging,LoggingFilter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingFilter.cs,ParseInput,The following statement contains a magic number: switch (args[1])              {                  case "help":                      return GetHelp();                  case "list":                      return List();                  case "only":                      if (args.Length != 3)                          return "Invalid number of arguments for filter only";                      return Add(args[2]' true);                  case "except":                      if (args.Length != 3)                          return "Invalid number of arguments for filter except";                      return Add(args[2]' false);                  case "del":                      if (args.Length != 3)                          return "Invalid number of arguments for filter del ";                      return Delete(args[2]);              }
Magic Number,Sparrow.Logging,LoggingFilter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingFilter.cs,ParseInput,The following statement contains a magic number: switch (args[1])              {                  case "help":                      return GetHelp();                  case "list":                      return List();                  case "only":                      if (args.Length != 3)                          return "Invalid number of arguments for filter only";                      return Add(args[2]' true);                  case "except":                      if (args.Length != 3)                          return "Invalid number of arguments for filter except";                      return Add(args[2]' false);                  case "del":                      if (args.Length != 3)                          return "Invalid number of arguments for filter del ";                      return Delete(args[2]);              }
Magic Number,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,Register,The following statement contains a magic number: var arraySegment = new ArraySegment<byte>(new byte[512]);
Magic Number,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,TryGetNewStreamAndApplyRetentionPolicies,The following statement contains a magic number: fileStream = SafeFileStream.Create(fileName' FileMode.Append' FileAccess.Write' FileShare.Read' 32 * 1024' false);
Magic Number,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,TryGetNewStreamAndApplyRetentionPolicies,The following statement contains a magic number: fileStream = SafeFileStream.Create(fileName' FileMode.Append' FileAccess.Write' FileShare.Read' 32 * 1024' false);
Magic Number,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,Log,The following statement contains a magic number: state.Full.Enqueue(item' timeout: 128);
Magic Number,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,BackgroundLogger,The following statement contains a magic number: _hasEntries.Wait(1000);
Magic Number,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,BackgroundLogger,The following statement contains a magic number: i < 16
Magic Number,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,IsOutOfDiskSpaceException,The following statement contains a magic number: const int posixOutOfDiskSpaceError = 28;
Magic Number,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,SendToWebSockets,The following statement contains a magic number: success = Task.WaitAll(_tasks' 250);
Magic Number,Sparrow.Logging,SingleProducerSingleConsumerCircularQueue<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\SingleProducerSingleConsumerCircularQueue.cs,Enqueue,The following statement contains a magic number: var timeToWait = _numberOfTimeWaitedForEnqueue / 2;
Magic Number,Sparrow.Logging,SingleProducerSingleConsumerCircularQueue<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\SingleProducerSingleConsumerCircularQueue.cs,Enqueue,The following statement contains a magic number: timeToWait = 2;
Magic Number,Sparrow.Logging,SingleProducerSingleConsumerCircularQueue<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\SingleProducerSingleConsumerCircularQueue.cs,Enqueue,The following statement contains a magic number: timeToWait < 2
Magic Number,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,MonitorMemoryUsage,The following statement contains a magic number: var timeout = 5 * 1000;
Magic Number,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,MonitorMemoryUsage,The following statement contains a magic number: var timeout = 5 * 1000;
Magic Number,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,MonitorMemoryUsage,The following statement contains a magic number: switch (result)                          {                              case WaitHandle.WaitTimeout:                                  timeout = CheckMemoryStatus(_lowMemoryMonitor);                                  break;                              case 0:                                  SimulateLowMemory();                                  timeout = 1000; // on EarlyOOM just run cleaners once (CheckMemoryStatus will run in 1000mSec and will return system to normal)                                  break;                              case 1: // shutdown requested                                  return;                              default:                                  return;                          }
Magic Number,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,SimulateLowMemory,The following statement contains a magic number: AddLowMemEvent(LowMemoryState ? LowMemReason.LowMemStateSimulation : LowMemReason.BackToNormalSimulation'                      availableMemForLog'                      -2'                      memInfoForLog.TotalScratchDirtyMemory.GetValue(SizeUnit.Bytes)'                      memInfoForLog.TotalPhysicalMemory.GetValue(SizeUnit.Bytes)'                      memInfoForLog.CurrentCommitCharge.GetValue(SizeUnit.Bytes));
Magic Number,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,CheckMemoryStatus,The following statement contains a magic number: timeout = 500;
Magic Number,Sparrow.LowMemory,LowMemoryNotification,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\LowMemory\LowMemoryNotification.cs,GetLowMemory,The following statement contains a magic number: ++_clearInactiveHandlersCounter > 60
Magic Number,Sparrow.Platform,PlatformDetails,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Platform\PlatformDetails.cs,PlatformDetails,The following statement contains a magic number: IsWindows8OrNewer = version >= 6.19M;
Magic Number,Sparrow.Platform,PlatformDetails,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Platform\PlatformDetails.cs,PlatformDetails,The following statement contains a magic number: IsWindows10OrNewer = version >= 10M;
Magic Number,Sparrow.Utils,CommandLineArgumentEscaper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\CommandLineArgumentEscaper.cs,EscapeSingleArg,The following statement contains a magic number: sb.Append('\\'' 2 * backslashes);
Magic Number,Sparrow.Utils,DecimalHelper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\DecimalHelper.cs,CreateIsDoubleMethod,The following statement contains a magic number: var digits = Expression.RightShift(                  Expression.And(Expression.Field(value' "flags")' Expression.Constant(~Int32.MinValue' typeof(int)))'                  Expression.Constant(16' typeof(int)));
Magic Number,Sparrow.Utils,Sizes,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\Sizes.cs,Humane,The following statement contains a magic number: const double GB = 1024 * 1024 * 1024;
Magic Number,Sparrow.Utils,Sizes,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\Sizes.cs,Humane,The following statement contains a magic number: const double GB = 1024 * 1024 * 1024;
Magic Number,Sparrow.Utils,Sizes,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\Sizes.cs,Humane,The following statement contains a magic number: const double GB = 1024 * 1024 * 1024;
Magic Number,Sparrow.Utils,Sizes,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\Sizes.cs,Humane,The following statement contains a magic number: const double MB = 1024 * 1024;
Magic Number,Sparrow.Utils,Sizes,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\Sizes.cs,Humane,The following statement contains a magic number: const double MB = 1024 * 1024;
Magic Number,Sparrow.Utils,Sizes,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\Sizes.cs,Humane,The following statement contains a magic number: const double KB = 1024;
Magic Number,Sparrow.Utils,TimeoutManager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\TimeoutManager.cs,WaitForInternal,The following statement contains a magic number: var duration = (uint)Math.Min(time.TotalMilliseconds' uint.MaxValue - 45);
Magic Number,Sparrow.Utils,TimeoutManager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\TimeoutManager.cs,WaitForInternal,The following statement contains a magic number: var mod = duration % 50;
Magic Number,Sparrow.Utils,TimeoutManager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\TimeoutManager.cs,WaitForInternal,The following statement contains a magic number: duration += 50 - mod;
Magic Number,Sparrow.Utils,TimeoutManager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Utils\TimeoutManager.cs,WaitForInternal,The following statement contains a magic number: var step = duration / 8;
Missing Default,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,ReadInternal,The following switch statement is missing a default case: switch (currentState.State)                  {                      case ContinuationState.ReadObjectDocument:                          if (reader.Read() == false)                          {                              continuationState.Push(currentState);                              goto ReturnFalse;                          }                          currentState.State = ContinuationState.ReadObject;                          continue;                      case ContinuationState.ReadArrayDocument:                          if (reader.Read() == false)                          {                              continuationState.Push(currentState);                              goto ReturnFalse;                          }                            var fakeProperty = _context.CachedProperties.GetProperty(_fakeFieldName);                          currentState.CurrentProperty = fakeProperty;                          currentState.MaxPropertyId = fakeProperty.PropertyId;                          currentState.FirstWrite = _writer.Position;                          currentState.Properties = _propertiesCache.Allocate();                          currentState.Properties.Add( new PropertyTag { Property = fakeProperty } );                          currentState.State = ContinuationState.CompleteDocumentArray;                          continuationState.Push(currentState);                          currentState = new BuildingState(ContinuationState.ReadArray);                          continue;                        case ContinuationState.CompleteDocumentArray:                          currentState.Properties[0] = new PropertyTag(                                                      type: (byte)_writeToken.WrittenToken'                              property: currentState.Properties[0].Property'                                                         position: _writeToken.ValuePos                          );                            // Register property position' name id (PropertyId) and type (object type and metadata)                          _writeToken = _writer.WriteObjectMetadata(currentState.Properties' currentState.FirstWrite' currentState.MaxPropertyId);                          goto ReturnTrue;                        case ContinuationState.ReadObject:                          if (state.CurrentTokenType == JsonParserToken.StartObject)                          {                              currentState.State = ContinuationState.ReadPropertyName;                              currentState.Properties = _propertiesCache.Allocate();                              currentState.FirstWrite = _writer.Position;                              continue;                          }                            goto ErrorExpectedStartOfObject;                        case ContinuationState.ReadArray:                          if (state.CurrentTokenType == JsonParserToken.StartArray)                          {                              currentState.Types = _tokensCache.Allocate();                              currentState.Positions = _positionsCache.Allocate();                              currentState.State = ContinuationState.ReadArrayValue;                              continue;                          }                            goto ErrorExpectedStartOfArray;                                                case ContinuationState.ReadArrayValue:                          if (reader.Read() == false)                          {                              continuationState.Push(currentState);                              goto ReturnFalse;                          }                            if (state.CurrentTokenType == JsonParserToken.EndArray)                          {                              currentState.State = ContinuationState.CompleteArray;                              continue;                          }                            currentState.State = ContinuationState.CompleteArrayValue;                          continuationState.Push(currentState);                          currentState = new BuildingState(ContinuationState.ReadValue);                          continue;                        case ContinuationState.CompleteArrayValue:                          currentState.Types.Add(_writeToken.WrittenToken);                          currentState.Positions.Add(_writeToken.ValuePos);                          currentState.State = ContinuationState.ReadArrayValue;                          continue;                        case ContinuationState.CompleteArray:                          var arrayToken = BlittableJsonToken.StartArray;                          var arrayInfoStart = _writer.WriteArrayMetadata(currentState.Positions' currentState.Types' ref arrayToken);                          _writeToken = new WriteToken(arrayInfoStart' arrayToken);                          currentState = continuationState.Pop();                          continue;                        case ContinuationState.ReadPropertyName:                          if (ReadMaybeModifiedPropertyName() == false)                          {                              continuationState.Push(currentState);                              goto ReturnFalse;                          }                            if (state.CurrentTokenType == JsonParserToken.EndObject)                          {                              _modifier?.EndObject();                              _writeToken = _writer.WriteObjectMetadata(currentState.Properties' currentState.FirstWrite' currentState.MaxPropertyId);                              if (continuationState.Count == 0)                                  goto ReturnTrue;                                currentState = continuationState.Pop();                              continue;                          }                            if (state.CurrentTokenType != JsonParserToken.String)                              goto ErrorExpectedProperty;                            var property = CreateLazyStringValueFromParserState();                          currentState.CurrentProperty = _context.CachedProperties.GetProperty(property);                          currentState.MaxPropertyId = Math.Max(currentState.MaxPropertyId' currentState.CurrentProperty.PropertyId);                          currentState.State = ContinuationState.ReadPropertyValue;                          continue;                      case ContinuationState.ReadPropertyValue:                          if (reader.Read() == false)                          {                              continuationState.Push(currentState);                              goto ReturnFalse;                          }                          currentState.State = ContinuationState.CompleteReadingPropertyValue;                          continuationState.Push(currentState);                          currentState = new BuildingState(ContinuationState.ReadValue);                          continue;                      case ContinuationState.CompleteReadingPropertyValue:                          // Register property position' name id (PropertyId) and type (object type and metadata)                          currentState.Properties.Add(new PropertyTag (                              position: _writeToken.ValuePos'                              type: (byte)_writeToken.WrittenToken'                              property: currentState.CurrentProperty));                            currentState.State = ContinuationState.ReadPropertyName;                          continue;                      case ContinuationState.ReadValue:                          ReadJsonValue<TWriteStrategy>();                                                  currentState = _continuationState.Pop();                          break;                  }
Missing Default,Sparrow.Json,BlittableJsonDocumentBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonDocumentBuilder.cs,ReadJsonValueUnlikely,The following switch statement is missing a default case: switch (current)              {                  case JsonParserToken.StartArray:                      _continuationState.Push(new BuildingState(ContinuationState.ReadArray));                      return;                  case JsonParserToken.Float:                      if ((_mode & UsageMode.ValidateDouble) == UsageMode.ValidateDouble)                          _reader.ValidateFloat();                        start = _writer.WriteValue(_state.StringBuffer' _state.StringSize);                        _state.CompressedSize = null;                      _writeToken = new WriteToken(start' BlittableJsonToken.LazyNumber);                      return;                  case JsonParserToken.True:                  case JsonParserToken.False:                      start = _writer.WriteValue(current == JsonParserToken.True ? (byte)1 : (byte)0);                      _writeToken = new WriteToken(start' BlittableJsonToken.Boolean);                      return;                  case JsonParserToken.Null:                      // nothing to do here' we handle that with the token                      start = _writer.WriteValue((byte)0);                      _writeToken = new WriteToken(start' BlittableJsonToken.Null);                      return;              }
Missing Default,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,TryGet,The following switch statement is missing a default case: switch (result)              {                  case LazyNumberValue lazyDouble:                      doubleNum = lazyDouble;                      return true;                  case long longNum:                      doubleNum = longNum;                      return true;              }
Missing Default,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,ChangeTypeToString,The following switch statement is missing a default case: switch (result)              {                  case null:                      str = null;                      return true;                  case LazyCompressedStringValue lazyCompressedStringValue:                      str = lazyCompressedStringValue;                      return true;                  case LazyStringValue lazyStringValue:                      str = lazyStringValue;                      return true;                  case StringSegment stringSegmentValue:                      str = stringSegmentValue.Value;                      return true;              }
Missing Default,Sparrow.Json,BlittableJsonReaderObject,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\BlittableJsonReaderObject.cs,GetObjectUnlikely,The following switch statement is missing a default case: switch (actualType)              {                  case BlittableJsonToken.EmbeddedBlittable:                      return ReadNestedObject(position);                  case BlittableJsonToken.RawBlob:                      return ReadRawBlob(position);                  case BlittableJsonToken.StartArray:                      return new BlittableJsonReaderArray(position' _parent ?? this' type)                      {                          NoCache = NoCache                      };                  case BlittableJsonToken.CompressedString:                      return ReadCompressStringLazily(position);                  case BlittableJsonToken.Boolean:                      return ReadNumber(_mem + position' 1) == 1;                  case BlittableJsonToken.Null:                      return null;                  case BlittableJsonToken.LazyNumber:                      return new LazyNumberValue(ReadStringLazily(position));              }
Missing Default,Sparrow.Json,LazyCompressedStringValue,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyCompressedStringValue.cs,Equals,The following switch statement is missing a default case: switch (obj)              {                  case LazyCompressedStringValue lcsv:                      return Equals(lcsv);                  case LazyStringValue lsv:                      return lsv.Equals(ToLazyStringValue());                  case string str:                      return str.Equals(ToString());              }
Missing Default,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following switch statement is missing a default case: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                      dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Missing Default,Sparrow.Json,LazyStringParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringParser.cs,TryParseDateTimeInternal,The following switch statement is missing a default case: switch (len)              {                  case 20: //"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"'                      if (buffer[19] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 19;                  case 19://"yyyy'-'MM'-'dd'T'HH':'mm':'ss"'                                          goto Finished_DT;                  case 24://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"'                      if (buffer[23] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 23;                  case 23://"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff"'                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber3(buffer' 20' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 28://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'Z'"                      if (buffer[27] != 'Z')                          goto Failed;                      kind = DateTimeKind.Utc;                      goto case 27;                  case 27://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff"                      if (buffer[19] != '.')                          goto Failed;                      if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                      goto Finished_DT;                  case 33://"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff'+'dd':'dd"                      if (buffer[19] != '.' || buffer[30] != ':' || (buffer[27] != '+' && buffer[27] != '-'))                          goto Failed;                        if (TryParseNumber(buffer + 20' 7' out fractions) == false)                          goto Failed;                        if (TryParseNumber2(buffer' 28' out int offsetHour) == false)                          goto Failed;                      if (TryParseNumber2(buffer' 31' out int offsetMinute) == false)                          goto Failed;                        var offset = new TimeSpan(offsetHour' offsetMinute' 0);                      if (buffer[27] == '-')                          offset = -offset;                        dt = default(DateTime);                                          dto = new DateTimeOffset(DateToTicks(year' month' day' hour' minute' second' fractions)' offset);                      result = Result.DateTimeOffset;                      goto Finished;              }
Missing Default,Sparrow.Json,LazyStringValue,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\LazyStringValue.cs,Equals,The following switch statement is missing a default case: switch (other)              {                  case null:                      return false;                  case string str:                      return Equals(str);                  case LazyStringValue lsv:                      return lsv.Equals(this);                  case LazyCompressedStringValue lcsv:                      return lcsv.ToLazyStringValue().Equals(this);              }
Missing Default,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ReadUnlikely,The following switch statement is missing a default case: switch (b)              {                  case (byte)'\r':                      {                          if (pos >= _bufSize)                          {                              return true;                          }                          if (_inputBuffer[pos] == (byte)'\n')                          {                              return false;                          }                          goto case (byte)'\n';                      }                    case (byte)'\n':                      {                          _line++;                          _charPos = 1;                          return false;                      }                    case (byte)' ':                  case (byte)'\t':                  case (byte)'\v':                  case (byte)'\f':                      //white space' we can safely ignore                      return false;                    case (byte)'N':                      {                          ReadToken(ref pos' ref couldRead' NaN' "NaN"' JsonParserTokenContinuation.PartialNaN);                          return true;                      }                    case (byte)'I':                      {                          ReadToken(ref pos' ref couldRead' PositiveInfinity' "Infinity"' JsonParserTokenContinuation.PartialPositiveInfinity);                          return true;                      }                    case (byte)'-':                      {                          _zeroPrefix = false;                          ReadToken(ref pos' ref couldRead' NegativeInfinity' "-Infinity"' JsonParserTokenContinuation.PartialNegativeInfinity);                          return true;                      }                    case (byte)'n':                      {                          _state.CurrentTokenType = JsonParserToken.Null;                          _expectedTokenBuffer = BlittableJsonTextWriter.NullBuffer;                          _expectedTokenBufferPosition = 1;                          _expectedTokenString = "null";                          if (EnsureRestOfToken(ref pos) == false)                          {                              _state.Continuation = JsonParserTokenContinuation.PartialNull;                              return true;                          }                            couldRead = true;                          return true;                      }                    case (byte)'t':                      {                          _state.CurrentTokenType = JsonParserToken.True;                          _expectedTokenBuffer = BlittableJsonTextWriter.TrueBuffer;                          _expectedTokenBufferPosition = 1;                          _expectedTokenString = "true";                          if (EnsureRestOfToken(ref pos) == false)                          {                              _state.Continuation = JsonParserTokenContinuation.PartialTrue;                              return true;                          }                            couldRead = true;                          return true;                      }                    case (byte)'f':                      {                          _state.CurrentTokenType = JsonParserToken.False;                          _expectedTokenBuffer = BlittableJsonTextWriter.FalseBuffer;                          _expectedTokenBufferPosition = 1;                          _expectedTokenString = "false";                          if (EnsureRestOfToken(ref pos) == false)                          {                              _state.Continuation = JsonParserTokenContinuation.PartialFalse;                              return true;                          }                            couldRead = true;                          return true;                      }              }
Missing Default,Sparrow.Json.Parsing,UnmanagedJsonParser,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Json\Parsing\UnmanagedJsonParser.cs,ParseNumberUnlikely,The following switch statement is missing a default case: switch (b)              {                  case (byte)'.':                      {                          if (!_isFractionedDouble)                          {                              _zeroPrefix = false; // 0.5' frex                              _isFractionedDouble = true;                              break;                          }                            ThrowWhenMalformed("Already got '.' in this number value");                          break;                      }                  case (byte)'+':                      break; // just record' appears in 1.4e+3                  case (byte)'e':                  case (byte)'E':                      {                          if (_isExponent)                              ThrowWhenMalformed("Already got 'e' in this number value");                          _isExponent = true;                          _isFractionedDouble = true;                          break;                      }                  case (byte)'-':                      {                          if (!_isNegative || _isExponent != false)                          {                              _isNegative = true;                              break;                          }                            ThrowWhenMalformed("Already got '-' in this number value");                          break;                      }                    case (byte)'\r':                  case (byte)'\n':                      {                          _line++;                          _charPos = 1;                            if (!_zeroPrefix || _unmanagedWriteBuffer.SizeInBytes == 1)                          {                              if (_isNegative)                                  value *= -1;                                state.CurrentTokenType = (_isFractionedDouble || _isOverflow) ? JsonParserToken.Float : JsonParserToken.Integer;                                pos--;                              _charPos--; // need to re-read this char                                return true;                          }                            ThrowWhenMalformed("Invalid number with zero prefix");                          break;                      }              }
Missing Default,Sparrow.Logging,LoggingFilter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingFilter.cs,ParseInput,The following switch statement is missing a default case: switch (args[1])              {                  case "help":                      return GetHelp();                  case "list":                      return List();                  case "only":                      if (args.Length != 3)                          return "Invalid number of arguments for filter only";                      return Add(args[2]' true);                  case "except":                      if (args.Length != 3)                          return "Invalid number of arguments for filter except";                      return Add(args[2]' false);                  case "del":                      if (args.Length != 3)                          return "Invalid number of arguments for filter del ";                      return Delete(args[2]);              }
Missing Default,Sparrow.Logging,LoggingSource,C:\research\architectureSmells\repos\ravendb_ravendb\src\Sparrow\Logging\LoggingSource.cs,WriteEntryToWriter,The following switch statement is missing a default case: switch (entry.Type)              {                  case LogMode.Information:                      writer.Write("Information");                      break;                  case LogMode.Operations:                      writer.Write("Operations");                      break;              }
