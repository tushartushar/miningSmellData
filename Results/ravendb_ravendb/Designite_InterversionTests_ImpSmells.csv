Implementation smell,Namespace,Class,File,Method,Description
Long Method,InterversionTests,SmugglerTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\SmugglerTests.cs,CanExportFrom41AndImportTo42,The method has 143 lines of code.
Long Method,InterversionTests,SmugglerTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\SmugglerTests.cs,CanExportFrom42AndImportTo41,The method has 136 lines of code.
Complex Method,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,HandleSubscriptionBatch,Cyclomatic complexity of the method is 10
Long Parameter List,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ExecuteUpgradeTest,The method has 5 parameters. Parameters: initialVersions' upgradeTo' before' during' after
Long Parameter List,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,HandleSubscriptionBatch,The method has 7 parameters. Parameters: nodesAmount' b' uniqueDocs' docsCount' uniqueRevisions' reachedMaxDocCountMre' revisionsCount
Long Parameter List,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,CreateAndInitiateSubscription,The method has 7 parameters. Parameters: server' store' database' usersCount' reachedMaxDocCountMre' batchSize' mentor
Long Statement,InterversionTests,MixedClusterTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTestBase.cs,CreateDatabase,The length of the statement  "                    [RavenConfiguration.GetKey(x => x.Indexing.MinNumberOfMapAttemptsAfterWhichBatchWillBeCanceledIfRunningLowOnMemory)] = int.MaxValue.ToString() " is 142.
Long Statement,InterversionTests,MixedClusterTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTestBase.cs,GetStore,The length of the statement  "                        [RavenConfiguration.GetKey(x => x.Indexing.MinNumberOfMapAttemptsAfterWhichBatchWillBeCanceledIfRunningLowOnMemory)] = int.MaxValue.ToString() " is 142.
Long Statement,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,CreateDatabase,The length of the statement  "                var result = await stores[0].Maintenance.Server.SendAsync(new CreateDatabaseOperation(new DatabaseRecord(database)' size)); " is 123.
Long Statement,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,SubscriptionsInMixedCluster_FailoverFrom41To40,The length of the statement  "                var subscription = await CreateAndInitiateSubscription(leader' storeA' dbName' usersCount' reachedMaxDocCountMre' batchSize' mentor); " is 133.
Long Statement,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,SubscriptionsInMixedCluster_FailoverFrom410To41,The length of the statement  "            var stores = await GetStores(leader' peers' local' modifyDocumentStore: s => s.Conventions.DisableTopologyUpdates = false); " is 123.
Long Statement,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,SubscriptionsInMixedCluster_FailoverFrom410To41,The length of the statement  "                var subscription = await CreateAndInitiateSubscription(leader' storeA' dbName' usersCount' reachedMaxDocCountMre' batchSize' mentor); " is 133.
Long Statement,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The length of the statement  "            var stores = await GetStores(leader' peers' local' modifyDocumentStore: s => s.Conventions.DisableTopologyUpdates = false); " is 123.
Long Statement,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The length of the statement  "                        HandleSubscriptionBatch(nodesAmount' b' uniqueDocs' ref docsCount' uniqueRevisions' reachedMaxDocCountMre' ref revisionsCount); " is 127.
Long Statement,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The length of the statement  "                Assert.True(await ackSent.WaitAsync(_reasonableWaitTime).ConfigureAwait(false)' $"Doc count is {docsCount} with revisions {revisionsCount}/{expectedRevisionsCount} (1st assert)"); " is 179.
Long Statement,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The length of the statement  "                await KillServerWhereSubscriptionWorks(storeA' dbName' subscription.SubscriptionName' (leader' peers' local)).ConfigureAwait(false); " is 132.
Long Statement,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The length of the statement  "                Assert.True(await ackSent.WaitAsync(_reasonableWaitTime).ConfigureAwait(false)' $"Doc count is {docsCount} with revisions {revisionsCount}/{expectedRevisionsCount} (2nd assert)"); " is 179.
Long Statement,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The length of the statement  "                await KillServerWhereSubscriptionWorks(storeA' dbName' subscription.SubscriptionName' (leader' peers' local)).ConfigureAwait(false); " is 132.
Long Statement,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The length of the statement  "                Assert.True(await reachedMaxDocCountMre.WaitAsync(_reasonableWaitTime).ConfigureAwait(false)' $"Doc count is {docsCount} with revisions {revisionsCount}/{expectedRevisionsCount} (3rd assert)"); " is 193.
Empty Catch Block,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,CreateDatabase,The method has an empty catch block.
Empty Catch Block,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ReplicationInMixedCluster_40Leader_with_two_41_nodes,The method has an empty catch block.
Empty Catch Block,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The method has an empty catch block.
Empty Catch Block,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,HandleSubscriptionBatch,The method has an empty catch block.
Empty Catch Block,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,CreateAndInitiateSubscription,The method has an empty catch block.
Magic Number,InterversionTests,MixedClusterTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTestBase.cs,CreateMixedCluster,The following statement contains a magic number: var expectedMembers = 2;
Magic Number,InterversionTests,MixedClusterTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTestBase.cs,CreateMixedCluster,The following statement contains a magic number: Assert.True(nodeAdded.WaitOne(TimeSpan.FromSeconds(30)));
Magic Number,InterversionTests,MixedClusterTestBase,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTestBase.cs,CreateMixedCluster,The following statement contains a magic number: Assert.True(nodeAdded.WaitOne(TimeSpan.FromSeconds(30)));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ReplicationInMixedCluster_40Leader_with_two_41_nodes,The following statement contains a magic number: var dbName = await CreateDatabase(storeA' 3);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ReplicationInMixedCluster_40Leader_with_two_41_nodes,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      "users/1"'                      u => u.Name.Equals("aviv")'                      TimeSpan.FromSeconds(10)'                      stores.Stores'                      dbName));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ReplicationInMixedCluster_40Leader_with_one_41_node_and_two_40_nodes,The following statement contains a magic number: var dbName = await CreateDatabase(storeA' 3);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ReplicationInMixedCluster_40Leader_with_one_41_node_and_two_40_nodes,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      "users/1"'                      u => u.Name.Equals("aviv")'                      TimeSpan.FromSeconds(10)'                      stores.Stores'                      dbName));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ReplicationInMixedCluster_41Leader_with_two_406,The following statement contains a magic number: var dbName = await CreateDatabase(storeA' 3);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ReplicationInMixedCluster_41Leader_with_two_406,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      "users/1"'                      u => u.Name.Equals("aviv")'                      TimeSpan.FromSeconds(10)'                      stores.Stores'                      dbName));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_OutgoingReplicationFrom41To40_ShouldStopAfterUsingCounters,The following statement contains a magic number: var storeC = stores.Stores[2];
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_OutgoingReplicationFrom41To40_ShouldStopAfterUsingCounters,The following statement contains a magic number: var storeD = stores.Stores[3];
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_OutgoingReplicationFrom41To40_ShouldStopAfterUsingCounters,The following statement contains a magic number: var dbName = await CreateDatabase(storeA' 4);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_OutgoingReplicationFrom41To40_ShouldStopAfterUsingCounters,The following statement contains a magic number: await Task.Delay(500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_OutgoingReplicationFrom41To40_ShouldStopAfterUsingCounters,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      "users/1"'                      u => u.Name.Equals("aviv")'                      TimeSpan.FromSeconds(15)'                      stores.Stores'                      dbName));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_OutgoingReplicationFrom41To40_ShouldStopAfterUsingCounters,The following statement contains a magic number: session.CountersFor("users/1").Increment("likes"' 100);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_OutgoingReplicationFrom41To40_ShouldStopAfterUsingCounters,The following statement contains a magic number: Assert.Equal(100' val);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_OutgoingReplicationFrom41To40_ShouldStopAfterUsingCounters,The following statement contains a magic number: Assert.True(WaitForDocument<User>(                      storeB'                      "users/2"'                      u => true'                      (int)TimeSpan.FromSeconds(5).TotalMilliseconds'                      dbName));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_OutgoingReplicationFrom41To40_ShouldStopAfterUsingCounters,The following statement contains a magic number: Assert.False(WaitForDocument<User>(                      storeC'                      "users/2"'                      u => true'                      (int)TimeSpan.FromSeconds(5).TotalMilliseconds'                      dbName));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_OutgoingReplicationFrom41To40_ShouldStopAfterUsingCounters,The following statement contains a magic number: Assert.False(WaitForDocument<User>(                      storeD'                      "users/2"'                      u => true'                      (int)TimeSpan.FromSeconds(5).TotalMilliseconds'                      dbName));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ClientFailoverInMixedCluster_V41Store,The following statement contains a magic number: var dbName = await CreateDatabase(storeA' 3);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ClientFailoverInMixedCluster_V41Store,The following statement contains a magic number: await Task.Delay(500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ClientFailoverInMixedCluster_V41Store,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      "users/1"'                      u => u.Name.Equals("aviv")'                      TimeSpan.FromSeconds(10)'                      stores.Stores'                      dbName));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ClientFailoverInMixedCluster_V41Store,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      "users/1"'                      u => u.Name.Equals("aviv")'                      TimeSpan.FromSeconds(10)'                      stores.Stores'                      dbName));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ClientFailoverInMixedCluster_V40Store,The following statement contains a magic number: var storeC = stores.Stores[2];
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ClientFailoverInMixedCluster_V40Store,The following statement contains a magic number: var dbName = await CreateDatabase(storeA' 3);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ClientFailoverInMixedCluster_V40Store,The following statement contains a magic number: await Task.Delay(500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ClientFailoverInMixedCluster_V40Store,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      "users/1"'                      u => u.Name.Equals("aviv")'                      TimeSpan.FromSeconds(10)'                      stores.Stores'                      dbName));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,ClientFailoverInMixedCluster_V40Store,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      "users/1"'                      u => u.Name.Equals("aviv")'                      TimeSpan.FromSeconds(10)'                      stores.Stores'                      dbName));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,SubscriptionsInMixedCluster_FailoverFrom41To40,The following statement contains a magic number: var batchSize = 5;
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,SubscriptionsInMixedCluster_FailoverFrom41To40,The following statement contains a magic number: var dbName = await CreateDatabase(storeA' 3);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,SubscriptionsInMixedCluster_FailoverFrom41To40,The following statement contains a magic number: await Task.Delay(500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,SubscriptionsInMixedCluster_FailoverFrom41To40,The following statement contains a magic number: await CreateDocuments(storeA' dbName' 10);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,SubscriptionsInMixedCluster_FailoverFrom41To40,The following statement contains a magic number: await CreateDocuments(storeA' dbName' 10);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,SubscriptionsInMixedCluster_FailoverFrom410To41,The following statement contains a magic number: var batchSize = 5;
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,SubscriptionsInMixedCluster_FailoverFrom410To41,The following statement contains a magic number: var storeC = stores.Stores[2];
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,SubscriptionsInMixedCluster_FailoverFrom410To41,The following statement contains a magic number: var dbName = await CreateDatabase(storeA' 3);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,SubscriptionsInMixedCluster_FailoverFrom410To41,The following statement contains a magic number: await Task.Delay(500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,SubscriptionsInMixedCluster_FailoverFrom410To41,The following statement contains a magic number: await CreateDocuments(storeA' dbName' 10);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,SubscriptionsInMixedCluster_FailoverFrom410To41,The following statement contains a magic number: await CreateDocuments(storeA' dbName' 10);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,V40Cluster_V41Client_BasicReplication,The following statement contains a magic number: await Task.Delay(2500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,V40Cluster_V41Client_BasicReplication,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,V40Cluster_V41Client_BasicReplication,The following statement contains a magic number: var dbName = await CreateDatabase(storeA' 3);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,V40Cluster_V41Client_BasicReplication,The following statement contains a magic number: await Task.Delay(500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,V40Cluster_V41Client_BasicReplication,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      "users/1"'                      u => u.Name.Equals("aviv")'                      TimeSpan.FromSeconds(10)'                      new List<DocumentStore>                      {                          storeA' storeB' storeC                      }'                      dbName));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,V40Cluster_V41Client_Counters,The following statement contains a magic number: await Task.Delay(2500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,V40Cluster_V41Client_Counters,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,V40Cluster_V41Client_Counters,The following statement contains a magic number: var dbName = await CreateDatabase(storeA' 3);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,V40Cluster_V41Client_Counters,The following statement contains a magic number: await Task.Delay(500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,V40Cluster_V41Client_Counters,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      "users/1"'                      u => u.Name.Equals("aviv")'                      TimeSpan.FromSeconds(10)'                      new List<DocumentStore>                      {                          storeA' storeB' storeC                      }'                      dbName));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,V40Cluster_V41Client_ClusterTransactions,The following statement contains a magic number: await Task.Delay(2500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,V40Cluster_V41Client_ClusterTransactions,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,V40Cluster_V41Client_ClusterTransactions,The following statement contains a magic number: var dbName = await CreateDatabase(storeA' 3);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,V40Cluster_V41Client_ClusterTransactions,The following statement contains a magic number: await Task.Delay(500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,RevisionsInMixedCluster,The following statement contains a magic number: var dbName = await CreateDatabase(storeA' 3);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,RevisionsInMixedCluster,The following statement contains a magic number: await Task.Delay(500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,RevisionsInMixedCluster,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<Company>(                      company.Id'                      u => u.Name.Equals("Hibernating Rhinos")'                      TimeSpan.FromSeconds(10)'                      stores.Stores'                      dbName));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,RevisionsInMixedCluster,The following statement contains a magic number: Assert.Equal(2' companiesRevisions.Count);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_ClusterWideIdentity,The following statement contains a magic number: var dbName = await CreateDatabase(leaderStore' 3);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_ClusterWideIdentity,The following statement contains a magic number: await Task.Delay(500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_ClusterWideIdentity,The following statement contains a magic number: var result = nonLeader.Maintenance.Send(new SeedIdentityForOperation("users"' 1990));
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_ClusterWideIdentity,The following statement contains a magic number: Assert.Equal(1990' result);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_CanReorderDatabaseNodes,The following statement contains a magic number: var dbName = await CreateDatabase(storeA' 3);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_CanReorderDatabaseNodes,The following statement contains a magic number: await Task.Delay(500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The following statement contains a magic number: var nodesAmount = 5;
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The following statement contains a magic number: var (leader' peers' local) = await CreateMixedCluster(new[]              {                  "4.0.7"'                  "4.0.7"              }' 2' new Dictionary<string' string>              {                  [RavenConfiguration.GetKey(x => x.Cluster.MoveToRehabGraceTime)] = "1"              });
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The following statement contains a magic number: await Task.Delay(500);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The following statement contains a magic number: subscription = storeA.Subscriptions.GetSubscriptionWorker<Revision<User>>(new SubscriptionWorkerOptions(subscriptionId)                      {                          MaxDocsPerBatch = 1'                          TimeToWaitBeforeConnectionRetry = TimeSpan.FromMilliseconds(100)                      }' dbName);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The following statement contains a magic number: i < 10
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The following statement contains a magic number: Assert.NotEqual(i' 10);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The following statement contains a magic number: expectedRevisionsCount = nodesAmount + 2;
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The following statement contains a magic number: expectedRevisionsCount += 2;
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,MixedCluster_DistributedRevisionsSubscription,The following statement contains a magic number: expectedRevisionsCount = (int)Math.Pow(nodesAmount' 2);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,HandleSubscriptionBatch,The following statement contains a magic number: docsCount == nodesAmount && revisionsCount == Math.Pow(nodesAmount' 2)
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,CreateAndInitiateSubscription,The following statement contains a magic number: var subscription = store.Subscriptions.GetSubscriptionWorker<User>(new SubscriptionWorkerOptions(subscriptionName)              {                  TimeToWaitBeforeConnectionRetry = TimeSpan.FromMilliseconds(500)'                  MaxDocsPerBatch = batchSize                }' database: database);
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,CreateAndInitiateSubscription,The following statement contains a magic number: var task = subscription.Run(a =>              {                  foreach (var item in a.Items)                  {                      var x = item.Result;                      int curId = 0;                      var afterSlash = x.Id.Substring(x.Id.LastIndexOf("/"' StringComparison.OrdinalIgnoreCase) + 1);                      curId = int.Parse(afterSlash.Substring(0' afterSlash.Length - 2));                      Assert.True(curId >= proggress.MaxId);                      usersCount.Add(x);                      proggress.MaxId = curId;                  }              });
Magic Number,InterversionTests,MixedClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\MixedClusterTests.cs,CreateAndInitiateSubscription,The following statement contains a magic number: subscription.AfterAcknowledgment += b =>              {                  try                  {                      if (usersCount.Count == 10)                      {                          reachedMaxDocCountMre.Set();                      }                  }                  catch (Exception)                  {                      }                  return Task.CompletedTask;              };
Magic Number,InterversionTests,SmugglerTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\SmugglerTests.cs,CanExportFrom41AndImportTo40,The following statement contains a magic number: session.CountersFor(o).Increment("downloads"' 100);
Magic Number,InterversionTests,SmugglerTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\SmugglerTests.cs,CanExportFrom42AndImportTo41,The following statement contains a magic number: i < 5
Magic Number,InterversionTests,SmugglerTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\InterversionTests\SmugglerTests.cs,CanExportAndImportClient42Server41,The following statement contains a magic number: i < 5
