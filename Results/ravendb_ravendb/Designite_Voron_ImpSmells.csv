Implementation smell,Namespace,Class,File,Method,Description
Long Method,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,DirectAdd,The method has 102 lines of code.
Long Method,Voron.Data.BTrees,TreePageSplitter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePageSplitter.cs,SplitPageInHalf,The method has 130 lines of code.
Long Method,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,RebalancePage,The method has 191 lines of code.
Long Method,Voron.Impl.Backup,FullBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\FullBackup.cs,Backup,The method has 123 lines of code.
Long Method,Voron.Impl.Backup,IncrementalBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\IncrementalBackup.cs,Incremental_Backup,The method has 106 lines of code.
Long Method,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyVariableSizeTree,The method has 145 lines of code.
Long Method,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTableTree,The method has 115 lines of code.
Long Method,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,ReadOneTransactionToDataFile,The method has 148 lines of code.
Long Method,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,The method has 161 lines of code.
Long Method,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,RecoverDatabase,The method has 190 lines of code.
Long Method,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The method has 179 lines of code.
Long Method,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ApplyLogsToDataFile,The method has 109 lines of code.
Complex Method,Voron,GlobalFlushingBehavior,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\GlobalFlushingBehavior.cs,SyncEnvironments,Cyclomatic complexity of the method is 8
Complex Method,Voron,GlobalFlushingBehavior,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\GlobalFlushingBehavior.cs,FlushEnvironments,Cyclomatic complexity of the method is 9
Complex Method,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,TransactionCompleted,Cyclomatic complexity of the method is 8
Complex Method,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,SetTransactionMode,Cyclomatic complexity of the method is 8
Complex Method,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,SetDurability,Cyclomatic complexity of the method is 9
Complex Method,Voron.Data.BTrees,RecentlyFoundTreePages,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\RecentlyFoundTreePages.cs,Find,Cyclomatic complexity of the method is 10
Complex Method,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,HandleUncompressedNodes,Cyclomatic complexity of the method is 12
Complex Method,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,DirectAdd,Cyclomatic complexity of the method is 14
Complex Method,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,AllPages,Cyclomatic complexity of the method is 10
Complex Method,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,DebugValidateBranchReferences,Cyclomatic complexity of the method is 8
Complex Method,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,MultiAdd,Cyclomatic complexity of the method is 14
Complex Method,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,MultiDelete,Cyclomatic complexity of the method is 10
Complex Method,Voron.Data.BTrees,TreeCursorConstructor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeCursorHandler.cs,Build,Cyclomatic complexity of the method is 8
Complex Method,Voron.Data.BTrees,TreeIterator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeIterator.cs,MovePrev,Cyclomatic complexity of the method is 10
Complex Method,Voron.Data.BTrees,TreeIterator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeIterator.cs,MoveNext,Cyclomatic complexity of the method is 10
Complex Method,Voron.Data.BTrees,TreePage,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePage.cs,Search,Cyclomatic complexity of the method is 10
Complex Method,Voron.Data.BTrees,TreePageSplitter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePageSplitter.cs,SplitPageInHalf,Cyclomatic complexity of the method is 17
Complex Method,Voron.Data.BTrees,TreePageSplitter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePageSplitter.cs,AdjustSplitPosition,Cyclomatic complexity of the method is 9
Complex Method,Voron.Data.BTrees,TreeRebalancer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeRebalancer.cs,Execute,Cyclomatic complexity of the method is 14
Complex Method,Voron.Impl,Transaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Transaction.cs,PrepareForCommit,Cyclomatic complexity of the method is 8
Complex Method,Voron.Impl,Transaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Transaction.cs,Dispose,Cyclomatic complexity of the method is 9
Complex Method,Voron.Impl,Transaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Transaction.cs,DeleteTable,Cyclomatic complexity of the method is 11
Complex Method,Voron.Data.Compression,DecompressionBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\DecompressionBuffersPool.cs,GetTemporaryPage,Cyclomatic complexity of the method is 11
Complex Method,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,ValidateTree_Forced,Cyclomatic complexity of the method is 9
Complex Method,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,DeleteRangeLarge,Cyclomatic complexity of the method is 14
Complex Method,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,RemoveRangeFromPage,Cyclomatic complexity of the method is 11
Complex Method,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,RebalancePage,Cyclomatic complexity of the method is 16
Complex Method,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,Voron.Data.Fixed,LargeIterator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,MovePrev,Cyclomatic complexity of the method is 8
Complex Method,Voron.Data.Fixed,LargeIterator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,MoveNext,Cyclomatic complexity of the method is 9
Complex Method,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,TryAllocate,Cyclomatic complexity of the method is 8
Complex Method,Voron.Data.Tables,NewPageAllocator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\NewPageAllocator.cs,AllocateSinglePage,Cyclomatic complexity of the method is 13
Complex Method,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,Delete,Cyclomatic complexity of the method is 9
Complex Method,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,UpdateValuesFromIndex,Cyclomatic complexity of the method is 8
Complex Method,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,DeleteForwardFrom,Cyclomatic complexity of the method is 9
Complex Method,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,DeleteForwardFrom,Cyclomatic complexity of the method is 8
Complex Method,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,AssertValidTable,Cyclomatic complexity of the method is 11
Complex Method,Voron.Data.Tables,TableSchema,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableSchema.cs,Create,Cyclomatic complexity of the method is 8
Complex Method,Voron.Data.Tables,TableSchema,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableSchema.cs,Validate,Cyclomatic complexity of the method is 10
Complex Method,Voron.Data.Tables,TableValueBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableValueBuilder.cs,CopyTo,Cyclomatic complexity of the method is 9
Complex Method,Voron.Impl.Backup,FullBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\FullBackup.cs,Backup,Cyclomatic complexity of the method is 9
Complex Method,Voron.Impl.Backup,IncrementalBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\IncrementalBackup.cs,Incremental_Backup,Cyclomatic complexity of the method is 9
Complex Method,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTableTree,Cyclomatic complexity of the method is 13
Complex Method,Voron.Impl.FileHeaders,HeaderAccessor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FileHeaders\HeaderAccessor.cs,Initialize,Cyclomatic complexity of the method is 13
Complex Method,Voron.Impl.FreeSpace,FreeSpaceHandling,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\FreeSpaceHandling.cs,TryFindContinuousRange,Cyclomatic complexity of the method is 8
Complex Method,Voron.Impl.FreeSpace,FreeSpaceHandling,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\FreeSpaceHandling.cs,TryFindSmallValueMergingTwoSections,Cyclomatic complexity of the method is 8
Complex Method,Voron.Impl.Journal,JournalFile,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalFile.cs,FreeScratchPagesOlderThan,Cyclomatic complexity of the method is 9
Complex Method,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,ReadOneTransactionToDataFile,Cyclomatic complexity of the method is 24
Complex Method,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,Cyclomatic complexity of the method is 21
Complex Method,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,RecoverDatabase,Cyclomatic complexity of the method is 25
Complex Method,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,WriteToJournal,Cyclomatic complexity of the method is 8
Complex Method,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,Cyclomatic complexity of the method is 12
Complex Method,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ApplyLogsToDataFile,Cyclomatic complexity of the method is 17
Complex Method,Voron.Impl.Journal,LockTaskResponsible,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,WaitForTaskToBeDone,Cyclomatic complexity of the method is 9
Complex Method,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,SetPagerState,Cyclomatic complexity of the method is 8
Complex Method,Voron.Impl.Paging,CryptoPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\CryptoPager.cs,TxOnCommit,Cyclomatic complexity of the method is 8
Complex Method,Voron.Impl.Paging,Windows32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,MapPages,Cyclomatic complexity of the method is 8
Complex Method,Voron.Impl.Scratch,ScratchBufferPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferPool.cs,Free,Cyclomatic complexity of the method is 8
Complex Method,Voron.Platform.Win32,WindowsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\WindowsMemoryMapPager.cs,WindowsMemoryMapPager,Cyclomatic complexity of the method is 9
Complex Method,Voron.Util,RacyConcurrentBag,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\ActiveTransactions.cs,Remove,Cyclomatic complexity of the method is 10
Complex Method,Voron.Util,RacyConcurrentBag,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\ActiveTransactions.cs,Add,Cyclomatic complexity of the method is 9
Complex Method,Voron.Util,PtrSize,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\PtrSize.cs,Create,Cyclomatic complexity of the method is 12
Complex Method,Voron.Util,Reflection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Reflection.cs,InfoOf,Cyclomatic complexity of the method is 9
Long Parameter List,Voron,Slice,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Slice.cs,From,The method has 6 parameters. Parameters: context' value' offset' count' type' str
Long Parameter List,Voron,Slice,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Slice.cs,From,The method has 5 parameters. Parameters: context' value' size' type' str
Long Parameter List,Voron,Slice,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Slice.cs,External,The method has 5 parameters. Parameters: context' value' offset' size' slice
Long Parameter List,Voron,Slice,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Slice.cs,External,The method has 5 parameters. Parameters: context' value' size' type' slice
Long Parameter List,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,UnlikelyValidatePage,The method has 5 parameters. Parameters: pageNumber' current' index' old' bitToSet
Long Parameter List,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,ForPath,The method has 5 parameters. Parameters: path' tempPath' journalPath' ioChangesNotifications' catastrophicFailureNotification
Long Parameter List,Voron,DirectoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,DirectoryStorageEnvironmentOptions,The method has 5 parameters. Parameters: basePath' tempPath' journalPath' ioChangesNotifications' catastrophicFailureNotification
Long Parameter List,Voron,DirectoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,GetMemoryMapPager,The method has 5 parameters. Parameters: options' initialSize' file' deleteOnClose' usePageProtection
Long Parameter List,Voron,DirectoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,GetMemoryMapPagerInternal,The method has 5 parameters. Parameters: options' initialSize' file' deleteOnClose' usePageProtection
Long Parameter List,Voron.Data.BTrees,ParentPageAction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\ParentPageAction.cs,ParentPageAction,The method has 5 parameters. Parameters: parentPage' currentPage' tree' cursor' tx
Long Parameter List,Voron.Data.BTrees,FoundTreePage,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\RecentlyFoundTreePages.cs,FoundTreePage,The method has 7 parameters. Parameters: number' page' firstKey' lastKey' cursorPath' firstScope' lastScope
Long Parameter List,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,Tree,The method has 6 parameters. Parameters: llt' tx' root' name' isIndexTree' newPageAllocator
Long Parameter List,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,Open,The method has 7 parameters. Parameters: llt' tx' name' header' type' isIndexTree' newPageAllocator
Long Parameter List,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,Create,The method has 7 parameters. Parameters: llt' tx' name' flags' type' isIndexTree' newPageAllocator
Long Parameter List,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,SearchForPage,The method has 5 parameters. Parameters: key' allowCompressed' cursorConstructor' node' addToRecentlyFoundPages
Long Parameter List,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,ExpandMultiTreeNestedPageSize,The method has 5 parameters. Parameters: key' value' nestedPagePtr' newSize' currentSize
Long Parameter List,Voron.Data.BTrees,TreeCursorConstructor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeCursorHandler.cs,TreeCursorConstructor,The method has 5 parameters. Parameters: llt' tree' pageCopy' cursorPath' lastFoundPageNumber
Long Parameter List,Voron.Data.BTrees,TreePageSplitter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePageSplitter.cs,TreePageSplitter,The method has 8 parameters. Parameters: tx' tree' newKey' len' pageNumber' nodeType' cursor' splittingOnDecompressed
Long Parameter List,Voron.Data.BTrees,TreePageSplitter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePageSplitter.cs,GatherDetailedDebugInfo,The method has 6 parameters. Parameters: rightPage' currentKey' seperatorKey' currentIndex' splitIndex' toRight
Long Parameter List,Voron.Data.BTrees,TreeRebalancer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeRebalancer.cs,AddSeparatorToParentPage,The method has 5 parameters. Parameters: childPage' parentPage' pageNumber' seperatorKey' separatorKeyPosition
Long Parameter List,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,LowLevelTransaction,The method has 6 parameters. Parameters: env' id' transactionPersistentContext' flags' freeSpaceHandling' context
Long Parameter List,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,AllocateOverflowRawPage,The method has 5 parameters. Parameters: overflowSize' numberOfPages' pageNumber' previousPage' zeroPage
Long Parameter List,Voron.Impl,PagePosition,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\PagePosition.cs,PagePosition,The method has 5 parameters. Parameters: scratchPos' transactionId' journalNumber' scratchNumber' isFreedPageMarker
Long Parameter List,Voron.Impl,Transaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Transaction.cs,CreateTree,The method has 5 parameters. Parameters: name' type' flags' isIndexTree' newPageAllocator
Long Parameter List,Voron.Impl,Transaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Transaction.cs,CreateTree,The method has 5 parameters. Parameters: name' type' flags' isIndexTree' newPageAllocator
Long Parameter List,Voron.Data.Compression,DecompressedLeafPage,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\DecompressedLeafPage.cs,DecompressedLeafPage,The method has 5 parameters. Parameters: basePtr' pageSize' usage' original' tempPage
Long Parameter List,Voron.Data.Compression,DecompressionBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\DecompressionBuffersPool.cs,DecompressionBuffer,The method has 6 parameters. Parameters: pager' position' size' pool' index' tx
Long Parameter List,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,FixedSizeTree,The method has 7 parameters. Parameters: tx' parent' treeName' valSize' clone' isIndexTree' newPageAllocator
Long Parameter List,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,CopyEmbeddedContentToTempPage,The method has 5 parameters. Parameters: key' tmp' isNew' newSize' srcCopyStart
Long Parameter List,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,Table,The method has 6 parameters. Parameters: schema' name' tx' tableTree' tableType' doSchemaValidation
Long Parameter List,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,GetFixedSizeTree,The method has 5 parameters. Parameters: parent' name' valSize' isGlobal' isIndexTree
Long Parameter List,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,DeleteForwardFrom,The method has 6 parameters. Parameters: index' value' startsWith' numberOfEntriesToDelete' beforeDelete' shouldAbort
Long Parameter List,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,DeleteForwardFrom,The method has 5 parameters. Parameters: index' value' startsWith' numberOfEntriesToDelete' beforeDelete
Long Parameter List,Voron.Debugging,DebugStuff,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\DebugStuff.cs,DumpFixedSizeTreeToStream,The method has 5 parameters. Parameters: tx' fst' writer' name' tree
Long Parameter List,Voron.Debugging,DebugStuff,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\DebugStuff.cs,RenderFixedSizeTreePage,The method has 6 parameters. Parameters: tx' page' sw' header' text' open
Long Parameter List,Voron.Debugging,DebugStuff,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\DebugStuff.cs,RenderPage,The method has 5 parameters. Parameters: tree' page' sw' text' open
Long Parameter List,Voron.Impl.Backup,FullBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\FullBackup.cs,ToFile,The method has 5 parameters. Parameters: envs' archive' compressionLevel' infoNotify' cancellationToken
Long Parameter List,Voron.Impl.Backup,FullBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\FullBackup.cs,Backup,The method has 8 parameters. Parameters: env' compressionLevel' dataPager' package' basePath' copier' infoNotify' cancellationToken
Long Parameter List,Voron.Impl.Backup,FullBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\FullBackup.cs,Restore,The method has 5 parameters. Parameters: backupPath' voronDataDir' journalDir' onProgress' cancellationToken
Long Parameter List,Voron.Impl.Backup,FullBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\FullBackup.cs,Restore,The method has 5 parameters. Parameters: entries' voronDataDir' journalDir' onProgress' cancellationToken
Long Parameter List,Voron.Impl.Backup,IncrementalBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\IncrementalBackup.cs,ToFile,The method has 5 parameters. Parameters: env' backupPath' compression' infoNotify' backupStarted
Long Parameter List,Voron.Impl.Backup,IncrementalBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\IncrementalBackup.cs,ToFile,The method has 5 parameters. Parameters: envs' backupPath' compression' infoNotify' backupStarted
Long Parameter List,Voron.Impl.Backup,IncrementalBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\IncrementalBackup.cs,Incremental_Backup,The method has 7 parameters. Parameters: env' compression' infoNotify' backupStarted' package' basePath' copier
Long Parameter List,Voron.Impl.Backup,IncrementalBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\IncrementalBackup.cs,Restore,The method has 5 parameters. Parameters: env' entries' tempDir' toDispose' txw
Long Parameter List,Voron.Impl.Backup,VoronBackupUtil,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\VoronBackupUtil.cs,CopyHeaders,The method has 5 parameters. Parameters: compression' package' copier' storageEnvironmentOptions' basePath
Long Parameter List,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyFixedSizeTreeFromRoot,The method has 9 parameters. Parameters: compactedEnv' progressReport' txr' rootIterator' treeName' copiedTrees' totalTreesCount' context' token
Long Parameter List,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyFixedSizeTree,The method has 7 parameters. Parameters: fst' createDestinationTree' compactedEnv' context' onEntriesCopiedProgress' onAllEntriesCopied' token
Long Parameter List,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyVariableSizeTree,The method has 8 parameters. Parameters: compactedEnv' progressReport' txr' treeName' copiedTrees' totalTreesCount' context' token
Long Parameter List,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTableTree,The method has 8 parameters. Parameters: compactedEnv' progressReport' txr' treeName' copiedTrees' totalTreesCount' context' token
Long Parameter List,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,ReportIfNeeded,The method has 8 parameters. Parameters: sp' globalProgress' globalTotal' objectProgress' objectTotal' progressReport' message' treeName
Long Parameter List,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,Report,The method has 7 parameters. Parameters: globalProgress' globalTotal' objectProgress' objectTotal' progressReport' message' treeName
Long Parameter List,Voron.Impl.FreeSpace,FreeSpaceHandling,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\FreeSpaceHandling.cs,TryFindContinuousRange,The method has 7 parameters. Parameters: tx' freeSpaceTree' it' num' current' currentSectionId' page
Long Parameter List,Voron.Impl.FreeSpace,FreeSpaceHandling,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\FreeSpaceHandling.cs,TryFindSmallValueMergingTwoSections,The method has 6 parameters. Parameters: tx' freeSpacetree' currentSectionId' num' current' result
Long Parameter List,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,JournalReader,The method has 6 parameters. Parameters: journalPager' dataPager' recoveryPager' modifiedPages' journalInfo' previous
Long Parameter List,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,ThrowInvalidChecksumOnPageFromJournal,The method has 5 parameters. Parameters: pageNumber' current' expectedChecksum' checksum' pageHeader
Long Parameter List,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ApplyJournalStateAfterFlush,The method has 5 parameters. Parameters: token' lastProcessedJournal' lastFlushedTransactionId' unusedJournals' byteStringContext
Long Parameter List,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ThrowInvalidChecksumOnPageFromScratch,The method has 5 parameters. Parameters: scratchNumber' pagePosition' page' checksum' expectedChecksum
Long Parameter List,Voron.Impl.Paging,RvnMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\RvnMemoryMapPager.cs,RvnMemoryMapPager,The method has 6 parameters. Parameters: options' file' initialFileSize' canPrefetchAhead' usePageProtection' deleteOnClose
Long Parameter List,Voron.Impl.Paging,Windows32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,Windows32BitsMemoryMapPager,The method has 6 parameters. Parameters: options' file' initialFileSize' fileAttributes' access' usePageProtection
Long Parameter List,Voron.Platform.Win32,Win32NativeFileMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\Win32NativeFileMethods.cs,WriteFileGather,The method has 5 parameters. Parameters: hFile' aSegmentArray' nNumberOfBytesToWrite' lpReserved' lpOverlapped
Long Parameter List,Voron.Platform.Win32,Win32NativeFileMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\Win32NativeFileMethods.cs,WriteFileEx,The method has 5 parameters. Parameters: hFile' lpBuffer' nNumberOfBytesToWrite' lpOverlapped' lpCompletionRoutine
Long Parameter List,Voron.Platform.Win32,Win32NativeFileMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\Win32NativeFileMethods.cs,WriteFile,The method has 5 parameters. Parameters: hFile' lpBuffer' nNumberOfBytesToWrite' lpNumberOfBytesWritten' lpOverlapped
Long Parameter List,Voron.Platform.Win32,Win32NativeFileMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\Win32NativeFileMethods.cs,WriteFile,The method has 5 parameters. Parameters: hFile' lpBuffer' nNumberOfBytesToWrite' lpNumberOfBytesWritten' lpOverlapped
Long Parameter List,Voron.Platform.Win32,Win32NativeFileMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\Win32NativeFileMethods.cs,ReadFile,The method has 5 parameters. Parameters: hFile' pBuffer' numBytesToRead' pNumberOfBytesRead' lpOverlapped
Long Parameter List,Voron.Platform.Win32,Win32NativeFileMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\Win32NativeFileMethods.cs,CreateFile,The method has 7 parameters. Parameters: lpFileName' dwDesiredAccess' dwShareMode' lpSecurityAttributes' dwCreationDisposition' dwFlagsAndAttributes' hTemplateFile
Long Parameter List,Voron.Platform.Win32,Win32MemoryMapNativeMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\Win32NativeFileMethods.cs,CreateFileMapping,The method has 6 parameters. Parameters: hFile' lpFileMappingAttributes' flProtect' dwMaximumSizeHigh' dwMaximumSizeLow' lpName
Long Parameter List,Voron.Platform.Win32,Win32MemoryMapNativeMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\Win32NativeFileMethods.cs,MapViewOfFileEx,The method has 6 parameters. Parameters: hFileMappingObject' dwDesiredAccess' dwFileOffsetHigh' dwFileOffsetLow' dwNumberOfBytesToMap' lpBaseAddress
Long Parameter List,Voron.Platform.Win32,Win32NativeMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\Win32NativeFileMethods.cs,DeviceIoControl,The method has 8 parameters. Parameters: hDevice' IoControlCode' InMediaRemoval' InBufferSize' OutBuffer' OutBufferSize' BytesReturned' Overlapped
Long Parameter List,Voron.Platform.Win32,Win32NativeMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\Win32NativeFileMethods.cs,CreateFile,The method has 7 parameters. Parameters: FileName' DesiredAccess' ShareMode' lpSecurityAttributes' CreationDisposition' dwFlagsAndAttributes' hTemplateFile
Long Parameter List,Voron.Platform.Win32,WindowsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\WindowsMemoryMapPager.cs,WindowsMemoryMapPager,The method has 6 parameters. Parameters: options' file' initialFileSize' fileAttributes' access' usePageProtection
Long Parameter List,Voron.Util,DataCopier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\DataCopier.cs,ToStream,The method has 6 parameters. Parameters: src' startPage' numberOfPages' output' infoNotify' cancellationToken
Long Parameter List,Voron.Util,DataCopier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\DataCopier.cs,ToStream,The method has 7 parameters. Parameters: env' journal' start4Kb' numberOf4KbsToCopy' output' infoNotify' cancellationToken
Long Identifier,Voron.Global,Constants,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Constants.cs,,The length of the parameter DatabaseRecordFileNameInBackup is 30.
Long Identifier,Voron.Global,Constants,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Constants.cs,,The length of the parameter DefaultMaxLogLengthBeforeCompaction is 35.
Long Identifier,Voron,GlobalFlushingBehavior,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\GlobalFlushingBehavior.cs,FlushEnvironments,The length of the parameter sizeOfUnflushedTransactionsInJournalFile is 40.
Long Identifier,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,,The length of the parameter _currentWriteTransactionHolder is 30.
Long Identifier,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,,The length of the parameter SizeOfUnflushedTransactionsInJournalFile is 40.
Long Identifier,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,,The length of the parameter NumOfConcurrentSyncsPerPhysDrive is 32.
Long Identifier,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The length of the parameter catastrophicFailureNotification is 31.
Long Identifier,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,CreateMemoryOnly,The length of the parameter catastrophicFailureNotification is 31.
Long Identifier,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,ForPath,The length of the parameter catastrophicFailureNotification is 31.
Long Identifier,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,,The length of the parameter RecyclableJournalFileNamePrefix is 31.
Long Identifier,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,,The length of the parameter _skipCatastrophicFailureAssertion is 33.
Long Identifier,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,,The length of the parameter _catastrophicFailureNotification is 32.
Long Identifier,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,,The length of the parameter DoNotConsiderMemoryLockFailureAsCatastrophicError is 49.
Long Identifier,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,,The length of the parameter _numOfConcurrentSyncsPerPhysDrive is 33.
Long Identifier,Voron,DirectoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,DirectoryStorageEnvironmentOptions,The length of the parameter catastrophicFailureNotification is 31.
Long Identifier,Voron,PureMemoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,PureMemoryStorageEnvironmentOptions,The length of the parameter catastrophicFailureNotification is 31.
Long Identifier,Voron.Data.BTrees,ParentPageAction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\ParentPageAction.cs,AddSeparator,The length of the parameter originalLastSearchPositionOfParent is 34.
Long Identifier,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,,The length of the parameter _updatePageTranslationTableAndUnusedPages is 41.
Long Identifier,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,,The length of the parameter AlreadyAllowedDisposeWithLazyTransactionRunning is 47.
Long Identifier,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,,The length of the parameter LocalPossibleOldestReadTransaction is 34.
Long Identifier,Voron.Impl,TestingStuff,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,,The length of the parameter SimulateThrowingOnCommitStage2 is 30.
Long Identifier,Voron.Impl,TestingStuff,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,,The length of the parameter ActionToCallDuringEnsurePagerStateReference is 43.
Long Identifier,Voron.Impl,TestingStuff,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,,The length of the parameter ActionToCallJustBeforeWritingToJournal is 38.
Long Identifier,Voron.Impl,TestingStuff,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,,The length of the parameter ActionToCallDuringBeginAsyncCommitAndStartNewTransaction is 56.
Long Identifier,Voron.Data.Compression,DecompressionBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\DecompressionBuffersPool.cs,,The length of the parameter _maxNumberOfPagesInScratchBufferPool is 36.
Long Identifier,Voron.Data.Compression,LeafPageCompressor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\LeafPageCompressor.cs,TryGetCompressedTempPage,The length of the parameter sizeLeftForUncompressedEntries is 30.
Long Identifier,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,RebalancePage,The length of the parameter minNumberOfEntriesBeforeRebalance is 33.
Long Identifier,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTrees,The length of the parameter globalTableIndexesToSkipCopying is 31.
Long Identifier,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,,The length of the parameter CannotCompactBecauseOfIncrementalBackup is 39.
Long Identifier,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,,The length of the parameter _journalPagerNumberOfAllocated4Kb is 33.
Long Identifier,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,WriteToJournal,The length of the parameter tempEncCompressionPagerTxState is 30.
Long Identifier,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The length of the parameter tempEncCompressionPagerTxState is 30.
Long Identifier,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The length of the parameter pagesCountIncludingAllOverflowPages is 35.
Long Identifier,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,,The length of the parameter _maxNumberOfPagesRequiredForCompressionBuffer is 45.
Long Identifier,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,,The length of the parameter CurrentFlushingInProgressHolder is 31.
Long Identifier,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,,The length of the parameter _lastCompressionBufferReduceCheck is 33.
Long Identifier,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,,The length of the parameter _lastCompressionAccelerationInfo is 32.
Long Identifier,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ApplyLogsToDataFile,The length of the parameter previousJournalMaxTransactionId is 31.
Long Identifier,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ApplyLogsToDataFile,The length of the parameter currentJournalMaxTransactionId is 30.
Long Identifier,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ThrowReadByeondOldestActiveTransaction,The length of the parameter currentJournalMaxTransactionId is 30.
Long Identifier,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ThrowReadByeondOldestActiveTransaction,The length of the parameter previousJournalMaxTransactionId is 31.
Long Identifier,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,,The length of the parameter _waitForJournalStateUpdateUnderTx is 33.
Long Identifier,Voron.Impl.Journal,CompressedPagesResult,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,,The length of the parameter UpdatePageTranslationTableAndUnusedPages is 40.
Long Identifier,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,,The length of the parameter DoNotConsiderMemoryLockFailureAsCatastrophicError is 49.
Long Identifier,Voron.Impl.Paging,Windows32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,,The length of the parameter NumberOfPagesInAllocationGranularity is 36.
Long Identifier,Voron.Impl.Scratch,ScratchBufferFile,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferFile.cs,,The length of the parameter _freePagesBySizeAvailableImmediately is 36.
Long Identifier,Voron.Impl.Scratch,ScratchBufferFile,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferFile.cs,,The length of the parameter _txIdAfterWhichLatestFreePagesBecomeAvailable is 45.
Long Identifier,Voron.Impl.Scratch,ScratchBufferFile,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferFile.cs,,The length of the parameter _strongRefToAllocateInBytesFunc is 31.
Long Identifier,Voron.Impl.Scratch,ScratchBufferPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferPool.cs,Cleanup,The length of the parameter txIdAllowingToReleaseOldScratches is 33.
Long Identifier,Voron.Platform.Posix,Posix32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\Posix32BitsMemoryMapPager.cs,,The length of the parameter NumberOfPagesInAllocationGranularity is 36.
Long Identifier,Voron.Util,EndOfDiskSpaceEvent,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\EndOfDiskSpaceEvent.cs,EndOfDiskSpaceEvent,The length of the parameter availableSpaceWhenEventOccurred is 31.
Long Identifier,Voron.Util,EndOfDiskSpaceEvent,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\EndOfDiskSpaceEvent.cs,,The length of the parameter _availableSpaceWhenEventOccurred is 32.
Long Statement,Voron,GlobalFlushingBehavior,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\GlobalFlushingBehavior.cs,SyncEnvironments,The length of the statement  "                int parallelSyncsPerIo = Math.Min(StorageEnvironment.NumOfConcurrentSyncsPerPhysDrive' mountPoint.Value.StorageEnvironments.Count); " is 131.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,LoadExistingDatabase,The length of the statement  "                var message = _journal.Files.Count == 0 ? "Unrecoverable database" : "Database recovered partially. Some data was lost."; " is 121.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,LoadExistingDatabase,The length of the statement  "            Interlocked.Exchange(ref _transactionsCounter' header->TransactionId == 0 ? entry.TransactionId : header->TransactionId); " is 121.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,LoadExistingDatabase,The length of the statement  "            using (var root = Tree.Open(tx' null' Constants.RootTreeNameSlice' header->TransactionId == 0 ? &entry.Root : &header->Root)) " is 125.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,UpgradeSchemaIfRequired,The length of the statement  "                        ThrowSchemaUpgradeRequired(schemaVersionVal' $"Your data has a schema version '{schemaVersionVal}' that is newer than currently supported by database '{Options.SchemaVersion}'"); " is 178.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,UpgradeSchemaIfRequired,The length of the statement  "                        ThrowSchemaUpgradeRequired(schemaVersionVal' "You need to upgrade the schema but there is no schema upgrader provided."); " is 121.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,ThrowInvalidDisposeDuringActiveTransactions,The length of the statement  "                $"Could not dispose the environment {Options.BasePath} after {Options.DisposeWaitTime} because there are running transaction.{Environment.NewLine}" + " is 149.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,ThrowInvalidDisposeDuringActiveTransactions,The length of the statement  "                $"Either you have long running transactions or hung transactions. Can\'t dispose the environment because that would invalid memory regions{Environment.NewLine}" + " is 162.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,WriteTransaction,The length of the statement  "            var writeTransaction = new Transaction(NewLowLevelTransaction(transactionPersistentContext' TransactionFlags.ReadWrite' context' timeout)); " is 139.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,WriteTransaction,The length of the statement  "            var newLowLevelTransaction = NewLowLevelTransaction(transactionPersistentContext' TransactionFlags.ReadWrite' context' timeout); " is 128.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,ThrowOnTimeoutWaitingForWriteTxLock,The length of the statement  "                throw new TimeoutException("Tried and failed to get the tx lock with no timeout' someone else is holding the lock' will retry later..."); " is 137.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,ThrowOnTimeoutWaitingForWriteTxLock,The length of the statement  "                message += $"' the tx is currently owned by thread {copy.ManagedThreadId} - {copy.Name}' OS thread id: {copy.UnmanagedThreadId}"; " is 129.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,GenerateDetailedReport,The length of the statement  "            var numberOfAllocatedPages = Math.Max(_dataPager.NumberOfAllocatedPages' NextPageNumber - 1); // async apply to data file task " is 126.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,GenerateDetailedReport,The length of the statement  "                                if (SliceComparer.AreEqual(currentKey' NewPageAllocator.AllocationStorage)) // will be counted inside pre allocated buffers report " is 130.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,Stats,The length of the statement  "                var numberOfAllocatedPages = Math.Max(_dataPager.NumberOfAllocatedPages' State.NextPageNumber - 1); // async apply to data file task " is 132.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,HandleDataDiskFullException,The length of the statement  "            _endOfDiskSpace = new EndOfDiskSpaceEvent(exception.DirectoryPath' exception.CurrentFreeSpace' ExceptionDispatchInfo.Capture(exception)); " is 137.
Long Statement,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,ThrowInvalidChecksum,The length of the statement  "            var message = $"Invalid checksum for page {pageNumber}' data file {_options.DataPager} might be corrupted' expected hash to be {current->Checksum} but was {checksum}. "; " is 169.
Long Statement,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,InvokeRecoveryError,The length of the statement  "                                               $"An exception has been thrown because there isn't a listener to the {nameof(OnRecoveryError)} event on the storage options."' e); " is 130.
Long Statement,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,InvokeIntegrityErrorOfAlreadySyncedData,The length of the statement  "                                               $"An exception has been thrown because there isn't a listener to the {nameof(OnIntegrityErrorOfAlreadySyncedData)} event on the storage options."' e); " is 150.
Long Statement,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,InvokeNonDurableFileSystemError,The length of the statement  "                                               "An exception has been thrown because there isn't a listener to the OnNonDurableFileSystemError event on the storage options."' " is 127.
Long Statement,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,SetCatastrophicFailure,The length of the statement  "            _catastrophicFailureNotification.RaiseNotificationOnce(_environmentId' ToString()' exception.SourceException' _catastrophicFailureStack); " is 137.
Long Statement,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,AssertNoCatastrophicFailure,The length of the statement  "                _log.Info($"CatastrophicFailure state' about to throw. Originally was set in the following stack trace : {_catastrophicFailureStack}"); " is 135.
Long Statement,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,CreateMemoryOnly,The length of the statement  "            return new PureMemoryStorageEnvironmentOptions(name' tempPathSetting' ioChangesNotifications' catastrophicFailureNotification); " is 127.
Long Statement,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,ForPath,The length of the statement  "            return new DirectoryStorageEnvironmentOptions(pathSetting' tempPathSetting' journalPathSetting' ioChangesNotifications' catastrophicFailureNotification); " is 153.
Long Statement,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,SetDurability,The length of the statement  "                                    $"Failed to create test file at '{testFile}'. Error:'{PalHelper.GetNativeErrorString(errorCode' "Failed to open test file"' out _)}'. Cannot determine if O_DIRECT supported by the file system. Assuming it is"); " is 210.
Long Statement,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,SetDurability,The length of the statement  "                                    $"Failed to allocate test file at '{testFile}'. Error:'{PalHelper.GetNativeErrorString(errorCode' "Failed to allocate space for test file"' out _)}'. Cannot determine if O_DIRECT supported by the file system. Assuming it is"); " is 226.
Long Statement,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,SetDurability,The length of the statement  "                                $"Storage type '{PosixHelper.GetFileSystemOfPath(BasePath.FullPath)}' doesn't support direct write to disk (non durable file system)"; " is 134.
Long Statement,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,SetDurability,The length of the statement  "                                $"Unknown failure on test file at '{testFile}'. Error:'{PalHelper.GetNativeErrorString(errorCode' "Unknown error while testing O_DIRECT"' out _)}'. Cannot determine if O_DIRECT supported by the file system. Assuming it is"); " is 224.
Long Statement,Voron,DirectoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,TryStoreJournalForReuse,The length of the statement  "                        _log.Info(reusedCount > _lastReusedJournalCountOnSync ? "Can't remove" : "Can't store" + " journal for reuse : " + filename' ex); " is 129.
Long Statement,Voron,DirectoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,WriteHeader,The length of the statement  "                    PalHelper.ThrowLastError(rc' errorCode' $"Failed to rvn_write_header '{filename}'' reason : {((PalFlags.FailCodes)rc).ToString()}"); " is 132.
Long Statement,Voron,DirectoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,GetTemporaryPager,The length of the statement  "                throw new InvalidOperationException("Unable to create temporary mapped file " + name + "' even after trying multiple times."' err); " is 131.
Long Statement,Voron,DirectoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,GetMemoryMapPagerInternal,The length of the statement  "                    return new RvnMemoryMapPager(options' file' initialSize' usePageProtection: usePageProtection' deleteOnClose: deleteOnClose); " is 125.
Long Statement,Voron,DirectoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,GetMemoryMapPagerInternal,The length of the statement  "                    ? Win32NativeFileAttributes.DeleteOnClose | Win32NativeFileAttributes.Temporary | Win32NativeFileAttributes.RandomAccess " is 120.
Long Statement,Voron,PureMemoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,GetTempMemoryMapPager,The length of the statement  "                    Win32NativeFileAttributes.RandomAccess | Win32NativeFileAttributes.DeleteOnClose | Win32NativeFileAttributes.Temporary); " is 120.
Long Statement,Voron,PureMemoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,GetTempMemoryMapPagerInternal,The length of the statement  "                        Win32NativeFileAttributes.RandomAccess | Win32NativeFileAttributes.DeleteOnClose | Win32NativeFileAttributes.Temporary); " is 120.
Long Statement,Voron,PureMemoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,GetTempMemoryMapPagerInternal,The length of the statement  "                        Win32NativeFileAttributes.RandomAccess | Win32NativeFileAttributes.DeleteOnClose | Win32NativeFileAttributes.Temporary); " is 120.
Long Statement,Voron,PureMemoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,CreateScratchPager,The length of the statement  "                        Win32NativeFileAttributes.RandomAccess | Win32NativeFileAttributes.DeleteOnClose | Win32NativeFileAttributes.Temporary); " is 120.
Long Statement,Voron,PureMemoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,CreateTemporaryBufferPager,The length of the statement  "                        Win32NativeFileAttributes.RandomAccess | Win32NativeFileAttributes.DeleteOnClose | Win32NativeFileAttributes.Temporary); " is 120.
Long Statement,Voron.Data.BTrees,ParentPageAction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\ParentPageAction.cs,AddSeparator,The length of the statement  "                    // the above page split has modified the cursor that its first page points to the parent of the leaf where 'separatorKey' was inserted " is 134.
Long Statement,Voron.Data.BTrees,ParentPageAction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\ParentPageAction.cs,AddSeparator,The length of the statement  "                Debug.Assert(_cursor.CurrentPage.GetNode(_cursor.CurrentPage.LastSearchPosition)->PageNumber == _currentPage.PageNumber'  " is 120.
Long Statement,Voron.Data.BTrees,ParentPageAction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\ParentPageAction.cs,AddSeparator,The length of the statement  "                Debug.Assert(Enumerable.Range(0' parentToValidate.NumberOfEntries).Any(i => parentToValidate.GetNode(i)->PageNumber == pageRefNumber)' " is 134.
Long Statement,Voron.Data.BTrees,ParentPageAction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\ParentPageAction.cs,EnsureValidLastSearchPosition,The length of the statement  "            if (page.NumberOfEntries <= originalLastSearchPosition || page.GetNode(originalLastSearchPosition)->PageNumber != referencedPageNumber) " is 135.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,TryCompressPageNodes,The length of the statement  "                pageToCompress = DecompressPage(page' usage: DecompressionUsage.Write); // no need to dispose' it's going to be cached anyway " is 125.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,TryCompressPageNodes,The length of the statement  "            using (LeafPageCompressor.TryGetCompressedTempPage(_llt' pageToCompress' out CompressionResult result' defrag: alreadyCompressed == false)) " is 139.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,TryCompressPageNodes,The length of the statement  "                    // since we put compressed entries at the beginning of that page (temporarily) then props like NumberOfEntries and KeysOffsets " is 126.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,DirectAdd,The length of the statement  "            var foundPage = FindPageFor(key' node: out TreeNodeHeader* node' cursor: out TreeCursorConstructor cursorConstructor' allowCompressed: true); " is 141.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,ThrowInvalidKeySize,The length of the statement  "                $"Key size is too big' must be at most {AbstractPager.MaxKeySize} bytes' but was {(key.Size + AbstractPager.RequiredSpaceForNewNode)}"' " is 135.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,SetLastSearchPosition,The length of the statement  "            Debug.Assert(p.LastSearchPosition >= 0' $"Page LastSearchPosition should be positive' LastSearchPosition: {p.LastSearchPosition}' PageNumber: {p.PageNumber}"); " is 159.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,ThrowOnCompressedPage,The length of the statement  "            throw new PageCompressedException($"Page {p} is compressed. You need to decompress it to be able to access its content."); " is 122.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,AddToRecentlyFoundPages,The length of the statement  "            var foundPage = new RecentlyFoundTreePages.FoundTreePage(p.PageNumber' p' firstKey' lastKey' c.ToArray()' firstScope' lastScope); " is 129.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,AddToRecentlyFoundPages,The length of the statement  "            var foundPage = new RecentlyFoundTreePages.FoundTreePage(p.PageNumber' p' firstKey' lastKey' cursorPath' firstScope' lastScope); " is 128.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,ThrowAttemptToFreeIndexPageToFreeSpaceHandling,The length of the statement  "            throw new InvalidOperationException($"Attempting to free page #{pageNumber} of '{treeName}' index tree to the free space handling. The page was allocated by {nameof(NewPageAllocator)} so it needs to be returned there."); " is 220.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,ThrowAttemptToFreePageToNewPageAllocator,The length of the statement  "            throw new InvalidOperationException($"Attempting to free page #{pageNumber} of '{treeName}' tree to {nameof(NewPageAllocator)} while it wasn't allocated by it"); " is 161.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,GetParentPageOf,The length of the statement  "                            $"Could not find a page containing {key} when looking for a parent of {page}. Page {p} was found' last match: {p.LastMatch}."); " is 127.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,AllPages,The length of the statement  "                        if (State.RootObjectType == RootObjectType.Table) // tables might have mixed values' fixed size trees inside have dedicated handling " is 132.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,DebugValidateBranchReferences,The length of the statement  "                                        throw new InvalidOperationException($"Found invalid reference in branch page: {p}. Reference key: {refKey}' key found in referenced {pageRef} page: {key}"); " is 156.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,MultiAdd,The length of the statement  "                throw new ArgumentException("Cannot add a value to child tree that is over " + maxNodeSize + " bytes in size"' nameof(value)); " is 126.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,MultiAdd,The length of the statement  "                    // ... and it won't require to create an overflow' so we can just expand the current value' no need to create a nested tree yet " is 127.
Long Statement,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,ThrowStreamSizeMismatch,The length of the statement  "                $"Stream size mismatch of '{name}' stream. Sum of chunks size is {totalChunksSize} while stream info has {info->TotalSize}"); " is 125.
Long Statement,Voron.Data.BTrees,TreeIterator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeIterator.cs,Seek,The length of the statement  "            _currentPage = _tree.FindPageFor(key' node: out node' cursor: out constructor' allowCompressed: _tree.IsLeafCompressionSupported); " is 130.
Long Statement,Voron.Data.BTrees,TreeNodeHeader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeNodeHeader.cs,ToSlice,The length of the statement  "            var scope = context.From((byte*)node + Constants.Tree.NodeHeaderSize' node->KeySize' type | (ByteStringType) SliceOptions.Key' out byteString); " is 143.
Long Statement,Voron.Data.BTrees,TreeNodeHeader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeNodeHeader.cs,ToSlicePtr,The length of the statement  "            var scope = context.FromPtr((byte*)node + Constants.Tree.NodeHeaderSize' node->KeySize' ByteStringType.Mutable | (ByteStringType)SliceOptions.Key' out str); " is 156.
Long Statement,Voron.Data.BTrees,TreeNodeHeader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeNodeHeader.cs,GetData,The length of the statement  "                return Slice.External(tx.Allocator' overFlowPage.Pointer + Constants.Tree.PageHeaderSize' (ushort)overFlowPage.OverflowSize' out slice); " is 136.
Long Statement,Voron.Data.BTrees,TreeNodeHeader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeNodeHeader.cs,GetData,The length of the statement  "            return Slice.External(tx.Allocator' (byte*)node + node->KeySize + Constants.Tree.NodeHeaderSize' (ushort) node->DataSize' out slice); " is 133.
Long Statement,Voron.Data.BTrees,TreePage,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePage.cs,ThrowNotSupportedException,The length of the statement  "            throw new NotSupportedException("This SliceOptions is not supported. Make sure you have updated this code when adding a new one."); " is 131.
Long Statement,Voron.Data.BTrees,TreePage,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePage.cs,CreateNode,The length of the statement  "                throw new InvalidOperationException(string.Format("The page is full and cannot add an entry' this is probably a bug. Key: {0}' data length: {1}' size left: {2}"' key' len' SizeLeft)); " is 183.
Long Statement,Voron.Data.BTrees,TreePage,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePage.cs,ToString,The length of the statement  "                result += $" Compressed ({CompressionHeader->NumberOfCompressedEntries} entries [uncompressed/compressed: {CompressionHeader->UncompressedSize}/{CompressionHeader->CompressedSize}]"; " is 182.
Long Statement,Voron.Data.BTrees,TreePageSplitter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePageSplitter.cs,SplitPageInHalf,The length of the statement  "                rightDecompressed = _tx.Environment.DecompressionBuffers.GetPage(_tx' decompressedPageSize.Value' DecompressionUsage.Write' rightPage); " is 135.
Long Statement,Voron.Data.BTrees,TreePageSplitter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePageSplitter.cs,SplitPageInHalf,The length of the statement  "                        // _newKey needs to be inserted as first key (BeforeAllKeys) to the right page' so we need to add it before we move entries from the current page " is 145.
Long Statement,Voron.Data.BTrees,TreePageSplitter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePageSplitter.cs,GatherDetailedDebugInfo,The length of the statement  "            debugInfo.AppendFormat("_newKey: {0}' _len: {1}' needed space: {2}\r\n"' _newKey' _len' _page.GetRequiredSpace(_newKey' _len)); " is 127.
Long Statement,Voron.Data.BTrees,TreePageSplitter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePageSplitter.cs,GatherDetailedDebugInfo,The length of the statement  "            debugInfo.AppendFormat("_page info: flags - {0}' # of entries {1}' size left: {2}' calculated size left: {3}\r\n"' _page.TreeFlags' _page.NumberOfEntries' _page.SizeLeft' _page.CalcSizeLeft()); " is 193.
Long Statement,Voron.Data.BTrees,TreePageSplitter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePageSplitter.cs,GatherDetailedDebugInfo,The length of the statement  "            debugInfo.AppendFormat("rightPage info: flags - {0}' # of entries {1}' size left: {2}' calculated size left: {3}\r\n"' rightPage.TreeFlags' rightPage.NumberOfEntries' rightPage.SizeLeft' rightPage.CalcSizeLeft()); " is 213.
Long Statement,Voron.Data.BTrees,TreeRebalancer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeRebalancer.cs,TryMergePages,The length of the statement  "                        if (mergedPage.HasSpaceFor(_tx' TreeSizeOf.NodeEntryWithAnotherKey(node' key) + Constants.Tree.NodeOffsetSize) == false) " is 120.
Long Statement,Voron.Impl,EncryptionBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\EncryptionBuffersPool.cs,ReleaseUnmanagedResources,The length of the statement  "                    PlatformSpecific.NativeMemory.Free4KbAlignedMemory((byte*)allocation.Ptr' allocation.Size' allocation.AllocatingThread); " is 120.
Long Statement,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,ModifyPageInternal,The length of the statement  "                newPage = AllocateOverflowRawPage(currentPage.OverflowSize' out var numberOfAllocatedPages' num' currentPage' zeroPage: false); " is 127.
Long Statement,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,ModifyPageInternal,The length of the statement  "                newPage = AllocatePage(1' num' currentPage' zeroPage: false); // allocate new page in a log file but with the same number			 " is 121.
Long Statement,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,GetPageInternal,The length of the statement  "            if (_scratchPagesTable != null && _scratchPagesTable.TryGetValue(pageNumber' out value)) // Scratch Pages Table will be null in read transactions " is 145.
Long Statement,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,GetPageInternal,The length of the statement  "                Debug.Assert(p.PageNumber == pageNumber' string.Format("Requested ReadOnly page #{0}. Got #{1} from scratch"' pageNumber' p.PageNumber)); " is 137.
Long Statement,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,GetPageInternal,The length of the statement  "                    Debug.Assert(p.PageNumber == pageNumber' string.Format("Requested ReadOnly page #{0}. Got #{1} from journal"' pageNumber' p.PageNumber)); " is 137.
Long Statement,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,GetPageInternal,The length of the statement  "                    Debug.Assert(p.PageNumber == pageNumber' string.Format("Requested ReadOnly page #{0}. Got #{1} from data file"' pageNumber' p.PageNumber)); " is 139.
Long Statement,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,ThrowQuotaExceededException,The length of the statement  "                    "Currently configured storage quota is allowing to allocate the following maximum page number {1}' while the requested page number is {2}. " + " is 142.
Long Statement,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,BreakLargeAllocationToSeparatePages,The length of the statement  "                var pageFromScratchBuffer = new PageFromScratchBuffer(value.ScratchFileNumber' value.PositionInScratchBuffer + i' 1' 1); " is 120.
Long Statement,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,EnsurePagerStateReference,The length of the statement  "            state = state.CurrentPager.GetPagerStateAndAddRefAtomically(); // state might hold released pagerState' and we want to add ref to the current (i.e. data file was re-allocated and a new state is now available). RavenDB-6950 " is 222.
Long Statement,Voron.Impl,PagePositionEqualityComparer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\PagePosition.cs,Equals,The length of the statement  "            return x.ScratchPage == y.ScratchPage && x.TransactionId == y.TransactionId && x.JournalNumber == y.JournalNumber && x.IsFreedPageMarker == y.IsFreedPageMarker && x.ScratchNumber == y.ScratchNumber; " is 198.
Long Statement,Voron.Impl,PagePosition,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\PagePosition.cs,ToString,The length of the statement  "            return $"ScratchPos: {ScratchPage}' TransactionId: {TransactionId}' JournalNumber: {JournalNumber}' ScratchNumber: {ScratchNumber}' IsFreedPageMarker: {IsFreedPageMarker}"; " is 172.
Long Statement,Voron.Impl,AllocationInfo,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\PagerState.cs,ToString,The length of the statement  "                return $"{nameof(BaseAddress)}: {new IntPtr(BaseAddress).ToString("x")} - {new IntPtr(BaseAddress + Size).ToString("x")} {nameof(Size)}: {Size}"; " is 145.
Long Statement,Voron.Data.Compression,DecompressedLeafPage,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\DecompressedLeafPage.cs,SplitPage,The length of the statement  "                        cursor.Update(cursor.Pages' this); // we need to use uncompressed page here because it might have some modifications (e.g. deleted node) " is 136.
Long Statement,Voron.Data.Compression,DecompressedLeafPage,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\DecompressedLeafPage.cs,ThrowCouldNotCompressEmptyDecompressedPage,The length of the statement  "            throw new InvalidOperationException($"Empty decompressed page #{pageNumber} could not be compressed back. Should never happen"); " is 128.
Long Statement,Voron.Data.Compression,DecompressedPagesCache,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\DecompressedPagesCache.cs,TryFindPageForReading,The length of the statement  "                if (page == null || page.Usage != DecompressionUsage.Read || page.NumberOfEntries == 0) // decompressed page can has 0 entries if each compressed entry had a tombstone marker " is 174.
Long Statement,Voron.Data.Compression,DecompressionBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\DecompressionBuffersPool.cs,CreateDecompressionPager,The length of the statement  "            var pager = _options.CreateTemporaryBufferPager($"decompression.{_decompressionPagerCounter++:D10}.buffers"' initialSize); " is 122.
Long Statement,Voron.Data.Compression,DecompressionBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\DecompressionBuffersPool.cs,GetTemporaryPage,The length of the statement  "                            _scratchSpaceMonitor.Increase((_compressionPager.NumberOfAllocatedPages - numberOfPagesBeforeAllocate) * Constants.Storage.PageSize); " is 133.
Long Statement,Voron.Data.Compression,DecompressionBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\DecompressionBuffersPool.cs,ThrowPageSizeTooBig,The length of the statement  "            throw new ArgumentException($"Max page size is {Constants.Compression.MaxPageSize} while you requested {pageSize} bytes"); " is 122.
Long Statement,Voron.Data.Compression,LeafPageCompressor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\LeafPageCompressor.cs,TryGetCompressedTempPage,The length of the statement  "            var compressionResult = tempPage.Base + Constants.Tree.PageHeaderSize + Constants.Compression.HeaderSize; // temp compression result has compressed values at the beginning of the page " is 183.
Long Statement,Voron.Data.Compression,LeafPageCompressor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\LeafPageCompressor.cs,TryGetCompressedTempPage,The length of the statement  "            var sizeLeftForUncompressedEntries = Constants.Storage.PageSize - (Constants.Tree.PageHeaderSize + Constants.Compression.HeaderSize + compressionSectionSize); " is 158.
Long Statement,Voron.Data.Compression,LeafPageCompressor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\LeafPageCompressor.cs,CopyToPage,The length of the statement  "                Debug.Assert(compressed.Header.CompressedSize > 0' "compressed.Header.CompressedSize > 0' value: " + compressed.Header.CompressedSize); " is 135.
Long Statement,Voron.Data.Compression,LeafPageCompressor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\LeafPageCompressor.cs,CopyToPage,The length of the statement  "                Debug.Assert(compressed.Header.CompressedSize == 0' "compressed.Header.CompressedSize == 0' value: " + compressed.Header.CompressedSize); " is 137.
Long Statement,Voron.Data.Compression,LeafPageCompressor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\LeafPageCompressor.cs,ThrowNullCompressionOutputButNonEmptyPage,The length of the statement  "            throw new InvalidOperationException($"{nameof(CompressionResult.CompressionOutputPtr)} was null but the page was not empty: {page}. Should never happen"); " is 154.
Long Statement,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,GetValueSize,The length of the statement  "                    throw new ArgumentOutOfRangeException("Tried to open '" + treeName + "' as FixedSizeTree' but is actually " + header->RootObjectType); " is 134.
Long Statement,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,ValidateTree_Forced,The length of the statement  "                throw new InvalidOperationException($"Expected number of entries {header->NumberOfEntries}' actual {numberOfEntriesInTree}"); " is 125.
Long Statement,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,BinarySearch,The length of the statement  "            page.LastSearchPosition = BinarySearch(page.Pointer + page.StartPosition' page.NumberOfEntries' val' page.IsLeaf ? _entrySize : BranchEntrySize); " is 145.
Long Statement,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,DeleteRangeEmbedded,The length of the statement  "                Memory.Copy(newData + srcCopyStart' ptr + srcCopyStart + (_entrySize * entriesDeleted)' (header->NumberOfEntries - endPos) * _entrySize); " is 137.
Long Statement,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,RemoveEmbeddedEntry,The length of the statement  "                Memory.Copy(tmp.TempPagePointer + srcCopyStart' ptr + srcCopyStart + _entrySize' (header->NumberOfEntries - pos - 1) * _entrySize); " is 131.
Long Statement,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,Read,The length of the statement  "                    return Slice.External(_tx.Allocator' dataStart + (page.LastSearchPosition * _entrySize) + sizeof(long)' _valSize' out slice); " is 125.
Long Statement,Voron.Data.Fixed,LargeIterator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,CreateReaderForCurrent,The length of the statement  "                return new ValueReader(_currentPage.Pointer + _currentPage.StartPosition + (_parent._entrySize * _currentPage.LastSearchPosition) + sizeof(long)' _parent._valSize); " is 164.
Long Statement,Voron.Data.Fixed,FixedSizeTreePage,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeTreePage.cs,GetEntry,The length of the statement  "            Debug.Assert(position >= 0 && ((position == 0 && NumberOfEntries == 0) || position < NumberOfEntries) '$"FixedSizeTreePage: Requested an out of range entry {position} from [0-{NumberOfEntries-1}]"); " is 198.
Long Statement,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,TryAllocate,The length of the statement  "                throw new ArgumentException($"Cannot allocate an item of {size} bytes in a small data section. Maximum is: {MaxItemSize}"); " is 123.
Long Statement,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,DefragPage,The length of the statement  "                        VoronUnrecoverableErrorException.Raise(_tx' $"Allocated size cannot be zero or negative' but was {oldSize->AllocatedSize} in page {pageHeader->PageNumber}"); " is 157.
Long Statement,Voron.Data.RawData,RawDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\RawDataSection.cs,GetAllIdsInSectionContaining,The length of the statement  "                        $"Cannot get all ids in section containing {id} because the raw data section starting in {sectionPageNumber} belongs to a different owner"); " is 140.
Long Statement,Voron.Data.RawData,RawDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\RawDataSection.cs,TryWriteDirect,The length of the statement  "                VoronUnrecoverableErrorException.Raise(_tx' $"Asked to load a past the allocated values: {id} from page {pageHeader->PageNumber}"); " is 131.
Long Statement,Voron.Data.RawData,RawDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\RawDataSection.cs,TryWriteDirect,The length of the statement  "                VoronUnrecoverableErrorException.Raise(_tx' $"Asked to load a value that was already freed: {id} from page {pageHeader->PageNumber}"); " is 134.
Long Statement,Voron.Data.RawData,RawDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\RawDataSection.cs,GetRawDataEntrySizeFor,The length of the statement  "                    $"Asked to load a value that where the allocated size is smaller than the used size: {id} from page {pageHeader->PageNumber}"); " is 127.
Long Statement,Voron.Data.RawData,RawDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\RawDataSection.cs,Free,The length of the statement  "                    VoronUnrecoverableErrorException.Raise(_tx' $"Cannot delete {id} because the raw data section starting in {sectionPageNumber} with size {actualSection.AllocatedSize} doesn't own it. Possible data corruption?"); " is 210.
Long Statement,Voron.Data.RawData,RawDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\RawDataSection.cs,Free,The length of the statement  "                VoronUnrecoverableErrorException.Raise(_tx' $"Asked to load a past the allocated values: {id} from page {pageHeader->PageNumber}"); " is 131.
Long Statement,Voron.Data.RawData,RawDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\RawDataSection.cs,Free,The length of the statement  "                VoronUnrecoverableErrorException.Raise(_tx' $"Asked to free a value that was already freed: {id} from page {pageHeader->PageNumber}"); " is 134.
Long Statement,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,AssertNoReferenceToThisPage,The length of the statement  "                            "Invalid attempt to insert data with the source equals to the range we are modifying. This is not permitted since it can cause data corruption when table defrag happens"); " is 171.
Long Statement,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,AssertNoReferenceToOldData,The length of the statement  "                            "Invalid attempt to update data with the source equals to the range we are modifying. This is not permitted since it can cause data corruption when table defrag happens. You probably should clone your data."); " is 209.
Long Statement,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,GetFixedSizeTree,The length of the statement  "                return _tx.GetGlobalFixedSizeTree(indexDef.Name' sizeof(long)' isIndexTree: true' newPageAllocator: _globalPageAllocator); " is 122.
Long Statement,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,GetFixedSizeTree,The length of the statement  "                var fixedSizeTree = new FixedSizeTree(_tx.LowLevelTransaction' parent' name' valSize' isIndexTree: isIndexTree | parent.IsIndexTree' newPageAllocator: allocator); " is 162.
Long Statement,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,AllocateFromSmallActiveSection,The length of the statement  "                _activeDataSmallSection = ActiveRawDataSmallSection.Create(_tx.LowLevelTransaction' Name' _tableType' newNumberOfPages); " is 120.
Long Statement,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,GetTree,The length of the statement  "            tree = Tree.Open(_tx.LowLevelTransaction' _tx' name' (TreeRootHeader*)treeHeader' isIndexTree: isIndexTree' newPageAllocator: _tablePageAllocator); " is 147.
Long Statement,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,AssertValidIndexes,The length of the statement  "                    throw new InvalidDataException($"Mismatch in primary key size to table size: {tree.State.NumberOfEntries} != {NumberOfEntries}"); " is 129.
Long Statement,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,AssertValidIndexes,The length of the statement  "                    throw new InvalidDataException($"Mismatch in fixed sized tree {fst.Key} size to table size: {tree.NumberOfEntries} != {NumberOfEntries}"); " is 138.
Long Statement,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,ThrowInconsistentItemsCountInIndexes,The length of the statement  "            throw new InvalidOperationException($"Inconsistent index items count detected! Index name: {indexName} expected size: {expectedSize} actual size: {actualSize}"); " is 161.
Long Statement,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,AssertWritableTable,The length of the statement  "                throw new InvalidOperationException("Table is meant to be used for global reads only while it attempted to modify the data"); " is 125.
Long Statement,Voron.Data.Tables,TableSchema,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableSchema.cs,Create,The length of the statement  "                throw new InvalidOperationException($"Cannot create table {name} with a global primary key and without at least a single local index' " + " is 137.
Long Statement,Voron.Data.Tables,TableSchema,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableSchema.cs,Create,The length of the statement  "            using (var rawDataActiveSection = ActiveRawDataSmallSection.Create(tx.LowLevelTransaction' name' TableType' sizeInPages)) " is 121.
Long Statement,Voron.Data.Tables,TableSchema,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableSchema.cs,Create,The length of the statement  "                        using (var indexTree = Tree.Create(tx.LowLevelTransaction' tx' _primaryKey.Name' isIndexTree: true' newPageAllocator: tablePageAllocator)) " is 138.
Long Statement,Voron.Data.Tables,TableSchema,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableSchema.cs,Create,The length of the statement  "                        using (var indexTree = Tree.Create(tx.LowLevelTransaction' tx' indexDef.Name' isIndexTree: true' newPageAllocator: tablePageAllocator)) " is 135.
Long Statement,Voron.Debugging,DebugStuff,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\DebugStuff.cs,DumpFixedSizeTreeToStream,The length of the statement  "                writer.WriteLine("<p>Number of entries: {0:#'#;;0}' val size: {1:#'#;;0}.</p>"' header->NumberOfEntries' header->ValueSize); " is 124.
Long Statement,Voron.Debugging,DebugStuff,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\DebugStuff.cs,DumpFixedSizeTreeToStream,The length of the statement  "                writer.WriteLine("<p>Number of entries: {0:#'#;;0}' val size: {1:#'#;;0}.</p>"' header->NumberOfEntries' header->ValueSize); " is 124.
Long Statement,Voron.Debugging,DebugStuff,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\DebugStuff.cs,RenderFixedSizeTreePage,The length of the statement  "                "<ul><li><input type='checkbox' id='page-{0}' {3} /><label for='page-{0}'>{4}: Page {0:#'#;;0} - {1} - {2:#'#;;0} entries</label><ul>"' " is 135.
Long Statement,Voron.Debugging,DebugStuff,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\DebugStuff.cs,RenderFixedSizeTreePage,The length of the statement  "                    RenderFixedSizeTreePage(tx' new FixedSizeTreePage(fstPage.Pointer' header->ValueSize + sizeof(long)' Constants.Storage.PageSize)' sw' header' s' false); " is 152.
Long Statement,Voron.Debugging,DebugStuff,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\DebugStuff.cs,DumpFixedSizedTreeToStream,The length of the statement  "            var headerData = $"{tree.Name} ({tree.Type}) {tree.NumberOfEntries} entries' depth: {tree.Depth}' {tree.PageCount} pages."; " is 123.
Long Statement,Voron.Debugging,DebugStuff,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\DebugStuff.cs,RenderPage,The length of the statement  "               "<ul><li><input type='checkbox' id='page-{0}' {3} /><label for='page-{0}'>{4}: Page {0:#'#;;0} - {1} - {2:#'#;;0} entries {5}</label><ul>"' " is 139.
Long Statement,Voron.Debugging,DebugStuff,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\DebugStuff.cs,RenderPage,The length of the statement  "               page.IsCompressed? $"(Compressed ({page.CompressionHeader->NumberOfCompressedEntries} entries [uncompressed/compressed: {page.CompressionHeader->UncompressedSize}/{page.CompressionHeader->CompressedSize}])" : string.Empty); " is 223.
Long Statement,Voron.Debugging,StorageReportGenerator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\StorageReportGenerator.cs,GenerateTempBuffersReport,The length of the statement  "                var recyclableJournals = GetFiles(journalPath.FullPath' $"{StorageEnvironmentOptions.RecyclableJournalFileNamePrefix}.*").Select(filePath => " is 140.
Long Statement,Voron.Debugging,StorageReportGenerator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\StorageReportGenerator.cs,CreateStreamsReport,The length of the statement  "                    long numberOfAllocatedPages = VirtualPagerLegacyExtensions.GetNumberOfOverflowPages(info.TotalSize + info.TagSize + Tree.StreamInfo.SizeOf); " is 140.
Long Statement,Voron.Debugging,StorageReportGenerator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\StorageReportGenerator.cs,CreateMultiValuesReport,The length of the statement  "                                    var multiValueTreeHeader = (TreeRootHeader*)((byte*)currentNode + currentNode->KeySize + Constants.Tree.NodeHeaderSize); " is 120.
Long Statement,Voron.Debugging,StorageReportGenerator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\StorageReportGenerator.cs,GetReport,The length of the statement  "                OriginallyAllocatedSpaceInBytes = PagesToBytes(buffersReport.NumberOfOriginallyAllocatedPages + allocationTreeReport.PageCount) " is 127.
Long Statement,Voron.Exceptions,VoronUnrecoverableErrorException,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Exceptions\VoronUnrecoverableErrorException.cs,Raise,The length of the statement  "                throw new VoronUnrecoverableErrorException(message + Environment.NewLine + " @ " + env.Options.DataPager.FileName.FullPath); " is 124.
Long Statement,Voron.Impl.Backup,FullBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\FullBackup.cs,Backup,The length of the statement  "                using (var txw = env.NewLowLevelTransaction(writePesistentContext' TransactionFlags.ReadWrite)) // so we can snapshot the headers safely " is 136.
Long Statement,Voron.Impl.Backup,FullBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\FullBackup.cs,Backup,The length of the statement  "                            if (journalFile.Number < lastWrittenLogFile &&  // prevent deletion of the current journal and journals with a greater number " is 125.
Long Statement,Voron.Impl.Backup,IncrementalBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\IncrementalBackup.cs,GetJournalFile,The length of the statement  "            var journalFile = env.Journal.Files.FirstOrDefault(x => x.Number == journalNum); // first check journal files currently being in use " is 132.
Long Statement,Voron.Impl.Backup,IncrementalBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\IncrementalBackup.cs,GetJournalFile,The length of the statement  "                                                        "In order to create backups incrementally the storage must be created with IncrementalBackupEnabled option set to 'true'."' e); " is 127.
Long Statement,Voron.Impl.Backup,IncrementalBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\IncrementalBackup.cs,Restore,The length of the statement  "                                env.Options.CreateTemporaryBufferPager(Path.Combine(tempDir.Combine(StorageEnvironmentOptions.JournalRecoveryName(journalNumber)).FullPath)' " is 140.
Long Statement,Voron.Impl.Backup,IncrementalBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\IncrementalBackup.cs,Restore,The length of the statement  "                    // this is just a temporary directory' the worst case scenario is that we dont reclaim the space from the OS temp directory " is 123.
Long Statement,Voron.Impl.Backup,VoronBackupUtil,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\VoronBackupUtil.cs,CopyHeaders,The length of the statement  "                throw new InvalidDataException($"Failed to read both file headers (headers.one & headers.two) from path: {basePath}' possible corruption."); " is 140.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,Execute,The length of the statement  "            using (var compactedDataFile = SafeFileStream.Create(compactOptions.BasePath.Combine(Constants.DatabaseFilename).FullPath' FileMode.Open' FileAccess.ReadWrite)) " is 160.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTrees,The length of the statement  "                var totalTreesCount = txr.LowLevelTransaction.RootObjects.State.NumberOfEntries - globalTableIndexesToSkipCopying.Count; " is 120.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTrees,The length of the statement  "                            copiedTrees = CopyVariableSizeTree(compactedEnv' progressReport' txr' treeName' copiedTrees' totalTreesCount' context' token); " is 126.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTrees,The length of the statement  "                            copiedTrees = CopyFixedSizeTreeFromRoot(compactedEnv' progressReport' txr' rootIterator' treeName' copiedTrees' totalTreesCount' context' token); " is 145.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyFixedSizeTreeFromRoot,The length of the statement  "            Report(copiedTrees' totalTreesCount' 0' fst.NumberOfEntries' progressReport' $"Copying fixed size tree '{treeName}'. Progress: 0/{fst.NumberOfEntries} entries."' treeName); " is 172.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyFixedSizeTreeFromRoot,The length of the statement  "            CopyFixedSizeTree(fst' txw => txw.FixedTreeFor(treeNameSlice' header->ValueSize)' compactedEnv' context' copiedEntries => " is 121.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyVariableSizeTree,The length of the statement  "            Report(copiedTrees' totalTreesCount' 0' existingTree.State.NumberOfEntries' progressReport' $"Copying variable size tree '{treeName}'. Progress: 0/{existingTree.State.NumberOfEntries} entries."' treeName); " is 205.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyVariableSizeTree,The length of the statement  "                                    if (header->RootObjectType == RootObjectType.FixedSizeTree || header->RootObjectType == RootObjectType.EmbeddedFixedSizeTree) " is 125.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyVariableSizeTree,The length of the statement  "                                                $"Copying fixed size tree '{fixedSizeTreeName}' inside '{treeName}' tree. Progress: {copiedFstEntries}/{fst.NumberOfEntries} entries."' " is 135.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyVariableSizeTree,The length of the statement  "                                                $"Finished copying fixed size tree '{fixedSizeTreeName}' inside '{treeName}' tree. {fst.NumberOfEntries} entries copied."' " is 122.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyVariableSizeTree,The length of the statement  "                                        $"Copying variable size tree '{treeName}'. Progress: {copiedEntries}/{existingTree.State.NumberOfEntries} entries."' treeName); " is 127.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyVariableSizeTree,The length of the statement  "                        Report(copiedTrees' totalTreesCount' copiedEntries' existingTree.State.NumberOfEntries' progressReport' $"Finished copying variable size tree '{treeName}'. Progress: {copiedEntries}/{existingTree.State.NumberOfEntries} entries."' treeName); " is 240.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTableTree,The length of the statement  "            Report(copiedTrees' totalTreesCount' copiedEntries' inputTable.NumberOfEntries' progressReport' $"Copying table tree '{treeName}'. Progress: {copiedEntries:#'#;;0}/{inputTable.NumberOfEntries:#'#;;0} entries."' treeName); " is 221.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTableTree,The length of the statement  "                schema.Create(txw' treeName' Math.Max((ushort)inputTable.ActiveDataSmallSection.NumberOfPages' (ushort)((ushort.MaxValue + 1) / Constants.Storage.PageSize))); " is 158.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTableTree,The length of the statement  "                                ReportIfNeeded(sp' copiedTrees' totalTreesCount' copiedEntries' inputTable.NumberOfEntries' progressReport' $"Copying table tree '{treeName}'. Progress: {copiedEntries:#'#;;0}/{inputTable.NumberOfEntries:#'#;;0} entries."' treeName); " is 233.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTableTree,The length of the statement  "                                if (lastSlice.Equals(tvr.Key) == false && transactionSize >= compactedEnv.Options.MaxScratchBufferSize / 2 || ShouldCloseTxFor32Bit(transactionSize' compactedEnv)) " is 163.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTableTree,The length of the statement  "                                throw new InvalidOperationException("Cannot compact table " + inputTable.Name + " because is has no local indexes' only global ones"); " is 134.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTableTree,The length of the statement  "                                ReportIfNeeded(sp' copiedTrees' totalTreesCount' copiedEntries' inputTable.NumberOfEntries' progressReport' $"Copying table tree '{treeName}'. Progress: {copiedEntries:#'#;;0}/{inputTable.NumberOfEntries:#'#;;0} entries."' treeName); " is 233.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTableTree,The length of the statement  "                                if (transactionSize >= compactedEnv.Options.MaxScratchBufferSize / 2 || ShouldCloseTxFor32Bit(transactionSize' compactedEnv)) " is 125.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTableTree,The length of the statement  "                            if (transactionSize >= compactedEnv.Options.MaxScratchBufferSize / 2 || ShouldCloseTxFor32Bit(transactionSize' compactedEnv)) " is 125.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTableTree,The length of the statement  "                    Report(copiedTrees' totalTreesCount' copiedEntries' inputTable.NumberOfEntries' progressReport' $"Finished copying table tree '{treeName}'. Progress: {copiedEntries:#'#;;0}/{inputTable.NumberOfEntries:#'#;;0} entries."' treeName); " is 230.
Long Statement,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,ShouldCloseTxFor32Bit,The length of the statement  "            return (env.Options.ForceUsing32BitsPager || PlatformDetails.Is32Bits) && transactionSize > 4 * Constants.Size.Megabyte; " is 120.
Long Statement,Voron.Impl.FileHeaders,HeaderAccessor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FileHeaders\HeaderAccessor.cs,Initialize,The length of the statement  "                    throw new InvalidDataException("None of the header files start with the magic marker' probably not db files or fatal corruption on " + _env.Options.BasePath); " is 158.
Long Statement,Voron.Impl.FileHeaders,HeaderAccessor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FileHeaders\HeaderAccessor.cs,Initialize,The length of the statement  "                    throw new InvalidDataException("None of the header files have a valid hash' possible corruption on " + _env.Options.BasePath); " is 126.
Long Statement,Voron.Impl.FileHeaders,HeaderAccessor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FileHeaders\HeaderAccessor.cs,Initialize,The length of the statement  "                            $"The db file is for version {_theHeader->Version}' which is not compatible with the current version {Constants.CurrentVersion} on {_env.Options.BasePath}"); " is 157.
Long Statement,Voron.Impl.FileHeaders,HeaderAccessor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FileHeaders\HeaderAccessor.cs,Initialize,The length of the statement  "                    var message = string.Format("PageSize mismatch' configured to be {0:#'#} but was {1:#'#}' using the actual value in the file {1:#'#}"' " is 134.
Long Statement,Voron.Impl.FileHeaders,HeaderAccessor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FileHeaders\HeaderAccessor.cs,CalculateFileHeaderHash,The length of the statement  "                Hashing.Streamed.XXHash64.Process(ctx' (byte*)header + FileHeader.HashOffset + sizeof(ulong)' secondPartOfHeaderLength); " is 120.
Long Statement,Voron.Impl.Journal,JournalFile,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalFile.cs,SetLastReadTxHeader,The length of the statement  "                throw new InvalidOperationException("Found a gap in the transaction headers held by this journal file in memory' shouldn't be possible"); " is 137.
Long Statement,Voron.Impl.Journal,JournalFile,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalFile.cs,MathFailure,The length of the statement  "            throw new InvalidOperationException("Math failed' total size is larger than 2^31*4KB but we have just: " + numberOf4Kbs + " * 4KB"); " is 132.
Long Statement,Voron.Impl.Journal,JournalFile,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalFile.cs,Write,The length of the statement  "            if (tx.IsLazyTransaction == false && (lazyTransactionScratch == null || lazyTransactionScratch.HasDataInBuffer() == false)) " is 123.
Long Statement,Voron.Impl.Journal,JournalFile,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalFile.cs,Write,The length of the statement  "                    throw new InvalidOperationException("lazyTransactionScratch cannot be null if the transaction is lazy (or a previous one was)"); " is 128.
Long Statement,Voron.Impl.Journal,UpdatePageTranslationTableAndUnusedPagesAction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalFile.cs,ExecuteAfterCommit,The length of the statement  "                    Debug.Assert(!_parent._unusedPages.Any(_parent._unusedPagesHashSetPool.Contains)); // We ensure there cannot be duplicates here (disjoint sets).  " is 144.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,ReadOneTransactionToDataFile,The length of the statement  "                throw new InvalidDataException($"Attempted to read position {totalRead} from transaction data while the transaction is size {current->UncompressedSize}"); " is 154.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,ReadOneTransactionToDataFile,The length of the statement  "                    throw new InvalidDataException($"Transaction {current->TransactionId} contains reference to page {pageInfoPtr[i].PageNumber} which is after the last allocated page {current->LastPageNumber}"); " is 192.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,ReadOneTransactionToDataFile,The length of the statement  "                    throw new InvalidDataException($"Attempted to read position {totalRead} from transaction data while the transaction is size {current->UncompressedSize}"); " is 154.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,ThrowInvalidChecksumOnPageFromJournal,The length of the statement  "                $"Invalid checksum for page {pageNumber} in transaction {current->TransactionId}' journal file {_journalPager} might be corrupted' expected hash to be {expectedChecksum} but was {checksum}." + " is 192.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,RecoverAndValidate,The length of the statement  "                Debug.Assert(transactionHeaders.Count == 0 || LastTransactionHeader->TransactionId > transactionHeaders.Last().TransactionId); " is 126.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,The length of the statement  "            // * TxId >  current Id + 1  ::  if hash is invalid we can ignore reused/random' but if hash valid then we might missed TXs  " is 123.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,The length of the statement  "                // if the header marker is zero or garbage' we are probably in the area at the end of the log file' and have no additional log records " is 134.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,The length of the statement  "                            $"Unable to decrypt data of transaction which has been already synced (tx id: {current->TransactionId}' last synced tx: {_journalInfo.LastSyncedTransactionId}' journal: {_journalInfo.CurrentJournal}). " + " is 204.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,The length of the statement  "                            $"Invalid hash of data of first transaction which has been already synced (tx id: {current->TransactionId}' last synced tx: {_journalInfo.LastSyncedTransactionId}' journal: {_journalInfo.CurrentJournal}). " + " is 208.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,The length of the statement  "                            $"Encountered integrity error of transaction data which has been already synced (tx id: {current->TransactionId}' last synced tx: {_journalInfo.LastSyncedTransactionId}' journal: {_journalInfo.CurrentJournal}). " + " is 214.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,The length of the statement  "                                $"Encountered integrity error of transaction data which has been already synced (tx id: {current->TransactionId}' last synced tx: {_journalInfo.LastSyncedTransactionId}' journal: {_journalInfo.CurrentJournal}). " + " is 214.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,The length of the statement  "                                $"Transaction has valid(!) hash with invalid transaction id {current->TransactionId}' the last valid transaction id is {LastTransactionHeader->TransactionId}." + " is 161.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,The length of the statement  "                            $"The last synced transaction id was {_journalInfo.LastSyncedTransactionId} (in journal: {_journalInfo.LastSyncedJournal}) but the first transaction being read in the recovery process is {current->TransactionId} (transaction has valid hash). " + " is 245.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,The length of the statement  "                            $"Invalid last page number ({current->LastPageNumber}) in the header of transaction which has been already synced (tx id: {current->TransactionId}' last synced tx: {_journalInfo.LastSyncedTransactionId}' journal: {_journalInfo.CurrentJournal}). " + " is 248.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,The length of the statement  "                        $"Invalid hash of data of transaction which has been already synced (tx id: {current->TransactionId}' last synced tx: {_journalInfo.LastSyncedTransactionId}' journal: {_journalInfo.CurrentJournal}). " + " is 202.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,CanIgnoreDataIntegrityErrorBecauseTxWasSynced,The length of the statement  "                   (_firstValidTransactionHeader == null || currentTx->TransactionId > _firstValidTransactionHeader->TransactionId); // when reusing journal we might encounter a transaction with valid Id but it comes from already deleted (and reused journal) " is 239.
Long Statement,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,ValidatePagesHash,The length of the statement  "                        $"Size {size} ({compressLabel}) is too big for the journal size {_journalPagerNumberOfAllocated4Kb * 4 * Constants.Size.Kilobyte}"' null); " is 138.
Long Statement,Voron.Impl.Journal,JournalWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalWriter.cs,Write,The length of the statement  "            using (var metrics = _options.IoMetrics.MeterIoRate(FileName.FullPath' IoMetrics.MeterType.JournalWrite' numberOf4Kb * 4L * Constants.Size.Kilobyte)) " is 149.
Long Statement,Voron.Impl.Journal,JournalWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalWriter.cs,Write,The length of the statement  "                var result = Pal.rvn_write_journal(_writeHandle' p' numberOf4Kb * 4L * Constants.Size.Kilobyte' posBy4Kb * 4L * Constants.Size.Kilobyte' out var error); " is 152.
Long Statement,Voron.Impl.Journal,JournalWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalWriter.cs,Write,The length of the statement  "                    PalHelper.ThrowLastError(result' error' $"Attempted to write to journal file - Path: {FileName.FullPath} Size: {numberOf4Kb * 4L * Constants.Size.Kilobyte}' numberOf4Kb={numberOf4Kb}"); " is 185.
Long Statement,Voron.Impl.Journal,JournalWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalWriter.cs,Write,The length of the statement  "                        $"We managed to accomplish journal write although we got {nameof(ERROR_WORKING_SET_QUOTA)} under the covers and wrote data in 4KB chunks"); " is 139.
Long Statement,Voron.Impl.Journal,JournalWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalWriter.cs,Read,The length of the statement  "                    PalHelper.ThrowLastError(result' errorCode' $"Attempted to read from journal file - Path: {FileName.FullPath} Size: {numOfBytes} Offset: {offsetInFile} ActualSize: {actualSize}"); " is 179.
Long Statement,Voron.Impl.Journal,JournalWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalWriter.cs,Truncate,The length of the statement  "                PalHelper.ThrowLastError(result' error' $"Attempted to write to journal file - Path: {FileName.FullPath} Size: {size}"); " is 120.
Long Statement,Voron.Impl.Journal,LazyTransactionBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\LazyTransactionBuffer.cs,CreateBufferPager,The length of the statement  "            return _options.CreateTemporaryBufferPager($"lazy-transactions.{_lazyPagerCounter++:D10}.buffers"' _options.InitialFileSize ?? _options.InitialLogFileSize); " is 156.
Long Statement,Voron.Impl.Journal,TransactionHeader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\TransactionHeader.cs,ToString,The length of the statement  "            return $"HeaderMarker: {validMarker}' TransactionId: {TransactionId}' NextPageNumber: {NextPageNumber}' LastPageNumber: {LastPageNumber}' " + " is 141.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,RecoverDatabase,The length of the statement  "                        using (var journalReader = new JournalReader(pager' _dataPager' recoveryPager' modifiedPages' logInfo' transactionHeader)) " is 122.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,RecoverDatabase,The length of the statement  "                                        throw new InvalidOperationException($"Got empty journal file but it has some transaction headers (count: {transactionHeaders.Count})"); " is 135.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,RecoverDatabase,The length of the statement  "                            $"Encountered invalid journal {journalNumber} @ {_env.Options}. Skipping this journal and keep going the recovery operation because '{nameof(_env.Options.IgnoreInvalidJournalErrors)}' options is set"); " is 201.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,RecoverDatabase,The length of the statement  "                        addToInitLog?.Invoke($"SkipChecksumValidationOnDbLoading set to true. Skipping checksum validation of {sortedPages.Length} pages."); " is 132.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,RecoverDatabase,The length of the statement  "                            $"{nameof(_env.Options.SkipChecksumValidationOnDatabaseLoading)} set to true is not allowed on non ARM architecture. This instance running on {RuntimeInformation.OSArchitecture}"); " is 180.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,RecoverDatabase,The length of the statement  "                    "First transaction initializing the structure of Voron database is corrupted. Cannot access internal database metadata. Create a new database to recover."); " is 156.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,RecoverDatabase,The length of the statement  "                    Debug.Assert(toDelete.Count == 0' $"Last flushed journal (number: {lastFlushedJournal}) doesn't exist so we didn't call {nameof(_journalApplicator.SetLastFlushed)} but" + " is 170.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,RecoverDatabase,The length of the statement  "            addToInitLog?.Invoke($"Info: Current File = '{CurrentFile?.Number}'' Position (4KB)='{CurrentFile?.WritePosIn4KbPosition}'. Require Header Update = {requireHeaderUpdate}"); " is 172.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ReadPage,The length of the statement  "                        var page = _env.ScratchBufferPool.ReadPage(tx' value.ScratchNumber' value.ScratchPage' scratchPagerStates[value.ScratchNumber]); " is 128.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,WriteToJournal,The length of the statement  "                            $"Preparing to write tx {tx.Id} to journal with {journalEntry.NumberOfUncompressedPages:#'#} pages ({(journalEntry.NumberOfUncompressedPages * Constants.Storage.PageSize) / Constants.Size.Kilobyte:#'#} kb) in {sp.Elapsed} with {Math.Round(journalEntry.NumberOf4Kbs * 4d' 1):#'#.#;;0} kb compressed."); " is 301.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,WriteToJournal,The length of the statement  "                    journalEntry.UpdatePageTranslationTableAndUnusedPages = CurrentFile.Write(tx' journalEntry' _lazyTransactionBuffer' out writeToJournalDuration); " is 144.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The length of the statement  "            var performCompression = pagesCountIncludingAllOverflowPages > _env.Options.CompressTxAboveSizeInBytes / Constants.Storage.PageSize; " is 132.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The length of the statement  "            var overheadInPages = checked((int)(overhead / Constants.Storage.PageSize + (overhead % Constants.Storage.PageSize == 0 ? 0 : 1))); " is 131.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The length of the statement  "                var scratchPage = tx.Environment.ScratchBufferPool.AcquirePagePointerWithOverflowHandling(tx' txPage.ScratchFileNumber' txPage.PositionInScratchBuffer); " is 152.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The length of the statement  "                    pageHeader->Checksum = StorageEnvironment.CalculatePageChecksum(scratchPage' pageHeader->PageNumber' pageHeader->Flags' pageHeader->OverflowSize); " is 146.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The length of the statement  "                    // written when we crashed? We cannot decrypt partial data' therefore we cannot compare the diff to the plaintext on disk. " is 122.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The length of the statement  "                _maxNumberOfPagesRequiredForCompressionBuffer = Math.Max(pagesRequired + outputBufferInPages' _maxNumberOfPagesRequiredForCompressionBuffer); " is 141.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The length of the statement  "                var path = CurrentFile?.JournalWriter?.FileName?.FullPath ?? _env.Options.GetJournalPath(Math.Max(0' _journalIndex))?.FullPath; " is 127.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The length of the statement  "                using (var metrics = _env.Options.IoMetrics.MeterIoRate(path' IoMetrics.MeterType.Compression' 0)) // Note that the last journal may be replaced if we switch journals' however it doesn't affect web graph " is 203.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The length of the statement  "                    txHeader->Hash = Hashing.XXHash64.Calculate(txHeaderPtr + sizeof(TransactionHeader)' (ulong)compressedLen' (ulong)txHeader->TransactionId); " is 139.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ReduceSizeOfCompressionBufferIfNeeded,The length of the statement  "                    $"Compression buffer: {_compressionPager} has reached size {new Size(_compressionPager.NumberOfAllocatedPages * Constants.Storage.PageSize' SizeUnit.Bytes)} which is more than the maximum size " + " is 196.
Long Statement,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ReduceSizeOfCompressionBufferIfNeeded,The length of the statement  "                    $"of {new Size(maxSize' SizeUnit.Bytes)}. Will trim it now to the max size allowed. If this is happen on a regular basis'" + " is 124.
Long Statement,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ApplyLogsToDataFile,The length of the statement  "                    throw new InvalidJournalFlushRequestException("Applying journals to the data file has been already requested on the same thread"); " is 130.
Long Statement,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ApplyLogsToDataFile,The length of the statement  "                                    ThrowReadByeondOldestActiveTransaction(currentJournalMaxTransactionId' previousJournalMaxTransactionId' oldestActiveTransaction); " is 129.
Long Statement,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ApplyPagesToDataFileFromScratch,The length of the statement  "                    using (var meter = _waj._dataPager.Options.IoMetrics.MeterIoRate(_waj._dataPager.FileName.FullPath' IoMetrics.MeterType.DataFlush' 0)) " is 134.
Long Statement,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ApplyPagesToDataFileFromScratch,The length of the statement  "                                        var page = (PageHeader*)scratchBufferPool.AcquirePagePointerWithOverflowHandling(tempTx' scratchNumber' pagePosition.ScratchPage); " is 130.
Long Statement,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ApplyPagesToDataFileFromScratch,The length of the statement  "                        _waj._logger.Info($"Flushed {pagesToWrite.Count:#'#} pages to { _waj._dataPager.FileName} with {written / Constants.Size.Kilobyte:#'#} kb in {sp.Elapsed}"); " is 156.
Long Statement,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ThrowInvalidChecksumOnPageFromScratch,The length of the statement  "                var message = $"During apply logs to data' tried to copy {scratchNumber} / {pagePosition.ScratchNumber} ({page->PageNumber}) " + " is 128.
Long Statement,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,DeleteCurrentAlreadyFlushedJournal,The length of the statement  "                    throw new InvalidOperationException(string.Format("Cannot delete current journal because it isn't last synced file. Current journal number: {0}' the last one which was synced {1}"' _waj.CurrentFile?.Number ?? -1' _lastFlushed.JournalId)); " is 238.
Long Statement,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,DeleteCurrentAlreadyFlushedJournal,The length of the statement  "                    throw new InvalidOperationException("Cannot delete current journal because it hasn't synced everything up to the last write transaction"); " is 138.
Long Statement,Voron.Impl.Journal,JournalApplicator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,DeleteCurrentAlreadyFlushedJournal,The length of the statement  "                        throw new InvalidOperationException($"Attempted to remove a journal ({current.Number}) that hasn't been synced yet (last synced journal: {header->Journal.LastSyncedJournal})"); " is 176.
Long Statement,Voron.Impl.Journal,SyncOperation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,UpdateDatabaseStateAfterSync,The length of the statement  "                    _parent.UpdateFileHeaderAfterDataFileSync(_lastFlushed.JournalId' _lastFlushed.TransactionId' ignoreLastSyncJournalMissing' ref _transactionHeader); " is 148.
Long Statement,Voron.Impl.Journal,SyncOperation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,CallPagerSync,The length of the statement  "                            _parent._waj._logger.Info($"Sync of {sizeInKb:#'#0} kb file with {_currentTotalWrittenBytes / Constants.Size.Kilobyte:#'#0} kb dirty in {sp.Elapsed}"); " is 151.
Long Statement,Voron.Impl.Journal,SyncOperation,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ThrowErrorWhenSyncingDataFile,The length of the statement  "                        message += $" Debug details - transaction headers count: {journalTransactionHeaders.Count}' first tx: {firstTx}' last tx: {lastTx}."; " is 133.
Long Statement,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,TryHandleFailureToLockMemory,The length of the statement  "                // "The maximum number of pages that a process can lock is equal to the number of pages in its minimum working set minus a small overhead" " is 138.
Long Statement,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,TryHandleFailureToLockMemory,The length of the statement  "                // let's increase the max size of memory we can lock by increasing the MinWorkingSet. On Windows' that is available for all users " is 129.
Long Statement,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,TryHandleFailureToLockMemory,The length of the statement  "                        throw new InsufficientMemoryException($"Need to increase the min working set size from {(long)currentProcess.MinWorkingSet:#'#;;0} bytes to {nextWorkingSetSize:#'#;;0} bytes but the max working set size was too small: {(long)currentProcess.MaxWorkingSet:#'#;;0}. " + " is 266.
Long Statement,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,TryHandleFailureToLockMemory,The length of the statement  "                                                              $"Failed to increase the max working set size so we can lock {sizeToLock:#'#;;0} bytes for {FileName}. With encrypted " + " is 121.
Long Statement,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,TryHandleFailureToLockMemory,The length of the statement  "                    throw new InsufficientMemoryException($"Failed to increase the min working set size to {nextWorkingSetSize:#'#;;0} bytes so we can lock {sizeToLock:#'#;;0} bytes for {FileName}. With encrypted " + " is 196.
Long Statement,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,TryHandleFailureToLockMemory,The length of the statement  "                $"Unable to lock memory for {FileName} with size {sizeToLock:#'#;;0} bytes)' with encrypted databases we lock some memory in order to avoid leaking secrets to disk. Treating this as a catastrophic error and aborting the current operation.{Environment.NewLine}"; " is 261.
Long Statement,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,TryHandleFailureToLockMemory,The length of the statement  "                    $"The admin may configure higher limits using: 'sudo prlimit --pid {currentProcess.Id} --memlock={sizeToLock}' to increase the limit. (It's recommended to do that as part of the startup script){Environment.NewLine}"; " is 216.
Long Statement,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,TryHandleFailureToLockMemory,The length of the statement  "                    $"Already tried to raise the the process min working set to {currentProcess.MinWorkingSet.ToInt64():#'#;;0} bytes but still got a failure.{Environment.NewLine}"; " is 161.
Long Statement,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,TryHandleFailureToLockMemory,The length of the statement  "            msg += "This behavior is controlled by the 'Security.DoNotConsiderMemoryLockFailureAsCatastrophicError' setting (expert only' modifications of this setting is not recommended)."; " is 178.
Long Statement,Voron.Impl.Paging,VirtualPagerLegacyExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPagerExtensions.cs,AcquirePagePointerWithOverflowHandling,The length of the statement  "            // Case 3: Page is overflow and was ensuredMapped above' view was re-mapped so we need to acquire a pointer to the new mapping. " is 127.
Long Statement,Voron.Impl.Paging,VirtualPagerLegacyExtensions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPagerExtensions.cs,AcquirePagePointerWithOverflowHandling,The length of the statement  "            // Case 3: Page is overflow and was ensuredMapped above' view was re-mapped so we need to acquire a pointer to the new mapping. " is 127.
Long Statement,Voron.Impl.Paging,CryptoPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\CryptoPager.cs,AcquirePagePointer,The length of the statement  "            if(Sodium.crypto_generichash(buffer.Hash' EncryptionBuffer.HashSize' buffer.Pointer' (ulong)buffer.Size' null' UIntPtr.Zero) != 0) " is 130.
Long Statement,Voron.Impl.Paging,CryptoPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\CryptoPager.cs,TxOnCommit,The length of the statement  "                if(Sodium.crypto_generichash(pageHash' EncryptionBuffer.HashSize' buffer.Value.Pointer' (ulong)buffer.Value.Size' null' UIntPtr.Zero) != 0) " is 139.
Long Statement,Voron.Impl.Paging,RvnMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\RvnMemoryMapPager.cs,Sync,The length of the statement  "                            PalHelper.ThrowLastError(rc' errorCode'$"Failed to memory sync at ${new IntPtr(alloc.BaseAddress).ToInt64():X} for for '{FileName.FullPath}'. TotalUnsynced = ${totalUnsynced}"); " is 177.
Long Statement,Voron.Impl.Paging,RvnMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\RvnMemoryMapPager.cs,DisposeInternal,The length of the statement  "                _logger.Info($"Unable to dispose handle for {FileName.FullPath} (ignoring). rc={_handle.FailCode}. DeleteOnClose={DeleteOnClose}' " " is 131.
Long Statement,Voron.Impl.Paging,RvnMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\RvnMemoryMapPager.cs,DisposeInternal,The length of the statement  "                             + $"errorCode={PalHelper.GetNativeErrorString(_handle.ErrorNo' "Unable to dispose handle for {FileName.FullPath} (ignoring)."' out _)}"' " is 136.
Long Statement,Voron.Impl.Paging,RvnMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\RvnMemoryMapPager.cs,AllocateMorePages,The length of the statement  "                PalHelper.ThrowLastError(rc' errorCode' $"can't allocate more pages (rc={rc}) for '{FileName.FullPath}'. Requested {newLength} (adjusted to {newLengthAfterAdjustment})"); " is 170.
Long Statement,Voron.Impl.Paging,RvnMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\RvnMemoryMapPager.cs,ProtectPageRange,The length of the statement  "                _logger.Info($"Unable to protect page range for '{FileName.FullPath}'. start={new IntPtr(start).ToInt64():X}' size={size}' ProtectRange = Protect' errorCode={errorCode}"); " is 171.
Long Statement,Voron.Impl.Paging,RvnMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\RvnMemoryMapPager.cs,UnprotectPageRange,The length of the statement  "                _logger.Info($"Unable to un-protect page range for '{FileName.FullPath}'. start={new IntPtr(start).ToInt64():X}' size={size}' ProtectRange = Unprotect' errorCode={errorCode}"); " is 176.
Long Statement,Voron.Impl.Paging,Windows32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,EnsureMapped,The length of the statement  "            var ammountToMapInBytes = NearestSizeToAllocationGranularity((distanceFromStart + numberOfPages) * Constants.Storage.PageSize); " is 127.
Long Statement,Voron.Impl.Paging,Windows32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,CopyPage,The length of the statement  "            var offset = new WindowsMemoryMapPager.SplitValue { Value = (ulong)allocationStartPosition * (ulong)Constants.Storage.PageSize }; " is 129.
Long Statement,Voron.Impl.Paging,Windows32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,CopyPage,The length of the statement  "                    throw new Win32Exception($"Unable to map (default view size) {AllocationGranularity / Constants.Size.Kilobyte:#'#0} kb for page {pageNumber} starting at {allocationStartPosition} on {FileName}"' " is 194.
Long Statement,Voron.Impl.Paging,Windows32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,CopyPage,The length of the statement  "                        throw new Win32Exception($"Unable to map {newSize / Constants.Size.Kilobyte:#'#0} kb for page {pageNumber} starting at {allocationStartPosition} on {FileName}"' " is 160.
Long Statement,Voron.Impl.Paging,Windows32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,LockMemory32Bits,The length of the statement  "                        if (Sodium.sodium_mlock(address' (UIntPtr)sizeToLock) != 0 && DoNotConsiderMemoryLockFailureAsCatastrophicError == false) " is 121.
Long Statement,Voron.Impl.Paging,Windows32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,MapPages,The length of the statement  "                        throw new OutOfMemoryException($"Unable to map {size / Constants.Size.Kilobyte:#'#0} kb starting at {startPage} on {FileName}"' new Win32Exception(lastWin32Error)); " is 164.
Long Statement,Voron.Impl.Paging,Windows32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,MapPages,The length of the statement  "                            $"Unable to map {size / Constants.Size.Kilobyte:#'#0} kb starting at {startPage} on {FileName} (lastWin32Error={lastWin32Error})"' " is 130.
Long Statement,Voron.Impl.Paging,Windows32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,ThrowInvalidMappingRequested,The length of the statement  "                $"Was asked to map page {startPage} + {size / 1024:#'#0} kb' but the file size is only {_fileStreamLength}' can't do that."); " is 125.
Long Statement,Voron.Impl.Paging,Windows32Bit4KbBatchWrites,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,Write,The length of the statement  "                var ammountToMapInBytes = _parent.NearestSizeToAllocationGranularity((distanceFromStart + numberOfPages) * Constants.Storage.PageSize); " is 135.
Long Statement,Voron.Impl.Scratch,PageFromScratchBufferEqualityComparer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\PageFromScratchBuffer.cs,Equals,The length of the statement  "            return x.PositionInScratchBuffer == y.PositionInScratchBuffer && x.Size == y.Size && x.NumberOfPages == y.NumberOfPages && x.ScratchFileNumber == y.ScratchFileNumber; " is 166.
Long Statement,Voron.Impl.Scratch,PageFromScratchBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\PageFromScratchBuffer.cs,ToString,The length of the statement  "                $"PositionInScratchBuffer: {PositionInScratchBuffer}' ScratchFileNumber: {ScratchFileNumber}'  Size: {Size}' NumberOfPages: {NumberOfPages}"; " is 141.
Long Statement,Voron.Impl.Scratch,ScratchBufferFile,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferFile.cs,TryGettingFromAllocatedBuffer,The length of the statement  "            if (_freePagesBySizeAvailableImmediately.TryGetValue(size' out listOfAvailableImmediately) && listOfAvailableImmediately.Count > 0) " is 131.
Long Statement,Voron.Impl.Scratch,ScratchBufferFile,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferFile.cs,Free,The length of the statement  "                    ulong pageSize = (ulong) (page.IsOverflow ? VirtualPagerLegacyExtensions.GetNumberOfOverflowPages(page.OverflowSize) : 1) * Constants.Storage.PageSize; " is 151.
Long Statement,Voron.Impl.Scratch,ScratchBufferFile,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferFile.cs,InvalidAttemptToShrinkPageThatWasntAllocated,The length of the statement  "            throw new InvalidOperationException($"Attempt to shrink a page that wasn't currently allocated: {value.PositionInScratchBuffer}"); " is 130.
Long Statement,Voron.Impl.Scratch,ScratchBufferPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferPool.cs,Allocate,The length of the statement  "                    _scratchSpaceMonitor.Increase((current.File.NumberOfAllocatedPages - numberOfPagesBeforeAllocate) * Constants.Storage.PageSize); " is 128.
Long Statement,Voron.Impl.Scratch,ScratchBufferPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferPool.cs,InfoForDebug,The length of the statement  "                    CanBeDeleted = scratchBufferItem != current && scratchBufferItem.File.HasActivelyUsedBytes(oldestActiveTransaction) == false' " is 125.
Long Statement,Voron.Platform.Posix,Posix32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\Posix32BitsMemoryMapPager.cs,EnsureMapped,The length of the statement  "            var ammountToMapInBytes = NearestSizeToAllocationGranularity((distanceFromStart + numberOfPages) * Constants.Storage.PageSize); " is 127.
Long Statement,Voron.Platform.Posix,Posix32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\Posix32BitsMemoryMapPager.cs,CopyPage,The length of the statement  "                        $"Unable to map (default view size) {sizeToMap / Constants.Size.Kilobyte:#'#0} kb for page {pageNumber} starting at {allocationStartPosition} on {FileName}"); " is 158.
Long Statement,Voron.Platform.Posix,Posix32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\Posix32BitsMemoryMapPager.cs,CopyPage,The length of the statement  "                            $"Unable to map {sizeToMap / Constants.Size.Kilobyte:#'#0} kb for page {pageNumber} starting at {allocationStartPosition} on {FileName}"); " is 138.
Long Statement,Voron.Platform.Posix,Posix32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\Posix32BitsMemoryMapPager.cs,ThrowInvalidMappingRequested,The length of the statement  "                $"Was asked to map page {startPage} + {size / 1024:#'#0} kb' but the file size is only {_totalAllocationSize}' can't do that."); " is 128.
Long Statement,Voron.Platform.Posix,Posix32Bit4KbBatchWrites,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\Posix32BitsMemoryMapPager.cs,Write,The length of the statement  "                var ammountToMapInBytes = _parent.NearestSizeToAllocationGranularity((distanceFromStart + numberOfPages) * Constants.Storage.PageSize); " is 135.
Long Statement,Voron.Platform.Posix,Posix32Bit4KbBatchWrites,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\Posix32BitsMemoryMapPager.cs,Dispose,The length of the statement  "                    var result = Syscall.msync(new IntPtr(loadedPage.Pointer)' (UIntPtr)(loadedPage.NumberOfPages * Constants.Storage.PageSize)' MsyncFlags.MS_SYNC); " is 145.
Long Statement,Voron.Platform.Posix,PosixAbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\PosixAbstractPager.cs,AcquirePagePointer,The length of the statement  "            // We need to decide what pager we are going to use right now or risk inconsistencies when performing prefetches from disk. " is 123.
Long Statement,Voron.Platform.Posix,PosixTempMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\PosixTempMemoryMapPager.cs,AllocateMorePages,The length of the statement  "                    "Unable to allocate more pages - unsuccessfully tried to allocate continuous block of virtual memory with size = {0:##'###;;0} bytes"' " is 134.
Long Statement,Voron.Platform.Win32,Win32Helper,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\Win32Helper.cs,TryReadFileHeader,The length of the statement  "            using (var fs = SafeFileStream.Create(path.FullPath' FileMode.Open' FileAccess.ReadWrite' FileShare.Read' 4096' FileOptions.None)) " is 130.
Long Statement,Voron.Platform.Win32,Win32NativeFileMethods,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\Win32NativeFileMethods.cs,SetFileLength,The length of the statement  "                    throw new DiskFullException(filePath' length' driveInfo?.TotalFreeSpace.GetValue(SizeUnit.Bytes)' new Win32Exception(lastError).Message); " is 137.
Long Statement,Voron.Platform.Win32,WindowsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\WindowsMemoryMapPager.cs,AcquirePagePointer,The length of the statement  "            // We need to decide what pager we are going to use right now or risk inconsistencies when performing prefetches from disk. " is 123.
Long Statement,Voron.Platform.Win32,WindowsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\WindowsMemoryMapPager.cs,GetPhysicalDriveId,The length of the statement  "            var driveHandle = CreateFile(@"\\.\" + drive' 0' 0' IntPtr.Zero' (uint)CreationDisposition.OPEN_EXISTING' 0' IntPtr.Zero); " is 122.
Long Statement,Voron.Platform.Win32,WindowsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\WindowsMemoryMapPager.cs,CreatePagerState,The length of the statement  "                var errorMessage = $"Unable to allocate more pages - unsuccessfully tried to allocate continuous block of virtual memory with size = {(_fileStream.Length):##'###;;0} bytes"; " is 173.
Long Statement,Voron.Platform.Win32,WindowsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\WindowsMemoryMapPager.cs,CreatePagerState,The length of the statement  "            NativeMemory.RegisterFileMapping(_fileInfo.FullName' new IntPtr(startingBaseAddressPtr)' _fileStream.Length' GetAllocatedInBytes); " is 130.
Long Statement,Voron.Platform.Win32,WindowsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\WindowsMemoryMapPager.cs,ProtectPageRange,The length of the statement  "                Win32MemoryProtectMethods.MEMORY_BASIC_INFORMATION memoryInfo1 = new Win32MemoryProtectMethods.MEMORY_BASIC_INFORMATION(); " is 122.
Long Statement,Voron.Platform.Win32,WindowsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\WindowsMemoryMapPager.cs,ProtectPageRange,The length of the statement  "                bool status = Win32MemoryProtectMethods.VirtualProtect(start' new UIntPtr(size)' Win32MemoryProtectMethods.MemoryProtection.READONLY' out oldProtection); " is 153.
Long Statement,Voron.Platform.Win32,WindowsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\WindowsMemoryMapPager.cs,ProtectPageRange,The length of the statement  "                    Win32MemoryProtectMethods.MEMORY_BASIC_INFORMATION memoryInfo2 = new Win32MemoryProtectMethods.MEMORY_BASIC_INFORMATION(); " is 122.
Long Statement,Voron.Platform.Win32,WindowsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\WindowsMemoryMapPager.cs,UnprotectPageRange,The length of the statement  "                Win32MemoryProtectMethods.MEMORY_BASIC_INFORMATION memoryInfo1 = new Win32MemoryProtectMethods.MEMORY_BASIC_INFORMATION(); " is 122.
Long Statement,Voron.Platform.Win32,WindowsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\WindowsMemoryMapPager.cs,UnprotectPageRange,The length of the statement  "                bool status = Win32MemoryProtectMethods.VirtualProtect(start' new UIntPtr(size)' Win32MemoryProtectMethods.MemoryProtection.READWRITE' out oldProtection); " is 154.
Long Statement,Voron.Platform.Win32,WindowsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\WindowsMemoryMapPager.cs,UnprotectPageRange,The length of the statement  "                    Win32MemoryProtectMethods.MEMORY_BASIC_INFORMATION memoryInfo2 = new Win32MemoryProtectMethods.MEMORY_BASIC_INFORMATION(); " is 122.
Long Statement,Voron.Util,ActiveTransactions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\ActiveTransactions.cs,TryRemove,The length of the statement  "                var currentOldest = _activeTxs.ScanOldest(); // This is non-thread safe call (therefor from time to time we ForceRecheckingOldestTransactionByFlusherThread) " is 156.
Long Statement,Voron.Util.Settings,PathSettingBase<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Settings\PathSettingBase.cs,ValidatePath,The length of the statement  "                throw new ArgumentException($"The path '{path}' is illegal! Paths in RavenDB can't start with 'appdrive:'' '~' or '$home'"); " is 124.
Complex Conditional,Voron.Util.Settings,PathSettingBase<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Settings\PathSettingBase.cs,ValidatePath,The conditional expression  "path!= null &&                   (path.StartsWith("appdrive:"' StringComparison.OrdinalIgnoreCase) ||                   path.StartsWith("~") ||                   path.StartsWith("$home"' StringComparison.OrdinalIgnoreCase))"  is complex.
Complex Conditional,Voron.Util.Settings,PathUtil,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Settings\PathSettingBase.cs,ToFullPath,The conditional expression  "PlatformDetails.RunningOnPosix == false && path.StartsWith(@"\") == false ||                  PlatformDetails.RunningOnPosix && path.StartsWith(@"/") == false"  is complex.
Virtual Method Call from Constructor,Voron.Data.Compression,DecompressionBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\DecompressionBuffersPool.cs,DecompressionBuffer,The constructor "DecompressionBuffer" calls a virtual method "AcquirePagePointer".
Virtual Method Call from Constructor,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,AbstractPager,The constructor "AbstractPager" calls a virtual method "DisposeInternal".
Empty Catch Block,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,BackgroundFlushWritesToDataFile,The method has an empty catch block.
Empty Catch Block,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,BackgroundFlushWritesToDataFile,The method has an empty catch block.
Empty Catch Block,Voron,DirectoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,TryStoreJournalForReuse,The method has an empty catch block.
Empty Catch Block,Voron.Data.Compression,DecompressionBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\DecompressionBuffersPool.cs,GetTemporaryPage,The method has an empty catch block.
Empty Catch Block,Voron.Impl.Backup,IncrementalBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\IncrementalBackup.cs,Restore,The method has an empty catch block.
Empty Catch Block,Voron.Impl.Scratch,ScratchBufferPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferPool.cs,Cleanup,The method has an empty catch block.
Empty Catch Block,Voron.Impl.Scratch,ScratchBufferPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferPool.cs,Cleanup,The method has an empty catch block.
Magic Number,Voron.Global,Storage,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Constants.cs,Storage,The following statement contains a magic number: GC.KeepAlive(new int[                      // this is a way to have static assert                      PageSize > ushort.MaxValue || PageSize < 4*Constants.Size.Kilobyte ||                      PageSize% Size.Sector != 0                          ? -1                          : 0                      ]);
Magic Number,Voron,GlobalFlushingBehavior,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\GlobalFlushingBehavior.cs,VoronEnvironmentFlushing,The following statement contains a magic number: _flushWriterEvent.Wait(5000) == false
Magic Number,Voron,GlobalFlushingBehavior,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\GlobalFlushingBehavior.cs,FlushEnvironments,The following statement contains a magic number: _concurrentFlushesAvailable.CurrentCount < StorageEnvironment.MaxConcurrentFlushes / 2
Magic Number,Voron,PageLocator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\PageLocator.cs,Renew,The following statement contains a magic number: Debug.Assert(cacheSize <= 1024);
Magic Number,Voron,PageLocator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\PageLocator.cs,Renew,The following statement contains a magic number: _andMask = (int) (0xFFFFFFFF >> (sizeof(uint) * 8 - shiftRight));
Magic Number,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,StorageEnvironment,The following statement contains a magic number: var remainingBits = _dataPager.NumberOfAllocatedPages % (8 * sizeof(long));
Magic Number,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,StorageEnvironment,The following statement contains a magic number: _validPages = new long[_dataPager.NumberOfAllocatedPages / (8 * sizeof(long)) + (remainingBits == 0 ? 0 : 1)];
Magic Number,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,LoadExistingDatabase,The following statement contains a magic number: var buffer = new byte[16];
Magic Number,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,LoadExistingDatabase,The following statement contains a magic number: var dbIdBytes = dbId.Reader.Read(buffer' 0' 16);
Magic Number,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,LoadExistingDatabase,The following statement contains a magic number: dbIdBytes != 16
Magic Number,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,FillBase64Id,The following statement contains a magic number: var result = Base64.ConvertToBase64ArrayUnpadded(pChars' (byte*)&databaseGuidId' 0' 16);
Magic Number,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,FillBase64Id,The following statement contains a magic number: Debug.Assert(result == 22);
Magic Number,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,NewLowLevelTransaction,The following statement contains a magic number: var wait = timeout ?? (Debugger.IsAttached ? TimeSpan.FromMinutes(30) : TimeSpan.FromSeconds(30));
Magic Number,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,NewLowLevelTransaction,The following statement contains a magic number: var wait = timeout ?? (Debugger.IsAttached ? TimeSpan.FromMinutes(30) : TimeSpan.FromSeconds(30));
Magic Number,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,GenerateSizeReport,The following statement contains a magic number: journalsSize += (long)journal.JournalWriter.NumberOfAllocated4Kb * 4 * Constants.Size.Kilobyte;
Magic Number,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,FlushLogToDataFile,The following statement contains a magic number: _journal.Applicator.ApplyLogsToDataFile(_cancellationTokenSource.Token'                  Debugger.IsAttached ? TimeSpan.FromMinutes(30) : TimeSpan.FromSeconds(30));
Magic Number,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,FlushLogToDataFile,The following statement contains a magic number: _journal.Applicator.ApplyLogsToDataFile(_cancellationTokenSource.Token'                  Debugger.IsAttached ? TimeSpan.FromMinutes(30) : TimeSpan.FromSeconds(30));
Magic Number,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,ValidatePageChecksum,The following statement contains a magic number: var index = pageNumber / (8 * sizeof(long));
Magic Number,Voron,StorageEnvironment,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironment.cs,ValidatePageChecksum,The following statement contains a magic number: var bitIndex = (int)(pageNumber % (8 * sizeof(long)));
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: DisposeWaitTime = TimeSpan.FromSeconds(15);
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: MaxLogFileSize = ((shouldConfigPagersRunInlimitedMemoryEnvironment ? 4 : 256) * Constants.Size.Megabyte);
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: MaxLogFileSize = ((shouldConfigPagersRunInlimitedMemoryEnvironment ? 4 : 256) * Constants.Size.Megabyte);
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: InitialLogFileSize = 64 * Constants.Size.Kilobyte;
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: MaxScratchBufferSize = ((shouldConfigPagersRunInlimitedMemoryEnvironment ? 32 : 256) * Constants.Size.Megabyte);
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: MaxScratchBufferSize = ((shouldConfigPagersRunInlimitedMemoryEnvironment ? 32 : 256) * Constants.Size.Megabyte);
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: MaxNumberOfPagesInJournalBeforeFlush =                  ((shouldConfigPagersRunInlimitedMemoryEnvironment ? 4 : 32) * Constants.Size.Megabyte) / Constants.Storage.PageSize;
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: MaxNumberOfPagesInJournalBeforeFlush =                  ((shouldConfigPagersRunInlimitedMemoryEnvironment ? 4 : 32) * Constants.Size.Megabyte) / Constants.Storage.PageSize;
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: IdleFlushTimeout = 5000;
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: IoMetrics = new IoMetrics(256' 256' ioChangesNotifications);
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: IoMetrics = new IoMetrics(256' 256' ioChangesNotifications);
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: PrefetchSegmentSize = 4 * Constants.Size.Megabyte;
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: PrefetchResetThreshold = shouldConfigPagersRunInlimitedMemoryEnvironment?256*(long)Constants.Size.Megabyte: 8 * (long)Constants.Size.Gigabyte;
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: PrefetchResetThreshold = shouldConfigPagersRunInlimitedMemoryEnvironment?256*(long)Constants.Size.Megabyte: 8 * (long)Constants.Size.Gigabyte;
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,StorageEnvironmentOptions,The following statement contains a magic number: SyncJournalsCountThreshold = 2;
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,GetTempPath,The following statement contains a magic number: File.Create(tempFilePath' 1024).Dispose();
Magic Number,Voron,StorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,TryCleanupRecycledJournals,The following statement contains a magic number: Monitor.TryEnter(_journalsForReuse' 10) == false
Magic Number,Voron,DirectoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,AttemptToReuseJournal,The following statement contains a magic number: lastModified - fileInfo.LastWriteTimeUtc.Ticks > TickInHour * 72
Magic Number,Voron,DirectoryStorageEnvironmentOptions,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\StorageEnvironmentOptions.cs,GetTemporaryPager,The following statement contains a magic number: i < 15
Magic Number,Voron,TransactionPersistentContext,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\TransactionPersistentContext.cs,FreePageLocator,The following statement contains a magic number: _pageLocators.Count < 1024
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,SwapBitShift,The following statement contains a magic number: ulong swapped = (0x00000000000000FF) & (uvalue >> 56) |                              (0x000000000000FF00) & (uvalue >> 40) |                              (0x0000000000FF0000) & (uvalue >> 24) |                              (0x00000000FF000000) & (uvalue >> 8) |                              (0x000000FF00000000) & (uvalue << 8) |                              (0x0000FF0000000000) & (uvalue << 24) |                              (0x00FF000000000000) & (uvalue << 40) |                              (0xFF00000000000000) & (uvalue << 56);
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,SwapBitShift,The following statement contains a magic number: ulong swapped = (0x00000000000000FF) & (uvalue >> 56) |                              (0x000000000000FF00) & (uvalue >> 40) |                              (0x0000000000FF0000) & (uvalue >> 24) |                              (0x00000000FF000000) & (uvalue >> 8) |                              (0x000000FF00000000) & (uvalue << 8) |                              (0x0000FF0000000000) & (uvalue << 24) |                              (0x00FF000000000000) & (uvalue << 40) |                              (0xFF00000000000000) & (uvalue << 56);
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,SwapBitShift,The following statement contains a magic number: ulong swapped = (0x00000000000000FF) & (uvalue >> 56) |                              (0x000000000000FF00) & (uvalue >> 40) |                              (0x0000000000FF0000) & (uvalue >> 24) |                              (0x00000000FF000000) & (uvalue >> 8) |                              (0x000000FF00000000) & (uvalue << 8) |                              (0x0000FF0000000000) & (uvalue << 24) |                              (0x00FF000000000000) & (uvalue << 40) |                              (0xFF00000000000000) & (uvalue << 56);
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,SwapBitShift,The following statement contains a magic number: ulong swapped = (0x00000000000000FF) & (uvalue >> 56) |                              (0x000000000000FF00) & (uvalue >> 40) |                              (0x0000000000FF0000) & (uvalue >> 24) |                              (0x00000000FF000000) & (uvalue >> 8) |                              (0x000000FF00000000) & (uvalue << 8) |                              (0x0000FF0000000000) & (uvalue << 24) |                              (0x00FF000000000000) & (uvalue << 40) |                              (0xFF00000000000000) & (uvalue << 56);
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,SwapBitShift,The following statement contains a magic number: ulong swapped = (0x00000000000000FF) & (uvalue >> 56) |                              (0x000000000000FF00) & (uvalue >> 40) |                              (0x0000000000FF0000) & (uvalue >> 24) |                              (0x00000000FF000000) & (uvalue >> 8) |                              (0x000000FF00000000) & (uvalue << 8) |                              (0x0000FF0000000000) & (uvalue << 24) |                              (0x00FF000000000000) & (uvalue << 40) |                              (0xFF00000000000000) & (uvalue << 56);
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,SwapBitShift,The following statement contains a magic number: ulong swapped = (0x00000000000000FF) & (uvalue >> 56) |                              (0x000000000000FF00) & (uvalue >> 40) |                              (0x0000000000FF0000) & (uvalue >> 24) |                              (0x00000000FF000000) & (uvalue >> 8) |                              (0x000000FF00000000) & (uvalue << 8) |                              (0x0000FF0000000000) & (uvalue << 24) |                              (0x00FF000000000000) & (uvalue << 40) |                              (0xFF00000000000000) & (uvalue << 56);
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,SwapBitShift,The following statement contains a magic number: ulong swapped = (0x00000000000000FF) & (uvalue >> 56) |                              (0x000000000000FF00) & (uvalue >> 40) |                              (0x0000000000FF0000) & (uvalue >> 24) |                              (0x00000000FF000000) & (uvalue >> 8) |                              (0x000000FF00000000) & (uvalue << 8) |                              (0x0000FF0000000000) & (uvalue << 24) |                              (0x00FF000000000000) & (uvalue << 40) |                              (0xFF00000000000000) & (uvalue << 56);
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,SwapBitShift,The following statement contains a magic number: ulong swapped = (0x00000000000000FF) & (uvalue >> 56) |                              (0x000000000000FF00) & (uvalue >> 40) |                              (0x0000000000FF0000) & (uvalue >> 24) |                              (0x00000000FF000000) & (uvalue >> 8) |                              (0x000000FF00000000) & (uvalue << 8) |                              (0x0000FF0000000000) & (uvalue << 24) |                              (0x00FF000000000000) & (uvalue << 40) |                              (0xFF00000000000000) & (uvalue << 56);
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,SwapBitShift,The following statement contains a magic number: uint swapped = (0x000000FF) & (uvalue << 24) |                             (0x0000FF00) & (uvalue << 8) |                             (0x00FF0000) & (uvalue >> 8) |                             (0xFF000000) & (uvalue >> 24);
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,SwapBitShift,The following statement contains a magic number: uint swapped = (0x000000FF) & (uvalue << 24) |                             (0x0000FF00) & (uvalue << 8) |                             (0x00FF0000) & (uvalue >> 8) |                             (0xFF000000) & (uvalue >> 24);
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,SwapBitShift,The following statement contains a magic number: uint swapped = (0x000000FF) & (uvalue << 24) |                             (0x0000FF00) & (uvalue << 8) |                             (0x00FF0000) & (uvalue >> 8) |                             (0xFF000000) & (uvalue >> 24);
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,SwapBitShift,The following statement contains a magic number: uint swapped = (0x000000FF) & (uvalue << 24) |                             (0x0000FF00) & (uvalue << 8) |                             (0x00FF0000) & (uvalue >> 8) |                             (0xFF000000) & (uvalue >> 24);
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,SwapBitShift,The following statement contains a magic number: uint swapped = (0x000000FF) & (uvalue << 8) |                             (0x0000FF00) & (uvalue >> 8);
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,SwapBitShift,The following statement contains a magic number: uint swapped = (0x000000FF) & (uvalue << 8) |                             (0x0000FF00) & (uvalue >> 8);
Magic Number,Voron,ValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\ValueReader.cs,CopyTo,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,Tree,The following statement contains a magic number: _recentlyFoundPages = new RecentlyFoundTreePages(llt.Flags == TransactionFlags.Read ? 8 : 2);
Magic Number,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,Tree,The following statement contains a magic number: _recentlyFoundPages = new RecentlyFoundTreePages(llt.Flags == TransactionFlags.Read ? 8 : 2);
Magic Number,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,Tree,The following statement contains a magic number: _recentlyFoundPages = new RecentlyFoundTreePages(llt.Flags == TransactionFlags.Read ? 8 : 2);
Magic Number,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,Tree,The following statement contains a magic number: _recentlyFoundPages = new RecentlyFoundTreePages(llt.Flags == TransactionFlags.Read ? 8 : 2);
Magic Number,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,ValidateTree_Forced,The following statement contains a magic number: p.NumberOfEntries < 2
Magic Number,Voron.Data.BTrees,Tree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Compressed.cs,DebugValidateBranchReferences,The following statement contains a magic number: p.NumberOfEntries < 2
Magic Number,Voron.Data.BTrees,StreamToPageWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Stream.cs,Write,The following statement contains a magic number: _localBuffer = ArrayPool<byte>.Shared.Rent(512 * Constants.Size.Kilobyte);
Magic Number,Voron.Data.BTrees,StreamToPageWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\Tree.Stream.cs,AllocateNextPage,The following statement contains a magic number: _numberOfPagesPerChunk = Math.Min(_numberOfPagesPerChunk * 2' MaxNumberOfPagerPerChunk);
Magic Number,Voron.Data.BTrees,TreeMutableState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeMutableState.cs,ToString,The following statement contains a magic number: return string.Format(@" Pages: {1:#'#}' Entries: {2:#'#}      Depth: {0}' FixedTreeFlags: {3}      Root Page: {4}      Leafs: {5:#'#} Overflow: {6:#'#} Branches: {7:#'#}      Size: {8:F2} Mb"' Depth' PageCount' NumberOfEntries' Flags' RootPageNumber' LeafPages' OverflowPages' BranchPages'       ((float)(PageCount * Constants.Storage.PageSize) / (1024 * 1024)));
Magic Number,Voron.Data.BTrees,TreeMutableState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeMutableState.cs,ToString,The following statement contains a magic number: return string.Format(@" Pages: {1:#'#}' Entries: {2:#'#}      Depth: {0}' FixedTreeFlags: {3}      Root Page: {4}      Leafs: {5:#'#} Overflow: {6:#'#} Branches: {7:#'#}      Size: {8:F2} Mb"' Depth' PageCount' NumberOfEntries' Flags' RootPageNumber' LeafPages' OverflowPages' BranchPages'       ((float)(PageCount * Constants.Storage.PageSize) / (1024 * 1024)));
Magic Number,Voron.Data.BTrees,TreePage,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePage.cs,DebugValidate,The following statement contains a magic number: IsBranch && NumberOfEntries < 2
Magic Number,Voron.Data.BTrees,TreePageSplitter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePageSplitter.cs,OptimizedOnlyMoveNewValueToTheRightPage,The following statement contains a magic number: _page.NumberOfEntries > 2
Magic Number,Voron.Data.BTrees,TreePageSplitter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreePageSplitter.cs,SplitPageInHalf,The following statement contains a magic number: var splitIndex = _page.NumberOfEntries / 2;
Magic Number,Voron.Data.BTrees,TreeRebalancer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeRebalancer.cs,Execute,The following statement contains a magic number: parentPage.LastSearchPosition == 0 && parentPage.NumberOfEntries > 2
Magic Number,Voron.Data.BTrees,TreeRebalancer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeRebalancer.cs,Execute,The following statement contains a magic number: var minKeys = page.IsBranch ? 2 : 1;
Magic Number,Voron.Data.BTrees,TreeRebalancer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeRebalancer.cs,Execute,The following statement contains a magic number: Debug.Assert(parentPage.NumberOfEntries >= 2);
Magic Number,Voron.Data.BTrees,TreeRebalancer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeRebalancer.cs,Execute,The following statement contains a magic number: minKeys = sibling.IsBranch ? 2 : 1;
Magic Number,Voron.Data.BTrees,TreeRebalancer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\BTrees\TreeRebalancer.cs,MoveBranchNode,The following statement contains a magic number: Debug.Assert(from.NumberOfEntries >= 2);
Magic Number,Voron.Impl,GlobalPrefetchingBehavior,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\GlobalPrefetchingBehavior.cs,VoronPrefetcher,The following statement contains a magic number: const int StackSpace = 32;
Magic Number,Voron.Impl,EncryptionBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\EncryptionBuffersPool.cs,EncryptionBuffersPool,The following statement contains a magic number: _items = new ConcurrentStack<NativeAllocation>[32];
Magic Number,Voron.Impl,EncryptionBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\EncryptionBuffersPool.cs,Get,The following statement contains a magic number: size > Constants.Size.Megabyte * 16
Magic Number,Voron.Impl,EncryptionBuffersPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\EncryptionBuffersPool.cs,Return,The following statement contains a magic number: size > Constants.Size.Megabyte * 16 || LowMemoryNotification.Instance.LowMemoryState
Magic Number,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,AllocateOverflowRawPage,The following statement contains a magic number: throw new InvalidOperationException($"Cannot allocate chunks bigger than { int.MaxValue / 1024 * 1024 } Mb.");
Magic Number,Voron.Impl,LowLevelTransaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\LowLevelTransaction.cs,AllocateOverflowRawPage,The following statement contains a magic number: throw new InvalidOperationException($"Cannot allocate chunks bigger than { int.MaxValue / 1024 * 1024 } Mb.");
Magic Number,Voron.Impl,PagerState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\PagerState.cs,PagerState,The following statement contains a magic number: this._prefetchTable = new byte[(numberOfAllocatedSegments / 2) + 1];
Magic Number,Voron.Impl,PagerState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\PagerState.cs,GetSegmentState,The following statement contains a magic number: byte value = _prefetchTable[segment / 2];
Magic Number,Voron.Impl,PagerState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\PagerState.cs,GetSegmentState,The following statement contains a magic number: segment % 2 == 0
Magic Number,Voron.Impl,PagerState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\PagerState.cs,SetSegmentState,The following statement contains a magic number: byte value = this._prefetchTable[segment / 2];
Magic Number,Voron.Impl,PagerState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\PagerState.cs,SetSegmentState,The following statement contains a magic number: segment % 2 == 0
Magic Number,Voron.Impl,PagerState,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\PagerState.cs,SetSegmentState,The following statement contains a magic number: this._prefetchTable[segment / 2] = value;
Magic Number,Voron.Impl,TreeAndSliceComparer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\TreeAndSliceComparer.cs,GetHashCode,The following statement contains a magic number: return obj.Item1.GetHashCode() ^ 397 * obj.Item2.GetHashCode();
Magic Number,Voron.Data.Compression,DecompressedLeafPage,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Compression\DecompressedLeafPage.cs,SplitPage,The following statement contains a magic number: var middleNodeIndex = NumberOfEntries / 2;
Magic Number,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,FixedSizeTree,The following statement contains a magic number: _maxEmbeddedEntries = (Constants.Storage.PageSize / 8) / _entrySize;
Magic Number,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,ThrowInvalidFixedTreeValueSize,The following statement contains a magic number: throw new InvalidFixedSizeTree("The value size must be small than " + (Constants.Storage.PageSize / 8));
Magic Number,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,RebalancePage,The following statement contains a magic number: var minNumberOfEntriesBeforeRebalance = (Constants.Storage.PageSize / sizeOfEntryInPage) / 4;
Magic Number,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,RebalancePage,The following statement contains a magic number: parentPage.LastSearchPosition == 0                      // if we are 2 or less' we'll remove our entry and the parent page                       // page will rebalance in turn' so we shouldn't modify the relevant                      // entry                      && parentPage.NumberOfEntries > 2
Magic Number,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,RebalancePage,The following statement contains a magic number: System.Diagnostics.Debug.Assert(parentPage.NumberOfEntries >= 2);
Magic Number,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,RebalancePage,The following statement contains a magic number: siblingPage.NumberOfEntries <= minNumberOfEntriesBeforeRebalance * 2
Magic Number,Voron.Data.Fixed,FixedSizeTree,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Fixed\FixedSizeIterators.cs,RebalancePage,The following statement contains a magic number: var entriesToTake = (siblingPage.NumberOfEntries / 2);
Magic Number,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,Create,The following statement contains a magic number: Debug.Assert((numberOfPagesInSmallSection * 2) + ReservedHeaderSpace <= Constants.Storage.PageSize);
Magic Number,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,GetNumberOfPagesInSmallSection,The following statement contains a magic number: return (Constants.Storage.PageSize - ReservedHeaderSpace) / 2;
Magic Number,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,GetNumberOfPagesInSmallSection,The following statement contains a magic number: tx.DataPager.NumberOfAllocatedPages > 1024 * 32
Magic Number,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,GetNumberOfPagesInSmallSection,The following statement contains a magic number: tx.DataPager.NumberOfAllocatedPages > 1024 * 32
Magic Number,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,GetNumberOfPagesInSmallSection,The following statement contains a magic number: return 1024;
Magic Number,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,GetNumberOfPagesInSmallSection,The following statement contains a magic number: tx.DataPager.NumberOfAllocatedPages > 1024 * 16
Magic Number,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,GetNumberOfPagesInSmallSection,The following statement contains a magic number: tx.DataPager.NumberOfAllocatedPages > 1024 * 16
Magic Number,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,GetNumberOfPagesInSmallSection,The following statement contains a magic number: return 512;
Magic Number,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,GetNumberOfPagesInSmallSection,The following statement contains a magic number: tx.DataPager.NumberOfAllocatedPages > 1024 * 8
Magic Number,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,GetNumberOfPagesInSmallSection,The following statement contains a magic number: tx.DataPager.NumberOfAllocatedPages > 1024 * 8
Magic Number,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,GetNumberOfPagesInSmallSection,The following statement contains a magic number: return 128;
Magic Number,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,GetNumberOfPagesInSmallSection,The following statement contains a magic number: tx.DataPager.NumberOfAllocatedPages > 1024 * 4
Magic Number,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,GetNumberOfPagesInSmallSection,The following statement contains a magic number: tx.DataPager.NumberOfAllocatedPages > 1024 * 4
Magic Number,Voron.Data.RawData,ActiveRawDataSmallSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\ActiveRawDataSmallSection.cs,GetNumberOfPagesInSmallSection,The following statement contains a magic number: return 32;
Magic Number,Voron.Data.RawData,RawDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\RawDataSection.cs,FillAllIdsInPage,The following statement contains a magic number: offset += sizeof(short) * 2 + sizes->AllocatedSize;
Magic Number,Voron.Data.RawData,RawDataSection,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\RawData\RawDataSection.cs,Free,The following statement contains a magic number: var sizeFreed = sizes->AllocatedSize + (sizeof(short) * 2);
Magic Number,Voron.Data.Tables,NewPageAllocator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\NewPageAllocator.cs,AllocateMoreSpace,The following statement contains a magic number: Debug.Assert(_numberOfPagesToAllocate % 8 == 0);
Magic Number,Voron.Data.Tables,NewPageAllocator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\NewPageAllocator.cs,AllocateMoreSpace,The following statement contains a magic number: Debug.Assert(_numberOfPagesToAllocate % 8 <= BitmapSize);
Magic Number,Voron.Data.Tables,NewPageAllocator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\NewPageAllocator.cs,AllocateMoreSpace,The following statement contains a magic number: Memory.Set(ptr' 0' _numberOfPagesToAllocate / 8);
Magic Number,Voron.Data.Tables,NewPageAllocator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\NewPageAllocator.cs,AllocateSinglePage,The following statement contains a magic number: i < BitmapSize*8
Magic Number,Voron.Data.Tables,NewPageAllocator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\NewPageAllocator.cs,MaybePrefetchSections,The following statement contains a magic number: fst.NumberOfEntries > 4
Magic Number,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,Delete,The following statement contains a magic number: ActiveDataSmallSection.Contains(id) || density > 0.5
Magic Number,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,Delete,The following statement contains a magic number: density > 0.15
Magic Number,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,AllocateFromSmallActiveSection,The following statement contains a magic number: ushort maxSectionSizeInPages =                      _tx.LowLevelTransaction.Environment.Options.RunningOn32Bits                          ? (ushort)((1 * Constants.Size.Megabyte) / Constants.Storage.PageSize)                          : (ushort)((32 * Constants.Size.Megabyte) / Constants.Storage.PageSize);
Magic Number,Voron.Data.Tables,Table,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\Table.cs,AllocateFromSmallActiveSection,The following statement contains a magic number: var newNumberOfPages = Math.Min(maxSectionSizeInPages'                      (ushort)(ActiveDataSmallSection.NumberOfPages * 2));
Magic Number,Voron.Data.Tables,SchemaIndexDef,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableSchema.cs,ReadFrom,The following statement contains a magic number: currentPtr = input.Read(2' out currentSize);
Magic Number,Voron.Data.Tables,SchemaIndexDef,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableSchema.cs,ReadFrom,The following statement contains a magic number: currentPtr = input.Read(3' out currentSize);
Magic Number,Voron.Data.Tables,SchemaIndexDef,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableSchema.cs,ReadFrom,The following statement contains a magic number: currentPtr = input.Read(4' out currentSize);
Magic Number,Voron.Data.Tables,FixedSizeSchemaIndexDef,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableSchema.cs,ReadFrom,The following statement contains a magic number: currentPtr = input.Read(2' out currentSize);
Magic Number,Voron.Data.Tables,TableValueBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableValueBuilder.cs,CopyTo,The following statement contains a magic number: switch (elementSize)              {                  case 1:                      var bytePtr = ptr;                      for (int i = 0; i < _values.Count; i++)                      {                          bytePtr[i] = (byte)pos;                          pos += _values[i].Size;                      }                      break;                  case 2:                      var shortPtr = (ushort*)ptr;                      for (int i = 0; i < _values.Count; i++)                      {                          shortPtr[i] = (ushort)pos;                          pos += _values[i].Size;                      }                      break;                  case 4:                      var intPtr = (int*)ptr;                      for (int i = 0; i < _values.Count; i++)                      {                          intPtr[i] = pos;                          pos += _values[i].Size;                      }                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(ElementSize)' "Unknown element size " + ElementSize);              }
Magic Number,Voron.Data.Tables,TableValueBuilder,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableValueBuilder.cs,CopyTo,The following statement contains a magic number: switch (elementSize)              {                  case 1:                      var bytePtr = ptr;                      for (int i = 0; i < _values.Count; i++)                      {                          bytePtr[i] = (byte)pos;                          pos += _values[i].Size;                      }                      break;                  case 2:                      var shortPtr = (ushort*)ptr;                      for (int i = 0; i < _values.Count; i++)                      {                          shortPtr[i] = (ushort)pos;                          pos += _values[i].Size;                      }                      break;                  case 4:                      var intPtr = (int*)ptr;                      for (int i = 0; i < _values.Count; i++)                      {                          intPtr[i] = pos;                          pos += _values[i].Size;                      }                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(ElementSize)' "Unknown element size " + ElementSize);              }
Magic Number,Voron.Data.Tables,TableValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableValueReader.cs,TableValueReader,The following statement contains a magic number: _elementSize = 4;
Magic Number,Voron.Data.Tables,TableValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableValueReader.cs,Read,The following statement contains a magic number: switch (_elementSize)              {                  case 1:                      position = _dataPtr[index];                      nextPos = hasNext ? _dataPtr[index + 1] : _dataSize;                      break;                  case 2:                      position = ((ushort*) _dataPtr)[index];                      nextPos = hasNext ? ((ushort*) _dataPtr)[index + 1] : _dataSize;                      break;                  case 4:                      position = ((int*) _dataPtr)[index];                      nextPos = hasNext ? ((int*) _dataPtr)[index + 1] : _dataSize;                      break;                  default:                      ThrowInvalidElementSize();                      goto case 1; // never hit              }
Magic Number,Voron.Data.Tables,TableValueReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\Tables\TableValueReader.cs,Read,The following statement contains a magic number: switch (_elementSize)              {                  case 1:                      position = _dataPtr[index];                      nextPos = hasNext ? _dataPtr[index + 1] : _dataSize;                      break;                  case 2:                      position = ((ushort*) _dataPtr)[index];                      nextPos = hasNext ? ((ushort*) _dataPtr)[index + 1] : _dataSize;                      break;                  case 4:                      position = ((int*) _dataPtr)[index];                      nextPos = hasNext ? ((int*) _dataPtr)[index + 1] : _dataSize;                      break;                  default:                      ThrowInvalidElementSize();                      goto case 1; // never hit              }
Magic Number,Voron.Debugging,StorageReportGenerator,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Debugging\StorageReportGenerator.cs,GenerateJournalsReport,The following statement contains a magic number: return journals.Select(journal =>              {                  var snapshot = journal.GetSnapshot();                  return new JournalReport                  {                      Number = journal.Number'                      AllocatedSpaceInBytes = (long)journal.JournalWriter.NumberOfAllocated4Kb * 4 * Constants.Size.Kilobyte'                      Available4Kbs = snapshot.Available4Kbs'                      LastTransaction = snapshot.LastTransaction'                  };              }).ToList();
Magic Number,Voron.Impl.Backup,FullBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\FullBackup.cs,ToFile,The following statement contains a magic number: var copier = new DataCopier(Constants.Storage.PageSize * 16);
Magic Number,Voron.Impl.Backup,FullBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\FullBackup.cs,ToFile,The following statement contains a magic number: var copier = new DataCopier(Constants.Storage.PageSize * 16);
Magic Number,Voron.Impl.Backup,FullBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\FullBackup.cs,Backup,The following statement contains a magic number: Debug.Assert(HeaderAccessor.HeaderFileNames.Length == 2);
Magic Number,Voron.Impl.Backup,FullBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\FullBackup.cs,Backup,The following statement contains a magic number: infoNotify(($"Voron copy headers for {basePath}"' 2));
Magic Number,Voron.Impl.Backup,IncrementalBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\IncrementalBackup.cs,ToFile,The following statement contains a magic number: var copier = new DataCopier(Constants.Storage.PageSize * 16);
Magic Number,Voron.Impl.Backup,IncrementalBackup,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Backup\IncrementalBackup.cs,ToFile,The following statement contains a magic number: var copier = new DataCopier(Constants.Storage.PageSize * 16);
Magic Number,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,Execute,The following statement contains a magic number: const int maxNumberOfRetries = 100;
Magic Number,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,Execute,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyFixedSizeTree,The following statement contains a magic number: var reportRate = fst.NumberOfEntries / 33 + 1;
Magic Number,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyVariableSizeTree,The following statement contains a magic number: var reportRate = existingTree.State.NumberOfEntries / 33 + 1;
Magic Number,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,CopyTableTree,The following statement contains a magic number: lastSlice.Equals(tvr.Key) == false && transactionSize >= compactedEnv.Options.MaxScratchBufferSize / 2 || ShouldCloseTxFor32Bit(transactionSize' compactedEnv)
Magic Number,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,ShouldCloseTxFor32Bit,The following statement contains a magic number: return (env.Options.ForceUsing32BitsPager || PlatformDetails.Is32Bits) && transactionSize > 4 * Constants.Size.Megabyte;
Magic Number,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,ReportIfNeeded,The following statement contains a magic number: const int intervalInMs = 5 * 1000;
Magic Number,Voron.Impl.Compaction,StorageCompaction,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Compaction\StorageCompaction.cs,ReportIfNeeded,The following statement contains a magic number: const int intervalInMs = 5 * 1000;
Magic Number,Voron.Impl.FileHeaders,HeaderAccessor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FileHeaders\HeaderAccessor.cs,Initialize,The following statement contains a magic number: var headers = stackalloc FileHeader[2];
Magic Number,Voron.Impl.FileHeaders,HeaderAccessor,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FileHeaders\HeaderAccessor.cs,IsEmptyHeader,The following statement contains a magic number: return header->MagicMarker == Constants.MagicMarker &&                     header->Version == Constants.CurrentVersion &&                     header->HeaderRevision == -1 &&                     header->TransactionId == 0 &&                     header->LastPageNumber == 1 &&                     header->Root.RootPageNumber == -1 &&                     header->Journal.CurrentJournal == -1 &&                     header->Journal.Flags == Journal.JournalInfoFlags.None &&                     Memory.Compare(header->Journal.Reserved' zeroed' 3) == 0 &&                     header->Journal.LastSyncedJournal == -1 &&                     header->Journal.LastSyncedTransactionId == -1 &&                     header->IncrementalBackup.LastBackedUpJournal == -1 &&                     header->IncrementalBackup.LastBackedUpJournalPage == -1 &&                     header->IncrementalBackup.LastCreatedJournal == -1;
Magic Number,Voron.Impl.FreeSpace,FreeSpaceHandling,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\FreeSpaceHandling.cs,GetFreeSpaceTree,The following statement contains a magic number: return tx._freeSpaceTree = new FixedSizeTree(tx' tx.RootObjects' FreeSpaceKey' 260' clone: false)              {                  FreeSpaceTree = true              };
Magic Number,Voron.Impl.FreeSpace,StreamBitArray,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\StreamBitArray.cs,FirstSetBit,The following statement contains a magic number: return i << 5 | HighestBitSet(_inner[i]);
Magic Number,Voron.Impl.FreeSpace,StreamBitArray,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\StreamBitArray.cs,HighestBitSet,The following statement contains a magic number: v |= v >> 2;
Magic Number,Voron.Impl.FreeSpace,StreamBitArray,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\StreamBitArray.cs,HighestBitSet,The following statement contains a magic number: v |= v >> 4;
Magic Number,Voron.Impl.FreeSpace,StreamBitArray,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\StreamBitArray.cs,HighestBitSet,The following statement contains a magic number: v |= v >> 8;
Magic Number,Voron.Impl.FreeSpace,StreamBitArray,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\StreamBitArray.cs,HighestBitSet,The following statement contains a magic number: v |= v >> 16;
Magic Number,Voron.Impl.FreeSpace,StreamBitArray,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\StreamBitArray.cs,HighestBitSet,The following statement contains a magic number: return MultiplyDeBruijnBitPosition[(uint)(v * 0x07C4ACDDU) >> 27];
Magic Number,Voron.Impl.FreeSpace,StreamBitArray,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\StreamBitArray.cs,Get,The following statement contains a magic number: return (_inner[index >> 5] & (1 << (index & 31))) != 0;
Magic Number,Voron.Impl.FreeSpace,StreamBitArray,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\StreamBitArray.cs,Get,The following statement contains a magic number: return (_inner[index >> 5] & (1 << (index & 31))) != 0;
Magic Number,Voron.Impl.FreeSpace,StreamBitArray,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\StreamBitArray.cs,Set,The following statement contains a magic number: _inner[index >> 5] |= (1 << (index & 31));
Magic Number,Voron.Impl.FreeSpace,StreamBitArray,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\StreamBitArray.cs,Set,The following statement contains a magic number: _inner[index >> 5] |= (1 << (index & 31));
Magic Number,Voron.Impl.FreeSpace,StreamBitArray,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\StreamBitArray.cs,HasStartRangeCount,The following statement contains a magic number: var len = _inner.Length*32;
Magic Number,Voron.Impl.FreeSpace,StreamBitArray,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\FreeSpace\StreamBitArray.cs,ToStream,The following statement contains a magic number: var ms = new MemoryStream(260);
Magic Number,Voron.Impl.Journal,JournalFile,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalFile.cs,Write,The following statement contains a magic number: var readTxHeader = (TransactionHeader*)(p + (posBy4Kbs * 4 * Constants.Size.Kilobyte));
Magic Number,Voron.Impl.Journal,JournalFile,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalFile.cs,Write,The following statement contains a magic number: var roundTo4Kb = (totalSize / (4 * Constants.Size.Kilobyte)) +                                     (totalSize % (4 * Constants.Size.Kilobyte) == 0 ? 0 : 1);
Magic Number,Voron.Impl.Journal,JournalFile,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalFile.cs,Write,The following statement contains a magic number: var roundTo4Kb = (totalSize / (4 * Constants.Size.Kilobyte)) +                                     (totalSize % (4 * Constants.Size.Kilobyte) == 0 ? 0 : 1);
Magic Number,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,JournalReader,The following statement contains a magic number: _journalPagerNumberOfAllocated4Kb =                   _journalPager.TotalAllocationSize /(4*Constants.Size.Kilobyte);
Magic Number,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,GetTransactionSizeIn4Kb,The following statement contains a magic number: var transactionSizeIn4Kb =                  (size + sizeof(TransactionHeader)) / (4 * Constants.Size.Kilobyte) +                  ((size + sizeof(TransactionHeader)) % (4 * Constants.Size.Kilobyte) == 0 ? 0 : 1);
Magic Number,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,GetTransactionSizeIn4Kb,The following statement contains a magic number: var transactionSizeIn4Kb =                  (size + sizeof(TransactionHeader)) / (4 * Constants.Size.Kilobyte) +                  ((size + sizeof(TransactionHeader)) % (4 * Constants.Size.Kilobyte) == 0 ? 0 : 1);
Magic Number,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,The following statement contains a magic number: const int pageTo4KbRatio = Constants.Storage.PageSize / (4 * Constants.Size.Kilobyte);
Magic Number,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,The following statement contains a magic number: var positionInsidePage = (_readAt4Kb % pageTo4KbRatio) * (4 * Constants.Size.Kilobyte);
Magic Number,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,TryReadAndValidateHeader,The following statement contains a magic number: var size = (4 * Constants.Size.Kilobyte) * GetNumberOf4KbFor(sizeof(TransactionHeader) + pagesSize);
Magic Number,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,ValidatePagesHash,The following statement contains a magic number: options.InvokeRecoveryError(this'                          $"Size {size} ({compressLabel}) is too big for the journal size {_journalPagerNumberOfAllocated4Kb * 4 * Constants.Size.Kilobyte}"' null);
Magic Number,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,ValidatePagesHash,The following statement contains a magic number: size > (_journalPagerNumberOfAllocated4Kb - _readAt4Kb) * 4 * Constants.Size.Kilobyte
Magic Number,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,GetNumberOf4KbFor,The following statement contains a magic number: return checked(size / (4 * Constants.Size.Kilobyte) + (size % (4 * Constants.Size.Kilobyte) == 0 ? 0 : 1));
Magic Number,Voron.Impl.Journal,JournalReader,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalReader.cs,GetNumberOf4KbFor,The following statement contains a magic number: return checked(size / (4 * Constants.Size.Kilobyte) + (size % (4 * Constants.Size.Kilobyte) == 0 ? 0 : 1));
Magic Number,Voron.Impl.Journal,JournalWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalWriter.cs,JournalWriter,The following statement contains a magic number: NumberOfAllocated4Kb = (int)(actualSize / (4 * Constants.Size.Kilobyte));
Magic Number,Voron.Impl.Journal,JournalWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalWriter.cs,Write,The following statement contains a magic number: var result = Pal.rvn_write_journal(_writeHandle' p' numberOf4Kb * 4L * Constants.Size.Kilobyte' posBy4Kb * 4L * Constants.Size.Kilobyte' out var error);
Magic Number,Voron.Impl.Journal,JournalWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalWriter.cs,Write,The following statement contains a magic number: var result = Pal.rvn_write_journal(_writeHandle' p' numberOf4Kb * 4L * Constants.Size.Kilobyte' posBy4Kb * 4L * Constants.Size.Kilobyte' out var error);
Magic Number,Voron.Impl.Journal,JournalWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalWriter.cs,Write,The following statement contains a magic number: PalHelper.ThrowLastError(result' error' $"Attempted to write to journal file - Path: {FileName.FullPath} Size: {numberOf4Kb * 4L * Constants.Size.Kilobyte}' numberOf4Kb={numberOf4Kb}");
Magic Number,Voron.Impl.Journal,JournalWriter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\JournalWriter.cs,Write,The following statement contains a magic number: metrics.SetFileSize(NumberOfAllocated4Kb * (4L * Constants.Size.Kilobyte));
Magic Number,Voron.Impl.Journal,LazyTransactionBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\LazyTransactionBuffer.cs,WriteBufferToFile,The following statement contains a magic number: var numberOfPages = _lastUsed4Kbs / (Constants.Storage.PageSize / (4 * Constants.Size.Kilobyte));
Magic Number,Voron.Impl.Journal,LazyTransactionBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\LazyTransactionBuffer.cs,WriteBufferToFile,The following statement contains a magic number: (_lastUsed4Kbs % (Constants.Storage.PageSize / (4 * Constants.Size.Kilobyte))) != 0
Magic Number,Voron.Impl.Journal,LazyTransactionBuffer,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\LazyTransactionBuffer.cs,WriteBufferToFile,The following statement contains a magic number: _log.Info($"Writing lazy transaction buffer with {_lastUsed4Kbs / 4:#'#0} kb took {sp.Elapsed}");
Magic Number,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,NextFile,The following statement contains a magic number: _currentJournalFileSize = Math.Min(_env.Options.MaxLogFileSize' _currentJournalFileSize * 2);
Magic Number,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,NextFile,The following statement contains a magic number: (now - _lastFile).TotalSeconds < 90
Magic Number,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,NextFile,The following statement contains a magic number: long minRequiredSize = numberOf4Kbs * 4 * Constants.Size.Kilobyte;
Magic Number,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,RecoverDatabase,The following statement contains a magic number: sp.Elapsed.TotalSeconds >= 60
Magic Number,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,RecoverDatabase,The following statement contains a magic number: lastFile.Available4Kbs >= 2
Magic Number,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,WriteToJournal,The following statement contains a magic number: _logger.Info(                              $"Preparing to write tx {tx.Id} to journal with {journalEntry.NumberOfUncompressedPages:#'#} pages ({(journalEntry.NumberOfUncompressedPages * Constants.Storage.PageSize) / Constants.Size.Kilobyte:#'#} kb) in {sp.Elapsed} with {Math.Round(journalEntry.NumberOf4Kbs * 4d' 1):#'#.#;;0} kb compressed.");
Magic Number,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,WriteToJournal,The following statement contains a magic number: _logger.Info($"Writing {journalEntry.NumberOf4Kbs * 4:#'#} kb to journal {CurrentFile.Number:D19} took {sp.Elapsed}");
Magic Number,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The following statement contains a magic number: var remainder = totalLength % (4 * Constants.Size.Kilobyte);
Magic Number,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The following statement contains a magic number: int entireBuffer4Kbs = checked((int)((totalLength / (4 * Constants.Size.Kilobyte)) + (remainder == 0 ? 0 : 1)));
Magic Number,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The following statement contains a magic number: Memory.Set(txHeaderPtr + totalLength' 0' 4 * Constants.Size.Kilobyte - remainder);
Magic Number,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,PrepareToWriteToJournal,The following statement contains a magic number: Debug.Assert(((long)txHeaderPtr % (4 * Constants.Size.Kilobyte)) == 0' "Memory must be 4kb aligned");
Magic Number,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,AdjustPagesRequiredFor32Bits,The following statement contains a magic number: bytes < Constants.Size.Megabyte / 2
Magic Number,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ShouldReduceSizeOfCompressionPager,The following statement contains a magic number: (DateTime.UtcNow - _lastCompressionBufferReduceCheck).TotalMinutes < 5
Magic Number,Voron.Impl.Journal,WriteAheadJournal,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,ShouldReduceSizeOfCompressionPager,The following statement contains a magic number: var preventResize = _maxNumberOfPagesRequiredForCompressionBuffer > _compressionPager.NumberOfAllocatedPages / 2;
Magic Number,Voron.Impl.Journal,LockTaskResponsible,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,WaitForTaskToBeDone,The following statement contains a magic number: _waitForTaskToBeDone.Wait(TimeSpan.FromMilliseconds(250)' _token)
Magic Number,Voron.Impl.Journal,LockTaskResponsible,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,WaitForTaskToBeDone,The following statement contains a magic number: _waitForTaskToBeDone.Wait(TimeSpan.FromMilliseconds(250)' _token)
Magic Number,Voron.Impl.Journal,CompressionAccelerationStats,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,CalculateOptimalAcceleration,The following statement contains a magic number: _lastAcceleration = Math.Min(99' _lastAcceleration + 2);
Magic Number,Voron.Impl.Journal,CompressionAccelerationStats,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,CalculateOptimalAcceleration,The following statement contains a magic number: _lastAcceleration = Math.Min(99' _lastAcceleration + 2);
Magic Number,Voron.Impl.Journal,CompressionAccelerationStats,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,CalculateOptimalAcceleration,The following statement contains a magic number: _flux = -4;
Magic Number,Voron.Impl.Journal,CompressionAccelerationStats,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,CalculateOptimalAcceleration,The following statement contains a magic number: _lastAcceleration < 99
Magic Number,Voron.Impl.Journal,CompressionAccelerationStats,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,CalculateOptimalAcceleration,The following statement contains a magic number: _flux = 3;
Magic Number,Voron.Impl.Journal,CompressionAccelerationStats,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,CalculateOptimalAcceleration,The following statement contains a magic number: ++_flux > 5
Magic Number,Voron.Impl.Journal,CompressionAccelerationStats,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,CalculateOptimalAcceleration,The following statement contains a magic number: _lastAcceleration = Math.Min(99' _lastAcceleration + 1);
Magic Number,Voron.Impl.Journal,CompressionAccelerationStats,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,CalculateOptimalAcceleration,The following statement contains a magic number: _flux = -2;
Magic Number,Voron.Impl.Journal,CompressionAccelerationStats,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Journal\WriteAheadJournal.cs,CalculateOptimalAcceleration,The following statement contains a magic number: --_flux < -5
Magic Number,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,AbstractPager,The following statement contains a magic number: Debug.Assert((Constants.Storage.PageSize - Constants.Tree.PageHeaderSize) / Constants.Tree.MinKeysInPage >= 1024);
Magic Number,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,AbstractPager,The following statement contains a magic number: NodeMaxSize = PageMaxSpace / 2 - 1;
Magic Number,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,AbstractPager,The following statement contains a magic number: PageMinSpace = (int)(PageMaxSpace * 0.33);
Magic Number,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,GetNewLength,The following statement contains a magic number: _increaseSize = Math.Min(_increaseSize * 2' MaxIncreaseSize);
Magic Number,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,GetNewLength,The following statement contains a magic number: timeSinceLastIncrease.TotalMinutes < 3
Magic Number,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,GetNewLength,The following statement contains a magic number: var actualIncrease = Math.Min(_increaseSize' current / 2);
Magic Number,Voron.Impl.Paging,AbstractPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,CopyPageImpl,The following statement contains a magic number: const int adjustPageSize = (Constants.Storage.PageSize) / (4 * Constants.Size.Kilobyte);
Magic Number,Voron.Impl.Paging,Simple4KbBatchWrites,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,Write,The following statement contains a magic number: const int pageSizeTo4KbRatio = (Constants.Storage.PageSize / (4 * Constants.Size.Kilobyte));
Magic Number,Voron.Impl.Paging,Simple4KbBatchWrites,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,Write,The following statement contains a magic number: var toWrite = numberOf4Kbs * 4 * Constants.Size.Kilobyte;
Magic Number,Voron.Impl.Paging,Simple4KbBatchWrites,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\AbstractPager.cs,Write,The following statement contains a magic number: byte* destination = _abstractPager.AcquirePagePointer(null' pageNumber' _pagerState)                                  + (offsetBy4Kb * 4 * Constants.Size.Kilobyte);
Magic Number,Voron.Impl.Paging,RvnMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\RvnMemoryMapPager.cs,RvnMemoryMapPager,The following statement contains a magic number: initialFileSize = Math.Max(SysInfo.PageSize * 16' 64 * 1024);
Magic Number,Voron.Impl.Paging,RvnMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\RvnMemoryMapPager.cs,RvnMemoryMapPager,The following statement contains a magic number: initialFileSize = Math.Max(SysInfo.PageSize * 16' 64 * 1024);
Magic Number,Voron.Impl.Paging,RvnMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\RvnMemoryMapPager.cs,RvnMemoryMapPager,The following statement contains a magic number: initialFileSize = Math.Max(SysInfo.PageSize * 16' 64 * 1024);
Magic Number,Voron.Impl.Paging,Windows32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,CopyPage,The following statement contains a magic number: const int adjustPageSize = (Constants.Storage.PageSize) / (4 * Constants.Size.Kilobyte);
Magic Number,Voron.Impl.Paging,Windows32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,MapPages,The following statement contains a magic number: const int ERROR_NOT_ENOUGH_MEMORY = 8;
Magic Number,Voron.Impl.Paging,Windows32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,ThrowInvalidMappingRequested,The following statement contains a magic number: throw new InvalidOperationException(                  $"Was asked to map page {startPage} + {size / 1024:#'#0} kb' but the file size is only {_fileStreamLength}' can't do that.");
Magic Number,Voron.Impl.Paging,Windows32Bit4KbBatchWrites,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,Write,The following statement contains a magic number: const int pageSizeTo4KbRatio = (Constants.Storage.PageSize / (4 * Constants.Size.Kilobyte));
Magic Number,Voron.Impl.Paging,Windows32Bit4KbBatchWrites,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,Write,The following statement contains a magic number: var toWrite = numberOf4Kbs * 4 * Constants.Size.Kilobyte;
Magic Number,Voron.Impl.Paging,Windows32Bit4KbBatchWrites,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Paging\Windows32BitsMemoryMapPager.cs,Write,The following statement contains a magic number: byte* destination = page.Pointer +                                      (distanceFromStart * Constants.Storage.PageSize) +                                      offsetBy4Kb * (4 * Constants.Size.Kilobyte);
Magic Number,Voron.Impl.Scratch,ScratchBufferPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferPool.cs,Allocate,The following statement contains a magic number: var requestedSize = Math.Max(minSize' Math.Min(_current.File.Size * 2' _options.MaxScratchBufferSize));
Magic Number,Voron.Impl.Scratch,ScratchBufferPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferPool.cs,InfoForDebug,The following statement contains a magic number: var scratchBufferPoolInfo = new ScratchBufferPoolInfo              {                  OldestActiveTransaction = oldestActiveTransaction'                  NumberOfScratchFiles = _scratchBuffers.Count'                  CurrentFileNumber = currentFile.Number'                  CurrentFileSizeInMB = currentFile.Size / 1024L / 1024L'                  PerScratchFileSizeLimitInMB = _options.MaxScratchBufferSize / 1024L / 1024L              };
Magic Number,Voron.Impl.Scratch,ScratchBufferPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferPool.cs,InfoForDebug,The following statement contains a magic number: var scratchBufferPoolInfo = new ScratchBufferPoolInfo              {                  OldestActiveTransaction = oldestActiveTransaction'                  NumberOfScratchFiles = _scratchBuffers.Count'                  CurrentFileNumber = currentFile.Number'                  CurrentFileSizeInMB = currentFile.Size / 1024L / 1024L'                  PerScratchFileSizeLimitInMB = _options.MaxScratchBufferSize / 1024L / 1024L              };
Magic Number,Voron.Impl.Scratch,ScratchBufferPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferPool.cs,InfoForDebug,The following statement contains a magic number: var scratchBufferPoolInfo = new ScratchBufferPoolInfo              {                  OldestActiveTransaction = oldestActiveTransaction'                  NumberOfScratchFiles = _scratchBuffers.Count'                  CurrentFileNumber = currentFile.Number'                  CurrentFileSizeInMB = currentFile.Size / 1024L / 1024L'                  PerScratchFileSizeLimitInMB = _options.MaxScratchBufferSize / 1024L / 1024L              };
Magic Number,Voron.Impl.Scratch,ScratchBufferPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferPool.cs,InfoForDebug,The following statement contains a magic number: var scratchBufferPoolInfo = new ScratchBufferPoolInfo              {                  OldestActiveTransaction = oldestActiveTransaction'                  NumberOfScratchFiles = _scratchBuffers.Count'                  CurrentFileNumber = currentFile.Number'                  CurrentFileSizeInMB = currentFile.Size / 1024L / 1024L'                  PerScratchFileSizeLimitInMB = _options.MaxScratchBufferSize / 1024L / 1024L              };
Magic Number,Voron.Impl.Scratch,ScratchBufferPool,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Impl\Scratch\ScratchBufferPool.cs,InfoForDebug,The following statement contains a magic number: var scratchFileUsage = new ScratchFileUsage                  {                      Name = StorageEnvironmentOptions.ScratchBufferName(scratchBufferItem.File.Number)'                      SizeInKB = scratchBufferItem.File.Size / 1024'                      NumberOfAllocations = scratchBufferItem.File.NumberOfAllocations'                      AllocatedPagesCount = scratchBufferItem.File.AllocatedPagesCount'                      CanBeDeleted = scratchBufferItem != current && scratchBufferItem.File.HasActivelyUsedBytes(oldestActiveTransaction) == false'                      TxIdAfterWhichLatestFreePagesBecomeAvailable = scratchBufferItem.File.TxIdAfterWhichLatestFreePagesBecomeAvailable                  };
Magic Number,Voron.Platform.Posix,Posix32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\Posix32BitsMemoryMapPager.cs,CopyPage,The following statement contains a magic number: const int adjustPageSize = (Constants.Storage.PageSize) / (4 * Constants.Size.Kilobyte);
Magic Number,Voron.Platform.Posix,Posix32BitsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\Posix32BitsMemoryMapPager.cs,ThrowInvalidMappingRequested,The following statement contains a magic number: throw new InvalidOperationException(                  $"Was asked to map page {startPage} + {size / 1024:#'#0} kb' but the file size is only {_totalAllocationSize}' can't do that.");
Magic Number,Voron.Platform.Posix,Posix32Bit4KbBatchWrites,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\Posix32BitsMemoryMapPager.cs,Write,The following statement contains a magic number: const int pageSizeTo4KbRatio = (Constants.Storage.PageSize / (4 * Constants.Size.Kilobyte));
Magic Number,Voron.Platform.Posix,Posix32Bit4KbBatchWrites,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\Posix32BitsMemoryMapPager.cs,Write,The following statement contains a magic number: var toWrite = numberOf4Kbs * 4 * Constants.Size.Kilobyte;
Magic Number,Voron.Platform.Posix,Posix32Bit4KbBatchWrites,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\Posix32BitsMemoryMapPager.cs,Write,The following statement contains a magic number: byte* destination = page.Pointer +                                     (distanceFromStart * Constants.Storage.PageSize) +                                     offsetBy4Kb * (4 * Constants.Size.Kilobyte);
Magic Number,Voron.Platform.Posix,PosixTempMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Posix\PosixTempMemoryMapPager.cs,NearestSizeToPageSize,The following statement contains a magic number: return SysPageSize * 16;
Magic Number,Voron.Platform.Win32,WindowsMemoryMapPager,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Platform\Win32\WindowsMemoryMapPager.cs,GetPhysicalDriveId,The following statement contains a magic number: return (uint)((int)sdn.DeviceType << 8) + sdn.DeviceNumber;
Magic Number,Voron.Schema.Updates,From22,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Schema\Updates\From22.cs,Update,The following statement contains a magic number: headerAccessor.Modify(header =>              {                  Memory.Set(header->Journal.Reserved' 0' 3);                                    if (options.JournalExists(header->Journal.LastSyncedJournal))                      header->Journal.Flags = JournalInfoFlags.None;                  else                      header->Journal.Flags = JournalInfoFlags.IgnoreMissingLastSyncJournal;              });
Magic Number,Voron.Schema.Updates,From22,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Schema\Updates\From22.cs,Update,The following statement contains a magic number: versionAfterUpgrade = 23;
Magic Number,Voron.Util,RacyConcurrentBag,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\ActiveTransactions.cs,Remove,The following statement contains a magic number: result > 0 ||                  copy.Length < _growthFactor * 4
Magic Number,Voron.Util,DataCopier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\DataCopier.cs,ToStream,The following statement contains a magic number: fixed (byte* pBuffer = _buffer)              {                  for (var i = startPage; i < startPage + numberOfPages; i += steps)                  {                      cancellationToken.ThrowIfCancellationRequested();                        var pagesToCopy = (int) (i + steps > numberOfPages ? numberOfPages - i : steps);                      src.EnsureMapped(tempTx' i' pagesToCopy);                      var ptr = src.AcquireRawPagePointer(tempTx' i);                      var copiedInBytes = pagesToCopy * Constants.Storage.PageSize;                      Memory.Copy(pBuffer' ptr' copiedInBytes);                      output.Write(_buffer' 0' copiedInBytes);                        totalCopied += copiedInBytes;                        if (sw.ElapsedMilliseconds > 500)                      {                          infoNotify($"Copied: {new Size(totalCopied' SizeUnit.Bytes)} / {toBeCopied}");                          sw.Restart();                      }                    }              }
Magic Number,Voron.Util,DataCopier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\DataCopier.cs,ToStream,The following statement contains a magic number: var totalSecElapsed = Math.Max((double)totalSw.ElapsedMilliseconds / 1000' 0.0001);
Magic Number,Voron.Util,DataCopier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\DataCopier.cs,ToStream,The following statement contains a magic number: var totalSecElapsed = Math.Max((double)totalSw.ElapsedMilliseconds / 1000' 0.0001);
Magic Number,Voron.Util,DataCopier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\DataCopier.cs,ToStream,The following statement contains a magic number: const int pageSize = 4 * Constants.Size.Kilobyte;
Magic Number,Voron.Util,DataCopier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\DataCopier.cs,ToStream,The following statement contains a magic number: var bytesCount = (int)(pageCount * (4 * Constants.Size.Kilobyte));
Magic Number,Voron.Util,DataCopier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\DataCopier.cs,ToStream,The following statement contains a magic number: sw.ElapsedMilliseconds > 500
Magic Number,Voron.Util,DataCopier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\DataCopier.cs,ToStream,The following statement contains a magic number: var totalSecElapsed = Math.Max((double)totalSw.ElapsedMilliseconds / 1000' 0.0001);
Magic Number,Voron.Util,DataCopier,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\DataCopier.cs,ToStream,The following statement contains a magic number: var totalSecElapsed = Math.Max((double)totalSw.ElapsedMilliseconds / 1000' 0.0001);
Magic Number,Voron.Util,ImmutableAppendOnlyList<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\ImmutableAppendOnlyList.cs,Append,The following statement contains a magic number: var newArray = GrowTo(Math.Max(8' Bits.PowerOf2(newCount)));
Magic Number,Voron.Util,ImmutableAppendOnlyList<T>,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\ImmutableAppendOnlyList.cs,AppendRange,The following statement contains a magic number: var newArray = GrowTo(_count + nToAdd * 2);
Magic Number,Voron.Util,PageTable,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\PageTable.cs,SetItems,The following statement contains a magic number: value = new PagesBuffer(new PagePosition[2]' null);
Magic Number,Voron.Util,PageTable,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\PageTable.cs,SetItems,The following statement contains a magic number: var newVal = new PagesBuffer(new PagePosition[value.Capacity*2]' value);
Magic Number,Voron.Util,PtrSize,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\PtrSize.cs,PtrSize,The following statement contains a magic number: Debug.Assert(size <= 8);
Magic Number,Voron.Util,ThreadHoppingReaderWriterLock,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\ThreadHoppingReaderWriterLock.cs,TryEnterReadLockCore,The following statement contains a magic number: waiters > ReaderMask / 2
Magic Number,Voron.Util.Conversion,BigEndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\BigEndianBitConverter.cs,CopyBytesImpl,The following statement contains a magic number: value = value >> 8;
Magic Number,Voron.Util.Conversion,BigEndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\BigEndianBitConverter.cs,FromBytes,The following statement contains a magic number: ret = unchecked((ret << 8) | value[startIndex+i]);
Magic Number,Voron.Util.Conversion,BigEndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\BigEndianBitConverter.cs,FromBytes,The following statement contains a magic number: ret = (ret << 8) | value[i];
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,ToChar,The following statement contains a magic number: return unchecked((char) (CheckedFromBytes(value' startIndex' 2)));
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,ToInt16,The following statement contains a magic number: return unchecked((short) (CheckedFromBytes(value' startIndex' 2)));
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,ToInt32,The following statement contains a magic number: return unchecked((int) (CheckedFromBytes(value' startIndex' 4)));
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,ToInt64,The following statement contains a magic number: return CheckedFromBytes(value' startIndex' 8);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,ToInt64,The following statement contains a magic number: return FromBytes(value'  8);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,ToUInt16,The following statement contains a magic number: return unchecked((ushort) (CheckedFromBytes(value' startIndex' 2)));
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,ToUInt32,The following statement contains a magic number: return unchecked((uint) (CheckedFromBytes(value' startIndex' 4)));
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,ToUInt64,The following statement contains a magic number: return unchecked((ulong) (CheckedFromBytes(value' startIndex' 8)));
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,ToDecimal,The following statement contains a magic number: int[] parts = new int[4];
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,ToDecimal,The following statement contains a magic number: parts[i] = ToInt32(value' startIndex+i*4);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,ToDecimal,The following statement contains a magic number: i < 4
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,GetBytes,The following statement contains a magic number: byte[] bytes = new byte[16];
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,GetBytes,The following statement contains a magic number: CopyBytesImpl(parts[i]' 4' bytes' i*4);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,GetBytes,The following statement contains a magic number: CopyBytesImpl(parts[i]' 4' bytes' i*4);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,GetBytes,The following statement contains a magic number: i < 4
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,CopyBytes,The following statement contains a magic number: CopyBytesImpl(parts[i]' 4' buffer' i*4+index);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,CopyBytes,The following statement contains a magic number: CopyBytesImpl(parts[i]' 4' buffer' i*4+index);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,CopyBytes,The following statement contains a magic number: i < 4
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,GetBytes,The following statement contains a magic number: return GetBytes(value' 2);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,GetBytes,The following statement contains a magic number: return GetBytes(DoubleToInt64Bits(value)' 8);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,GetBytes,The following statement contains a magic number: return GetBytes(value' 2);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,GetBytes,The following statement contains a magic number: return GetBytes(value' 4);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,GetBytes,The following statement contains a magic number: return GetBytes(value' 8);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,GetBytes,The following statement contains a magic number: return GetBytes(SingleToInt32Bits(value)' 4);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,GetBytes,The following statement contains a magic number: return GetBytes(value' 2);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,GetBytes,The following statement contains a magic number: return GetBytes(value' 4);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,GetBytes,The following statement contains a magic number: return GetBytes(unchecked((long)value)' 8);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,CopyBytes,The following statement contains a magic number: CopyBytes(value' 2' buffer' index);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,CopyBytes,The following statement contains a magic number: CopyBytes(DoubleToInt64Bits(value)' 8' buffer' index);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,CopyBytes,The following statement contains a magic number: CopyBytes(value' 2' buffer' index);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,CopyBytes,The following statement contains a magic number: CopyBytes(value' 4' buffer' index);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,CopyBytes,The following statement contains a magic number: CopyBytes(value' 8' buffer' index);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,CopyBytes,The following statement contains a magic number: CopyBytes(SingleToInt32Bits(value)' 4' buffer' index);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,CopyBytes,The following statement contains a magic number: CopyBytes(value' 2' buffer' index);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,CopyBytes,The following statement contains a magic number: CopyBytes(value' 4' buffer' index);
Magic Number,Voron.Util.Conversion,EndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\EndianBitConverter.cs,CopyBytes,The following statement contains a magic number: CopyBytes(unchecked((long)value)' 8' buffer' index);
Magic Number,Voron.Util.Conversion,LittleEndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\LittleEndianBitConverter.cs,CopyBytesImpl,The following statement contains a magic number: value = value >> 8;
Magic Number,Voron.Util.Conversion,LittleEndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\LittleEndianBitConverter.cs,FromBytes,The following statement contains a magic number: ret = unchecked((ret << 8) | value[startIndex+bytesToConvert-1-i]);
Magic Number,Voron.Util.Conversion,LittleEndianBitConverter,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Conversion\LittleEndianBitConverter.cs,FromBytes,The following statement contains a magic number: ret = unchecked((ret << 8) | value[bytesToConvert - 1 - i]);
Magic Number,Voron.Util.Settings,PathUtil,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Util\Settings\PathSettingBase.cs,ToFullPath,The following statement contains a magic number: result.Length >= 260 &&                   RuntimeInformation.IsOSPlatform(OSPlatform.Windows) &&                  result.StartsWith(@"\\?\") == false
Missing Default,Voron.Data,VoronStream,C:\research\architectureSmells\repos\ravendb_ravendb\src\Voron\Data\VoronStream.cs,Seek,The following switch statement is missing a default case: switch (origin)              {                  case SeekOrigin.Begin:                      Position = offset;                      break;                    case SeekOrigin.Current:                      Position += offset;                      break;                    case SeekOrigin.End:                      Position = Length + offset;                      break;              }
