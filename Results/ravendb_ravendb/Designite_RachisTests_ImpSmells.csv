Implementation smell,Namespace,Class,File,Method,Description
Long Method,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The method has 123 lines of code.
Long Method,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The method has 125 lines of code.
Long Method,RachisTests.DatabaseCluster,EtlFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\EtlFailover.cs,WillWorkAfterResponsibleNodeRestart_RavenDB_13237,The method has 115 lines of code.
Long Method,RachisTests.DatabaseCluster,OngoingTasks,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\OngoingTasks.cs,CanGetTaskInfo,The method has 149 lines of code.
Long Method,RachisTests.DatabaseCluster,OngoingTasks,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\OngoingTasks.cs,CanGetTaskInfoByName,The method has 141 lines of code.
Long Method,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,CanAddAndModifySingleWatcher,The method has 128 lines of code.
Complex Method,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,HandleSubscriptionBatch,Cyclomatic complexity of the method is 10
Long Parameter List,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,HandleSubscriptionBatch,The method has 7 parameters. Parameters: nodesAmount' b' uniqueDocs' docsCount' uniqueRevisions' reachedMaxDocCountMre' revisionsCount
Long Parameter List,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,CreateAndInitiateSubscription,The method has 6 parameters. Parameters: store' defaultDatabase' usersCount' reachedMaxDocCountMre' batchSize' mentor
Long Identifier,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,SubscriptionsShouldFailoverCorrectrlyAndAllowThemselvesToBeTerminated,The length of the parameter shouldTrapRevivedNodesIntoCandidate is 35.
Long Identifier,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,ToggleClusterNodeOnAndOffAndWaitForRehab,The length of the parameter shouldTrapRevivedNodesIntoCandidate is 35.
Long Identifier,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,ToggleServer,The length of the parameter shouldTrapRevivedNodesIntoCandidate is 35.
Long Identifier,RachisTests,TestParams,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,TestParams,The length of the parameter shouldTrapRevivedNodesIntoCandidate is 35.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,DisallowAddingNodeWithInvalidSourcePublicServerUrl,The length of the statement  "            using (var requestExecutor = ClusterRequestExecutor.CreateForSingleNode(source' raft1.ServerStore.Server.Certificate.Certificate)) " is 130.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,DisallowAddingNodeWithInvalidSourcePublicTcpServerUrl,The length of the statement  "            using (var requestExecutor = ClusterRequestExecutor.CreateForSingleNode(source' raft1.ServerStore.Server.Certificate.Certificate)) " is 130.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,DisallowAddingNodeWithInvalidDestinationPublicServerUrl,The length of the statement  "            // here we pusblish a wrong PublicServerUrl' but connect to the ServerUrl' so the HTTP connection should be okay' but will when trying to the TCP connection. " is 157.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,DisallowAddingNodeWithInvalidDestinationPublicServerUrl,The length of the statement  "            using (var requestExecutor = ClusterRequestExecutor.CreateForSingleNode(source' raft1.ServerStore.Server.Certificate.Certificate)) " is 130.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,DisallowAddingNodeWithInvalidDestinationPublicTcpServerUrl,The length of the statement  "            using (var requestExecutor = ClusterRequestExecutor.CreateForSingleNode(source' raft1.ServerStore.Server.Certificate.Certificate)) " is 130.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,AddDatabaseOnDisconnectedNode,The length of the statement  "                var hasDisconnected = await WaitForValueAsync(() => leader.ServerStore.GetNodesStatuses().Count(n => n.Value.Connected == false)' 1) == 1; " is 138.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The length of the statement  "                    Assert.True(await responsibleServer.ServerStore.WaitForState(RachisState.Passive' CancellationToken.None).WaitAsync(fromSeconds)); " is 130.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The length of the statement  "                var newLeader = await ActionWithLeader(l => l.ServerStore.AddNodeToClusterAsync(responsibleServer.WebUrl' watcherRes.ResponsibleNode)); " is 135.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The length of the statement  "                Assert.True(await responsibleServer.ServerStore.WaitForState(RachisState.Follower' CancellationToken.None).WaitAsync(fromSeconds)); " is 131.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The length of the statement  "                Assert.True(WaitForDocument<User>(watcherStore' "users/4"' u => u.Name == "Karmel4"' 30_000)' $"The watcher doesn't have the document"); " is 136.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,WhoseTaskIsItShouldNotSelectRemovedNode,The length of the statement  "            var result = await cluster.Leader.ServerStore.SendToLeaderAsync(new DeleteDatabaseCommand(db' Guid.NewGuid().ToString()) " is 120.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,WhoseTaskIsItShouldNotSelectRemovedNode,The length of the statement  "                        .WhoseTaskIsIt(x.ServerStore.Engine.CurrentState' new PromotableTask(x.ServerStore.NodeTag' x.WebUrl' db' firstFollowerTag)' null) == firstFollowerTag); " is 152.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,WhoseTaskIsItShouldNotSelectRemovedNode,The length of the statement  "                Assert.True(false'$"removed node was selected :/ Leader: {cluster.Leader.ServerStore.NodeTag}' first: {firstFollowerTag}' second {res.ServerStore.NodeTag}"); " is 157.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,FailOnAddingNodeThatHasPortZero,The length of the statement  "                                "Adding a node with non fixed port is forbidden. Define a fixed port for the node to enable cluster creation."' ex.Message); " is 124.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,ResetServerShouldPreserveTopology,The length of the statement  "                while (cluster.Leader.ServerStore.Engine.CurrentLeader.TryModifyTopology(follower.ServerStore.NodeTag' follower.ServerStore.Engine.Url' Leader.TopologyModification.NonVoter' out var task) == false) " is 197.
Long Statement,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,ResetServerShouldPreserveTopology,The length of the statement  "            cluster.Leader = GetNewServer(new ServerCreationOptions {DeletePrevious = false' RunInMemory = false' PartialPath = result.DataDir' CustomSettings = new Dictionary<string' string> " is 179.
Long Statement,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithFiveNodesAndMultipleElections,The length of the statement  "            var leaderSelected = followers.Select(x => x.WaitForState(RachisState.Leader' CancellationToken.None).ContinueWith(_ => x)).ToArray(); " is 134.
Long Statement,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithFiveNodesAndMultipleElections,The length of the statement  "            leaderSelected = followers.Select(x => x.WaitForState(RachisState.Leader' CancellationToken.None).ContinueWith(_ => x)).ToArray(); " is 130.
Long Statement,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithLateJoiningNodeRequiringSnapshot,The length of the statement  "            Assert.True(await b.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' lastIndex).WaitAsync(15000)); " is 130.
Long Statement,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithTwoNodes,The length of the statement  "            var waitForCommitIndexChange = b.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' lastIndex); " is 125.
Long Statement,RachisTests,Cluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\Cluster.cs,CanCreateAddAndDeleteDatabaseFromNodes,The length of the statement  "                await AssertNumberOfNodesContainingDatabase(databaseResult.RaftCommandIndex' databaseName' numberOfInstances' replicationFactor); " is 129.
Long Statement,RachisTests,Cluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\Cluster.cs,CanCreateAddAndDeleteDatabaseFromNodes,The length of the statement  "                await AssertNumberOfNodesContainingDatabase(databaseResult.RaftCommandIndex' databaseName' numberOfInstances' replicationFactor); " is 129.
Long Statement,RachisTests,Cluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\Cluster.cs,CanCreateAddAndDeleteDatabaseFromNodes,The length of the statement  "                    var deleteResult = store.Maintenance.Server.Send(new DeleteDatabasesOperation(databaseName' hardDelete: true' fromNode: serverTagToBeDeleted' timeToWaitForConfirmation: TimeSpan.FromSeconds(30))); " is 196.
Long Statement,RachisTests,Cluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\Cluster.cs,CanCreateAddAndDeleteDatabaseFromNodes,The length of the statement  "                    await AssertNumberOfNodesContainingDatabase(deleteResult.RaftCommandIndex' databaseName' numberOfInstances' replicationFactor); " is 127.
Long Statement,RachisTests,Cluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\Cluster.cs,AssertNumberOfNodesContainingDatabase,The length of the statement  "            Assert.True(numberOfInstances == replicationFactor' $"Expected replicationFactor={replicationFactor} but got {numberOfInstances}"); " is 131.
Long Statement,RachisTests,CommandsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\CommandsTests.cs,When_command_committed_CompletionTaskSource_is_notified,The length of the statement  "            var waitForAllCommits = nonLeader.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' lastIndex); " is 126.
Long Statement,RachisTests,CommandsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\CommandsTests.cs,When_command_committed_CompletionTaskSource_is_notified,The length of the statement  "            Assert.True(await Task.WhenAny(waitForAllCommits' Task.Delay(LongWaitTime)) == waitForAllCommits' "didn't commit in time"); " is 123.
Long Statement,RachisTests,CommandsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\CommandsTests.cs,When_command_committed_CompletionTaskSource_is_notified,The length of the statement  "            Assert.True(await Task.WhenAny(waitForNotificationsOnTasks' Task.Delay(LongWaitTime)) == waitForNotificationsOnTasks' "Some commands didn't complete"); " is 151.
Long Statement,RachisTests,CommandsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\CommandsTests.cs,Command_not_committed_after_timeout_CompletionTaskSource_is_notified,The length of the statement  "            var waitForAllCommits = nonLeader.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' lastIndex); " is 126.
Long Statement,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,Follower_as_a_single_node_becomes_leader_automatically,The length of the statement  "            Assert.True(condition' $"Node is in state {node.CurrentState} and didn't become leader although he is alone in his cluster."); " is 126.
Long Statement,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,CanElectOnDivergence,The length of the statement  "                firstLeader.InsertToLeaderLog(ctx' currentTerm' ctx.ReadObject(cmd.ToJson(ctx)' "bar")' RachisEntryFlags.StateMachineCommand); " is 126.
Long Statement,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,CanElectOnDivergence,The length of the statement  "                    Assert.True(currentTerm + 1 < maxTerm' $"Followers didn't become leaders although old leader can't communicate with the cluster in term {currentTerm} (max term: {maxTerm})"); " is 174.
Long Statement,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,CanElectOnDivergence,The length of the statement  "                var waitForCommitIndexChange = firstLeader.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' newLeaderLastIndex); " is 144.
Long Statement,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,CanElectOnDivergence,The length of the statement  "                $"Old leader is in {firstLeader.CurrentState} state and didn't rollback his log to the new leader log (last index: {GetLastCommittedIndex(firstLeader)}' expected: {newLeaderLastIndex})"); " is 187.
Long Statement,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,ForceStepDownAndElectNewLeader,The length of the statement  "            Assert.True(await firstLeader.WaitForState(RachisState.Follower' CancellationToken.None).WaitAsync(TimeSpan.FromSeconds(3))' "Old leader hasn't stepped down."); " is 160.
Long Statement,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,OnNetworkDisconnectionANewLeaderIsElectedAfterReconnectOldLeaderStepsDownAndRollBackHisLog,The length of the statement  "                    Assert.True(currentTerm + 1 < maxTerm' $"Followers didn't become leaders although old leader can't communicate with the cluster in term {currentTerm} (max term: {maxTerm})"); " is 174.
Long Statement,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,OnNetworkDisconnectionANewLeaderIsElectedAfterReconnectOldLeaderStepsDownAndRollBackHisLog,The length of the statement  "                var waitForCommitIndexChange = firstLeader.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' newLeaderLastIndex); " is 144.
Long Statement,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,OnNetworkDisconnectionANewLeaderIsElectedAfterReconnectOldLeaderStepsDownAndRollBackHisLog,The length of the statement  "                $"Old leader is in {firstLeader.CurrentState} state and didn't rollback his log to the new leader log (last index: {GetLastCommittedIndex(firstLeader)}' expected: {newLeaderLastIndex})"); " is 187.
Long Statement,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,RavenDB_13228,The length of the statement  "            Assert.True(await firstLeader.WaitForState(RachisState.Candidate' CancellationToken.None).WaitAsync(timeToWait)'$"{firstLeader.CurrentState}"); " is 143.
Long Statement,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,RavenDB_13228,The length of the statement  "                $"leader: {firstLeader.CurrentState} in term {firstLeader.CurrentTerm} with last index {GetLastCommittedIndex(firstLeader)}{Environment.NewLine}' " + " is 149.
Long Statement,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,RavenDB_13228,The length of the statement  "                $"follower: state {follower.CurrentState} in term {follower.CurrentTerm} with last index {GetLastCommittedIndex(follower)}"); " is 125.
Long Statement,RachisTests,EmergencyOperations,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\EmergencyOperations.cs,LeaderCanCecedeFromClusterAndNewLeaderWillBeElected,The length of the statement  "                leaderSelectedTasks.Add(server.ServerStore.WaitForState(RachisState.Leader' CancellationToken.None).ContinueWith(_=>server)); " is 125.
Long Statement,RachisTests,EmergencyOperations,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\EmergencyOperations.cs,LeaderCanCecedeFromClusterAndNewLeaderWillBeElected,The length of the statement  "            Assert.True(await Task.WhenAny(leaderSelectedTasks).WaitAsync(TimeSpan.FromSeconds(10))'"New leader was not elected after old leader left the cluster.");             " is 153.
Long Statement,RachisTests,EmergencyOperations,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\EmergencyOperations.cs,FollowerCanCecedeFromCluster,The length of the statement  "            new AdminJsConsole(follower' null).ApplyScript(new AdminJsScript(@"server.ServerStore.Engine.HardResetToNewCluster('A');")); " is 124.
Long Statement,RachisTests,RavenDB_6602,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\RavenDB-6602.cs,RequestExecutor_failover_to_database_topology_should_work,The length of the statement  "                    srv => srv.ServerStore.NodeTag.Equals(requestExecutor.TopologyNodes[0].ClusterTag' StringComparison.OrdinalIgnoreCase)); " is 120.
Long Statement,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,SkippedSubscriptionsShouldFailoverAndReturnToOriginalNodes,The length of the statement  "            await SubscriptionsShouldFailoverCorrectrlyAndAllowThemselvesToBeTerminated(subscriptionsChainSize' clusterSize' dBGroupSize' shouldMaintainElectionTimeout); " is 157.
Long Statement,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,MakeSureAllNodesAreRoundRobined,The length of the statement  "                var subsWorker = store.Subscriptions.GetSubscriptionWorker<User>(new Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions(subsId) " is 139.
Long Statement,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,GenerateSubscriptionThatSignalsToCDEUponCompletion,The length of the statement  "            return store.Subscriptions.GetSubscriptionWorker(new Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions(subsId) " is 123.
Long Statement,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,GenerateSubscriptionThatSignalsToCDEUponCompletion,The length of the statement  "                            if (res.Exception != null && res.Exception is AggregateException agg && agg.InnerException is SubscriptionClosedException sce && sce.Message.Contains("Dropped by Test")) " is 169.
Long Statement,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,ToggleServer,The length of the statement  "                // if we want to make sure that the revived node will be trapped in candidate node' we should make sure that the election timeout value is different from the  " is 157.
Long Statement,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,ToggleServer,The length of the statement  "                // rest of the node (note that this is a configuration value' therefore we need to define it in "settings" and nowhere else) " is 124.
Long Statement,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,ToggleServer,The length of the statement  "                    settings[RavenConfiguration.GetKey(x => x.Cluster.ElectionTimeout)] = node.Configuration.Cluster.ElectionTimeout.AsTimeSpan.TotalMilliseconds.ToString(); " is 153.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,ContinueFromThePointIStopped,The length of the statement  "                (var subscription' var subsTask) = await CreateAndInitiateSubscription(store' defaultDatabase' usersCount' reachedMaxDocCountMre' batchSize); " is 141.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,ContinueFromThePointIStopped,The length of the statement  "                Assert.True(await Task.WhenAny(subsTask' reachedMaxDocCountMre.WaitAsync()).WaitAsync(_reasonableWaitTime)' $"Reached {usersCount.Count}/10"); " is 142.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,ContinueFromThePointIStopped,The length of the statement  "                Assert.True(await Task.WhenAny(subsTask' reachedMaxDocCountMre.WaitAsync()).WaitAsync(_reasonableWaitTime)' $"Reached {usersCount.Count}/10"); " is 142.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,ContinueFromThePointIStopped,The length of the statement  "                Assert.True(await Task.WhenAny(subsTask' reachedMaxDocCountMre.WaitAsync()).WaitAsync(_reasonableWaitTime)' $"Reached {usersCount.Count}/10"); " is 142.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscripitonDeletionFromCluster,The length of the statement  "                        Assert.NotNull(ravenServer.ServerStore.Cluster.Read(context' SubscriptionState.GenerateSubscriptionItemKeyName(defaultDatabase' subscriptionId.ToString()))); " is 157.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscripitonDeletionFromCluster,The length of the statement  "                    await ravenServer.ServerStore.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' deleteResult.RaftCommandIndex + nodesAmount).WaitWithTimeout(TimeSpan.FromSeconds(60)); " is 198.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscripitonDeletionFromCluster,The length of the statement  "                        Assert.Null(ravenServer.ServerStore.Cluster.Read(context' SubscriptionState.GenerateSubscriptionItemKeyName(defaultDatabase' subscriptionId.ToString()))); " is 154.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SetMentorToSubscriptionWithFailover,The length of the statement  "                (var subscription' var subsTask) = await CreateAndInitiateSubscription(store' defaultDatabase' usersCount' reachedMaxDocCountMre' 20' mentor: mentor); " is 150.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,DistributedRevisionsSubscription,The length of the statement  "                        HandleSubscriptionBatch(nodesAmount' b' uniqueDocs' ref docsCount' uniqueRevisions' reachedMaxDocCountMre' ref revisionsCount); " is 127.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,DistributedRevisionsSubscription,The length of the statement  "                Assert.True(await ackSent.WaitAsync(_reasonableWaitTime).ConfigureAwait(false)' $"Doc count is {docsCount} with revisions {revisionsCount}/{expectedRevisionsCount} (1st assert)"); " is 179.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,DistributedRevisionsSubscription,The length of the statement  "                Assert.True(await ackSent.WaitAsync(_reasonableWaitTime).ConfigureAwait(false)' $"Doc count is {docsCount} with revisions {revisionsCount}/{expectedRevisionsCount} (2nd assert)"); " is 179.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,DistributedRevisionsSubscription,The length of the statement  "                Assert.True(await reachedMaxDocCountMre.WaitAsync(_reasonableWaitTime).ConfigureAwait(false)' $"Doc count is {docsCount} with revisions {revisionsCount}/{expectedRevisionsCount} (3rd assert)"); " is 193.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SetupRevisions,The length of the statement  "                    await documentDatabase.RachisLogIndexNotifications.WaitForIndexNotification(res.Item1' s.ServerStore.Engine.OperationTimeout); " is 126.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,GenerateDistributedRevisionsData,The length of the statement  "                                AsyncHelpers.RunSync(() => WaitForDocumentInClusterAsync<User>(nodes' "users/" + index' x => x.Name == curDocName' _reasonableWaitTime)) " is 136.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,KillServerWhereSubscriptionWorks,The length of the statement  "                        var db = await someServer.ServerStore.DatabasesLandlord.TryGetOrCreateResourceStore(defaultDatabase).ConfigureAwait(false); " is 123.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldFailIfLeaderIsDownAndItIsOnlyOpening,The length of the statement  "                using (var subscription = store.Subscriptions.GetSubscriptionWorker<User>(new SubscriptionWorkerOptions(subscriptionName) " is 121.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldFailIfLeaderIsDownAndItIsOnlyOpening,The length of the statement  "                    Assert.True(await ThrowsAsync<SubscriptionInvalidStateException>(task).WaitWithTimeout(TimeSpan.FromSeconds(60)).ConfigureAwait(false)); " is 136.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldFailIfLeaderIsDownBeforeAck,The length of the statement  "                using (var subscription = store.Subscriptions.GetSubscriptionWorker<User>(new SubscriptionWorkerOptions(subscriptionName) " is 121.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldFailIfLeaderIsDownBeforeAck,The length of the statement  "                    Assert.True(await ThrowsAsync<SubscriptionInvalidStateException>(task).WaitWithTimeout(TimeSpan.FromSeconds(120)).ConfigureAwait(false)); " is 137.
Long Statement,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldNotFailIfLeaderIsDownButItStillHasEnoughTimeToRetry,The length of the statement  "                using (var subscription = store.Subscriptions.GetSubscriptionWorker<User>(new SubscriptionWorkerOptions(subscriptionName) " is 121.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,CanEnforceTopologyOnOldLeader,The length of the statement  "            Assert.True(await leader.WaitForTopology(Leader.TopologyModification.Remove' newServer.Url).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 6))); // was 'TotalMilliseconds * 3'' changed to *6 for low end machines RavenDB-7263 " is 256.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,New_node_can_be_added_even_if_it_is_down,The length of the statement  "            Assert.True(await leader.AddToClusterAsync("http://rachis.example.com:1337").WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))' "non existing node should be able to join the cluster"); " is 217.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,New_node_can_be_added_even_if_it_is_down,The length of the statement  "            Assert.True(await Task.WhenAll(waitingList).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))' "Cluster was non informed about new node within two election periods"); " is 199.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_additional_node_that_goes_offline_and_then_online_should_still_work,The length of the statement  "            Assert.True(await leader.AddToClusterAsync(node4.Url).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))' "non existing node should be able to join the cluster"); " is 194.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_additional_node_that_goes_offline_and_then_online_should_still_work,The length of the statement  "            Assert.True(await leader.AddToClusterAsync(node5.Url).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))' "non existing node should be able to join the cluster"); " is 194.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_additional_node_that_goes_offline_and_then_online_should_still_work,The length of the statement  "            Assert.True(await t.WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))' "Commands were not committed in time although there is a majority of active nodes in the cluster"); " is 203.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_additional_node_that_goes_offline_and_then_online_should_still_work,The length of the statement  "            Assert.True(await node4.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' t.Result).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))' " is 198.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_additional_node_that_goes_offline_and_then_online_should_still_work,The length of the statement  "            Assert.True(await node5.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' t.Result).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))' " is 198.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_already_existing_node_should_throw,The length of the statement  "            Assert.True(await leader.AddToClusterAsync("http://not-a-real-url.com").WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))' " is 155.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Non_leader_Node_removed_from_cluster_should_update_peers_list,The length of the statement  "            Assert.True(await leader.RemoveFromClusterAsync(follower.Tag).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 10))' "Was unable to remove node from cluster in time"); " is 197.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Non_leader_Node_removed_from_cluster_should_update_peers_list,The length of the statement  "                Assert.True(await node.WaitForTopology(Leader.TopologyModification.Remove' follower.Tag).WaitAsync(TimeSpan.FromMilliseconds(node.ElectionTimeout.TotalMilliseconds * 1000))' "Node was not removed from topology in time"); " is 220.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,AddingRemovedNodeShouldWork,The length of the statement  "            Assert.True(await leader.RemoveFromClusterAsync(oldTag).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 10))' "Was unable to remove node from cluster in time"); " is 191.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,AddingRemovedNodeShouldWork,The length of the statement  "                Assert.True(await node.WaitForTopology(Leader.TopologyModification.Remove' follower.Tag).WaitAsync(TimeSpan.FromMilliseconds(node.ElectionTimeout.TotalMilliseconds * 10))' "Node was not removed from topology in time"); " is 218.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,AddingRemovedNodeShouldWork,The length of the statement  "            var isAddedSuccessfully = await leader.AddToClusterAsync(follower.Url' follower.Tag).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 5)); " is 168.
Long Statement,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,AddingRemovedNodeShouldWork,The length of the statement  "            var waitForTopologySuccessful = await follower.WaitForTopology(Leader.TopologyModification.Voter).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 5)); " is 181.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,CreateDatabaseOn00000Node,The length of the statement  "                    [RavenConfiguration.GetKey(x => x.Security.UnsecuredAccessAllowed)] = UnsecuredAccessAddressRange.PublicNetwork.ToString() " is 122.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,PromoteOnCatchingUp,The length of the statement  "                await WaitForDocumentInClusterAsync<User>(res.Topology' databaseName' "users/1"' u => u.Name == "Karmel"' TimeSpan.FromSeconds(10)); " is 132.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,MoveToPassiveWhenRefusedConnectionFromAllNodes,The length of the statement  "            var leader = await CreateRaftClusterAndGetLeader(clusterSize' false' 0' customSettings: new Dictionary<string' string>() " is 120.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,MoveToPassiveWhenRefusedConnectionFromAllNodes,The length of the statement  "                Assert.True(await Servers[1].ServerStore.WaitForState(RachisState.Passive' CancellationToken.None).WaitAsync(TimeSpan.FromSeconds(30))' "1st assert"); " is 150.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,MoveToPassiveWhenRefusedConnectionFromAllNodes,The length of the statement  "                Assert.True(await Servers[1].ServerStore.WaitForState(RachisState.Follower' CancellationToken.None).WaitAsync(TimeSpan.FromSeconds(30))' "2nd assert"); " is 151.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseIfNodeFails,The length of the statement  "                Assert.True(await WaitForDocumentInClusterAsync<User>(doc.Topology' databaseName' "users/1"' u => u.Name == "Karmel"' TimeSpan.FromSeconds(5))); " is 144.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseIfNodeFails,The length of the statement  "                Assert.True(await WaitForDocumentInClusterAsync<User>(newTopology' databaseName' "users/1"' u => u.Name == "Karmel"' TimeSpan.FromSeconds(60))); " is 144.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseOnMultiFailure,The length of the statement  "                Assert.True(await WaitForDocumentInClusterAsync<User>(doc.Topology' databaseName' "users/1"' u => u.Name == "Karmel"' TimeSpan.FromSeconds(5))); " is 144.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseOnMultiFailure,The length of the statement  "                Assert.True(await WaitForDocumentInClusterAsync<User>(newTopology' databaseName' "users/1"' u => u.Name == "Karmel"' TimeSpan.FromSeconds(60))); " is 144.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RemoveNodeFromClusterWhileDeletion,The length of the statement  "                var dbToplogy = (await leaderStore.Maintenance.Server.SendAsync(new GetDatabaseRecordOperation(databaseName))).Topology; " is 120.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RemoveNodeFromClusterWhileDeletion,The length of the statement  "                await leader.ServerStore.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' res.RaftCommandIndex + 1); " is 132.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The length of the statement  "                var dbToplogy = (await leaderStore.Maintenance.Server.SendAsync(new GetDatabaseRecordOperation(databaseName))).Topology; " is 120.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The length of the statement  "                Assert.True(await WaitForDocumentInClusterAsync<User>(topology' databaseName' "users/1"' null' TimeSpan.FromSeconds(30))); " is 122.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The length of the statement  "                Assert.True(await WaitForDocumentInClusterAsync<User>(dbToplogy' databaseName' "users/3"' null' TimeSpan.FromSeconds(10))); " is 123.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The length of the statement  "                Assert.True(await WaitForDocumentInClusterAsync<User>(dbToplogy' databaseName' "users/1"' null' TimeSpan.FromSeconds(10))); " is 123.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The length of the statement  "                Assert.True(await WaitForDocumentInClusterAsync<User>(dbToplogy' databaseName' "users/3"' null' TimeSpan.FromSeconds(10))); " is 123.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The length of the statement  "                Assert.True(await WaitForDocumentInClusterAsync<User>(dbToplogy' databaseName' "users/2"' null' TimeSpan.FromSeconds(30))); " is 123.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,Promote_immedtialty_should_work,The length of the statement  "                var dbToplogy = (await leaderStore.Maintenance.Server.SendAsync(new GetDatabaseRecordOperation(databaseName))).Topology; " is 120.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ChangeUrlOfSingleNodeCluster,The length of the statement  "                var dbToplogy = (await leaderStore.Maintenance.Server.SendAsync(new GetDatabaseRecordOperation(databaseName))).Topology; " is 120.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ChangeUrlOfSingleNodeCluster,The length of the statement  "            var adminCert = RegisterClientCertificate(certificates' new Dictionary<string' DatabaseAccess>()' SecurityClearance.ClusterAdmin' server: leader); " is 146.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ChangeUrlOfSingleNodeCluster,The length of the statement  "                var dbToplogy = (await leaderStore.Maintenance.Server.SendAsync(new GetDatabaseRecordOperation(databaseName))).Topology; " is 120.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ChangeUrlOfMultiNodeCluster,The length of the statement  "            var leader = await CreateRaftClusterAndGetLeader(groupSize' shouldRunInMemory: false' leaderIndex: 0' customSettings: new Dictionary<string' string> " is 148.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ChangeUrlOfMultiNodeCluster,The length of the statement  "                var dbToplogy = (await leaderStore.Maintenance.Server.SendAsync(new GetDatabaseRecordOperation(databaseName))).Topology; " is 120.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ChangeUrlOfMultiNodeCluster,The length of the statement  "                    [RavenConfiguration.GetKey(x => x.Security.UnsecuredAccessAllowed)] = UnsecuredAccessAddressRange.PublicNetwork.ToString() " is 122.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ChangeUrlOfMultiNodeCluster,The length of the statement  "            Assert.True(await Servers[1].ServerStore.WaitForState(RachisState.Passive' CancellationToken.None).WaitAsync(fromSeconds)); " is 123.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ChangeUrlOfMultiNodeCluster,The length of the statement  "            Assert.True(await leader.ServerStore.AddNodeToClusterAsync(Servers[1].ServerStore.GetNodeHttpServerUrl()' nodeTag).WaitAsync(fromSeconds)); " is 139.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ChangeUrlOfMultiNodeCluster,The length of the statement  "            Assert.True(await Servers[1].ServerStore.WaitForState(RachisState.Follower' CancellationToken.None).WaitAsync(fromSeconds)); " is 124.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ReduceChangeVectorWhenRemovingNode,The length of the statement  "                await WaitForDocumentInClusterAsync<User>(store.GetRequestExecutor().TopologyNodes' "foo.bar"' null' TimeSpan.FromSeconds(10)); " is 127.
Long Statement,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,HandleConflictShouldTakeUnusedDatabasesIntoAccount,The length of the statement  "            await store2.Maintenance.Server.SendAsync(new DeleteDatabasesOperation(database' hardDelete: true' fromNode: cluster.Nodes[1].ServerStore.NodeTag' timeToWaitForConfirmation: TimeSpan.FromSeconds(15))); " is 201.
Long Statement,RachisTests.DatabaseCluster,EtlFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\EtlFailover.cs,EtlDestinationFailoverBetweenNodesWithinSameCluster,The length of the statement  "                var taskInfo = (OngoingTaskRavenEtlDetails)src.Maintenance.Send(new GetOngoingTaskInfoOperation(etlResult.TaskId' OngoingTaskType.RavenEtl)); " is 141.
Long Statement,RachisTests.DatabaseCluster,OngoingTasks,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\OngoingTasks.cs,CanGetTaskInfo,The length of the statement  "                    ConnectionString = @"Data Source=localhost\sqlexpress;Integrated Security=SSPI;Connection Timeout=3" + $";Initial Catalog=SqlReplication-{store.Database};"' " is 156.
Long Statement,RachisTests.DatabaseCluster,OngoingTasks,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\OngoingTasks.cs,CanGetTaskInfo,The length of the statement  "                var replicationResult = (OngoingTaskReplication)await GetTaskInfo((DocumentStore)store' taskId' OngoingTaskType.Replication); " is 125.
Long Statement,RachisTests.DatabaseCluster,OngoingTasks,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\OngoingTasks.cs,CanGetTaskInfoByName,The length of the statement  "                    ConnectionString = @"Data Source=localhost\sqlexpress;Integrated Security=SSPI;Connection Timeout=3" + $";Initial Catalog=SqlReplication-{store.Database};"' " is 156.
Long Statement,RachisTests.DatabaseCluster,OngoingTasks,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\OngoingTasks.cs,CanGetTaskInfoByName,The length of the statement  "                var replicationResult = (OngoingTaskReplication)await GetTaskInfo((DocumentStore)store' "MyExternalReplication"' OngoingTaskType.Replication); " is 142.
Long Statement,RachisTests.DatabaseCluster,OngoingTasks,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\OngoingTasks.cs,CanToggleTaskState,The length of the statement  "                addWatcherRes = await AddWatcherToReplicationTopology((DocumentStore)store' watcher' new[] { "http://127.0.0.1:9090" }); " is 120.
Long Statement,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithDatabases,The length of the statement  "                leaderNode = await ActionWithLeader(leader => leader.ServerStore.AddNodeToClusterAsync(removed.WebUrl' removed.ServerStore.NodeTag)); " is 133.
Long Statement,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithDatabases,The length of the statement  "                Assert.True(await removed.ServerStore.WaitForState(RachisState.Follower' CancellationToken.None).WaitAsync(TimeSpan.FromSeconds(30))' " is 133.
Long Statement,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithDatabases,The length of the statement  "                await removed.ServerStore.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' leaderNode.ServerStore.LastRaftCommitIndex); " is 151.
Long Statement,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,RetainDatabasesAfterRemovingLastNodeFromCluster,The length of the statement  "                    DeletePrevious = false' RunInMemory = false' PartialPath = result.DataDir' CustomSettings = new Dictionary<string' string> " is 122.
Long Statement,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithOneDatabase,The length of the statement  "                var leaderNode = await ActionWithLeader(leader => leader.ServerStore.AddNodeToClusterAsync(removed.WebUrl' removed.ServerStore.NodeTag)); " is 137.
Long Statement,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithOneDatabase,The length of the statement  "                Assert.True(await removed.ServerStore.WaitForState(RachisState.Follower' CancellationToken.None).WaitAsync(TimeSpan.FromSeconds(30))' " is 133.
Long Statement,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithOneDatabase,The length of the statement  "                await removed.ServerStore.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' leaderNode.ServerStore.LastRaftCommitIndex); " is 151.
Long Statement,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,RemovedLeaderCauseReelection,The length of the statement  "                    var followerTasks = Servers.Where(s => s != leader).Select(s => s.ServerStore.WaitForState(RachisState.Leader' cts.Token)); " is 123.
Long Statement,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,RemoveNodeWithDatabase,The length of the statement  "                Assert.True(await removed.ServerStore.WaitForState(RachisState.Passive' CancellationToken.None).WaitAsync(TimeSpan.FromSeconds(30))' " is 132.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,EnsureDocumentsReplication,The length of the statement  "                adminCertificate = RegisterClientCertificate(certificates.ServerCertificate.Value' certificates.ClientCertificate1.Value' new Dictionary<string' DatabaseAccess>()' SecurityClearance.ClusterAdmin' server: leader); " is 212.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,EnsureDocumentsReplication,The length of the statement  "                clientCertificate = RegisterClientCertificate(certificates.ServerCertificate.Value' certificates.ClientCertificate2.Value' new Dictionary<string' DatabaseAccess> " is 161.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,EnsureReplicationToWatchers,The length of the statement  "                adminCertificate = RegisterClientCertificate(certificates' new Dictionary<string' DatabaseAccess>()' SecurityClearance.ClusterAdmin' server: leader); " is 149.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,WaitForReplicaitonShouldWaitOnlyForInternalNodes,The length of the statement  "                var notLeadingNode = mainTopology.AllNodes.Select(x => Servers.First(y => y.WebUrl == x.Value)).First(x => x.ServerStore.IsLeader() == false); " is 142.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,SetMentorToExternalReplication,The length of the statement  "                    var replicationResult = (OngoingTaskReplication)await GetTaskInfo((DocumentStore)store' taskRes.TaskId' OngoingTaskType.Replication); " is 133.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,DoNotReplicateBack,The length of the statement  "                adminCertificate = RegisterClientCertificate(certificates' new Dictionary<string' DatabaseAccess>()' SecurityClearance.ClusterAdmin' server: leader); " is 149.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,DoNotReplicateBack,The length of the statement  "                        return db.ReplicationLoader?.OutgoingHandlers.Any(o => o.GetReplicationPerformance().Any(p => p.Network.DocumentOutputCount > 0)) ?? false; " is 139.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,AddGlobalChangeVectorToNewDocument,The length of the statement  "                adminCertificate = RegisterClientCertificate(certificates.ServerCertificate.Value' certificates.ClientCertificate1.Value' new Dictionary<string' DatabaseAccess>()' SecurityClearance.ClusterAdmin' server: leader); " is 212.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,AddGlobalChangeVectorToNewDocument,The length of the statement  "                clientCertificate = RegisterClientCertificate(certificates.ServerCertificate.Value' certificates.ClientCertificate2.Value' new Dictionary<string' DatabaseAccess> " is 161.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,ReplicateToWatcherWithAuth,The length of the statement  "            var adminCert = RegisterClientCertificate(certificates.ServerCertificate.Value' certificates.ClientCertificate1.Value' new Dictionary<string' DatabaseAccess>()' SecurityClearance.ClusterAdmin); " is 193.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,ReplicateToWatcherWithAuth,The length of the statement  "            var opCert = RegisterClientCertificate(certificates.ServerCertificate.Value' certificates.ClientCertificate2.Value' new Dictionary<string' DatabaseAccess>()' SecurityClearance.Operator); " is 186.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,ReplicateToWatcherWithInvalidAuth,The length of the statement  "            var adminCert = RegisterClientCertificate(certificates.ServerCertificate.Value' certificates.ClientCertificate1.Value' new Dictionary<string' DatabaseAccess>()' SecurityClearance.ClusterAdmin); " is 193.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,ReplicateToWatcherWithInvalidAuth,The length of the statement  "            var userCert1 = RegisterClientCertificate(certificates.ServerCertificate.Value' certificates.ClientCertificate2.Value' new Dictionary<string' DatabaseAccess>()' SecurityClearance.Operator); " is 189.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,ReplicateToWatcherWithInvalidAuth,The length of the statement  "            var userCert2 = RegisterClientCertificate(certificates.ServerCertificate.Value' certificates.ClientCertificate3.Value' new Dictionary<string' DatabaseAccess> " is 157.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,ExternalReplicationFailover,The length of the statement  "                await AddWatcherToReplicationTopology((DocumentStore)srcStore' watcher' new[] { "http://127.0.0.1:1234"' dstLeader.WebUrl }); " is 125.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,ExternalReplicationFailover,The length of the statement  "                        () => handler.GetOngoingTasksInternal().OngoingTasksList.Single(t => t is OngoingTaskReplication).As<OngoingTaskReplication>().DestinationUrl != " is 144.
Long Statement,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,ExternalReplicationFailover,The length of the statement  "                    var watcherTaskUrl = handler.GetOngoingTasksInternal().OngoingTasksList.Single(t => t is OngoingTaskReplication).As<OngoingTaskReplication>() " is 141.
Complex Conditional,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,GenerateSubscriptionThatSignalsToCDEUponCompletion,The conditional expression  "res.Exception != null && res.Exception is AggregateException agg && agg.InnerException is SubscriptionClosedException sce && sce.Message.Contains("Dropped by Test")"  is complex.
Empty Catch Block,RachisTests,Cluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\Cluster.cs,AssertNumberOfNodesContainingDatabase,The method has an empty catch block.
Empty Catch Block,RachisTests,CommandsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\CommandsTests.cs,Command_not_committed_after_timeout_CompletionTaskSource_is_notified,The method has an empty catch block.
Empty Catch Block,RachisTests,CommandsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\CommandsTests.cs,Command_not_committed_after_timeout_CompletionTaskSource_is_notified,The method has an empty catch block.
Empty Catch Block,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,MakeSureAllNodesAreRoundRobined,The method has an empty catch block.
Empty Catch Block,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,ContinuouslyGenerateDocs,The method has an empty catch block.
Empty Catch Block,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,DistributedRevisionsSubscription,The method has an empty catch block.
Empty Catch Block,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,HandleSubscriptionBatch,The method has an empty catch block.
Empty Catch Block,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,CreateAndInitiateSubscription,The method has an empty catch block.
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,ReAddWatcherNode,The following statement contains a magic number: var cluster = await CreateRaftCluster(2' watcherCluster: true);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,PutDatabaseOnHealthyNodes,The following statement contains a magic number: var leader = await CreateRaftClusterAndGetLeader(5' leaderIndex: 0);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,PutDatabaseOnHealthyNodes,The following statement contains a magic number: Assert.Equal(WaitForValue(() => leader.ServerStore.GetNodesStatuses().Count(n => n.Value.Connected)' 3)' 3);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,PutDatabaseOnHealthyNodes,The following statement contains a magic number: Assert.Equal(WaitForValue(() => leader.ServerStore.GetNodesStatuses().Count(n => n.Value.Connected)' 3)' 3);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,PutDatabaseOnHealthyNodes,The following statement contains a magic number: var db = await CreateDatabaseInCluster(dbName' 4' leader.WebUrl);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,PutDatabaseOnHealthyNodes,The following statement contains a magic number: i < 5
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,AddDatabaseOnDisconnectedNode,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The following statement contains a magic number: var fromSeconds = Debugger.IsAttached ? TimeSpan.FromSeconds(15) : TimeSpan.FromSeconds(5);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The following statement contains a magic number: var fromSeconds = Debugger.IsAttached ? TimeSpan.FromSeconds(15) : TimeSpan.FromSeconds(5);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The following statement contains a magic number: var leader = await CreateRaftClusterAndGetLeader(5);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The following statement contains a magic number: var db = await CreateDatabaseInCluster(dbMain' 5' leader.WebUrl);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The following statement contains a magic number: Assert.True(await Task.WhenAll(tasks).WaitAsync(TimeSpan.FromSeconds(5)));
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(timeout: fromSeconds' replicas: 4);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(timeout: TimeSpan.FromSeconds(30)' replicas: 3);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(timeout: TimeSpan.FromSeconds(30)' replicas: 3);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(timeout: TimeSpan.FromSeconds(30)' replicas: 3);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveNodeWithDb,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(timeout: TimeSpan.FromSeconds(30)' replicas: 3);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveRedundantPromotable,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveRedundantPromotable,The following statement contains a magic number: await cluster.Leader.ServerStore.SendToLeaderAsync(new AddDatabaseCommand(Guid.NewGuid().ToString())                  {                      Record = new DatabaseRecord(db)                      {                          Topology = new DatabaseTopology                          {                              Members = new List<string> { "A" }'                              Promotables = new List<string> { "B"' "C" }'                              ReplicationFactor = 2                          }                      }'                      Name = db                  });
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveRedundantPromotable,The following statement contains a magic number: await WaitForAssertion(() =>                  {                      using (cluster.Leader.ServerStore.ContextPool.AllocateOperationContext(out TransactionOperationContext ctx))                      using (ctx.OpenReadTransaction())                      {                          var record = cluster.Leader.ServerStore.Cluster.ReadDatabase(ctx' db);                          Assert.Equal(0' record.DeletionInProgress?.Count ?? 0);                            var topology = record.Topology;                          Assert.Equal(2' topology.ReplicationFactor);                          Assert.Equal(2' topology.Members.Count);                          Assert.Equal(0' topology.Promotables.Count);                          Assert.Equal(0' topology.Rehabs.Count);                      }                  });
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveRedundantPromotable,The following statement contains a magic number: await WaitForAssertion(() =>                  {                      using (cluster.Leader.ServerStore.ContextPool.AllocateOperationContext(out TransactionOperationContext ctx))                      using (ctx.OpenReadTransaction())                      {                          var record = cluster.Leader.ServerStore.Cluster.ReadDatabase(ctx' db);                          Assert.Equal(0' record.DeletionInProgress?.Count ?? 0);                            var topology = record.Topology;                          Assert.Equal(2' topology.ReplicationFactor);                          Assert.Equal(2' topology.Members.Count);                          Assert.Equal(0' topology.Promotables.Count);                          Assert.Equal(0' topology.Rehabs.Count);                      }                  });
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveRedundantRehabs,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveRedundantRehabs,The following statement contains a magic number: await cluster.Leader.ServerStore.SendToLeaderAsync(new AddDatabaseCommand(Guid.NewGuid().ToString())                  {                      Record = new DatabaseRecord(db)                      {                          Topology = new DatabaseTopology                          {                              Members = new List<string> { "A" }'                              Rehabs = new List<string> { "B"' "C" }'                              ReplicationFactor = 2                          }                      }'                      Name = db                  });
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveRedundantRehabs,The following statement contains a magic number: await WaitForAssertion(() =>                  {                      using (cluster.Leader.ServerStore.ContextPool.AllocateOperationContext(out TransactionOperationContext ctx))                      using (ctx.OpenReadTransaction())                      {                          var record = cluster.Leader.ServerStore.Cluster.ReadDatabase(ctx' db);                          Assert.Equal(0' record.DeletionInProgress?.Count ?? 0);                            var topology = record.Topology;                          Assert.Equal(2' topology.ReplicationFactor);                          Assert.Equal(2' topology.Members.Count);                          Assert.Equal(0' topology.Promotables.Count);                          Assert.Equal(0' topology.Rehabs.Count);                      }                  });
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveRedundantRehabs,The following statement contains a magic number: await WaitForAssertion(() =>                  {                      using (cluster.Leader.ServerStore.ContextPool.AllocateOperationContext(out TransactionOperationContext ctx))                      using (ctx.OpenReadTransaction())                      {                          var record = cluster.Leader.ServerStore.Cluster.ReadDatabase(ctx' db);                          Assert.Equal(0' record.DeletionInProgress?.Count ?? 0);                            var topology = record.Topology;                          Assert.Equal(2' topology.ReplicationFactor);                          Assert.Equal(2' topology.Members.Count);                          Assert.Equal(0' topology.Promotables.Count);                          Assert.Equal(0' topology.Rehabs.Count);                      }                  });
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveRedundantNodes,The following statement contains a magic number: var clusterSize = 5;
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveRedundantNodes,The following statement contains a magic number: await cluster.Leader.ServerStore.SendToLeaderAsync(new AddDatabaseCommand(Guid.NewGuid().ToString())                  {                      Record = new DatabaseRecord(db)                      {                          Topology = new DatabaseTopology                          {                              Members = new List<string> { "A" }'                              Rehabs = new List<string> { "B"' "C" }'                              Promotables = new List<string> { "D"' "E" }'                              ReplicationFactor = 3                          }                      }'                      Name = db                  });
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveRedundantNodes,The following statement contains a magic number: await WaitForAssertion(() =>                  {                      using (cluster.Leader.ServerStore.ContextPool.AllocateOperationContext(out TransactionOperationContext ctx))                      using (ctx.OpenReadTransaction())                      {                          var record = cluster.Leader.ServerStore.Cluster.ReadDatabase(ctx' db);                          Assert.Equal(0' record.DeletionInProgress?.Count ?? 0);                            var topology = record.Topology;                          Assert.Equal(3' topology.ReplicationFactor);                          Assert.Equal(3' topology.Members.Count);                          Assert.Equal(0' topology.Promotables.Count);                          Assert.Equal(0' topology.Rehabs.Count);                      }                  });
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,RemoveRedundantNodes,The following statement contains a magic number: await WaitForAssertion(() =>                  {                      using (cluster.Leader.ServerStore.ContextPool.AllocateOperationContext(out TransactionOperationContext ctx))                      using (ctx.OpenReadTransaction())                      {                          var record = cluster.Leader.ServerStore.Cluster.ReadDatabase(ctx' db);                          Assert.Equal(0' record.DeletionInProgress?.Count ?? 0);                            var topology = record.Topology;                          Assert.Equal(3' topology.ReplicationFactor);                          Assert.Equal(3' topology.Members.Count);                          Assert.Equal(0' topology.Promotables.Count);                          Assert.Equal(0' topology.Rehabs.Count);                      }                  });
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,WhoseTaskIsItShouldNotSelectRemovedNode,The following statement contains a magic number: var clusterSize = 5;
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,WhoseTaskIsItShouldNotSelectRemovedNode,The following statement contains a magic number: await cluster.Leader.ServerStore.SendToLeaderAsync(new AddDatabaseCommand(Guid.NewGuid().ToString())              {                  Record = new DatabaseRecord(db)                  {                      Topology = new DatabaseTopology                      {                          Members = new List<string> {cluster.Leader.ServerStore.NodeTag'firstFollowerTag}'                          ReplicationFactor = 2'                          Stamp = new LeaderStamp()                      }                  }'                  Name = db              });
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,WhoseTaskIsItShouldNotSelectRemovedNode,The following statement contains a magic number: await WaitForRaftIndexToBeAppliedInCluster(result.Index' TimeSpan.FromSeconds(10));
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,ResetServerShouldPreserveTopology,The following statement contains a magic number: var cluster = await CreateRaftCluster(3' shouldRunInMemory: false);
Magic Number,RachisTests,AddNodeToClusterTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\AddNodeToClusterTests.cs,ResetServerShouldPreserveTopology,The following statement contains a magic number: Assert.Equal(3' topology.AllNodes.Count);
Magic Number,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithFiveNodesAndMultipleElections,The following statement contains a magic number: i < 10
Magic Number,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithFiveNodesAndMultipleElections,The following statement contains a magic number: i < 20
Magic Number,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithFiveNodesAndMultipleElections,The following statement contains a magic number: i < 30
Magic Number,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithFiveNodesAndMultipleElections,The following statement contains a magic number: var expected = string.Join(""' Enumerable.Range(0' 30));
Magic Number,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithThreeNodesAndElections,The following statement contains a magic number: i < 10
Magic Number,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithLateJoiningNodeRequiringSnapshot,The following statement contains a magic number: i < 5
Magic Number,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithLateJoiningNodeRequiringSnapshot,The following statement contains a magic number: var (etag' _) = await a.PutAsync(new TestCommand { Name = "test"' Value = i + 5 });
Magic Number,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithLateJoiningNodeRequiringSnapshot,The following statement contains a magic number: i < 5
Magic Number,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithLateJoiningNodeRequiringSnapshot,The following statement contains a magic number: Assert.True(await b.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' lastIndex).WaitAsync(15000));
Magic Number,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithTwoNodes,The following statement contains a magic number: i < 9
Magic Number,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithTwoNodes,The following statement contains a magic number: var (lastIndex' _) = await a.PutAsync(new TestCommand { Name = "test"' Value = 9 });
Magic Number,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,ClusterWithTwoNodes,The following statement contains a magic number: Assert.True(await waitForCommitIndexChange.WaitAsync(TimeSpan.FromSeconds(5)));
Magic Number,RachisTests,BasicCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicCluster.cs,CanSetupSingleNode,The following statement contains a magic number: i < 10
Magic Number,RachisTests,BasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicTests.cs,CanApplyCommitAcrossAllCluster,The following statement contains a magic number: i < 5
Magic Number,RachisTests,BasicTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\BasicTests.cs,CanApplyCommitAcrossAllCluster,The following statement contains a magic number: var condition = await                      r.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' lastIndex)                          .WaitAsync(5000);
Magic Number,RachisTests,Cluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\Cluster.cs,PutUniqeValueToDifferentNode,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests,Cluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\Cluster.cs,CanCreateAddAndDeleteDatabaseFromNodes,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests,Cluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\Cluster.cs,CanCreateAddAndDeleteDatabaseFromNodes,The following statement contains a magic number: var replicationFactor = 2;
Magic Number,RachisTests,Cluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\Cluster.cs,CanCreateAddAndDeleteDatabaseFromNodes,The following statement contains a magic number: var deleteResult = store.Maintenance.Server.Send(new DeleteDatabasesOperation(databaseName' hardDelete: true' fromNode: serverTagToBeDeleted' timeToWaitForConfirmation: TimeSpan.FromSeconds(30)));
Magic Number,RachisTests,Cluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\Cluster.cs,CanCreateAddAndDeleteDatabaseFromNodes,The following statement contains a magic number: await WaitForDatabaseToBeDeleted(store'databaseName'TimeSpan.FromSeconds(30));
Magic Number,RachisTests,Cluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\Cluster.cs,AssertNumberOfNodesContainingDatabase,The following statement contains a magic number: await Task.Delay(500);
Magic Number,RachisTests,CommandsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\CommandsTests.cs,When_command_committed_CompletionTaskSource_is_notified,The following statement contains a magic number: const int commandCount = 10;
Magic Number,RachisTests,CommandsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\CommandsTests.cs,When_command_committed_CompletionTaskSource_is_notified,The following statement contains a magic number: const int clusterSize = 3;
Magic Number,RachisTests,CommandsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\CommandsTests.cs,Command_not_committed_after_timeout_CompletionTaskSource_is_notified,The following statement contains a magic number: const int commandCount = 3;
Magic Number,RachisTests,CommandsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\CommandsTests.cs,Command_not_committed_after_timeout_CompletionTaskSource_is_notified,The following statement contains a magic number: const int clusterSize = 3;
Magic Number,RachisTests,CommandsTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\CommandsTests.cs,Command_not_committed_after_timeout_CompletionTaskSource_is_notified,The following statement contains a magic number: Assert.True(await task.WaitAsync((int)leader.ElectionTimeout.TotalMilliseconds * 10));
Magic Number,RachisTests,DisableNodeOnClusterTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DisableNodeOnClusterTest.cs,BackToFirstNodeAfterRevive,The following statement contains a magic number: var leader = await CreateRaftClusterAndGetLeader(3' shouldRunInMemory: false' customSettings: settings);
Magic Number,RachisTests,DisableNodeOnClusterTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DisableNodeOnClusterTest.cs,BackToFirstNodeAfterRevive,The following statement contains a magic number: await CreateDatabaseInCluster(db' 3' leader.WebUrl);
Magic Number,RachisTests,DisableNodeOnClusterTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DisableNodeOnClusterTest.cs,BackToFirstNodeAfterRevive,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(replicas: 2' timeout: TimeSpan.FromSeconds(30));
Magic Number,RachisTests,DisableNodeOnClusterTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DisableNodeOnClusterTest.cs,BackToFirstNodeAfterRevive,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(replicas: 2' timeout: TimeSpan.FromSeconds(30));
Magic Number,RachisTests,DisableNodeOnClusterTest,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DisableNodeOnClusterTest.cs,BackToFirstNodeAfterRevive,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(replicas: 1' timeout: TimeSpan.FromSeconds(30));
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,Follower_as_a_single_node_becomes_leader_automatically,The following statement contains a magic number: var condition = await waitForState.WaitAsync(10 * node.ElectionTimeout);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,RavenDB_13922,The following statement contains a magic number: var leader = await CreateNetworkAndGetLeader(2);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,RavenDB_13922,The following statement contains a magic number: var lastIndex = await IssueCommandsAndWaitForCommit(3' "test"' 1);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,RavenDB_13922,The following statement contains a magic number: await Task.WhenAll(t1' t2).WaitAsync(5000) == false
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,CanElectOnDivergence,The following statement contains a magic number: var firstLeader = await CreateNetworkAndGetLeader(3);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,CanElectOnDivergence,The following statement contains a magic number: var timeToWait = TimeSpan.FromMilliseconds(3000);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,CanElectOnDivergence,The following statement contains a magic number: await IssueCommandsAndWaitForCommit(3' "test"' 1);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,CanElectOnDivergence,The following statement contains a magic number: Assert.True(maxTerm < 10' "Followers were unable to elect a leader.");
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,CanElectOnDivergence,The following statement contains a magic number: var newLeaderLastIndex = await IssueCommandsAndWaitForCommit(5' "test"' 1);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,CanElectOnDivergence,The following statement contains a magic number: var retries = 3;
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,CanElectOnDivergence,The following statement contains a magic number: Assert.Equal(3' RachisConsensuses.Count);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,ForceStepDownAndElectNewLeader,The following statement contains a magic number: Assert.True(await firstLeader.WaitForState(RachisState.Follower' CancellationToken.None).WaitAsync(TimeSpan.FromSeconds(3))' "Old leader hasn't stepped down.");
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,OnNetworkDisconnectionANewLeaderIsElectedAfterReconnectOldLeaderStepsDownAndRollBackHisLog,The following statement contains a magic number: var timeToWait = TimeSpan.FromMilliseconds(1000 * numberOfNodes);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,OnNetworkDisconnectionANewLeaderIsElectedAfterReconnectOldLeaderStepsDownAndRollBackHisLog,The following statement contains a magic number: await IssueCommandsAndWaitForCommit(3' "test"' 1);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,OnNetworkDisconnectionANewLeaderIsElectedAfterReconnectOldLeaderStepsDownAndRollBackHisLog,The following statement contains a magic number: List<Task> invalidCommands = IssueCommandsWithoutWaitingForCommits(firstLeader' 3' "test"' 1);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,OnNetworkDisconnectionANewLeaderIsElectedAfterReconnectOldLeaderStepsDownAndRollBackHisLog,The following statement contains a magic number: Assert.True(maxTerm < 10' "Followers were unable to elect a leader.");
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,OnNetworkDisconnectionANewLeaderIsElectedAfterReconnectOldLeaderStepsDownAndRollBackHisLog,The following statement contains a magic number: var newLeaderLastIndex = await IssueCommandsAndWaitForCommit(5' "test"' 1);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,RavenDB_13228,The following statement contains a magic number: var numberOfNodes = 2;
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,RavenDB_13228,The following statement contains a magic number: var timeToWait = TimeSpan.FromMilliseconds(1000 * numberOfNodes);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,RavenDB_13228,The following statement contains a magic number: await IssueCommandsAndWaitForCommit(10' "test"' 1);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,RavenDB_13228,The following statement contains a magic number: var t = Task.Run(() => IssueCommandsWithoutWaitingForCommits(firstLeader' 100' "test"));
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,RavenDB_13228,The following statement contains a magic number: Assert.Equal(currentTerm + 2' firstLeader.CurrentTerm);
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,RavenDB_13228,The following statement contains a magic number: var count = 100;
Magic Number,RachisTests,ElectionTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\ElectionTests.cs,RavenDB_13228,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(100));
Magic Number,RachisTests,EmergencyOperations,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\EmergencyOperations.cs,LeaderCanCecedeFromClusterAndNewLeaderWillBeElected,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests,EmergencyOperations,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\EmergencyOperations.cs,LeaderCanCecedeFromClusterAndNewLeaderWillBeElected,The following statement contains a magic number: Assert.True(await Task.WhenAny(leaderSelectedTasks).WaitAsync(TimeSpan.FromSeconds(10))'"New leader was not elected after old leader left the cluster.");
Magic Number,RachisTests,EmergencyOperations,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\EmergencyOperations.cs,FollowerCanCecedeFromCluster,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests,RavenDB_6602,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\RavenDB-6602.cs,RequestExecutor_failover_with_only_one_database_should_properly_fail,The following statement contains a magic number: await WaitForRaftIndexToBeAppliedInCluster(databaseResult.RaftCommandIndex' TimeSpan.FromSeconds(5));
Magic Number,RachisTests,RavenDB_6602,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\RavenDB-6602.cs,RequestExecutor_failover_to_database_topology_should_work,The following statement contains a magic number: var leader = await CreateRaftClusterAndGetLeader(3);
Magic Number,RachisTests,RavenDB_6602,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\RavenDB-6602.cs,RequestExecutor_failover_to_database_topology_should_work,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                          session'                          "users/1"'                          u => u.Name.Equals("John Doe")'                          TimeSpan.FromSeconds(10)));
Magic Number,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,SubscriptionsShouldFailoverCorrectrlyAndAllowThemselvesToBeTerminated,The following statement contains a magic number: const int SubscriptionsCount = 10;
Magic Number,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,SubscriptionsShouldFailoverCorrectrlyAndAllowThemselvesToBeTerminated,The following statement contains a magic number: const int DocsBatchSize = 10;
Magic Number,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,SubscriptionsShouldFailoverCorrectrlyAndAllowThemselvesToBeTerminated,The following statement contains a magic number: var dbNodesCountToToggle = Math.Max(Math.Min(dBGroupSize - 1' dBGroupSize / 2 + 1)' 1);
Magic Number,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,MakeSureAllNodesAreRoundRobined,The following statement contains a magic number: var subsWorker = store.Subscriptions.GetSubscriptionWorker<User>(new Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions(subsId)                  {                      TimeToWaitBeforeConnectionRetry = TimeSpan.FromMilliseconds(16)                  }                  );
Magic Number,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,MakeSureAllNodesAreRoundRobined,The following statement contains a magic number: Thread.Sleep(16);
Magic Number,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,MakeSureAllNodesAreRoundRobined,The following statement contains a magic number: Assert.True(sp.Elapsed < TimeSpan.FromMinutes(5));
Magic Number,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,GenerateWaitingSubscriptions,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,ToggleClusterNodeOnAndOffAndWaitForRehab,The following statement contains a magic number: await Task.Delay(5000);
Magic Number,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,ContinuouslyGenerateDocs,The following statement contains a magic number: await Task.Delay(16);
Magic Number,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,KeepDroppingSubscriptionsAndWaitingForCDE,The following statement contains a magic number: var mainTI = ThreadPool.RegisterWaitForSingleObject(mainSubscribersCDE.WaitHandle' (x' timedOut) =>              {                  if (!timedOut)                      mainTcs.SetResult(true);              }' null' 10000' true);
Magic Number,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,KeepDroppingSubscriptionsAndWaitingForCDE,The following statement contains a magic number: await mainTcs.Task.WaitAsync(1000)
Magic Number,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,KeepDroppingSubscriptionsAndWaitingForCDE,The following statement contains a magic number: i < 20
Magic Number,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,WaitForRehab,The following statement contains a magic number: var attempts = 20;
Magic Number,RachisTests,SubscriptionFailoverWithWaitingChains,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionFailoverWIthWaitingChains.cs,WaitForRehab,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,ContinueFromThePointIStopped,The following statement contains a magic number: const int nodesAmount = 5;
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscripitonDeletionFromCluster,The following statement contains a magic number: const int nodesAmount = 5;
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscripitonDeletionFromCluster,The following statement contains a magic number: var subscription = store.Subscriptions.GetSubscriptionWorker<User>(new SubscriptionWorkerOptions(subscriptionId)                  {                      TimeToWaitBeforeConnectionRetry = TimeSpan.FromSeconds(5)                  });
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscripitonDeletionFromCluster,The following statement contains a magic number: await ravenServer.ServerStore.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' deleteResult.RaftCommandIndex + nodesAmount).WaitWithTimeout(TimeSpan.FromSeconds(60));
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscripitonDeletionFromCluster,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,CreateDistributedRevisions,The following statement contains a magic number: const int nodesAmount = 5;
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,CreateDistributedRevisions,The following statement contains a magic number: i < 17
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SetMentorToSubscriptionWithFailover,The following statement contains a magic number: const int nodesAmount = 5;
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SetMentorToSubscriptionWithFailover,The following statement contains a magic number: (var subscription' var subsTask) = await CreateAndInitiateSubscription(store' defaultDatabase' usersCount' reachedMaxDocCountMre' 20' mentor: mentor);
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,DistributedRevisionsSubscription,The following statement contains a magic number: subscription = store.Subscriptions.GetSubscriptionWorker<Revision<User>>(new SubscriptionWorkerOptions(subscriptionId)                      {                          MaxErroneousPeriod = TimeSpan.FromSeconds(5)'                          MaxDocsPerBatch = 1'                          TimeToWaitBeforeConnectionRetry = TimeSpan.FromMilliseconds(100)                      });
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,DistributedRevisionsSubscription,The following statement contains a magic number: subscription = store.Subscriptions.GetSubscriptionWorker<Revision<User>>(new SubscriptionWorkerOptions(subscriptionId)                      {                          MaxErroneousPeriod = TimeSpan.FromSeconds(5)'                          MaxDocsPerBatch = 1'                          TimeToWaitBeforeConnectionRetry = TimeSpan.FromMilliseconds(100)                      });
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,DistributedRevisionsSubscription,The following statement contains a magic number: i < 10
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,DistributedRevisionsSubscription,The following statement contains a magic number: Assert.NotEqual(i' 10);
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,DistributedRevisionsSubscription,The following statement contains a magic number: expectedRevisionsCount = nodesAmount + 2;
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,DistributedRevisionsSubscription,The following statement contains a magic number: expectedRevisionsCount += 2;
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,DistributedRevisionsSubscription,The following statement contains a magic number: expectedRevisionsCount = (int)Math.Pow(nodesAmount' 2);
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,DistributedRevisionsSubscription,The following statement contains a magic number: nodesAmount == 5
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,DistributedRevisionsSubscription32Bit,The following statement contains a magic number: await DistributedRevisionsSubscription(3);
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,HandleSubscriptionBatch,The following statement contains a magic number: docsCount == nodesAmount && revisionsCount == Math.Pow(nodesAmount' 2)
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SetupRevisions,The following statement contains a magic number: var configuration = new RevisionsConfiguration                  {                      Default = new RevisionsCollectionConfiguration                      {                          Disabled = false'                          MinimumRevisionsToKeep = 10'                      }'                      Collections = new Dictionary<string' RevisionsCollectionConfiguration>                      {                          ["Users"] = new RevisionsCollectionConfiguration                          {                              Disabled = false'                              MinimumRevisionsToKeep = 10                          }                      }                  };
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SetupRevisions,The following statement contains a magic number: var configuration = new RevisionsConfiguration                  {                      Default = new RevisionsCollectionConfiguration                      {                          Disabled = false'                          MinimumRevisionsToKeep = 10'                      }'                      Collections = new Dictionary<string' RevisionsCollectionConfiguration>                      {                          ["Users"] = new RevisionsCollectionConfiguration                          {                              Disabled = false'                              MinimumRevisionsToKeep = 10                          }                      }                  };
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,CreateAndInitiateSubscription,The following statement contains a magic number: var subscription = store.Subscriptions.GetSubscriptionWorker<User>(new SubscriptionWorkerOptions(subscriptionName)              {                  TimeToWaitBeforeConnectionRetry = TimeSpan.FromMilliseconds(500)'                                  MaxDocsPerBatch = batchSize                                });
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,CreateAndInitiateSubscription,The following statement contains a magic number: subscription.AfterAcknowledgment += b =>              {                  try                  {                      foreach (var item in b.Items)                      {                          var x = item.Result;                          int curId = 0;                          var afterSlash = x.Id.Substring(x.Id.LastIndexOf("/"' StringComparison.OrdinalIgnoreCase) + 1);                          curId = int.Parse(afterSlash.Substring(0' afterSlash.Length - 2));                          Assert.True(curId >= proggress.MaxId);                          usersCount.Add(x);                          proggress.MaxId = curId;                      }                      if (usersCount.Count == 10)                      {                          reachedMaxDocCountMre.Set();                      }                  }                  catch (Exception)                  {                      }                  return Task.CompletedTask;              };
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,CreateAndInitiateSubscription,The following statement contains a magic number: subscription.AfterAcknowledgment += b =>              {                  try                  {                      foreach (var item in b.Items)                      {                          var x = item.Result;                          int curId = 0;                          var afterSlash = x.Id.Substring(x.Id.LastIndexOf("/"' StringComparison.OrdinalIgnoreCase) + 1);                          curId = int.Parse(afterSlash.Substring(0' afterSlash.Length - 2));                          Assert.True(curId >= proggress.MaxId);                          usersCount.Add(x);                          proggress.MaxId = curId;                      }                      if (usersCount.Count == 10)                      {                          reachedMaxDocCountMre.Set();                      }                  }                  catch (Exception)                  {                      }                  return Task.CompletedTask;              };
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,KillServerWhereSubscriptionWorks,The following statement contains a magic number: await Task.Delay(100);
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,KillServerWhereSubscriptionWorks,The following statement contains a magic number: await Task.Delay(100);
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,GenerateDocuments,The following statement contains a magic number: i < 10
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldFailIfLeaderIsDownAndItIsOnlyOpening,The following statement contains a magic number: const int nodesAmount = 2;
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldFailIfLeaderIsDownAndItIsOnlyOpening,The following statement contains a magic number: Assert.True(await ThrowsAsync<SubscriptionInvalidStateException>(task).WaitWithTimeout(TimeSpan.FromSeconds(60)).ConfigureAwait(false));
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldFailIfLeaderIsDownBeforeAck,The following statement contains a magic number: const int nodesAmount = 2;
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldFailIfLeaderIsDownBeforeAck,The following statement contains a magic number: Assert.True(await ThrowsAsync<SubscriptionInvalidStateException>(task).WaitWithTimeout(TimeSpan.FromSeconds(120)).ConfigureAwait(false));
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldNotFailIfLeaderIsDownButItStillHasEnoughTimeToRetry,The following statement contains a magic number: const int nodesAmount = 2;
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldNotFailIfLeaderIsDownButItStillHasEnoughTimeToRetry,The following statement contains a magic number: Assert.True(await subscriptionRetryBegins.WaitAsync(TimeSpan.FromSeconds(30)));
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldNotFailIfLeaderIsDownButItStillHasEnoughTimeToRetry,The following statement contains a magic number: Assert.True(await subscriptionRetryBegins.WaitAsync(TimeSpan.FromSeconds(30)));
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldNotFailIfLeaderIsDownButItStillHasEnoughTimeToRetry,The following statement contains a magic number: Assert.True(await subscriptionRetryBegins.WaitAsync(TimeSpan.FromSeconds(30)));
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldNotFailIfLeaderIsDownButItStillHasEnoughTimeToRetry,The following statement contains a magic number: Assert.True(await batchProccessed.WaitAsync(TimeSpan.FromSeconds(60)));
Magic Number,RachisTests,SubscriptionsFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\SubscriptionsFailover.cs,SubscriptionShouldNotFailIfLeaderIsDownButItStillHasEnoughTimeToRetry,The following statement contains a magic number: Assert.True(await batchedAcked.WaitAsync(TimeSpan.FromSeconds(60)));
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,CanEnforceTopologyOnOldLeader,The following statement contains a magic number: var leader = await CreateNetworkAndGetLeader(3);
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,CanEnforceTopologyOnOldLeader,The following statement contains a magic number: Assert.True(await leader.WaitForTopology(Leader.TopologyModification.Remove' newServer.Url).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 6)));
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,New_node_can_be_added_even_if_it_is_down,The following statement contains a magic number: var leader = await CreateNetworkAndGetLeader(3);
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,New_node_can_be_added_even_if_it_is_down,The following statement contains a magic number: Assert.True(await leader.AddToClusterAsync("http://rachis.example.com:1337").WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))' "non existing node should be able to join the cluster");
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,New_node_can_be_added_even_if_it_is_down,The following statement contains a magic number: Assert.True(await Task.WhenAll(waitingList).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))' "Cluster was non informed about new node within two election periods");
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_additional_node_that_goes_offline_and_then_online_should_still_work,The following statement contains a magic number: var node4 = SetupServer(false' 53899);
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_additional_node_that_goes_offline_and_then_online_should_still_work,The following statement contains a magic number: var node5 = SetupServer(false' 53898);
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_additional_node_that_goes_offline_and_then_online_should_still_work,The following statement contains a magic number: var leader = await CreateNetworkAndGetLeader(3);
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_additional_node_that_goes_offline_and_then_online_should_still_work,The following statement contains a magic number: Assert.True(await leader.AddToClusterAsync(node4.Url).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))' "non existing node should be able to join the cluster");
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_additional_node_that_goes_offline_and_then_online_should_still_work,The following statement contains a magic number: Assert.True(await leader.AddToClusterAsync(node5.Url).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))' "non existing node should be able to join the cluster");
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_additional_node_that_goes_offline_and_then_online_should_still_work,The following statement contains a magic number: var t = IssueCommandsAndWaitForCommit(3' "test"' 1);
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_additional_node_that_goes_offline_and_then_online_should_still_work,The following statement contains a magic number: Assert.True(await t.WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))' "Commands were not committed in time although there is a majority of active nodes in the cluster");
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_additional_node_that_goes_offline_and_then_online_should_still_work,The following statement contains a magic number: Assert.True(await node4.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' t.Result).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))'                  "#D server didn't get the commands in time");
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_additional_node_that_goes_offline_and_then_online_should_still_work,The following statement contains a magic number: Assert.True(await node5.WaitForCommitIndexChange(RachisConsensus.CommitIndexModification.GreaterOrEqual' t.Result).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))'                  "#E server didn't get the commands in time");
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_already_existing_node_should_throw,The following statement contains a magic number: var leader = await CreateNetworkAndGetLeader(3);
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Adding_already_existing_node_should_throw,The following statement contains a magic number: Assert.True(await leader.AddToClusterAsync("http://not-a-real-url.com").WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 2))'                  "non existing node should be able to join the cluster");
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Removal_of_non_existing_node_should_throw,The following statement contains a magic number: var leader = await CreateNetworkAndGetLeader(3);
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Non_leader_Node_removed_from_cluster_should_update_peers_list,The following statement contains a magic number: Assert.True(await leader.RemoveFromClusterAsync(follower.Tag).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 10))' "Was unable to remove node from cluster in time");
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,Non_leader_Node_removed_from_cluster_should_update_peers_list,The following statement contains a magic number: Assert.True(await node.WaitForTopology(Leader.TopologyModification.Remove' follower.Tag).WaitAsync(TimeSpan.FromMilliseconds(node.ElectionTimeout.TotalMilliseconds * 1000))' "Node was not removed from topology in time");
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,AddingRemovedNodeShouldWork,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,AddingRemovedNodeShouldWork,The following statement contains a magic number: Assert.True(await leader.RemoveFromClusterAsync(oldTag).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 10))' "Was unable to remove node from cluster in time");
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,AddingRemovedNodeShouldWork,The following statement contains a magic number: Assert.True(await node.WaitForTopology(Leader.TopologyModification.Remove' follower.Tag).WaitAsync(TimeSpan.FromMilliseconds(node.ElectionTimeout.TotalMilliseconds * 10))' "Node was not removed from topology in time");
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,AddingRemovedNodeShouldWork,The following statement contains a magic number: var isAddedSuccessfully = await leader.AddToClusterAsync(follower.Url' follower.Tag).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 5));
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,AddingRemovedNodeShouldWork,The following statement contains a magic number: var waitForTopologySuccessful = await follower.WaitForTopology(Leader.TopologyModification.Voter).WaitAsync(TimeSpan.FromMilliseconds(leader.ElectionTimeout.TotalMilliseconds * 5));
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,AddNodeFromDifferentCluster,The following statement contains a magic number: await node1.PutAsync(new TestCommand { Name = "test"' Value = 10 });
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,AddNodeFromDifferentCluster,The following statement contains a magic number: await node2.PutAsync(new TestCommand { Name = "test"' Value = 20 });
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,AddNodeFromDifferentCluster,The following statement contains a magic number: Assert.Equal(10.ToString()' val1);
Magic Number,RachisTests,TopologyChangesTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\TopologyChangesTests.cs,AddNodeFromDifferentCluster,The following statement contains a magic number: Assert.Equal(10.ToString()' val2);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontPurgeTombstonesWhenNodeIsDown,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontPurgeTombstonesWhenNodeIsDown,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(TimeSpan.FromSeconds(30)' replicas: 2);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontPurgeTombstonesWhenNodeIsDown,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(TimeSpan.FromSeconds(30)' replicas: 2);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontPurgeTombstonesWhenNodeIsDown,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(TimeSpan.FromSeconds(30)' replicas: 1);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontPurgeTombstonesWhenNodeIsDown,The following statement contains a magic number: Assert.Equal(2' database.DocumentsStorage.GetLastTombstoneEtag(ctx' "Users"));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,MoveToRehabOnServerDown,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,CanFixTopology,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,CanFixTopology,The following statement contains a magic number: var doc = new DatabaseRecord(databaseName)                  {                      Topology = new DatabaseTopology                      {                          Members = new List<string> {"A"' "B"' "C"}'                           ReplicationFactor = 3'                           PriorityOrder = order                      }                  };
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,CanFixTopology,The following statement contains a magic number: val = await WaitForValueAsync(async () => await GetMembersCount(store' databaseName)' 3);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,CanFixTopology,The following statement contains a magic number: Assert.Equal(3' val);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ReshuffleAfterPromotion,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ReshuffleAfterPromotion,The following statement contains a magic number: i < 30
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ReshuffleAfterPromotion,The following statement contains a magic number: var nodeInfo = await DisposeServerAndWaitForFinishOfDisposalAsync(cluster.Nodes[2]);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ReshuffleAfterPromotion,The following statement contains a magic number: cluster.Nodes[2] = GetNewServer(new ServerCreationOptions                  {                      DeletePrevious = false'                      RunInMemory = false'                      PartialPath = nodeInfo.DataDir'                      CustomSettings = new Dictionary<string' string>                      {                          [RavenConfiguration.GetKey(x => x.Core.ServerUrls)] = nodeInfo.Url                      }                  });
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,PromoteOnCatchingUp,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,PromoteOnCatchingUp,The following statement contains a magic number: await WaitForRaftIndexToBeAppliedInCluster(res.RaftCommandIndex' TimeSpan.FromSeconds(5));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,PromoteOnCatchingUp,The following statement contains a magic number: await WaitForDocumentInClusterAsync<User>(res.Topology' databaseName' "users/1"' u => u.Name == "Karmel"' TimeSpan.FromSeconds(10));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,PromoteOnCatchingUp,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(5));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,PromoteOnCatchingUp,The following statement contains a magic number: val = await WaitForValueAsync(async () => await GetMembersCount(store' databaseName)' 2);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,PromoteOnCatchingUp,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,SuccessfulMaintenanceOnLeaderChange,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,SuccessfulMaintenanceOnLeaderChange,The following statement contains a magic number: await WaitForRaftIndexToBeAppliedInCluster(res.RaftCommandIndex' TimeSpan.FromSeconds(5));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,SuccessfulMaintenanceOnLeaderChange,The following statement contains a magic number: Assert.Equal(3' res.Topology.Members.Count);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,SuccessfulMaintenanceOnLeaderChange,The following statement contains a magic number: var val = await WaitForValueAsync(async () => await GetMembersCount(store' databaseName)' 2);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,SuccessfulMaintenanceOnLeaderChange,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,PromoteDatabaseNodeBackAfterReconnection,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,PromoteDatabaseNodeBackAfterReconnection,The following statement contains a magic number: await WaitForRaftIndexToBeAppliedInCluster(databaseResult.RaftCommandIndex' TimeSpan.FromSeconds(10));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,PromoteDatabaseNodeBackAfterReconnection,The following statement contains a magic number: val = await WaitForValueAsync(async () => await GetMembersCount(store' databaseName)' 3' 30_000);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,PromoteDatabaseNodeBackAfterReconnection,The following statement contains a magic number: Assert.Equal(3' val);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,MoveToPassiveWhenRefusedConnectionFromAllNodes,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,MoveToPassiveWhenRefusedConnectionFromAllNodes,The following statement contains a magic number: await WaitForRaftIndexToBeAppliedInCluster(databaseResult.RaftCommandIndex' TimeSpan.FromSeconds(10));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,MoveToPassiveWhenRefusedConnectionFromAllNodes,The following statement contains a magic number: var val = await WaitForValueAsync(() =>                      {                          using (context.OpenReadTransaction())                          {                              return Servers[2].ServerStore.GetClusterTopology(context).AllNodes.Count;                          }                      }' clusterSize - 1);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,MoveToPassiveWhenRefusedConnectionFromAllNodes,The following statement contains a magic number: Assert.True(await Servers[1].ServerStore.WaitForState(RachisState.Passive' CancellationToken.None).WaitAsync(TimeSpan.FromSeconds(30))' "1st assert");
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,MoveToPassiveWhenRefusedConnectionFromAllNodes,The following statement contains a magic number: Assert.True(await Servers[1].ServerStore.WaitForState(RachisState.Follower' CancellationToken.None).WaitAsync(TimeSpan.FromSeconds(30))' "2nd assert");
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseIfNodeFails,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseIfNodeFails,The following statement contains a magic number: var dbGroupSize = 2;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseIfNodeFails,The following statement contains a magic number: await WaitForRaftIndexToBeAppliedInCluster(databaseResult.RaftCommandIndex' TimeSpan.FromSeconds(10));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseIfNodeFails,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(doc.Topology' databaseName' "users/1"' u => u.Name == "Karmel"' TimeSpan.FromSeconds(5)));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseIfNodeFails,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(newTopology' databaseName' "users/1"' u => u.Name == "Karmel"' TimeSpan.FromSeconds(60)));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseIfNodeFails,The following statement contains a magic number: var members = await WaitForValueAsync(async () => await GetMembersCount(store' databaseName)' 2' 30_000);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseIfNodeFails,The following statement contains a magic number: Assert.Equal(2' members);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseOnMultiFailure,The following statement contains a magic number: var clusterSize = 5;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseOnMultiFailure,The following statement contains a magic number: var dbGroupSize = 3;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseOnMultiFailure,The following statement contains a magic number: await WaitForRaftIndexToBeAppliedInCluster(databaseResult.RaftCommandIndex' TimeSpan.FromSeconds(10));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseOnMultiFailure,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(doc.Topology' databaseName' "users/1"' u => u.Name == "Karmel"' TimeSpan.FromSeconds(5)));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseOnMultiFailure,The following statement contains a magic number: DisposeServerAndWaitForFinishOfDisposal(Servers[2]);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseOnMultiFailure,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(newTopology' databaseName' "users/1"' u => u.Name == "Karmel"' TimeSpan.FromSeconds(60)));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseOnMultiFailure,The following statement contains a magic number: var members = await WaitForValueAsync(async () => await GetMembersCount(store' databaseName)' 3' 30_000);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RedistributeDatabaseOnMultiFailure,The following statement contains a magic number: Assert.Equal(3' members);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RemoveNodeFromClusterWhileDeletion,The following statement contains a magic number: var leader = await CreateRaftClusterAndGetLeader(3' leaderIndex: 0);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RemoveNodeFromClusterWhileDeletion,The following statement contains a magic number: var (index' dbGroupNodes) = await CreateDatabaseInCluster(databaseName' 3' leader.WebUrl);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RemoveNodeFromClusterWhileDeletion,The following statement contains a magic number: await WaitForRaftIndexToBeAppliedInCluster(index' TimeSpan.FromSeconds(30));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RemoveNodeFromClusterWhileDeletion,The following statement contains a magic number: Assert.Equal(3' dbToplogy.Count);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: var leader = await CreateRaftClusterAndGetLeader(3' shouldRunInMemory: false' customSettings: settings);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: var (index' dbGroupNodes) = await CreateDatabaseInCluster(new DatabaseRecord                  {                      DatabaseName = databaseName'                      Topology = topology                  }' 2' leader.WebUrl);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: await WaitForRaftIndexToBeAppliedInCluster(index' TimeSpan.FromSeconds(30));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.Equal(2' dbToplogy.AllNodes.Count());
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(topology' databaseName' "users/1"' null' TimeSpan.FromSeconds(30)));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(10));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.Equal(2' await WaitForValueAsync(async () => await GetMembersCount(leaderStore' databaseName)' 2));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.Equal(2' await WaitForValueAsync(async () => await GetMembersCount(leaderStore' databaseName)' 2));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(new DatabaseTopology                  {                      Members = new List<string> { "A"' "B" }                  }' databaseName' "users/3"' null' TimeSpan.FromSeconds(10)));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Servers[2] = GetNewServer(new ServerCreationOptions                  {                      CustomSettings = settings'                      RunInMemory = false'                      DeletePrevious = false'                      PartialPath = dataDirC'                      BeforeDatabasesStartup = (server) =>                      {                          while (server.LoadDatabaseTopology(databaseName).Rehabs.Contains("C") == false)                          {                              Thread.Sleep(100);                          }                          mre.Set();                      }                  });
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Servers[2] = GetNewServer(new ServerCreationOptions                  {                      CustomSettings = settings'                      RunInMemory = false'                      DeletePrevious = false'                      PartialPath = dataDirC'                      BeforeDatabasesStartup = (server) =>                      {                          while (server.LoadDatabaseTopology(databaseName).Rehabs.Contains("C") == false)                          {                              Thread.Sleep(100);                          }                          mre.Set();                      }                  });
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: mre.Wait(TimeSpan.FromSeconds(30)) == false
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.Equal(2' await WaitForValueAsync(async () => await GetMembersCount(leaderStore' databaseName)' 2));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.Equal(2' await WaitForValueAsync(async () => await GetMembersCount(leaderStore' databaseName)' 2));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(dbToplogy' databaseName' "users/3"' null' TimeSpan.FromSeconds(10)));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.Equal(2' dbToplogy.AllNodes.Count());
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.Equal(2' dbToplogy.Members.Count);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(dbToplogy' databaseName' "users/1"' null' TimeSpan.FromSeconds(10)));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(dbToplogy' databaseName' "users/3"' null' TimeSpan.FromSeconds(10)));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(dbToplogy' databaseName' "users/2"' null' TimeSpan.FromSeconds(30)));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.Equal(2' dbToplogy.AllNodes.Count());
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,DontRemoveNodeWhileItHasNotReplicatedDocs,The following statement contains a magic number: Assert.Equal(2' dbToplogy.Members.Count);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,Promote_immedtialty_should_work,The following statement contains a magic number: var leader = await CreateRaftClusterAndGetLeader(3);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,Promote_immedtialty_should_work,The following statement contains a magic number: var (index' dbGroupNodes) = await CreateDatabaseInCluster(databaseName' 2' leader.WebUrl);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,Promote_immedtialty_should_work,The following statement contains a magic number: await WaitForRaftIndexToBeAppliedInCluster(index' TimeSpan.FromSeconds(30));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,Promote_immedtialty_should_work,The following statement contains a magic number: Assert.Equal(2' dbToplogy.AllNodes.Count());
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,Promote_immedtialty_should_work,The following statement contains a magic number: Assert.Equal(3' dbToplogy.AllNodes.Count());
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,Promote_immedtialty_should_work,The following statement contains a magic number: Assert.Equal(3' dbToplogy.AllNodes.Count());
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ChangeUrlOfSingleNodeCluster,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(5));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ChangeUrlOfMultiNodeCluster,The following statement contains a magic number: var fromSeconds = TimeSpan.FromSeconds(8);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ChangeUrlOfMultiNodeCluster,The following statement contains a magic number: var groupSize = 3;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ChangeUrlOfMultiNodeCluster,The following statement contains a magic number: Assert.Equal(3' WaitForValue(() => leader.ServerStore.GetClusterTopology().Members.Count' 3));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ChangeUrlOfMultiNodeCluster,The following statement contains a magic number: Assert.Equal(3' WaitForValue(() => leader.ServerStore.GetClusterTopology().Members.Count' 3));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RavenDB_12744,The following statement contains a magic number: var leader = await CreateRaftClusterAndGetLeader(3);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RavenDB_12744,The following statement contains a magic number: var val = await WaitForValueAsync(async () => await GetMembersCount(store' databaseName)' 2);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RavenDB_12744,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RavenDB_12744,The following statement contains a magic number: val = await WaitForValueAsync(async () => await GetMembersCount(store' databaseName)' 3);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,RavenDB_12744,The following statement contains a magic number: Assert.Equal(3' val);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,OutOfCpuCreditShouldMoveToRehab,The following statement contains a magic number: var cluster = await CreateRaftCluster(3);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,OutOfCpuCreditShouldMoveToRehab,The following statement contains a magic number: var members = await WaitForValueAsync(async () => await GetMembersCount(store' store.Database)' 3);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,OutOfCpuCreditShouldMoveToRehab,The following statement contains a magic number: Assert.Equal(3' members);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ReduceChangeVectorWhenRemovingNode,The following statement contains a magic number: var cluster = await CreateRaftCluster(3);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ReduceChangeVectorWhenRemovingNode,The following statement contains a magic number: await WaitForDocumentInClusterAsync<User>(store.GetRequestExecutor().TopologyNodes' "foo.bar"' null' TimeSpan.FromSeconds(10));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ReduceChangeVectorWhenRemovingNode,The following statement contains a magic number: Assert.Equal(3' session.Advanced.GetChangeVectorFor(user).ToChangeVectorList().Count);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,ReduceChangeVectorWhenRemovingNode,The following statement contains a magic number: Assert.Equal(2' session.Advanced.GetChangeVectorFor(user).ToChangeVectorList().Count);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,HandleConflictShouldTakeUnusedDatabasesIntoAccount,The following statement contains a magic number: var cluster = await CreateRaftCluster(3);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,HandleConflictShouldTakeUnusedDatabasesIntoAccount,The following statement contains a magic number: await CreateDatabaseInCluster(database' 3' cluster.Leader.WebUrl);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,HandleConflictShouldTakeUnusedDatabasesIntoAccount,The following statement contains a magic number: using var store3 = new DocumentStore              {                  Database = database'                  Urls = new[] { cluster.Nodes[2].WebUrl }'                  Conventions = new DocumentConventions                  {                      DisableTopologyUpdates = true                  }              }.Initialize();
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,HandleConflictShouldTakeUnusedDatabasesIntoAccount,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(replicas: 2);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,HandleConflictShouldTakeUnusedDatabasesIntoAccount,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(replicas: 2);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,HandleConflictShouldTakeUnusedDatabasesIntoAccount,The following statement contains a magic number: await store2.Maintenance.Server.SendAsync(new DeleteDatabasesOperation(database' hardDelete: true' fromNode: cluster.Nodes[1].ServerStore.NodeTag' timeToWaitForConfirmation: TimeSpan.FromSeconds(15)));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,HandleConflictShouldTakeUnusedDatabasesIntoAccount,The following statement contains a magic number: await Task.Delay(3000);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,WaitBreakdownTimeBeforeReplacing,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,WaitBreakdownTimeBeforeReplacing,The following statement contains a magic number: var doc = new DatabaseRecord(name)                  {                      Topology = new DatabaseTopology                      {                          Members = new List<string>                          {                              "A"'                              "B"                          }'                          ReplicationFactor = 2'                          DynamicNodesDistribution = true                      }                  };
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,WaitBreakdownTimeBeforeReplacing,The following statement contains a magic number: var databaseResult = await store.Maintenance.Server.SendAsync(new CreateDatabaseOperation(doc' 2));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,WaitBreakdownTimeBeforeReplacing,The following statement contains a magic number: Assert.Equal(2' databaseResult.Topology.Members.Count);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,WaitBreakdownTimeBeforeReplacing,The following statement contains a magic number: Assert.Equal(2' members);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,WaitMoveToRehabGraceTime,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,WaitMoveToRehabGraceTime,The following statement contains a magic number: var doc = new DatabaseRecord(name)                  {                      Topology = new DatabaseTopology                      {                          Members = new List<string>                          {                              "A"'                              "B"                          }'                          ReplicationFactor = 2'                      }                  };
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,WaitMoveToRehabGraceTime,The following statement contains a magic number: var databaseResult = await store.Maintenance.Server.SendAsync(new CreateDatabaseOperation(doc' 2));
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,WaitMoveToRehabGraceTime,The following statement contains a magic number: Assert.Equal(2' databaseResult.Topology.Members.Count);
Magic Number,RachisTests.DatabaseCluster,ClusterDatabaseMaintenance,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ClusterDatabaseMaintenance.cs,WaitMoveToRehabGraceTime,The following statement contains a magic number: Assert.Equal(2' members);
Magic Number,RachisTests.DatabaseCluster,EtlFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\EtlFailover.cs,ReplicateFromSingleSource,The following statement contains a magic number: var srcRaft = await CreateRaftClusterAndGetLeader(3);
Magic Number,RachisTests.DatabaseCluster,EtlFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\EtlFailover.cs,ReplicateFromSingleSource,The following statement contains a magic number: var srcNodes = await CreateDatabaseInCluster(srcDb' 3' srcRaft.WebUrl);
Magic Number,RachisTests.DatabaseCluster,EtlFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\EtlFailover.cs,ReplicateFromSingleSource,The following statement contains a magic number: var config = new RavenEtlConfiguration()                  {                      Name = connectionStringName'                      ConnectionStringName = connectionStringName'                      Transforms =                      {                          new Transformation                          {                              Name = $"ETL : {connectionStringName}"'                              Collections = new List<string>(new[] {"Users"})'                              Script = null'                              ApplyToAllDocuments = false'                              Disabled = false                          }                      }'                      LoadRequestTimeoutInSec = 30'                      MentorNode = "B"                  };
Magic Number,RachisTests.DatabaseCluster,EtlFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\EtlFailover.cs,EtlDestinationFailoverBetweenNodesWithinSameCluster,The following statement contains a magic number: var srcRaft = await CreateRaftClusterAndGetLeader(3' leaderIndex: 0);
Magic Number,RachisTests.DatabaseCluster,EtlFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\EtlFailover.cs,EtlDestinationFailoverBetweenNodesWithinSameCluster,The following statement contains a magic number: var dstRaft = await CreateRaftClusterAndGetLeader(3);
Magic Number,RachisTests.DatabaseCluster,EtlFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\EtlFailover.cs,EtlDestinationFailoverBetweenNodesWithinSameCluster,The following statement contains a magic number: var srcNodes = await CreateDatabaseInCluster(srcDb' 3' srcRaft.WebUrl);
Magic Number,RachisTests.DatabaseCluster,EtlFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\EtlFailover.cs,EtlDestinationFailoverBetweenNodesWithinSameCluster,The following statement contains a magic number: var destNode = await CreateDatabaseInCluster(dstDb' 3' dstRaft.WebUrl);
Magic Number,RachisTests.DatabaseCluster,EtlFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\EtlFailover.cs,EtlDestinationFailoverBetweenNodesWithinSameCluster,The following statement contains a magic number: var conflig = new RavenEtlConfiguration()                  {                      Name = connectionStringName'                      ConnectionStringName = connectionStringName'                      Transforms =                      {                          new Transformation                          {                              Name = $"ETL : {connectionStringName}"'                              Collections = new List<string>(new[] { "Users" })'                              Script = null'                              ApplyToAllDocuments = false'                              Disabled = false                          }                      }'                      LoadRequestTimeoutInSec = 10'                      MentorNode = myTag                  };
Magic Number,RachisTests.DatabaseCluster,EtlFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\EtlFailover.cs,WillWorkAfterResponsibleNodeRestart_RavenDB_13237,The following statement contains a magic number: var srcRaft = await CreateRaftClusterAndGetLeader(3' shouldRunInMemory: false);
Magic Number,RachisTests.DatabaseCluster,EtlFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\EtlFailover.cs,WillWorkAfterResponsibleNodeRestart_RavenDB_13237,The following statement contains a magic number: var srcNodes = await CreateDatabaseInCluster(srcDb' 2' srcRaft.WebUrl);
Magic Number,RachisTests.DatabaseCluster,EtlFailover,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\EtlFailover.cs,WillWorkAfterResponsibleNodeRestart_RavenDB_13237,The following statement contains a magic number: var config = new RavenEtlConfiguration()                  {                      Name = name'                      ConnectionStringName = name'                      Transforms =                      {                          new Transformation                          {                              Name = $"ETL : {name}"'                              Collections = new List<string>(new[] {"Users"})'                              Script = null'                              ApplyToAllDocuments = false'                              Disabled = false      }                      }'                      LoadRequestTimeoutInSec = 30'                  };
Magic Number,RachisTests.DatabaseCluster,OngoingTasks,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\OngoingTasks.cs,CanGetTaskInfo,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,OngoingTasks,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\OngoingTasks.cs,CanGetTaskInfoByName,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,OngoingTasks,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\OngoingTasks.cs,CanToggleTaskState,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,RemovedNodeChangeReplicationFactor,The following statement contains a magic number: await RemoveNodeWithDatabase(dbName' 5' 5);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,RemovedNodeChangeReplicationFactor,The following statement contains a magic number: await RemoveNodeWithDatabase(dbName' 5' 5);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithDatabases,The following statement contains a magic number: var removed = await RemoveNodeWithDatabase(dbName' 5' 5);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithDatabases,The following statement contains a magic number: var removed = await RemoveNodeWithDatabase(dbName' 5' 5);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithDatabases,The following statement contains a magic number: Assert.Equal(5' record.Topology.Count);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithDatabases,The following statement contains a magic number: Assert.Equal(5' record.Topology.ReplicationFactor);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithDatabases,The following statement contains a magic number: Assert.True(await removed.ServerStore.WaitForState(RachisState.Follower' CancellationToken.None).WaitAsync(TimeSpan.FromSeconds(30))'                      "Removed node wasn't reconnected with the cluster.");
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithDatabases,The following statement contains a magic number: Assert.Equal(4' record.Topology.Count);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithDatabases,The following statement contains a magic number: Assert.Equal(4' record.Topology.ReplicationFactor);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithDatabases,The following statement contains a magic number: Assert.Equal(4' record.Topology.Count);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithDatabases,The following statement contains a magic number: Assert.Equal(4' record.Topology.ReplicationFactor);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,BootstrapRemovedNode,The following statement contains a magic number: var removed = await RemoveNodeWithDatabase(dbName' 5' 5);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,BootstrapRemovedNode,The following statement contains a magic number: var removed = await RemoveNodeWithDatabase(dbName' 5' 5);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,BootstrapRemovedNode,The following statement contains a magic number: Assert.Equal(5' record.Topology.Count);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,BootstrapRemovedNode,The following statement contains a magic number: Assert.Equal(5' record.Topology.ReplicationFactor);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,HardResetToNewClusterTest,The following statement contains a magic number: var cluster = await CreateRaftCluster(2);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,HardResetToNewClusterTest,The following statement contains a magic number: await CreateDatabaseInCluster(dbName' 2' cluster.Leader.WebUrl);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,HardResetToNewClusterTest,The following statement contains a magic number: await CreateDatabaseInCluster(dbName2' 2' cluster.Leader.WebUrl);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,HardResetToPassive,The following statement contains a magic number: var cluster = await CreateRaftCluster(2);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,HardResetToPassive,The following statement contains a magic number: await CreateDatabaseInCluster(dbName' 2' cluster.Leader.WebUrl);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,HardResetToPassive,The following statement contains a magic number: await CreateDatabaseInCluster(dbName2' 2' cluster.Leader.WebUrl);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,RetainDatabasesAfterRemovingLastNodeFromCluster,The following statement contains a magic number: var cluster = await CreateRaftCluster(2' shouldRunInMemory: false);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,DontKickFromClusterOnElectionTimeoutMismatch,The following statement contains a magic number: var cluster = await CreateRaftCluster(2' shouldRunInMemory: false);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,DontKickFromClusterOnElectionTimeoutMismatch,The following statement contains a magic number: cluster.Nodes[0] = GetNewServer(new ServerCreationOptions              {                  DeletePrevious = false'                  RunInMemory = false'                  PartialPath = result.DataDir'                  CustomSettings = new Dictionary<string' string>                  {                      [RavenConfiguration.GetKey(x => x.Core.ServerUrls)] = result.Url'                      [RavenConfiguration.GetKey(x => x.Cluster.ElectionTimeout)] = 600.ToString()'                  }              });
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,DontKickFromClusterOnElectionTimeoutMismatch,The following statement contains a magic number: cluster.Nodes[1] = GetNewServer(new ServerCreationOptions              {                  DeletePrevious = false'                  RunInMemory = false'                  PartialPath = result.DataDir'                  CustomSettings = new Dictionary<string' string>                  {                      [RavenConfiguration.GetKey(x => x.Core.ServerUrls)] = result.Url'                      [RavenConfiguration.GetKey(x => x.Cluster.ElectionTimeout)] = 600.ToString()'                  }              });
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithOneDatabase,The following statement contains a magic number: var removed = await RemoveNodeWithDatabase(dbName' 5' 1);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,ReconnectRemovedNodeWithOneDatabase,The following statement contains a magic number: Assert.True(await removed.ServerStore.WaitForState(RachisState.Follower' CancellationToken.None).WaitAsync(TimeSpan.FromSeconds(30))'                      "Removed node wasn't reconnected with the cluster.");
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,BootstrapRemovedNodeWithOneDatabase,The following statement contains a magic number: var removed = await RemoveNodeWithDatabase(dbName' 5' 1);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,RemovedLeaderCauseReelection,The following statement contains a magic number: Assert.True(await Task.WhenAny(followerTasks).WaitAsync(TimeSpan.FromSeconds(30)));
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,RemoveNodeWithDatabase,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(TimeSpan.FromSeconds(30)' replicas: replicationFactor - 1);
Magic Number,RachisTests.DatabaseCluster,RemoveNodeFromCluster,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\RemoveNodeFromCluster.cs,RemoveNodeWithDatabase,The following statement contains a magic number: Assert.True(await removed.ServerStore.WaitForState(RachisState.Passive' CancellationToken.None).WaitAsync(TimeSpan.FromSeconds(30))'                      $"Removed node wasn't move to passive state ({removed.ServerStore.Engine.CurrentState})");
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,WaitForCommandToApply,The following statement contains a magic number: var clusterSize = 5;
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,EnsureDocumentsReplication,The following statement contains a magic number: var clusterSize = 5;
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,EnsureDocumentsReplication,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      databaseResult.Topology'                      databaseName'                      "users/1"'                      u => u.Name.Equals("Karmel")'                      TimeSpan.FromSeconds(60)'                      certificate: clientCertificate));
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,EnsureReplicationToWatchers,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,EnsureReplicationToWatchers,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      databaseResult.Topology'                      databaseName'                      "users/1"'                      u => u.Name.Equals("Karmel")'                      TimeSpan.FromSeconds(60)'                      adminCertificate));
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,EnsureReplicationToWatchers,The following statement contains a magic number: i < 5
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,EnsureReplicationToWatchers,The following statement contains a magic number: Assert.Equal(5' count);
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,WaitForReplicaitonShouldWaitOnlyForInternalNodes,The following statement contains a magic number: var clusterSize = 5;
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,WaitForReplicaitonShouldWaitOnlyForInternalNodes,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(TimeSpan.FromSeconds(clusterSize + 15)' true' clusterSize - 1);
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,SetMentorToExternalReplication,The following statement contains a magic number: var clusterSize = 5;
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,SetMentorToExternalReplication,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      databaseResult.Topology'                      databaseName'                      "users/1"'                      u => u.Name.Equals("Karmel")'                      TimeSpan.FromSeconds(clusterSize + 5)));
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,SetMentorToExternalReplication,The following statement contains a magic number: i < 5
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,CanAddAndModifySingleWatcher,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,CanAddAndModifySingleWatcher,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      databaseResult.Topology'                      databaseName'                      "users/1"'                      u => u.Name.Equals("Karmel")'                      TimeSpan.FromSeconds(clusterSize + 5)));
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,DoNotReplicateBack,The following statement contains a magic number: var clusterSize = 5;
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,DoNotReplicateBack,The following statement contains a magic number: await WaitForValueOnGroupAsync(topology' s =>                 {                     var db = s.DatabasesLandlord.TryGetOrCreateResourceStore(databaseName).Result;                     return db.ReplicationLoader?.OutgoingConnections.Count();                 }' clusterSize - 1' 60000);
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,DoNotReplicateBack,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                      databaseResult.Topology'                      databaseName'                      "users/1"'                      u => u.Name.Equals("Karmel")'                      TimeSpan.FromSeconds(60)'                      certificate: adminCertificate));
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,DoNotReplicateBack,The following statement contains a magic number: await Task.Delay(200);
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,AddGlobalChangeVectorToNewDocument,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,AddGlobalChangeVectorToNewDocument,The following statement contains a magic number: Assert.True(await WaitForValueOnGroupAsync(topology' serverStore =>                  {                      var database = serverStore.DatabasesLandlord.TryGetOrCreateResourceStore(databaseName).Result;                        using (database.DocumentsStorage.ContextPool.AllocateOperationContext(out DocumentsOperationContext context))                      using (context.OpenReadTransaction())                      {                          var cv = DocumentsStorage.GetDatabaseChangeVector(context);                            return cv != null && cv.Contains("A:1-") && cv.Contains("B:1-") && cv.Contains("C:1-");                      }                  }' expected: true' timeout: 60000));
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,ExternalReplicationFailover,The following statement contains a magic number: var clusterSize = 3;
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,ExternalReplicationFailover,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(timeout: TimeSpan.FromSeconds(30)' replicas: clusterSize - 1);
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,ExternalReplicationFailover,The following statement contains a magic number: Assert.True(await WaitForDocumentInClusterAsync<User>(                              dstSession as DocumentSession'                              "users/1"'                              u => u.Name.Equals("Karmel")'                              TimeSpan.FromSeconds(60)));
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,ExternalReplicationFailover,The following statement contains a magic number: session.Advanced.WaitForReplicationAfterSaveChanges(timeout: TimeSpan.FromSeconds(30)' replicas: clusterSize - 1);
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,RavenDB_14284,The following statement contains a magic number: await WaitForValueAsync(() =>                  {                      foreach (var handler in database.ReplicationLoader.OutgoingHandlers)                      {                          handlers.Add(handler);                      }                        return handlers.Count;                  }' 2);
Magic Number,RachisTests.DatabaseCluster,ReplicationTests,C:\research\architectureSmells\repos\ravendb_ravendb\test\RachisTests\DatabaseCluster\ReplicationTests.cs,RavenDB_14284,The following statement contains a magic number: Assert.Equal(2' handlers.Count);
