Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NDesk.Options,Option,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 9
Complex Method,NDesk.Options,OptionSet,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,WriteOptionDescriptions,Cyclomatic complexity of the method is 12
Complex Method,NDesk.Options,OptionSet,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Complex Method,Raven.Debug,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Debug\Program.cs,ShowStackTrace,Cyclomatic complexity of the method is 9
Long Parameter List,NDesk.Options,OptionSet,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Long Parameter List,NDesk.Options,ActionOption,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,ActionOption,The method has 5 parameters. Parameters: prototype' category' description' count' action
Long Statement,NDesk.Options,OptionSet,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,CheckCategory,The length of the statement  "            else if (p.Category.HasFlag(currentCategory) || currentCategory.HasFlag(p.Category) || p.Category == OptionCategory.None) " is 121.
Long Statement,NDesk.Options,OptionSet,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,CheckCategory,The length of the statement  "                OnWarning(string.Format("Cannot use options from different category. Current category: '{0}'. Invalid option: '{1}' from category '{2}'. Using option from different category might cause unpredictable actions."' category' f + n' p.Category)); " is 241.
Long Statement,NDesk.Options,OptionSet,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,WriteOptionDescriptions,The length of the statement  "                if (currentCategory.HasFlag(key) == false && currentCategory != OptionCategory.None && currentCategory != OptionCategory.Help && key != OptionCategory.Help && key != OptionCategory.None) " is 186.
Long Statement,Raven.Debug,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Debug\Program.cs,Main,The length of the statement  "                {"attachTimeout="' OptionCategory.General' "Attaching to process timeout in miliseconds. Default 15000."' timeout => attachTimeout = uint.Parse(timeout)}' " is 154.
Long Statement,Raven.Debug,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Debug\Program.cs,Main,The length of the statement  "                {"stacktrace"' OptionCategory.General' "Print stacktraces of the attached process."' x => actionToTake = () => ShowStackTrace(processId' attachTimeout' outputFilePath)} " is 168.
Complex Conditional,NDesk.Options,Option,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,Option,The conditional expression  "Array.IndexOf(names' "<>") >= 0 &&                      ((names.Length == 1 && this.type != OptionValueType.None) ||                       (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,NDesk.Options,OptionSet,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n[n.Length - 1] == '+' || n[n.Length - 1] == '-') &&                      Contains((rn = n.Substring(0' n.Length - 1)))"  is complex.
Complex Conditional,NDesk.Options,OptionSet,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,WriteOptionDescriptions,The conditional expression  "currentCategory.HasFlag(key) == false && currentCategory != OptionCategory.None && currentCategory != OptionCategory.Help && key != OptionCategory.Help && key != OptionCategory.None"  is complex.
Magic Number,NDesk.Options,OptionSet,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption(prototype' category' description' 2' v => action(v[0]' v[1]));
Magic Number,NDesk.Options,OptionSet,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: foreach (var key in results.Keys)              {                  if (currentCategory.HasFlag(key) == false && currentCategory != OptionCategory.None && currentCategory != OptionCategory.Help && key != OptionCategory.Help && key != OptionCategory.None)                      continue;                    var options = results[key];                  if (options.Count == 0)                      continue;                    o.WriteLine();                  o.WriteLine("----------------------------------------------");                  o.WriteLine(GetDescription(key));                  o.WriteLine("----------------------------------------------");                  o.WriteLine();                    foreach (Option p in options)                  {                      int written = 0;                      if (!WriteOptionPrototype(o' p' ref written))                          continue;                        if (written < OptionWidth)                          o.Write(new string(' '' OptionWidth - written));                      else                      {                          o.WriteLine();                          o.Write(new string(' '' OptionWidth));                      }                        List<string> lines = GetLines(localizer(GetDescription(p.Description)));                      o.WriteLine(lines[0]);                      string prefix = new string(' '' OptionWidth + 2);                      for (int i = 1; i < lines.Count; ++i)                      {                          o.Write(prefix);                          o.WriteLine(lines[i]);                      }                  }              }
Magic Number,NDesk.Options,OptionSet,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Magic Number,NDesk.Options,OptionSet,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Magic Number,Raven.Debug,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Debug\Program.cs,Main,The following statement contains a magic number: uint attachTimeout = 15000;
Magic Number,Raven.Debug,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Debug\Program.cs,Main,The following statement contains a magic number: try              {                  if (args.Length == 0)                  {                      PrintUsage(optionSet);                      return -2;                  }                    optionSet.Parse(args);              }              catch (Exception e)              {                  Console.Error.WriteLine(e.Message);                  PrintUsage(optionSet);                  return -2;              }
Magic Number,Raven.Debug,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Debug\Program.cs,Main,The following statement contains a magic number: try              {                  if (args.Length == 0)                  {                      PrintUsage(optionSet);                      return -2;                  }                    optionSet.Parse(args);              }              catch (Exception e)              {                  Console.Error.WriteLine(e.Message);                  PrintUsage(optionSet);                  return -2;              }
Magic Number,Raven.Debug,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Debug\Program.cs,ShowStackTrace,The following statement contains a magic number: using (DataTarget dataTarget = DataTarget.AttachToProcess(processId' attachTimeout))              {                  var clrInfo = dataTarget.ClrVersions[0];                  var runtime = clrInfo.CreateRuntime();                  var control = (IDebugControl)dataTarget.DebuggerInterface;                  var sysObjs = (IDebugSystemObjects)dataTarget.DebuggerInterface;                  var nativeFrames = new DEBUG_STACK_FRAME[100];                  var sybSymbols = (IDebugSymbols)dataTarget.DebuggerInterface;                    var sb = new StringBuilder(1024 * 1024);                    foreach (ClrThread thread in runtime.Threads)                  {                        var threadInfo = new ThreadInfo                      {                          OSThreadId = thread.OSThreadId                      };                        if (thread.StackTrace.Count > 0)                      {                          foreach (ClrStackFrame frame in thread.StackTrace)                          {                              if (frame.DisplayString.Equals("GCFrame") || frame.DisplayString.Equals("DebuggerU2MCatchHandlerFrame"))                                  continue;                                threadInfo.StackTrace.Add(frame.DisplayString);                          }                      }                      else                      {                          threadInfo.IsNative = true;                            sysObjs.SetCurrentThreadId(threadInfo.OSThreadId);                            uint frameCount;                          control.GetStackTrace(0' 0' 0' nativeFrames' 100' out frameCount);                            for (int i = 0; i < frameCount; i++)                          {                              uint nameSize;                              ulong dis;                                sb.Clear();                              sybSymbols.GetNameByOffset(nativeFrames[i].InstructionOffset' sb' sb.Capacity' out nameSize' out dis);                                threadInfo.StackTrace.Add(sb.ToString());                          }                      }                        threadInfoList.Add(threadInfo);                  }              }
Magic Number,Raven.Debug,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Debug\Program.cs,ShowStackTrace,The following statement contains a magic number: using (DataTarget dataTarget = DataTarget.AttachToProcess(processId' attachTimeout))              {                  var clrInfo = dataTarget.ClrVersions[0];                  var runtime = clrInfo.CreateRuntime();                  var control = (IDebugControl)dataTarget.DebuggerInterface;                  var sysObjs = (IDebugSystemObjects)dataTarget.DebuggerInterface;                  var nativeFrames = new DEBUG_STACK_FRAME[100];                  var sybSymbols = (IDebugSymbols)dataTarget.DebuggerInterface;                    var sb = new StringBuilder(1024 * 1024);                    foreach (ClrThread thread in runtime.Threads)                  {                        var threadInfo = new ThreadInfo                      {                          OSThreadId = thread.OSThreadId                      };                        if (thread.StackTrace.Count > 0)                      {                          foreach (ClrStackFrame frame in thread.StackTrace)                          {                              if (frame.DisplayString.Equals("GCFrame") || frame.DisplayString.Equals("DebuggerU2MCatchHandlerFrame"))                                  continue;                                threadInfo.StackTrace.Add(frame.DisplayString);                          }                      }                      else                      {                          threadInfo.IsNative = true;                            sysObjs.SetCurrentThreadId(threadInfo.OSThreadId);                            uint frameCount;                          control.GetStackTrace(0' 0' 0' nativeFrames' 100' out frameCount);                            for (int i = 0; i < frameCount; i++)                          {                              uint nameSize;                              ulong dis;                                sb.Clear();                              sybSymbols.GetNameByOffset(nativeFrames[i].InstructionOffset' sb' sb.Capacity' out nameSize' out dis);                                threadInfo.StackTrace.Add(sb.ToString());                          }                      }                        threadInfoList.Add(threadInfo);                  }              }
Magic Number,Raven.Debug,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Debug\Program.cs,ShowStackTrace,The following statement contains a magic number: using (DataTarget dataTarget = DataTarget.AttachToProcess(processId' attachTimeout))              {                  var clrInfo = dataTarget.ClrVersions[0];                  var runtime = clrInfo.CreateRuntime();                  var control = (IDebugControl)dataTarget.DebuggerInterface;                  var sysObjs = (IDebugSystemObjects)dataTarget.DebuggerInterface;                  var nativeFrames = new DEBUG_STACK_FRAME[100];                  var sybSymbols = (IDebugSymbols)dataTarget.DebuggerInterface;                    var sb = new StringBuilder(1024 * 1024);                    foreach (ClrThread thread in runtime.Threads)                  {                        var threadInfo = new ThreadInfo                      {                          OSThreadId = thread.OSThreadId                      };                        if (thread.StackTrace.Count > 0)                      {                          foreach (ClrStackFrame frame in thread.StackTrace)                          {                              if (frame.DisplayString.Equals("GCFrame") || frame.DisplayString.Equals("DebuggerU2MCatchHandlerFrame"))                                  continue;                                threadInfo.StackTrace.Add(frame.DisplayString);                          }                      }                      else                      {                          threadInfo.IsNative = true;                            sysObjs.SetCurrentThreadId(threadInfo.OSThreadId);                            uint frameCount;                          control.GetStackTrace(0' 0' 0' nativeFrames' 100' out frameCount);                            for (int i = 0; i < frameCount; i++)                          {                              uint nameSize;                              ulong dis;                                sb.Clear();                              sybSymbols.GetNameByOffset(nativeFrames[i].InstructionOffset' sb' sb.Capacity' out nameSize' out dis);                                threadInfo.StackTrace.Add(sb.ToString());                          }                      }                        threadInfoList.Add(threadInfo);                  }              }
Magic Number,Raven.Debug,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Debug\Program.cs,ShowStackTrace,The following statement contains a magic number: using (DataTarget dataTarget = DataTarget.AttachToProcess(processId' attachTimeout))              {                  var clrInfo = dataTarget.ClrVersions[0];                  var runtime = clrInfo.CreateRuntime();                  var control = (IDebugControl)dataTarget.DebuggerInterface;                  var sysObjs = (IDebugSystemObjects)dataTarget.DebuggerInterface;                  var nativeFrames = new DEBUG_STACK_FRAME[100];                  var sybSymbols = (IDebugSymbols)dataTarget.DebuggerInterface;                    var sb = new StringBuilder(1024 * 1024);                    foreach (ClrThread thread in runtime.Threads)                  {                        var threadInfo = new ThreadInfo                      {                          OSThreadId = thread.OSThreadId                      };                        if (thread.StackTrace.Count > 0)                      {                          foreach (ClrStackFrame frame in thread.StackTrace)                          {                              if (frame.DisplayString.Equals("GCFrame") || frame.DisplayString.Equals("DebuggerU2MCatchHandlerFrame"))                                  continue;                                threadInfo.StackTrace.Add(frame.DisplayString);                          }                      }                      else                      {                          threadInfo.IsNative = true;                            sysObjs.SetCurrentThreadId(threadInfo.OSThreadId);                            uint frameCount;                          control.GetStackTrace(0' 0' 0' nativeFrames' 100' out frameCount);                            for (int i = 0; i < frameCount; i++)                          {                              uint nameSize;                              ulong dis;                                sb.Clear();                              sybSymbols.GetNameByOffset(nativeFrames[i].InstructionOffset' sb' sb.Capacity' out nameSize' out dis);                                threadInfo.StackTrace.Add(sb.ToString());                          }                      }                        threadInfoList.Add(threadInfo);                  }              }
Missing Default,NDesk.Options,OptionSet,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType)                  {                      case OptionValueType.None:                          c.OptionValues.Add(n);                          c.Option.Invoke(c);                          break;                      case OptionValueType.Optional:                      case OptionValueType.Required:                          ParseValue(v' c);                          break;                  }
Missing Default,NDesk.Options,OptionSet,C:\repos\ravendb_ravendb\ToMigrate\Raven.Server\FromMono\Options.cs,GetLineEnd,The following switch statement is missing a default case: switch (description[i])                  {                      case ' ':                      case '\t':                      case '\v':                      case '-':                      case ''':                      case '.':                      case ';':                          sep = i;                          break;                      case '\n':                          return i;                  }
