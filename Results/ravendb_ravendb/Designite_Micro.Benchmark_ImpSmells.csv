Implementation smell,Namespace,Class,File,Method,Description
Long Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The method has 101 lines of code.
Long Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The method has 101 lines of code.
Long Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The method has 104 lines of code.
Long Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The method has 102 lines of code.
Complex Method,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount_Prefetch,Cyclomatic complexity of the method is 12
Complex Method,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount,Cyclomatic complexity of the method is 12
Complex Method,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt3,Cyclomatic complexity of the method is 8
Complex Method,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareOriginal,Cyclomatic complexity of the method is 8
Complex Method,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumerics,Cyclomatic complexity of the method is 10
Complex Method,Micro.Benchmark.Benchmarks.Hardware,NumericsDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff,Cyclomatic complexity of the method is 8
Complex Method,Micro.Benchmark.Benchmarks.Hardware,NumericsDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff2,Cyclomatic complexity of the method is 8
Complex Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffset,Cyclomatic complexity of the method is 8
Complex Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffsetWithRefs,Cyclomatic complexity of the method is 8
Complex Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,Cyclomatic complexity of the method is 11
Complex Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,Cyclomatic complexity of the method is 11
Complex Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,Cyclomatic complexity of the method is 12
Complex Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,Cyclomatic complexity of the method is 12
Complex Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,Cyclomatic complexity of the method is 12
Complex Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,Cyclomatic complexity of the method is 12
Complex Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,Cyclomatic complexity of the method is 12
Complex Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics,Cyclomatic complexity of the method is 8
Complex Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout,Cyclomatic complexity of the method is 8
Complex Method,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch,Cyclomatic complexity of the method is 8
Complex Method,Micro.Benchmark.Benchmarks.Hardware,BinarySearching,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Search.cs,Original_Search,Cyclomatic complexity of the method is 10
Complex Method,Micro.Benchmark.Benchmarks.Hardware,BinarySearching,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Search.cs,Original_WithPrefetch_Search,Cyclomatic complexity of the method is 10
Complex Method,Micro.Benchmark.Benchmarks.LZ4,Lz4Benchmark,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\LZ4\LZ4Benchmark.cs,Setup,Cyclomatic complexity of the method is 10
Complex Method,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetReadOnlyPage,Cyclomatic complexity of the method is 11
Complex Method,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetWritablePage,Cyclomatic complexity of the method is 11
Complex Method,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,Reset,Cyclomatic complexity of the method is 11
Long Parameter List,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,WriteDiffNonZeroes,The method has 5 parameters. Parameters: start' count' modified' output' outputSize
Long Statement,Micro.Benchmark.Benchmarks.Hardware,DiffNonZeroes,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,Naive_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_NonTemporal_Diff,The length of the statement  "            original.ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_NonTemporal_Diff(source' modified' size); " is 121.
Long Statement,Micro.Benchmark.Benchmarks.Hardware,DiffNonZeroes,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch_Sequential,The length of the statement  "            original.ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch(source' modified' size); " is 123.
Long Statement,Micro.Benchmark.Benchmarks.Hardware,DiffNonZeroes,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_NonTemporalRead_Sequential,The length of the statement  "            original.ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_NonTemporalRead(source' modified' size); " is 126.
Long Statement,Micro.Benchmark.Benchmarks.Hardware,DiffNonZeroes,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch_NonTemporalRead_Sequential,The length of the statement  "            original.ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch_NonTemporalRead(source' modified' size); " is 139.
Long Statement,Micro.Benchmark.Benchmarks.Hardware,DiffNonZeroes,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch_Sequential,The length of the statement  "            original.ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch(source' modified' size); " is 128.
Long Statement,Micro.Benchmark.Benchmarks.Hardware,DiffNonZeroes,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch_Sequential,The length of the statement  "            original.ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch(source' modified' size); " is 124.
Long Statement,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffset,The length of the statement  "                    if (o0 != m0 || *(ptr + 1) != *(ptr + offset + 1) || *(ptr + 2) != *(ptr + offset + 2) || *(ptr + 3) != *(ptr + offset + 3)) " is 124.
Long Statement,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffsetWithRefs,The length of the statement  "                    if (o0 != m0 || *(ptr + 1) != *(ptr + offset + 1) || *(ptr + 2) != *(ptr + offset + 2) || *(ptr + 3) != *(ptr + offset + 3)) " is 124.
Long Statement,Micro.Benchmark.Benchmarks.LZ4,Lz4Benchmark,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\LZ4\LZ4Benchmark.cs,Setup,The length of the statement  "                    int compressedSize = Sparrow.Compression.LZ4.Encode64(bufferPtr' _lz4Buffer.Ptr' generatedDataLength' _lz4Buffer.Length); " is 121.
Complex Conditional,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff,The conditional expression  "o0 != m0 || o1 != m1 || o2 != m2 || o3 != m3"  is complex.
Complex Conditional,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffset,The conditional expression  "o0 != m0 || *(ptr + 1) != *(ptr + offset + 1) || *(ptr + 2) != *(ptr + offset + 2) || *(ptr + 3) != *(ptr + offset + 3)"  is complex.
Complex Conditional,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffsetWithRefs,The conditional expression  "o0 != m0 || *(ptr + 1) != *(ptr + offset + 1) || *(ptr + 2) != *(ptr + offset + 2) || *(ptr + 3) != *(ptr + offset + 3)"  is complex.
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAltPopCount,The following statement contains a magic number: size < 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAltPopCount,The following statement contains a magic number: int l = size >> 3;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAltPopCount,The following statement contains a magic number: bpx += 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAltPopCount,The following statement contains a magic number: bpx += 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAltPopCount,The following statement contains a magic number: (size & 2) != 0
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAltPopCount,The following statement contains a magic number: bpx += Popcnt.PopCount((ulong)((long)xor & -(long)xor) - 1) >> 3;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount_Prefetch,The following statement contains a magic number: (size & 7) == 0
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount_Prefetch,The following statement contains a magic number: bpx += 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount_Prefetch,The following statement contains a magic number: (size & 4) != 0
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount_Prefetch,The following statement contains a magic number: bpx += 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount_Prefetch,The following statement contains a magic number: (size & 2) != 0
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount_Prefetch,The following statement contains a magic number: byte* loopEnd = end - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount_Prefetch,The following statement contains a magic number: bpx += 8;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount_Prefetch,The following statement contains a magic number: *((ulong*)(bpx + 8)) != *(ulong*)(bpx + 8 + offset)
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount_Prefetch,The following statement contains a magic number: *((ulong*)(bpx + 8)) != *(ulong*)(bpx + 8 + offset)
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount_Prefetch,The following statement contains a magic number: bpx += 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount_Prefetch,The following statement contains a magic number: bpx += Popcnt.PopCount((ulong)((long)xor & -(long)xor) - 1) >> 3;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount,The following statement contains a magic number: (size & 7) == 0
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount,The following statement contains a magic number: bpx += 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount,The following statement contains a magic number: (size & 4) != 0
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount,The following statement contains a magic number: bpx += 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount,The following statement contains a magic number: (size & 2) != 0
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount,The following statement contains a magic number: byte* loopEnd = end - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount,The following statement contains a magic number: bpx += 8;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount,The following statement contains a magic number: *((ulong*)(bpx + 8)) != *(ulong*)(bpx + 8 + offset)
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount,The following statement contains a magic number: *((ulong*)(bpx + 8)) != *(ulong*)(bpx + 8 + offset)
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount,The following statement contains a magic number: bpx += 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarCmpAltPopCount,The following statement contains a magic number: bpx += Popcnt.PopCount((ulong)((long)xor & -(long)xor) - 1) >> 3;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAltDeBrujain,The following statement contains a magic number: size < 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAltDeBrujain,The following statement contains a magic number: int l = size >> 3;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAltDeBrujain,The following statement contains a magic number: bpx += 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAltDeBrujain,The following statement contains a magic number: bpx += 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAltDeBrujain,The following statement contains a magic number: (size & 2) != 0
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt2,The following statement contains a magic number: size < 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt2,The following statement contains a magic number: int l = size >> 3;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt2,The following statement contains a magic number: size = 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt2,The following statement contains a magic number: bpx += 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt2,The following statement contains a magic number: bpx += 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt2,The following statement contains a magic number: bpx += 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt2,The following statement contains a magic number: (size & 2) != 0
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt3,The following statement contains a magic number: size < 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt3,The following statement contains a magic number: int l = size >> 3;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt3,The following statement contains a magic number: size = 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt3,The following statement contains a magic number: bpx += 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt3,The following statement contains a magic number: bpx += 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt3,The following statement contains a magic number: bpx += 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareScalarAlt3,The following statement contains a magic number: ((byte)size & 2) != 0
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareOriginal,The following statement contains a magic number: last = 8;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareOriginal,The following statement contains a magic number: i < l / 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareOriginal,The following statement contains a magic number: last = 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareOriginal,The following statement contains a magic number: bpx += 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareOriginal,The following statement contains a magic number: bpy += 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareOriginal,The following statement contains a magic number: (l & 4) != 0
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareOriginal,The following statement contains a magic number: last = 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareOriginal,The following statement contains a magic number: bpx += 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareOriginal,The following statement contains a magic number: bpy += 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareOriginal,The following statement contains a magic number: (l & 2) != 0
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumericsAlt,The following statement contains a magic number: byte* currentEnd = end - (size & (32 - 1));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumericsAlt,The following statement contains a magic number: bpx += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumericsAlt,The following statement contains a magic number: bpy += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumericsAlt,The following statement contains a magic number: bpx += 8;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumericsAlt,The following statement contains a magic number: bpy += 8;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumerics,The following statement contains a magic number: size <= 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumerics,The following statement contains a magic number: size > 8 && ((long*)bpx)[0] != ((long*)bpy)[0]
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumerics,The following statement contains a magic number: size > 16 && ((long*)bpx)[1] != ((long*)bpy)[1]
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumerics,The following statement contains a magic number: size > 24 && ((long*)bpx)[2] != ((long*)bpy)[2]
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumerics,The following statement contains a magic number: size > 24 && ((long*)bpx)[2] != ((long*)bpy)[2]
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumerics,The following statement contains a magic number: size > 24 && ((long*)bpx)[2] != ((long*)bpy)[2]
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumerics,The following statement contains a magic number: size == 32 && ((long*)bpx)[3] != ((long*)bpy)[3]
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumerics,The following statement contains a magic number: size == 32 && ((long*)bpx)[3] != ((long*)bpy)[3]
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumerics,The following statement contains a magic number: size == 32 && ((long*)bpx)[3] != ((long*)bpy)[3]
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Compare,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Compare.cs,CompareNumerics,The following statement contains a magic number: size %= 8;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,DiffNonZeroes,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,Setup,The following statement contains a magic number: int start = r.Next(size - 1000);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,DiffNonZeroes,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,Setup,The following statement contains a magic number: int end = start + 256 + r.Next(4096);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,DiffNonZeroes,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,Setup,The following statement contains a magic number: int end = start + 256 + r.Next(4096);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,DiffNonZeroes,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,Setup,The following statement contains a magic number: i < 100
Magic Number,Micro.Benchmark.Benchmarks.Hardware,NumericsDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,NumericsDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff,The following statement contains a magic number: start = i + 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,NumericsDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff,The following statement contains a magic number: start = i + 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,NumericsDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff2,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,NumericsDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff2,The following statement contains a magic number: var m1 = Memory.Read<Vector<long>>(modifiedPtr + 32);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,NumericsDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff2,The following statement contains a magic number: var o1 = Memory.Read<Vector<long>>(originalPtr + 32);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,NumericsDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff2,The following statement contains a magic number: start = i + 64;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,NumericsDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff2,The following statement contains a magic number: start = i + 64;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,NumericsDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,WriteDiffNonZeroes,The following statement contains a magic number: outputSize += sizeof(long) * 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,NumericsDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,WriteDiffAllZeroes,The following statement contains a magic number: OutputSize += sizeof(long) * 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_Diff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_Diff,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_8Bytes_Diff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_8Bytes_Diff,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_8Bytes_Diff,The following statement contains a magic number: writePtrOffset += 8;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_8Bytes_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_8Bytes_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_16Bytes_Diff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_16Bytes_Diff,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_16Bytes_Diff,The following statement contains a magic number: writePtrOffset += 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_16Bytes_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_16Bytes_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_32Bytes_Diff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_32Bytes_Diff,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_32Bytes_Diff,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_32Bytes_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_32Bytes_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_32Bytes_WithPrefetch_Diff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_32Bytes_WithPrefetch_Diff,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_32Bytes_WithPrefetch_Diff,The following statement contains a magic number: Sse.Prefetch0(originalPtr + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_32Bytes_WithPrefetch_Diff,The following statement contains a magic number: Sse.Prefetch0(modifiedPtr + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_32Bytes_WithPrefetch_Diff,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_32Bytes_WithPrefetch_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_32Bytes_WithPrefetch_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_Diff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_Diff,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_Diff,The following statement contains a magic number: Sse.Prefetch0(ptr + 1024);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_Diff,The following statement contains a magic number: Sse.Prefetch0(ptr + offset + 1024);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_Diff,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Alt_Indirect_Diff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Alt_Indirect_Diff,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Alt_Indirect_Diff,The following statement contains a magic number: Sse.Prefetch0(ptr + 1024);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Alt_Indirect_Diff,The following statement contains a magic number: Sse.Prefetch0(ptr + offset + 1024);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Alt_Indirect_Diff,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Alt_Indirect_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Alt_Indirect_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_WholeBlock_Diff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_WholeBlock_Diff,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_WholeBlock_Diff,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_WholeBlock_Diff,The following statement contains a magic number: Sse.Prefetch0(originalPtr + 1024);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_WholeBlock_Diff,The following statement contains a magic number: Sse.Prefetch0(modifiedPtr + 1024);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_WholeBlock_Diff,The following statement contains a magic number: originalPtr += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_WholeBlock_Diff,The following statement contains a magic number: modifiedPtr += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_WholeBlock_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_WholeBlock_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_WholeBlock_Diff,The following statement contains a magic number: writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_WholeBlock_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_WholeBlock_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_Diff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_Diff,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_Diff,The following statement contains a magic number: Sse.Prefetch0(ptr + 1024);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_Diff,The following statement contains a magic number: Sse.Prefetch0(ptr + offset + 1024);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_Diff,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_Diff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_Diff,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_Diff,The following statement contains a magic number: Sse.Prefetch0(ptr + offset + 1024);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_Diff,The following statement contains a magic number: Sse.Prefetch0(ptr + 1024);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_Diff,The following statement contains a magic number: writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_Diff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_Diff,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_Diff,The following statement contains a magic number: Sse.Prefetch0(ptr + offset + 1024);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_Diff,The following statement contains a magic number: Sse.Prefetch0(ptr + 1024);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_Diff,The following statement contains a magic number: ptr += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_Diff,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_Diff,The following statement contains a magic number: writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_Diff,The following statement contains a magic number: *(long*)(writePtr + 0) = ptr - (byte*)originalBuffer - 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_NonTemporal_Diff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_NonTemporal_Diff,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_NonTemporal_Diff,The following statement contains a magic number: ptr += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_NonTemporal_Diff,The following statement contains a magic number: Sse.Prefetch0(ptr + offset + 1024);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_NonTemporal_Diff,The following statement contains a magic number: Sse.Prefetch0(ptr + 1024);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_NonTemporal_Diff,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_NonTemporal_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_NonTemporal_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_NonTemporal_Diff,The following statement contains a magic number: writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_NonTemporal_Diff,The following statement contains a magic number: *(long*)(writePtr + 0) = ptr - (byte*)originalBuffer - 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_NonTemporal_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeWord_32Bytes_WithPrefetch_Indirect_NoCount_StreamedLayout_While_NonTemporal_Diff,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeNaive_CopyBlock_Diff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff,The following statement contains a magic number: long m2 = modifiedPtr[2];
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff,The following statement contains a magic number: long o2 = originalPtr[2];
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff,The following statement contains a magic number: long m3 = modifiedPtr[3];
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff,The following statement contains a magic number: long o3 = originalPtr[3];
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff,The following statement contains a magic number: start = i + 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiff,The following statement contains a magic number: start = i + 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffset,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffset,The following statement contains a magic number: allZeros &= m0 == 0 && *(ptr + offset + 1) == 0 && *(ptr + offset + 2) == 0 && *(ptr + offset + 3) == 0;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffset,The following statement contains a magic number: allZeros &= m0 == 0 && *(ptr + offset + 1) == 0 && *(ptr + offset + 2) == 0 && *(ptr + offset + 3) == 0;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffset,The following statement contains a magic number: o0 != m0 || *(ptr + 1) != *(ptr + offset + 1) || *(ptr + 2) != *(ptr + offset + 2) || *(ptr + 3) != *(ptr + offset + 3)
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffset,The following statement contains a magic number: o0 != m0 || *(ptr + 1) != *(ptr + offset + 1) || *(ptr + 2) != *(ptr + offset + 2) || *(ptr + 3) != *(ptr + offset + 3)
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffset,The following statement contains a magic number: o0 != m0 || *(ptr + 1) != *(ptr + offset + 1) || *(ptr + 2) != *(ptr + offset + 2) || *(ptr + 3) != *(ptr + offset + 3)
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffset,The following statement contains a magic number: o0 != m0 || *(ptr + 1) != *(ptr + offset + 1) || *(ptr + 2) != *(ptr + offset + 2) || *(ptr + 3) != *(ptr + offset + 3)
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffset,The following statement contains a magic number: start = i + 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffset,The following statement contains a magic number: start = i + 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,WriteDiffNonZeroesByte,The following statement contains a magic number: outputSize += sizeof(long) * 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,WriteDiffNonZeroes,The following statement contains a magic number: outputSize += sizeof(long) * 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,WriteDiffAllZeroes,The following statement contains a magic number: OutputSize += sizeof(long) * 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffsetWithRefs,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffsetWithRefs,The following statement contains a magic number: allZeros &= m0 == 0 && *(ptr + offset + 1) == 0 && *(ptr + offset + 2) == 0 && *(ptr + offset + 3) == 0;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffsetWithRefs,The following statement contains a magic number: allZeros &= m0 == 0 && *(ptr + offset + 1) == 0 && *(ptr + offset + 2) == 0 && *(ptr + offset + 3) == 0;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffsetWithRefs,The following statement contains a magic number: o0 != m0 || *(ptr + 1) != *(ptr + offset + 1) || *(ptr + 2) != *(ptr + offset + 2) || *(ptr + 3) != *(ptr + offset + 3)
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffsetWithRefs,The following statement contains a magic number: o0 != m0 || *(ptr + 1) != *(ptr + offset + 1) || *(ptr + 2) != *(ptr + offset + 2) || *(ptr + 3) != *(ptr + offset + 3)
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffsetWithRefs,The following statement contains a magic number: o0 != m0 || *(ptr + 1) != *(ptr + offset + 1) || *(ptr + 2) != *(ptr + offset + 2) || *(ptr + 3) != *(ptr + offset + 3)
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffsetWithRefs,The following statement contains a magic number: o0 != m0 || *(ptr + 1) != *(ptr + offset + 1) || *(ptr + 2) != *(ptr + offset + 2) || *(ptr + 3) != *(ptr + offset + 3)
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffsetWithRefs,The following statement contains a magic number: start = i + 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeDiffPointerOffsetWithRefs,The following statement contains a magic number: start = i + 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,WriteDiffNonZeroes,The following statement contains a magic number: outputSize += sizeof(long) * 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,WriteDiffAllZeroes,The following statement contains a magic number: outputSize += sizeof(long) * 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The following statement contains a magic number: const int pageSize = 4096;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The following statement contains a magic number: const int cacheBlocks = 512;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The following statement contains a magic number: const int packetsCount = cacheBlocks / sizeof(ulong) / 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The following statement contains a magic number: st1 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The following statement contains a magic number: st2 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The following statement contains a magic number: st3 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The following statement contains a magic number: st4 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The following statement contains a magic number: st3 |= *(ptr + 2) == *(ptr + offset + 2) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The following statement contains a magic number: st3 |= *(ptr + 2) == *(ptr + offset + 2) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The following statement contains a magic number: st4 |= *(ptr + 3) == *(ptr + offset + 3) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The following statement contains a magic number: st4 |= *(ptr + 3) == *(ptr + offset + 3) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The following statement contains a magic number: ulong blockBitmap = (st1 << 3) | (st2 << 2) | (st3 << 1) | st4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware,The following statement contains a magic number: ulong blockBitmap = (st1 << 3) | (st2 << 2) | (st3 << 1) | st4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,WriteDiff,The following statement contains a magic number: outputSize += sizeof(long) * 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: const int pageSize = 4096;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: const int cacheBlocks = 512;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: int pages = size >> 12;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: const int packetsCount = cacheBlocks / sizeof(ulong) / 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: st1 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: st2 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: st3 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: st4 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: st3 |= *(ptr + 2) == *(ptr + offset + 2) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: st3 |= *(ptr + 2) == *(ptr + offset + 2) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: st4 |= *(ptr + 3) == *(ptr + offset + 3) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: st4 |= *(ptr + 3) == *(ptr + offset + 3) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: ulong blockBitmap = (st1 << 3) | (st2 << 2) | (st3 << 1) | st4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_MagicMult,The following statement contains a magic number: ulong blockBitmap = (st1 << 3) | (st2 << 2) | (st3 << 1) | st4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,WriteDiff_NoInline,The following statement contains a magic number: outputSize += sizeof(long) * 2;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: const int pageSize = 4096;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: const int cacheBlocks = 512;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: ulong* blockBitmaps = stackalloc ulong[8];
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: const int packetsCount = cacheBlocks / sizeof(ulong) / 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: st1 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: st2 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: st3 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: st4 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: st3 |= *(ptr + 2) == *(ptr + offset + 2) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: st3 |= *(ptr + 2) == *(ptr + offset + 2) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: st4 |= *(ptr + 3) == *(ptr + offset + 3) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: st4 |= *(ptr + 3) == *(ptr + offset + 3) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: blockBitmaps[blockIdx] = (st1 << 3) | (st2 << 2) | (st3 << 1) | st4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: blockBitmaps[blockIdx] = (st1 << 3) | (st2 << 2) | (st3 << 1) | st4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: blockIdx < 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Blocks,The following statement contains a magic number: blockIdx < 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: int pages = size / 4096;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: ulong* blockBitmaps = stackalloc ulong[8];
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: st1 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: st2 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: st3 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: st4 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: st2 |= *(ulong*)(ptr + 8) == *(ulong*)(ptr + offset + 8) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: st2 |= *(ulong*)(ptr + 8) == *(ulong*)(ptr + offset + 8) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: st3 |= *(ulong*)(ptr + 16) == *(ulong*)(ptr + offset + 16) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: st3 |= *(ulong*)(ptr + 16) == *(ulong*)(ptr + offset + 16) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: st4 |= *(ulong*)(ptr + 24) == *(ulong*)(ptr + offset + 24) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: st4 |= *(ulong*)(ptr + 24) == *(ulong*)(ptr + offset + 24) ? 0ul : 1ul;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: blockBitmaps[blockIdx] = (st1 << 3) | (st2 << 2) | (st3 << 1) | st4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: blockBitmaps[blockIdx] = (st1 << 3) | (st2 << 2) | (st3 << 1) | st4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: blockIdx < 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_BlocksInBytes,The following statement contains a magic number: blockIdx < 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,WriteDiff,The following statement contains a magic number: *(long*)(outputPtr + 8) = runLengthInBytes;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,WriteDiff,The following statement contains a magic number: Memory.Copy(outputPtr + 16' srcPtr + (destOffset + startIdx)' (uint)runLengthInBytes);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,WriteDiff,The following statement contains a magic number: OutputSize += runLengthInBytes + 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: int pages = size / 4096;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: ulong* blockBitmaps = stackalloc ulong[8];
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: st1 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: st2 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: st3 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: st4 <<= 4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: st2 |= ToUnsignedLong(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: st2 |= ToUnsignedLong(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: st3 |= ToUnsignedLong(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: st3 |= ToUnsignedLong(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: st4 |= ToUnsignedLong(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: st4 |= ToUnsignedLong(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: blockBitmaps[blockIdx] = (st1 << 3) | (st2 << 2) | (st3 << 1) | st4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: blockBitmaps[blockIdx] = (st1 << 3) | (st2 << 2) | (st3 << 1) | st4;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: blockIdx < 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless,The following statement contains a magic number: blockIdx < 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,The following statement contains a magic number: int pages = size / 4096;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,The following statement contains a magic number: ulong* blockBitmaps = stackalloc ulong[8];
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,The following statement contains a magic number: blockIdx < 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters,The following statement contains a magic number: blockIdx < 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: int pages = size / 4096;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: ulong* blockBitmaps = stackalloc ulong[8];
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: Sse.Prefetch0(blockPtr + 256);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: Sse.Prefetch0(blockPtr + 512);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: Sse.Prefetch0(blockPtr + offset + 256);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: Sse.Prefetch0(blockPtr + offset + 512);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: blockBitmap = blockBitmap << 4 |                                            (ulong)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: blockIdx < 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_Branchless_LessRegisters_WithPrefetching,The following statement contains a magic number: blockIdx < 8
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: int pages = size / 4096;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: long writeEndOffset = size - 128;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                    ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                    ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                    ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: *(ulong*)(writePtr + writePtrOffset + 8) = *(ulong*)(ptr + offset + 8);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: *(ulong*)(writePtr + writePtrOffset + 8) = *(ulong*)(ptr + offset + 8);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: *(ulong*)(writePtr + writePtrOffset + 16) = *(ulong*)(ptr + offset + 16);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: *(ulong*)(writePtr + writePtrOffset + 16) = *(ulong*)(ptr + offset + 16);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: *(ulong*)(writePtr + writePtrOffset + 24) = *(ulong*)(ptr + offset + 24);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: *(ulong*)(writePtr + writePtrOffset + 24) = *(ulong*)(ptr + offset + 24);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer,The following statement contains a magic number: Memory.Copy(writePtr + 16' (byte*)modifiedBuffer + rangePtr->Start' (uint)rangePtr->Count);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer,The following statement contains a magic number: writePtr += rangePtr->Count + 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics,The following statement contains a magic number: Memory.Copy(writePtr + 16' (byte*)modifiedBuffer + rangePtr->Start' (uint)rangePtr->Count);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics,The following statement contains a magic number: writePtr += rangePtr->Count + 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + 4096);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + 4096 + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + 4096 + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + offset + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + offset + 4096);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + offset + 4096 + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + offset + 4096 + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch0(ptr + 512);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch0(ptr + offset + 512);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Memory.Copy(writePtr + 16' (byte*)modifiedBuffer + rangePtr->Start' (uint)rangePtr->Count);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse4_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: writePtr += rangePtr->Count + 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + 4096);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + 4096 + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + 4096 + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + offset + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + offset + 4096);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + offset + 4096 + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + offset + 4096 + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch0(ptr + 512);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch0(ptr + offset + 512);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Memory.Copy(writePtr + 16' (byte*)modifiedBuffer + rangePtr->Start' (uint)rangePtr->Count);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: writePtr += rangePtr->Count + 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + 4096);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + 4096 + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + 4096 + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + offset + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + offset + 4096);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + offset + 4096 + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch2(ptr + offset + 4096 + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch0(ptr + 512);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Sse.Prefetch0(ptr + offset + 512);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: Memory.Copy(writePtr + 16' (byte*)modifiedBuffer + rangePtr->Start' (uint)rangePtr->Count);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch,The following statement contains a magic number: writePtr += rangePtr->Count + 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_NonTemporalRead,The following statement contains a magic number: Debug.Assert((long)originalBuffer % 32 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_NonTemporalRead,The following statement contains a magic number: Debug.Assert((long)modifiedBuffer % 32 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_NonTemporalRead,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_NonTemporalRead,The following statement contains a magic number: Memory.Copy(writePtr + 16' (byte*)modifiedBuffer + rangePtr->Start' (uint)rangePtr->Count);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_NonTemporalRead,The following statement contains a magic number: writePtr += rangePtr->Count + 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch_NonTemporalRead,The following statement contains a magic number: Debug.Assert((long)originalBuffer % 32 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch_NonTemporalRead,The following statement contains a magic number: Debug.Assert((long)modifiedBuffer % 32 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch_NonTemporalRead,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch_NonTemporalRead,The following statement contains a magic number: Sse.PrefetchNonTemporal(ptr + 512);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch_NonTemporalRead,The following statement contains a magic number: Sse.PrefetchNonTemporal(ptr + offset + 512);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch_NonTemporalRead,The following statement contains a magic number: Memory.Copy(writePtr + 16' (byte*)modifiedBuffer + rangePtr->Start' (uint)rangePtr->Count);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Avx_Layout_NoFastPath_WithPrefetch_NonTemporalRead,The following statement contains a magic number: writePtr += rangePtr->Count + 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse_Layout_NoFastPath,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse_Layout_NoFastPath,The following statement contains a magic number: Memory.Copy(writePtr + 16' (byte*)modifiedBuffer + rangePtr->Start' (uint)rangePtr->Count);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Sse_Layout_NoFastPath,The following statement contains a magic number: writePtr += rangePtr->Count + 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout,The following statement contains a magic number: Memory.Copy(writePtr + 16' (byte*)modifiedBuffer + rangePtr->Start' (uint)rangePtr->Count);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch_Numerics_Layout,The following statement contains a magic number: writePtr += rangePtr->Count + 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch,The following statement contains a magic number: blockEquals = *(ulong*)(ptr + 8) == *(ulong*)(ptr + offset + 8) &&                                        *(ulong*)(ptr + 16) == *(ulong*)(ptr + offset + 16) &&                                        *(ulong*)(ptr + 24) == *(ulong*)(ptr + offset + 24);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch,The following statement contains a magic number: blockEquals = *(ulong*)(ptr + 8) == *(ulong*)(ptr + offset + 8) &&                                        *(ulong*)(ptr + 16) == *(ulong*)(ptr + offset + 16) &&                                        *(ulong*)(ptr + 24) == *(ulong*)(ptr + offset + 24);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch,The following statement contains a magic number: blockEquals = *(ulong*)(ptr + 8) == *(ulong*)(ptr + offset + 8) &&                                        *(ulong*)(ptr + 16) == *(ulong*)(ptr + offset + 16) &&                                        *(ulong*)(ptr + 24) == *(ulong*)(ptr + offset + 24);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch,The following statement contains a magic number: blockEquals = *(ulong*)(ptr + 8) == *(ulong*)(ptr + offset + 8) &&                                        *(ulong*)(ptr + 16) == *(ulong*)(ptr + offset + 16) &&                                        *(ulong*)(ptr + 24) == *(ulong*)(ptr + offset + 24);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch,The following statement contains a magic number: blockEquals = *(ulong*)(ptr + 8) == *(ulong*)(ptr + offset + 8) &&                                        *(ulong*)(ptr + 16) == *(ulong*)(ptr + offset + 16) &&                                        *(ulong*)(ptr + 24) == *(ulong*)(ptr + offset + 24);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch,The following statement contains a magic number: blockEquals = *(ulong*)(ptr + 8) == *(ulong*)(ptr + offset + 8) &&                                        *(ulong*)(ptr + 16) == *(ulong*)(ptr + offset + 16) &&                                        *(ulong*)(ptr + 24) == *(ulong*)(ptr + offset + 24);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch,The following statement contains a magic number: Memory.Copy(writePtr + 16' (byte*)modifiedBuffer + rangePtr->Start' (uint)rangePtr->Count);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithBranch,The following statement contains a magic number: writePtr += rangePtr->Count + 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithPrefetch,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithPrefetch,The following statement contains a magic number: Sse.Prefetch0(ptr + 128);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithPrefetch,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithPrefetch,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithPrefetch,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithPrefetch,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithPrefetch,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithPrefetch,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithPrefetch,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithPrefetch,The following statement contains a magic number: byte blockBitmap = (byte)(ToByte(*(ulong*)(ptr + 0) != *(ulong*)(ptr + offset + 0)) << 3 |                                                ToByte(*(ulong*)(ptr + 8) != *(ulong*)(ptr + offset + 8)) << 2 |                                                ToByte(*(ulong*)(ptr + 16) != *(ulong*)(ptr + offset + 16)) << 1 |                                                ToByte(*(ulong*)(ptr + 24) != *(ulong*)(ptr + offset + 24)));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithPrefetch,The following statement contains a magic number: Memory.Copy(writePtr + 16' (byte*)modifiedBuffer + rangePtr->Start' (uint)rangePtr->Count);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_InvertedBuffer_WithPrefetch,The following statement contains a magic number: writePtr += rangePtr->Count + 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_NoInnerLoop_Numerics,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_NoInnerLoop_Numerics,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_NoInnerLoop_Numerics,The following statement contains a magic number: *(ulong*)(writePtr + writePtrOffset + 8) = *(ulong*)(ptr + offset + 8);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_NoInnerLoop_Numerics,The following statement contains a magic number: *(ulong*)(writePtr + writePtrOffset + 8) = *(ulong*)(ptr + offset + 8);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_NoInnerLoop_Numerics,The following statement contains a magic number: *(ulong*)(writePtr + writePtrOffset + 16) = *(ulong*)(ptr + offset + 16);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_NoInnerLoop_Numerics,The following statement contains a magic number: *(ulong*)(writePtr + writePtrOffset + 16) = *(ulong*)(ptr + offset + 16);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_NoInnerLoop_Numerics,The following statement contains a magic number: *(ulong*)(writePtr + writePtrOffset + 24) = *(ulong*)(ptr + offset + 24);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_NoInnerLoop_Numerics,The following statement contains a magic number: *(ulong*)(writePtr + writePtrOffset + 24) = *(ulong*)(ptr + offset + 24);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_NoInnerLoop_Numerics,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_NoInnerLoop_Numerics,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_NoInnerLoop_Numerics,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_Avx_NonTemporal,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_Avx_NonTemporal,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_Avx_NonTemporal,The following statement contains a magic number: Sse2.StoreNonTemporal((long*)(auxWritePtr + 16)' *(long*)(ptr + offset + 16));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_Avx_NonTemporal,The following statement contains a magic number: Sse2.StoreNonTemporal((long*)(auxWritePtr + 16)' *(long*)(ptr + offset + 16));
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_Avx_NonTemporal,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_Avx_NonTemporal,The following statement contains a magic number: Sse2.StoreNonTemporal((long*)(writePtr + 8)' writePtrOffset - 16);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_Avx_NonTemporal,The following statement contains a magic number: Sse2.StoreNonTemporal((long*)(writePtr + 8)' writePtrOffset - 16);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_Avx_Temporal,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_Avx_Temporal,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_Avx_Temporal,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_Avx_Temporal,The following statement contains a magic number: Sse2.StoreNonTemporal((long*)(writePtr + 8)' writePtrOffset - 16);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,ScalarDiff,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Diff.cs,ComputeCacheAware_SingleBody_Avx_Temporal,The following statement contains a magic number: Sse2.StoreNonTemporal((long*)(writePtr + 8)' writePtrOffset - 16);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Prefetch,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch.cs,Setup,The following statement contains a magic number: int start = r.Next(size - 1000);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Prefetch,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch.cs,Setup,The following statement contains a magic number: int end = start + 256 + r.Next(512);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Prefetch,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch.cs,Setup,The following statement contains a magic number: int end = start + 256 + r.Next(512);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Prefetch,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch.cs,Setup,The following statement contains a magic number: i < 100
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Prefetch,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch.cs,Word_32Bytes_WithPrefetch_Internal,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Prefetch,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch.cs,Word_32Bytes_WithPrefetch_Internal,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Prefetch,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch.cs,Word_32Bytes_WithPrefetch_Internal,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Prefetch,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch.cs,Word_32Bytes_WithPrefetch_Internal,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Prefetch,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch.cs,Word_32Bytes_WithPrefetch_Internal,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Prefetch,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch.cs,Word_32Bytes_NoPrefetch_Internal,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Prefetch,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch.cs,Word_32Bytes_NoPrefetch_Internal,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Prefetch,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch.cs,Word_32Bytes_NoPrefetch_Internal,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Prefetch,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch.cs,Word_32Bytes_NoPrefetch_Internal,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,Prefetch,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch.cs,Word_32Bytes_NoPrefetch_Internal,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Setup,The following statement contains a magic number: int start = r.Next(size - 1000);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Setup,The following statement contains a magic number: int end = start + 256 + r.Next(512);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Setup,The following statement contains a magic number: int end = start + 256 + r.Next(512);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Setup,The following statement contains a magic number: i < 100
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Word_32Bytes_WithPrefetch_Internal,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Word_32Bytes_WithPrefetch_Internal,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Word_32Bytes_WithPrefetch_Internal,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Word_32Bytes_WithPrefetch_Internal,The following statement contains a magic number: config.Prefetch(ptr + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Word_32Bytes_WithPrefetch_Internal,The following statement contains a magic number: config.Prefetch(ptr + offset + 2048);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Word_32Bytes_WithPrefetch_Internal,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Word_32Bytes_WithPrefetch_Internal,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Word_32Bytes_NoPrefetch_Internal,The following statement contains a magic number: Debug.Assert(size % 4096 == 0);
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Word_32Bytes_NoPrefetch_Internal,The following statement contains a magic number: long writePtrOffset = 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Word_32Bytes_NoPrefetch_Internal,The following statement contains a magic number: writePtrOffset += 32;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Word_32Bytes_NoPrefetch_Internal,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,PrefetchLayout,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Prefetch2.cs,Word_32Bytes_NoPrefetch_Internal,The following statement contains a magic number: *(long*)(writePtr + 8) = writePtrOffset - 16;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,BinarySearching,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Search.cs,Setup,The following statement contains a magic number: int pagesCount = size / 8096;
Magic Number,Micro.Benchmark.Benchmarks.Hardware,BinarySearching,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Search.cs,Setup,The following statement contains a magic number: _pages[i] = new TreePage(source.Ptr + i * 8096' 8096)                  {                      Upper = 8096'                      Lower = Voron.Global.Constants.Tree.PageHeaderSize'                      TreeFlags = TreePageFlags.None'                  };
Magic Number,Micro.Benchmark.Benchmarks.Hardware,BinarySearching,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Search.cs,Setup,The following statement contains a magic number: _pages[i] = new TreePage(source.Ptr + i * 8096' 8096)                  {                      Upper = 8096'                      Lower = Voron.Global.Constants.Tree.PageHeaderSize'                      TreeFlags = TreePageFlags.None'                  };
Magic Number,Micro.Benchmark.Benchmarks.Hardware,BinarySearching,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Search.cs,Setup,The following statement contains a magic number: _pages[i] = new TreePage(source.Ptr + i * 8096' 8096)                  {                      Upper = 8096'                      Lower = Voron.Global.Constants.Tree.PageHeaderSize'                      TreeFlags = TreePageFlags.None'                  };
Magic Number,Micro.Benchmark.Benchmarks.Hardware,BinarySearching,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Hardware\Search.cs,Setup,The following statement contains a magic number: Slice.From(_context' RandomString(19)' out Slice slice);
Magic Number,Micro.Benchmark.Benchmarks.LZ4,Lz4Benchmark,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\LZ4\LZ4Benchmark.cs,Setup,The following statement contains a magic number: buffer[j] ^= (byte)generator.Next(256);
Magic Number,Micro.Benchmark.Benchmarks.PageLocator,PlRandomRead,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\PageLocator\PlRandomRead.cs,Setup,The following statement contains a magic number: valueBuffer += (long)generator.Next() << 32;
Magic Number,Micro.Benchmark.Benchmarks.PageLocator,PlRandomRead,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\PageLocator\PlRandomRead.cs,Setup,The following statement contains a magic number: valueBuffer += (long)generator.Next() << 64;
Magic Number,Micro.Benchmark.Benchmarks.PageLocator,PlRandomRead,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\PageLocator\PlRandomRead.cs,Setup,The following statement contains a magic number: valueBuffer += (long)generator.Next() << 96;
Magic Number,Micro.Benchmark.Benchmarks.PageLocator,PlRandomWrite,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\PageLocator\PlRandomWrite.cs,Setup,The following statement contains a magic number: valueBuffer += (long)generator.Next() << 32;
Magic Number,Micro.Benchmark.Benchmarks.PageLocator,PlRandomWrite,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\PageLocator\PlRandomWrite.cs,Setup,The following statement contains a magic number: valueBuffer += (long)generator.Next() << 64;
Magic Number,Micro.Benchmark.Benchmarks.PageLocator,PlRandomWrite,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\PageLocator\PlRandomWrite.cs,Setup,The following statement contains a magic number: valueBuffer += (long)generator.Next() << 96;
Magic Number,Micro.Benchmark.Benchmarks.Sorting,SortingPerformance,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Benchmarks\Sorting\Sorting.cs,GeneratorWithDuplicates,The following statement contains a magic number: result[i] = gen.Next(0' size / 4);
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorCurrent,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorCurrent.cs,PageLocatorCurrent,The following statement contains a magic number: cacheSize = 1024;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorCurrent,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorCurrent.cs,PageLocatorCurrent,The following statement contains a magic number: cacheSize > 1024
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorCurrent,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorCurrent.cs,PageLocatorCurrent,The following statement contains a magic number: _andMask = (int)(0xFFFFFFFF >> (sizeof(uint) * 8 - shiftRight));
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,PageLocatorV5,The following statement contains a magic number: _cacheSize += 4 - _cacheSize % 4;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,PageLocatorV5,The following statement contains a magic number: _cacheSize += 4 - _cacheSize % 4;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,PageLocatorV5,The following statement contains a magic number: _cacheSize % 4 != 0
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,GetReadOnlyPage,The following statement contains a magic number: int f3 = _fingerprints[i + 2];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,GetReadOnlyPage,The following statement contains a magic number: int f4 = _fingerprints[i + 3];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,GetReadOnlyPage,The following statement contains a magic number: i += 2;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,GetReadOnlyPage,The following statement contains a magic number: i += 4;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,GetWritablePage,The following statement contains a magic number: int f3 = _fingerprints[i + 2];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,GetWritablePage,The following statement contains a magic number: int f4 = _fingerprints[i + 3];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,GetWritablePage,The following statement contains a magic number: i += 2;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,GetWritablePage,The following statement contains a magic number: i += 4;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,Reset,The following statement contains a magic number: int f3 = _fingerprints[i + 2];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,Reset,The following statement contains a magic number: int f4 = _fingerprints[i + 3];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,Reset,The following statement contains a magic number: i += 2;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV5,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV5.cs,Reset,The following statement contains a magic number: i += 4;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,PageLocatorV6,The following statement contains a magic number: _cacheSize += 4 - _cacheSize % 4;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,PageLocatorV6,The following statement contains a magic number: _cacheSize += 4 - _cacheSize % 4;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,PageLocatorV6,The following statement contains a magic number: _cacheSize % 4 != 0
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,GetReadOnlyPage,The following statement contains a magic number: int f3 = _fingerprints[i + 2];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,GetReadOnlyPage,The following statement contains a magic number: int f4 = _fingerprints[i + 3];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,GetReadOnlyPage,The following statement contains a magic number: i += 4;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,GetReadOnlyPage,The following statement contains a magic number: i += 2;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,GetReadOnlyPage,The following statement contains a magic number: i += 3;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,GetWritablePage,The following statement contains a magic number: int f3 = _fingerprints[i + 2];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,GetWritablePage,The following statement contains a magic number: int f4 = _fingerprints[i + 3];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,GetWritablePage,The following statement contains a magic number: i += 4;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,GetWritablePage,The following statement contains a magic number: i += 2;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,GetWritablePage,The following statement contains a magic number: i += 3;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,Reset,The following statement contains a magic number: int f3 = _fingerprints[i + 2];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,Reset,The following statement contains a magic number: int f4 = _fingerprints[i + 3];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,Reset,The following statement contains a magic number: i += 4;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,Reset,The following statement contains a magic number: i += 2;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV6,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV6.cs,Reset,The following statement contains a magic number: i += 3;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,PageLocatorV7,The following statement contains a magic number: _cacheSize += 8 - _cacheSize % 8;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,PageLocatorV7,The following statement contains a magic number: _cacheSize += 8 - _cacheSize % 8;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,PageLocatorV7,The following statement contains a magic number: _cacheSize % 8 != 0
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetReadOnlyPage,The following statement contains a magic number: int f3 = _fingerprints[i + 2];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetReadOnlyPage,The following statement contains a magic number: int f4 = _fingerprints[i + 3];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetReadOnlyPage,The following statement contains a magic number: int f5 = _fingerprints[i + 4];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetReadOnlyPage,The following statement contains a magic number: int f6 = _fingerprints[i + 5];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetReadOnlyPage,The following statement contains a magic number: int f7 = _fingerprints[i + 6];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetReadOnlyPage,The following statement contains a magic number: int f8 = _fingerprints[i + 7];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetReadOnlyPage,The following statement contains a magic number: i += 8;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetReadOnlyPage,The following statement contains a magic number: i += 2;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetReadOnlyPage,The following statement contains a magic number: i += 3;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetReadOnlyPage,The following statement contains a magic number: i += 4;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetReadOnlyPage,The following statement contains a magic number: i += 5;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetReadOnlyPage,The following statement contains a magic number: i += 6;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetReadOnlyPage,The following statement contains a magic number: i += 7;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetWritablePage,The following statement contains a magic number: int f3 = _fingerprints[i + 2];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetWritablePage,The following statement contains a magic number: int f4 = _fingerprints[i + 3];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetWritablePage,The following statement contains a magic number: int f5 = _fingerprints[i + 4];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetWritablePage,The following statement contains a magic number: int f6 = _fingerprints[i + 5];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetWritablePage,The following statement contains a magic number: int f7 = _fingerprints[i + 6];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetWritablePage,The following statement contains a magic number: int f8 = _fingerprints[i + 7];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetWritablePage,The following statement contains a magic number: i += 8;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetWritablePage,The following statement contains a magic number: i += 2;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetWritablePage,The following statement contains a magic number: i += 3;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetWritablePage,The following statement contains a magic number: i += 4;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetWritablePage,The following statement contains a magic number: i += 5;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetWritablePage,The following statement contains a magic number: i += 6;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,GetWritablePage,The following statement contains a magic number: i += 7;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,Reset,The following statement contains a magic number: int f3 = _fingerprints[i + 2];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,Reset,The following statement contains a magic number: int f4 = _fingerprints[i + 3];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,Reset,The following statement contains a magic number: int f5 = _fingerprints[i + 4];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,Reset,The following statement contains a magic number: int f6 = _fingerprints[i + 5];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,Reset,The following statement contains a magic number: int f7 = _fingerprints[i + 6];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,Reset,The following statement contains a magic number: int f8 = _fingerprints[i + 7];
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,Reset,The following statement contains a magic number: i += 8;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,Reset,The following statement contains a magic number: i += 2;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,Reset,The following statement contains a magic number: i += 3;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,Reset,The following statement contains a magic number: i += 4;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,Reset,The following statement contains a magic number: i += 5;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,Reset,The following statement contains a magic number: i += 6;
Magic Number,Micro.Benchmark.PageLocatorImpl,PageLocatorV7,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\PageLocatorImpl\PageLocatorV7.cs,Reset,The following statement contains a magic number: i += 7;
Magic Number,Micro.Benchmark.Tests,PageLocatorTests,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Tests\PageLocatorTests.cs,TestGetReadonly,The following statement contains a magic number: var p11 = cache.GetReadOnlyPage(5);
Magic Number,Micro.Benchmark.Tests,PageLocatorTests,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Tests\PageLocatorTests.cs,TestGetReadonly,The following statement contains a magic number: var p12 = cache.GetReadOnlyPage(5);
Magic Number,Micro.Benchmark.Tests,PageLocatorTests,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Tests\PageLocatorTests.cs,TestGetReadonly,The following statement contains a magic number: cache.Reset(5);
Magic Number,Micro.Benchmark.Tests,PageLocatorTests,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Tests\PageLocatorTests.cs,TestGetReadonly,The following statement contains a magic number: var p13 = cache.GetReadOnlyPage(5);
Magic Number,Micro.Benchmark.Tests,PageLocatorTests,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Tests\PageLocatorTests.cs,TestGetReadonly,The following statement contains a magic number: var p21 = cache.GetWritablePage(6);
Magic Number,Micro.Benchmark.Tests,PageLocatorTests,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Tests\PageLocatorTests.cs,TestGetReadonly,The following statement contains a magic number: var p22 = cache.GetWritablePage(6);
Magic Number,Micro.Benchmark.Tests,PageLocatorTests,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Tests\PageLocatorTests.cs,TestGetReadonly,The following statement contains a magic number: cache.Reset(6);
Magic Number,Micro.Benchmark.Tests,PageLocatorTests,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Tests\PageLocatorTests.cs,TestGetReadonly,The following statement contains a magic number: var p23 = cache.GetWritablePage(6);
Magic Number,Micro.Benchmark.Tests,PageLocatorTests,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Tests\PageLocatorTests.cs,TestGetReadonly,The following statement contains a magic number: var p31 = cache.GetReadOnlyPage(7);
Magic Number,Micro.Benchmark.Tests,PageLocatorTests,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Tests\PageLocatorTests.cs,TestGetReadonly,The following statement contains a magic number: var p32 = cache.GetWritablePage(7);
Magic Number,Micro.Benchmark.Tests,PageLocatorTests,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Tests\PageLocatorTests.cs,TestGetReadonly,The following statement contains a magic number: cache.Reset(7);
Magic Number,Micro.Benchmark.Tests,PageLocatorTests,C:\research\architectureSmells\repos\ravendb_ravendb\bench\Micro.Benchmark\Tests\PageLocatorTests.cs,TestGetReadonly,The following statement contains a magic number: var p33 = cache.GetWritablePage(7);
