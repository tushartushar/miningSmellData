Implementation smell,Namespace,Class,File,Method,Description
Long Method,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerfomStore,The method has 109 lines of code.
Complex Method,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerfomStore,Cyclomatic complexity of the method is 11
Complex Method,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformBulkInsert,Cyclomatic complexity of the method is 11
Long Parameter List,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformSessionStore,The method has 6 parameters. Parameters: collection' numberOfDocuments' docsPerSession' numberOfClients' sizeOfDocuments' useSeqId
Long Parameter List,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerfomStore,The method has 7 parameters. Parameters: collection' numberOfDocuments' docsPerSession' dummies' docSize' sizeOfDocuments' useSeqId
Long Statement,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerfomStore,The length of the statement  "            Log($"Client Inserted {numberOfDocuments:#'#} documents of size {docSize:#'#} at " + clientSideTime.ToString("#'#") + " mSec"); " is 127.
Long Statement,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformBulkInsert,The length of the statement  "            Log($"Client Inserted {numberOfDocuments:#'#} documents of size {docSize:#'#} at " + clientSideTime.ToString("#'#") + " mSec"); " is 127.
Long Statement,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformBulkInsert,The length of the statement  "            Log($"Finished Bulk Insert {numberOfDocuments:#'#} documents of size {docSize:#'#} at " + elapsed.ToString("#'#") + " mSec"); " is 125.
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformSessionStore,The following statement contains a magic number: int docSize = sizeOfDocuments == null ? _random.Next(5 * 1024 * 1024) : sizeOfDocuments.Value;
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformSessionStore,The following statement contains a magic number: int docSize = sizeOfDocuments == null ? _random.Next(5 * 1024 * 1024) : sizeOfDocuments.Value;
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformSessionStore,The following statement contains a magic number: int docSize = sizeOfDocuments == null ? _random.Next(5 * 1024 * 1024) : sizeOfDocuments.Value;
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformSessionStore,The following statement contains a magic number: var dummies = Math.Min(numberOfDocuments' 1024 * 1024 * 1024 / docSize + 1);
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformSessionStore,The following statement contains a magic number: var dummies = Math.Min(numberOfDocuments' 1024 * 1024 * 1024 / docSize + 1);
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformSessionStore,The following statement contains a magic number: var dummies = Math.Min(numberOfDocuments' 1024 * 1024 * 1024 / docSize + 1);
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerfomStore,The following statement contains a magic number: var entities = new DocEntity[3];
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerfomStore,The following statement contains a magic number: ids[0] == -1 ||                  ids[1] == -1 ||                  ids[2] == -1
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerfomStore,The following statement contains a magic number: var last = session.Load<DocEntity>($"{collection}/{ids[2]}");
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerfomStore,The following statement contains a magic number: first.SerialId == 0 &&                      middle.SerialId == numberOfDocuments / 2 &&                      last.SerialId == numberOfDocuments - 1
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformBulkInsert,The following statement contains a magic number: int docSize = sizeOfDocuments == null ? _random.Next(5 * 1024 * 1024) : sizeOfDocuments.Value;
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformBulkInsert,The following statement contains a magic number: int docSize = sizeOfDocuments == null ? _random.Next(5 * 1024 * 1024) : sizeOfDocuments.Value;
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformBulkInsert,The following statement contains a magic number: int docSize = sizeOfDocuments == null ? _random.Next(5 * 1024 * 1024) : sizeOfDocuments.Value;
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformBulkInsert,The following statement contains a magic number: var entities = new DocEntity[3];
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformBulkInsert,The following statement contains a magic number: var dummies = Math.Min(numberOfDocuments' 1024 * 1024 * 1024 / docSize + 1);
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformBulkInsert,The following statement contains a magic number: var dummies = Math.Min(numberOfDocuments' 1024 * 1024 * 1024 / docSize + 1);
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformBulkInsert,The following statement contains a magic number: var dummies = Math.Min(numberOfDocuments' 1024 * 1024 * 1024 / docSize + 1);
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformBulkInsert,The following statement contains a magic number: i % (numberOfDocuments / 5) == 0
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformBulkInsert,The following statement contains a magic number: ids[0] == -1 ||                      ids[1] == -1 ||                      ids[2] == -1
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformBulkInsert,The following statement contains a magic number: var last = session.Load<DocEntity>($"{collection}/{ids[2]}");
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,PerformBulkInsert,The following statement contains a magic number: first.SerialId == 0 &&                      middle.SerialId == numberOfDocuments / 2 &&                      last.SerialId == numberOfDocuments - 1
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Write,The following statement contains a magic number: (i % (16 * 1024)) == 0
Magic Number,BulkInsert.Benchmark,BulkInsertBench,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Write,The following statement contains a magic number: (i % (16 * 1024)) == 0
Magic Number,BulkInsert.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Main,The following statement contains a magic number: var k = 1000;
Magic Number,BulkInsert.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Main,The following statement contains a magic number: var kb = 1024;
Magic Number,BulkInsert.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Main,The following statement contains a magic number: var clients = 200;
Magic Number,BulkInsert.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Main,The following statement contains a magic number: var docsPerSession = 2;
Magic Number,BulkInsert.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Main,The following statement contains a magic number: massiveObj.PerformSessionStore("warmup"' 10 * k' docsPerSession' clients' 2 * kb);
Magic Number,BulkInsert.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Main,The following statement contains a magic number: massiveObj.PerformSessionStore("warmup"' 10 * k' docsPerSession' clients' 2 * kb);
Magic Number,BulkInsert.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Main,The following statement contains a magic number: massiveObj.PerformSessionStore("smallSize"' 2 * k * k' docsPerSession' clients' 2 * kb);
Magic Number,BulkInsert.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Main,The following statement contains a magic number: massiveObj.PerformSessionStore("smallSize"' 2 * k * k' docsPerSession' clients' 2 * kb);
Magic Number,BulkInsert.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Main,The following statement contains a magic number: massiveObj.PerformSessionStore("bigSize"' 1 * k' docsPerSession' clients' 30 * kb * kb);
Magic Number,BulkInsert.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Main,The following statement contains a magic number: massiveObj.PerformSessionStore("forOverrite"' 500 * k' docsPerSession' clients' 5 * kb' false);
Magic Number,BulkInsert.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Main,The following statement contains a magic number: massiveObj.PerformSessionStore("forOverrite"' 500 * k' docsPerSession' clients' 5 * kb' false);
Magic Number,BulkInsert.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Main,The following statement contains a magic number: massiveObj.PerformSessionStore("forOverrite"' 1000 * k' docsPerSession' clients' 5 * kb' false);
Magic Number,BulkInsert.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Main,The following statement contains a magic number: massiveObj.PerformSessionStore("forOverrite"' 1000 * k' docsPerSession' clients' 5 * kb' false);
Magic Number,BulkInsert.Benchmark,Program,C:\research\architectureSmells\repos\ravendb_ravendb\bench\BulkInsert.Benchmark\Program.cs,Main,The following statement contains a magic number: i <= 5
