Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Tryouts,Program,C:\repos\ravendb_ravendb\test\Tryouts\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < 1000; i++)              {                  Console.WriteLine(i);                  using (var a = new FastTests.Server.Documents.Indexing.Static.BasicStaticMapReduceIndexing())                  {                      a.CanPersist().Wait();                  }              }
Magic Number,Tryouts,Program,C:\repos\ravendb_ravendb\test\Tryouts\Program.cs,InitializeData,The following statement contains a magic number: for (int batchNo = 0; batchNo < 100; batchNo++)              {                  Console.WriteLine(DateTime.Now.ToLongTimeString() + ": Generating batch " + batchNo);                  using (var session = documentStore.OpenSession())                  {                      for (int i = 1; i <= 1000; i++)                      {                          session.Store(new Doc                          {                              Id = "doc/" + (batchNo * 1000 + i)'                              NumVals = Enumerable.Range(1' 300).ToDictionary(x => "Value-" + x' _ => rng.NextDouble())'                          });                      }                      session.SaveChanges();                  }              }
Magic Number,Tryouts,Program,C:\repos\ravendb_ravendb\test\Tryouts\Program.cs,InitializeData,The following statement contains a magic number: for (int batchNo = 0; batchNo < 100; batchNo++)              {                  Console.WriteLine(DateTime.Now.ToLongTimeString() + ": Generating batch " + batchNo);                  using (var session = documentStore.OpenSession())                  {                      for (int i = 1; i <= 1000; i++)                      {                          session.Store(new Doc                          {                              Id = "doc/" + (batchNo * 1000 + i)'                              NumVals = Enumerable.Range(1' 300).ToDictionary(x => "Value-" + x' _ => rng.NextDouble())'                          });                      }                      session.SaveChanges();                  }              }
Magic Number,Tryouts,Program,C:\repos\ravendb_ravendb\test\Tryouts\Program.cs,InitializeData,The following statement contains a magic number: for (int batchNo = 0; batchNo < 100; batchNo++)              {                  Console.WriteLine(DateTime.Now.ToLongTimeString() + ": Generating batch " + batchNo);                  using (var session = documentStore.OpenSession())                  {                      for (int i = 1; i <= 1000; i++)                      {                          session.Store(new Doc                          {                              Id = "doc/" + (batchNo * 1000 + i)'                              NumVals = Enumerable.Range(1' 300).ToDictionary(x => "Value-" + x' _ => rng.NextDouble())'                          });                      }                      session.SaveChanges();                  }              }
Magic Number,Tryouts,Program,C:\repos\ravendb_ravendb\test\Tryouts\Program.cs,InitializeData,The following statement contains a magic number: for (int batchNo = 0; batchNo < 100; batchNo++)              {                  Console.WriteLine(DateTime.Now.ToLongTimeString() + ": Generating batch " + batchNo);                  using (var session = documentStore.OpenSession())                  {                      for (int i = 1; i <= 1000; i++)                      {                          session.Store(new Doc                          {                              Id = "doc/" + (batchNo * 1000 + i)'                              NumVals = Enumerable.Range(1' 300).ToDictionary(x => "Value-" + x' _ => rng.NextDouble())'                          });                      }                      session.SaveChanges();                  }              }
