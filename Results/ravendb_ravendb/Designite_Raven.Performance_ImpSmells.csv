Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Raven.Performance,Tester,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Tester.cs,WaitForIndexesToBecomeNonStale,The length of the statement  "                    logger.Debug("Stale index {0} - {1:#'#}/{2:#'#} - latency: {3:#'#}' {4:#'#}ms"' indexStats.Id' indexStats.IndexingAttempts' statistics.CountOfDocuments' " is 152.
Long Statement,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,Parse,The length of the statement  "                                    {"database|database-location="' "The folder that contains folders in the following format: RavenDB-Build-{build-number}."' value => databaseLocation = value}' " is 158.
Long Statement,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The length of the statement  "            writer.WriteLine("Test number' Time' Memory Min' Memory Max' Memory Average' Latency Time Min' Latency Time Max' Latency Time Average' Latency Docs Min' Latency Docs Max' Latency Docs Average"); " is 194.
Long Statement,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The length of the statement  "            Logger.Info("Memory: Max: {0:#'#} MB Min: {1:#'#} MB Avg: {2:#'#} MB"' ToMB(tester.MemoryUsage.Max())' ToMB(tester.MemoryUsage.Min())' ToMB(tester.MemoryUsage.Average())); " is 171.
Long Statement,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The length of the statement  "                ' 1' (DateTime.UtcNow - testStartTime).ToString("hh\\:mm\\:ss\\.ff")' ToMB(tester.MemoryUsage.Min())' ToMB(tester.MemoryUsage.Max())' ToMB(tester.MemoryUsage.Average())); " is 170.
Long Statement,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The length of the statement  "            Logger.Info("Memory: Max: {0:#'#} MB Min: {1:#'#} MB Avg: {2:#'#} MB"' ToMB(tester.MemoryUsage.Max())' ToMB(tester.MemoryUsage.Min())' ToMB(tester.MemoryUsage.Average())); " is 171.
Long Statement,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The length of the statement  "                ' 2' (DateTime.UtcNow - testStartTime).ToString("hh\\:mm\\:ss\\.ff")' ToMB(tester.MemoryUsage.Min())' ToMB(tester.MemoryUsage.Max())' ToMB(tester.MemoryUsage.Average())); " is 170.
Long Statement,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The length of the statement  "            Logger.Info("Memory: Max: {0:#'#} MB Min: {1:#'#} MB Avg: {2:#'#} MB"' ToMB(tester.MemoryUsage.Max())' ToMB(tester.MemoryUsage.Min())' ToMB(tester.MemoryUsage.Average())); " is 171.
Long Statement,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The length of the statement  "                ' 3' (DateTime.UtcNow - testStartTime).ToString("hh\\:mm\\:ss\\.ff")' ToMB(tester.MemoryUsage.Min())' ToMB(tester.MemoryUsage.Max())' ToMB(tester.MemoryUsage.Average())); " is 170.
Long Statement,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The length of the statement  "            Logger.Info("Memory: Max: {0:#'#} MB Min: {1:#'#} MB Avg: {2:#'#} MB"' ToMB(tester.MemoryUsage.Max())' ToMB(tester.MemoryUsage.Min())' ToMB(tester.MemoryUsage.Average())); " is 171.
Long Statement,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The length of the statement  "                ' 4' (DateTime.UtcNow - testStartTime).ToString("hh\\:mm\\:ss\\.ff")' ToMB(tester.MemoryUsage.Min())' ToMB(tester.MemoryUsage.Max())' ToMB(tester.MemoryUsage.Average())); " is 170.
Long Statement,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The length of the statement  "            Logger.Info("Memory: Max: {0:#'#} MB Min: {1:#'#} MB Avg: {2:#'#} MB"' ToMB(tester.MemoryUsage.Max())' ToMB(tester.MemoryUsage.Min())' ToMB(tester.MemoryUsage.Average())); " is 171.
Long Statement,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The length of the statement  "                ' 5' counter++' (DateTime.UtcNow - testStartTime).ToString("hh\\:mm\\:ss\\.ff")' ToMB(tester.MemoryUsage.Min())' ToMB(tester.MemoryUsage.Max())' ToMB(tester.MemoryUsage.Average()) " is 179.
Long Statement,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The length of the statement  "                ' latency.Item2.Min()' latency.Item2.Max()' latency.Item2.Average()' latency.Item3.Min()' latency.Item3.Max()' latency.Item3.Average()); " is 136.
Long Statement,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,GetLogFile,The length of the statement  "            var fileName = string.Format(@"PerformanceLog-{0}-{1}.csv"' buildNumber' DateTime.Now.ToString("yyyy'-'MM'-'dd'T'HH':'mm':'ss")); " is 129.
Magic Number,Raven.Performance,Tester,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Tester.cs,ParseDisks,The following statement contains a magic number: var buffer = new byte[1024 * 1024];
Magic Number,Raven.Performance,Tester,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Tester.cs,ParseDisks,The following statement contains a magic number: var buffer = new byte[1024 * 1024];
Magic Number,Raven.Performance,Tester,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Tester.cs,WaitForIndexesToBecomeNonStale,The following statement contains a magic number: while (true)              {                  process.Refresh();                  MemoryUsage.Add(process.WorkingSet64);                    var statistics = store.DatabaseCommands.GetStatistics();                    if (statistics.StaleIndexes.Length == 0 && doneImporting)                      return;                    foreach (var staleIndex in statistics.StaleIndexes)                  {                      var indexStats = statistics.Indexes.Single(x => x.Name == staleIndex);                      var latencyInTime = (DateTime.UtcNow - indexStats.LastIndexedTimestamp).TotalMilliseconds;                      LatencyTimes.Add(new KeyValuePair<string' double>(staleIndex' latencyInTime));                        var latencyInDocuments = statistics.CountOfDocuments - indexStats.IndexingAttempts;                      LatencyInDocuments.Add(new KeyValuePair<string' long>(staleIndex' latencyInDocuments));                        logger.Debug("Stale index {0} - {1:#'#}/{2:#'#} - latency: {3:#'#}' {4:#'#}ms"' indexStats.Id' indexStats.IndexingAttempts' statistics.CountOfDocuments'                          latencyInDocuments'                          latencyInTime);                  }                    Thread.Sleep(1000);              }
Magic Number,Raven.Performance,Parser,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Parser.cs,Parser,The following statement contains a magic number: Add(@"^\# \s* Track \s+ frame \s+ offsets \s*: \s* \n (^\# \s* (\d+) \s* \n)+"' (disk' collection) =>              {                  foreach (Capture capture in collection[0].Groups[2].Captures)                  {                      disk.TrackFramesOffsets.Add(int.Parse(capture.Value));                  }              });
Magic Number,Raven.Performance,Parser,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Parser.cs,Parser,The following statement contains a magic number: Add("DTITLE=(.+)"' (disk' collection) =>              {                  var parts = collection[0].Groups[1].Value.Split(new[] {"/"}' 2' StringSplitOptions.RemoveEmptyEntries);                  if (parts.Length == 2)                  {                      disk.Artist = parts[0].Trim();                      disk.Title = parts[1].Trim();                  }                  else                  {                      disk.Title = parts[0].Trim();                  }              });
Magic Number,Raven.Performance,Parser,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Parser.cs,Parser,The following statement contains a magic number: Add("DTITLE=(.+)"' (disk' collection) =>              {                  var parts = collection[0].Groups[1].Value.Split(new[] {"/"}' 2' StringSplitOptions.RemoveEmptyEntries);                  if (parts.Length == 2)                  {                      disk.Artist = parts[0].Trim();                      disk.Title = parts[1].Trim();                  }                  else                  {                      disk.Title = parts[0].Trim();                  }              });
Magic Number,Raven.Performance,Parser,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Parser.cs,Parser,The following statement contains a magic number: Add(@"DYEAR=(\d+)"' (disk' collection) =>              {                  if (collection.Count == 0)                      return;                  var value = collection[0].Groups[1].Value;                  if (value.Length > 4) // there is data like this                  {                      value = value.Substring(value.Length - 4);                  }                  disk.Year = int.Parse(value);              }                  );
Magic Number,Raven.Performance,Parser,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Parser.cs,Parser,The following statement contains a magic number: Add(@"DYEAR=(\d+)"' (disk' collection) =>              {                  if (collection.Count == 0)                      return;                  var value = collection[0].Groups[1].Value;                  if (value.Length > 4) // there is data like this                  {                      value = value.Substring(value.Length - 4);                  }                  disk.Year = int.Parse(value);              }                  );
Magic Number,Raven.Performance,Parser,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Parser.cs,Parser,The following statement contains a magic number: Add(@"(EXTD\d*)=(.+)"' (disk' collection) =>              {                  foreach (Match match in collection)                  {                      var key = match.Groups[1].Value;                      string value;                      if (disk.Attributes.TryGetValue(key' out value))                      {                          disk.Attributes[key] = value + match.Groups[2].Value.Trim();                      }                      else                      {                          disk.Attributes[key] = match.Groups[2].Value.Trim();                      }                  }              });
Magic Number,Raven.Performance,Parser,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Parser.cs,Parser,The following statement contains a magic number: Add(@"(EXTD\d*)=(.+)"' (disk' collection) =>              {                  foreach (Match match in collection)                  {                      var key = match.Groups[1].Value;                      string value;                      if (disk.Attributes.TryGetValue(key' out value))                      {                          disk.Attributes[key] = value + match.Groups[2].Value.Trim();                      }                      else                      {                          disk.Attributes[key] = match.Groups[2].Value.Trim();                      }                  }              });
Magic Number,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The following statement contains a magic number: writer.WriteLine("{0}'{1}'{2}'{3}'{4}"                  ' 2' (DateTime.UtcNow - testStartTime).ToString("hh\\:mm\\:ss\\.ff")' ToMB(tester.MemoryUsage.Min())' ToMB(tester.MemoryUsage.Max())' ToMB(tester.MemoryUsage.Average()));
Magic Number,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The following statement contains a magic number: writer.WriteLine("{0}'{1}'{2}'{3}'{4}"                  ' 3' (DateTime.UtcNow - testStartTime).ToString("hh\\:mm\\:ss\\.ff")' ToMB(tester.MemoryUsage.Min())' ToMB(tester.MemoryUsage.Max())' ToMB(tester.MemoryUsage.Average()));
Magic Number,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The following statement contains a magic number: writer.WriteLine("{0}'{1}'{2}'{3}'{4}"                  ' 4' (DateTime.UtcNow - testStartTime).ToString("hh\\:mm\\:ss\\.ff")' ToMB(tester.MemoryUsage.Min())' ToMB(tester.MemoryUsage.Max())' ToMB(tester.MemoryUsage.Average()));
Magic Number,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,MeasurePerformance,The following statement contains a magic number: foreach (var latency in tester.Latencies())              {                  writer.WriteLine("{0}.{1}'{2}'{3}'{4}'{5}'{6:#'#.##}'{7:#'#.##}'{8:#'#.##}'{9:#'#.##}'{10:#'#.##}'{11:#'#.##}"                  ' 5' counter++' (DateTime.UtcNow - testStartTime).ToString("hh\\:mm\\:ss\\.ff")' ToMB(tester.MemoryUsage.Min())' ToMB(tester.MemoryUsage.Max())' ToMB(tester.MemoryUsage.Average())                  ' latency.Item2.Min()' latency.Item2.Max()' latency.Item2.Average()' latency.Item3.Min()' latency.Item3.Max()' latency.Item3.Average());                    Logger.Info("Latencies {0}: Avg: {1:#'#} ms {2:#'#} docs' Max: {3:#'#} ms {4:#'#} docs' Min: {5:#'#} ms {6:#'#} docs"'                      latency.Item1' latency.Item2.Average()' latency.Item3.Average()'                      latency.Item2.Max()'                      latency.Item3.Max()'                      latency.Item2.Min()'                      latency.Item3.Min());              }
Magic Number,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,ToMB,The following statement contains a magic number: return ((double)number / (1024 * 1024)).ToString("#'#.##");
Magic Number,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,ToMB,The following statement contains a magic number: return ((double)number / (1024 * 1024)).ToString("#'#.##");
Magic Number,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,ToMB,The following statement contains a magic number: return (number / (1024 * 1024)).ToString("#'#.##");
Magic Number,Raven.Performance,Program,C:\repos\ravendb_ravendb\ToMigrate\Raven.Performance\Program.cs,ToMB,The following statement contains a magic number: return (number / (1024 * 1024)).ToString("#'#.##");
