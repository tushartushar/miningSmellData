Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DeltaEngine.Rendering3D.Shapes,Grid3D,C:\repos\DeltaEngine_DeltaEngine.Xna\Rendering3D\Shapes\Grid3D.cs,CreateHorizontalLines,The length of the statement  "		lines.Add (new Line3D ((initialPoint + new Vector3D (0' y' 0)) * gridScale' (initialPoint + new Vector3D (dimension.Width' y' 0)) * gridScale' Color.White)); " is 157.
Long Statement,DeltaEngine.Rendering3D.Shapes,Grid3D,C:\repos\DeltaEngine_DeltaEngine.Xna\Rendering3D\Shapes\Grid3D.cs,CreateVerticalLines,The length of the statement  "		lines.Add (new Line3D ((initialPoint + new Vector3D (x' 0' 0)) * gridScale' (initialPoint + new Vector3D (x' dimension.Height' 0)) * gridScale' Color.White)); " is 158.
Long Statement,DeltaEngine.Rendering3D.Shapes,LevelDebugRenderer,C:\repos\DeltaEngine_DeltaEngine.Xna\Rendering3D\Shapes\LevelDebugRenderer.cs,GetRectangleDrawPosition,The length of the statement  "	return new Vector2D ((int)position.X * ZoomFactor + M * map.Size.Width + B' (int)position.Y * ZoomFactor + M * map.Size.Height + B); " is 132.
Long Statement,DeltaEngine.Rendering3D.Shapes,BoxMesh,C:\repos\DeltaEngine_DeltaEngine.Xna\Rendering3D\Shapes\BoxMesh.cs,CreateGeometry,The length of the statement  "	var format = isColored ? VertexFormat.Position3DColor : material.Shader.Flags == ShaderFlags.LitTextured ? VertexFormat.Position3DNormalUV : VertexFormat.Position3DUV; " is 167.
Magic Number,DeltaEngine.Rendering3D.Shapes,Circle3DRenderer,C:\repos\DeltaEngine_DeltaEngine.Xna\Rendering3D\Shapes\Circle3DRenderer.cs,AddVerticesFromEllipse,The following statement contains a magic number: for (int i = 0; i < 360; i += 5) {  	var rotatedPoint = point.RotateAround (Vector3D.UnitZ' i);  	vertices.Add (new VertexPosition3DColor (rotatedPoint + center' color));  }  
Magic Number,DeltaEngine.Rendering3D.Shapes,Circle3DRenderer,C:\repos\DeltaEngine_DeltaEngine.Xna\Rendering3D\Shapes\Circle3DRenderer.cs,AddVerticesFromEllipse,The following statement contains a magic number: for (int i = 0; i < 360; i += 5) {  	var rotatedPoint = point.RotateAround (Vector3D.UnitZ' i);  	vertices.Add (new VertexPosition3DColor (rotatedPoint + center' color));  }  
Magic Number,DeltaEngine.Rendering3D.Shapes,Circle3DRenderer,C:\repos\DeltaEngine_DeltaEngine.Xna\Rendering3D\Shapes\Circle3DRenderer.cs,AddVerticesFromEllipse,The following statement contains a magic number: i += 5
Magic Number,DeltaEngine.Rendering3D.Shapes,LevelDebugRenderer,C:\repos\DeltaEngine_DeltaEngine.Xna\Rendering3D\Shapes\LevelDebugRenderer.cs,Initialize,The following statement contains a magic number: if (map.RenderIn3D) {  	if (grid3D != null)  		Dispose3D ();  	//ncrunch: no coverage  	grid3D = new Grid3D (map.Size) {  		RenderLayer = 10  	};  	models = new Model[(int)map.Size.Width * (int)map.Size.Height];  }  else {  	if (grid2D != null)  		Dispose2D ();  	//ncrunch: no coverage  	grid2D = new Grid2D (map.Size' Vector2D.Half' GridScale) {  		RenderLayer = 10  	};  	rectangles = new FilledRect[(int)map.Size.Width * (int)map.Size.Height];  }  
Magic Number,DeltaEngine.Rendering3D.Shapes,LevelDebugRenderer,C:\repos\DeltaEngine_DeltaEngine.Xna\Rendering3D\Shapes\LevelDebugRenderer.cs,Initialize,The following statement contains a magic number: if (map.RenderIn3D) {  	if (grid3D != null)  		Dispose3D ();  	//ncrunch: no coverage  	grid3D = new Grid3D (map.Size) {  		RenderLayer = 10  	};  	models = new Model[(int)map.Size.Width * (int)map.Size.Height];  }  else {  	if (grid2D != null)  		Dispose2D ();  	//ncrunch: no coverage  	grid2D = new Grid2D (map.Size' Vector2D.Half' GridScale) {  		RenderLayer = 10  	};  	rectangles = new FilledRect[(int)map.Size.Width * (int)map.Size.Height];  }  
Magic Number,DeltaEngine.Rendering3D.Shapes,LevelDebugRenderer,C:\repos\DeltaEngine_DeltaEngine.Xna\Rendering3D\Shapes\LevelDebugRenderer.cs,Initialize,The following statement contains a magic number: grid3D = new Grid3D (map.Size) {  	RenderLayer = 10  };  
Magic Number,DeltaEngine.Rendering3D.Shapes,LevelDebugRenderer,C:\repos\DeltaEngine_DeltaEngine.Xna\Rendering3D\Shapes\LevelDebugRenderer.cs,Initialize,The following statement contains a magic number: grid2D = new Grid2D (map.Size' Vector2D.Half' GridScale) {  	RenderLayer = 10  };  
Magic Number,DeltaEngine.Rendering3D.Shapes,LevelDebugRenderer,C:\repos\DeltaEngine_DeltaEngine.Xna\Rendering3D\Shapes\LevelDebugRenderer.cs,UpdateTile2D,The following statement contains a magic number: color.A = (byte)(color == Color.Black ? 0 : 100);  
Magic Number,DeltaEngine.Rendering3D.Shapes,LevelDebugRenderer,C:\repos\DeltaEngine_DeltaEngine.Xna\Rendering3D\Shapes\LevelDebugRenderer.cs,UpdateTile2D,The following statement contains a magic number: rect.RenderLayer = 10;  
