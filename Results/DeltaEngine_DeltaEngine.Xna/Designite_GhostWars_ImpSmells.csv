Implementation smell,Namespace,Class,File,Method,Description
Complex Method,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,UpdateBars,Cyclomatic complexity of the method is 8
Long Parameter List,GhostWars,MainMenu,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\MainMenu.cs,AddMenuOption,The method has 5 parameters.
Long Parameter List,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,AddTree,The method has 5 parameters.
Long Statement,GhostWars,MainMenu,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\MainMenu.cs,AddMenuBackground,The length of the statement  "	background = new Sprite (new Material (ShaderFlags.Position2DColoredTextured' "MenuBackground")' ScreenSpace.Scene.Viewport) { " is 126.
Long Statement,GhostWars,MainMenu,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\MainMenu.cs,AddSubMenuBackButton,The length of the statement  "	var buttonRect = new Rectangle (ScreenSpace.Current.Viewport.Left + 0.025f' ScreenSpace.Current.Viewport.Bottom - 0.075f' 0.125f' 0.05f); " is 137.
Long Statement,GhostWars,MainMenu,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\MainMenu.cs,AddLevelSelection,The length of the statement  "	var levelText = new FontText (Font' levelNumber + ""' Rectangle.FromCenter (mapDrawArea.Center - new Vector2D (0.0f' 0.115f)' new Size (0.2f' 0.1f))); " is 150.
Long Statement,GhostWars,MainMenu,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\MainMenu.cs,StartGame,The length of the statement  "	background = new Sprite (new Material (ShaderFlags.Position2DColoredTextured' "Background")' ScreenSpace.Scene.Viewport) { " is 122.
Long Statement,GhostWars,TeamExtensions,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Team.cs,ToColor,The length of the statement  "	return team == Team.None ? Color.Gray : team == Team.HumanYellow ? GameLogic.TeamHumanYellowColor : team == Team.ComputerPurple ? GameLogic.TeamComputerPurpleColor : GameLogic.TeamComputerTealColor; " is 198.
Long Statement,GhostWars,Tree,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Tree.cs,Update,The length of the statement  "	if (CurrentTeam == Team.None || MainMenu.State != GameState.Game || !Time.CheckEvery (Level == 1 ? 1.5f : Level == 2 ? 1.0f : 0.75f)) " is 133.
Long Statement,GhostWars,Tree,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Tree.cs,Update,The length of the statement  "	Effects.CreateSparkleEffect (CurrentTeam' Center + new Vector2D (Randomizer.Current.Get (-0.04f' 0.04f)' Randomizer.Current.Get (-0.04f' 0.04f))' 1); " is 149.
Long Statement,GhostWars,Tree,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Tree.cs,MoveToOwnTree,The length of the statement  "	Effects.CreateSparkleEffect (CurrentTeam' Center + new Vector2D (Randomizer.Current.Get (-0.04f' 0.04f)' Randomizer.Current.Get (-0.04f' 0.04f))' numberOfAttackerGhosts); " is 170.
Long Statement,GhostWars,Tree,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Tree.cs,ShowAttackEffects,The length of the statement  "		Effects.CreateDeathEffect (Center + new Vector2D (Randomizer.Current.Get (-0.03f' 0.03f)' Randomizer.Current.Get (-0.03f' 0.03f))); " is 131.
Long Statement,GhostWars,Tree,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Tree.cs,TryToUpgrade,The length of the statement  "	Effects.CreateSparkleEffect (CurrentTeam' Center + new Vector2D (Randomizer.Current.Get (-0.04f' 0.04f)' Randomizer.Current.Get (-0.04f' 0.04f))' 8); " is 149.
Long Statement,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,AddTree,The length of the statement  "	new Command (newTree.TryToUpgrade).Add (new MouseHoldTrigger (newTree.DrawArea)).Add (new TouchHoldTrigger (newTree.DrawArea)); " is 127.
Long Statement,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,AddTree,The length of the statement  "	new Command ((start' end' dragDone) => MoveGhostsFromTreeToTree (start' end' dragDone' newTree)).Add (new MouseDragTrigger ()).Add (new TouchDragTrigger ()); " is 157.
Long Statement,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,MoveGhostsFromTreeToTree,The length of the statement  "	if (startTree.CurrentTeam != MainMenu.PlayerTeam || targetTree == startTree || MainMenu.State != GameState.Game || startTree.Center.DistanceTo (end) < 0.05f) " is 157.
Long Statement,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,MoveGhostsFromTreeToTree,The length of the statement  "	if ((dragDone && Time.Total - lastWaveSend > TimeBetweenWaves || !dragDone && Time.CheckEvery (TimeBetweenWaves)) && startTree.NumberOfGhosts >= 1) { " is 149.
Long Statement,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,FindNearestTree,The length of the statement  "				treeDistance += Math.Abs (previousTree.Center.RotationTo (target) - previousTree.Center.RotationTo (tree.Center)) / 500.0f; " is 123.
Long Statement,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,FindNearestTreeWeakTree,The length of the statement  "		if (tree.CurrentTeam != Team.None && tree.CurrentTeam != sourceTree.CurrentTeam && tree.NumberOfGhosts < sourceTree.NumberOfGhosts) { " is 133.
Complex Conditional,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,MoveGhostsFromTreeToTree,The conditional expression  "startTree.CurrentTeam != MainMenu.PlayerTeam || targetTree == startTree || MainMenu.State != GameState.Game || startTree.Center.DistanceTo (end) < 0.05f"  is complex.
Complex Conditional,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,MoveGhostsFromTreeToTree,The conditional expression  "(dragDone && Time.Total - lastWaveSend > TimeBetweenWaves || !dragDone && Time.CheckEvery (TimeBetweenWaves)) && startTree.NumberOfGhosts >= 1"  is complex.
Magic Number,GhostWars,Effects,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Effects.cs,CalculateArrowDrawArea,The following statement contains a magic number: return Rectangle.FromCenter ((start + target) / 2' size * GameLogic.ArrowSize);  
Magic Number,GhostWars,MainMenu,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\MainMenu.cs,AddMenuOption,The following statement contains a magic number: button.RenderLayer = 10;  
Magic Number,GhostWars,MainMenu,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\MainMenu.cs,AddSubMenuBackButton,The following statement contains a magic number: button.RenderLayer = 10;  
Magic Number,GhostWars,MainMenu,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\MainMenu.cs,OnSingleplayer,The following statement contains a magic number: AddLevelSelection (2' clickAreas [1]);  
Magic Number,GhostWars,MainMenu,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\MainMenu.cs,OnSingleplayer,The following statement contains a magic number: AddLevelSelection (3' clickAreas [2]);  
Magic Number,GhostWars,MainMenu,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\MainMenu.cs,OnSingleplayer,The following statement contains a magic number: AddLevelSelection (3' clickAreas [2]);  
Magic Number,GhostWars,MainMenu,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\MainMenu.cs,StartGame,The following statement contains a magic number: if (level == 1)  	SetupLevel1Trees ();  else if (level == 2)  	SetupLevel2Trees ();  else  	SetupLevel3Trees ();  
Magic Number,GhostWars,MainMenu,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\MainMenu.cs,StartGame,The following statement contains a magic number: if (level == 2)  	SetupLevel2Trees ();  else  	SetupLevel3Trees ();  
Magic Number,GhostWars,MainMenu,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\MainMenu.cs,SetupLevel2Trees,The following statement contains a magic number: CurrentLevel = 2;  
Magic Number,GhostWars,MainMenu,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\MainMenu.cs,SetupLevel3Trees,The following statement contains a magic number: CurrentLevel = 3;  
Magic Number,GhostWars,Tree,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Tree.cs,Tree,The following statement contains a magic number: NumberText = new FontText (MainMenu.Font' ""' Rectangle.FromCenter (position + NumberTextPositionPerLevel [0]' new Size (0.1f))) {  	RenderLayer = 4  };  
Magic Number,GhostWars,Tree,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Tree.cs,Tree,The following statement contains a magic number: NumberOfGhosts = team == Team.None ? 0 : 25;  
Magic Number,GhostWars,Tree,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Tree.cs,Tree,The following statement contains a magic number: RenderLayer = 3;  
Magic Number,GhostWars,Tree,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Tree.cs,Update,The following statement contains a magic number: if (CurrentTeam == Team.None || MainMenu.State != GameState.Game || !Time.CheckEvery (Level == 1 ? 1.5f : Level == 2 ? 1.0f : 0.75f))  	return;  
Magic Number,GhostWars,Tree,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Tree.cs,DeterminateAttackerGhostsLeft,The following statement contains a magic number: if (NumberOfGhosts > 20)  	numberOfAttackerGhosts--;  
Magic Number,GhostWars,Tree,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Tree.cs,DeterminateAttackerGhostsLeft,The following statement contains a magic number: if (NumberOfGhosts >= 60)  	numberOfAttackerGhosts--;  
Magic Number,GhostWars,Tree,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Tree.cs,TryToUpgrade,The following statement contains a magic number: if (Level > 2 || NumberOfGhosts < Level * GameLogic.GhostsToUpgrade || CurrentTeam != Team.HumanYellow)  	return;  
Magic Number,GhostWars,Tree,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\Tree.cs,TryToUpgrade,The following statement contains a magic number: Effects.CreateSparkleEffect (CurrentTeam' Center + new Vector2D (Randomizer.Current.Get (-0.04f' 0.04f)' Randomizer.Current.Get (-0.04f' 0.04f))' 8);  
Magic Number,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,TreeManager,The following statement contains a magic number: statusText.RenderLayer = 5;  
Magic Number,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,TreeManager,The following statement contains a magic number: logo.RenderLayer = -15;  
Magic Number,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,CreateArrowSelectionAndBars,The following statement contains a magic number: foreach (var bar in bars)  	bar.RenderLayer = -20;  
Magic Number,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,CreateArrowSelectionAndBars,The following statement contains a magic number: bar.RenderLayer = -20;  
Magic Number,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,UpdateBars,The following statement contains a magic number: for (int i = 0; i < 3; i++)  	ghosts [i] = 0;  
Magic Number,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,UpdateBars,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	float width = (float)ghosts [i] / totalGhosts;  	bars [i].DrawArea = barsArea.GetInnerRectangle (new Rectangle (oldX' 0' width' 1));  	oldX += width;  }  
Magic Number,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,HandleWinSitutation,The following statement contains a magic number: displayedEntities.Add (new Sprite (new Material (ShaderFlags.Position2DTextured' "YouWin")' Vector2D.Half) {  	RenderLayer = 4000  });  
Magic Number,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,HandleLostSituation,The following statement contains a magic number: displayedEntities.Add (new Sprite (new Material (ShaderFlags.Position2DTextured' "GameOver")' Vector2D.Half) {  	RenderLayer = 4000  });  
Magic Number,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,HandleAi,The following statement contains a magic number: if (tree.NumberOfGhosts > 10 && nearestFreeTree != null)  	SendWave (tree' nearestFreeTree);  else if (tree.NumberOfGhosts > 15 && nearestTree != null)  	SendWave (tree' nearestTree);  else if (tree.NumberOfGhosts > 25)  	SendWave (tree' trees [Randomizer.Current.Get (0' trees.Count)]);  
Magic Number,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,HandleAi,The following statement contains a magic number: if (tree.NumberOfGhosts > 10 && nearestFreeTree != null)  	SendWave (tree' nearestFreeTree);  else if (tree.NumberOfGhosts > 15 && nearestTree != null)  	SendWave (tree' nearestTree);  else if (tree.NumberOfGhosts > 25)  	SendWave (tree' trees [Randomizer.Current.Get (0' trees.Count)]);  
Magic Number,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,HandleAi,The following statement contains a magic number: if (tree.NumberOfGhosts > 10 && nearestFreeTree != null)  	SendWave (tree' nearestFreeTree);  else if (tree.NumberOfGhosts > 15 && nearestTree != null)  	SendWave (tree' nearestTree);  else if (tree.NumberOfGhosts > 25)  	SendWave (tree' trees [Randomizer.Current.Get (0' trees.Count)]);  
Magic Number,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,HandleAi,The following statement contains a magic number: if (tree.NumberOfGhosts > 15 && nearestTree != null)  	SendWave (tree' nearestTree);  else if (tree.NumberOfGhosts > 25)  	SendWave (tree' trees [Randomizer.Current.Get (0' trees.Count)]);  
Magic Number,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,HandleAi,The following statement contains a magic number: if (tree.NumberOfGhosts > 15 && nearestTree != null)  	SendWave (tree' nearestTree);  else if (tree.NumberOfGhosts > 25)  	SendWave (tree' trees [Randomizer.Current.Get (0' trees.Count)]);  
Magic Number,GhostWars,TreeManager,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\TreeManager.cs,HandleAi,The following statement contains a magic number: if (tree.NumberOfGhosts > 25)  	SendWave (tree' trees [Randomizer.Current.Get (0' trees.Count)]);  
Magic Number,GhostWars,GhostWave,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\GhostWave.cs,CurrentDrawArea,The following statement contains a magic number: pos += vertical * MathExtensions.Sin (runTime * 300) * 0.0035f;  
Magic Number,GhostWars,GhostWave,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\GhostWave.cs,CurrentDrawArea,The following statement contains a magic number: pos += vertical * MathExtensions.Sin (runTime * 44 + num * 27) * 0.0135f;  
Magic Number,GhostWars,GhostWave,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\GhostWave.cs,CurrentDrawArea,The following statement contains a magic number: pos += vertical * MathExtensions.Sin (runTime * 44 + num * 27) * 0.0135f;  
Magic Number,GhostWars,GhostWave,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\GhostWave.cs,CurrentDrawArea,The following statement contains a magic number: pos += vertical * SpreadDistance * CalcDistanceFromCenter (num' 1.0f' 90' 90);  
Magic Number,GhostWars,GhostWave,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\GhostWave.cs,CurrentDrawArea,The following statement contains a magic number: pos += vertical * SpreadDistance * CalcDistanceFromCenter (num' 1.0f' 90' 90);  
Magic Number,GhostWars,GhostWave,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\GhostWave.cs,CurrentRotation,The following statement contains a magic number: return start.RotationTo (target) + distanceFromCenter * 30 + (start.RotationTo (target).Abs () < 90 ? 0 : 180);  
Magic Number,GhostWars,GhostWave,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\GhostWave.cs,CurrentRotation,The following statement contains a magic number: return start.RotationTo (target) + distanceFromCenter * 30 + (start.RotationTo (target).Abs () < 90 ? 0 : 180);  
Magic Number,GhostWars,GhostWave,C:\repos\DeltaEngine_DeltaEngine.Xna\Samples\GhostWars\GhostWave.cs,CurrentRotation,The following statement contains a magic number: return start.RotationTo (target) + distanceFromCenter * 30 + (start.RotationTo (target).Abs () < 90 ? 0 : 180);  
