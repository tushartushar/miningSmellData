Implementation smell,Namespace,Class,File,Method,Description
Long Method,StarryEyes.Anomaly.TwitterApi.Streams,TwitterStreamParser,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Streams\TwitterStreamParser.cs,ParseNotStatusStreamLine,The method has 121 lines of code.
Complex Method,StarryEyes.Anomaly.TwitterApi.DataModels,TwitterEntity,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\DataModels\TwitterEntity.cs,GetEntities,Cyclomatic complexity of the method is 11
Complex Method,StarryEyes.Anomaly.TwitterApi.Streams,TwitterStreamParser,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Streams\TwitterStreamParser.cs,ParseNotStatusStreamLine,Cyclomatic complexity of the method is 16
Long Parameter List,StarryEyes.Anomaly,OAuthCredentialExtension,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\OAuthCredentialExtension.cs,CreateOAuthEchoClient,The method has 5 parameters. Parameters: credential' serviceProvider' realm' optionalHeaders' useGZip
Long Parameter List,StarryEyes.Anomaly.Ext,OAuthEchoMessageHandler,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\Ext\OAuthEchoMessageHandler.cs,OAuthEchoMessageHandler,The method has 6 parameters. Parameters: serviceProvider' realm' consumerKey' consumerSecret' token' optionalOAuthHeaderParameters
Long Parameter List,StarryEyes.Anomaly.Ext,OAuthEchoMessageHandler,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\Ext\OAuthEchoMessageHandler.cs,OAuthEchoMessageHandler,The method has 7 parameters. Parameters: innerHandler' serviceProvider' realm' consumerKey' consumerSecret' token' optionalOAuthHeaderParameters
Long Parameter List,StarryEyes.Anomaly.TwitterApi.DataModels.Streams.Events,StreamEvent<TObject;TEvent>,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\DataModels\Streams\Events\StreamEvent.cs,StreamEvent,The method has 6 parameters. Parameters: source' target' targetObject' event' rawEvent' createdAt
Long Parameter List,StarryEyes.Anomaly.TwitterApi.DataModels.Streams.Events,StreamListEvent,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\DataModels\Streams\Events\StreamListEvent.cs,StreamListEvent,The method has 5 parameters. Parameters: source' target' targetObject' rawEvent' createdAt
Long Parameter List,StarryEyes.Anomaly.TwitterApi.DataModels.Streams.Events,StreamStatusEvent,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\DataModels\Streams\Events\StreamStatusEvent.cs,StreamStatusEvent,The method has 5 parameters. Parameters: source' target' targetObject' rawEvent' createdAt
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Accounts,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Accounts.cs,UpdateProfileAsync,The method has 5 parameters. Parameters: credential' name' url' location' description
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,DirectMessages,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\DirectMessages.cs,GetSentDirectMessagesAsync,The method has 5 parameters. Parameters: credential' count' sinceId' maxId' page
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Favorites,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Favorites.cs,GetFavoritesAsync,The method has 6 parameters. Parameters: credential' userId' count' sinceId' maxId' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Favorites,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Favorites.cs,GetFavoritesAsync,The method has 6 parameters. Parameters: credential' screenName' count' sinceId' maxId' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Favorites,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Favorites.cs,GetFavoritesCoreAsync,The method has 7 parameters. Parameters: credential' userId' screenName' count' sinceId' maxId' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Lists,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Lists.cs,ShowListCoreAsync,The method has 5 parameters. Parameters: credential' listId' userId' screenName' slug
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Lists,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Lists.cs,GetListTimelineAsync,The method has 7 parameters. Parameters: credential' listId' sinceId' maxId' count' includeRts' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Lists,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Lists.cs,GetListTimelineAsync,The method has 8 parameters. Parameters: credential' slug' userId' sinceId' maxId' count' includeRts' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Lists,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Lists.cs,GetListTimelineAsync,The method has 8 parameters. Parameters: credential' slug' screenName' sinceId' maxId' count' includeRts' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Lists,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Lists.cs,GetListTimelineCoreAsync,The method has 10 parameters. Parameters: credential' listId' slug' userId' screenName' sinceId' maxId' count' includeRts' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Lists,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Lists.cs,GetListMembersCoreAsync,The method has 6 parameters. Parameters: credential' listId' slug' userId' screenName' cursor
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Relations,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Relations.cs,GetFriendsIdsCoreAsync,The method has 5 parameters. Parameters: credential' userId' screenName' cursor' count
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Relations,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Relations.cs,GetFollowersIdsCoreAsync,The method has 5 parameters. Parameters: credential' userId' screenName' cursor' count
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Relations,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Relations.cs,ShowFriendshipCoreAsync,The method has 5 parameters. Parameters: credential' sourceId' sourceScreenName' targetId' targetScreenName
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Relations,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Relations.cs,UpdateFriendshipCoreAsync,The method has 5 parameters. Parameters: credential' userId' screenName' enableDeviceNotifications' showRetweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Searching,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Searching.cs,SearchAsync,The method has 11 parameters. Parameters: credential' query' geoCode' lang' locale' resultType' count' untilDate' sinceId' maxId' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Timelines,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Timelines.cs,GetHomeTimelineAsync,The method has 5 parameters. Parameters: credential' count' sinceId' maxId' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Timelines,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Timelines.cs,GetUserTimelineAsync,The method has 8 parameters. Parameters: credential' userId' count' sinceId' maxId' excludeReplies' includeRetweets' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Timelines,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Timelines.cs,GetUserTimelineAsync,The method has 8 parameters. Parameters: credential' screenName' count' sinceId' maxId' excludeReplies' includeRetweets' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Timelines,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Timelines.cs,GetUserTimelineCoreAsync,The method has 9 parameters. Parameters: credential' userId' screenName' count' sinceId' maxId' excludeReplies' includeRetweets' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Timelines,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Timelines.cs,GetMentionsAsync,The method has 6 parameters. Parameters: credential' count' sinceId' maxId' includeRetweets' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Timelines,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Timelines.cs,GetRetweetsOfMeAsync,The method has 5 parameters. Parameters: credential' count' sinceId' maxId' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Rest,Tweets,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Tweets.cs,UpdateAsync,The method has 8 parameters. Parameters: credential' status' inReplyToStatusId' geoLatLong' placeId' displayCoordinates' mediaIds' extendedTweet
Long Parameter List,StarryEyes.Anomaly.TwitterApi.Streams,UserStreams,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Streams\UserStreams.cs,Connect,The method has 7 parameters. Parameters: credential' parser' readTimeout' cancellationToken' tracksOrNull' repliesAll' followingsActivity
Long Statement,StarryEyes.Anomaly.Ext,DynamicJson,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\Ext\DynamicJson.cs,Parse,The length of the statement  "            using (var reader = JsonReaderWriterFactory.CreateJsonReader(stream' encoding' XmlDictionaryReaderQuotas.Max' _ => { })) " is 120.
Long Statement,StarryEyes.Anomaly.TwitterApi.Rest,Timelines,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Timelines.cs,GetUserTimelineAsync,The length of the statement  "            return GetUserTimelineCoreAsync(credential' userId' null' count' sinceId' maxId' excludeReplies' includeRetweets' extendedTweet); " is 129.
Long Statement,StarryEyes.Anomaly.TwitterApi.Rest,Timelines,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Rest\Timelines.cs,GetUserTimelineAsync,The length of the statement  "            return GetUserTimelineCoreAsync(credential' null' screenName' count' sinceId' maxId' excludeReplies' includeRetweets' extendedTweet); " is 133.
Complex Conditional,StarryEyes.Anomaly.Utils,HttpUtility,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\Utils\HttpUtility.cs,UrlEncode,The conditional expression  "i >= 0x30 && i <= 0x39 || i >= 0x41 && i <= 0x5a || i >= 0x61 && i <= 0x7a"  is complex.
Empty Catch Block,StarryEyes.Anomaly.TwitterApi,TwitterApiExceptionHandler,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\TwitterApiException.cs,SendAsync,The method has an empty catch block.
Magic Number,StarryEyes.Anomaly.TwitterApi.Streams.Internals,CancellableStreamReader,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Streams\Internals\CancellableStreamReader.cs,ReadLineAsync,The following statement contains a magic number: do              {                  cancellationToken.ThrowIfCancellationRequested();                  if (_bufferCursor == _bufferedLength)                  {                      await ReceiveToBufferAsync(cancellationToken).ConfigureAwait(false);                      // hit to End of Stream and internal buffer is empty.                      if (_bufferedLength == 0 && builder == null) return null;                  }                    // check next char is '\n' if before trailing char of line is '\r'.                  if (_skipNextLineFeed && _bufferCursor < _bufferedLength && _buffer[_bufferCursor] == '\n')                  {                      // previous receive ends with '\r'' so we should ignore next '\n'.                      _bufferCursor++;                  }                  _skipNextLineFeed = false;                    // find End of Line char (\r OR \n OR \r\n).                  for (var i = _bufferCursor; i < _bufferedLength; i++)                  {                      if (_buffer[i] != '\r' && _buffer[i] != '\n') continue;                        // build return string' not contains line-feed char.                      var retstr = builder == null || builder.Length == 0                          ? new String(_buffer' _bufferCursor' i - _bufferCursor)                          : GetStringAndRecycle(builder.Append(_buffer' _bufferCursor' i - _bufferCursor));                        // point next char                      _bufferCursor = i + 1;                      if (_buffer[i] == '\r')                      {                          if (i + 1 <= _bufferedLength)                          {                              _skipNextLineFeed = true;                          }                          else if (_buffer[i + 1] != '\n')                          {                              _bufferCursor++;                          }                      }                      return retstr;                  }                    // buffer not contains '\r' or '\n'.                  if (builder == null)                  {                      builder = new StringBuilder(_buffer.Length * 2);                  }                  builder.Append(_buffer' _bufferCursor' _bufferedLength - _bufferCursor);                  // buffer cursor hit to end                  _bufferCursor = _bufferedLength;              } while (_bufferedLength != 0);
Magic Number,StarryEyes.Anomaly.TwitterApi.Streams.Internals,CancellableStreamReader,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Streams\Internals\CancellableStreamReader.cs,GetStringAndRecycle,The following statement contains a magic number: if (result.Length > _buffer.Length)              {                  _recycleThreshold = _recycleThreshold > result.Length                      ? _recycleThreshold * 0.9 + result.Length * 0.1                      : _recycleThreshold * 0.5 + result.Length * 0.5;              }
Magic Number,StarryEyes.Anomaly.TwitterApi.Streams.Internals,CancellableStreamReader,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Streams\Internals\CancellableStreamReader.cs,GetStringAndRecycle,The following statement contains a magic number: if (result.Length > _buffer.Length)              {                  _recycleThreshold = _recycleThreshold > result.Length                      ? _recycleThreshold * 0.9 + result.Length * 0.1                      : _recycleThreshold * 0.5 + result.Length * 0.5;              }
Magic Number,StarryEyes.Anomaly.TwitterApi.Streams.Internals,CancellableStreamReader,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Streams\Internals\CancellableStreamReader.cs,GetStringAndRecycle,The following statement contains a magic number: if (result.Length > _buffer.Length)              {                  _recycleThreshold = _recycleThreshold > result.Length                      ? _recycleThreshold * 0.9 + result.Length * 0.1                      : _recycleThreshold * 0.5 + result.Length * 0.5;              }
Magic Number,StarryEyes.Anomaly.TwitterApi.Streams.Internals,CancellableStreamReader,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Streams\Internals\CancellableStreamReader.cs,GetStringAndRecycle,The following statement contains a magic number: if (result.Length > _buffer.Length)              {                  _recycleThreshold = _recycleThreshold > result.Length                      ? _recycleThreshold * 0.9 + result.Length * 0.1                      : _recycleThreshold * 0.5 + result.Length * 0.5;              }
Magic Number,StarryEyes.Anomaly.TwitterApi.Streams.Internals,CancellableStreamReader,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Streams\Internals\CancellableStreamReader.cs,GetStringAndRecycle,The following statement contains a magic number: if (_recycledStringBuilder == builder &&                  builder.Capacity > _recycleThreshold * 4)              {                  // builder is too large? => not to recycle                  _recycledStringBuilder = null;              }              else              {                  // prepare for recycling StringBuilder                  builder.Clear();                  _recycledStringBuilder = builder;              }
Magic Number,StarryEyes.Anomaly.TwitterApi.Streams,StreamWinder,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Streams\StreamWinder.cs,Run,The following statement contains a magic number: try              {                  using (var tokenSource = CancellationTokenSource.CreateLinkedTokenSource(cancellationToken))                  using (var reader = new CancellableStreamReader(stream))                  {                      var localToken = tokenSource.Token;                      // start parser worker thread                      StartParserWorker(parseCollection' parser' localToken);                        while (true)                      {                          // set read timeout(add epsilon time to timeout (100 msec))                          tokenSource.CancelAfter(readTimeout + TimeSpan.FromTicks(10000 * 100));                            // execute reading next line and await completion                          var line = await reader.ReadLineAsync(localToken).ConfigureAwait(false);                            localToken.ThrowIfCancellationRequested();                            // disable timer                          tokenSource.CancelAfter(Timeout.InfiniteTimeSpan);                            // send previous line to subsequent stage                          if (!String.IsNullOrWhiteSpace(line))                          {                              parseCollection.Add(line' localToken);                          }                            if (line == null)                          {                              break;                          }                      }                  }              }              finally              {                  parseCollection.CompleteAdding();              }
Magic Number,StarryEyes.Anomaly.TwitterApi.Streams,StreamWinder,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\Streams\StreamWinder.cs,Run,The following statement contains a magic number: try              {                  using (var tokenSource = CancellationTokenSource.CreateLinkedTokenSource(cancellationToken))                  using (var reader = new CancellableStreamReader(stream))                  {                      var localToken = tokenSource.Token;                      // start parser worker thread                      StartParserWorker(parseCollection' parser' localToken);                        while (true)                      {                          // set read timeout(add epsilon time to timeout (100 msec))                          tokenSource.CancelAfter(readTimeout + TimeSpan.FromTicks(10000 * 100));                            // execute reading next line and await completion                          var line = await reader.ReadLineAsync(localToken).ConfigureAwait(false);                            localToken.ThrowIfCancellationRequested();                            // disable timer                          tokenSource.CancelAfter(Timeout.InfiniteTimeSpan);                            // send previous line to subsequent stage                          if (!String.IsNullOrWhiteSpace(line))                          {                              parseCollection.Add(line' localToken);                          }                            if (line == null)                          {                              break;                          }                      }                  }              }              finally              {                  parseCollection.CompleteAdding();              }
Magic Number,StarryEyes.Anomaly.Utils,ImageUriUtility,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\Utils\HttpUtility.cs,ChangeImageSize,The following statement contains a magic number: if ((extpos = str.LastIndexOf('.')) < 0 ||                  str.Length - extpos > 10) // extension is too long              {                  return imageUri;              }
Magic Number,StarryEyes.Anomaly.Utils,ImageUriUtility,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\Utils\HttpUtility.cs,MakeOriginal,The following statement contains a magic number: if (uriStr.Length < 7) return uriStr;
Magic Number,StarryEyes.Anomaly.Utils,ImageUriUtility,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\Utils\HttpUtility.cs,MakeOriginal,The following statement contains a magic number: if (uriStr[uriStr.Length - 7] == '_')              {                  // bigger' normal                  return uriStr.Substring(0' uriStr.Length - 7);              }
Magic Number,StarryEyes.Anomaly.Utils,ImageUriUtility,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\Utils\HttpUtility.cs,MakeOriginal,The following statement contains a magic number: if (uriStr[uriStr.Length - 7] == '_')              {                  // bigger' normal                  return uriStr.Substring(0' uriStr.Length - 7);              }
Magic Number,StarryEyes.Anomaly.Utils,ImageUriUtility,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\Utils\HttpUtility.cs,MakeOriginal,The following statement contains a magic number: if (uriStr[uriStr.Length - 5] == '_')              {                  // mini                  return uriStr.Substring(0' uriStr.Length - 5);              }
Magic Number,StarryEyes.Anomaly.Utils,ImageUriUtility,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\Utils\HttpUtility.cs,MakeOriginal,The following statement contains a magic number: if (uriStr[uriStr.Length - 5] == '_')              {                  // mini                  return uriStr.Substring(0' uriStr.Length - 5);              }
Magic Number,StarryEyes.Anomaly.Utils,TextSurrogateHelper,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\Utils\TextSurrogateHelper.cs,UnsurrogatedLength,The following statement contains a magic number: return str.Sum(c => Char.IsHighSurrogate(c) ? 2 : 1);
Magic Number,StarryEyes.Anomaly.Utils,UnixEpoch,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\Utils\UnixEpoch.cs,GetUnixEpochByDateTime,The following statement contains a magic number: return (int)((dt.ToUniversalTime().Ticks - Epoch) / 10000000);
Magic Number,StarryEyes.Anomaly.Utils,UnixEpoch,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\Utils\UnixEpoch.cs,GetDateTimeByUnixEpoch,The following statement contains a magic number: var unix = new DateTime(1970' 1' 1);
Missing Default,StarryEyes.Anomaly.TwitterApi.DataModels,TwitterStatus,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\DataModels\TwitterStatus.cs,GetEntityAidedText,The following switch statement is missing a default case: switch (entity.EntityType)                         {                             case EntityType.Hashtags:                                 builder.Append("#" + entity.DisplayText);                                 break;                             case EntityType.Urls:                                 // url entity:                                 // display_url: example.com/CUTTED OFF...                                 // original_url => expanded_url: example.com/full_original_url                                 builder.Append(displayMode == EntityDisplayMode.DisplayText                                     ? ParsingExtension.ResolveEntity(entity.DisplayText)                                     : ParsingExtension.ResolveEntity(entity.OriginalUrl));                                 break;                             case EntityType.Media:                                 // media entity:                                 // display_url: pic.twitter.com/IMAGE_ID                                 // media_url: pbs.twimg.com/media/ACTUAL_IMAGE_RESOURCE_ID                                 // url: t.co/IMAGE_ID                                 builder.Append(                                     displayMode == EntityDisplayMode.DisplayText                                         ? ParsingExtension.ResolveEntity(entity.DisplayText)                                         : displayMode == EntityDisplayMode.LinkUri                                             ? ParsingExtension.ResolveEntity(entity.DisplayText)                                             : ParsingExtension.ResolveEntity(entity.MediaUrl));                                 break;                             case EntityType.UserMentions:                                 builder.Append("@" + entity.DisplayText);                                 break;                         }
Missing Default,StarryEyes.Anomaly.TwitterApi.DataModels,TwitterUser,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\TwitterApi\DataModels\TwitterUser.cs,GetEntityAidedDescription,The following switch statement is missing a default case: switch (entity.EntityType)                  {                      case EntityType.Hashtags:                          builder.Append("#" + entity.DisplayText);                          break;                      case EntityType.Urls:                          builder.Append(showFullUrl                                             ? ParsingExtension.ResolveEntity(entity.OriginalUrl)                                             : ParsingExtension.ResolveEntity(entity.DisplayText));                          break;                      case EntityType.Media:                          builder.Append(showFullUrl                                             ? ParsingExtension.ResolveEntity(entity.MediaUrl)                                             : ParsingExtension.ResolveEntity(entity.DisplayText));                          break;                      case EntityType.UserMentions:                          builder.Append("@" + entity.DisplayText);                          break;                  }
Missing Default,StarryEyes.Anomaly.Utils,ImageUriUtility,C:\repos\karno_StarryEyes\StarryEyes.Anomaly\Utils\HttpUtility.cs,ChangeImageSize,The following switch statement is missing a default case: switch (size)              {                  case ImageSize.Normal:                      body += "_normal";                      break;                  case ImageSize.Bigger:                      body += "_bigger";                      break;                  case ImageSize.Mini:                      body += "_mini";                      break;              }
