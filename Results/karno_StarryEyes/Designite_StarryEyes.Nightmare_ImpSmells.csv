Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,StarryEyes.Nightmare.Windows,NativeMethods,F:\newReposMay17\karno_StarryEyes\StarryEyes.Nightmare\Windows\NativeMethods.cs,GetUserObjectInformation,The method has 5 parameters.
Long Parameter List,StarryEyes.Nightmare.Windows,TaskDialogResult,F:\newReposMay17\karno_StarryEyes\StarryEyes.Nightmare\Windows\TaskDialogResult.cs,TaskDialogResult,The method has 5 parameters.
Long Statement,StarryEyes.Nightmare.Windows,ImageInterop,F:\newReposMay17\karno_StarryEyes\StarryEyes.Nightmare\Windows\ImageInterop.cs,ToWpfBitmap,The length of the statement  "			bd = bmp.LockBits (new Rectangle (0' 0' bmp.Width' bmp.Height)' SDI.ImageLockMode.ReadOnly' SDI.PixelFormat.Format32bppArgb); " is 125.
Long Statement,StarryEyes.Nightmare.Windows,ImageInterop,F:\newReposMay17\karno_StarryEyes\StarryEyes.Nightmare\Windows\ImageInterop.cs,ToGdiBitmap,The length of the statement  "	// http://www.ruche-home.net/%A4%DC%A4%E4%A4%AD%A4%B4%A4%C8/2011-08-02/CopyPixels%20%A5%E1%A5%BD%A5%C3%A5%C9%A4%F2%CD%D1%A4%A4%A4%BF%20WPF%20BitmapSource%20%A4%AB%A4%E9%20GDI%20Bitmap%20%A4%D8%A4%CE%CA%D1%B4%B9 " is 210.
Long Statement,StarryEyes.Nightmare.Windows,ImageInterop,F:\newReposMay17\karno_StarryEyes\StarryEyes.Nightmare\Windows\ImageInterop.cs,ToGdiBitmap,The length of the statement  "			bd = result.LockBits (new Rectangle (0' 0' width' height)' SDI::ImageLockMode.WriteOnly' SDI::PixelFormat.Format32bppArgb); " is 123.
Long Statement,StarryEyes.Nightmare.Windows,NativeMethods,F:\newReposMay17\karno_StarryEyes\StarryEyes.Nightmare\Windows\NativeMethods.cs,SetWindowLongPtr,The length of the statement  "	return Environment.Is64BitProcess ? SetWindowLong64 (hWnd' nIndex' dwNewLong) : SetWindowLong32 (hWnd' nIndex' dwNewLong); " is 122.
Long Statement,StarryEyes.Nightmare.Windows,TaskDialog,F:\newReposMay17\karno_StarryEyes\StarryEyes.Nightmare\Windows\TaskDialog.cs,Show,The length of the statement  "	return new TaskDialogResult (ir.Result' ir.VerificationChecked' ir.RadioButtonResult' ir.CommandButtonResult' ir.CustomButtonResult); " is 133.
Long Statement,StarryEyes.Nightmare.Windows,WindowNativeExtension,F:\newReposMay17\karno_StarryEyes\StarryEyes.Nightmare\Windows\WindowNativeExtension.cs,GetWindowPlacement,The length of the statement  "	return new Rect (wpl.rcNormalPosition.left' wpl.rcNormalPosition.top' width >= 0 ? width : 0' height >= 0 ? height : 0); " is 120.
Magic Number,StarryEyes.Nightmare.Windows,ImageInterop,F:\newReposMay17\karno_StarryEyes\StarryEyes.Nightmare\Windows\ImageInterop.cs,ToWpfBitmap,The following statement contains a magic number: using (var bmp = new Bitmap (image.Width' image.Height' SDI.PixelFormat.Format32bppArgb)) {  	// write to bitmap  	using (var g = Graphics.FromImage (bmp)) {  		g.DrawImage (image' new Point ());  	}  	// prepare values  	var width = bmp.Width;  	var height = bmp.Height;  	var stride = bmp.Width * 4;  	// prepare buffer  	var buffer = new byte[stride * bmp.Height];  	SDI.BitmapData bd = null;  	try {  		// copy pixels  		bd = bmp.LockBits (new Rectangle (0' 0' bmp.Width' bmp.Height)' SDI.ImageLockMode.ReadOnly' SDI.PixelFormat.Format32bppArgb);  		Marshal.Copy (bd.Scan0' buffer' 0' buffer.Length);  	} finally {  		if (bd != null) {  			bmp.UnlockBits (bd);  		}  	}  	// create image from byte buffer  	return BitmapSource.Create (width' height' 96d' 96d' PixelFormats.Bgra32' null' buffer' stride);  }  
Magic Number,StarryEyes.Nightmare.Windows.Forms,Screen,F:\newReposMay17\karno_StarryEyes\StarryEyes.Nightmare\Windows\Forms\Screen.cs,Screen,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Win32NT && Environment.OSVersion.Version >= Windows8) {  	var monitor = NativeMethods.MonitorFromPoint (new System.Drawing.Point ((int)WorkingArea.Left' (int)WorkingArea.Top)' 2);  	NativeMethods.GetDpiForMonitor (monitor' DpiType.Effective' out _dpiX' out _dpiY);  } else {  	var g = Graphics.FromHwnd (IntPtr.Zero);  	var desktop = g.GetHdc ();  	_dpiX = (uint)NativeMethods.GetDeviceCaps (desktop' (int)DeviceCap.LOGPIXELSX);  	_dpiY = (uint)NativeMethods.GetDeviceCaps (desktop' (int)DeviceCap.LOGPIXELSY);  }  
