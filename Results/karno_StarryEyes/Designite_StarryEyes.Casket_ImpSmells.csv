Implementation smell,Namespace,Class,File,Method,Description
Complex Method,StarryEyes.Casket.Cruds.Scaffolding,SentenceGenerator,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\Scaffolding\SentenceGenerator.cs,GetTableCreator,Cyclomatic complexity of the method is 10
Complex Method,StarryEyes.Casket.Cruds.Scaffolding,SentenceGenerator,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\Scaffolding\SentenceGenerator.cs,GetTableInserter,Cyclomatic complexity of the method is 19
Complex Method,StarryEyes.Casket.Cruds.Scaffolding,SentenceGenerator,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\Scaffolding\SentenceGenerator.cs,GetTableAlterer,Cyclomatic complexity of the method is 9
Long Parameter List,StarryEyes.Casket,Database,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Database.cs,StoreStatus,The method has 5 parameters.
Long Statement,StarryEyes.Casket.Cruds,AccountInfoCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\AccountInfoCrud.cs,GetAllAsync,The length of the statement  "	return (await Descriptor.QueryAsync<DatabaseAccountInfo> ("select * from " + TableName + ";"' null)).Select (a => a.Id); " is 120.
Long Statement,StarryEyes.Casket.Cruds,ListCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\ListCrud.cs,GetAsync,The length of the statement  "	return (await Descriptor.QueryAsync<DatabaseList> (CreateSql ("UserId = @userId and LOWER(Slug) = LOWER(@slug) limit 1")' new { " is 127.
Long Statement,StarryEyes.Casket.Cruds,ListUserCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\ListUserCrud.cs,RegisterUsersAsync,The length of the statement  "	return Descriptor.ExecuteAllAsync (userIds.Select (uid => Tuple.Create (TableInserter' (object)new DatabaseListUser (listId' uid)))); " is 133.
Long Statement,StarryEyes.Casket.Cruds,ListUserCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\ListUserCrud.cs,DeleteUsersAsync,The length of the statement  "	return Descriptor.ExecuteAsync (string.Format ("delete from {0} where " + "ListId = @listId and UserId in ({1});"' TableName' uids)' new { " is 138.
Long Statement,StarryEyes.Casket.Cruds,ListUserCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\ListUserCrud.cs,DeleteUserAsync,The length of the statement  "	return Descriptor.ExecuteAsync (string.Format ("delete from {0} where " + "ListId = @listId and UserId = @userId"' TableName)' new { " is 132.
Long Statement,StarryEyes.Casket.Cruds,ListUserCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\ListUserCrud.cs,RemoveUnspecifiedUsersAsync,The length of the statement  "		return Descriptor.ExecuteAsync (string.Format ("delete from {0} where " + "ListId = @listId and UserId not in ({1});"' TableName' uids)' new { " is 142.
Long Statement,StarryEyes.Casket.Cruds,RelationCrudBase,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\RelationCrudBase.cs,ContainsAsync,The length of the statement  "	return (await Descriptor.QueryAsync<DatabaseRelation> (CreateSql ("UserId = @UserId and TargetId = @TargetId limit 1")' new { " is 125.
Long Statement,StarryEyes.Casket.Cruds,RelationCrudBase,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\RelationCrudBase.cs,AddOrUpdateAllAsync,The length of the statement  "	return Descriptor.ExecuteAllAsync (targetIds.Select (id => Tuple.Create (TableInserter' (object)new DatabaseRelation (userId' id)))); " is 133.
Long Statement,StarryEyes.Casket.Cruds,RelationCrudBase,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\RelationCrudBase.cs,DeleteAsync,The length of the statement  "	return Descriptor.ExecuteAsync (string.Format ("delete from {0} where UserId = @UserId and TargetId = @TargetId;"' TableName)' new { " is 132.
Long Statement,StarryEyes.Casket.Cruds,RelationCrudBase,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\RelationCrudBase.cs,DeleteAllAsync,The length of the statement  "	return Descriptor.ExecuteAsync (string.Format ("delete from {0} where UserId = @UserId and TargetId in ({1});"' TableName' tids)' new { " is 135.
Long Statement,StarryEyes.Casket.Cruds,RelationCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\RelationCrudBase.cs,InitializeAsync,The length of the statement  "	return Task.WhenAll (_followings.InitializeAsync (descriptor)' _followers.InitializeAsync (descriptor)' _blockings.InitializeAsync (descriptor)' _noRetweets.InitializeAsync (descriptor)' _mutes.InitializeAsync (descriptor)); " is 224.
Long Statement,StarryEyes.Casket.Cruds,RelationCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\RelationCrudBase.cs,DropUserAsync,The length of the statement  "	return Task.Run (() => Task.WaitAll (_followings.DropUserAsync (userId)' _followers.DropUserAsync (userId)' _blockings.DropUserAsync (userId)' _noRetweets.DropUserAsync (userId)' _mutes.DropUserAsync (userId))); " is 211.
Long Statement,StarryEyes.Casket.Cruds,RelationCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\RelationCrudBase.cs,DropAllAsync,The length of the statement  "	return Task.Run (() => Task.WaitAll (_followings.DropAllAsync ()' _followers.DropAllAsync ()' _blockings.DropAllAsync ()' _noRetweets.DropAllAsync ()' _mutes.DropAllAsync ())); " is 176.
Long Statement,StarryEyes.Casket.Cruds,StatusEntityCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\StatusEntityCrud.cs,DeleteNotExistsAsync,The length of the statement  "	await Descriptor.ExecuteAsync (string.Format ("DELETE FROM {0} WHERE NOT EXISTS (SELECT Id FROM {1} " + "WHERE {1}.Id = {0}.ParentId);"' this.TableName' statusTableName)); " is 171.
Long Statement,StarryEyes.Casket.Cruds,ActivityCrudBase,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\ActivityCrudBase.cs,DeleteNotExistsAsync,The length of the statement  "	return Descriptor.ExecuteAsync (string.Format ("DELETE FROM {0} WHERE NOT EXISTS (SELECT Id FROM {1} WHERE {1}.Id = {0}.StatusId);"' TableName' statusTableName)); " is 162.
Long Statement,StarryEyes.Casket.Cruds,ActivityCrudBase,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\ActivityCrudBase.cs,DeleteAsync,The length of the statement  "	return Descriptor.ExecuteAsync (string.Format ("delete from {0} where StatusId = @Sid and UserId = @Uid;"' TableName)' new { " is 124.
Long Statement,StarryEyes.Casket.Cruds,ActivityCrudBase,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\ActivityCrudBase.cs,DeleteAllAsync,The length of the statement  "	var deleters = items.Select (i => Tuple.Create ("delete from " + TableName + " where StatusId = @Sid and UserId = @Uid;"' (object)new { " is 135.
Long Statement,StarryEyes.Casket.Cruds,StatusCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\StatusCrud.cs,DeleteOldStatusAsync,The length of the statement  "	return Descriptor.ExecuteAsync (string.Format ("DELETE FROM {0} WHERE Id IN (SELECT Id FROM {0} ORDER BY CreatedAt DESC LIMIT -1 OFFSET @Offset);"' TableName)' new { " is 165.
Long Statement,StarryEyes.Casket.Cruds,StatusCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\StatusCrud.cs,DeleteOrphanedRetweetAsync,The length of the statement  "	return Descriptor.ExecuteAsync (string.Format ("DELETE FROM {0} WHERE RetweetOriginalid IS NOT NULL AND " + "RetweetOriginalId NOT IN (SELECT Id FROM {0});"' TableName)); " is 170.
Long Statement,StarryEyes.Casket.Cruds,StatusCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\StatusCrud.cs,GetInReplyToAsync,The length of the statement  "	return (await Descriptor.QueryAsync<long?> ("select InReplyToStatusId " + "from " + TableName + " " + "where Id = @Id limit 1;"' new { " is 134.
Long Statement,StarryEyes.Casket.Cruds,StatusCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\StatusCrud.cs,FindFromInReplyToAsync,The length of the statement  "	return Descriptor.QueryAsync<long> ("select Id " + "from " + TableName + " " + "where InReplyToStatusId is not null and " + "InReplyToStatusId = @inReplyTo;"' new { " is 164.
Long Statement,StarryEyes.Casket.Cruds,StatusCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\StatusCrud.cs,GetCountAsync,The length of the statement  "	return (await Descriptor.QueryAsync<long> ("select count(*) from " + TableName + ";"' null).ConfigureAwait (false)).Single (); " is 126.
Long Statement,StarryEyes.Casket.Cruds,UserCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\UserCrud.cs,GetUsersFastAsync,The length of the statement  "	return Descriptor.QueryAsync<DatabaseUser> (CreateSql (string.Format ("LOWER(ScreenName) like @Match order by ScreenName limit {0}"' count))' new { " is 147.
Long Statement,StarryEyes.Casket.Cruds,UserCrud,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\UserCrud.cs,GetRelatedUsersFastAsync,The length of the statement  "	return Descriptor.QueryAsync<DatabaseUser> ("select * " + "from " + TableName + " " + "inner join (" + union + ") on Id = TargetId " + "where LOWER(ScreenName) like @Match order by ScreenName limit " + count + ";"' new { " is 220.
Long Statement,StarryEyes.Casket.Cruds.Scaffolding,CrudBase,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\Scaffolding\CrudBase.cs,CreateSql,The length of the statement  "	return String.IsNullOrEmpty (whereClause) ? string.Format ("select * from {0};"' this.TableName) : string.Format ("select * from {0} where {1};"' this.TableName' whereClause); " is 175.
Long Statement,StarryEyes.Casket.Cruds.Scaffolding,CrudBase,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\Scaffolding\CrudBase.cs,CreateIndexAsync,The length of the statement  "	return Descriptor.ExecuteAsync (string.Format ("CREATE {0} IF NOT EXISTS {1} ON {2}({3})"' (unique ? "UNIQUE INDEX" : "INDEX")' indexName' this.TableName' column)); " is 164.
Long Statement,StarryEyes.Casket.Cruds.Scaffolding,SentenceGenerator,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Cruds\Scaffolding\SentenceGenerator.cs,GetTableDeleter,The length of the statement  "	type.GetProperties ().Where (prop => prop.GetCustomAttributes (typeof(DbPrimaryKeyAttribute)' false).Any ()).Take (1).ForEach (prop => builder.Append (prop.GetDbNameOfProperty () + " = @" + prop.Name)); " is 202.
Long Statement,StarryEyes.Casket,Database,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Database.cs,Initialize,The length of the statement  "	asm.DefinedTypes.Where (t => t.IsClass && !t.IsAbstract && t.IsSubclassOf (typeof(SQLiteFunction))).Where (t => t.GetCustomAttribute<SQLiteFunctionAttribute> () != null).ForEach (t => { " is 185.
Empty Catch Block,StarryEyes.Casket,Database,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Database.cs,Initialize,The method has an empty catch block.
Magic Number,StarryEyes.Casket,Database,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Database.cs,CleanupOldStatusesAsync,The following statement contains a magic number: n (Tuple.Create (1' 5));  
Magic Number,StarryEyes.Casket,Database,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Database.cs,CleanupOldStatusesAsync,The following statement contains a magic number: n (Tuple.Create (2' 5));  
Magic Number,StarryEyes.Casket,Database,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Database.cs,CleanupOldStatusesAsync,The following statement contains a magic number: n (Tuple.Create (2' 5));  
Magic Number,StarryEyes.Casket,Database,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Database.cs,CleanupOldStatusesAsync,The following statement contains a magic number: n (Tuple.Create (3' 5));  
Magic Number,StarryEyes.Casket,Database,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Database.cs,CleanupOldStatusesAsync,The following statement contains a magic number: n (Tuple.Create (3' 5));  
Magic Number,StarryEyes.Casket,Database,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Database.cs,CleanupOldStatusesAsync,The following statement contains a magic number: n (Tuple.Create (4' 5));  
Magic Number,StarryEyes.Casket,Database,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Database.cs,CleanupOldStatusesAsync,The following statement contains a magic number: n (Tuple.Create (4' 5));  
Magic Number,StarryEyes.Casket,Database,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Database.cs,CleanupOldStatusesAsync,The following statement contains a magic number: n (Tuple.Create (5' 5));  
Magic Number,StarryEyes.Casket,Database,F:\newReposMay17\karno_StarryEyes\StarryEyes.Casket\Database.cs,CleanupOldStatusesAsync,The following statement contains a magic number: n (Tuple.Create (5' 5));  
