Implementation smell,Namespace,Class,File,Method,Description
Long Method,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SolveInstance,The method has 515 lines of code.
Long Method,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The method has 121 lines of code.
Complex Method,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SolveInstance,Cyclomatic complexity of the method is 58
Complex Method,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,GetLBCurve,Cyclomatic complexity of the method is 10
Complex Method,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,CurveSegments,Cyclomatic complexity of the method is 19
Complex Method,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,Cyclomatic complexity of the method is 26
Complex Method,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,SetRevitDataForm,Cyclomatic complexity of the method is 10
Complex Method,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,Cyclomatic complexity of the method is 13
Long Statement,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,RegisterInputParams,The length of the statement  "            pManager.AddBooleanParameter("Trigger"' "T"' "Trigger to stream the data from Grasshopper to another application."' GH_ParamAccess.item' false); " is 144.
Long Statement,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,RegisterInputParams,The length of the statement  "            pManager.AddCurveParameter("Curve"' "C"' "Single arc' line' or closed planar curves.  Closed planar curves can be used to generate floor' wall or roof sketches' or single segment non-closed arcs or lines can be used for line based family generation."' GH_ParamAccess.tree); " is 273.
Long Statement,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,RegisterInputParams,The length of the statement  "            pManager.AddVectorParameter("Orientation on Face"' "F"' "Orientation of the element in relation to the face it will be hosted to"' GH_ParamAccess.tree); " is 152.
Long Statement,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,RegisterOutputParams,The length of the statement  "            pManager.AddTextParameter("Selected Object"' "Obj"' "Object information that Lyrebird will create or modify"' GH_ParamAccess.item); " is 131.
Long Statement,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SolveInstance,The length of the statement  "                                    LyrebirdPoint point = new LyrebirdPoint(adaptPoints.Branches[i][j].Value.X' adaptPoints.Branches[i][j].Value.Y' adaptPoints.Branches[i][j].Value.Z); " is 148.
Long Statement,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SolveInstance,The length of the statement  "                                                "so curve based elements should be grafted so that each curve is on it's own branch' or all curves on a branch should " + " is 121.
Long Statement,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SolveInstance,The length of the statement  "                                                "so curve based elements should be grafted so that each curve is on it's own branch' or all curves on a branch should " + " is 121.
Long Statement,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SolveInstance,The length of the statement  "                        message = "Error\n" + "The Lyrebird Service could not be found.  Ensure Revit is running' the Lyrebird server plugin is installed' and the server is active."; " is 158.
Long Statement,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SolveInstance,The length of the statement  "                    sb.AppendLine(string.Format("Parameter{0}: {1}  /  {2}  /  {3}"' (i + 1).ToString(CultureInfo.InvariantCulture)' rp.ParameterName' rp.StorageType' type)); " is 154.
Long Statement,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,DisplayForm,The length of the statement  "                    //System.Windows.Forms.MessageBox.Show("The Lyrebird Service could not be found.  Ensure Revit is running' the Lyrebird server plugin is installed' and the server is active."); " is 176.
Long Statement,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,RefreshParameters,The length of the statement  "                    param.Description = "Parameter Name: " + inputParameters[i].ParameterName + "\nIs Type: " + inputParameters[i].IsType.ToString() + "\nStorageType: " + inputParameters[i].StorageType; " is 182.
Long Statement,LMNA.Lyrebird.GH,ParameterControl,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\ParameterControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/LMNA.Lyrebird.GHClient;component/parametercontrol.xaml"' System.UriKind.Relative); " is 128.
Long Statement,LMNA.Lyrebird.GH,RevitCategoryElemComp,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\RevitCategoryElements.cs,RegisterInputParams,The length of the statement  "            pManager.AddIntegerParameter("Category"' "C"' "1 = Images\n2 = Levels\n3 = Materials\n4 = Phases"' GH_ParamAccess.item' 3); " is 123.
Long Statement,LMNA.Lyrebird.GH,RevitCategoryElemComp,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\RevitCategoryElements.cs,RegisterOutputParams,The length of the statement  "            pManager.AddTextParameter("Elements"' "E"' "Elements retrieved from the Revit document.\nThey are in the format of NAME'ELEMENTID"' GH_ParamAccess.list); " is 153.
Long Statement,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/LMNA.Lyrebird.GHClient;component/selectparameterform.xaml"' System.UriKind.Relative); " is 131.
Long Statement,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown); " is 148.
Long Statement,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown); " is 147.
Long Statement,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/LMNA.Lyrebird.GHClient;component/setrevitdataform.xaml"' System.UriKind.Relative); " is 128.
Long Statement,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown); " is 148.
Long Statement,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown); " is 147.
Long Statement,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The length of the statement  "            this.familyComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.familyComboBox_SelectionChanged); " is 135.
Long Statement,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The length of the statement  "            this.typeComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.typeComboBox_SelectionChanged); " is 131.
Long Statement,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/LMNA.Lyrebird.GHClient;component/uisettingsform.xaml"' System.UriKind.Relative); " is 126.
Long Statement,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown); " is 148.
Empty Catch Block,LMNA.Lyrebird.GH,RevitCategoryElemComp,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\RevitCategoryElements.cs,SolveInstance,The method has an empty catch block.
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,RegisterInputParams,The following statement contains a magic number: pManager[2].Optional = true;
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,RegisterInputParams,The following statement contains a magic number: pManager[3].Optional = true;
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,RegisterInputParams,The following statement contains a magic number: pManager[4].Optional = true;
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,RegisterInputParams,The following statement contains a magic number: pManager[5].Optional = true;
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SolveInstance,The following statement contains a magic number: DA.GetDataTree(2' out adaptPoints);
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SolveInstance,The following statement contains a magic number: DA.GetDataTree(3' out curves);
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SolveInstance,The following statement contains a magic number: DA.GetDataTree(4' out orientations);
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SolveInstance,The following statement contains a magic number: DA.GetDataTree(5' out faceOrientations);
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,Menu_R2015Clicked,The following statement contains a magic number: appVersion = 2;
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,Menu_R2016Clicked,The following statement contains a magic number: appVersion = 3;
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SyncInputs,The following statement contains a magic number: inputParameters.Count == Params.Input.Count - 6
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SyncInputs,The following statement contains a magic number: Grasshopper.Kernel.Parameters.Param_GenericObject param = new Grasshopper.Kernel.Parameters.Param_GenericObject                      {                          Name = "Parameter" + (i - 6).ToString(CultureInfo.InvariantCulture)'                          NickName = "P" + (i - 6).ToString(CultureInfo.InvariantCulture)'                          Description =                              "Parameter Name: " + inputParameters[i - 7].ParameterName + "\nIs Type: " +                              inputParameters[i - 7].IsType.ToString() + "\nStorageType: " +                              inputParameters[i - 7].StorageType'                          Optional = true'                          Access = GH_ParamAccess.tree                      };
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SyncInputs,The following statement contains a magic number: Grasshopper.Kernel.Parameters.Param_GenericObject param = new Grasshopper.Kernel.Parameters.Param_GenericObject                      {                          Name = "Parameter" + (i - 6).ToString(CultureInfo.InvariantCulture)'                          NickName = "P" + (i - 6).ToString(CultureInfo.InvariantCulture)'                          Description =                              "Parameter Name: " + inputParameters[i - 7].ParameterName + "\nIs Type: " +                              inputParameters[i - 7].IsType.ToString() + "\nStorageType: " +                              inputParameters[i - 7].StorageType'                          Optional = true'                          Access = GH_ParamAccess.tree                      };
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SyncInputs,The following statement contains a magic number: Grasshopper.Kernel.Parameters.Param_GenericObject param = new Grasshopper.Kernel.Parameters.Param_GenericObject                      {                          Name = "Parameter" + (i - 6).ToString(CultureInfo.InvariantCulture)'                          NickName = "P" + (i - 6).ToString(CultureInfo.InvariantCulture)'                          Description =                              "Parameter Name: " + inputParameters[i - 7].ParameterName + "\nIs Type: " +                              inputParameters[i - 7].IsType.ToString() + "\nStorageType: " +                              inputParameters[i - 7].StorageType'                          Optional = true'                          Access = GH_ParamAccess.tree                      };
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SyncInputs,The following statement contains a magic number: Grasshopper.Kernel.Parameters.Param_GenericObject param = new Grasshopper.Kernel.Parameters.Param_GenericObject                      {                          Name = "Parameter" + (i - 6).ToString(CultureInfo.InvariantCulture)'                          NickName = "P" + (i - 6).ToString(CultureInfo.InvariantCulture)'                          Description =                              "Parameter Name: " + inputParameters[i - 7].ParameterName + "\nIs Type: " +                              inputParameters[i - 7].IsType.ToString() + "\nStorageType: " +                              inputParameters[i - 7].StorageType'                          Optional = true'                          Access = GH_ParamAccess.tree                      };
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SyncInputs,The following statement contains a magic number: Grasshopper.Kernel.Parameters.Param_GenericObject param = new Grasshopper.Kernel.Parameters.Param_GenericObject                      {                          Name = "Parameter" + (i - 6).ToString(CultureInfo.InvariantCulture)'                          NickName = "P" + (i - 6).ToString(CultureInfo.InvariantCulture)'                          Description =                              "Parameter Name: " + inputParameters[i - 7].ParameterName + "\nIs Type: " +                              inputParameters[i - 7].IsType.ToString() + "\nStorageType: " +                              inputParameters[i - 7].StorageType'                          Optional = true'                          Access = GH_ParamAccess.tree                      };
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SyncInputs,The following statement contains a magic number: i <= inputParameters.Count + 6
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,SyncInputs,The following statement contains a magic number: inputParameters.Count > Params.Input.Count - 6
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,RefreshParameters,The following statement contains a magic number: IGH_Param param = Params.Input[i + 6];
Magic Number,LMNA.Lyrebird.GH,GHClient,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHClient.cs,CurveSegments,The following statement contains a magic number: trim.Length < 1e-10
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,GHInfo,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\GHInfo.cs,GetScale,The following statement contains a magic number: switch (units)              {                  case "None":                      scale = 1;                      break;                  case "Microns":                      scale = 1000000;                      break;                  case "Millimeters":                      scale = 1000;                      break;                  case "Centimeters":                      scale = 100;                      break;                  case "Meters":                      scale = 1;                      break;                  case "Kilometers":                      scale = 0.001;                      break;                  case "Microinches":                      scale = 39370100;                      break;                  case "Mils":                      scale = 39370.0787;                      break;                  case "Inches":                      scale = 39.3701;                      break;                  case "Feet":                      scale = 3.28084;                      break;                  case "Miles":                      scale = 0.000621371;                      break;                  case "Angstroms":                      scale = 10000000000;                      break;                  case "Nanometers":                      scale = 1000000000;                      break;                  case "Decimeters":                      scale = 10;                      break;                  case "Dekameters":                      scale = 0.1;                      break;                  case "Hectometers":                      scale = 0.01;                      break;                  case "Megameters":                      scale = 0.000001;                      break;                  case "Gigameters":                      scale = 0.000000001;                      break;                  case "Yards":                      scale = 1.09361;                      break;                  case "PrinterPoint":                      scale = 1;                      break;                  case "PrinterPica":                      scale = 1;                      break;                  case "NauticalMile":                      scale = 0.000539957;                      break;                  case "Astronomical":                      scale = 0.00000000000668458712;                      break;                  case "Lightyears":                      scale = 0.000000000000000105702341;                      break;                  case "Parsecs":                      scale = 0.0000000000000000324077929;                      break;                  default:                      break;              }
Magic Number,LMNA.Lyrebird.GH,ParameterControl,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\ParameterControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.paramNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.storageTypeLabel = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.isTypeLabel = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,ParameterControl,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\ParameterControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.paramNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.storageTypeLabel = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.isTypeLabel = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,RevitCategoryElemComp,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\RevitCategoryElements.cs,RegisterInputParams,The following statement contains a magic number: pManager.AddIntegerParameter("Category"' "C"' "1 = Images\n2 = Levels\n3 = Materials\n4 = Phases"' GH_ParamAccess.item' 3);
Magic Number,LMNA.Lyrebird.GH,RevitCategoryElemComp,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\RevitCategoryElements.cs,RegisterInputParams,The following statement contains a magic number: paramInt.AddNamedValue("Levels"' 2);
Magic Number,LMNA.Lyrebird.GH,RevitCategoryElemComp,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\RevitCategoryElements.cs,RegisterInputParams,The following statement contains a magic number: paramInt.AddNamedValue("Materials"' 3);
Magic Number,LMNA.Lyrebird.GH,RevitCategoryElemComp,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\RevitCategoryElements.cs,RegisterInputParams,The following statement contains a magic number: paramInt.AddNamedValue("Phases"' 4);
Magic Number,LMNA.Lyrebird.GH,RevitCategoryElemComp,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\RevitCategoryElements.cs,SolveInstance,The following statement contains a magic number: int category = 3;
Magic Number,LMNA.Lyrebird.GH,RevitCategoryElemComp,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\RevitCategoryElements.cs,Menu_R2015Clicked,The following statement contains a magic number: appVersion = 2;
Magic Number,LMNA.Lyrebird.GH,RevitCategoryElemComp,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\RevitCategoryElements.cs,Menu_R2016Clicked,The following statement contains a magic number: appVersion = 3;
Magic Number,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 180' 180' 180)' 0.0));
Magic Number,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 180' 180' 180)' 0.0));
Magic Number,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 180' 180' 180)' 0.0));
Magic Number,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 180' 180' 180)' 0.0));
Magic Number,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 232' 232' 232)' 1.0));
Magic Number,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 232' 232' 232)' 1.0));
Magic Number,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 232' 232' 232)' 1.0));
Magic Number,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 232' 232' 232)' 1.0));
Magic Number,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 45 "..\..\SelectParameterForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 54 "..\..\SelectParameterForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.listView = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 45 "..\..\SelectParameterForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 54 "..\..\SelectParameterForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.listView = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 45 "..\..\SelectParameterForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 54 "..\..\SelectParameterForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.listView = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 45 "..\..\SelectParameterForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 54 "..\..\SelectParameterForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.listView = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 45 "..\..\SelectParameterForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 54 "..\..\SelectParameterForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.listView = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 45 "..\..\SelectParameterForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 54 "..\..\SelectParameterForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.listView = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,addButton_MouseEnter,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 232' 232' 232)' 0.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,addButton_MouseEnter,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 232' 232' 232)' 0.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,addButton_MouseEnter,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 232' 232' 232)' 0.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,addButton_MouseEnter,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 232' 232' 232)' 0.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,addButton_MouseEnter,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 180' 180' 180)' 1.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,addButton_MouseEnter,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 180' 180' 180)' 1.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,addButton_MouseEnter,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 180' 180' 180)' 1.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,addButton_MouseEnter,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 180' 180' 180)' 1.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 180' 180' 180)' 0.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 180' 180' 180)' 0.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 180' 180' 180)' 0.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 180' 180' 180)' 0.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 232' 232' 232)' 1.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 232' 232' 232)' 1.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 232' 232' 232)' 1.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,EnterBrush,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromArgb(255' 232' 232' 232)' 1.0));
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 52 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.catNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 8:              this.familyComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 107 "..\..\SetRevitDataForm.xaml"              this.familyComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.familyComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 9:              this.typeComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 109 "..\..\SetRevitDataForm.xaml"              this.typeComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.typeComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 10:              this.scrollViewr = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 11:              this.controlPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 12:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.addButton_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.addButton_MouseLeave);                            #line default              #line hidden              return;              case 13:              this.addRect = ((System.Windows.Shapes.Rectangle)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 52 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.catNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 8:              this.familyComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 107 "..\..\SetRevitDataForm.xaml"              this.familyComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.familyComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 9:              this.typeComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 109 "..\..\SetRevitDataForm.xaml"              this.typeComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.typeComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 10:              this.scrollViewr = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 11:              this.controlPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 12:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.addButton_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.addButton_MouseLeave);                            #line default              #line hidden              return;              case 13:              this.addRect = ((System.Windows.Shapes.Rectangle)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 52 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.catNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 8:              this.familyComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 107 "..\..\SetRevitDataForm.xaml"              this.familyComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.familyComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 9:              this.typeComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 109 "..\..\SetRevitDataForm.xaml"              this.typeComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.typeComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 10:              this.scrollViewr = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 11:              this.controlPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 12:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.addButton_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.addButton_MouseLeave);                            #line default              #line hidden              return;              case 13:              this.addRect = ((System.Windows.Shapes.Rectangle)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 52 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.catNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 8:              this.familyComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 107 "..\..\SetRevitDataForm.xaml"              this.familyComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.familyComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 9:              this.typeComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 109 "..\..\SetRevitDataForm.xaml"              this.typeComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.typeComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 10:              this.scrollViewr = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 11:              this.controlPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 12:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.addButton_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.addButton_MouseLeave);                            #line default              #line hidden              return;              case 13:              this.addRect = ((System.Windows.Shapes.Rectangle)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 52 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.catNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 8:              this.familyComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 107 "..\..\SetRevitDataForm.xaml"              this.familyComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.familyComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 9:              this.typeComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 109 "..\..\SetRevitDataForm.xaml"              this.typeComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.typeComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 10:              this.scrollViewr = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 11:              this.controlPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 12:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.addButton_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.addButton_MouseLeave);                            #line default              #line hidden              return;              case 13:              this.addRect = ((System.Windows.Shapes.Rectangle)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 52 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.catNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 8:              this.familyComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 107 "..\..\SetRevitDataForm.xaml"              this.familyComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.familyComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 9:              this.typeComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 109 "..\..\SetRevitDataForm.xaml"              this.typeComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.typeComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 10:              this.scrollViewr = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 11:              this.controlPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 12:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.addButton_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.addButton_MouseLeave);                            #line default              #line hidden              return;              case 13:              this.addRect = ((System.Windows.Shapes.Rectangle)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 52 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.catNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 8:              this.familyComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 107 "..\..\SetRevitDataForm.xaml"              this.familyComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.familyComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 9:              this.typeComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 109 "..\..\SetRevitDataForm.xaml"              this.typeComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.typeComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 10:              this.scrollViewr = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 11:              this.controlPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 12:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.addButton_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.addButton_MouseLeave);                            #line default              #line hidden              return;              case 13:              this.addRect = ((System.Windows.Shapes.Rectangle)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 52 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.catNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 8:              this.familyComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 107 "..\..\SetRevitDataForm.xaml"              this.familyComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.familyComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 9:              this.typeComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 109 "..\..\SetRevitDataForm.xaml"              this.typeComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.typeComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 10:              this.scrollViewr = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 11:              this.controlPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 12:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.addButton_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.addButton_MouseLeave);                            #line default              #line hidden              return;              case 13:              this.addRect = ((System.Windows.Shapes.Rectangle)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 52 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.catNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 8:              this.familyComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 107 "..\..\SetRevitDataForm.xaml"              this.familyComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.familyComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 9:              this.typeComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 109 "..\..\SetRevitDataForm.xaml"              this.typeComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.typeComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 10:              this.scrollViewr = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 11:              this.controlPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 12:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.addButton_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.addButton_MouseLeave);                            #line default              #line hidden              return;              case 13:              this.addRect = ((System.Windows.Shapes.Rectangle)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 52 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.catNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 8:              this.familyComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 107 "..\..\SetRevitDataForm.xaml"              this.familyComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.familyComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 9:              this.typeComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 109 "..\..\SetRevitDataForm.xaml"              this.typeComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.typeComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 10:              this.scrollViewr = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 11:              this.controlPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 12:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.addButton_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.addButton_MouseLeave);                            #line default              #line hidden              return;              case 13:              this.addRect = ((System.Windows.Shapes.Rectangle)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 52 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.catNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 8:              this.familyComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 107 "..\..\SetRevitDataForm.xaml"              this.familyComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.familyComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 9:              this.typeComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 109 "..\..\SetRevitDataForm.xaml"              this.typeComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.typeComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 10:              this.scrollViewr = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 11:              this.controlPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 12:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.addButton_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.addButton_MouseLeave);                            #line default              #line hidden              return;              case 13:              this.addRect = ((System.Windows.Shapes.Rectangle)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 52 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.catNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 8:              this.familyComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 107 "..\..\SetRevitDataForm.xaml"              this.familyComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.familyComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 9:              this.typeComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 109 "..\..\SetRevitDataForm.xaml"              this.typeComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.typeComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 10:              this.scrollViewr = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 11:              this.controlPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 12:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.addButton_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.addButton_MouseLeave);                            #line default              #line hidden              return;              case 13:              this.addRect = ((System.Windows.Shapes.Rectangle)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,EnterBrush,The following statement contains a magic number: b.GradientStops.Add(new GradientStop(System.Windows.Media.Color.FromArgb(255' 195' 195' 195)' 0.0));
Magic Number,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,EnterBrush,The following statement contains a magic number: b.GradientStops.Add(new GradientStop(System.Windows.Media.Color.FromArgb(255' 195' 195' 195)' 0.0));
Magic Number,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,EnterBrush,The following statement contains a magic number: b.GradientStops.Add(new GradientStop(System.Windows.Media.Color.FromArgb(255' 195' 195' 195)' 0.0));
Magic Number,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,EnterBrush,The following statement contains a magic number: b.GradientStops.Add(new GradientStop(System.Windows.Media.Color.FromArgb(255' 195' 195' 195)' 0.0));
Magic Number,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,EnterBrush,The following statement contains a magic number: b.GradientStops.Add(new GradientStop(System.Windows.Media.Color.FromArgb(255' 245' 245' 245)' 1.0));
Magic Number,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,EnterBrush,The following statement contains a magic number: b.GradientStops.Add(new GradientStop(System.Windows.Media.Color.FromArgb(255' 245' 245' 245)' 1.0));
Magic Number,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,EnterBrush,The following statement contains a magic number: b.GradientStops.Add(new GradientStop(System.Windows.Media.Color.FromArgb(255' 245' 245' 245)' 1.0));
Magic Number,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,EnterBrush,The following statement contains a magic number: b.GradientStops.Add(new GradientStop(System.Windows.Media.Color.FromArgb(255' 245' 245' 245)' 1.0));
Magic Number,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\UISettingsForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.closeButton_Click);                            #line default              #line hidden                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.closeButton_MouseEnter);                            #line default              #line hidden                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.closeButton_MouseLeave);                            #line default              #line hidden              return;              case 3:              this.closeButtonRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 4:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.okButtonRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 6:              this.tabTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.panelTextBox = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\UISettingsForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.closeButton_Click);                            #line default              #line hidden                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.closeButton_MouseEnter);                            #line default              #line hidden                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.closeButton_MouseLeave);                            #line default              #line hidden              return;              case 3:              this.closeButtonRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 4:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.okButtonRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 6:              this.tabTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.panelTextBox = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\UISettingsForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.closeButton_Click);                            #line default              #line hidden                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.closeButton_MouseEnter);                            #line default              #line hidden                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.closeButton_MouseLeave);                            #line default              #line hidden              return;              case 3:              this.closeButtonRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 4:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.okButtonRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 6:              this.tabTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.panelTextBox = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\UISettingsForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.closeButton_Click);                            #line default              #line hidden                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.closeButton_MouseEnter);                            #line default              #line hidden                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.closeButton_MouseLeave);                            #line default              #line hidden              return;              case 3:              this.closeButtonRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 4:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.okButtonRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 6:              this.tabTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.panelTextBox = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\UISettingsForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.closeButton_Click);                            #line default              #line hidden                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.closeButton_MouseEnter);                            #line default              #line hidden                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.closeButton_MouseLeave);                            #line default              #line hidden              return;              case 3:              this.closeButtonRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 4:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.okButtonRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 6:              this.tabTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.panelTextBox = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 43 "..\..\UISettingsForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.closeButton_Click);                            #line default              #line hidden                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.closeButton_MouseEnter);                            #line default              #line hidden                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.closeButton_MouseLeave);                            #line default              #line hidden              return;              case 3:              this.closeButtonRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 4:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.okButtonRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 6:              this.tabTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.panelTextBox = ((System.Windows.Controls.TextBox)(target));              return;              }
Missing Default,LMNA.Lyrebird.GH,ParameterControl,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\ParameterControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.paramNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.storageTypeLabel = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.isTypeLabel = ((System.Windows.Controls.Label)(target));              return;              }
Missing Default,LMNA.Lyrebird.GH,SelectParameterForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SelectParameterForm.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 45 "..\..\SelectParameterForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 54 "..\..\SelectParameterForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 66 "..\..\SelectParameterForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 87 "..\..\SelectParameterForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.listView = ((System.Windows.Controls.ListView)(target));              return;              }
Missing Default,LMNA.Lyrebird.GH,SetRevitDataForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\SetRevitDataForm.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 43 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:                            #line 52 "..\..\SetRevitDataForm.xaml"              ((System.Windows.Shapes.Rectangle)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.logo_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 3:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseEnter);                            #line default              #line hidden                            #line 62 "..\..\SetRevitDataForm.xaml"              this.cancelButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.cancelButton_MouseLeave);                            #line default              #line hidden              return;              case 4:              this.cancelRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 83 "..\..\SetRevitDataForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 6:              this.okRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 7:              this.catNameLabel = ((System.Windows.Controls.Label)(target));              return;              case 8:              this.familyComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 107 "..\..\SetRevitDataForm.xaml"              this.familyComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.familyComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 9:              this.typeComboBox = ((System.Windows.Controls.ComboBox)(target));                            #line 109 "..\..\SetRevitDataForm.xaml"              this.typeComboBox.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.typeComboBox_SelectionChanged);                            #line default              #line hidden              return;              case 10:              this.scrollViewr = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 11:              this.controlPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 12:              this.addButton = ((System.Windows.Controls.Button)(target));                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.Click += new System.Windows.RoutedEventHandler(this.addButton_Click);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.addButton_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\SetRevitDataForm.xaml"              this.addButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.addButton_MouseLeave);                            #line default              #line hidden              return;              case 13:              this.addRect = ((System.Windows.Shapes.Rectangle)(target));              return;              }
Missing Default,LMNA.Lyrebird.GH,UISettingsForm,D:\research\architectureSmells\repos\logant_Lyrebird\GHClient\UISettingsForm.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 43 "..\..\UISettingsForm.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Border_MouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.closeButton_Click);                            #line default              #line hidden                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.closeButton_MouseEnter);                            #line default              #line hidden                            #line 57 "..\..\UISettingsForm.xaml"              this.closeButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.closeButton_MouseLeave);                            #line default              #line hidden              return;              case 3:              this.closeButtonRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 4:              this.okButton = ((System.Windows.Controls.Button)(target));                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.Click += new System.Windows.RoutedEventHandler(this.okButton_Click);                            #line default              #line hidden                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.MouseEnter += new System.Windows.Input.MouseEventHandler(this.okButton_MouseEnter);                            #line default              #line hidden                            #line 77 "..\..\UISettingsForm.xaml"              this.okButton.MouseLeave += new System.Windows.Input.MouseEventHandler(this.okButton_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.okButtonRect = ((System.Windows.Shapes.Rectangle)(target));              return;              case 6:              this.tabTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.panelTextBox = ((System.Windows.Controls.TextBox)(target));              return;              }
