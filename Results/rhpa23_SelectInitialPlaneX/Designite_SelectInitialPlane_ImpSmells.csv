Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,SelectInitialPlane,Form1,C:\repos\rhpa23_SelectInitialPlaneX\SelectInitialPlane\Form1.cs,GetPrivateProfileString,The method has 6 parameters.
Long Parameter List,SelectInitialPlane,MainForm,C:\repos\rhpa23_SelectInitialPlaneX\SelectInitialPlane\MainForm.cs,GetPrivateProfileString,The method has 6 parameters.
Long Statement,SelectInitialPlane,Form1,C:\repos\rhpa23_SelectInitialPlaneX\SelectInitialPlane\Form1.cs,btnConfirm_Click,The length of the statement  "			if (MessageBox.Show (_msgChangeSucess' "Success"' MessageBoxButtons.YesNo' MessageBoxIcon.Information) == DialogResult.Yes) " is 123.
Long Statement,SelectInitialPlane,MainForm,C:\repos\rhpa23_SelectInitialPlaneX\SelectInitialPlane\MainForm.cs,txbAircraftTitle_TextChanged,The length of the statement  "	string uiManufacturer = cmbAircraftManufacturer.SelectedItem != null ? cmbAircraftManufacturer.SelectedItem.ToString () : string.Empty; " is 135.
Long Statement,SelectInitialPlane,MainForm,C:\repos\rhpa23_SelectInitialPlaneX\SelectInitialPlane\MainForm.cs,btnConfirm_Click,The length of the statement  "			if (MessageBox.Show (_msgChangeSucess' "Success"' MessageBoxButtons.YesNo' MessageBoxIcon.Information) == DialogResult.Yes) " is 123.
Long Statement,SelectInitialPlane,MainForm,C:\repos\rhpa23_SelectInitialPlaneX\SelectInitialPlane\MainForm.cs,BindListPlanes,The length of the statement  "		if ((string.IsNullOrEmpty (uiManufacturer) || item.Value.UiManufacturer == uiManufacturer) && (string.IsNullOrEmpty (title) || item.Value.Title.ToLower ().Contains (title.ToLower ()))) { " is 186.
Complex Conditional,SelectInitialPlane,MainForm,C:\repos\rhpa23_SelectInitialPlaneX\SelectInitialPlane\MainForm.cs,BindListPlanes,The conditional expression  "(string.IsNullOrEmpty (uiManufacturer) || item.Value.UiManufacturer == uiManufacturer) && (string.IsNullOrEmpty (title) || item.Value.Title.ToLower ().Contains (title.ToLower ()))"  is complex.
Magic Number,SelectInitialPlane,Form1,C:\repos\rhpa23_SelectInitialPlaneX\SelectInitialPlane\Form1.cs,AddPlanesInfoByPath,The following statement contains a magic number: try {  	for (int i = 0; i < 100; i++) {  		string session = string.Format ("fltsim.{0}"' i);  		AirplanesInfo planeInfo = new AirplanesInfo ();  		planeInfo.Title = GetFileProperty (planePath' session' "title");  		planeInfo.AirlineName = GetFileProperty (planePath' session' "airline_name");  		planeInfo.AtcAirline = GetFileProperty (planePath' session' "atc_airline");  		planeInfo.AtcFlightNumber = GetFileProperty (planePath' session' "atc_flight_number");  		planeInfo.AtcId = GetFileProperty (planePath' session' "atc_id");  		planeInfo.AtcParkingCodes = GetFileProperty (planePath' session' "atc_parking_codes");  		planeInfo.Description = GetFileProperty (planePath' session' "description");  		planeInfo.Texture = GetFileProperty (planePath' session' "texture");  		planeInfo.UiCreatedby = GetFileProperty (planePath' session' "ui_createdby");  		planeInfo.UiManufacturer = GetFileProperty (planePath' session' "ui_manufacturer");  		planeInfo.UiType = GetFileProperty (planePath' session' "ui_type");  		planeInfo.UiTypeRole = GetFileProperty (planePath' session' "ui_typerole");  		planeInfo.UiVariation = GetFileProperty (planePath' session' "ui_variation");  		planeInfo.PathAircraftCFG = planePath;  		if (string.IsNullOrEmpty (planeInfo.Title.Trim ())) {  			break;  		}  		_lstAirplanes.Add (planeInfo.Title' planeInfo);  	}  	SetLabelValue (lblAmountPlanes' "( " + _lstAirplanes.Count + " )");  }  catch (Exception ex) {  	MessageBox.Show (_msgUnexpectedErro + ex.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,SelectInitialPlane,Form1,C:\repos\rhpa23_SelectInitialPlaneX\SelectInitialPlane\Form1.cs,AddPlanesInfoByPath,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	string session = string.Format ("fltsim.{0}"' i);  	AirplanesInfo planeInfo = new AirplanesInfo ();  	planeInfo.Title = GetFileProperty (planePath' session' "title");  	planeInfo.AirlineName = GetFileProperty (planePath' session' "airline_name");  	planeInfo.AtcAirline = GetFileProperty (planePath' session' "atc_airline");  	planeInfo.AtcFlightNumber = GetFileProperty (planePath' session' "atc_flight_number");  	planeInfo.AtcId = GetFileProperty (planePath' session' "atc_id");  	planeInfo.AtcParkingCodes = GetFileProperty (planePath' session' "atc_parking_codes");  	planeInfo.Description = GetFileProperty (planePath' session' "description");  	planeInfo.Texture = GetFileProperty (planePath' session' "texture");  	planeInfo.UiCreatedby = GetFileProperty (planePath' session' "ui_createdby");  	planeInfo.UiManufacturer = GetFileProperty (planePath' session' "ui_manufacturer");  	planeInfo.UiType = GetFileProperty (planePath' session' "ui_type");  	planeInfo.UiTypeRole = GetFileProperty (planePath' session' "ui_typerole");  	planeInfo.UiVariation = GetFileProperty (planePath' session' "ui_variation");  	planeInfo.PathAircraftCFG = planePath;  	if (string.IsNullOrEmpty (planeInfo.Title.Trim ())) {  		break;  	}  	_lstAirplanes.Add (planeInfo.Title' planeInfo);  }  
Magic Number,SelectInitialPlane,Form1,C:\repos\rhpa23_SelectInitialPlaneX\SelectInitialPlane\Form1.cs,GetFileProperty,The following statement contains a magic number: GetPrivateProfileString (session' property' ""' value' 255' path);  
Magic Number,SelectInitialPlane,MainForm,C:\repos\rhpa23_SelectInitialPlaneX\SelectInitialPlane\MainForm.cs,txbAircraftTitle_TextChanged,The following statement contains a magic number: if (!string.IsNullOrEmpty (txbAircraftTitle.Text) && txbAircraftTitle.Text.Length >= 3) {  	BindListPlanes (uiManufacturer' txbAircraftTitle.Text);  }  else if (txbAircraftTitle.Text.Length == 0) {  	BindListPlanes (uiManufacturer' string.Empty);  }  
Magic Number,SelectInitialPlane,MainForm,C:\repos\rhpa23_SelectInitialPlaneX\SelectInitialPlane\MainForm.cs,AddPlanesInfoByPath,The following statement contains a magic number: try {  	for (int i = 0; i < 100; i++) {  		string session = string.Format ("fltsim.{0}"' i);  		AirplanesInfo planeInfo = new AirplanesInfo ();  		planeInfo.Title = GetFileProperty (planePath' session' "title");  		planeInfo.AirlineName = GetFileProperty (planePath' session' "airline_name");  		planeInfo.AtcAirline = GetFileProperty (planePath' session' "atc_airline");  		planeInfo.AtcFlightNumber = GetFileProperty (planePath' session' "atc_flight_number");  		planeInfo.AtcId = GetFileProperty (planePath' session' "atc_id");  		planeInfo.AtcParkingCodes = GetFileProperty (planePath' session' "atc_parking_codes");  		planeInfo.Description = GetFileProperty (planePath' session' "description");  		planeInfo.Texture = GetFileProperty (planePath' session' "texture");  		planeInfo.UiCreatedby = GetFileProperty (planePath' session' "ui_createdby");  		planeInfo.UiManufacturer = GetFileProperty (planePath' session' "ui_manufacturer");  		planeInfo.UiType = GetFileProperty (planePath' session' "ui_type");  		planeInfo.UiTypeRole = GetFileProperty (planePath' session' "ui_typerole");  		planeInfo.UiVariation = GetFileProperty (planePath' session' "ui_variation");  		planeInfo.PathAircraftCFG = planePath;  		if (string.IsNullOrEmpty (planeInfo.Title.Trim ())) {  			break;  		}  		_lstAirplanes.Add (planeInfo.Title' planeInfo);  	}  	SetLabelValue (lblAmountPlanes' "( " + _lstAirplanes.Count + " )");  }  catch (Exception ex) {  	MessageBox.Show (_msgUnexpectedErro + ex.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,SelectInitialPlane,MainForm,C:\repos\rhpa23_SelectInitialPlaneX\SelectInitialPlane\MainForm.cs,AddPlanesInfoByPath,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	string session = string.Format ("fltsim.{0}"' i);  	AirplanesInfo planeInfo = new AirplanesInfo ();  	planeInfo.Title = GetFileProperty (planePath' session' "title");  	planeInfo.AirlineName = GetFileProperty (planePath' session' "airline_name");  	planeInfo.AtcAirline = GetFileProperty (planePath' session' "atc_airline");  	planeInfo.AtcFlightNumber = GetFileProperty (planePath' session' "atc_flight_number");  	planeInfo.AtcId = GetFileProperty (planePath' session' "atc_id");  	planeInfo.AtcParkingCodes = GetFileProperty (planePath' session' "atc_parking_codes");  	planeInfo.Description = GetFileProperty (planePath' session' "description");  	planeInfo.Texture = GetFileProperty (planePath' session' "texture");  	planeInfo.UiCreatedby = GetFileProperty (planePath' session' "ui_createdby");  	planeInfo.UiManufacturer = GetFileProperty (planePath' session' "ui_manufacturer");  	planeInfo.UiType = GetFileProperty (planePath' session' "ui_type");  	planeInfo.UiTypeRole = GetFileProperty (planePath' session' "ui_typerole");  	planeInfo.UiVariation = GetFileProperty (planePath' session' "ui_variation");  	planeInfo.PathAircraftCFG = planePath;  	if (string.IsNullOrEmpty (planeInfo.Title.Trim ())) {  		break;  	}  	_lstAirplanes.Add (planeInfo.Title' planeInfo);  }  
Magic Number,SelectInitialPlane,MainForm,C:\repos\rhpa23_SelectInitialPlaneX\SelectInitialPlane\MainForm.cs,GetFileProperty,The following statement contains a magic number: GetPrivateProfileString (session' property' ""' value' 255' path);  
