Implementation smell,Namespace,Class,File,Method,Description
Long Method,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The method has 182 lines of code.
Long Method,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The method has 146 lines of code.
Long Method,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The method has 273 lines of code.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_create_TableWithNamigStrategy_table_prefix,The length of the statement  "            using (new TemporaryNamingStrategy(DialectProvider' new PrefixNamingStrategy { TablePrefix = "tab_"' ColumnPrefix = "col_" })) " is 126.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_with_GetById,The length of the statement  "            using (new TemporaryNamingStrategy(DialectProvider' new PrefixNamingStrategy { TablePrefix = "tab_"' ColumnPrefix = "col_" })) " is 126.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_with_GetById,The length of the statement  "                ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id = "999"' AlbumId = "112"' AlbumName = "ElectroShip"' Name = "MyNameIsBatman" }; " is 146.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_with_query_by_example,The length of the statement  "            using (new TemporaryNamingStrategy(DialectProvider' new PrefixNamingStrategy { TablePrefix = "tab_"' ColumnPrefix = "col_" })) " is 126.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_with_query_by_example,The length of the statement  "                ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id = "998"' AlbumId = "112"' AlbumName = "ElectroShip"' Name = "QueryByExample" }; " is 146.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_AfterChangingNamingStrategy,The length of the statement  "            using (new TemporaryNamingStrategy(DialectProvider' new PrefixNamingStrategy { TablePrefix = "tab_"' ColumnPrefix = "col_" })) " is 126.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_AfterChangingNamingStrategy,The length of the statement  "                ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id = "998"' AlbumId = "112"' AlbumName = "ElectroShip"' Name = "QueryByExample" }; " is 146.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_AfterChangingNamingStrategy,The length of the statement  "                ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id = "998"' AlbumId = "112"' AlbumName = "ElectroShip"' Name = "QueryByExample" }; " is 146.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_AfterChangingNamingStrategy,The length of the statement  "            using (new TemporaryNamingStrategy(DialectProvider' new PrefixNamingStrategy { TablePrefix = "tab_"' ColumnPrefix = "col_" })) " is 126.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_AfterChangingNamingStrategy,The length of the statement  "                ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id = "998"' AlbumId = "112"' AlbumName = "ElectroShip"' Name = "QueryByExample" }; " is 146.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "            authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 }); " is 224.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "            authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 }); " is 224.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "            authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 }); " is 216.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "            authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76}); " is 225.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "            authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35}); " is 223.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "            authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652}); " is 223.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "            authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563}); " is 224.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "            authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 }); " is 222.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "            authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 }); " is 228.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "            authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 }); " is 223.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "            authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 }); " is 223.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "            authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 }); " is 221.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "            authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99}); " is 220.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "            authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'  " is 160.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetDictionary,The length of the statement  "                var dictionary = db.Dictionary<int' string>("SELECT \"id\"' \"name\" FROM " + "ModelWithIdAndName".SqlTable(DialectProvider)); " is 126.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,SchemaTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\SchemaTests.cs,Can_Create_Tables_With_Schema_in_PostgreSQL,The length of the statement  "                var tables = db.Single<string>(@"SELECT '[' || n.nspname || '].[' || c.relname ||']' FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE c.relname = 'test_schema_user' AND n.nspname = 'TestSchema'"); " is 220.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,TypeWithByteArrayFieldTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\TypeWithByteArrayFieldTests.cs,_insertManually,The length of the statement  "                cmd.CommandText = @"INSERT INTO ""type_with_byte_array_field"" (""id""'""content"") VALUES (@Id' @Content) --manual parameterized insert"; " is 138.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests,XmlTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\XmlTests.cs,Can_use_xml_in_postgresql,The length of the statement  "            var dbFactory = new OrmLiteConnectionFactory("Server=192.168.1.8;Port=5432;User Id=test;Password=test;Database=test;Pooling=true;MinPoolSize=0;MaxPoolSize=200"' PostgreSqlDialect.Provider); " is 189.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The length of the statement  "                db.InsertOnly(new Author { Active = false' Rate = 0' Name = "Victor Grozny"' Birthday = DateTime.Today.AddYears(-18) }' rn => new { rn.Id' rn.Name' rn.Birthday' rn.Active' rn.Rate }); " is 183.
Long Statement,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The length of the statement  "                db.InsertOnly(new Author { Active = false' Rate = 0' Name = "Ivan Chorny"' Birthday = DateTime.Today.AddYears(-19) }' rn => new { rn.Id' rn.Name' rn.Birthday' rn.Active' rn.Rate }); " is 181.
Empty Catch Block,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The method has an empty catch block.
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,CreatePostgreSQLTablesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\CreatePostgreSQLTablesTests.cs,can_create_tables_after_UseUnicode_or_DefaultStringLength_changed,The following statement contains a magic number: stringConverter.StringLength = 98765;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_expression,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 2' EnumValue = SomeEnum.Value1 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_expression,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 3' EnumValue = SomeEnum.Value2 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_expression,The following statement contains a magic number: Assert.AreEqual(2' target.Count());
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_string,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 2' EnumValue = SomeEnum.Value1 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_string,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 3' EnumValue = SomeEnum.Value2 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_string,The following statement contains a magic number: Assert.AreEqual(2' target.Count());
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_where_with_AnonType,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 2' EnumValue = SomeEnum.Value1 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_where_with_AnonType,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 3' EnumValue = SomeEnum.Value2 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_where_with_AnonType,The following statement contains a magic number: Assert.AreEqual(2' target.Count());
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,NormalizeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\NormalizeTests.cs,Can_create_and_populate_tables_without_quotes,The following statement contains a magic number: var customer = new Customer                  {                      Name = "Customer 1"'                      PrimaryAddress = new CustomerAddress                      {                          AddressLine1 = "1 Humpty Street"'                          City = "Humpty Doo"'                          State = "Northern Territory"'                          Country = "Australia"                      }'                      Orders = new[] {                          new Order { LineItem = "Line 1"' Qty = 1' Cost = 1.99m }'                          new Order { LineItem = "Line 2"' Qty = 2' Cost = 2.99m }'                      }.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,NormalizeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\NormalizeTests.cs,Can_create_and_populate_tables_without_quotes,The following statement contains a magic number: var customer = new Customer                  {                      Name = "Customer 1"'                      PrimaryAddress = new CustomerAddress                      {                          AddressLine1 = "1 Humpty Street"'                          City = "Humpty Doo"'                          State = "Northern Territory"'                          Country = "Australia"                      }'                      Orders = new[] {                          new Order { LineItem = "Line 1"' Qty = 1' Cost = 1.99m }'                          new Order { LineItem = "Line 2"' Qty = 2' Cost = 2.99m }'                      }.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,NormalizeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\NormalizeTests.cs,Can_create_and_populate_tables_without_quotes,The following statement contains a magic number: var customer = new Customer                  {                      Name = "Customer 1"'                      PrimaryAddress = new CustomerAddress                      {                          AddressLine1 = "1 Humpty Street"'                          City = "Humpty Doo"'                          State = "Northern Territory"'                          Country = "Australia"                      }'                      Orders = new[] {                          new Order { LineItem = "Line 1"' Qty = 1' Cost = 1.99m }'                          new Order { LineItem = "Line 2"' Qty = 2' Cost = 2.99m }'                      }.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,NormalizeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\NormalizeTests.cs,Can_create_and_populate_tables_without_quotes,The following statement contains a magic number: Assert.That(totalQty' Is.EqualTo(3));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var getRowIds = new[] { 2' 4 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var getRowIds = new[] { 2' 4 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var getRowIds = new[] { 2' 4 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var getRowIds = new[] { 2' 4 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var deleteRowIds = new List<int> { 2' 4 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var deleteRowIds = new List<int> { 2' 4 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteExecuteProcedureTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteExecuteProcedureTests.cs,Can_execute_stored_procedure_with_array_arguments,The following statement contains a magic number: db.ExecuteProcedure(new ServiceStackFunction                  {                      StringValues = new[] { "ServiceStack"' "Thoughtfully Architected" }'                      IntegerValues = new[] { 1' 2' 3 }                  });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteExecuteProcedureTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteExecuteProcedureTests.cs,Can_execute_stored_procedure_with_array_arguments,The following statement contains a magic number: db.ExecuteProcedure(new ServiceStackFunction                  {                      StringValues = new[] { "ServiceStack"' "Thoughtfully Architected" }'                      IntegerValues = new[] { 1' 2' 3 }                  });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'                   City = "Mexico"'                   LastActivity= DateTime.Today'                   NRate=5'                  FloatProperty=1.25f'                  NFloatProperty=3.15f'                  DoubleProperty= 1.25'                  NDoubleProperty= 8.25              });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'                   City = "Mexico"'                   LastActivity= DateTime.Today'                   NRate=5'                  FloatProperty=1.25f'                  NFloatProperty=3.15f'                  DoubleProperty= 1.25'                  NDoubleProperty= 8.25              });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'                   City = "Mexico"'                   LastActivity= DateTime.Today'                   NRate=5'                  FloatProperty=1.25f'                  NFloatProperty=3.15f'                  DoubleProperty= 1.25'                  NDoubleProperty= 8.25              });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'                   City = "Mexico"'                   LastActivity= DateTime.Today'                   NRate=5'                  FloatProperty=1.25f'                  NFloatProperty=3.15f'                  DoubleProperty= 1.25'                  NDoubleProperty= 8.25              });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'                   City = "Mexico"'                   LastActivity= DateTime.Today'                   NRate=5'                  FloatProperty=1.25f'                  NFloatProperty=3.15f'                  DoubleProperty= 1.25'                  NDoubleProperty= 8.25              });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'                   City = "Mexico"'                   LastActivity= DateTime.Today'                   NRate=5'                  FloatProperty=1.25f'                  NFloatProperty=3.15f'                  DoubleProperty= 1.25'                  NDoubleProperty= 8.25              });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'                   City = "Mexico"'                   LastActivity= DateTime.Today'                   NRate=5'                  FloatProperty=1.25f'                  NFloatProperty=3.15f'                  DoubleProperty= 1.25'                  NDoubleProperty= 8.25              });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'                   City = "Mexico"'                   LastActivity= DateTime.Today'                   NRate=5'                  FloatProperty=1.25f'                  NFloatProperty=3.15f'                  DoubleProperty= 1.25'                  NDoubleProperty= 8.25              });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteInsertTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_retrieve_LastInsertId_from_inserted_table,The following statement contains a magic number: var row1 = new ModelWithIdAndName1() { Name = "A"' Id = 4 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteInsertTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_retrieve_LastInsertId_from_inserted_table,The following statement contains a magic number: var row2 = new ModelWithIdAndName1() { Name = "B"' Id = 5 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteInsertTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_retrieve_LastInsertId_from_inserted_table_with_LastVal,The following statement contains a magic number: var row1 = ModelWithIdAndName.Create(5);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteInsertTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_retrieve_LastInsertId_from_inserted_table_with_LastVal,The following statement contains a magic number: var row2 = ModelWithIdAndName.Create(6);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteInsertTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_insert_single_quote,The following statement contains a magic number: var row1 = new ModelWithIdAndName1() { Name = @"'"' Id = 55};
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSQLUpdateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_insert_datetimeoffsets_regardless_of_current_culture,The following statement contains a magic number: var date = new DateTimeOffset(2010' 11' 29' 1' 2' 3' new TimeSpan(0));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSQLUpdateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_insert_datetimeoffsets_regardless_of_current_culture,The following statement contains a magic number: var date = new DateTimeOffset(2010' 11' 29' 1' 2' 3' new TimeSpan(0));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSQLUpdateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_insert_datetimeoffsets_regardless_of_current_culture,The following statement contains a magic number: var date = new DateTimeOffset(2010' 11' 29' 1' 2' 3' new TimeSpan(0));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSQLUpdateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_insert_datetimeoffsets_regardless_of_current_culture,The following statement contains a magic number: var date = new DateTimeOffset(2010' 11' 29' 1' 2' 3' new TimeSpan(0));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSQLUpdateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_insert_datetimeoffsets_regardless_of_current_culture,The following statement contains a magic number: var date = new DateTimeOffset(2010' 11' 29' 1' 2' 3' new TimeSpan(0));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSQLUpdateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_insert_datetimeoffsets_regardless_of_current_culture,The following statement contains a magic number: db.Update<ModelWithDateTimeOffset>(new { Value = date.AddDays(30) }' r => r.Id == 1);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSQLUpdateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_insert_datetimeoffsets_regardless_of_current_culture,The following statement contains a magic number: Assert.That(rows[0].Value' Is.EqualTo(date.AddDays(30)));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetById_int_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetById_int_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetByIds_int_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetByIds_int_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_select_scalar_value,The following statement contains a magic number: const int n = 5;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetFirstColumn,The following statement contains a magic number: const int n = 5;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetFirstColumnDistinct,The following statement contains a magic number: const int n = 5;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: const int n = 5;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: n.Times(x => {                      var row = ModelWithIdAndName.Create(x);                      row.Name = x % 2 == 0 ? "OddGroup" : "EvenGroup";                      db.Insert(row);                  });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: Assert.That(lookup' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: Assert.That(lookup["OddGroup"]' Has.Count.EqualTo(3));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: Assert.That(lookup["EvenGroup"]' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetDictionary,The following statement contains a magic number: const int n = 5;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetDictionary,The following statement contains a magic number: Assert.That(dictionary' Has.Count.EqualTo(5));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Select_subset_ModelWithIdAndName_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Select_subset_ModelWithIdAndName_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Query_ModelWithFieldsOfDifferentTypes_with_dictionary_parameters,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Query_ModelWithFieldsOfDifferentTypes_with_dictionary_parameters,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Query_ModelWithFieldsOfDifferentTypes_with_dictionary_parameters,The following statement contains a magic number: var rows = db.Select<ModelWithFieldsOfDifferentTypes>("SELECT * FROM {0} where \"id\" = :Id "                      .Fmt("ModelWithFieldsOfDifferentTypes".SqlTable(DialectProvider))'                      new Dictionary<string' object> { {"Id"' 3} });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Query_ModelWithFieldsOfDifferentTypes_with_dictionary_parameters,The following statement contains a magic number: Assert.AreEqual(rows[0].Id' 3);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Select_Into_ModelWithIdAndName_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Select_Into_ModelWithIdAndName_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Select_In_for_string_value,The following statement contains a magic number: const int n = 5;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Select_With_Subquery,The following statement contains a magic number: const int n = 5;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Select_With_Subquery,The following statement contains a magic number: Assert.That(rows.Count' Is.EqualTo((3)));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlArrayTests.cs,Can_save_integer_array,The following statement contains a magic number: var row = new ModelWithArrayType                  {                      Id = 1'                      IntegerArray = new[] {1' 2' 3}                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlArrayTests.cs,Can_save_integer_array,The following statement contains a magic number: var row = new ModelWithArrayType                  {                      Id = 1'                      IntegerArray = new[] {1' 2' 3}                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlArrayTests.cs,Can_save_integer_array,The following statement contains a magic number: Assert.That(result[0].IntegerArray' Is.EqualTo(new[] { 1' 2' 3 }));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlArrayTests.cs,Can_save_integer_array,The following statement contains a magic number: Assert.That(result[0].IntegerArray' Is.EqualTo(new[] { 1' 2' 3 }));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlArrayTests.cs,Can_save_big_integer_array,The following statement contains a magic number: var row = new ModelWithArrayType                  {                      Id = 2'                      BigIntegerArray = new long[] { 1' 2' 3' 4 }                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlArrayTests.cs,Can_save_big_integer_array,The following statement contains a magic number: var row = new ModelWithArrayType                  {                      Id = 2'                      BigIntegerArray = new long[] { 1' 2' 3' 4 }                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlArrayTests.cs,Can_save_big_integer_array,The following statement contains a magic number: var row = new ModelWithArrayType                  {                      Id = 2'                      BigIntegerArray = new long[] { 1' 2' 3' 4 }                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlArrayTests.cs,Can_save_big_integer_array,The following statement contains a magic number: var row = new ModelWithArrayType                  {                      Id = 2'                      BigIntegerArray = new long[] { 1' 2' 3' 4 }                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlArrayTests.cs,Can_save_big_integer_array,The following statement contains a magic number: Assert.That(result[0].BigIntegerArray' Is.EqualTo(new[] { 1' 2' 3' 4 }));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlArrayTests.cs,Can_save_big_integer_array,The following statement contains a magic number: Assert.That(result[0].BigIntegerArray' Is.EqualTo(new[] { 1' 2' 3' 4 }));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlArrayTests.cs,Can_save_big_integer_array,The following statement contains a magic number: Assert.That(result[0].BigIntegerArray' Is.EqualTo(new[] { 1' 2' 3' 4 }));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Can_save_complex_types_as_JSON,The following statement contains a magic number: var row = new ModelWithJsonType                  {                      Id = 1'                      ComplexTypeJson = new ComplexType                      {                          Id = 2' SubType = new SubType { Name = "SubType2" }                      }'                      ComplexTypeJsonb = new ComplexType                      {                          Id = 3' SubType = new SubType { Name = "SubType3" }                      }'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Can_save_complex_types_as_JSON,The following statement contains a magic number: var row = new ModelWithJsonType                  {                      Id = 1'                      ComplexTypeJson = new ComplexType                      {                          Id = 2' SubType = new SubType { Name = "SubType2" }                      }'                      ComplexTypeJsonb = new ComplexType                      {                          Id = 3' SubType = new SubType { Name = "SubType3" }                      }'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Can_save_complex_types_as_JSON,The following statement contains a magic number: Assert.That(result.ComplexTypeJson.Id' Is.EqualTo(2));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Can_save_complex_types_as_JSON,The following statement contains a magic number: Assert.That(results[0].ComplexTypeJsonb.Id' Is.EqualTo(3));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: long UnixEpoch = 621355968000000000L;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var dateTimes = new DateTime[] {                      new DateTime(UnixEpoch' DateTimeKind.Utc)'                      new DateTime(2001' 01' 01' 1' 1' 1' 1' DateTimeKind.Utc)'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlData,The following statement contains a magic number: var data = new PgsqlData                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: long UnixEpoch = 621355968000000000L;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var dateTimes = new DateTime[] {                      new DateTime(UnixEpoch' DateTimeKind.Utc)'                      new DateTime(2001' 01' 01' 1' 1' 1' 1' DateTimeKind.Utc)'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,PostgreSqlJsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\PostgreSqlJsonTests.cs,Does_save_PgSqlDataAnnotated,The following statement contains a magic number: var data = new PgsqlDataAnnotated                  {                      Id = Guid.NewGuid()'                      Ints = new[] { 2' 4' 1 }'                      Longs = new long[] { 2' 4' 1 }'                      Floats = new float[] { 2' 4' 1 }'                      Doubles = new double[] { 2' 4' 1 }'                      Strings = new[] { "test string 1"' "test string 2" }'                      Decimals = new decimal[] { 2' 4' 1 }'                      DateTimes = dateTimes'                      DateTimeOffsets = dateTimeOffsets'                                            ListInts = new[] { 2' 4' 1 }.ToList()'                      ListLongs = new long[] { 2' 4' 1 }.ToList()'                      ListFloats = new float[] { 2' 4' 1 }.ToList()'                      ListDoubles = new double[] { 2' 4' 1 }.ToList()'                      ListStrings = new[] { "test string 1"' "test string 2" }.ToList()'                      ListDecimals = new decimal[] { 2' 4' 1 }.ToList()'                      ListDateTimes = dateTimes.ToList()'                      ListDateTimeOffsets = dateTimeOffsets.ToList()'                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,SchemaTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\SchemaTests.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: db.Insert(new User { Id = 2' Name = "B"' CreatedDate = DateTime.Now });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,SchemaTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\SchemaTests.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: db.Insert(new User { Id = 3' Name = "B"' CreatedDate = DateTime.Now });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,SchemaTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\SchemaTests.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: Assert.That(rowsB' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,SchemaTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\SchemaTests.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: Assert.That(rowIds' Is.EquivalentTo(new List<long> { 2' 3 }));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,SchemaTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\SchemaTests.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: Assert.That(rowIds' Is.EquivalentTo(new List<long> { 2' 3 }));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,TypeWithByteArrayFieldTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\TypeWithByteArrayFieldTests.cs,getSampleObject,The following statement contains a magic number: var testByteArray = new byte[256];
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,TypeWithByteArrayFieldTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\TypeWithByteArrayFieldTests.cs,getSampleObject,The following statement contains a magic number: i < 256
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests,XmlTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\XmlTests.cs,Can_use_xml_in_postgresql,The following statement contains a magic number: db.Insert(new XmlTest { Id = 2' Xml = @"<attendee>      <bio>          <name>Tom Smith</name>          <birthYear>1978</birthYear>      </bio>      <languages>          <lang level=""5"">python</lang>          <lang level=""3"">java</lang>          <lang level=""1"">ruby</lang>      </languages>  </attendee>" });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 4 + 3);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 4 + 3);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 10 - 3);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 10 - 3);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: var a = 4;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: var b = 3;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: var a = 10;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: var b = 3;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(4) + GetValue(3));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(4) + GetValue(3));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(10) - GetValue(3));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(10) - GetValue(3));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors = new List<Author>              {                  new Author                  {                      Name = "Demis Bellot"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 99.9m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "London"                  }'                  new Author                  {                      Name = "Angel Colmenares"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 50.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Adam Witco"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 80.0m'                      Comments = "Math Books"'                      Rate = 9'                      City = "London"                  }'                  new Author                  {                      Name = "Claudia Espinel"'                      Birthday = DateTime.Today.AddYears(-23)'                      Active = true'                      Earnings = 60.0m'                      Comments = "Cooking books"'                      Rate = 10'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Libardo Pajaro"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 80.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Jorge Garzon"'                      Birthday = DateTime.Today.AddYears(-28)'                      Active = true'                      Earnings = 70.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Alejandro Isaza"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 70.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Bogota"                  }'                  new Author                  {                      Name = "Wilmer Agamez"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 30.0m'                      Comments = "Java books"'                      Rate = 0'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Rodger Contreras"'                      Birthday = DateTime.Today.AddYears(-25)'                      Active = true'                      Earnings = 90.0m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "Cartagena"                  }'                  new Author                  {                      Name = "Chuck Benedict"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "CSharp books"'                      Rate = 8'                      City = "London"                  }'                  new Author                  {                      Name = "James Benedict II"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.5m'                      Comments = "Java books"'                      Rate = 5'                      City = "Berlin"                  }'                  new Author                  {                      Name = "Ethan Brown"'                      Birthday = DateTime.Today.AddYears(-20)'                      Active = true'                      Earnings = 45.0m'                      Comments = "CSharp books"'                      Rate = 5'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Xavi Garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 75.0m'                      Comments = "CSharp books"'                      Rate = 9'                      City = "Madrid"                  }'                  new Author                  {                      Name = "Luis garzon"'                      Birthday = DateTime.Today.AddYears(-22)'                      Active = true'                      Earnings = 85.0m'                      Comments = "CSharp books"'                      Rate = 10'                      City = "Mexico"'                      LastActivity = DateTime.Today                  }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: int year = DateTime.Today.AddYears(-20).Year;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: var lastDay = new DateTime(year' 12' 31);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: var lastDay = new DateTime(year' 12' 31);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: int expected = 5;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 6;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 7;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: var earnings = 50;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: result = db.Select<Author>(rn => rn.Earnings <= 50);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Where().Where(rn => rn.Rate == 10 && rn.City == city);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: result = db.Select<Author>(rn => rn.Rate == 10 && rn.City == "Mexico");
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: result = db.Select<Author>(rn => rn.Rate == 10 && rn.City == a.City);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 4;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: db.InsertOnly(new Author { Active = false' Rate = 0' Name = "Victor Grozny"' Birthday = DateTime.Today.AddYears(-18) }' rn => new { rn.Id' rn.Name' rn.Birthday' rn.Active' rn.Rate });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: db.InsertOnly(new Author { Active = false' Rate = 0' Name = "Ivan Chorny"' Birthday = DateTime.Today.AddYears(-19) }' rn => new { rn.Id' rn.Name' rn.Birthday' rn.Active' rn.Rate });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 14;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 5;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(5);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(0' 4);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(4' 4);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(4' 4);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(8' 4);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(8' 4);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 6;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn > 2 && q.IntColumn < 4);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn > 2 && q.IntColumn < 4);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_or_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_or_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_or_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 3 || q.IntColumn < 0);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: var a = 10;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: var b = 5;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var a = 10;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var b = 5;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 3 || a > b);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: Assert.AreEqual(11' actual.Count);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_invalid_conditional_or_valid_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_invalid_conditional_or_valid_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_valid_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_valid_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_int_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 3'                                     BoolColumn = true'                                     StringColumn = "4"                                 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_int_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 3);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_int_expression,The following statement contains a magic number: var columnValue = 3;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_int_method_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == GetValue(3));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn != 3);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_variable_int_expression,The following statement contains a magic number: var columnValue = 3;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_variable_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_variable_int_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn != GetValue(3));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression2,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression2,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_bool_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_bool_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_bool_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_bool_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_null_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"'                  NullableCol = new TestType { StringColumn = "sometext" }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_null_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_null_expression,The following statement contains a magic number: Assert.AreEqual(actual.Count' 10);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_null_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"'                  NullableCol = new TestType { StringColumn = "sometext" }              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_null_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ExpressionsTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ExpressionsTestBase.cs,EstablishContext,The following statement contains a magic number: var random = new Random((int)(DateTime.UtcNow.Ticks ^ (DateTime.UtcNow.Ticks >> 4)));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,ExpressionsTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\ExpressionsTestBase.cs,EstablishContext,The following statement contains a magic number: o = new TestType                                  {                                      BoolColumn = random.Next()%2 == 0'                                      IntColumn = intVal'                                      StringColumn = Guid.NewGuid().ToString()                                  };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 4*3);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 4*3);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 36/3);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 36/3);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 37%10);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 37%10);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: var a = 4;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: var b = 3;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: var a = 36;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: var b = 3;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: var a = 37;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: var b = 10;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(4)*GetValue(3));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(4)*GetValue(3));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(36)/GetValue(3));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(36)/GetValue(3));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(37)%GetValue(10));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(37)%GetValue(10));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,OrmLiteCountTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\OrmLiteCountTests.cs,CanDoCountWithInterfaceAndPredicate,The following statement contains a magic number: Expression<Func<CountTestTable' bool>> exp = q => q.Id == 2;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_property_expression,The following statement contains a magic number: var tmp = new TestClass<int>(12);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_property_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_field_expression,The following statement contains a magic number: var tmp = new TestClass<int>(12);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_field_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_method_expression,The following statement contains a magic number: var tmp = new TestClass<int>(12);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_property_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_field_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_method_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == TestClass<int>.StaticMethod(12));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_new_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_new_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_new_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == new TestClass<int>(12).Property);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_field_expression,The following statement contains a magic number: var tmp = new TestStruct<int>(12);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_field_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_property_expression,The following statement contains a magic number: var tmp = new TestStruct<int>(12);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_property_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_method_expression,The following statement contains a magic number: var tmp = new TestStruct<int>(12);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_property_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_field_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_bool_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_bool_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_new_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_new_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_than_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_or_equal_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_or_equal_than_expression,The following statement contains a magic number: Assert.AreEqual(11' actual.Count);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_smaller_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_smaller_or_equal_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = stringVal              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = stringVal              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_double_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = stringVal              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_double_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_backtick_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = stringVal              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_backtick_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = prefix + "asdfasdfasdf"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = prefix + "'asdfasdfasdf"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_double_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = prefix + "\"asdfasdfasdf"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_double_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_backtick_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = prefix + "`asdfasdfasdf"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_backtick_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "asdfasdfasdf" + postfix              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "asdfasd'fasdf" + postfix              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_double_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "asdfasd\"fasdf" + postfix              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_double_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_backtick_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "asdfasd`fasdf" + postfix              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_backtick_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,TestType,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\TestType.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ BoolColumn.GetHashCode();
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,TestType,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\TestType.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (StringColumn != null ? StringColumn.GetHashCode() : 0);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_constant_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_constant_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_constant_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == +12);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_constant_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = -12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_constant_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_constant_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == -12);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression2,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression2,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_variable_expression,The following statement contains a magic number: var intVal = +12;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_variable_expression,The following statement contains a magic number: var intVal = -12;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = -12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_variable_expression,The following statement contains a magic number: object intVal = 12;
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_method_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == (int) GetValue((object) 12));
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Issues,OrmLiteModelArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Issues\CustomSqlIssue.cs,test_model_with_simple_array_and_duplicate_fields,The following statement contains a magic number: db.Insert(new MyModel { MyModelId = 100' Name = "Test Name"' NewField = "New Field"' Type = "My Type" });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Issues,OrmLiteModelArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Issues\CustomSqlIssue.cs,test_model_with_simple_array_and_duplicate_fields,The following statement contains a magic number: db.Insert(new MyModel { MyModelId = 200' Name = "Tester Name 2"' NewField = "New Field 2"' Type = "My Type 2" });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Issues,OrmLiteModelArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Issues\CustomSqlIssue.cs,test_model_with_complex_array_and_duplicate_fields,The following statement contains a magic number: db.Insert(new MyModel { MyModelId = 100' Name = "Test Name"' NewField = "New Field"' Type = "My Type" });
Magic Number,ServiceStack.OrmLite.PostgreSQL.Tests.Issues,OrmLiteModelArrayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.PostgreSQL.Tests\Issues\CustomSqlIssue.cs,test_model_with_complex_array_and_duplicate_fields,The following statement contains a magic number: db.Insert(new MyModel { MyModelId = 200' Name = "Tester Name 2"' NewField = "New Field 2"' Type = "My Type 2" });
