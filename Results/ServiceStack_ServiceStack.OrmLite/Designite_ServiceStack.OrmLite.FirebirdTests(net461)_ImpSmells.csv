Implementation smell,Namespace,Class,File,Method,Description
Long Method,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The method has 182 lines of code.
Long Method,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The method has 278 lines of code.
Long Identifier,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,Create,The length of the parameter modelWithFieldsOfDifferentAndNullableType1 is 42.
Long Identifier,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,Create,The length of the parameter modelWithFieldsOfDifferentAndNullableType2 is 42.
Long Identifier,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The length of the parameter modelWithFieldsOfDifferentAndNullableType1 is 42.
Long Identifier,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,Create,The length of the parameter modelWithFieldsOfNullableType1 is 30.
Long Identifier,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,Create,The length of the parameter modelWithFieldsOfNullableType2 is 30.
Long Identifier,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The length of the parameter modelWithFieldsOfNullableType1 is 30.
Long Statement,ServiceStack.OrmLite.FirebirdTests,FB4ConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\FB4ConnectionTests.cs,Can_create_connection_to_blank_database,The length of the statement  "                $"User=SYSDBA;Password=masterkey;Database=/ormlite-tests/ormlite-tests.fdb;DataSource=localhost;Dialect=3;charset=utf8;"; " is 121.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteConnectionTests.cs,Can_create_connection_to_blank_database,The length of the statement  "                $"User=SYSDBA;Password=masterkey;Database=/ormlite-tests/ormlite-tests.fdb;DataSource=localhost;Dialect=3;charset=utf8;"; " is 121.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamingStrategy_with_GetById,The length of the statement  "            using (new TemporaryNamingStrategy(DialectProvider' new PrefixNamingStrategy { TablePrefix = "tab_"' ColumnPrefix = "col_" })) " is 126.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamingStrategy_with_GetById,The length of the statement  "				ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id= "999"' AlbumId = "112"' AlbumName="ElectroShip"' Name = "MyNameIsBatman"}; " is 142.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamingStrategy_with_query_by_example,The length of the statement  "            using (new TemporaryNamingStrategy(DialectProvider' new PrefixNamingStrategy { TablePrefix = "tab_"' ColumnPrefix = "col_" })) " is 126.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamingStrategy_with_query_by_example,The length of the statement  "				ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id = "998"' AlbumId = "112"' AlbumName = "ElectroShip"' Name = "QueryByExample" }; " is 146.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamingStrategy_AfterChangingNamingStrategy,The length of the statement  "            using (new TemporaryNamingStrategy(DialectProvider' new PrefixNamingStrategy { TablePrefix = "tab_"' ColumnPrefix = "col_" })) " is 126.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamingStrategy_AfterChangingNamingStrategy,The length of the statement  "                ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id = "998"' AlbumId = "112"' AlbumName = "ElectroShip"' Name = "QueryByExample" }; " is 146.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamingStrategy_AfterChangingNamingStrategy,The length of the statement  "				ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id = "998"' AlbumId = "112"' AlbumName = "ElectroShip"' Name = "QueryByExample" }; " is 146.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamingStrategy_AfterChangingNamingStrategy,The length of the statement  "            using (new TemporaryNamingStrategy(DialectProvider' new PrefixNamingStrategy { TablePrefix = "tab_"' ColumnPrefix = "col_" })) " is 126.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableWithNamingStrategyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamingStrategy_AfterChangingNamingStrategy,The length of the statement  "				ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id = "998"' AlbumId = "112"' AlbumName = "ElectroShip"' Name = "QueryByExample" }; " is 146.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 }); " is 224.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 }); " is 224.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 }); " is 216.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76}); " is 225.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35}); " is 223.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652}); " is 223.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563}); " is 224.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 }); " is 222.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 }); " is 228.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 }); " is 223.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 }); " is 223.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 }); " is 221.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99}); " is 220.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'  " is 160.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteInsertTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteInsertTests.cs,Can_insert_table_with_UserAuth,The length of the statement  "				var jsv = "{Id:0'UserName:UserName'Email:as@if.com'PrimaryEmail:as@if.com'FirstName:FirstName'LastName:LastName'DisplayName:DisplayName'Salt:WMQi/g=='PasswordHash:oGdE40yKOprIgbXQzEMSYZe3vRCRlKGuqX2i045vx50='Roles:[]'Permissions:[]'CreatedDate:2012-03-20T07:53:48.8720739Z'ModifiedDate:2012-03-20T07:53:48.8720739Z}"; " is 317.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The length of the statement  "					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }' " is 259.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The length of the statement  "					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }' " is 243.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The length of the statement  "					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }' " is 258.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The length of the statement  "					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }' " is 213.
Long Statement,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The length of the statement  "					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }' " is 289.
Long Statement,ServiceStack.OrmLite.FirebirdTests,ShippersExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ShipperExample.cs,Shippers_UseCase,The length of the statement  "            using (var db = new OrmLiteConnectionFactory("User=SYSDBA;Password=masterkey;Database=ormlite-tests.fdb;DataSource=localhost;Dialect=3;charset=ISO8859_1;"' FirebirdDialect.Provider).Open()) " is 189.
Long Statement,ServiceStack.OrmLite.FirebirdTests,CustomerOrdersUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\CustomerOrdersUseCase.cs,Run,The length of the statement  "                        { AddressType.Work' new Address { Line1 = "1 Street"' Country = "US"' State = "NY"' City = "New York"' ZipCode = "10101" } }' " is 125.
Long Statement,ServiceStack.OrmLite.FirebirdTests,CustomerOrdersUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\CustomerOrdersUseCase.cs,Run,The length of the statement  "                    ShippingAddress = new Address { Line1 = "3 Street"' Country = "US"' State = "NY"' City = "New York"' ZipCode = "12121" }' " is 121.
Long Statement,ServiceStack.OrmLite.FirebirdTests,SchemaUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\SchemaUseCase.cs,Can_Create_Tables_With_Schema_In_Sqlite,The length of the statement  "            using (IDbConnection db = "User=SYSDBA;Password=masterkey;Database=ormlite-tests.fdb;DataSource=localhost;Dialect=3;charset=ISO8859_1;".OpenDbConnection()) " is 155.
Long Statement,ServiceStack.OrmLite.FirebirdTests,SimpleUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\SimpleUseCase.cs,Simple_CRUD_example,The length of the statement  "			using (IDbConnection db = "User=SYSDBA;Password=masterkey;Database=ormlite-tests.fdb;DataSource=localhost;Dialect=3;charset=ISO8859_1;".OpenDbConnection()) " is 155.
Long Statement,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The length of the statement  "                db.InsertOnly(new Author() { Active = false' Rate = 0' Name = "Victor Grozny"' Birthday = DateTime.Today.AddYears(-18) }' rn => new { rn.Id' rn.Name' rn.Birthday' rn.Active' rn.Rate }); " is 185.
Long Statement,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The length of the statement  "                db.InsertOnly(new Author() { Active = false' Rate = 0' Name = "Ivan Chorny"' Birthday = DateTime.Today.AddYears(-19) }' rn => new { rn.Id' rn.Name' rn.Birthday' rn.Active' rn.Rate }); " is 183.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,AssertIsEqual,The length of the statement  "				ModelWithFieldsOfDifferentAndNullableTypes.Log.Error("Trouble with DateTime precisions' trying Assert again with rounding to seconds"' exception); " is 146.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,AssertIsEqual,The length of the statement  "				Assert.That(DateTimeExtensions.RoundToSecond(actual.DateTime)' Is.EqualTo(DateTimeExtensions.RoundToSecond(expected.DateTime))); " is 128.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,AssertIsEqual,The length of the statement  "				ModelWithFieldsOfDifferentAndNullableTypes.Log.Error("Trouble with float precisions' trying Assert again with rounding to 10 decimals"' exception2); " is 148.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,AssertIsEqual,The length of the statement  "				ModelWithFieldsOfDifferentAndNullableTypes.Log.Error("Trouble with double precisions' trying Assert again with rounding to 10 decimals"' exception3); " is 149.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,Create,The length of the statement  "			ModelWithFieldsOfDifferentAndNullableTypes modelWithFieldsOfDifferentAndNullableType1 = new ModelWithFieldsOfDifferentAndNullableTypes(); " is 137.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,Create,The length of the statement  "			ModelWithFieldsOfDifferentAndNullableTypes modelWithFieldsOfDifferentAndNullableType2 = modelWithFieldsOfDifferentAndNullableType1; " is 131.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The length of the statement  "			ModelWithFieldsOfDifferentAndNullableTypes modelWithFieldsOfDifferentAndNullableType1 = new ModelWithFieldsOfDifferentAndNullableTypes(); " is 137.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The length of the statement  "			modelWithFieldsOfDifferentAndNullableType1.Guid = new Guid((id%240+16).ToString("X")+ "461D9D-47DB-4778-B3FA-458379AE9BDC"); " is 124.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentTypes.cs,AssertIsEqual,The length of the statement  "				ModelWithFieldsOfDifferentTypes.Log.Error("Trouble with DateTime precisions' trying Assert again with rounding to seconds"' ex); " is 128.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentTypes.cs,AssertIsEqual,The length of the statement  "				Assert.That(DateTimeExtensions.RoundToSecond(actual.DateTime)' Is.EqualTo(DateTimeExtensions.RoundToSecond(expected.DateTime))); " is 128.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentTypes.cs,AssertIsEqual,The length of the statement  "				ModelWithFieldsOfDifferentTypes.Log.Error("Trouble with double precisions' trying Assert again with rounding to 10 decimals"' ex2); " is 131.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,AssertIsEqual,The length of the statement  "                ModelWithFieldsOfNullableTypes.Log.Error("Trouble with DateTime precisions' trying Assert again with rounding to seconds"' ex); " is 127.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,AssertIsEqual,The length of the statement  "                Assert.That(DateTimeExtensions.RoundToSecond(actual.NDateTime.Value.ToUniversalTime())' Is.EqualTo(DateTimeExtensions.RoundToSecond(expected.NDateTime.Value.ToUniversalTime()))); " is 178.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,AssertIsEqual,The length of the statement  "                ModelWithFieldsOfNullableTypes.Log.Error("Trouble with float precisions' trying Assert again with rounding to 10 decimals"' ex2); " is 129.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,AssertIsEqual,The length of the statement  "                ModelWithFieldsOfNullableTypes.Log.Error("Trouble with double precisions' trying Assert again with rounding to 10 decimals"' ex3); " is 130.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The length of the statement  "			modelWithFieldsOfNullableType1.NGuid = new Guid?(new Guid( (id%240+16).ToString("X") + "7DA519-73B6-4525-84BA-B57673B2360D")); " is 126.
Long Statement,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\Movie.cs,Equals,The length of the statement  "            return !object.ReferenceEquals(null' other) && (object.ReferenceEquals(this' other) || (object.Equals(other.Id' this.Id) && object.Equals(other.Title' this.Title) && other.Rating == this.Rating && object.Equals(other.Director' this.Director) && other.ReleaseDate.Equals(this.ReleaseDate) && object.Equals(other.TagLine' this.TagLine) && EnumerableExtensions.EquivalentTo<string>(this.Genres' other.Genres))); " is 408.
Long Statement,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\Movie.cs,Equals,The length of the statement  "            return !object.ReferenceEquals(null' obj) && (object.ReferenceEquals(this' obj) || (obj.GetType() == typeof(Movie) && this.Equals((Movie)obj))); " is 144.
Empty Catch Block,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The method has an empty catch block.
Empty Catch Block,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The method has an empty catch block.
Magic Number,ServiceStack.OrmLite.FirebirdTests,FB4ConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\FB4ConnectionTests.cs,Can_open_two_ReadOnlyConnections_to_same_database,The following statement contains a magic number: dbReadOnly.Insert(new ModelWithIdAndName(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,FB4ConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\FB4ConnectionTests.cs,Can_open_two_ReadOnlyConnections_to_same_database,The following statement contains a magic number: Assert.That(rows' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,FB4CreateTableTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\FB4CreateTableTests.cs,Check_AutoIncrement_with_Identity,The following statement contains a magic number: var id = db.Insert(new ModelWithAutoIncrement { Id = 1000' Name = "Isaac Newton"});
Magic Number,ServiceStack.OrmLite.FirebirdTests,FB4CreateTableTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\FB4CreateTableTests.cs,Check_AutoIncrement_with_Identity,The following statement contains a magic number: var model = db.SingleById<ModelWithAutoIncrement>(1000);
Magic Number,ServiceStack.OrmLite.FirebirdTests,FB4CreateTableTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\FB4CreateTableTests.cs,Check_AutoIncrement_with_Identity,The following statement contains a magic number: Assert.That(rows' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,FB4CreateTableTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\FB4CreateTableTests.cs,Check_AutoId_generation,The following statement contains a magic number: Assert.That(rows' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,LocalizationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\LocalizationTests.cs,Can_query_using_float_in_alernate_culuture,The following statement contains a magic number: db.Insert(new Point { Width = 4' Height = 1.123f' Top = 3.456d' Left = 2.345m});
Magic Number,ServiceStack.OrmLite.FirebirdTests,LocalizationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\LocalizationTests.cs,Can_query_using_float_in_alernate_culuture,The following statement contains a magic number: db.Insert(new Point { Width = 4' Height = 1.123f' Top = 3.456d' Left = 2.345m});
Magic Number,ServiceStack.OrmLite.FirebirdTests,LocalizationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\LocalizationTests.cs,Can_query_using_float_in_alernate_culuture,The following statement contains a magic number: db.Insert(new Point { Width = 4' Height = 1.123f' Top = 3.456d' Left = 2.345m});
Magic Number,ServiceStack.OrmLite.FirebirdTests,LocalizationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\LocalizationTests.cs,Can_query_using_float_in_alernate_culuture,The following statement contains a magic number: db.Insert(new Point { Width = 4' Height = 1.123f' Top = 3.456d' Left = 2.345m});
Magic Number,ServiceStack.OrmLite.FirebirdTests,LocalizationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\LocalizationTests.cs,Can_query_using_float_in_alernate_culuture,The following statement contains a magic number: Assert.That(points[0].Width' Is.EqualTo(4));
Magic Number,ServiceStack.OrmLite.FirebirdTests,LocalizationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\LocalizationTests.cs,Can_query_using_float_in_alernate_culuture,The following statement contains a magic number: Assert.That(points[0].Height' Is.EqualTo(1.123f));
Magic Number,ServiceStack.OrmLite.FirebirdTests,LocalizationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\LocalizationTests.cs,Can_query_using_float_in_alernate_culuture,The following statement contains a magic number: Assert.That(points[0].Top' Is.EqualTo(3.456d));
Magic Number,ServiceStack.OrmLite.FirebirdTests,LocalizationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\LocalizationTests.cs,Can_query_using_float_in_alernate_culuture,The following statement contains a magic number: Assert.That(points[0].Left' Is.EqualTo(2.345m));
Magic Number,ServiceStack.OrmLite.FirebirdTests,LocalizationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\LocalizationTests.cs,Can_query_using_float_in_alernate_culuture,The following statement contains a magic number: points = db.Select<Point>("Height=@height"' new { height = 1.123f });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var getRowIds = new[] { 2' 4 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var getRowIds = new[] { 2' 4 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var getRowIds = new[] { 2' 4 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var getRowIds = new[] { 2' 4 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var deleteRowIds = new List<int> { 2' 4 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteBasicPersistenceProviderTest.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var deleteRowIds = new List<int> { 2' 4 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteComplexTypesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteComplexTypesTests.cs,Can_insert_and_select_from_OrderLineData,The following statement contains a magic number: var orderIds = new[] { 1' 2' 3' 4' 5 }.ToList();
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteComplexTypesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteComplexTypesTests.cs,Can_insert_and_select_from_OrderLineData,The following statement contains a magic number: var orderIds = new[] { 1' 2' 3' 4' 5 }.ToList();
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteComplexTypesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteComplexTypesTests.cs,Can_insert_and_select_from_OrderLineData,The following statement contains a magic number: var orderIds = new[] { 1' 2' 3' 4' 5 }.ToList();
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteComplexTypesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteComplexTypesTests.cs,Can_insert_and_select_from_OrderLineData,The following statement contains a magic number: var orderIds = new[] { 1' 2' 3' 4' 5 }.ToList();
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteConnectionTests.cs,Can_open_two_ReadOnlyConnections_to_same_database,The following statement contains a magic number: dbReadOnly.Insert(new ModelWithIdAndName(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteConnectionTests.cs,Can_open_two_ReadOnlyConnections_to_same_database,The following statement contains a magic number: Assert.That(rows' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableTests.cs,Can_preserve_ModelWithIdOnly_table,The following statement contains a magic number: db.Insert(new ModelWithIdOnly(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableTests.cs,Can_preserve_ModelWithIdOnly_table,The following statement contains a magic number: Assert.That(rows' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableTests.cs,Can_preserve_ModelWithIdAndName_table,The following statement contains a magic number: Assert.That(rows' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableTests.cs,Can_overwrite_ModelWithIdOnly_table,The following statement contains a magic number: db.Insert(new ModelWithIdOnly(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableTests.cs,Can_create_multiple_tables,The following statement contains a magic number: db.Insert(new ModelWithIdOnly(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableTests.cs,Can_create_multiple_tables,The following statement contains a magic number: Assert.That(rows1' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableTests.cs,Can_create_multiple_tables,The following statement contains a magic number: Assert.That(rows2' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableTests.cs,Can_create_ModelWithIdAndName_table_with_specified_DefaultStringLength,The following statement contains a magic number: OrmLiteConfig.DialectProvider.GetStringConverter().StringLength = 255;
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableWithIndexesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableWithIndexesTests.cs,Can_create_ModelWithIndexFields_table,The following statement contains a magic number: OrmLiteConfig.DialectProvider.GetStringConverter().StringLength = 128;
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteCreateTableWithIndexesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteCreateTableWithIndexesTests.cs,Can_create_ModelWithCompositeIndexFields_table,The following statement contains a magic number: OrmLiteConfig.DialectProvider.GetStringConverter().StringLength = 128;
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteDeleteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteDeleteTests.cs,Can_Delete_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteDeleteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteDeleteTests.cs,Can_Delete_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteDeleteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteDeleteTests.cs,Can_Delete_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var row2 = rows.First(x => x.Id == 2);
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteDeleteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteDeleteTests.cs,Can_Delete_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: Assert.That(dbRowIds' Is.EquivalentTo(new[] { 1' 3 }));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteDeleteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteDeleteTests.cs,Can_DeleteById_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteDeleteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteDeleteTests.cs,Can_DeleteById_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteDeleteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteDeleteTests.cs,Can_DeleteById_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: db.DeleteById<ModelWithFieldsOfDifferentTypes>(2);
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteDeleteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteDeleteTests.cs,Can_DeleteById_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: Assert.That(dbRowIds' Is.EquivalentTo(new[] { 1' 3 }));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteDeleteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteDeleteTests.cs,Can_DeleteByIds_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteDeleteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteDeleteTests.cs,Can_DeleteByIds_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteDeleteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteDeleteTests.cs,Can_DeleteByIds_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: db.DeleteByIds<ModelWithFieldsOfDifferentTypes>(new[] { 1' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteDeleteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteDeleteTests.cs,Can_DeleteByIds_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: Assert.That(dbRowIds' Is.EquivalentTo(new[] { 2 }));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'   				City = "Mexico"'   				LastActivity= DateTime.Today'   				NRate=5'  				FloatProperty=1.25f'  				NFloatProperty=3.15f'  				DoubleProperty= 1.25'  				NDoubleProperty= 8.25  			});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'   				City = "Mexico"'   				LastActivity= DateTime.Today'   				NRate=5'  				FloatProperty=1.25f'  				NFloatProperty=3.15f'  				DoubleProperty= 1.25'  				NDoubleProperty= 8.25  			});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'   				City = "Mexico"'   				LastActivity= DateTime.Today'   				NRate=5'  				FloatProperty=1.25f'  				NFloatProperty=3.15f'  				DoubleProperty= 1.25'  				NDoubleProperty= 8.25  			});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'   				City = "Mexico"'   				LastActivity= DateTime.Today'   				NRate=5'  				FloatProperty=1.25f'  				NFloatProperty=3.15f'  				DoubleProperty= 1.25'  				NDoubleProperty= 8.25  			});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'   				City = "Mexico"'   				LastActivity= DateTime.Today'   				NRate=5'  				FloatProperty=1.25f'  				NFloatProperty=3.15f'  				DoubleProperty= 1.25'  				NDoubleProperty= 8.25  			});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'   				City = "Mexico"'   				LastActivity= DateTime.Today'   				NRate=5'  				FloatProperty=1.25f'  				NFloatProperty=3.15f'  				DoubleProperty= 1.25'  				NDoubleProperty= 8.25  			});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'   				City = "Mexico"'   				LastActivity= DateTime.Today'   				NRate=5'  				FloatProperty=1.25f'  				NFloatProperty=3.15f'  				DoubleProperty= 1.25'  				NDoubleProperty= 8.25  			});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteGetScalarTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'   				City = "Mexico"'   				LastActivity= DateTime.Today'   				NRate=5'  				FloatProperty=1.25f'  				NFloatProperty=3.15f'  				DoubleProperty= 1.25'  				NDoubleProperty= 8.25  			});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteInsertTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteInsertTests.cs,Can_retrieve_LastInsertId_from_inserted_table,The following statement contains a magic number: var row1 = ModelWithIdAndName.Create(5);
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteInsertTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteInsertTests.cs,Can_retrieve_LastInsertId_from_inserted_table,The following statement contains a magic number: var row2 = ModelWithIdAndName.Create(6);
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteQueryTests.cs,Can_GetById_int_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteQueryTests.cs,Can_GetById_int_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_ModelWithFieldsOfDifferentTypes_table_with_no_ids,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_ModelWithFieldsOfDifferentTypes_table_with_no_ids,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_ModelWithFieldsOfDifferentTypes_table_with_no_ids,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_ModelWithFieldsOfDifferentTypes_table_with_no_ids,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSaveTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSaveTests.cs,Can_SaveAll_and_select_from_Movie_table,The following statement contains a magic number: var top5Movies = new List<Movie>  				{  					new Movie { Id = "tt0111161"' Title = "The Shawshank Redemption"' Rating = 9.2m' Director = "Frank Darabont"' ReleaseDate = new DateTime(1995'2'17)' TagLine = "Fear can hold you prisoner. Hope can set you free."' Genres = new List<string>{"Crime"'"Drama"}' }'  					new Movie { Id = "tt0068646"' Title = "The Godfather"' Rating = 9.2m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1972'3'24)' TagLine = "An offer you can't refuse."' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt1375666"' Title = "Inception"' Rating = 9.2m' Director = "Christopher Nolan"' ReleaseDate = new DateTime(2010'7'16)' TagLine = "Your mind is the scene of the crime"' Genres = new List<string>{"Action"' "Mystery"' "Sci-Fi"' "Thriller"}' }'  					new Movie { Id = "tt0071562"' Title = "The Godfather: Part II"' Rating = 9.0m' Director = "Francis Ford Coppola"' ReleaseDate = new DateTime(1974'12'20)' Genres = new List<string> {"Crime"'"Drama"' "Thriller"}' }'  					new Movie { Id = "tt0060196"' Title = "The Good' the Bad and the Ugly"' Rating = 9.0m' Director = "Sergio Leone"' ReleaseDate = new DateTime(1967'12'29)' TagLine = "They formed an alliance of hate to steal a fortune in dead man's gold"' Genres = new List<string>{"Adventure"'"Western"}' }'  				};
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_GetById_int_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_GetById_int_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_GetByIds_int_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_GetByIds_int_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_select_scalar_value,The following statement contains a magic number: const int n = 5;
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_GetFirstColumn,The following statement contains a magic number: const int n = 5;
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_GetFirstColumnDistinct,The following statement contains a magic number: const int n = 5;
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: const int n = 5;
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: n.Times(x => {  					var row = ModelWithIdAndName.Create(0);  					row.Name = x % 2 == 0 ? "OddGroup" : "EvenGroup";  					db.Insert(row);  				});
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: Assert.That(lookup' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: Assert.That(lookup["OddGroup"]' Has.Count.EqualTo(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: Assert.That(lookup["EvenGroup"]' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_GetDictionary,The following statement contains a magic number: const int n = 5;
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_GetDictionary,The following statement contains a magic number: Assert.That(dictionary' Has.Count.EqualTo(5));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_Select_subset_ModelWithIdAndName_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_Select_subset_ModelWithIdAndName_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_Select_Into_ModelWithIdAndName_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_Select_Into_ModelWithIdAndName_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteSelectTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteSelectTests.cs,Can_Select_In_for_string_value,The following statement contains a magic number: const int n = 5;
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteTransactionTests.cs,Transaction_commit_persists_data_to_the_db,The following statement contains a magic number: Assert.That(rowsInTrans' Has.Count.EqualTo(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteTransactionTests.cs,Transaction_commit_persists_data_to_the_db,The following statement contains a magic number: Assert.That(rows' Has.Count.EqualTo(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteTransactionTests.cs,Transaction_rollsback_if_not_committed,The following statement contains a magic number: Assert.That(rowsInTrans' Has.Count.EqualTo(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteTransactionTests.cs,Transaction_rollsback_transactions_to_different_tables,The following statement contains a magic number: db.Insert(ModelWithFieldsOfDifferentTypes.Create(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteTransactionTests.cs,Transaction_rollsback_transactions_to_different_tables,The following statement contains a magic number: Assert.That(db.Select<ModelWithIdAndName>()' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteTransactionTests.cs,Transaction_commits_inserts_to_different_tables,The following statement contains a magic number: db.Insert(ModelWithFieldsOfDifferentTypes.Create(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteTransactionTests.cs,Transaction_commits_inserts_to_different_tables,The following statement contains a magic number: Assert.That(db.Select<ModelWithIdAndName>()' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,OrmLiteTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\OrmLiteTransactionTests.cs,Transaction_commits_inserts_to_different_tables,The following statement contains a magic number: Assert.That(db.Select<ModelWithIdAndName>()' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,ShippersExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ShipperExample.cs,Shippers_UseCase,The following statement contains a magic number: Assert.That(db.Select<ShipperType>()' Has.Count.EqualTo(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests,ShippersExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ShipperExample.cs,Shippers_UseCase,The following statement contains a magic number: Assert.That(db.Select<ShipperType>()' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,ShippersExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ShipperExample.cs,Shippers_UseCase,The following statement contains a magic number: Assert.That(db.Select<Shipper>("CompanyName = @company OR Phone = @phone"'                       new { company = "Trains R Us"' phone = "555-UNICORNS" })' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,ShippersExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ShipperExample.cs,Shippers_UseCase,The following statement contains a magic number: Assert.That(db.Select<Shipper>("\"Type\" = @id"' new { id = planesTypeId })' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,ShippersExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ShipperExample.cs,Shippers_UseCase,The following statement contains a magic number: Assert.That(partialColumns' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,ShippersExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ShipperExample.cs,Shippers_UseCase,The following statement contains a magic number: Assert.That(rows' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,ShippersExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ShipperExample.cs,Shippers_UseCase,The following statement contains a magic number: Assert.That(rows[1].Total' Is.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,TypeWithByteArrayFieldTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\TypeWithByteArrayFieldTests.cs,CanInsertAndSelectByteArray,The following statement contains a magic number: var orig = new TypeWithByteArrayField { Id = 1' Content = new byte[] { 0' 17' 0' 17' 0' 7 } };
Magic Number,ServiceStack.OrmLite.FirebirdTests,TypeWithByteArrayFieldTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\TypeWithByteArrayFieldTests.cs,CanInsertAndSelectByteArray,The following statement contains a magic number: var orig = new TypeWithByteArrayField { Id = 1' Content = new byte[] { 0' 17' 0' 17' 0' 7 } };
Magic Number,ServiceStack.OrmLite.FirebirdTests,TypeWithByteArrayFieldTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\TypeWithByteArrayFieldTests.cs,CanInsertAndSelectByteArray,The following statement contains a magic number: var orig = new TypeWithByteArrayField { Id = 1' Content = new byte[] { 0' 17' 0' 17' 0' 7 } };
Magic Number,ServiceStack.OrmLite.FirebirdTests,CustomerOrdersUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\CustomerOrdersUseCase.cs,Run,The following statement contains a magic number: db.Insert(new Employee { Id = 2' Name = "Employee 2" });
Magic Number,ServiceStack.OrmLite.FirebirdTests,CustomerOrdersUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\CustomerOrdersUseCase.cs,Run,The following statement contains a magic number: var product1 = new Product { Id = 1' Name = "Product 1"' UnitPrice = 10 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,CustomerOrdersUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\CustomerOrdersUseCase.cs,Run,The following statement contains a magic number: var product2 = new Product { Id = 2' Name = "Product 2"' UnitPrice = 20 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,CustomerOrdersUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\CustomerOrdersUseCase.cs,Run,The following statement contains a magic number: var product2 = new Product { Id = 2' Name = "Product 2"' UnitPrice = 20 };
Magic Number,ServiceStack.OrmLite.FirebirdTests,CustomerOrdersUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\CustomerOrdersUseCase.cs,Run,The following statement contains a magic number: var order = new Order                  {                      CustomerId = customer.Id'                      EmployeeId = 1'                      OrderDate = DateTime.UtcNow'                      Freight = 10.50m'                      ShippingAddress = new Address { Line1 = "3 Street"' Country = "US"' State = "NY"' City = "New York"' ZipCode = "12121" }'                  };
Magic Number,ServiceStack.OrmLite.FirebirdTests,CustomerOrdersUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\CustomerOrdersUseCase.cs,Run,The following statement contains a magic number: var orderDetails = new[] {                      new OrderDetail                      {                          OrderId = order.Id'                          ProductId = product1.Id'                          Quantity = 2'                          UnitPrice = product1.UnitPrice'                      }'                      new OrderDetail                      {                          OrderId = order.Id'                          ProductId = product2.Id'                          Quantity = 2'                          UnitPrice = product2.UnitPrice'                          Discount = .15m'                      }                  };
Magic Number,ServiceStack.OrmLite.FirebirdTests,CustomerOrdersUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\CustomerOrdersUseCase.cs,Run,The following statement contains a magic number: var orderDetails = new[] {                      new OrderDetail                      {                          OrderId = order.Id'                          ProductId = product1.Id'                          Quantity = 2'                          UnitPrice = product1.UnitPrice'                      }'                      new OrderDetail                      {                          OrderId = order.Id'                          ProductId = product2.Id'                          Quantity = 2'                          UnitPrice = product2.UnitPrice'                          Discount = .15m'                      }                  };
Magic Number,ServiceStack.OrmLite.FirebirdTests,CustomerOrdersUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\CustomerOrdersUseCase.cs,Run,The following statement contains a magic number: var orderDetails = new[] {                      new OrderDetail                      {                          OrderId = order.Id'                          ProductId = product1.Id'                          Quantity = 2'                          UnitPrice = product1.UnitPrice'                      }'                      new OrderDetail                      {                          OrderId = order.Id'                          ProductId = product2.Id'                          Quantity = 2'                          UnitPrice = product2.UnitPrice'                          Discount = .15m'                      }                  };
Magic Number,ServiceStack.OrmLite.FirebirdTests,SchemaUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\SchemaUseCase.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: db.Insert(new User { Id = 2' Name = "B"' CreatedDate = DateTime.Now });
Magic Number,ServiceStack.OrmLite.FirebirdTests,SchemaUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\SchemaUseCase.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: db.Insert(new User { Id = 3' Name = "B"' CreatedDate = DateTime.Now });
Magic Number,ServiceStack.OrmLite.FirebirdTests,SchemaUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\SchemaUseCase.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: Assert.That(rowsB' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,SchemaUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\SchemaUseCase.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: Assert.That(rowIds' Is.EquivalentTo(new List<long> { 2' 3 }));
Magic Number,ServiceStack.OrmLite.FirebirdTests,SchemaUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\SchemaUseCase.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: Assert.That(rowIds' Is.EquivalentTo(new List<long> { 2' 3 }));
Magic Number,ServiceStack.OrmLite.FirebirdTests,SimpleUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\SimpleUseCase.cs,Simple_CRUD_example,The following statement contains a magic number: db.Insert(new User { Id = 2' Name = "B"' CreatedDate = DateTime.Now });
Magic Number,ServiceStack.OrmLite.FirebirdTests,SimpleUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\SimpleUseCase.cs,Simple_CRUD_example,The following statement contains a magic number: db.Insert(new User { Id = 3' Name = "B"' CreatedDate = DateTime.Now });
Magic Number,ServiceStack.OrmLite.FirebirdTests,SimpleUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\SimpleUseCase.cs,Simple_CRUD_example,The following statement contains a magic number: Assert.That(rowsB' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.FirebirdTests,SimpleUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\SimpleUseCase.cs,Simple_CRUD_example,The following statement contains a magic number: Assert.That(rowIds' Is.EquivalentTo(new List<long> { 2' 3 }));
Magic Number,ServiceStack.OrmLite.FirebirdTests,SimpleUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\UseCase\SimpleUseCase.cs,Simple_CRUD_example,The following statement contains a magic number: Assert.That(rowIds' Is.EquivalentTo(new List<long> { 2' 3 }));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 4 + 3);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 4 + 3);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 10 - 3);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 10 - 3);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: var a = 4;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: var b = 3;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: var a = 10;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: var b = 3;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(4) + GetValue(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(4) + GetValue(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(10) - GetValue(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(10) - GetValue(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid" });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10' City = "Mexico"' LastActivity = DateTime.Today });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10' City = "Mexico"' LastActivity = DateTime.Today });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10' City = "Mexico"' LastActivity = DateTime.Today });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: int year = DateTime.Today.AddYears(-20).Year;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: var lastDay = new DateTime(year' 12' 31);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: var lastDay = new DateTime(year' 12' 31);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: int expected = 5;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 6;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 7;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: var earnings = 50;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: result = db.Select<Author>(rn => rn.Earnings <= 50);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Where().Where(rn => rn.Rate == 10 && rn.City == city);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: result = db.Select<Author>(rn => rn.Rate == 10 && rn.City == "Mexico");
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: result = db.Select<Author>(rn => rn.Rate == 10 && rn.City == a.City);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 4;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: db.InsertOnly(new Author() { Active = false' Rate = 0' Name = "Victor Grozny"' Birthday = DateTime.Today.AddYears(-18) }' rn => new { rn.Id' rn.Name' rn.Birthday' rn.Active' rn.Rate });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: db.InsertOnly(new Author() { Active = false' Rate = 0' Name = "Ivan Chorny"' Birthday = DateTime.Today.AddYears(-19) }' rn => new { rn.Id' rn.Name' rn.Birthday' rn.Active' rn.Rate });
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 14;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 5;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(5);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(0' 4);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(4' 4);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(4' 4);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(8' 4);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(8' 4);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 6;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn > 2 && q.IntColumn < 4);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn > 2 && q.IntColumn < 4);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_or_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_or_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_or_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 3 || q.IntColumn < 0);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: var a = 10;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: var b = 5;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var a = 10;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var b = 5;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 3 || a > b);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: Assert.AreEqual(11' actual.Count);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_invalid_conditional_or_valid_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_invalid_conditional_or_valid_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_valid_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_valid_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_int_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 3'                                     BoolColumn = true'                                     StringColumn = "4"                                 };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_int_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 3);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_int_expression,The following statement contains a magic number: var columnValue = 3;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_int_method_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == GetValue(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn != 3);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_variable_int_expression,The following statement contains a magic number: var columnValue = 3;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_variable_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_variable_int_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn != GetValue(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression2,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression2,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_bool_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_bool_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_bool_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_bool_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_null_espression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"'                  NullableCol = new TestType { StringColumn = "sometext" }              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_null_espression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_null_espression,The following statement contains a magic number: Assert.AreEqual(actual.Count' 10);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_null_espression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"'                  NullableCol = new TestType { StringColumn = "sometext" }              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_null_espression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ExpressionsTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ExpressionsTestBase.cs,EstablishContext,The following statement contains a magic number: var random = new Random((int)(DateTime.UtcNow.Ticks ^ (DateTime.UtcNow.Ticks >> 4)));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,ExpressionsTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\ExpressionsTestBase.cs,EstablishContext,The following statement contains a magic number: o = new TestType                          {                              BoolColumn = random.Next() % 2 == 0'                              IntColumn = intVal'                              StringColumn = Guid.NewGuid().ToString()                          };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 4*3);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 4*3);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 36/3);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 36/3);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 37%10);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 37%10);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: var a = 4;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: var b = 3;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: var a = 36;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: var b = 3;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: var a = 37;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: var b = 10;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(4)*GetValue(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(4)*GetValue(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(36)/GetValue(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(36)/GetValue(3));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(37)%GetValue(10));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(37)%GetValue(10));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,OrmLiteCountTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\OrmLiteCountTests.cs,CanDoCountWithInterfaceAndPredicate,The following statement contains a magic number: Expression<Func<CountTestTable' bool>> exp = q => q.Id == 2;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_property_expression,The following statement contains a magic number: var tmp = new TestClass<int>(12);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_property_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_field_expression,The following statement contains a magic number: var tmp = new TestClass<int>(12);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_field_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_method_expression,The following statement contains a magic number: var tmp = new TestClass<int>(12);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_property_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_field_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_method_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == TestClass<int>.StaticMethod(12));
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_new_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_new_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_new_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == new TestClass<int>(12).Property);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_field_expression,The following statement contains a magic number: var tmp = new TestStruct<int>(12);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_field_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_property_expression,The following statement contains a magic number: var tmp = new TestStruct<int>(12);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_property_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_method_expression,The following statement contains a magic number: var tmp = new TestStruct<int>(12);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_property_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_field_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_bool_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_bool_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_new_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_new_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_than_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_or_equal_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_or_equal_than_expression,The following statement contains a magic number: Assert.AreEqual(11' actual.Count);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\RelationalExpressionsTest.cs,Can_select_smaller_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\RelationalExpressionsTest.cs,Can_select_smaller_or_equal_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_contains,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = stringVal              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_contains,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = stringVal              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_double_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = stringVal              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_double_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_backtick_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = stringVal              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_backtick_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = prefix + "asdfasdfasdf"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = prefix + "'asdfasdfasdf"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_double_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = prefix + "\"asdfasdfasdf"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_double_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_backtick_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = prefix + "`asdfasdfasdf"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_backtick_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "asdfasdfasdf" + postfix              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "asdfasd'fasdf" + postfix              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_double_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "asdfasd\"fasdf" + postfix              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_double_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_backtick_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "asdfasd`fasdf" + postfix              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_backtick_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,TestType,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\TestType.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ BoolColumn.GetHashCode();
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,TestType,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\TestType.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (StringColumn != null ? StringColumn.GetHashCode() : 0);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_constant_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_constant_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_constant_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == +12);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_constant_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = -12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_constant_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_constant_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == -12);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression2,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression2,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_variable_expression,The following statement contains a magic number: var intVal = +12;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_variable_expression,The following statement contains a magic number: var intVal = -12;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = -12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_variable_expression,The following statement contains a magic number: object intVal = 12;
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.FirebirdTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_method_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == (int) GetValue((object) 12));
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: modelWithComplexType1.StringList.Add(string.Concat("val"' id' 2));
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: modelWithComplexType1.StringList.Add(string.Concat("val"' id' 3));
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: modelWithComplexType1.IntList.Add(id + 2);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: modelWithComplexType1.IntList.Add(id + 3);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: modelWithComplexType1.StringMap.Add(string.Concat("key"' id' 2)' string.Concat("val"' id' 2));
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: modelWithComplexType1.StringMap.Add(string.Concat("key"' id' 2)' string.Concat("val"' id' 2));
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: modelWithComplexType1.StringMap.Add(string.Concat("key"' id' 3)' string.Concat("val"' id' 3));
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: modelWithComplexType1.StringMap.Add(string.Concat("key"' id' 3)' string.Concat("val"' id' 3));
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: modelWithComplexType1.IntMap.Add(id + 1' id + 2);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: modelWithComplexType1.IntMap.Add(id + 3' id + 4);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: modelWithComplexType1.IntMap.Add(id + 3' id + 4);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: modelWithComplexType1.IntMap.Add(id + 5' id + 6);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: modelWithComplexType1.IntMap.Add(id + 5' id + 6);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: modelWithComplexType1.Child = new ModelWithComplexTypes(){  				Id= (long)(id*2)'  			};
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,Create,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.Bool = id % 2 == 0;
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,Create,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.Float = 1.11f + (float)id;
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,Create,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.Double = 1.11 + (double)id;
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,Create,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.LongId = (long)999 + id;
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,Create,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.Decimal = id + 0.5m;
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.Bool = id % 2 == 0;
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.DateTime = new DateTime(1979' id % 12 + 1' id % 28 + 1);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.DateTime = new DateTime(1979' id % 12 + 1' id % 28 + 1);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.DateTime = new DateTime(1979' id % 12 + 1' id % 28 + 1);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.Float = 1.11f + (float)id;
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.Double = 1.11 + (double)id;
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.Guid = new Guid((id%240+16).ToString("X")+ "461D9D-47DB-4778-B3FA-458379AE9BDC");
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.Guid = new Guid((id%240+16).ToString("X")+ "461D9D-47DB-4778-B3FA-458379AE9BDC");
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.LongId = (long)999 + id;
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfDifferentAndNullableType1.Decimal = id+ 0.5m ;
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentTypes.cs,Create,The following statement contains a magic number: return new ModelWithFieldsOfDifferentTypes  			{  				Id = id'   				Bool = id % 2 == 0'   				DateTime = DateTime.Now.AddDays((double)id)'   				Double = 1.11 + (double)id'   				Guid = Guid.NewGuid()'   				LongId = (long)(999 + id)'   				Name = "Name" + id  			};
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentTypes.cs,Create,The following statement contains a magic number: return new ModelWithFieldsOfDifferentTypes  			{  				Id = id'   				Bool = id % 2 == 0'   				DateTime = DateTime.Now.AddDays((double)id)'   				Double = 1.11 + (double)id'   				Guid = Guid.NewGuid()'   				LongId = (long)(999 + id)'   				Name = "Name" + id  			};
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentTypes.cs,Create,The following statement contains a magic number: return new ModelWithFieldsOfDifferentTypes  			{  				Id = id'   				Bool = id % 2 == 0'   				DateTime = DateTime.Now.AddDays((double)id)'   				Double = 1.11 + (double)id'   				Guid = Guid.NewGuid()'   				LongId = (long)(999 + id)'   				Name = "Name" + id  			};
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: return new ModelWithFieldsOfDifferentTypes  			{  				Id = id'   				Bool = id % 2 == 0'   				DateTime = new DateTime(1979' id % 12 + 1' id % 28 + 1)'   				Double = 1.11 + (double)id'   				Guid = new Guid((id % 240 + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'   				LongId = (long)(999 + id)'   				Name = "Name" + id  			};
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: return new ModelWithFieldsOfDifferentTypes  			{  				Id = id'   				Bool = id % 2 == 0'   				DateTime = new DateTime(1979' id % 12 + 1' id % 28 + 1)'   				Double = 1.11 + (double)id'   				Guid = new Guid((id % 240 + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'   				LongId = (long)(999 + id)'   				Name = "Name" + id  			};
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: return new ModelWithFieldsOfDifferentTypes  			{  				Id = id'   				Bool = id % 2 == 0'   				DateTime = new DateTime(1979' id % 12 + 1' id % 28 + 1)'   				Double = 1.11 + (double)id'   				Guid = new Guid((id % 240 + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'   				LongId = (long)(999 + id)'   				Name = "Name" + id  			};
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: return new ModelWithFieldsOfDifferentTypes  			{  				Id = id'   				Bool = id % 2 == 0'   				DateTime = new DateTime(1979' id % 12 + 1' id % 28 + 1)'   				Double = 1.11 + (double)id'   				Guid = new Guid((id % 240 + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'   				LongId = (long)(999 + id)'   				Name = "Name" + id  			};
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: return new ModelWithFieldsOfDifferentTypes  			{  				Id = id'   				Bool = id % 2 == 0'   				DateTime = new DateTime(1979' id % 12 + 1' id % 28 + 1)'   				Double = 1.11 + (double)id'   				Guid = new Guid((id % 240 + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'   				LongId = (long)(999 + id)'   				Name = "Name" + id  			};
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: return new ModelWithFieldsOfDifferentTypes  			{  				Id = id'   				Bool = id % 2 == 0'   				DateTime = new DateTime(1979' id % 12 + 1' id % 28 + 1)'   				Double = 1.11 + (double)id'   				Guid = new Guid((id % 240 + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'   				LongId = (long)(999 + id)'   				Name = "Name" + id  			};
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: return new ModelWithFieldsOfDifferentTypes  			{  				Id = id'   				Bool = id % 2 == 0'   				DateTime = new DateTime(1979' id % 12 + 1' id % 28 + 1)'   				Double = 1.11 + (double)id'   				Guid = new Guid((id % 240 + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'   				LongId = (long)(999 + id)'   				Name = "Name" + id  			};
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: return new ModelWithFieldsOfDifferentTypes  			{  				Id = id'   				Bool = id % 2 == 0'   				DateTime = new DateTime(1979' id % 12 + 1' id % 28 + 1)'   				Double = 1.11 + (double)id'   				Guid = new Guid((id % 240 + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'   				LongId = (long)(999 + id)'   				Name = "Name" + id  			};
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,Create,The following statement contains a magic number: modelWithFieldsOfNullableType1.NBool = new bool?(id % 2 == 0);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,Create,The following statement contains a magic number: modelWithFieldsOfNullableType1.NFloat = new float?(1.11f + (float)id);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,Create,The following statement contains a magic number: modelWithFieldsOfNullableType1.NDouble = new double?(1.11 + (double)id);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,Create,The following statement contains a magic number: modelWithFieldsOfNullableType1.NLongId = new long?((long)999 + id);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,Create,The following statement contains a magic number: modelWithFieldsOfNullableType1.NDecimal = new decimal?(id+0.5m);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfNullableType1.NBool = new bool?(id % 2 == 0);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfNullableType1.NDateTime = new DateTime?(new DateTime(1979' id % 12 + 1' id % 28 + 1));
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfNullableType1.NDateTime = new DateTime?(new DateTime(1979' id % 12 + 1' id % 28 + 1));
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfNullableType1.NDateTime = new DateTime?(new DateTime(1979' id % 12 + 1' id % 28 + 1));
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfNullableType1.NFloat = new float?(1.11f + (float)id);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfNullableType1.NDouble = new double?(1.11 + (double)id);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfNullableType1.NGuid = new Guid?(new Guid( (id%240+16).ToString("X") + "7DA519-73B6-4525-84BA-B57673B2360D"));
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfNullableType1.NGuid = new Guid?(new Guid( (id%240+16).ToString("X") + "7DA519-73B6-4525-84BA-B57673B2360D"));
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfNullableType1.NLongId = new long?((long)999 + id);
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: modelWithFieldsOfNullableType1.NDecimal = new decimal?(id + 0.5m );
Magic Number,ServiceStack.Common.Tests.Models,ModelWithIdAndName,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\ModelWithIdAndName.cs,GetHashCode,The following statement contains a magic number: return this.Id * 397 ^  ( (this.Name != null) ? this.Name.GetHashCode() : 0) ;
Magic Number,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\Movie.cs,GetHashCode,The following statement contains a magic number: result = (result * 397 ^ ((this.Title != null) ? this.Title.GetHashCode() : 0));
Magic Number,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\Movie.cs,GetHashCode,The following statement contains a magic number: result = (result * 397 ^ this.Rating.GetHashCode());
Magic Number,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\Movie.cs,GetHashCode,The following statement contains a magic number: result = (result * 397 ^ ((this.Director != null) ? this.Director.GetHashCode() : 0));
Magic Number,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\Movie.cs,GetHashCode,The following statement contains a magic number: result = (result * 397 ^ this.ReleaseDate.GetHashCode());
Magic Number,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\Movie.cs,GetHashCode,The following statement contains a magic number: result = (result * 397 ^ ((this.TagLine != null) ? this.TagLine.GetHashCode() : 0));
Magic Number,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\Movie.cs,GetHashCode,The following statement contains a magic number: return result * 397 ^ ((this.Genres != null) ? this.Genres.GetHashCode() : 0);
Magic Number,ServiceStack.Common.Tests.Models,SampleOrderLine,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\SampleOrderLine.cs,Create,The following statement contains a magic number: sampleOrderLine.CashMixValueIncVat = new decimal(1528914989' -1561970359' 372399876' false' 28);
Magic Number,ServiceStack.Common.Tests.Models,SampleOrderLine,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\SampleOrderLine.cs,Create,The following statement contains a magic number: sampleOrderLine.CashMixValueIncVat = new decimal(1528914989' -1561970359' 372399876' false' 28);
Magic Number,ServiceStack.Common.Tests.Models,SampleOrderLine,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\SampleOrderLine.cs,Create,The following statement contains a magic number: sampleOrderLine.CashMixValueIncVat = new decimal(1528914989' -1561970359' 372399876' false' 28);
Magic Number,ServiceStack.Common.Tests.Models,SampleOrderLine,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\SampleOrderLine.cs,Create,The following statement contains a magic number: sampleOrderLine.CashMixValueIncVat = new decimal(1528914989' -1561970359' 372399876' false' 28);
Magic Number,ServiceStack.Common.Tests.Models,SampleOrderLine,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\SampleOrderLine.cs,Create,The following statement contains a magic number: sampleOrderLine.TransactionValueExVat = new decimal(79' 0' 0' false' 2);
Magic Number,ServiceStack.Common.Tests.Models,SampleOrderLine,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.FirebirdTests\ServiceStack.Common.Tests\ServiceStack.Common.Tests.Models\SampleOrderLine.cs,Create,The following statement contains a magic number: sampleOrderLine.TransactionValueExVat = new decimal(79' 0' 0' false' 2);
