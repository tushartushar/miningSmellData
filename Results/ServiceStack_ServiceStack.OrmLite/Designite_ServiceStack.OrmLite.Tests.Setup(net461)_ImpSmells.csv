Implementation smell,Namespace,Class,File,Method,Description
Empty Catch Block,ServiceStack.OrmLite.Tests,TestConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.Tests.Setup\TestConfig.cs,InitDbFactory,The method has an empty catch block.
Empty Catch Block,ServiceStack.OrmLite.Tests,TestConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.Tests.Setup\TestConfig.cs,InitDbScripts,The method has an empty catch block.
Empty Catch Block,ServiceStack.OrmLite.Tests,TestConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.Tests.Setup\TestConfig.cs,InitDbScripts,The method has an empty catch block.
Missing Default,ServiceStack.OrmLite.Tests,DialectContext,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.Tests.Setup\TestConfig.cs,ToString,The following switch statement is missing a default case: switch (Dialect)              {                  case Dialect.Sqlite:                      return SqliteDb.VersionString(Version);                   case Dialect.SqlServer:                  case Dialect.SqlServer2008:                  case Dialect.SqlServer2012:                  case Dialect.SqlServer2014:                  case Dialect.SqlServer2016:                  case Dialect.SqlServer2017:                      return SqlServerDb.VersionString(Dialect' Version);                   case Dialect.MySql:                      return MySqlDb.VersionString(Version);                   case Dialect.PostgreSql:                      return PostgreSqlDb.VersionString(Version);                   case Dialect.Oracle:                      return OracleDb.VersionString(Version);                   case Dialect.Firebird:                  case Dialect.Firebird4:                      return FirebirdDb.VersionString(Version);                   case Dialect.VistaDb:                      return VistaDb.VersionString(Version);               }
