Implementation smell,Namespace,Class,File,Method,Description
Long Method,ServiceStack.OrmLite.SqlServerTests,RowVersionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\RowVersionTests.cs,Read_and_write_to_tables_with_rowversions,The method has 196 lines of code.
Long Method,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The method has 280 lines of code.
Long Identifier,ServiceStack.OrmLite.SqlServerTests,Datetime2Tests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Datetime2Tests.cs,datetime_tests__check_default_behaviour,The length of the parameter test_object_ValidForNormalDatetime is 34.
Long Identifier,ServiceStack.OrmLite.SqlServerTests,Datetime2Test,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Datetime2Tests.cs,,The length of the parameter regular_datetime_field_cant_hold_this_exact_moment is 50.
Long Identifier,ServiceStack.OrmLite.SqlServerTests,RowVersionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\RowVersionTests.cs,Read_and_write_to_tables_with_rowversions,The length of the parameter thisDapperQryWithRowVersionAlsoWorks is 36.
Long Statement,ServiceStack.OrmLite.SqlServerTests.Converters,SqlGeographyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\SqlGeographyTests.cs,Can_convert_to_and_from_SqlGeography_and_string_with_strong_typed_insert,The length of the statement  "            Db.Insert(new GeographyTable() { Location = location' StringLocation = stringValue' NullLocation = SqlGeography.Null }); " is 120.
Long Statement,ServiceStack.OrmLite.SqlServerTests,Datetime2Test,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Datetime2Tests.cs,get_test_object_ValidForDatetime2,The length of the statement  "{ return new Datetime2Test { SomeDateTime = new DateTime(1' 1' 1)' ToVerifyPrecision = regular_datetime_field_cant_hold_this_exact_moment }; }" is 142.
Long Statement,ServiceStack.OrmLite.SqlServerTests,Datetime2Test,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Datetime2Tests.cs,get_test_object_ValidForNormalDatetime,The length of the statement  "{ return new Datetime2Test { SomeDateTime = new DateTime(2001' 1' 1)' ToVerifyPrecision = regular_datetime_field_cant_hold_this_exact_moment }; }" is 145.
Long Statement,ServiceStack.OrmLite.SqlServerTests,RowVersionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\RowVersionTests.cs,Read_and_write_to_tables_with_rowversions,The length of the statement  "				// Show that we can drop and create tables with rowversions of both .NET types and both get created as ROWVERSION in MSSQL " is 122.
Long Statement,ServiceStack.OrmLite.SqlServerTests,RowVersionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\RowVersionTests.cs,Read_and_write_to_tables_with_rowversions,The length of the statement  "					// As a further example' using Dapper but without rowversion column WILL work (but rowversion will NOT be set of course) " is 120.
Long Statement,ServiceStack.OrmLite.SqlServerTests,RowVersionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\RowVersionTests.cs,Read_and_write_to_tables_with_rowversions,The length of the statement  "					// As a further example' using Dapper but without rowversion column WILL work' BUT the rowversion WONT BE SET (of course) " is 121.
Long Statement,ServiceStack.OrmLite.SqlServerTests,SchemaTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SchemaTests.cs,Get_actual_column_definition,The length of the statement  "            then '(' + convert(varchar(10)' isnull(numeric_precision' 18)) + ''' + convert(varchar(10)' isnull(numeric_scale' 0)) + ')' " is 123.
Long Statement,ServiceStack.OrmLite.SqlServerTests,UnicodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\UnicodeTests.cs,can_insert_and_retrieve_unicode_values,The length of the statement  "                "ÁRVÍZTŰRŐ TÜKÖRFÚRÓGÉP"' //these are the Hungarian "special" characters' they work fine out of the box. At least on Hungarian_Technical_CI_AS " is 142.
Long Statement,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The length of the statement  "                db.InsertOnly(new Author() { Active = false' Rate = 0' Name = "Victor Grozny"' Birthday = DateTime.Today.AddYears(-18) }' rn => new { rn.Id' rn.Name' rn.Birthday' rn.Active' rn.Rate }); " is 185.
Long Statement,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The length of the statement  "                db.InsertOnly(new Author() { Active = false' Rate = 0' Name = "Ivan Chorny"' Birthday = DateTime.Today.AddYears(-19) }' rn => new { rn.Id' rn.Name' rn.Birthday' rn.Active' rn.Rate }); " is 183.
Long Statement,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_coalesce_on_the_right_expression,The length of the statement  "            Assert.AreEqual(actual.Count' 1);                  // this will fail for now' because PARAMS: @0=othertext' @1={Text:"COALESCE(""NullableCol""'@0)"} " is 148.
Long Statement,ReturnAttributeTests,ReturnAttributeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\ReturnAttributeTests.cs,Does_generate_Sql_with_Sequence,The length of the statement  "                Assert.That(sql' Is.EqualTo("INSERT INTO \"UserSequence\" (\"Id\"'\"Name\"'\"UserName\"'\"Email\") OUTPUT INSERTED.\"Id\" VALUES (NEXT VALUE FOR \"Gen_UserSequence_Id\"'@Name'@UserName'@Email)")' "normal Insert"); " is 213.
Long Statement,ServiceStack.OrmLite.SqlServerTests.TableOptions,SqlServer2014MemoryOptimizedAttributeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\TableOptionAttributes\MemoryOptimizedAttributeTests.cs,Setup,The length of the statement  "            Db.ExecuteSql($"ALTER DATABASE {dbName} ADD FILE (name='imoltp_mod1'' filename='.\\imoltp_mod1') TO FILEGROUP imoltp_mod"); " is 123.
Long Statement,ServiceStack.OrmLite.SqlServerTests.UseCase,ComplexJoinWithLimitAndNoOrderByTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\UseCase\ComplexJoinWithLimitAndNoOrderByTests.cs,ComplexJoin_with_JoinSqlBuilder_and_limit_and_no_orderby,The length of the statement  "                //    //.OrderBy<Foo>(f => f.Id)  // Test fails without an explicity OrderBy because auto-generated OrderBy uses join table (FooBarJoin) name " is 141.
Empty Catch Block,ServiceStack.OrmLite.SqlServerTests,SchemaTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SchemaTests.cs,Can_drop_and_add_column,The method has an empty catch block.
Empty Catch Block,ServiceStack.OrmLite.SqlServerTests,SchemaTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SchemaTests.cs,Can_drop_and_add_column,The method has an empty catch block.
Empty Catch Block,ServiceStack.OrmLite.SqlServerTests,SchemaTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SchemaTests.cs,Can_drop_and_add_column_with_Schema,The method has an empty catch block.
Empty Catch Block,ServiceStack.OrmLite.SqlServerTests,SchemaTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SchemaTests.cs,Can_drop_and_add_column_with_Schema,The method has an empty catch block.
Empty Catch Block,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The method has an empty catch block.
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,InheritanceTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\InheritanceTest.cs,Can_limit_on_inherited_Type,The following statement contains a magic number: InsertData(100);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,InheritanceTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\InheritanceTest.cs,Can_limit_on_inherited_Type,The following statement contains a magic number: Assert.IsTrue(data.Count == 100);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,InheritanceTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\InheritanceTest.cs,RandomPosition,The following statement contains a magic number: double lat = Math.Round(rand.NextDouble() * 160 - 80' 6);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,InheritanceTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\InheritanceTest.cs,RandomPosition,The following statement contains a magic number: double lat = Math.Round(rand.NextDouble() * 160 - 80' 6);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,InheritanceTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\InheritanceTest.cs,RandomPosition,The following statement contains a magic number: double lat = Math.Round(rand.NextDouble() * 160 - 80' 6);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,InheritanceTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\InheritanceTest.cs,RandomPosition,The following statement contains a magic number: double lon = Math.Round(rand.NextDouble() * 360 - 180' 6);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,InheritanceTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\InheritanceTest.cs,RandomPosition,The following statement contains a magic number: double lon = Math.Round(rand.NextDouble() * 360 - 180' 6);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,InheritanceTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\InheritanceTest.cs,RandomPosition,The following statement contains a magic number: double lon = Math.Round(rand.NextDouble() * 360 - 180' 6);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,InheritanceTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\InheritanceTest.cs,RandomPosition,The following statement contains a magic number: var result = SqlGeography.Point(lat' lon' 4326).MakeValid();
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,SqlGeographyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\SqlGeographyTests.cs,Can_insert_and_retrieve_SqlGeography,The following statement contains a magic number: var geo = SqlGeography.Point(40.6898329' -74.0452177' 4326);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,SqlGeographyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\SqlGeographyTests.cs,Can_insert_and_retrieve_SqlGeography,The following statement contains a magic number: var geo = SqlGeography.Point(40.6898329' -74.0452177' 4326);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,SqlGeographyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\SqlGeographyTests.cs,Can_insert_and_retrieve_SqlGeography,The following statement contains a magic number: var geo = SqlGeography.Point(40.6898329' -74.0452177' 4326);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,SqlGeographyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\SqlGeographyTests.cs,Can_convert_to_and_from_SqlGeography_and_string_with_strong_typed_insert,The following statement contains a magic number: var location = SqlGeography.STGeomFromText(new System.Data.SqlTypes.SqlChars(stringValue)' 4326);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,SqlGeographyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\SqlGeographyTests.cs,Can_insert_and_update_SqlGeography,The following statement contains a magic number: var geo = SqlGeography.STGeomFromText(new System.Data.SqlTypes.SqlChars(wkt)' 4326);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Converters,SqlGeometryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Converters\SqlGeometryTests.cs,Can_insert_and_retrieve_SqlGeometry,The following statement contains a magic number: Assert.AreEqual(2' (int) result.STNumPoints());
Magic Number,ServiceStack.OrmLite.SqlServerTests,CustomSqlTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\CustomSqlTests.cs,Can_execute_stored_procedure_using_SqlList_with_out_params,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.OrmLite.SqlServerTests,CustomSqlTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\CustomSqlTests.cs,Can_execute_stored_procedure_using_SqlProc_with_out_params,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.OrmLite.SqlServerTests,Datetime2Test,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Datetime2Tests.cs,get_test_object_ValidForNormalDatetime,The following statement contains a magic number: return new Datetime2Test { SomeDateTime = new DateTime(2001' 1' 1)' ToVerifyPrecision = regular_datetime_field_cant_hold_this_exact_moment };
Magic Number,ServiceStack.OrmLite.SqlServerTests,DateTimeOffsetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\DateTimeOffsetTests.cs,EnsureDateTimeOffsetSaves,The following statement contains a magic number: var dateTime = new DateTimeOffset(2012' 1' 30' 1' 1' 1' new TimeSpan(5' 0' 0));
Magic Number,ServiceStack.OrmLite.SqlServerTests,DateTimeOffsetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\DateTimeOffsetTests.cs,EnsureDateTimeOffsetSaves,The following statement contains a magic number: var dateTime = new DateTimeOffset(2012' 1' 30' 1' 1' 1' new TimeSpan(5' 0' 0));
Magic Number,ServiceStack.OrmLite.SqlServerTests,DateTimeOffsetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\DateTimeOffsetTests.cs,EnsureDateTimeOffsetSaves,The following statement contains a magic number: var dateTime = new DateTimeOffset(2012' 1' 30' 1' 1' 1' new TimeSpan(5' 0' 0));
Magic Number,ServiceStack.OrmLite.SqlServerTests,DateTimeOffsetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\DateTimeOffsetTests.cs,EnsureNullableDateTimeOffsetSaves,The following statement contains a magic number: DateTimeOffset? dateTime = new DateTimeOffset(2012' 1' 30' 1' 1' 1' new TimeSpan(5' 0' 0));
Magic Number,ServiceStack.OrmLite.SqlServerTests,DateTimeOffsetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\DateTimeOffsetTests.cs,EnsureNullableDateTimeOffsetSaves,The following statement contains a magic number: DateTimeOffset? dateTime = new DateTimeOffset(2012' 1' 30' 1' 1' 1' new TimeSpan(5' 0' 0));
Magic Number,ServiceStack.OrmLite.SqlServerTests,DateTimeOffsetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\DateTimeOffsetTests.cs,EnsureNullableDateTimeOffsetSaves,The following statement contains a magic number: DateTimeOffset? dateTime = new DateTimeOffset(2012' 1' 30' 1' 1' 1' new TimeSpan(5' 0' 0));
Magic Number,ServiceStack.OrmLite.SqlServerTests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_expression,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 2' EnumValue = SomeEnum.Value1 });
Magic Number,ServiceStack.OrmLite.SqlServerTests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_expression,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 3' EnumValue = SomeEnum.Value2 });
Magic Number,ServiceStack.OrmLite.SqlServerTests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_expression,The following statement contains a magic number: Assert.AreEqual(2' target.Count());
Magic Number,ServiceStack.OrmLite.SqlServerTests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_string,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 2' EnumValue = SomeEnum.Value1 });
Magic Number,ServiceStack.OrmLite.SqlServerTests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_string,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 3' EnumValue = SomeEnum.Value2 });
Magic Number,ServiceStack.OrmLite.SqlServerTests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_string,The following statement contains a magic number: Assert.AreEqual(2' target.Count());
Magic Number,ServiceStack.OrmLite.SqlServerTests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\EnumTests.cs,CanQueryByEnumValue_using_where_with_AnonType,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 2' EnumValue = SomeEnum.Value1 });
Magic Number,ServiceStack.OrmLite.SqlServerTests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\EnumTests.cs,CanQueryByEnumValue_using_where_with_AnonType,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 3' EnumValue = SomeEnum.Value2 });
Magic Number,ServiceStack.OrmLite.SqlServerTests,EnumTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\EnumTests.cs,CanQueryByEnumValue_using_where_with_AnonType,The following statement contains a magic number: Assert.AreEqual(2' target.Count());
Magic Number,ServiceStack.OrmLite.SqlServerTests,InsertParam_GetLastInsertId,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\InsertParam_GetLastInsertId.cs,Can_create_table_starting_from_specific_seed,The following statement contains a magic number: Assert.That(db.Select<SeedTest>()[0].Id' Is.EqualTo(1000));
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,Skip_Take_works_with_injected_Visitor,The following statement contains a magic number: var result = db.Select(db.From<TestEntity>().Limit(10' 100));
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,Skip_Take_works_with_injected_Visitor,The following statement contains a magic number: var result = db.Select(db.From<TestEntity>().Limit(10' 100));
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,Skip_Take_works_with_injected_Visitor,The following statement contains a magic number: Assert.AreEqual(100' result.Count);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,Skip_Take_works_with_injected_Visitor,The following statement contains a magic number: Assert.Less(10' result[0].Id);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,Skip_Take_works_with_injected_Visitor,The following statement contains a magic number: Assert.Greater(111' result[99].Id);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,Skip_Take_works_with_injected_Visitor,The following statement contains a magic number: Assert.Greater(111' result[99].Id);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip,The following statement contains a magic number: ev.Limit(10' 100);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip,The following statement contains a magic number: ev.Limit(10' 100);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip,The following statement contains a magic number: Assert.AreEqual(100' result.Count);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip,The following statement contains a magic number: Assert.Less(10' result[0].Id);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip,The following statement contains a magic number: Assert.Greater(111' result[99].Id);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip,The following statement contains a magic number: Assert.Greater(111' result[99].Id);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows,The following statement contains a magic number: ev.Limit(100);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows,The following statement contains a magic number: Assert.AreEqual(100' result.Count);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows,The following statement contains a magic number: Assert.Greater(101' result[99].Id);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows,The following statement contains a magic number: Assert.Greater(101' result[99].Id);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip_and_orderby,The following statement contains a magic number: ev.Limit(10' 100);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip_and_orderby,The following statement contains a magic number: ev.Limit(10' 100);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip_and_orderby,The following statement contains a magic number: Assert.AreEqual(100' result.Count);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip_and_orderby,The following statement contains a magic number: Assert.LessOrEqual(result[10].Baz' result[11].Baz);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip_and_orderby,The following statement contains a magic number: Assert.LessOrEqual(result[10].Baz' result[11].Baz);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_ev_still_works_without_limit_and_orderby,The following statement contains a magic number: ev.Where(e => e.Baz < 0.1m);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_and_works_with_nullable_parameter,The following statement contains a magic number: var id = db.Insert(new TestEntity                  {                      Foo = this.RandomString(16)'                      Bar = this.RandomString(16)'                      Baz = this.RandomDecimal()                  }' selectIdentity: true);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_and_works_with_nullable_parameter,The following statement contains a magic number: var id = db.Insert(new TestEntity                  {                      Foo = this.RandomString(16)'                      Bar = this.RandomString(16)'                      Baz = this.RandomDecimal()                  }' selectIdentity: true);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip_if_pk_columnname_has_space,The following statement contains a magic number: ev.Limit(10' 100);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip_if_pk_columnname_has_space,The following statement contains a magic number: ev.Limit(10' 100);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip_if_pk_columnname_has_space,The following statement contains a magic number: Assert.AreEqual(100' result.Count);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip_and_orderby_if_pk_columnname_has_space,The following statement contains a magic number: ev.Limit(10' 100);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip_and_orderby_if_pk_columnname_has_space,The following statement contains a magic number: ev.Limit(10' 100);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip_and_orderby_if_pk_columnname_has_space,The following statement contains a magic number: Assert.AreEqual(100' result.Count);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip_and_orderby_if_pk_columnname_has_space,The following statement contains a magic number: Assert.LessOrEqual(result[10].Baz' result[11].Baz);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,test_if_limit_works_with_rows_and_skip_and_orderby_if_pk_columnname_has_space,The following statement contains a magic number: Assert.LessOrEqual(result[10].Baz' result[11].Baz);
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,Can_query_table_with_special_alias,The following statement contains a magic number: db.Insert(new TestEntityWithAliases { Id = 1' Foo = "Foo"' Bar = "Bar"' Baz = 2 });
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,Can_OrderbyDesc_using_ComplexFunc,The following statement contains a magic number: db.Insert(new TestEntityWithAliases {Id = 1' Foo = "Foo"' Bar = "Bar"' Baz = 2});
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,Can_OrderBy_using_isnull,The following statement contains a magic number: db.Insert(new TestEntityWithAliases {Id = 1' Foo = "Foo"' Bar = "Bar"' Baz = 2});
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,FillTestEntityTableWithTestData,The following statement contains a magic number: db.Insert(new TestEntity()                  {                      Foo = RandomString(16)'                      Bar = RandomString(16)'                      Baz = RandomDecimal(i)                  });
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,FillTestEntityTableWithTestData,The following statement contains a magic number: db.Insert(new TestEntity()                  {                      Foo = RandomString(16)'                      Bar = RandomString(16)'                      Baz = RandomDecimal(i)                  });
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,FillTestEntityTableWithTestData,The following statement contains a magic number: i < 1000
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,FillAliasedTestEntityTableWithTestData,The following statement contains a magic number: db.Insert(new TestEntityWithAliases()                  {                      Foo = RandomString(16)'                      Bar = RandomString(16)'                      Baz = RandomDecimal(i)                  });
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,FillAliasedTestEntityTableWithTestData,The following statement contains a magic number: db.Insert(new TestEntityWithAliases()                  {                      Foo = RandomString(16)'                      Bar = RandomString(16)'                      Baz = RandomDecimal(i)                  });
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,FillAliasedTestEntityTableWithTestData,The following statement contains a magic number: i < 1000
Magic Number,ServiceStack.OrmLite.SqlServerTests,SqlServerExpressionVisitorQueryTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerExpressionVisitorQueryTest.cs,RandomString,The following statement contains a magic number: buffer.Append(Convert.ToChar(((byte)rnd.Next(254)))                                       .ToString(CultureInfo.InvariantCulture));
Magic Number,ServiceStack.OrmLite.SqlServerTests,TypeWithByteArrayFieldTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\TypeWithByteArrayFieldTests.cs,CanInsertAndSelectByteArray,The following statement contains a magic number: var orig = new TypeWithByteArrayField { Id = 1' Content = new byte[] { 0' 17' 0' 17' 0' 7 } };
Magic Number,ServiceStack.OrmLite.SqlServerTests,TypeWithByteArrayFieldTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\TypeWithByteArrayFieldTests.cs,CanInsertAndSelectByteArray,The following statement contains a magic number: var orig = new TypeWithByteArrayField { Id = 1' Content = new byte[] { 0' 17' 0' 17' 0' 7 } };
Magic Number,ServiceStack.OrmLite.SqlServerTests,TypeWithByteArrayFieldTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\TypeWithByteArrayFieldTests.cs,CanInsertAndSelectByteArray,The following statement contains a magic number: var orig = new TypeWithByteArrayField { Id = 1' Content = new byte[] { 0' 17' 0' 17' 0' 7 } };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == 4 + 3);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == 4 + 3);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == 10 - 3);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == 10 - 3);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: var a = 4;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: var b = 3;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: var a = 10;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: var b = 3;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == GetValue(4) + GetValue(3));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == GetValue(4) + GetValue(3));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == GetValue(10) - GetValue(3));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AdditiveExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == GetValue(10) - GetValue(3));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid" });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10' City = "Mexico"' LastActivity = DateTime.Today });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10' City = "Mexico"' LastActivity = DateTime.Today });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10' City = "Mexico"' LastActivity = DateTime.Today });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: int year = DateTime.Today.AddYears(-20).Year;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: var lastDay = new DateTime(year' 12' 31);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: var lastDay = new DateTime(year' 12' 31);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: int expected = 5;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 6;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 7;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: var earnings = 50;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: result = db.Select<Author>(rn => rn.Earnings <= 50);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Where().Where(rn => rn.Rate == 10 && rn.City == city);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: result = db.Select<Author>(rn => rn.Rate == 10 && rn.City == "Mexico");
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: result = db.Select<Author>(rn => rn.Rate == 10 && rn.City == a.City);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 4;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: db.InsertOnly(new Author() { Active = false' Rate = 0' Name = "Victor Grozny"' Birthday = DateTime.Today.AddYears(-18) }' rn => new { rn.Id' rn.Name' rn.Birthday' rn.Active' rn.Rate });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: db.InsertOnly(new Author() { Active = false' Rate = 0' Name = "Ivan Chorny"' Birthday = DateTime.Today.AddYears(-19) }' rn => new { rn.Id' rn.Name' rn.Birthday' rn.Active' rn.Rate });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 14;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 5;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(5);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(0' 4);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(4' 4);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(4' 4);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(8' 4);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(8' 4);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 6;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(0' 4);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,AuthorUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 4;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn > 2 && q.IntColumn < 4);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn > 2 && q.IntColumn < 4);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_or_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_or_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_or_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == 3 || q.IntColumn < 0);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: var a = 10;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: var b = 5;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var a = 10;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var b = 5;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == 3 || a > b);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: Assert.AreEqual(11' actual.Count);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_invalid_conditional_or_valid_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_invalid_conditional_or_valid_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_valid_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ConditionalExpressionTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_valid_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_int_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 3'                                     BoolColumn = true'                                     StringColumn = "4"                                 };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_int_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == 3);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_int_expression,The following statement contains a magic number: var columnValue = 3;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_int_method_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == GetValue(3));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn != 3);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_variable_int_expression,The following statement contains a magic number: var columnValue = 3;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_variable_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_variable_int_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn != GetValue(3));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression2,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression2,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_bool_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_bool_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_bool_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 3'                  BoolColumn = true'                  StringColumn = "4"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_bool_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_null_espression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"'                  NullableCol = new TestType { StringColumn = "sometext" }              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_null_espression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_null_espression,The following statement contains a magic number: Assert.AreEqual(actual.Count' 10);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_null_espression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"'                  NullableCol = new TestType { StringColumn = "sometext" }              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_null_espression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_coalesce_on_the_left_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"'                  NullableCol = "sometext"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_coalesce_on_the_left_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_coalesce_on_the_right_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"'                  NullableCol = "sometext"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,EqualityExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_coalesce_on_the_right_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ExpressionsTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ExpressionsTestBase.cs,EstablishContext,The following statement contains a magic number: var random = new Random((int)(DateTime.UtcNow.Ticks ^ (DateTime.UtcNow.Ticks >> 4)));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,ExpressionsTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\ExpressionsTestBase.cs,EstablishContext,The following statement contains a magic number: o = new TestType                                  {                                      BoolColumn = random.Next()%2 == 0'                                      IntColumn = intVal'                                      StringColumn = Guid.NewGuid().ToString()                                  };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,JsonExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\JsonExpressionsTest.cs,TestFixtureSetUp,The following statement contains a magic number: Db.Insert(new TestType { Id = 2' StringColumn = Addr.ToJson() });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,JsonExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\JsonExpressionsTest.cs,Can_test_if_string_field_contains_json,The following statement contains a magic number: j = Db.From<TestType>()  				.Select(x => Sql.IsJson(x.StringColumn))  				.Where(x => x.Id == 2);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,JsonExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\JsonExpressionsTest.cs,Can_select_using_a_json_scalar_filter,The following statement contains a magic number: var actual = Db.Select<TestType>(q =>   					Sql.JsonValue(q.StringColumn' "$.State") == "NV"   					&& q.Id == 2   				);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,JsonExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\JsonExpressionsTest.cs,Can_select_using_a_json_scalar_filter,The following statement contains a magic number: actual = Db.Select<TestType>(q =>   					Sql.JsonValue(q.StringColumn' "$.State") == "FL"   					&& q.Id == 2   				);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,JsonExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\JsonExpressionsTest.cs,Can_select_a_json_scalar_value,The following statement contains a magic number: var state = Db.Scalar<string>(  				Db.From<TestType>()  					.Where(q => q.Id == 2)  					.Select(q =>  						Sql.JsonValue(q.StringColumn' "$.State")  					)  			);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,JsonExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\JsonExpressionsTest.cs,Can_select_a_json_object_value,The following statement contains a magic number: var address = Db.Scalar<Address>(  					Db.From<TestType>()  					.Where(q => q.Id == 2)  					.Select(q => q.StringColumn)  				);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,JsonExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\JsonExpressionsTest.cs,Can_insert_an_object_directly_to_json,The following statement contains a magic number: Db.ExecuteSql(sql' new { Id = 3' Address = Addr });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,JsonExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\JsonExpressionsTest.cs,Can_insert_an_object_directly_to_json,The following statement contains a magic number: var address = Db.Single<Address>(  				Db.From<TestType>()  					.Where(q => q.Id == 3)  					.Select(q => q.StringColumn)  				);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,LogicalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == 4 * 3);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == 4 * 3);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == 36 / 3);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == 36 / 3);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == 37 % 10);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == 37 % 10);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: var a = 4;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: var b = 3;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: var a = 36;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: var b = 3;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: var a = 37;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: var b = 10;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == GetValue(4) * GetValue(3));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == GetValue(4) * GetValue(3));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: var expected = new TestType()                                 {                                     IntColumn = 12'                                     BoolColumn = true'                                     StringColumn = "test"                                 };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == GetValue(36) / GetValue(3));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == GetValue(36) / GetValue(3));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == GetValue(37) % GetValue(10));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,MultiplicativeExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == GetValue(37) % GetValue(10));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,OrmLiteCountTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\OrmLiteCountTests.cs,CanDoCountWithInterfaceAndPredicate,The following statement contains a magic number: Expression<Func<CountTestTable' bool>> exp = q => q.Id == 2;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_property_expression,The following statement contains a magic number: var tmp = new TestClass<int>(12);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_property_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_field_expression,The following statement contains a magic number: var tmp = new TestClass<int>(12);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_field_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_method_expression,The following statement contains a magic number: var tmp = new TestClass<int>(12);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_property_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_field_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_method_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == TestClass<int>.StaticMethod(12));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_new_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_new_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_new_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == new TestClass<int>(12).Property);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_field_expression,The following statement contains a magic number: var tmp = new TestStruct<int>(12);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_field_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_property_expression,The following statement contains a magic number: var tmp = new TestStruct<int>(12);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_property_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_method_expression,The following statement contains a magic number: var tmp = new TestStruct<int>(12);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_property_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_field_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_bool_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_bool_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_new_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,PrimaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_new_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_than_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_or_equal_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_or_equal_than_expression,The following statement contains a magic number: Assert.AreEqual(11' actual.Count);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_smaller_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,RelationalExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_smaller_or_equal_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = stringVal              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = stringVal              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_double_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = stringVal              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_double_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_backtick_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = stringVal              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_backtick_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = prefix + "asdfasdfasdf"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = prefix + "'asdfasdfasdf"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_double_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = prefix + "\"asdfasdfasdf"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_double_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_backtick_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = prefix + "`asdfasdfasdf"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_backtick_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "asdfasdfasdf" + postfix              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "asdfasd'fasdf" + postfix              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_double_quote_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "asdfasd\"fasdf" + postfix              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_double_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_backtick_in_string,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 7'                  BoolColumn = true'                  StringColumn = "asdfasd`fasdf" + postfix              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,StringFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_backtick_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,TestType,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\TestType.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ BoolColumn.GetHashCode();
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,TestType,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\TestType.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (StringColumn != null ? StringColumn.GetHashCode() : 0);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_constant_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_constant_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_constant_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == +12);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_constant_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = -12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_constant_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_constant_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == -12);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression2,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression2,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_variable_expression,The following statement contains a magic number: var intVal = +12;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_variable_expression,The following statement contains a magic number: var intVal = -12;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = -12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_variable_expression,The following statement contains a magic number: object intVal = 12;
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_variable_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = false'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_method_expression,The following statement contains a magic number: var expected = new TestType()              {                  IntColumn = 12'                  BoolColumn = true'                  StringColumn = "test"              };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Expressions,UnaryExpressionsTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_method_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == (int)GetValue((object)12));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,CustomSelectWithPagingIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\CustomSelectWithPagingIssue.cs,Can_CustomSelect_With_Paging,The following statement contains a magic number: db.InsertAll(new[] {                      new SimpleModel { Id = 1' Foo = 1' Bar = 42 }'                      new SimpleModel { Id = 2' Foo = 2' Bar = 55 }'                  });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,CustomSelectWithPagingIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\CustomSelectWithPagingIssue.cs,Can_CustomSelect_With_Paging,The following statement contains a magic number: db.InsertAll(new[] {                      new SimpleModel { Id = 1' Foo = 1' Bar = 42 }'                      new SimpleModel { Id = 2' Foo = 2' Bar = 55 }'                  });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,CustomSelectWithPagingIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\CustomSelectWithPagingIssue.cs,Can_CustomSelect_With_Paging,The following statement contains a magic number: db.InsertAll(new[] {                      new SimpleModel { Id = 1' Foo = 1' Bar = 42 }'                      new SimpleModel { Id = 2' Foo = 2' Bar = 55 }'                  });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,CustomSelectWithPagingIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\CustomSelectWithPagingIssue.cs,Can_CustomSelect_With_Paging,The following statement contains a magic number: db.InsertAll(new[] {                      new SimpleModel { Id = 1' Foo = 1' Bar = 42 }'                      new SimpleModel { Id = 2' Foo = 2' Bar = 55 }'                  });
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,DeleteWithGeoTypesIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\DeleteWithGeoTypesIssue.cs,Can_delete_entity_with_Geo_Type,The following statement contains a magic number: Assert.That(rows.Count' Is.EqualTo(3));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,DeleteWithGeoTypesIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\DeleteWithGeoTypesIssue.cs,Can_delete_entity_with_Geo_Type,The following statement contains a magic number: Assert.That(db.Select<ModelWithGeo>().Count' Is.EqualTo(2));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,DeleteWithGeoTypesIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\DeleteWithGeoTypesIssue.cs,RandomPosition,The following statement contains a magic number: double lat = Math.Round(rand.NextDouble() * 160 - 80' 6);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,DeleteWithGeoTypesIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\DeleteWithGeoTypesIssue.cs,RandomPosition,The following statement contains a magic number: double lat = Math.Round(rand.NextDouble() * 160 - 80' 6);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,DeleteWithGeoTypesIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\DeleteWithGeoTypesIssue.cs,RandomPosition,The following statement contains a magic number: double lat = Math.Round(rand.NextDouble() * 160 - 80' 6);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,DeleteWithGeoTypesIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\DeleteWithGeoTypesIssue.cs,RandomPosition,The following statement contains a magic number: double lon = Math.Round(rand.NextDouble() * 360 - 180' 6);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,DeleteWithGeoTypesIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\DeleteWithGeoTypesIssue.cs,RandomPosition,The following statement contains a magic number: double lon = Math.Round(rand.NextDouble() * 360 - 180' 6);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,DeleteWithGeoTypesIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\DeleteWithGeoTypesIssue.cs,RandomPosition,The following statement contains a magic number: double lon = Math.Round(rand.NextDouble() * 360 - 180' 6);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,DeleteWithGeoTypesIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\DeleteWithGeoTypesIssue.cs,RandomPosition,The following statement contains a magic number: var result = SqlGeography.Point(lat' lon' 4326).MakeValid();
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,JamesGeoIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\JamesGeoIssue.cs,Can_insert_and_select_GeoPoint,The following statement contains a magic number: var james = new James                  {                      loc = SqlGeography.Point(40.6898329' -74.0452177' 4326)                  };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,JamesGeoIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\JamesGeoIssue.cs,Can_insert_and_select_GeoPoint,The following statement contains a magic number: var james = new James                  {                      loc = SqlGeography.Point(40.6898329' -74.0452177' 4326)                  };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,JamesGeoIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\JamesGeoIssue.cs,Can_insert_and_select_GeoPoint,The following statement contains a magic number: var james = new James                  {                      loc = SqlGeography.Point(40.6898329' -74.0452177' 4326)                  };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,PrecisionAndScaleTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\PrecisionAndScaleTests.cs,Can_execute_stored_procedure_with_scale_precision_params_,The following statement contains a magic number: var pNumber = cmd.AddParam("pNumber"' 1.0' direction: ParameterDirection.Output' precision: 8' scale: 3);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,PrecisionAndScaleTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\PrecisionAndScaleTests.cs,Can_execute_stored_procedure_with_scale_precision_params_,The following statement contains a magic number: var pNumber = cmd.AddParam("pNumber"' 1.0' direction: ParameterDirection.Output' precision: 8' scale: 3);
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,PrecisionAndScaleTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\PrecisionAndScaleTests.cs,Can_execute_stored_procedure_with_scale_precision_params_,The following statement contains a magic number: Assert.That(pNumber.Value' Is.EqualTo(12345.678));
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,JsonDataContractSerializerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\SerializationTests.cs,Can_save_and_load_complex_type,The following statement contains a magic number: var group = new Group                  {                      Name = "Group Name"'                      ShortName = "GN"'                      GroupTypeId = 1'                      BirthDay = new DateTime(1980'01'09)'                      ContactDetails = new ContactDetails {                          Address = "Address"'                          CompanyName = "Company"'                          FirstName = "First"'                          LastName = "Last"'                          Title = "Title"'                      }                  };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,JsonDataContractSerializerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\SerializationTests.cs,Can_save_and_load_complex_type,The following statement contains a magic number: var group = new Group                  {                      Name = "Group Name"'                      ShortName = "GN"'                      GroupTypeId = 1'                      BirthDay = new DateTime(1980'01'09)'                      ContactDetails = new ContactDetails {                          Address = "Address"'                          CompanyName = "Company"'                          FirstName = "First"'                          LastName = "Last"'                          Title = "Title"'                      }                  };
Magic Number,ServiceStack.OrmLite.SqlServerTests.Issues,StringLengthParamTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\Issues\StringLengthParamTests.cs,Can_select_param_greater_than_default_length,The following statement contains a magic number: var name = "a" + new string('b'' 8000) + "c";
Magic Number,SqlServerTypes,Utilities,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\SqlServerTypes\Loader.cs,LoadNativeAssemblies,The following statement contains a magic number: var nativeBinaryPath = IntPtr.Size > 4                  ? Path.Combine(rootApplicationPath' @"SqlServerTypes\x64\")                  : Path.Combine(rootApplicationPath' @"SqlServerTypes\x86\");
Magic Number,ServiceStack.OrmLite.SqlServerTests.UseCase,ComplexJoinWithLimitAndNoOrderByTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\UseCase\ComplexJoinWithLimitAndNoOrderByTests.cs,ComplexJoin_with_JoinSqlBuilder_and_limit_and_no_orderby,The following statement contains a magic number: var jn = db.From<Foo>()                      .Join<Foo' Bar>((f'b) => f.BarId == b.Id)                      .Limit(1' 2);
Magic Number,ServiceStack.OrmLite.SqlServerTests.UseCase,ComplexJoinWithLimitAndSpacesInAliasesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\UseCase\ComplexJoinWithLimitAndSpacesInAliasesTests.cs,ComplexJoin_with_JoinSqlBuilder_and_limit_with_spaces_in_aliases,The following statement contains a magic number: var jn = db.From<FooSpace>()                      .Join<FooSpace' BarSpace>((f'b) => f.BarId == b.Id)                      .OrderBy<FooSpace>(f => f.Id)                      .Limit(1' 2);
Magic Number,ServiceStack.OrmLite.SqlServerTests.UseCase,SimpleUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\UseCase\SimpleUseCase.cs,Simple_CRUD_example,The following statement contains a magic number: db.Insert(new User { Id = 2' Name = "B"' CreatedDate = DateTime.Now });
Magic Number,ServiceStack.OrmLite.SqlServerTests.UseCase,SimpleUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\UseCase\SimpleUseCase.cs,Simple_CRUD_example,The following statement contains a magic number: db.Insert(new User { Id = 3' Name = "B"' CreatedDate = DateTime.Now' IsAdmin = true});
Magic Number,ServiceStack.OrmLite.SqlServerTests.UseCase,SimpleUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\UseCase\SimpleUseCase.cs,Simple_CRUD_example,The following statement contains a magic number: Assert.That(rowsB' Has.Count.EqualTo(2));
Magic Number,ServiceStack.OrmLite.SqlServerTests.UseCase,SimpleUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\UseCase\SimpleUseCase.cs,Simple_CRUD_example,The following statement contains a magic number: Assert.That(admin[0].Id' Is.EqualTo(3));
Magic Number,ServiceStack.OrmLite.SqlServerTests.UseCase,SimpleUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\UseCase\SimpleUseCase.cs,Simple_CRUD_example,The following statement contains a magic number: Assert.That(rowIds' Is.EquivalentTo(new List<long> { 2' 3 }));
Magic Number,ServiceStack.OrmLite.SqlServerTests.UseCase,SimpleUseCase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.OrmLite\tests\ServiceStack.OrmLite.SqlServer.Tests\UseCase\SimpleUseCase.cs,Simple_CRUD_example,The following statement contains a magic number: Assert.That(rowIds' Is.EquivalentTo(new List<long> { 2' 3 }));
