Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,StatLight.Core.Tests,using_a_random_temp_file_for_testing,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\FixtureBase.cs,,The length of the parameter _mockServerTestRunConfiguration is 31.
Long Identifier,StatLight.Core.Tests.Console,TextInformationalMessageWriterTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Console\ConsoleMainTests.cs,,The length of the parameter _textInformationalMessageWriter is 31.
Long Identifier,StatLight.Core.Tests.Reporting,DialogAssertionMatchmakerTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\DialogAssertionMatchmakerTests.cs,Should_detect_assertion,The length of the parameter testExecutionMethodBeginClientEvent is 35.
Long Identifier,StatLight.Core.Tests.Reporting,DialogAssertionMatchmakerTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\DialogAssertionMatchmakerTests.cs,If_assettion_happens_before_begin_test_event_arrives_should_match,The length of the parameter testExecutionMethodBeginClientEvent is 35.
Long Identifier,TestResultAggregatorTests,when_a_TestExecutionMethodPassedClientEvent_was_published,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,,The length of the parameter _testExecutionMethodPassedClientEvent is 37.
Long Identifier,TestResultAggregatorTests,when_a_TestExecutionMethodFailedClientEvent_was_published,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,,The length of the parameter _testExecutionMethodFailedClientEvent is 37.
Long Identifier,TestResultAggregatorTests,when_a_BrowserHostCommunicationTimeout_has_been_published,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,,The length of the parameter _browserHostCommunicationTimeoutServerEvent is 43.
Long Identifier,StatLight.Core.Tests.Runners,StatLightFactoryTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Runners\StatLightFactoryTests.cs,Because,The length of the parameter fakeCurrentStatLightConfiguration is 33.
Long Identifier,StatLight.Core.Tests.WebServer.CustomHost,TestServiceEngineTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\CustomHost\TestServiceEngineTests.cs,Before_all_tests,The length of the parameter dummyServerTestRunConfiguration is 31.
Long Identifier,StatLight.Core.Tests.WebServer.PostHandlerTests,PostHandlerTestsBase,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\PostHandlerTests\PostHandlerTests.cs,Before_all_tests,The length of the parameter mockCurrentStatLightConfiguration is 33.
Long Identifier,StatLight.Core.Tests.WebServer.PostHandlerTests,Double_test_run_should_signal_when_complete,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\PostHandlerTests\PostHandlerTests.cs,,The length of the parameter _testRunCompleteMessagesSentCount is 33.
Long Statement,StatLight.Core.Tests,using_a_random_temp_file_for_testing,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\FixtureBase.cs,Before_all_tests,The length of the statement  "            _mockServerTestRunConfiguration = new ServerTestRunConfiguration(() => new byte[] { 1' 2 }' _pathToTempXapFile' XapHostType.MSTest2009November' ""' true' new WindowGeometry()' " is 175.
Long Statement,StatLight.Core.Tests,using_a_random_temp_file_for_testing,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\FixtureBase.cs,CreateTestDefaultClinetTestRunConfiguraiton,The length of the statement  "                                                                         string.Empty' 1' StatLight.Core.WebBrowser.WebBrowserType.SelfHosted' string.Empty' new WindowGeometry()'new List<string>()); " is 125.
Long Statement,ArgOptionsTests,when_testing_the_arg_options,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Console\ArgOptionsTests.cs,when_giving_the_xml_output_file_should_validate_theres_a_directory_to_write_the_file_to,The length of the statement  "                typeof(DirectoryNotFoundException).ShouldBeThrownBy(() => ("-x=" + _actualFile + @" -r=C:\some123456DirShouldntExist\Test.xml").ToArgOptions()); " is 144.
Long Statement,StatLight.Core.Tests.Reporting.Providers.MSTestTRX,TRXReportTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\MSTestTRX\TRXReportTests.cs,Should_conform_to_xml_schema,The length of the statement  "                    Assert.Fail("Validation Errors:{0}{1}".FormatWith(Environment.NewLine' string.Join(Environment.NewLine' validationErrors))); " is 124.
Long Statement,StatLight.Core.Tests.Reporting.Providers.MSTestTRX,TRXReportTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\MSTestTRX\TRXReportTests.cs,Should_spit_out_valid_MSTest_trx,The length of the statement  "            expectedFileData = expectedFileData.Replace(@"DOMAIN\UserName"' string.Format(@"{0}\{1}"' Environment.UserDomainName' Environment.UserName)); " is 141.
Long Statement,StatLight.Core.Tests.Reporting.Providers.MSTestTRX,TRXReportTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\MSTestTRX\TRXReportTests.cs,Should_spit_out_valid_MSTest_trx,The length of the statement  "                @"startTime=\""[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]T[0-9][0-9]:[0-9][0-9]:[0-9][0-9].[0-9][0-9][0-9][0-9][0-9][0-9][0-9][-+][0-9][0-9]:[0-9][0-9]\"""); " is 157.
Long Statement,StatLight.Core.Tests.Reporting.Providers.MSTestTRX,TRXReportTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\MSTestTRX\TRXReportTests.cs,Should_spit_out_valid_MSTest_trx,The length of the statement  "                @"endTime=\""[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]T[0-9][0-9]:[0-9][0-9]:[0-9][0-9].[0-9][0-9][0-9][0-9][0-9][0-9][0-9][-+][0-9][0-9]:[0-9][0-9]\"""); " is 155.
Long Statement,StatLight.Core.Tests.Reporting.Providers.TeamCity,when_verifying_protocol_for_teamcity_commands,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\TeamCity\TeamCityCommands.cs,should_be_able_to_create_a_testFailed_command,The length of the statement  "			command.ToString().ShouldEqual(wrapMessage("testFailed name='" + assemblyName + "' message='" + message + "' details='" + details + "'")); " is 138.
Long Statement,StatLight.Core.Tests.Reporting.Providers.TeamCity,when_verifying_protocol_for_teamcity_commands,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\TeamCity\TeamCityCommands.cs,should_be_able_to_create_a_testFailed_with_type_comparison_command,The length of the statement  "			command.ToString().ShouldEqual(wrapMessage("testFailed type='" + type + "' name='" + assemblyName + "' message='" + message + "' details='" + details + "' expected='" + expected + "' actual='" + actual + "'")); " is 210.
Long Statement,TestResultAggregatorTests,when_a_dialog_assertion_occurs_we_should_rePublish_failure_events,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Because,The length of the statement  "                TestResultAggregator.Handle(new TestExecutionMethodBeginClientEvent { NamespaceName = "n"' ClassName = "c"' MethodName = "m0" }); " is 129.
Long Statement,TestResultAggregatorTests,when_a_dialog_assertion_occurs_we_should_rePublish_failure_events,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Because,The length of the statement  "                TestResultAggregator.Handle(new TestExecutionMethodPassedClientEvent { NamespaceName = "n"' ClassName = "c"' MethodName = "m0" }); " is 130.
Long Statement,TestResultAggregatorTests,when_a_completed_MethodClientEvent_arrives_before_the_TestExecutionMethodBeginClientEvent,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Should_not_complete_a_Passed_event_until_the_begin_event_arrives,The length of the statement  "                TestResultAggregator.Handle(new TestExecutionMethodPassedClientEvent { NamespaceName = "n"' ClassName = "c"' MethodName = "m0" }); " is 130.
Long Statement,TestResultAggregatorTests,when_a_completed_MethodClientEvent_arrives_before_the_TestExecutionMethodBeginClientEvent,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Should_not_complete_a_Passed_event_until_the_begin_event_arrives,The length of the statement  "                TestResultAggregator.Handle(new TestExecutionMethodBeginClientEvent { NamespaceName = "n"' ClassName = "c"' MethodName = "m0" }); " is 129.
Long Statement,TestResultAggregatorTests,when_a_completed_MethodClientEvent_arrives_before_the_TestExecutionMethodBeginClientEvent,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Should_not_complete_a_Failed_event_until_the_begin_event_arrives,The length of the statement  "                TestResultAggregator.Handle(new TestExecutionMethodFailedClientEvent { NamespaceName = "n"' ClassName = "c"' MethodName = "m1" }); " is 130.
Long Statement,TestResultAggregatorTests,when_a_completed_MethodClientEvent_arrives_before_the_TestExecutionMethodBeginClientEvent,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Should_not_complete_a_Failed_event_until_the_begin_event_arrives,The length of the statement  "                TestResultAggregator.Handle(new TestExecutionMethodBeginClientEvent { NamespaceName = "n"' ClassName = "c"' MethodName = "m1" }); " is 129.
Long Statement,TestResultAggregatorTests,when_a_TestContextMessageClientEvent_arrives,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Should_have_attached_testContext_metadata_after_a_passed_event_has_gone_through,The length of the statement  "                TestResultAggregator.Handle(new TestContextMessageClientEvent { FullTestName = "n.c.m0"' Message = "Sample WriteLine" }); " is 121.
Long Statement,TestResultAggregatorTests,when_a_TestContextMessageClientEvent_arrives,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Should_have_attached_testContext_metadata_after_a_passed_event_has_gone_through,The length of the statement  "                TestResultAggregator.Handle(new TestExecutionMethodPassedClientEvent { NamespaceName = "n"' ClassName = "c"' MethodName = "m0" }); " is 130.
Long Statement,TestResultAggregatorTests,when_a_TestContextMessageClientEvent_arrives,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Should_have_attached_testContext_metadata_after_a_passed_event_has_gone_through,The length of the statement  "                TestResultAggregator.Handle(new TestExecutionMethodBeginClientEvent { NamespaceName = "n"' ClassName = "c"' MethodName = "m0" }); " is 129.
Long Statement,TestResultAggregatorTests,when_a_TestContextMessageClientEvent_arrives,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Should_have_attached_testContext_metadata_after_a_passed_event_has_gone_through,The length of the statement  "                TestResultAggregator.CurrentReport.TestResults.First().Metadata.Count().ShouldEqual(1' "Should have placed an item into the metadata collection"); " is 146.
Long Statement,TestResultAggregatorTests,when_a_TestContextMessageClientEvent_arrives,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Should_have_attached_testContext_metadata_after_a_passed_event_has_gone_through,The length of the statement  "                TestResultAggregator.CurrentReport.TestResults.First().Metadata.First().Classification.ShouldEqual("TestContextWriteMethod"); " is 125.
Long Statement,TestResultAggregatorTests,when_a_TestContextMessageClientEvent_arrives,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Should_have_attached_testContext_metadata_after_a_failed_event_has_gone_through,The length of the statement  "                TestResultAggregator.Handle(new TestContextMessageClientEvent { FullTestName = "n.c.m1"' Message = "Sample WriteLine" }); " is 121.
Long Statement,TestResultAggregatorTests,when_a_TestContextMessageClientEvent_arrives,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Should_have_attached_testContext_metadata_after_a_failed_event_has_gone_through,The length of the statement  "                TestResultAggregator.Handle(new TestExecutionMethodFailedClientEvent { NamespaceName = "n"' ClassName = "c"' MethodName = "m1" }); " is 130.
Long Statement,TestResultAggregatorTests,when_a_TestContextMessageClientEvent_arrives,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Should_have_attached_testContext_metadata_after_a_failed_event_has_gone_through,The length of the statement  "                TestResultAggregator.Handle(new TestExecutionMethodBeginClientEvent { NamespaceName = "n"' ClassName = "c"' MethodName = "m1" }); " is 129.
Long Statement,StatLight.Core.Tests.WebBrowser,ChromeWebBrowserTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebBrowser\ChromeWebBrowserTests.cs,ExecuteIfChromeInstalled,The length of the statement  "                    Assert.Ignore("Chrome does not appeard to be installed (in the following path {0})".FormatWith(ChromeWebBrowser.ChromePath)); " is 125.
Long Statement,StatLight.Core.Tests.WebBrowser,FirefoxWebBrowserTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebBrowser\FirefoxWebBrowserTests.cs,ExecuteIfFirefoxInstalled,The length of the statement  "                    Assert.Ignore("Firefox does not appeard to be installed (in the following path {0})".FormatWith(FirefoxWebBrowser.FireFoxPath)); " is 128.
Long Statement,StatLight.Core.Tests.WebServer.CustomHost,TestServiceEngineTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\CustomHost\TestServiceEngineTests.cs,Before_all_tests,The length of the statement  "            var clientConfig = new ClientTestRunConfiguration(UnitTestProviderType.MSTest' new List<string>()' ""' 1' WebBrowserType.SelfHosted' string.Empty' new WindowGeometry()' new List<string>()); " is 189.
Long Statement,StatLight.Core.Tests.WebServer.CustomHost,TestServiceEngineTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\CustomHost\TestServiceEngineTests.cs,Before_all_tests,The length of the statement  "            _inMemoryWebServer = new InMemoryWebServer(consoleLogger' webServerLocation' _responseFactory' _mockPostHandler.Object' base.TestEventPublisher); " is 145.
Long Statement,StatLight.Core.Tests.WebServer.PostHandlerTests,PostHandlerTestsBase,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\PostHandlerTests\PostHandlerTests.cs,Before_all_tests,The length of the statement  "            PostHandler = new PostHandler(TestLogger' TestEventPublisher' mockCurrentStatLightConfiguration.Object' responseFactory); " is 121.
Long Statement,StatLight.Core.Tests.WebServer.PostHandlerTests,PostHandlerTestsBase,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\PostHandlerTests\PostHandlerTests.cs,HandleMessage,The length of the statement  "                throw new AssertionException("Could not post object of type [{0}] to the PostHanlder posted as [{1}]".FormatWith(message.GetType()' unknownPostData)); " is 150.
Long Statement,StatLight.Core.Tests.WebServer.XapHost,XapHostFileLoaderFactoryTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapHost\XapHostFileLoaderFactoryTests.cs,Should_return_the_default_MSTest_xap_host_for_NUnit_test_provider,The length of the statement  "            _xapHostFileLoaderFactory.MapToXapHostType(UnitTestProviderType.NUnit' null' isPhoneRun: false).ShouldEqual(DefaultXapHostType); " is 128.
Long Statement,StatLight.Core.Tests.WebServer.XapHost,XapHostFileLoaderFactoryTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapHost\XapHostFileLoaderFactoryTests.cs,Should_return_the_default_MSTest_xap_host_for_XUnitLight_test_provider,The length of the statement  "            _xapHostFileLoaderFactory.MapToXapHostType(UnitTestProviderType.XUnitLight' null' isPhoneRun: false).ShouldEqual(DefaultXapHostType); " is 133.
Long Statement,StatLight.Core.Tests.WebServer.XapHost,XapHostFileLoaderFactoryTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapHost\XapHostFileLoaderFactoryTests.cs,Should_return_the_default_MSTest_xap_host_for_MSTest_MSTest2009July_test_provider,The length of the statement  "            _xapHostFileLoaderFactory.MapToXapHostType(UnitTestProviderType.MSTest' MicrosoftTestingFrameworkVersion.MSTest2009July' isPhoneRun:false) " is 138.
Long Statement,StatLight.Core.Tests.WebServer.XapHost,XapHostFileLoaderFactoryTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapHost\XapHostFileLoaderFactoryTests.cs,Should_return_the_default_MSTest_xap_host_for_MSTest_MSTest2009October_test_provider,The length of the statement  "            _xapHostFileLoaderFactory.MapToXapHostType(UnitTestProviderType.MSTest' MicrosoftTestingFrameworkVersion.MSTest2009October' isPhoneRun: false) " is 142.
Long Statement,StatLight.Core.Tests.WebServer.XapHost,XapHostFileLoaderFactoryTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapHost\XapHostFileLoaderFactoryTests.cs,Should_return_the_default_MSTest_xap_host_for_MSTest_MSTest2009November_test_provider,The length of the statement  "            _xapHostFileLoaderFactory.MapToXapHostType(UnitTestProviderType.MSTest' MicrosoftTestingFrameworkVersion.MSTest2009November' isPhoneRun: false) " is 143.
Long Statement,StatLight.Core.Tests.WebServer.XapInspection,XapRewriterTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapInspection\XapRewriterTests.cs,Before_all_tests,The length of the statement  "            var appManifest = @"<Deployment xmlns=""http://schemas.microsoft.com/client/2007/deployment"" xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml"" EntryPointAssembly=""StatLight.Client.Harness"" EntryPointType=""StatLight.Client.Harness.App"" RuntimeVersion=""4.0.50826.0""> " is 278.
Long Statement,StatLight.Core.Tests.WebServer.XapInspection,XapRewriterTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapInspection\XapRewriterTests.cs,Before_all_tests,The length of the statement  "    <AssemblyPart x:Name=""Microsoft.VisualStudio.QualityTools.UnitTesting.Silverlight"" Source=""Microsoft.VisualStudio.QualityTools.UnitTesting.Silverlight.dll"" /> " is 162.
Long Statement,StatLight.Core.Tests.WebServer.XapInspection,XapRewriterTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapInspection\XapRewriterTests.cs,Before_all_tests,The length of the statement  "            var appManifest2 = @"<Deployment xmlns=""http://schemas.microsoft.com/client/2007/deployment"" xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml"" EntryPointAssembly=""StatLight.IntegrationTests.Silverlight.MSTest"" EntryPointType=""StatLight.IntegrationTests.Silverlight.App"" RuntimeVersion=""4.0.50826.0""> " is 314.
Long Statement,StatLight.Core.Tests.WebServer.XapInspection,XapRewriterTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapInspection\XapRewriterTests.cs,Before_all_tests,The length of the statement  "    <AssemblyPart x:Name=""StatLight.IntegrationTests.Silverlight.MSTest"" Source=""StatLight.IntegrationTests.Silverlight.MSTest.dll"" /> " is 134.
Long Statement,StatLight.Core.Tests.WebServer.XapInspection,XapRewriterTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapInspection\XapRewriterTests.cs,Before_all_tests,The length of the statement  "    <AssemblyPart x:Name=""Microsoft.VisualStudio.QualityTools.UnitTesting.Silverlight"" Source=""Microsoft.VisualStudio.QualityTools.UnitTesting.Silverlight.dll"" /> " is 162.
Long Statement,StatLight.Core.Tests.WebServer.XapInspection,XapRewriterTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapInspection\XapRewriterTests.cs,Before_all_tests,The length of the statement  "            originalXapUnderTest.AddTempFile("/Binaries/Microsoft.VisualStudio.QualityTools.UnitTesting.Silverlight.dll"' new byte[] { 1' 2 }); " is 131.
Long Statement,StatLight.Core.Tests.WebServer.XapInspection,XapRewriterTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapInspection\XapRewriterTests.cs,Before_all_tests,The length of the statement  "            _expectedAppManifest = @"<Deployment xmlns=""http://schemas.microsoft.com/client/2007/deployment"" xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml"" EntryPointAssembly=""StatLight.Client.Harness"" EntryPointType=""StatLight.Client.Harness.App"" RuntimeVersion=""4.0.50826.0""> " is 283.
Long Statement,StatLight.Core.Tests.WebServer.XapInspection,XapRewriterTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapInspection\XapRewriterTests.cs,Before_all_tests,The length of the statement  "    <AssemblyPart x:Name=""Microsoft.VisualStudio.QualityTools.UnitTesting.Silverlight"" Source=""Microsoft.VisualStudio.QualityTools.UnitTesting.Silverlight.dll"" /> " is 162.
Long Statement,StatLight.Core.Tests.WebServer.XapInspection,XapRewriterTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapInspection\XapRewriterTests.cs,Before_all_tests,The length of the statement  "    <AssemblyPart x:Name=""StatLight.IntegrationTests.Silverlight.MSTest"" Source=""StatLight.IntegrationTests.Silverlight.MSTest.dll"" /> " is 134.
Long Statement,StatLight.Core.Tests.WebServer.XapInspection,XapRewriterTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapInspection\XapRewriterTests.cs,AssertZipsEqual,The length of the statement  "                string firstOrDefault = allFiles.Where(w => w.Equals(expectedFile.FileName' StringComparison.OrdinalIgnoreCase)).FirstOrDefault(); " is 130.
Long Statement,StatLight.Core.Tests.WebServer.XapInspection,XapRewriterTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapInspection\XapRewriterTests.cs,AssertZipsEqual,The length of the statement  "            //    //actualFile.ToByteArray().ShouldEqual(expectedFile.ToByteArray()' "File [{0}] bytes not same.".FormatWith(actualFile.FileName)); " is 135.
Long Statement,XapMonitorTests,when_initializing_the_XapWatcher,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Monitoring\XapFileMonitoring\XapWatcherTests.cs,Should_throw_a_FileNotFoundException_if_the_given_file_does_not_exist,The length of the statement  "                typeof(FileNotFoundException).ShouldBeThrownBy(() => new XapFileBuildChangedMonitor(base.TestEventPublisher' PathToTempXapFile.Select(s => s + "badpath"))); " is 156.
Empty Catch Block,StatLight.Core.Tests.WebBrowser,ChromeWebBrowserTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebBrowser\ChromeWebBrowserTests.cs,After_all_tests,The method has an empty catch block.
Empty Catch Block,StatLight.Core.Tests.WebBrowser,FirefoxWebBrowserTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebBrowser\FirefoxWebBrowserTests.cs,After_all_tests,The method has an empty catch block.
Empty Catch Block,WebServerLocationTests,WebServerLocationTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\WebServerLocationTests.cs,when_the_8887_port_is_in_use_it_should_find_another_open_port,The method has an empty catch block.
Magic Number,CommonExtensionTests,when_seriaizing_and_deserializing,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\CommonExtensionTests.cs,should_be_able_to_serialize_a_test_object,The following statement contains a magic number: var o = new testSerializable() { Value = 10 };
Magic Number,StatLight.Core.Tests,using_a_random_temp_file_for_testing,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\FixtureBase.cs,Before_all_tests,The following statement contains a magic number: mockXapHostFileLoaderFactory                  .Setup(s => s.LoadXapHostFor(It.IsAny<XapHostType>()))                  .Returns(new byte[] { 0' 1' 1' 2' 3' 1' });
Magic Number,StatLight.Core.Tests,using_a_random_temp_file_for_testing,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\FixtureBase.cs,Before_all_tests,The following statement contains a magic number: mockXapHostFileLoaderFactory                  .Setup(s => s.LoadXapHostFor(It.IsAny<XapHostType>()))                  .Returns(new byte[] { 0' 1' 1' 2' 3' 1' });
Magic Number,StatLight.Core.Tests,using_a_random_temp_file_for_testing,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\FixtureBase.cs,Before_all_tests,The following statement contains a magic number: _mockServerTestRunConfiguration = new ServerTestRunConfiguration(() => new byte[] { 1' 2 }' _pathToTempXapFile' XapHostType.MSTest2009November' ""' true' new WindowGeometry()'                  isPhoneRun:false);
Magic Number,StatLight.Core.Tests.Console.ArgOptionsTests,WhenOverridingSettings,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Console\WhenOverridingSettings.cs,Valid_setting_specified_should_override_value,The following statement contains a magic number: settings.MaxWaitTimeAllowedBeforeCommunicationErrorSent.ShouldEqual(TimeSpan.FromSeconds(20));
Magic Number,StatLight.Core.Tests.Reporting,when_a_TestReport_is_created,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestRunResultTests.cs,Should_be_able_to_add_test_results,The following statement contains a magic number: result.TotalResults.ShouldEqual(2);
Magic Number,StatLight.Core.Tests.Reporting,when_viewing_a_TestReport_for_a_specific_set_of_results,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestRunResultTests.cs,Should_count_total_correctly,The following statement contains a magic number: _result.TotalResults.ShouldEqual(6);
Magic Number,StatLight.Core.Tests.Reporting,when_viewing_a_TestReport_for_a_specific_set_of_results,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestRunResultTests.cs,can_get_count_of_failing_tests,The following statement contains a magic number: _result.TotalFailed.ShouldEqual(2);
Magic Number,StatLight.Core.Tests.Reporting,when_viewing_a_TestReport_for_a_specific_set_of_results,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestRunResultTests.cs,can_get_count_of_passing_tests,The following statement contains a magic number: _result.TotalPassed.ShouldEqual(3);
Magic Number,StatLight.Core.Tests.Reporting.Providers,when_validating_the_NUnitXmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\NUnit\NUnitXmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>              {                  return new TestCaseResultServerEvent(resultType)                  {                      ClassName = "class_name"'                      MethodName = "method_name"'                      NamespaceName = "namespace.here"'                      Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                      Started = new DateTime(2009' 2' 2' 2' 2' 1)'                      ExceptionInfo = exceptionInfo'                      XapFilePath = "Test.xap"'                              };              };
Magic Number,StatLight.Core.Tests.Reporting.Providers,when_validating_the_NUnitXmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\NUnit\NUnitXmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>              {                  return new TestCaseResultServerEvent(resultType)                  {                      ClassName = "class_name"'                      MethodName = "method_name"'                      NamespaceName = "namespace.here"'                      Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                      Started = new DateTime(2009' 2' 2' 2' 2' 1)'                      ExceptionInfo = exceptionInfo'                      XapFilePath = "Test.xap"'                              };              };
Magic Number,StatLight.Core.Tests.Reporting.Providers,when_validating_the_NUnitXmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\NUnit\NUnitXmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>              {                  return new TestCaseResultServerEvent(resultType)                  {                      ClassName = "class_name"'                      MethodName = "method_name"'                      NamespaceName = "namespace.here"'                      Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                      Started = new DateTime(2009' 2' 2' 2' 2' 1)'                      ExceptionInfo = exceptionInfo'                      XapFilePath = "Test.xap"'                              };              };
Magic Number,StatLight.Core.Tests.Reporting.Providers,when_validating_the_NUnitXmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\NUnit\NUnitXmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>              {                  return new TestCaseResultServerEvent(resultType)                  {                      ClassName = "class_name"'                      MethodName = "method_name"'                      NamespaceName = "namespace.here"'                      Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                      Started = new DateTime(2009' 2' 2' 2' 2' 1)'                      ExceptionInfo = exceptionInfo'                      XapFilePath = "Test.xap"'                              };              };
Magic Number,StatLight.Core.Tests.Reporting.Providers,when_validating_the_NUnitXmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\NUnit\NUnitXmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>              {                  return new TestCaseResultServerEvent(resultType)                  {                      ClassName = "class_name"'                      MethodName = "method_name"'                      NamespaceName = "namespace.here"'                      Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                      Started = new DateTime(2009' 2' 2' 2' 2' 1)'                      ExceptionInfo = exceptionInfo'                      XapFilePath = "Test.xap"'                              };              };
Magic Number,StatLight.Core.Tests.Reporting.Providers,when_validating_the_NUnitXmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\NUnit\NUnitXmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>              {                  return new TestCaseResultServerEvent(resultType)                  {                      ClassName = "class_name"'                      MethodName = "method_name"'                      NamespaceName = "namespace.here"'                      Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                      Started = new DateTime(2009' 2' 2' 2' 2' 1)'                      ExceptionInfo = exceptionInfo'                      XapFilePath = "Test.xap"'                              };              };
Magic Number,StatLight.Core.Tests.Reporting.Providers,when_validating_the_NUnitXmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\NUnit\NUnitXmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>              {                  return new TestCaseResultServerEvent(resultType)                  {                      ClassName = "class_name"'                      MethodName = "method_name"'                      NamespaceName = "namespace.here"'                      Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                      Started = new DateTime(2009' 2' 2' 2' 2' 1)'                      ExceptionInfo = exceptionInfo'                      XapFilePath = "Test.xap"'                              };              };
Magic Number,StatLight.Core.Tests.Reporting.Providers,when_validating_the_NUnitXmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\NUnit\NUnitXmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>              {                  return new TestCaseResultServerEvent(resultType)                  {                      ClassName = "class_name"'                      MethodName = "method_name"'                      NamespaceName = "namespace.here"'                      Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                      Started = new DateTime(2009' 2' 2' 2' 2' 1)'                      ExceptionInfo = exceptionInfo'                      XapFilePath = "Test.xap"'                              };              };
Magic Number,StatLight.Core.Tests.Reporting.Providers,when_validating_the_NUnitXmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\NUnit\NUnitXmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>              {                  return new TestCaseResultServerEvent(resultType)                  {                      ClassName = "class_name"'                      MethodName = "method_name"'                      NamespaceName = "namespace.here"'                      Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                      Started = new DateTime(2009' 2' 2' 2' 2' 1)'                      ExceptionInfo = exceptionInfo'                      XapFilePath = "Test.xap"'                              };              };
Magic Number,StatLight.Core.Tests.Reporting.Providers,when_validating_the_NUnitXmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\NUnit\NUnitXmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>              {                  return new TestCaseResultServerEvent(resultType)                  {                      ClassName = "class_name"'                      MethodName = "method_name"'                      NamespaceName = "namespace.here"'                      Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                      Started = new DateTime(2009' 2' 2' 2' 2' 1)'                      ExceptionInfo = exceptionInfo'                      XapFilePath = "Test.xap"'                              };              };
Magic Number,StatLight.Core.Tests.Reporting.Providers,when_validating_the_NUnitXmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\NUnit\NUnitXmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>              {                  return new TestCaseResultServerEvent(resultType)                  {                      ClassName = "class_name"'                      MethodName = "method_name"'                      NamespaceName = "namespace.here"'                      Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                      Started = new DateTime(2009' 2' 2' 2' 2' 1)'                      ExceptionInfo = exceptionInfo'                      XapFilePath = "Test.xap"'                              };              };
Magic Number,StatLight.Core.Tests.Reporting.Providers.Xml,when_validating_the_XmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\Xml\XmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>                  {                      return new TestCaseResultServerEvent(resultType)                                 {                                     ClassName = "class_name"'                                     MethodName = "method_name"'                                     NamespaceName = "namespace.here"'                                     Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                                     Started = new DateTime(2009' 2' 2' 2' 2' 1)'                                     ExceptionInfo = exceptionInfo'                                     XapFilePath = "Test.xap"'                                                                               };                  };
Magic Number,StatLight.Core.Tests.Reporting.Providers.Xml,when_validating_the_XmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\Xml\XmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>                  {                      return new TestCaseResultServerEvent(resultType)                                 {                                     ClassName = "class_name"'                                     MethodName = "method_name"'                                     NamespaceName = "namespace.here"'                                     Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                                     Started = new DateTime(2009' 2' 2' 2' 2' 1)'                                     ExceptionInfo = exceptionInfo'                                     XapFilePath = "Test.xap"'                                                                               };                  };
Magic Number,StatLight.Core.Tests.Reporting.Providers.Xml,when_validating_the_XmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\Xml\XmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>                  {                      return new TestCaseResultServerEvent(resultType)                                 {                                     ClassName = "class_name"'                                     MethodName = "method_name"'                                     NamespaceName = "namespace.here"'                                     Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                                     Started = new DateTime(2009' 2' 2' 2' 2' 1)'                                     ExceptionInfo = exceptionInfo'                                     XapFilePath = "Test.xap"'                                                                               };                  };
Magic Number,StatLight.Core.Tests.Reporting.Providers.Xml,when_validating_the_XmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\Xml\XmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>                  {                      return new TestCaseResultServerEvent(resultType)                                 {                                     ClassName = "class_name"'                                     MethodName = "method_name"'                                     NamespaceName = "namespace.here"'                                     Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                                     Started = new DateTime(2009' 2' 2' 2' 2' 1)'                                     ExceptionInfo = exceptionInfo'                                     XapFilePath = "Test.xap"'                                                                               };                  };
Magic Number,StatLight.Core.Tests.Reporting.Providers.Xml,when_validating_the_XmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\Xml\XmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>                  {                      return new TestCaseResultServerEvent(resultType)                                 {                                     ClassName = "class_name"'                                     MethodName = "method_name"'                                     NamespaceName = "namespace.here"'                                     Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                                     Started = new DateTime(2009' 2' 2' 2' 2' 1)'                                     ExceptionInfo = exceptionInfo'                                     XapFilePath = "Test.xap"'                                                                               };                  };
Magic Number,StatLight.Core.Tests.Reporting.Providers.Xml,when_validating_the_XmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\Xml\XmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>                  {                      return new TestCaseResultServerEvent(resultType)                                 {                                     ClassName = "class_name"'                                     MethodName = "method_name"'                                     NamespaceName = "namespace.here"'                                     Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                                     Started = new DateTime(2009' 2' 2' 2' 2' 1)'                                     ExceptionInfo = exceptionInfo'                                     XapFilePath = "Test.xap"'                                                                               };                  };
Magic Number,StatLight.Core.Tests.Reporting.Providers.Xml,when_validating_the_XmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\Xml\XmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>                  {                      return new TestCaseResultServerEvent(resultType)                                 {                                     ClassName = "class_name"'                                     MethodName = "method_name"'                                     NamespaceName = "namespace.here"'                                     Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                                     Started = new DateTime(2009' 2' 2' 2' 2' 1)'                                     ExceptionInfo = exceptionInfo'                                     XapFilePath = "Test.xap"'                                                                               };                  };
Magic Number,StatLight.Core.Tests.Reporting.Providers.Xml,when_validating_the_XmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\Xml\XmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>                  {                      return new TestCaseResultServerEvent(resultType)                                 {                                     ClassName = "class_name"'                                     MethodName = "method_name"'                                     NamespaceName = "namespace.here"'                                     Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                                     Started = new DateTime(2009' 2' 2' 2' 2' 1)'                                     ExceptionInfo = exceptionInfo'                                     XapFilePath = "Test.xap"'                                                                               };                  };
Magic Number,StatLight.Core.Tests.Reporting.Providers.Xml,when_validating_the_XmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\Xml\XmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>                  {                      return new TestCaseResultServerEvent(resultType)                                 {                                     ClassName = "class_name"'                                     MethodName = "method_name"'                                     NamespaceName = "namespace.here"'                                     Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                                     Started = new DateTime(2009' 2' 2' 2' 2' 1)'                                     ExceptionInfo = exceptionInfo'                                     XapFilePath = "Test.xap"'                                                                               };                  };
Magic Number,StatLight.Core.Tests.Reporting.Providers.Xml,when_validating_the_XmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\Xml\XmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>                  {                      return new TestCaseResultServerEvent(resultType)                                 {                                     ClassName = "class_name"'                                     MethodName = "method_name"'                                     NamespaceName = "namespace.here"'                                     Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                                     Started = new DateTime(2009' 2' 2' 2' 2' 1)'                                     ExceptionInfo = exceptionInfo'                                     XapFilePath = "Test.xap"'                                                                               };                  };
Magic Number,StatLight.Core.Tests.Reporting.Providers.Xml,when_validating_the_XmlReport_is_correct,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\Xml\XmlReportTests.cs,Before_all_tests,The following statement contains a magic number: Func<ResultType' ExceptionInfo' TestCaseResultServerEvent> getResult = (resultType' exceptionInfo) =>                  {                      return new TestCaseResultServerEvent(resultType)                                 {                                     ClassName = "class_name"'                                     MethodName = "method_name"'                                     NamespaceName = "namespace.here"'                                     Finished = new DateTime(2009' 2' 2' 2' 2' 2)'                                     Started = new DateTime(2009' 2' 2' 2' 2' 1)'                                     ExceptionInfo = exceptionInfo'                                     XapFilePath = "Test.xap"'                                                                               };                  };
Magic Number,StatLight.Core.Tests.Reporting.Providers.TeamCity,when_verifying_protocol_for_teamcity_commands,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\TeamCity\TeamCityCommands.cs,should_be_able_to_create_a_testFinished_command,The following statement contains a magic number: long duration = 1000;
Magic Number,TestResultAggregatorTests,when_a_TestExecutionMethodPassedClientEvent_was_published,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Before_all_tests,The following statement contains a magic number: _testExecutionMethodPassedClientEvent = new TestExecutionMethodPassedClientEvent()                  {                      ClassName = "Class name test"'                      MethodName = "method name test"'                      NamespaceName = "namespace test"'                      Finished = new DateTime(2009' 1' 1' 1' 1' 1)'                      Started = new DateTime(2009' 1' 1' 1' 1' 2)'                  };
Magic Number,TestResultAggregatorTests,when_a_TestExecutionMethodPassedClientEvent_was_published,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Before_all_tests,The following statement contains a magic number: _testExecutionMethodPassedClientEvent = new TestExecutionMethodPassedClientEvent()                  {                      ClassName = "Class name test"'                      MethodName = "method name test"'                      NamespaceName = "namespace test"'                      Finished = new DateTime(2009' 1' 1' 1' 1' 1)'                      Started = new DateTime(2009' 1' 1' 1' 1' 2)'                  };
Magic Number,TestResultAggregatorTests,when_a_TestExecutionMethodPassedClientEvent_was_published,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Before_all_tests,The following statement contains a magic number: _testExecutionMethodPassedClientEvent = new TestExecutionMethodPassedClientEvent()                  {                      ClassName = "Class name test"'                      MethodName = "method name test"'                      NamespaceName = "namespace test"'                      Finished = new DateTime(2009' 1' 1' 1' 1' 1)'                      Started = new DateTime(2009' 1' 1' 1' 1' 2)'                  };
Magic Number,TestResultAggregatorTests,when_a_TestExecutionMethodFailedClientEvent_was_published,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Before_all_tests,The following statement contains a magic number: _testExecutionMethodFailedClientEvent = new TestExecutionMethodFailedClientEvent()                  {                      ClassName = "Class name test"'                      MethodName = "method name test"'                      NamespaceName = "namespace test"'                      Finished = new DateTime(2009' 1' 1' 1' 1' 1)'                      Started = new DateTime(2009' 1' 1' 1' 1' 2)'                      ExceptionInfo = new Exception("Hello world")'                  };
Magic Number,TestResultAggregatorTests,when_a_TestExecutionMethodFailedClientEvent_was_published,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Before_all_tests,The following statement contains a magic number: _testExecutionMethodFailedClientEvent = new TestExecutionMethodFailedClientEvent()                  {                      ClassName = "Class name test"'                      MethodName = "method name test"'                      NamespaceName = "namespace test"'                      Finished = new DateTime(2009' 1' 1' 1' 1' 1)'                      Started = new DateTime(2009' 1' 1' 1' 1' 2)'                      ExceptionInfo = new Exception("Hello world")'                  };
Magic Number,TestResultAggregatorTests,when_a_TestExecutionMethodFailedClientEvent_was_published,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\TestResultAggregatorTests.cs,Before_all_tests,The following statement contains a magic number: _testExecutionMethodFailedClientEvent = new TestExecutionMethodFailedClientEvent()                  {                      ClassName = "Class name test"'                      MethodName = "method name test"'                      NamespaceName = "namespace test"'                      Finished = new DateTime(2009' 1' 1' 1' 1' 1)'                      Started = new DateTime(2009' 1' 1' 1' 1' 2)'                      ExceptionInfo = new Exception("Hello world")'                  };
Magic Number,BrowserCommunicationTimeoutMonitorTests,with_a_BrowserCommunicationTimeoutMonitor,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Monitoring\BrowserCommunicationTimeoutMonitorTests.cs,PublishTimerFiredEvent,The following statement contains a magic number: MockTimer.Raise(t => t.Elapsed += null' new TimerWrapperElapsedEventArgs(DateTime.Now.AddSeconds(2)));
Magic Number,StatLight.Core.Tests.WebBrowser,ChromeWebBrowserTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebBrowser\ChromeWebBrowserTests.cs,WaitForAMoment,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,StatLight.Core.Tests.WebBrowser,FirefoxWebBrowserTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebBrowser\FirefoxWebBrowserTests.cs,WaitForAMoment,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,StatLight.Core.Tests.WebBrowser,SelfHostedWebBrowserTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebBrowser\SelfHostedWebBrowserTests.cs,Should_be_able_to_create_start_and_stop_the_SelfHostedWebBrowser,The following statement contains a magic number: const int count = 2;
Magic Number,StatLight.Core.Tests.WebBrowser,SelfHostedWebBrowserTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebBrowser\SelfHostedWebBrowserTests.cs,Should_be_able_to_create_start_and_stop_the_SelfHostedWebBrowser,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,StatLight.Core.Tests.WebServer.CustomHost,TestServiceEngineTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\CustomHost\TestServiceEngineTests.cs,Before_all_tests,The following statement contains a magic number: var webServerLocation = new WebServerLocation(TestLogger' 38881);
Magic Number,StatLight.Core.Tests.WebServer.CustomHost,TestServiceEngineTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\CustomHost\TestServiceEngineTests.cs,Before_all_tests,The following statement contains a magic number: _hostXap = new byte[] { 5' 4' 2' 1' 4 };
Magic Number,StatLight.Core.Tests.WebServer.CustomHost,TestServiceEngineTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\CustomHost\TestServiceEngineTests.cs,Before_all_tests,The following statement contains a magic number: _hostXap = new byte[] { 5' 4' 2' 1' 4 };
Magic Number,StatLight.Core.Tests.WebServer.CustomHost,TestServiceEngineTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\CustomHost\TestServiceEngineTests.cs,Before_all_tests,The following statement contains a magic number: _hostXap = new byte[] { 5' 4' 2' 1' 4 };
Magic Number,StatLight.Core.Tests.WebServer.CustomHost,TestServiceEngineTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\CustomHost\TestServiceEngineTests.cs,Before_all_tests,The following statement contains a magic number: _hostXap = new byte[] { 5' 4' 2' 1' 4 };
Magic Number,StatLight.Core.Tests.WebServer.PostHandlerTests,Double_test_run_should_signal_when_complete,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\PostHandlerTests\PostHandlerTests.cs,Before_all_tests,The following statement contains a magic number: HandleMessage(new SignalTestCompleteClientEvent() { BrowserInstanceId = 0' TotalMessagesPostedCount = 3 });
Magic Number,StatLight.Core.Tests.WebServer.PostHandlerTests,Double_test_run_should_signal_when_complete,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\PostHandlerTests\PostHandlerTests.cs,Before_all_tests,The following statement contains a magic number: HandleMessage(new SignalTestCompleteClientEvent() { BrowserInstanceId = 0' TotalMessagesPostedCount = 3 });
Magic Number,StatLight.Core.Tests.WebServer.PostHandlerTests,Double_test_run_should_signal_when_complete,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\PostHandlerTests\PostHandlerTests.cs,Total_completedMessagesSentCount_should_be_correct,The following statement contains a magic number: _testRunCompleteMessagesSentCount.ShouldEqual(2);
Magic Number,WebServerLocationTests,WebServerLocationTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\WebServerLocationTests.cs,when_the_8887_port_is_in_use_it_should_find_another_open_port,The following statement contains a magic number: portHog = new System.Net.Sockets.TcpClient(new System.Net.IPEndPoint(System.Net.IPAddress.Any' 8887));
Magic Number,WebServerLocationTests,WebServerLocationTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\WebServerLocationTests.cs,when_the_8887_port_is_in_use_it_should_find_another_open_port,The following statement contains a magic number: otherLocation.BaseUrl.Port.ShouldNotEqual(8887);
Magic Number,StatLight.Core.Tests.WebServer.XapInspection,XapRewriterTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapInspection\XapRewriterTests.cs,Before_all_tests,The following statement contains a magic number: originalXapUnderTest.AddTempFile("/Binaries/Microsoft.Silverlight.Testing.dll"' new byte[] { 1' 2 });
Magic Number,StatLight.Core.Tests.WebServer.XapInspection,XapRewriterTests,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapInspection\XapRewriterTests.cs,Before_all_tests,The following statement contains a magic number: originalXapUnderTest.AddTempFile("/Binaries/Microsoft.VisualStudio.QualityTools.UnitTesting.Silverlight.dll"' new byte[] { 1' 2 });
Magic Number,StatLight.Core.Tests.WebServer.XapInspection,Extensions,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\WebServer\XapInspection\XapRewriterTests.cs,AddTempFile,The following statement contains a magic number: value = new byte[] { 1' 2 };
Magic Number,XapMonitorTests,should_1,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Monitoring\XapFileMonitoring\XapWatcherTests.cs,Should_raise_file_refreshed_event_when_existing_file_changes,The following statement contains a magic number: System.Threading.Thread.Sleep(1000);
Magic Number,XapMonitorTests,should_2,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Monitoring\XapFileMonitoring\XapWatcherTests.cs,when_simulating_a_build_the_changed_event_should_only_be_raised_once_in_a_short_amount_of_time,The following statement contains a magic number: System.Threading.Thread.Sleep(50);
Duplicate Code,StatLight.Core.Tests.Reporting.Providers.MSTestTRX,MockGuidSequenceGenerator,D:\research\architectureSmells\repos1\staxmanade_StatLight\src\StatLight.Core.Tests\Reporting\Providers\MSTestTRX\TRXReportTests.cs,MockGuidSequenceGenerator,The method contains a code clone-set at the following line numbers (starting from the method definition): ((12' 31)' (13' 32))
