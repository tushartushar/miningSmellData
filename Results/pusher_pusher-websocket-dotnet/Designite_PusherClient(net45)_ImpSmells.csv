Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PusherClient,Connection,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Connection.cs,websocket_MessageReceived,Cyclomatic complexity of the method is 9
Long Identifier,PusherClient,Constants,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Constants.cs,,The length of the parameter CHANNEL_SUBSCRIPTION_SUCCEEDED is 30.
Long Statement,PusherClient,Connection,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Connection.cs,Send,The length of the statement  "            Pusher.Trace.TraceEvent(TraceEventType.Information' 0' "Did not send: " + message + "' as there is not active connection."); " is 124.
Long Statement,PusherClient,Connection,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Connection.cs,websocket_MessageReceived,The length of the statement  "            // good: "{\"event\":\"pusher:error\"'\"data\":\"{\\\"code\\\":4201'\\\"message\\\":\\\"Pong reply not received\\\"}\"}"; " is 121.
Long Statement,PusherClient,Connection,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Connection.cs,websocket_MessageReceived,The length of the statement  "                        Pusher.Trace.TraceEvent(TraceEventType.Warning' 0' "Received a presence event on channel '" + message.channel + "'' however there is no presence channel which matches."); " is 170.
Long Statement,PusherClient,Connection,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Connection.cs,websocket_MessageReceived,The length of the statement  "                        Pusher.Trace.TraceEvent(TraceEventType.Warning' 0' "Received a presence event on channel '" + message.channel + "'' however there is no presence channel which matches."); " is 170.
Long Statement,PusherClient,Pusher,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Pusher.cs,SubscribeAsync,The length of the statement  "                //Trace.TraceEvent(TraceEventType.Warning' 0' "Channel '" + channelName + "' is already subscribed to. Subscription event has been ignored."); " is 142.
Long Statement,PusherClient,Pusher,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Pusher.cs,SubscribePresenceAsync,The length of the statement  "                        throw new InvalidOperationException($"Cannot change channel member type; was previously defined as {existing.Item1.Name}"); " is 123.
Long Statement,PusherClient,Pusher,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Pusher.cs,SubscribePresenceAsync,The length of the statement  "                    throw new InvalidOperationException("This presence channel has already been created without specifying the member info type"); " is 126.
Long Statement,PusherClient,Pusher,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Pusher.cs,SubscribeToChannel,The length of the statement  "                    await _connection.Send(JsonConvert.SerializeObject(new { @event = Constants.CHANNEL_SUBSCRIBE' data = new { channel = channelName' auth = message.auth' channel_data = message.channel_data } })); " is 194.
Long Statement,PusherClient,Pusher,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Pusher.cs,SubscribeToChannel,The length of the statement  "                    await _connection.Send(JsonConvert.SerializeObject(new { @event = Constants.CHANNEL_SUBSCRIBE' data = new { channel = channelName } })); " is 136.
Long Statement,PusherClient,Pusher,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Pusher.cs,AuthEndpointCheck,The length of the statement  "                var pusherException = new PusherException("You must set a ChannelAuthorizer property to use private or presence channels"' ErrorCodes.ChannelAuthorizerNotSet); " is 159.
Long Statement,PusherClient,Pusher,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Pusher.cs,AlreadySubscribed,The length of the statement  "            return _pendingChannelSubscriptions.Contains(channelName) || (Channels.ContainsKey(channelName) && Channels[channelName].IsSubscribed); " is 135.
Missing Default,PusherClient,Connection,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Connection.cs,websocket_MessageReceived,The following switch statement is missing a default case: switch (message.@event)                  {                      // TODO - Need to handle Error on subscribing to a channel                        case Constants.ERROR:                          ParseError(message.data);                          break;                        case Constants.CONNECTION_ESTABLISHED:                          ParseConnectionEstablished(message.data);                          break;                        case Constants.CHANNEL_SUBSCRIPTION_SUCCEEDED:                          _pusher.SubscriptionSuceeded(message.channel' message.data);                          break;                        case Constants.CHANNEL_SUBSCRIPTION_ERROR:                          RaiseError(new PusherException("Error received on channel subscriptions: " + e.Message' ErrorCodes.SubscriptionError));                          break;                        case Constants.CHANNEL_MEMBER_ADDED:                          _pusher.AddMember(message.channel' message.data);                            Pusher.Trace.TraceEvent(TraceEventType.Warning' 0' "Received a presence event on channel '" + message.channel + "'' however there is no presence channel which matches.");                          break;                        case Constants.CHANNEL_MEMBER_REMOVED:                          _pusher.RemoveMember(message.channel' message.data);                            Pusher.Trace.TraceEvent(TraceEventType.Warning' 0' "Received a presence event on channel '" + message.channel + "'' however there is no presence channel which matches.");                          break;                  }
Missing Default,PusherClient,Pusher,C:\research\architectureSmells\repos\pusher_pusher-websocket-dotnet\PusherClient\Pusher.cs,CreateChannel,The following switch statement is missing a default case: switch (type)              {                  case ChannelTypes.Public:                      Channels[channelName] = new Channel(channelName' this);                      break;                  case ChannelTypes.Private:                      AuthEndpointCheck();                      Channels[channelName] = new PrivateChannel(channelName' this);                      break;                  case ChannelTypes.Presence:                      AuthEndpointCheck();                        Channel channel;                      if (_presenceChannelFactories.TryGetValue(channelName' out var factory))                          channel = factory.Item2();                      else                          channel = new PresenceChannel(channelName' this);                        Channels[channelName] = channel;                      break;              }
