Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DirectShowVideoCapture,frmSetupDialog,C:\repos\hpavlov_video.directshowvideocapture\frmSetupDialog.cs,LoadSettings,Cyclomatic complexity of the method is 8
Complex Method,DirectShowVideoCapture.VideoCaptureImpl,CrossbarHelper,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\CrossbarHelper.cs,IsVideoPin,Cyclomatic complexity of the method is 13
Complex Method,DirectShowVideoCapture.VideoCaptureImpl,CrossbarHelper,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\CrossbarHelper.cs,GetPhysicalPinName,Cyclomatic complexity of the method is 24
Long Parameter List,DirectShowVideoCapture.Koyash,NativeHelpers,C:\repos\hpavlov_video.directshowvideocapture\Koyash\NativeHelpers.cs,GetBitmapPixels,The method has 5 parameters.
Long Parameter List,DirectShowVideoCapture.Koyash,NativeHelpers,C:\repos\hpavlov_video.directshowvideocapture\Koyash\NativeHelpers.cs,GetColourBitmapPixels,The method has 5 parameters.
Long Parameter List,DirectShowVideoCapture.Koyash,NativeHelpers,C:\repos\hpavlov_video.directshowvideocapture\Koyash\NativeHelpers.cs,GetMonochromePixelsFromBitmap,The method has 6 parameters.
Long Parameter List,DirectShowVideoCapture.Koyash,NativeHelpers,C:\repos\hpavlov_video.directshowvideocapture\Koyash\NativeHelpers.cs,GetColourPixelsFromBitmap,The method has 5 parameters.
Long Parameter List,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,OleCreatePropertyFrame,The method has 11 parameters.
Long Parameter List,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,SetupFileRecorderGraph,The method has 6 parameters.
Long Parameter List,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,SetupGraphInternal,The method has 6 parameters.
Long Parameter List,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,SetConfigParms,The method has 5 parameters.
Long Statement,DirectShowVideoCapture,frmSetupDialog,C:\repos\hpavlov_video.directshowvideocapture\frmSetupDialog.cs,frmSetupDialog_Load,The length of the statement  "	AssemblyFileVersionAttribute attr = (AssemblyFileVersionAttribute)Assembly.GetExecutingAssembly ().GetCustomAttributes (typeof(AssemblyFileVersionAttribute)' true) [0]; " is 168.
Long Statement,DirectShowVideoCapture,frmSetupDialog,C:\repos\hpavlov_video.directshowvideocapture\frmSetupDialog.cs,LoadSettings,The length of the statement  "		RadioButton rbCodec = gbxCompression.Controls.Cast<Control> ().SingleOrDefault (x => x is RadioButton && string.Equals (x.Text' codec.DeviceName.ToString ())) as RadioButton; " is 174.
Long Statement,DirectShowVideoCapture,frmSetupDialog,C:\repos\hpavlov_video.directshowvideocapture\frmSetupDialog.cs,LoadSettings,The length of the statement  "	foreach (DsDevice ds in DsDevice.GetDevicesOfCat (FilterCategory.VideoCompressorCategory).Where (x => systemCodecs.All (y => y.DeviceName != x.Name))) { " is 152.
Long Statement,DirectShowVideoCapture,frmSetupDialog,C:\repos\hpavlov_video.directshowvideocapture\frmSetupDialog.cs,LoadSettings,The length of the statement  "			throw new HorusDriverException (string.Format ("Unable to configure driver. The linked device '{0}' is not avavilable."' DriverSettings.Instance.DeviceName)); " is 158.
Long Statement,DirectShowVideoCapture,frmSetupDialog,C:\repos\hpavlov_video.directshowvideocapture\frmSetupDialog.cs,SaveSettings,The length of the statement  "		RadioButton rbCodec = gbxCompression.Controls.Cast<Control> ().SingleOrDefault (x => x is RadioButton && ((RadioButton)x).Checked) as RadioButton; " is 146.
Long Statement,DirectShowVideoCapture,VideoDriver,C:\repos\hpavlov_video.directshowvideocapture\VideoDriver.cs,StartRecordingVideoFile,The length of the statement  "			throw new InvalidOperationException ("The current state of the video camera doesn't allow a recording operation to begin right now."); " is 134.
Long Statement,DirectShowVideoCapture,VideoDriver,C:\repos\hpavlov_video.directshowvideocapture\VideoDriver.cs,StartRecordingVideoFile,The length of the statement  "			throw new HorusDriverException (string.Format ("File '{0}' already exists. Video can be recorded only in a non existing file."' PreferredFileName)); " is 148.
Long Statement,DirectShowVideoCapture.Koyash,CameraImage,C:\repos\hpavlov_video.directshowvideocapture\Koyash\CameraImage.cs,GetPixel,The length of the statement  "		throw new InvalidOperationException ("Use the GetPixel(int' int' int) overload to get a pixel value in a colour image."); " is 121.
Long Statement,DirectShowVideoCapture.Koyash,CameraImage,C:\repos\hpavlov_video.directshowvideocapture\Koyash\CameraImage.cs,GetPixel,The length of the statement  "		throw new InvalidOperationException ("Use the GetPixel(int' int) overload to get a pixel value in a monochrome image."); " is 120.
Long Statement,DirectShowVideoCapture.VideoCaptureImpl,CrossbarHelper,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\CrossbarHelper.cs,FindVideoDecoderOutputPin,The length of the statement  "			Trace.WriteLine (string.Format ("Crossbar Output Pin {0}: '{1}' routed to pin {2}"' i' GetPhysicalPinName (connectorType)' inputPinIndex)); " is 139.
Long Statement,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,SetupGraphInternal,The length of the statement  "		else if (compressor.Codec == SupportedCodec.XviD || compressor.Codec == SupportedCodec.HuffYuv211 || compressor.Codec == SupportedCodec.Unsupported) { " is 150.
Long Statement,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,BuildFileCaptureGraph_WithCodec,The length of the statement  "	// Capture Source (Capture/Video) --> (Input) Smart Tee (Capture) --> (Input) Video Compressor (Output) --> (Input 01/Video/) AVI Mux (Output) --> (In) FileSink " is 160.
Long Statement,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,BuildFileCaptureGraph_WithCodec,The length of the statement  "	//                                                       (Preview)--> [AVI Decompressor] --> (Input) Sample Grabber (Output) --> (In) Null Renderer " is 147.
Long Statement,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,SetConfigParms,The length of the statement  "	int hr = capBuilder.FindInterface (PinCategory.Capture' MediaType.Video' capFilter' typeof(IAMStreamConfig).GUID' out o); " is 121.
Long Statement,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,BufferCB,The length of the statement  "		// TODO: Investigate 'pinning' the unamaged pBuffer pointer rather than copying it. This would speed up things dramatically " is 123.
Long Statement,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,DisplayPropertyPage,The length of the statement  "	hr = OleCreatePropertyFrame (hwndOwner' 0' 0' filterInfo.achName' 1' ref oDevice' caGUID.cElems' caGUID.pElems' 0' 0' IntPtr.Zero); " is 131.
Long Statement,DirectShowVideoCapture.VideoCaptureImpl,VideoCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\VideoCapture.cs,GetCurrentFrame,The length of the statement  "			object pixels = cameraImageHelper.GetImageArray (bmp' SimulatedSensorType' (LumaConversionMode)DriverSettings.Instance.MonochromePixelsType); " is 141.
Long Statement,DirectShowVideoCapture.VideoCaptureImpl,VideoCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\VideoCapture.cs,StartRecordingVideoFile,The length of the statement  "	dsCapture.SetupFileRecorderGraph (videoInputDevice' videoCompressor' ref frameRate' ref imageWidth' ref imageHeight' preferredFileName); " is 136.
Long Statement,DirectShowVideoCapture.VideoCaptureImpl,VideoCodecs,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\VideoCodecs.cs,GetSupportedVideoCodec,The length of the statement  "	DsDevice unsupportedCodec = DsDevice.GetDevicesOfCat (FilterCategory.VideoCompressorCategory).FirstOrDefault (x => x.Name == codecName); " is 136.
Magic Number,DirectShowVideoCapture,frmSetupDialog,C:\repos\hpavlov_video.directshowvideocapture\frmSetupDialog.cs,BrowseToAscom,The following statement contains a magic number: try {  	System.Diagnostics.Process.Start ("http://ascom-standards.org/");  }  catch (System.ComponentModel.Win32Exception noBrowser) {  	if (noBrowser.ErrorCode == -2147467259)  		MessageBox.Show (noBrowser.Message);  }  catch (System.Exception other) {  	MessageBox.Show (other.Message);  }  
Magic Number,DirectShowVideoCapture,frmSetupDialog,C:\repos\hpavlov_video.directshowvideocapture\frmSetupDialog.cs,BrowseToAscom,The following statement contains a magic number: if (noBrowser.ErrorCode == -2147467259)  	MessageBox.Show (noBrowser.Message);  
Magic Number,DirectShowVideoCapture,VideoDriver,C:\repos\hpavlov_video.directshowvideocapture\VideoDriver.cs,GetCameraExposureFromFrameRate,The following statement contains a magic number: return 1000.0 / camera.FrameRate;  
Magic Number,DirectShowVideoCapture,VideoFrame,C:\repos\hpavlov_video.directshowvideocapture\VideoFrame.cs,CreateFrame,The following statement contains a magic number: if (cameraFrame.ImageLayout == VideoFrameLayout.Monochrome) {  	rv.pixels = new int[height' width];  	rv.pixels = (int['])cameraFrame.Pixels;  }  else if (cameraFrame.ImageLayout == VideoFrameLayout.Color) {  	rv.pixels = new int[height' width' 3];  	rv.pixels = (int[''])cameraFrame.Pixels;  }  else if (cameraFrame.ImageLayout == VideoFrameLayout.BayerRGGB) {  	throw new NotSupportedException ();  }  else  	throw new NotSupportedException ();  
Magic Number,DirectShowVideoCapture,VideoFrame,C:\repos\hpavlov_video.directshowvideocapture\VideoFrame.cs,CreateFrame,The following statement contains a magic number: if (cameraFrame.ImageLayout == VideoFrameLayout.Color) {  	rv.pixels = new int[height' width' 3];  	rv.pixels = (int[''])cameraFrame.Pixels;  }  else if (cameraFrame.ImageLayout == VideoFrameLayout.BayerRGGB) {  	throw new NotSupportedException ();  }  else  	throw new NotSupportedException ();  
Magic Number,DirectShowVideoCapture,VideoFrame,C:\repos\hpavlov_video.directshowvideocapture\VideoFrame.cs,CreateFrame,The following statement contains a magic number: rv.pixels = new int[height' width' 3];  
Magic Number,DirectShowVideoCapture.Koyash,CameraImage,C:\repos\hpavlov_video.directshowvideocapture\Koyash\CameraImage.cs,SetImageArray,The following statement contains a magic number: if (sensorType == SensorType.Monochrome) {  	if (imageArray is int[']) {  		intPixelArray = (int['])imageArray;  		isColumnMajor = intPixelArray.GetLength (0) == imageWidth;  		isRowMajor = intPixelArray.GetLength (0) == imageHeight;  		return;  	}  	else if (imageArray is object[']) {  		objPixelArray = (object['])imageArray;  		isColumnMajor = objPixelArray.GetLength (0) == imageWidth;  		isRowMajor = objPixelArray.GetLength (0) == imageHeight;  		return;  	}  }  else {  	// Color sensor type is represented as 3-dimentional array that can be either: [3' height' width]' [width' height' 3]  	if (imageArray is int['']) {  		intColourPixelArray = (int[''])imageArray;  		isColumnMajor = intColourPixelArray.GetLength (0) == imageWidth;  		isRowMajor = intColourPixelArray.GetLength (0) == 3;  		return;  	}  	else if (imageArray is object['']) {  		objColourPixelArray = (object[''])imageArray;  		isColumnMajor = objColourPixelArray.GetLength (0) == imageWidth;  		isRowMajor = objColourPixelArray.GetLength (0) == 3;  		return;  	}  }  
Magic Number,DirectShowVideoCapture.Koyash,CameraImage,C:\repos\hpavlov_video.directshowvideocapture\Koyash\CameraImage.cs,SetImageArray,The following statement contains a magic number: if (sensorType == SensorType.Monochrome) {  	if (imageArray is int[']) {  		intPixelArray = (int['])imageArray;  		isColumnMajor = intPixelArray.GetLength (0) == imageWidth;  		isRowMajor = intPixelArray.GetLength (0) == imageHeight;  		return;  	}  	else if (imageArray is object[']) {  		objPixelArray = (object['])imageArray;  		isColumnMajor = objPixelArray.GetLength (0) == imageWidth;  		isRowMajor = objPixelArray.GetLength (0) == imageHeight;  		return;  	}  }  else {  	// Color sensor type is represented as 3-dimentional array that can be either: [3' height' width]' [width' height' 3]  	if (imageArray is int['']) {  		intColourPixelArray = (int[''])imageArray;  		isColumnMajor = intColourPixelArray.GetLength (0) == imageWidth;  		isRowMajor = intColourPixelArray.GetLength (0) == 3;  		return;  	}  	else if (imageArray is object['']) {  		objColourPixelArray = (object[''])imageArray;  		isColumnMajor = objColourPixelArray.GetLength (0) == imageWidth;  		isRowMajor = objColourPixelArray.GetLength (0) == 3;  		return;  	}  }  
Magic Number,DirectShowVideoCapture.Koyash,CameraImage,C:\repos\hpavlov_video.directshowvideocapture\Koyash\CameraImage.cs,SetImageArray,The following statement contains a magic number: if (imageArray is int['']) {  	intColourPixelArray = (int[''])imageArray;  	isColumnMajor = intColourPixelArray.GetLength (0) == imageWidth;  	isRowMajor = intColourPixelArray.GetLength (0) == 3;  	return;  }  else if (imageArray is object['']) {  	objColourPixelArray = (object[''])imageArray;  	isColumnMajor = objColourPixelArray.GetLength (0) == imageWidth;  	isRowMajor = objColourPixelArray.GetLength (0) == 3;  	return;  }  
Magic Number,DirectShowVideoCapture.Koyash,CameraImage,C:\repos\hpavlov_video.directshowvideocapture\Koyash\CameraImage.cs,SetImageArray,The following statement contains a magic number: if (imageArray is int['']) {  	intColourPixelArray = (int[''])imageArray;  	isColumnMajor = intColourPixelArray.GetLength (0) == imageWidth;  	isRowMajor = intColourPixelArray.GetLength (0) == 3;  	return;  }  else if (imageArray is object['']) {  	objColourPixelArray = (object[''])imageArray;  	isColumnMajor = objColourPixelArray.GetLength (0) == imageWidth;  	isRowMajor = objColourPixelArray.GetLength (0) == 3;  	return;  }  
Magic Number,DirectShowVideoCapture.Koyash,CameraImage,C:\repos\hpavlov_video.directshowvideocapture\Koyash\CameraImage.cs,SetImageArray,The following statement contains a magic number: isRowMajor = intColourPixelArray.GetLength (0) == 3;  
Magic Number,DirectShowVideoCapture.Koyash,CameraImage,C:\repos\hpavlov_video.directshowvideocapture\Koyash\CameraImage.cs,SetImageArray,The following statement contains a magic number: if (imageArray is object['']) {  	objColourPixelArray = (object[''])imageArray;  	isColumnMajor = objColourPixelArray.GetLength (0) == imageWidth;  	isRowMajor = objColourPixelArray.GetLength (0) == 3;  	return;  }  
Magic Number,DirectShowVideoCapture.Koyash,CameraImage,C:\repos\hpavlov_video.directshowvideocapture\Koyash\CameraImage.cs,SetImageArray,The following statement contains a magic number: isRowMajor = objColourPixelArray.GetLength (0) == 3;  
Magic Number,DirectShowVideoCapture.Koyash,NativeHelpers,C:\repos\hpavlov_video.directshowvideocapture\Koyash\NativeHelpers.cs,GetMonochromePixelsFromBitmap,The following statement contains a magic number: try {  	GetMonochromePixelsFromBitmap (bitmap.Width' bitmap.Height' 8' hBitmap' bitmapBytes' (int)conversionMode);  }  finally {  	DeleteObject (hBitmap);  }  
Magic Number,DirectShowVideoCapture.Koyash,NativeHelpers,C:\repos\hpavlov_video.directshowvideocapture\Koyash\NativeHelpers.cs,GetMonochromePixelsFromBitmap,The following statement contains a magic number: GetMonochromePixelsFromBitmap (bitmap.Width' bitmap.Height' 8' hBitmap' bitmapBytes' (int)conversionMode);  
Magic Number,DirectShowVideoCapture.Koyash,NativeHelpers,C:\repos\hpavlov_video.directshowvideocapture\Koyash\NativeHelpers.cs,GetColourPixelsFromBitmap,The following statement contains a magic number: try {  	GetColourPixelsFromBitmap (bitmap.Width' bitmap.Height' 8' hBitmap' bitmapBytes);  }  finally {  	DeleteObject (hBitmap);  }  
Magic Number,DirectShowVideoCapture.Koyash,NativeHelpers,C:\repos\hpavlov_video.directshowvideocapture\Koyash\NativeHelpers.cs,GetColourPixelsFromBitmap,The following statement contains a magic number: GetColourPixelsFromBitmap (bitmap.Width' bitmap.Height' 8' hBitmap' bitmapBytes);  
Magic Number,DirectShowVideoCapture.Koyash,NativeHelpers,C:\repos\hpavlov_video.directshowvideocapture\Koyash\NativeHelpers.cs,PrepareBitmapForDisplay,The following statement contains a magic number: GetBitmapPixels (width' height' (int)8' pixels' rawBitmapBytes);  
Magic Number,DirectShowVideoCapture.Koyash,NativeHelpers,C:\repos\hpavlov_video.directshowvideocapture\Koyash\NativeHelpers.cs,PrepareColourBitmapForDisplay,The following statement contains a magic number: GetColourBitmapPixels (width' height' (int)8' pixels' rawBitmapBytes);  
Magic Number,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,SaveSizeInfo,The following statement contains a magic number: stride = videoWidth * (videoInfoHeader.BmiHeader.BitCount / 8);  
Magic Number,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,SetConfigParms,The following statement contains a magic number: try {  	if (videoStreamConfig == null) {  		throw new Exception ("Failed to get IAMStreamConfig");  	}  	hr = videoStreamConfig.GetFormat (out media);  	DsError.ThrowExceptionForHR (hr);  	// Copy out the videoinfoheader  	VideoInfoHeader v = new VideoInfoHeader ();  	Marshal.PtrToStructure (media.formatPtr' v);  	// If overriding the framerate' set the frame rate  	if (iFrameRate > 0) {  		v.AvgTimePerFrame = (int)Math.Round (10000000 / iFrameRate);  	}  	else  		iFrameRate = 10000000 / v.AvgTimePerFrame;  	// If overriding the width' set the width  	if (iWidth > 0) {  		v.BmiHeader.Width = iWidth;  	}  	else  		iWidth = v.BmiHeader.Width;  	// If overriding the Height' set the Height  	if (iHeight > 0) {  		v.BmiHeader.Height = iHeight;  	}  	else  		iHeight = v.BmiHeader.Height;  	// Copy the media structure back  	Marshal.StructureToPtr (v' media.formatPtr' false);  	// Set the new format  	hr = videoStreamConfig.SetFormat (media);  	DsError.ThrowExceptionForHR (hr);  	DsUtils.FreeAMMediaType (media);  	media = null;  	// Fix upsidedown video  	if (videoControl != null) {  		VideoControlFlags pCapsFlags;  		IPin pPin = DsFindPin.ByCategory (capFilter' PinCategory.Capture' 0);  		hr = videoControl.GetCaps (pPin' out pCapsFlags);  		DsError.ThrowExceptionForHR (hr);  		if ((pCapsFlags & VideoControlFlags.FlipVertical) > 0) {  			hr = videoControl.GetMode (pPin' out pCapsFlags);  			DsError.ThrowExceptionForHR (hr);  			hr = videoControl.SetMode (pPin' pCapsFlags & ~VideoControlFlags.FlipVertical);  			DsError.ThrowExceptionForHR (hr);  		}  	}  }  finally {  	Marshal.ReleaseComObject (videoStreamConfig);  }  
Magic Number,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,SetConfigParms,The following statement contains a magic number: try {  	if (videoStreamConfig == null) {  		throw new Exception ("Failed to get IAMStreamConfig");  	}  	hr = videoStreamConfig.GetFormat (out media);  	DsError.ThrowExceptionForHR (hr);  	// Copy out the videoinfoheader  	VideoInfoHeader v = new VideoInfoHeader ();  	Marshal.PtrToStructure (media.formatPtr' v);  	// If overriding the framerate' set the frame rate  	if (iFrameRate > 0) {  		v.AvgTimePerFrame = (int)Math.Round (10000000 / iFrameRate);  	}  	else  		iFrameRate = 10000000 / v.AvgTimePerFrame;  	// If overriding the width' set the width  	if (iWidth > 0) {  		v.BmiHeader.Width = iWidth;  	}  	else  		iWidth = v.BmiHeader.Width;  	// If overriding the Height' set the Height  	if (iHeight > 0) {  		v.BmiHeader.Height = iHeight;  	}  	else  		iHeight = v.BmiHeader.Height;  	// Copy the media structure back  	Marshal.StructureToPtr (v' media.formatPtr' false);  	// Set the new format  	hr = videoStreamConfig.SetFormat (media);  	DsError.ThrowExceptionForHR (hr);  	DsUtils.FreeAMMediaType (media);  	media = null;  	// Fix upsidedown video  	if (videoControl != null) {  		VideoControlFlags pCapsFlags;  		IPin pPin = DsFindPin.ByCategory (capFilter' PinCategory.Capture' 0);  		hr = videoControl.GetCaps (pPin' out pCapsFlags);  		DsError.ThrowExceptionForHR (hr);  		if ((pCapsFlags & VideoControlFlags.FlipVertical) > 0) {  			hr = videoControl.GetMode (pPin' out pCapsFlags);  			DsError.ThrowExceptionForHR (hr);  			hr = videoControl.SetMode (pPin' pCapsFlags & ~VideoControlFlags.FlipVertical);  			DsError.ThrowExceptionForHR (hr);  		}  	}  }  finally {  	Marshal.ReleaseComObject (videoStreamConfig);  }  
Magic Number,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,SetConfigParms,The following statement contains a magic number: if (iFrameRate > 0) {  	v.AvgTimePerFrame = (int)Math.Round (10000000 / iFrameRate);  }  else  	iFrameRate = 10000000 / v.AvgTimePerFrame;  
Magic Number,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,SetConfigParms,The following statement contains a magic number: if (iFrameRate > 0) {  	v.AvgTimePerFrame = (int)Math.Round (10000000 / iFrameRate);  }  else  	iFrameRate = 10000000 / v.AvgTimePerFrame;  
Magic Number,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,SetConfigParms,The following statement contains a magic number: v.AvgTimePerFrame = (int)Math.Round (10000000 / iFrameRate);  
Magic Number,DirectShowVideoCapture.VideoCaptureImpl,DirectShowCapture,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\DirectShowCapture.cs,SetConfigParms,The following statement contains a magic number: iFrameRate = 10000000 / v.AvgTimePerFrame;  
Missing Default,DirectShowVideoCapture.VideoCaptureImpl,CrossbarHelper,C:\repos\hpavlov_video.directshowvideocapture\VideoCaptureImpl\CrossbarHelper.cs,IsVideoPin,The following switch statement is missing a default case: switch (connectorType) {  case PhysicalConnectorType.Video_Tuner:  case PhysicalConnectorType.Video_Composite:  case PhysicalConnectorType.Video_SVideo:  case PhysicalConnectorType.Video_RGB:  case PhysicalConnectorType.Video_YRYBY:  case PhysicalConnectorType.Video_SerialDigital:  case PhysicalConnectorType.Video_ParallelDigital:  case PhysicalConnectorType.Video_SCSI:  case PhysicalConnectorType.Video_AUX:  case PhysicalConnectorType.Video_1394:  case PhysicalConnectorType.Video_USB:  case PhysicalConnectorType.Video_VideoDecoder:  case PhysicalConnectorType.Video_VideoEncoder:  	return true;  }  
