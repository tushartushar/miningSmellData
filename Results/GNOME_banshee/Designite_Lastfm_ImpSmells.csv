Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Lastfm,RadioConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\RadioConnection.cs,ErrorMessageFor,Cyclomatic complexity of the method is 21
Complex Method,Lastfm,AudioscrobblerConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\AudioscrobblerConnection.cs,StateTransitionHandler,Cyclomatic complexity of the method is 8
Long Parameter List,Lastfm,AudioscrobblerConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\AudioscrobblerConnection.cs,NowPlaying,The method has 5 parameters. Parameters: artist' title' album' duration' tracknum
Long Parameter List,Lastfm,AudioscrobblerConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\AudioscrobblerConnection.cs,NowPlaying,The method has 6 parameters. Parameters: artist' title' album' duration' tracknum' mbrainzid
Long Statement,Lastfm,Account,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\Account.cs,RequestAuthorization,The length of the statement  "                Browser.Open (String.Format ("http://www.last.fm/api/auth?api_key={0}&token={1}"' LastfmCore.ApiKey' authentication_token)); " is 124.
Long Statement,Lastfm,RadioConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\RadioConnection.cs,LoadPlaylistFor,The length of the statement  "                LastfmRequest radio_playlist = new LastfmRequest ("radio.getPlaylist"' RequestType.AuthenticatedRead' ResponseFormat.Raw); " is 122.
Long Statement,Lastfm,RadioConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\RadioConnection.cs,PostTrackRequest,The length of the statement  "            LastfmRequest track_request = new LastfmRequest (String.Concat ("track."' method)' RequestType.Write' ResponseFormat.Raw); " is 122.
Long Statement,Lastfm.Data,DataCore,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm.Data\DataCore.cs,Initialize,The length of the statement  "                    throw new NotSupportedException ("Lastfm.Data.DataCore.CachePath and/or Lastfm.Data.DataCore.Useragent are null.  Applications must set this value."); " is 150.
Empty Catch Block,Lastfm,RadioConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\RadioConnection.cs,LoadPlaylistFor,The method has an empty catch block.
Empty Catch Block,Lastfm.Data,DataEntry,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm.Data\DataEntry.cs,Get,The method has an empty catch block.
Magic Number,Lastfm,AudioscrobblerConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\AudioscrobblerConnection.cs,StateTransitionHandler,The following statement contains a magic number: (state == State.Idle || state == State.NeedTransmit) && hard_failures > 2
Magic Number,Lastfm,AudioscrobblerConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\AudioscrobblerConnection.cs,TransmitQueue,The following statement contains a magic number: track == null ||                      // Last.fm can technically handle up to 50 songs in one request                      // but let's not use the top limit                      trackCount == 40
Magic Number,Lastfm,LastfmRequest,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\LastfmRequest.cs,CheckSize,The following statement contains a magic number: target_length += 9 + 32;
Magic Number,Lastfm,LastfmRequest,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\LastfmRequest.cs,CheckSize,The following statement contains a magic number: target_length += 9 + 32;
Magic Number,Lastfm,LastfmRequest,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\LastfmRequest.cs,Get,The following statement contains a magic number: request.Timeout = 10000;
Magic Number,Lastfm,LastfmRequest,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\LastfmRequest.cs,Post,The following statement contains a magic number: request.Timeout = 10000;
Magic Number,Lastfm.Data,DataCore,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm.Data\DataCore.cs,DownloadContent,The following statement contains a magic number: byte [] buffer = new byte[8192];
Magic Number,Lastfm.Data,DataCore,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm.Data\DataCore.cs,GetCachedPathFromUrl,The following statement contains a magic number: return Path.Combine (Path.Combine (DataCore.CachePath' hash.Substring (0' 2))' hash);
Magic Number,Lastfm.Data,DataCore,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm.Data\DataCore.cs,GetCachedPathFromUrl,The following statement contains a magic number: hash.Length > 2
Magic Number,Lastfm.Data,DataCore,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm.Data\DataCore.cs,FixLastfmUrl,The following statement contains a magic number: url = url.Insert (7' "static3.last.fm");
Magic Number,Lastfm.Data,DataCore,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm.Data\DataCore.cs,SetupCache,The following statement contains a magic number: i < 16
Magic Number,Lastfm.Data,DataCore,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm.Data\DataCore.cs,SetupCache,The following statement contains a magic number: i < 256
Missing Default,Lastfm,RadioConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\RadioConnection.cs,ErrorMessageFor,The following switch statement is missing a default case: switch (error) {                  case StationError.InvalidService:                  case StationError.InvalidMethod:                      return Catalog.GetString ("This service does not exist.");                  case StationError.AuthenticationFailed:                  case StationError.SubscriptionError:                  case StationError.SubscriptionRequired:                      return Catalog.GetString ("Stations are only available to paying Last.fm subscribers.");                  case StationError.InvalidFormat:                      return Catalog.GetString ("This station is not available.");                  case StationError.InvalidParameters:                      return Catalog.GetString ("The request is missing a required parameter.");                  case StationError.InvalidResource:                      return Catalog.GetString ("The specified resource is invalid.");                  case StationError.TokenFailure:                      return Catalog.GetString ("Server error' please try again later.");                  case StationError.InvalidSessionKey:                      return Catalog.GetString ("Invalid authentication information' please re-authenticate.");                  case StationError.InvalidApiKey:                      return Catalog.GetString ("The API key used by this application is invalid.");                  case StationError.ServiceOffline:                      return Catalog.GetString ("The streaming system is offline for maintenance' please try again later.");                  case StationError.InvalidSignature:                      return Catalog.GetString ("The method signature is invalid.");                  case StationError.TokenNotAuthorized:                  case StationError.ExpiredToken:                      return Catalog.GetString ("You need to allow Banshee to access your Last.fm account.");                  case StationError.NotEnoughContent:                      return Catalog.GetString ("There is not enough content to play this station.");                  case StationError.NotEnoughMembers:                      return Catalog.GetString ("This group does not have enough members for radio.");                  case StationError.NotEnoughFans:                      return Catalog.GetString ("This artist does not have enough fans for radio.");                  case StationError.NotEnoughNeighbours:                      return Catalog.GetString ("There are not enough neighbours for this station.");                  case StationError.NoPeakRadio:                      return Catalog.GetString ("This user is not allowed to listen to radio during peak usage");                  case StationError.RadioNotFound:                      return Catalog.GetString ("Radio station not found");                  case StationError.ApiKeySuspended:                      return Catalog.GetString ("This application is not allowed to make requests to the web services");                  case StationError.Deprecated:                      return Catalog.GetString ("This type of request is no longer supported");                  case StationError.RateLimitExceded:                      return Catalog.GetString ("Your IP has made too many requests in a short period' exceeding our API guidelines");                  case StationError.Unknown:                      return Catalog.GetString ("There was an unknown error.");              }
Missing Default,Lastfm,RadioConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\RadioConnection.cs,MessageFor,The following switch statement is missing a default case: switch (state) {                  case ConnectionState.Disconnected:                      return Catalog.GetString ("Not connected to Last.fm.");                  case ConnectionState.NoAccount:                      return Catalog.GetString ("Account details are needed before you can connect to Last.fm");                  case ConnectionState.NoNetwork:                      return Catalog.GetString ("No network connection detected.");                  case ConnectionState.InvalidAccount:                      return Catalog.GetString ("Last.fm username is invalid.");                  case ConnectionState.NotAuthorized:                      return Catalog.GetString ("You need to allow Banshee to access your Last.fm account.");                  case ConnectionState.Connecting:                      return Catalog.GetString ("Connecting to Last.fm.");                  case ConnectionState.Connected:                      return Catalog.GetString ("Connected to Last.fm.");              }
Missing Default,Lastfm,AudioscrobblerConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm\AudioscrobblerConnection.cs,StateTransitionHandler,The following switch statement is missing a default case: switch (state) {              case State.Idle:                  if (queue.Any ()) {                      state = State.NeedTransmit;                      RaiseSubmissionStart (queue.Count);                  } else if (current_now_playing_request != null) {                      // Now playing info needs to be sent                      NowPlaying (current_now_playing_request);                  } else {                      StopTransitionHandler ();                      RaiseSubmissionEnd ();                  }                    break;              case State.NeedTransmit:                  if (DateTime.Now > next_interval) {                      TransmitQueue ();                  }                  break;              case State.Transmitting:              case State.WaitingForResponse:                  // nothing here                  break;              }
Missing Default,Lastfm.Data,LastfmUserData,D:\research\architectureSmells\repos\GNOME_banshee\src\Libraries\Lastfm\Lastfm.Data\LastfmUserData.cs,TopTypeToParam,The following switch statement is missing a default case: switch (type) {                  case TopType.Overall:       return "overall";                  case TopType.ThreeMonth:    return "3month";                  case TopType.SixMonth:      return "6month";                  case TopType.TwelveMonth:   return "12month";              }
