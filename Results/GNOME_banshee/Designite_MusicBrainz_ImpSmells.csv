Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MusicBrainz,MusicBrainzObject,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\MusicBrainzObject.cs,XmlProcessingClosure,Cyclomatic complexity of the method is 8
Long Parameter List,MusicBrainz,MusicBrainzObject,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\MusicBrainzObject.cs,Query,The method has 5 parameters. Parameters: url_extension' limit' offset' parameters' count
Long Parameter List,MusicBrainz,RelationBase<T>,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\Relation.cs,RelationBase,The method has 6 parameters. Parameters: type' target' direction' begin' end' attributes
Long Parameter List,MusicBrainz,Relation<T>,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\Relation.cs,Relation,The method has 6 parameters. Parameters: type' target' direction' begin' end' attributes
Long Parameter List,MusicBrainz,UrlRelation,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\Relation.cs,UrlRelation,The method has 6 parameters. Parameters: type' target' direction' begin' end' attributes
Complex Conditional,MusicBrainz,Utils,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\Utils.cs,PercentEncode,The conditional expression  "(c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') ||                      c == '-' || c == '_' || c == '.' || c == '~'"  is complex.
Magic Number,MusicBrainz,LocalDisc,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\LocalDisc.cs,Init,The following statement contains a magic number: for (int i = 1; i <= last_track; i++) {                  track_durations [i - 1] = TimeSpan.FromSeconds (                      ((i < last_track ? track_offsets [i + 1] : track_offsets [0]) - track_offsets [i]) / 75); // 75 frames in a second              }
Magic Number,MusicBrainz,LocalDisc,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\LocalDisc.cs,GenerateId,The following statement contains a magic number: StringBuilder input_builder = new StringBuilder (804);
Magic Number,MusicBrainz,MusicBrainzEntity,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\MusicBrainzEntity.cs,CreateNameParameter,The following statement contains a magic number: StringBuilder builder = new StringBuilder (name.Length + 6);
Magic Number,MusicBrainz,MusicBrainzObject,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\MusicBrainzObject.cs,CreateUrl,The following statement contains a magic number: if (limit != 25) {                  builder.Append ("&limit=");                  builder.Append (limit);              }
Magic Number,MusicBrainz,MusicBrainzObject,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\MusicBrainzObject.cs,CreateUrl,The following statement contains a magic number: StringBuilder builder = new StringBuilder (                  MusicBrainzService.ServiceUrl.AbsoluteUri.Length + id.Length + parameters.Length + 9);
Magic Number,MusicBrainz,MusicBrainzObject,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\MusicBrainzObject.cs,CreateLuceneParameter,The following statement contains a magic number: StringBuilder builder = new StringBuilder (query.Length + 7);
Magic Number,MusicBrainz,Query<T>,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\Query.cs,PerfectMatch,The following statement contains a magic number: limit = 2;
Magic Number,MusicBrainz,Query<T>,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\Query.cs,PerfectMatch,The following statement contains a magic number: return (result1 != null && result1.Score == 100 && (result2 == null || result2.Score < 100))                  ? result1 : null;
Magic Number,MusicBrainz,Query<T>,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\Query.cs,PerfectMatch,The following statement contains a magic number: return (result1 != null && result1.Score == 100 && (result2 == null || result2.Score < 100))                  ? result1 : null;
Magic Number,MusicBrainz,Query<T>,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\Query.cs,Best,The following statement contains a magic number: return Best (100);
Magic Number,MusicBrainz,DiscFreeBsd,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscFreeBsd.cs,DiscFreeBsd,The following statement contains a magic number: try {                  ioc_toc_header h = new ioc_toc_header ();                  if (cd_read_toc_header (fd' ref h) < 0) {                      throw new LocalDiscException ("Cannot read table of contents header");                  }                  if (h.ending_track == 0) {                      throw new LocalDiscException ("This disc has no tracks");                  }                    first_track = h.starting_track;                  last_track = h.ending_track;                    int n = h.ending_track - h.starting_track + 1;                  int len = (n + 1) * Marshal.SizeOf (typeof (cd_toc_entry));                    ioc_read_toc_entry t = new ioc_read_toc_entry ();                  t.address_format = CD_LBA_FORMAT;                  t.starting_track = 0;                  t.data_len = (ushort) len;                  t.data = Marshal.AllocHGlobal (len);                  try {                        if (cd_read_toc_entrys (fd' ref t) < 0) {                          throw new LocalDiscException ("Cannot read table of contents entries");                      }                        for (int i = 0; i <= n; i++) {                          ulong offset = (ulong) (i * Marshal.SizeOf (typeof (cd_toc_entry)));                          cd_toc_entry e = (cd_toc_entry) Marshal.PtrToStructure ((IntPtr) ((ulong)t.data + offset)' typeof (cd_toc_entry));                          track_offsets[first_track + i] = System.Net.IPAddress.NetworkToHostOrder (e.addr.lba) + 150;                      }                        // Move Leadout to the beginning.                      track_offsets [0] = track_offsets [last_track + 1];                      track_offsets [last_track + 1] = 0;                  } finally {                      Marshal.FreeHGlobal (t.data);                  }              } finally {                  close (fd);              }
Magic Number,MusicBrainz,DiscLinux,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscLinux.cs,DiscLinux,The following statement contains a magic number: try {                  if (ReadTocHeader (fd) < 0) throw new LocalDiscException ("Cannot read table of contents");                  if (last_track == 0) throw new LocalDiscException ("This disc has no tracks");                    ulong lba = 0;                  ReadLeadout (fd' ref lba);                  track_offsets [0] = (int)lba + 150;                    for (byte i = first_track; i <= last_track; i++) {                      ReadTocEntry (fd' i' ref lba);                      track_offsets[i] = (int)lba + 150;                  }              } finally {                  close (fd);              }
Magic Number,MusicBrainz,DiscLinux,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscLinux.cs,DiscLinux,The following statement contains a magic number: try {                  if (ReadTocHeader (fd) < 0) throw new LocalDiscException ("Cannot read table of contents");                  if (last_track == 0) throw new LocalDiscException ("This disc has no tracks");                    ulong lba = 0;                  ReadLeadout (fd' ref lba);                  track_offsets [0] = (int)lba + 150;                    for (byte i = first_track; i <= last_track; i++) {                      ReadTocEntry (fd' i' ref lba);                      track_offsets[i] = (int)lba + 150;                  }              } finally {                  close (fd);              }
Magic Number,MusicBrainz,DiscWin32,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscWin32.cs,DiscWin32,The following statement contains a magic number: for (int i = 1; i <= last_track; i++)                  MciClosure (                      string.Format ("status {0} position track {1} wait"' alias' i)'                      string.Format ("Could not get position for track {0}"' i)'                      delegate (string result) {                          track_offsets [i] =                              int.Parse (result.Substring (0'2)) * 4500 +                              int.Parse (result.Substring (3'2)) * 75 +                              int.Parse (result.Substring (6'2));                      });
Magic Number,MusicBrainz,DiscWin32,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscWin32.cs,DiscWin32,The following statement contains a magic number: for (int i = 1; i <= last_track; i++)                  MciClosure (                      string.Format ("status {0} position track {1} wait"' alias' i)'                      string.Format ("Could not get position for track {0}"' i)'                      delegate (string result) {                          track_offsets [i] =                              int.Parse (result.Substring (0'2)) * 4500 +                              int.Parse (result.Substring (3'2)) * 75 +                              int.Parse (result.Substring (6'2));                      });
Magic Number,MusicBrainz,DiscWin32,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscWin32.cs,DiscWin32,The following statement contains a magic number: for (int i = 1; i <= last_track; i++)                  MciClosure (                      string.Format ("status {0} position track {1} wait"' alias' i)'                      string.Format ("Could not get position for track {0}"' i)'                      delegate (string result) {                          track_offsets [i] =                              int.Parse (result.Substring (0'2)) * 4500 +                              int.Parse (result.Substring (3'2)) * 75 +                              int.Parse (result.Substring (6'2));                      });
Magic Number,MusicBrainz,DiscWin32,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscWin32.cs,DiscWin32,The following statement contains a magic number: for (int i = 1; i <= last_track; i++)                  MciClosure (                      string.Format ("status {0} position track {1} wait"' alias' i)'                      string.Format ("Could not get position for track {0}"' i)'                      delegate (string result) {                          track_offsets [i] =                              int.Parse (result.Substring (0'2)) * 4500 +                              int.Parse (result.Substring (3'2)) * 75 +                              int.Parse (result.Substring (6'2));                      });
Magic Number,MusicBrainz,DiscWin32,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscWin32.cs,DiscWin32,The following statement contains a magic number: for (int i = 1; i <= last_track; i++)                  MciClosure (                      string.Format ("status {0} position track {1} wait"' alias' i)'                      string.Format ("Could not get position for track {0}"' i)'                      delegate (string result) {                          track_offsets [i] =                              int.Parse (result.Substring (0'2)) * 4500 +                              int.Parse (result.Substring (3'2)) * 75 +                              int.Parse (result.Substring (6'2));                      });
Magic Number,MusicBrainz,DiscWin32,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscWin32.cs,DiscWin32,The following statement contains a magic number: for (int i = 1; i <= last_track; i++)                  MciClosure (                      string.Format ("status {0} position track {1} wait"' alias' i)'                      string.Format ("Could not get position for track {0}"' i)'                      delegate (string result) {                          track_offsets [i] =                              int.Parse (result.Substring (0'2)) * 4500 +                              int.Parse (result.Substring (3'2)) * 75 +                              int.Parse (result.Substring (6'2));                      });
Magic Number,MusicBrainz,DiscWin32,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscWin32.cs,DiscWin32,The following statement contains a magic number: for (int i = 1; i <= last_track; i++)                  MciClosure (                      string.Format ("status {0} position track {1} wait"' alias' i)'                      string.Format ("Could not get position for track {0}"' i)'                      delegate (string result) {                          track_offsets [i] =                              int.Parse (result.Substring (0'2)) * 4500 +                              int.Parse (result.Substring (3'2)) * 75 +                              int.Parse (result.Substring (6'2));                      });
Magic Number,MusicBrainz,DiscWin32,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscWin32.cs,DiscWin32,The following statement contains a magic number: MciClosure (                  string.Format ("status {0} length track {1} wait"' alias' last_track)'                  "Could not read the length of the last track"'                  delegate (string result) {                      track_offsets [0] =                          int.Parse (result.Substring (0' 2)) * 4500 +                          int.Parse (result.Substring (3' 2)) * 75 +                          int.Parse (result.Substring (6' 2)) +                          track_offsets [last_track] + 1;                  });
Magic Number,MusicBrainz,DiscWin32,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscWin32.cs,DiscWin32,The following statement contains a magic number: MciClosure (                  string.Format ("status {0} length track {1} wait"' alias' last_track)'                  "Could not read the length of the last track"'                  delegate (string result) {                      track_offsets [0] =                          int.Parse (result.Substring (0' 2)) * 4500 +                          int.Parse (result.Substring (3' 2)) * 75 +                          int.Parse (result.Substring (6' 2)) +                          track_offsets [last_track] + 1;                  });
Magic Number,MusicBrainz,DiscWin32,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscWin32.cs,DiscWin32,The following statement contains a magic number: MciClosure (                  string.Format ("status {0} length track {1} wait"' alias' last_track)'                  "Could not read the length of the last track"'                  delegate (string result) {                      track_offsets [0] =                          int.Parse (result.Substring (0' 2)) * 4500 +                          int.Parse (result.Substring (3' 2)) * 75 +                          int.Parse (result.Substring (6' 2)) +                          track_offsets [last_track] + 1;                  });
Magic Number,MusicBrainz,DiscWin32,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscWin32.cs,DiscWin32,The following statement contains a magic number: MciClosure (                  string.Format ("status {0} length track {1} wait"' alias' last_track)'                  "Could not read the length of the last track"'                  delegate (string result) {                      track_offsets [0] =                          int.Parse (result.Substring (0' 2)) * 4500 +                          int.Parse (result.Substring (3' 2)) * 75 +                          int.Parse (result.Substring (6' 2)) +                          track_offsets [last_track] + 1;                  });
Magic Number,MusicBrainz,DiscWin32,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscWin32.cs,DiscWin32,The following statement contains a magic number: MciClosure (                  string.Format ("status {0} length track {1} wait"' alias' last_track)'                  "Could not read the length of the last track"'                  delegate (string result) {                      track_offsets [0] =                          int.Parse (result.Substring (0' 2)) * 4500 +                          int.Parse (result.Substring (3' 2)) * 75 +                          int.Parse (result.Substring (6' 2)) +                          track_offsets [last_track] + 1;                  });
Magic Number,MusicBrainz,DiscWin32,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscWin32.cs,DiscWin32,The following statement contains a magic number: MciClosure (                  string.Format ("status {0} length track {1} wait"' alias' last_track)'                  "Could not read the length of the last track"'                  delegate (string result) {                      track_offsets [0] =                          int.Parse (result.Substring (0' 2)) * 4500 +                          int.Parse (result.Substring (3' 2)) * 75 +                          int.Parse (result.Substring (6' 2)) +                          track_offsets [last_track] + 1;                  });
Magic Number,MusicBrainz,DiscWin32,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\DiscWin32.cs,DiscWin32,The following statement contains a magic number: MciClosure (                  string.Format ("status {0} length track {1} wait"' alias' last_track)'                  "Could not read the length of the last track"'                  delegate (string result) {                      track_offsets [0] =                          int.Parse (result.Substring (0' 2)) * 4500 +                          int.Parse (result.Substring (3' 2)) * 75 +                          int.Parse (result.Substring (6' 2)) +                          track_offsets [last_track] + 1;                  });
Missing Default,MusicBrainz,Artist,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\Artist.cs,ProcessAttributes,The following switch statement is missing a default case: switch (reader ["type"]) {              case "Group":                  type = ArtistType.Group;                  break;              case "Person":                  type = ArtistType.Person;                  break;              }
Missing Default,MusicBrainz,MusicBrainzObject,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\MusicBrainzObject.cs,CreateFromXml,The following switch statement is missing a default case: switch (reader ["target-type"]) {                      case "Artist":                          artist_rels = CreateRelation<Artist> (reader.ReadSubtree ());                          break;                      case "Release":                          release_rels = CreateRelation<Release> (reader.ReadSubtree ());                          break;                      case "Track":                          track_rels = CreateRelation<Track> (reader.ReadSubtree ());                          break;                      case "Label":                          label_rels = CreateRelation<Label> (reader.ReadSubtree ());                          break;                      case "Url":                          url_rels = CreateUrlRelation (reader.ReadSubtree ());                          break;                      }
Missing Default,MusicBrainz,MusicBrainzObject,C:\repos\GNOME_banshee\src\Libraries\MusicBrainz\MusicBrainz\MusicBrainzObject.cs,XmlProcessingClosure,The following switch statement is missing a default case: switch (response.StatusCode) {              case HttpStatusCode.BadRequest:                  Monitor.Exit (server_mutex);                  throw new MusicBrainzInvalidParameterException ();              case HttpStatusCode.Unauthorized:                  Monitor.Exit (server_mutex);                  throw new MusicBrainzUnauthorizedException ();              case HttpStatusCode.NotFound:                  Monitor.Exit (server_mutex);                  throw new MusicBrainzNotFoundException ();              }
