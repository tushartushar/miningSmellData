Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Banshee.AmazonMp3,AmazonDownloadManager,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\AmazonDownloadManager.cs,OnDownloaderFinished,Cyclomatic complexity of the method is 14
Complex Method,Banshee.AmazonMp3,AmzXspfPlaylist,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\AmzXspfPlaylist.cs,Decrypt,Cyclomatic complexity of the method is 9
Complex Method,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,Cyclomatic complexity of the method is 9
Long Statement,Banshee.AmazonMp3,AmazonDownloadManager,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\AmazonDownloadManager.cs,TryToFixNonMp3Metadata,The length of the statement  "	var artist_name = MostCommon<TrackInfo' string> (mp3_imported_tracks' track => track.AlbumArtist) ?? MostCommon<TrackInfo' string> (mp3_imported_tracks' track => track.ArtistName); " is 180.
Long Statement,Banshee.AmazonMp3,AmazonMp3DownloaderService,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\AmazonMp3DownloaderService.cs,Initialize,The length of the statement  "		var sp = new Banshee.SmartPlaylist.SmartPlaylistDefinition (Catalog.GetString ("Amazon MP3s")' Catalog.GetString ("Songs purchased from the Amazon MP3 Store")' "comment=\"amazon\""' true).ToSmartPlaylistSource (ServiceManager.SourceManager.MusicLibrary); " is 254.
Long Statement,Banshee.AmazonMp3,AmzXspfPlaylist,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\AmzXspfPlaylist.cs,Decrypt,The length of the statement  "		using (var decrypted_stream = new CryptoStream (encrypted_stream' crypto_service.CreateDecryptor ()' CryptoStreamMode.Read)) { " is 126.
Long Statement,Banshee.AmazonMp3,AmzXspfPlaylist,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\AmzXspfPlaylist.cs,AmzLoad,The length of the statement  "	var downloadable_track_meta = new Xspf.MetaEntry (new Uri ("http://www.amazon.com/dmusic/productTypeName")' "DOWNLOADABLE_MUSIC_TRACK"); " is 136.
Long Statement,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The length of the statement  "			Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12)); " is 413.
Long Statement,Banshee.AmazonMp3,ImportSource,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ImportSource.cs,Import,The length of the statement  "	var chooser = Banshee.Gui.Dialogs.FileChooserDialog.CreateForImport (Catalog.GetString ("Download Amazon MP3 Purchase")' true); " is 127.
Magic Number,Banshee.AmazonMp3,AmazonMp3DownloaderService,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\AmazonMp3DownloaderService.cs,Initialize,The following statement contains a magic number: GLib.Timeout.Add (2500' delegate {  	foreach (var path in ApplicationContext.CommandLine.Files) {  		OnCommandLineArgument (path' null' true);  	}  	return false;  });  
Magic Number,Banshee.AmazonMp3,AmzXspfPlaylist,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\AmzXspfPlaylist.cs,Decrypt,The following statement contains a magic number: if (stream.Read (magic' 0' 10) == 10) {  	string start = System.Text.Encoding.UTF8.GetString (magic);  	if (start.Contains ("<?xml") || start.Contains ("<playlist")) {  		stream.Seek (0' SeekOrigin.Begin);  		Load (stream);  		AmzLoad ();  		return;  	}  }  
Magic Number,Banshee.AmazonMp3,AmzXspfPlaylist,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\AmzXspfPlaylist.cs,Decrypt,The following statement contains a magic number: if (stream.Read (magic' 0' 10) == 10) {  	string start = System.Text.Encoding.UTF8.GetString (magic);  	if (start.Contains ("<?xml") || start.Contains ("<playlist")) {  		stream.Seek (0' SeekOrigin.Begin);  		Load (stream);  		AmzLoad ();  		return;  	}  }  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: while (amz_files.Count > 0) {  	int i = 1;  	var playlist = amz_files.Dequeue ();  	var download_manager = new DownloadManager {  		MaxConcurrentDownloaders = 1  	};  	download_manager.Finished += d => {  		if (!d.State.Success) {  			Console.WriteLine ("[{0}/{1}] {2}: {3}"' i' playlist.DownloadableTrackCount' d.Name' d.State.FailureException.Message);  		} else {  			Console.WriteLine ();  		}  		i++;  	};  	download_manager.Progress += d => {  		int progress_bar_size = Console.WindowWidth - 65;  		Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  	};  	Console.WriteLine ("Downloading Album");  	foreach (var track in playlist.DownloadableTracks) {  		download_manager.QueueDownloader (new AmzMp3Downloader (track) {  			OutputPath = output_path  		});  	}  	download_manager.WaitUntilFinished ();  }  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: while (amz_files.Count > 0) {  	int i = 1;  	var playlist = amz_files.Dequeue ();  	var download_manager = new DownloadManager {  		MaxConcurrentDownloaders = 1  	};  	download_manager.Finished += d => {  		if (!d.State.Success) {  			Console.WriteLine ("[{0}/{1}] {2}: {3}"' i' playlist.DownloadableTrackCount' d.Name' d.State.FailureException.Message);  		} else {  			Console.WriteLine ();  		}  		i++;  	};  	download_manager.Progress += d => {  		int progress_bar_size = Console.WindowWidth - 65;  		Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  	};  	Console.WriteLine ("Downloading Album");  	foreach (var track in playlist.DownloadableTracks) {  		download_manager.QueueDownloader (new AmzMp3Downloader (track) {  			OutputPath = output_path  		});  	}  	download_manager.WaitUntilFinished ();  }  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: while (amz_files.Count > 0) {  	int i = 1;  	var playlist = amz_files.Dequeue ();  	var download_manager = new DownloadManager {  		MaxConcurrentDownloaders = 1  	};  	download_manager.Finished += d => {  		if (!d.State.Success) {  			Console.WriteLine ("[{0}/{1}] {2}: {3}"' i' playlist.DownloadableTrackCount' d.Name' d.State.FailureException.Message);  		} else {  			Console.WriteLine ();  		}  		i++;  	};  	download_manager.Progress += d => {  		int progress_bar_size = Console.WindowWidth - 65;  		Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  	};  	Console.WriteLine ("Downloading Album");  	foreach (var track in playlist.DownloadableTracks) {  		download_manager.QueueDownloader (new AmzMp3Downloader (track) {  			OutputPath = output_path  		});  	}  	download_manager.WaitUntilFinished ();  }  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: while (amz_files.Count > 0) {  	int i = 1;  	var playlist = amz_files.Dequeue ();  	var download_manager = new DownloadManager {  		MaxConcurrentDownloaders = 1  	};  	download_manager.Finished += d => {  		if (!d.State.Success) {  			Console.WriteLine ("[{0}/{1}] {2}: {3}"' i' playlist.DownloadableTrackCount' d.Name' d.State.FailureException.Message);  		} else {  			Console.WriteLine ();  		}  		i++;  	};  	download_manager.Progress += d => {  		int progress_bar_size = Console.WindowWidth - 65;  		Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  	};  	Console.WriteLine ("Downloading Album");  	foreach (var track in playlist.DownloadableTracks) {  		download_manager.QueueDownloader (new AmzMp3Downloader (track) {  			OutputPath = output_path  		});  	}  	download_manager.WaitUntilFinished ();  }  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: while (amz_files.Count > 0) {  	int i = 1;  	var playlist = amz_files.Dequeue ();  	var download_manager = new DownloadManager {  		MaxConcurrentDownloaders = 1  	};  	download_manager.Finished += d => {  		if (!d.State.Success) {  			Console.WriteLine ("[{0}/{1}] {2}: {3}"' i' playlist.DownloadableTrackCount' d.Name' d.State.FailureException.Message);  		} else {  			Console.WriteLine ();  		}  		i++;  	};  	download_manager.Progress += d => {  		int progress_bar_size = Console.WindowWidth - 65;  		Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  	};  	Console.WriteLine ("Downloading Album");  	foreach (var track in playlist.DownloadableTracks) {  		download_manager.QueueDownloader (new AmzMp3Downloader (track) {  			OutputPath = output_path  		});  	}  	download_manager.WaitUntilFinished ();  }  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: while (amz_files.Count > 0) {  	int i = 1;  	var playlist = amz_files.Dequeue ();  	var download_manager = new DownloadManager {  		MaxConcurrentDownloaders = 1  	};  	download_manager.Finished += d => {  		if (!d.State.Success) {  			Console.WriteLine ("[{0}/{1}] {2}: {3}"' i' playlist.DownloadableTrackCount' d.Name' d.State.FailureException.Message);  		} else {  			Console.WriteLine ();  		}  		i++;  	};  	download_manager.Progress += d => {  		int progress_bar_size = Console.WindowWidth - 65;  		Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  	};  	Console.WriteLine ("Downloading Album");  	foreach (var track in playlist.DownloadableTracks) {  		download_manager.QueueDownloader (new AmzMp3Downloader (track) {  			OutputPath = output_path  		});  	}  	download_manager.WaitUntilFinished ();  }  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: while (amz_files.Count > 0) {  	int i = 1;  	var playlist = amz_files.Dequeue ();  	var download_manager = new DownloadManager {  		MaxConcurrentDownloaders = 1  	};  	download_manager.Finished += d => {  		if (!d.State.Success) {  			Console.WriteLine ("[{0}/{1}] {2}: {3}"' i' playlist.DownloadableTrackCount' d.Name' d.State.FailureException.Message);  		} else {  			Console.WriteLine ();  		}  		i++;  	};  	download_manager.Progress += d => {  		int progress_bar_size = Console.WindowWidth - 65;  		Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  	};  	Console.WriteLine ("Downloading Album");  	foreach (var track in playlist.DownloadableTracks) {  		download_manager.QueueDownloader (new AmzMp3Downloader (track) {  			OutputPath = output_path  		});  	}  	download_manager.WaitUntilFinished ();  }  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: download_manager.Progress += d => {  	int progress_bar_size = Console.WindowWidth - 65;  	Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  };  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: download_manager.Progress += d => {  	int progress_bar_size = Console.WindowWidth - 65;  	Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  };  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: download_manager.Progress += d => {  	int progress_bar_size = Console.WindowWidth - 65;  	Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  };  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: download_manager.Progress += d => {  	int progress_bar_size = Console.WindowWidth - 65;  	Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  };  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: download_manager.Progress += d => {  	int progress_bar_size = Console.WindowWidth - 65;  	Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  };  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: download_manager.Progress += d => {  	int progress_bar_size = Console.WindowWidth - 65;  	Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  };  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: download_manager.Progress += d => {  	int progress_bar_size = Console.WindowWidth - 65;  	Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  };  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Main,The following statement contains a magic number: Console.Write ("\r{0} {1} |{2}| {3} {4}"' Field (String.Format ("[{0}/{1}]"' i' playlist.DownloadableTrackCount)' 7)' Field (d.Name' 35)' Field (String.Empty.PadRight ((int)Math.Ceiling (progress_bar_size * d.State.PercentComplete)' '=')' progress_bar_size)' Field (((int)Math.Round (d.State.PercentComplete * 100)).ToString () + "%"' 4)' Field (String.Format ("{0:0.00} KB/s"' d.State.TransferRate / 1024)' 12));  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Field,The following statement contains a magic number: if (s.Length > l) {  	s = s.Substring (0' l - 3).TrimEnd () + "...";  }  
Magic Number,Banshee.AmazonMp3,ConsoleTool,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.AmazonMp3\Banshee.AmazonMp3\ConsoleTool.cs,Field,The following statement contains a magic number: s = s.Substring (0' l - 3).TrimEnd () + "...";  
