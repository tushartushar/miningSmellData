Implementation smell,Namespace,Class,File,Method,Description
Long Method,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,CreateTablesAndIndexes,The method has 199 lines of code.
Long Method,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,MigrateFromLegacyBanshee,The method has 103 lines of code.
Long Method,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The method has 218 lines of code.
Complex Method,Banshee.Database,BansheeDbConnection,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbConnection.cs,ValidateSchema,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,InnerMigrate,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,RefreshMetadataThread,Cyclomatic complexity of the method is 11
Complex Method,Banshee.Collection.Database,DatabaseTrackInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,CopyToLibraryIfAppropriate,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Collection.Database,DatabaseAlbumInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseAlbumInfo.cs,FindOrCreate,Cyclomatic complexity of the method is 13
Complex Method,Banshee.Collection.Database,DatabaseArtistInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseArtistInfo.cs,FindOrCreate,Cyclomatic complexity of the method is 9
Complex Method,Banshee.Collection.Database,DatabaseImportManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseImportManager.cs,ImportTrack,Cyclomatic complexity of the method is 12
Complex Method,Banshee.Collection.Database,DatabaseQueryFilterModel,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseQueryFilterModel.cs,GetSqlFilter,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Collection.Database,RandomBySlot,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\RandomBySlot.cs,Next,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Collection.Database,Shuffler,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\Shuffler.cs,GetRandomTrack,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Sources,SourceManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\SourceManager.cs,AddSource,Cyclomatic complexity of the method is 9
Complex Method,Banshee.Sources,SourceManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\SourceManager.cs,RemoveSource,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,PrimarySourceInitialize,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,DeleteTrackList,Cyclomatic complexity of the method is 10
Complex Method,Banshee.Playlist,PlaylistFileUtil,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistFileUtil.cs,ImportPlaylistToLibrary,Cyclomatic complexity of the method is 11
Complex Method,Banshee.MediaEngine,PlayerEngineService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngineService.cs,OnEngineEventChanged,Cyclomatic complexity of the method is 8
Complex Method,Banshee.MediaEngine,PlayerEngineService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngineService.cs,OpenCheck,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Collection,TrackSyncPipelineElement,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\RescanPipeline.cs,ProcessItem,Cyclomatic complexity of the method is 12
Complex Method,Banshee.Playlists.Formats,AsxPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,Load,Cyclomatic complexity of the method is 17
Complex Method,Banshee.Playlists.Formats,AsxPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,LoadEntry,Cyclomatic complexity of the method is 17
Complex Method,Banshee.Playlists.Formats,M3uPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\M3uPlaylistFormat.cs,Load,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Playlists.Formats,PlaylistParser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Parse,Cyclomatic complexity of the method is 11
Complex Method,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,Cyclomatic complexity of the method is 17
Complex Method,Banshee.Web,BaseHttpServer,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\BaseHttpServer.cs,HandleRequest,Cyclomatic complexity of the method is 10
Complex Method,Banshee.Web,BaseHttpServer,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\BaseHttpServer.cs,WriteResponseStream,Cyclomatic complexity of the method is 15
Complex Method,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,Load,Cyclomatic complexity of the method is 18
Complex Method,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,ParseCondition,Cyclomatic complexity of the method is 16
Complex Method,Banshee.Metadata.FileSystem,FileSystemQueryJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.FileSystem\FileSystemQueryJob.cs,Fetch,Cyclomatic complexity of the method is 12
Complex Method,Banshee.Metadata.MusicBrainz,MusicBrainzQueryJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.MusicBrainz\MusicBrainzQueryJob.cs,Lookup,Cyclomatic complexity of the method is 17
Complex Method,Banshee.Metadata.Rhapsody,RhapsodyQueryJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.Rhapsody\RhapsodyQueryJob.cs,Run,Cyclomatic complexity of the method is 9
Complex Method,Banshee.PlaybackController,PlaybackControllerService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,OnPlayerEvent,Cyclomatic complexity of the method is 26
Complex Method,Banshee.Query,BansheeQuery,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Query\BansheeQuery.cs,GetSort,Cyclomatic complexity of the method is 11
Complex Method,Banshee.Hardware,DeviceCommand,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Hardware\DeviceCommand.cs,ParseCommandLine,Cyclomatic complexity of the method is 15
Complex Method,Banshee.MediaProfiles,MediaProfileManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\MediaProfileManager.cs,Initialize,Cyclomatic complexity of the method is 8
Complex Method,Banshee.MediaProfiles,Pipeline,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\Pipeline.cs,Pipeline,Cyclomatic complexity of the method is 8
Complex Method,Banshee.MediaProfiles,Pipeline,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\Pipeline.cs,CompileProcess,Cyclomatic complexity of the method is 8
Complex Method,Banshee.MediaProfiles,PipelineVariable,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\PipelineVariable.cs,PipelineVariable,Cyclomatic complexity of the method is 24
Complex Method,Banshee.Metadata.LastFM,LastFMQueryJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.LastFM\LastFMQueryJob.cs,Run,Cyclomatic complexity of the method is 12
Long Parameter List,Banshee.Collection.Database,DatabaseTrackListModel,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,GetRandom,The method has 5 parameters.
Long Parameter List,Banshee.Collection.Database,DatabaseAlbumInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseAlbumInfo.cs,FindOrCreate,The method has 5 parameters.
Long Parameter List,Banshee.Collection.Database,DatabaseFilterListModel,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseFilterListModel.cs,DatabaseFilterListModel,The method has 8 parameters.
Long Parameter List,Banshee.Collection.Database,DatabaseQueryFilterModel,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseQueryFilterModel.cs,DatabaseQueryFilterModel,The method has 7 parameters.
Long Parameter List,Banshee.Collection.Database,FilterModelProvider,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\FilterModelProvider.cs,FilterModelProvider,The method has 6 parameters.
Long Parameter List,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,CreateSchema,The method has 5 parameters.
Long Parameter List,Banshee.Sources,DatabaseSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,DatabaseSource,The method has 5 parameters.
Long Parameter List,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,PrimarySource,The method has 5 parameters.
Long Parameter List,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,PlaylistSource,The method has 7 parameters.
Long Parameter List,Banshee.Playlist,AbstractPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\AbstractPlaylistSource.cs,AbstractPlaylistSource,The method has 7 parameters.
Long Parameter List,Banshee.MediaEngine,TranscoderService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\TranscoderService.cs,Enqueue,The method has 5 parameters.
Long Parameter List,Banshee.MediaEngine,TranscoderService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\TranscoderService.cs,Enqueue,The method has 6 parameters.
Long Parameter List,Banshee.Collection,ModelHelper,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\ModelHelper.cs,BuildIdFilter,The method has 5 parameters.
Long Parameter List,Banshee.Playlists.Formats,PlaylistFormatDescription,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistFormatDescription.cs,PlaylistFormatDescription,The method has 5 parameters.
Long Parameter List,Banshee.Web,BaseHttpServer,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\BaseHttpServer.cs,WriteResponseStream,The method has 5 parameters.
Long Parameter List,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,Migrate,The method has 6 parameters.
Long Parameter List,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,SmartPlaylistSource,The method has 6 parameters.
Long Parameter List,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,SmartPlaylistSource,The method has 7 parameters.
Long Parameter List,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,SmartPlaylistSource,The method has 10 parameters.
Long Parameter List,Banshee.SmartPlaylist,SmartPlaylistDefinition,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistDefinition.cs,SmartPlaylistDefinition,The method has 6 parameters.
Long Parameter List,Banshee.SmartPlaylist,SmartPlaylistDefinition,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistDefinition.cs,SmartPlaylistDefinition,The method has 6 parameters.
Long Parameter List,Banshee.SmartPlaylist,SmartPlaylistDefinition,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistDefinition.cs,SmartPlaylistDefinition,The method has 7 parameters.
Long Statement,Banshee.Database,BansheeDbConnection,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbConnection.cs,ValidateSchema,The length of the statement  "	using (var reader = new_db.Query ("select name'sql from sqlite_master where type='index' AND name NOT LIKE 'sqlite_autoindex%' order by name")) { " is 145.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_1,The length of the statement  "		OnSlowStarted (Catalog.GetString ("Upgrading your Banshee Database")' Catalog.GetString ("Please wait while your old Banshee database is migrated to the new format.")); " is 168.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_2,The length of the statement  "	Execute (String.Format ("ALTER TABLE CoreTracks ADD COLUMN Attributes INTEGER  DEFAULT {0}"' (int)TrackMediaAttributes.Default)); " is 129.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_5,The length of the statement  "	Execute ("CREATE INDEX IF NOT EXISTS CoreTracksIndex ON CoreTracks(ArtistID' AlbumID' PrimarySourceID' Disc' TrackNumber' Uri)"); " is 129.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_5,The length of the statement  "	Execute ("CREATE INDEX IF NOT EXISTS CoreSmartPlaylistEntriesIndex ON CoreSmartPlaylistEntries(SmartPlaylistID' TrackID)"); " is 123.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_9,The length of the statement  "	Execute (String.Format ("ALTER TABLE CoreTracks ADD COLUMN LastStreamError INTEGER DEFAULT {0}"' (int)StreamPlaybackError.None)); " is 129.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_21,The length of the statement  "	int id = connection.Query<int> ("SELECT PrimarySourceId FROM CorePrimarySources WHERE StringID = 'PodcastSource-PodcastLibrary'"); " is 130.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_21,The length of the statement  "		connection.Execute ("UPDATE CoreTracks SET Attributes = Attributes | ? WHERE PrimarySourceID = ?"' (int)TrackMediaAttributes.Podcast' id); " is 138.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_26,The length of the statement  "	connection.Execute ("UPDATE CoreArtists SET Name = NULL' NameLowered = HYENA_SEARCH_KEY(?)" + " WHERE Name  IN (''' ?' ?) OR Name IS NULL"' ArtistInfo.UnknownArtistName' ArtistInfo.UnknownArtistNameUntranslated' ArtistInfo.UnknownArtistName); " is 242.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_26,The length of the statement  "	connection.Execute ("UPDATE CoreAlbums SET ArtistName = NULL' ArtistNameLowered = HYENA_SEARCH_KEY(?)" + " WHERE ArtistName IN (''' ?' ?) OR ArtistName IS NULL"' ArtistInfo.UnknownArtistName' ArtistInfo.UnknownArtistNameUntranslated' ArtistInfo.UnknownArtistName); " is 264.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_26,The length of the statement  "	connection.Execute ("UPDATE CoreAlbums SET Title = NULL' TitleLowered = HYENA_SEARCH_KEY(?)" + " WHERE Title IN (''' ?' ?) OR Title IS NULL"' AlbumInfo.UnknownAlbumTitle' AlbumInfo.UnknownAlbumTitleUntranslated' AlbumInfo.UnknownAlbumTitle); " is 241.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_26,The length of the statement  "	connection.Execute ("UPDATE CoreTracks SET Title = NULL' TitleLowered = HYENA_SEARCH_KEY(?)" + " WHERE Title IN (''' ?' ?) OR Title IS NULL"' TrackInfo.UnknownTitle' TrackInfo.UnknownTitleUntranslated' TrackInfo.UnknownTitle); " is 226.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_28,The length of the statement  "	connection.Execute ("UPDATE CoreArtists SET NameLowered = HYENA_SEARCH_KEY(IFNULL(Name' ?))"' ArtistInfo.UnknownArtistName); " is 124.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_28,The length of the statement  "	connection.Execute ("UPDATE CoreAlbums SET ArtistNameLowered = HYENA_SEARCH_KEY(IFNULL(ArtistName' ?))'" + "                      TitleLowered = HYENA_SEARCH_KEY(IFNULL(Title' ?))"' ArtistInfo.UnknownArtistName' AlbumInfo.UnknownAlbumTitle); " is 241.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_31,The length of the statement  "		string library_path = Banshee.Library.LibrarySource.OldLocationSchema.Get (Banshee.Library.MusicLibrarySource.GetDefaultBaseDirectory ()); " is 138.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_31,The length of the statement  "			int podcast_src_id = connection.Query<int> ("SELECT PrimarySourceID FROM CorePrimarySources WHERE StringID = 'PodcastSource-PodcastLibrary'"); " is 142.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_33,The length of the statement  "		Execute (String.Format ("UPDATE CoreTracks SET MimeType = 'taglib/{0}' WHERE PrimarySourceId = 1 AND (MimeType IS NULL OR MimeType = '') AND Uri LIKE '%.{0}'"' ext)); " is 166.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_34,The length of the statement  "	Execute ("CREATE INDEX IF NOT EXISTS CoreSmartPlaylistEntriesIndex ON CoreSmartPlaylistEntries(SmartPlaylistID' TrackID)"); " is 123.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_41,The length of the statement  "	Execute ("CREATE INDEX CoreShuffleModificationsIndex ON CoreShuffleModifications (ShufflerId' TrackID' LastModifiedAt' ModificationType)"); " is 139.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_42,The length of the statement  "	connection.Execute (@"UPDATE CoreTracks SET Attributes = Attributes & ? WHERE (Attributes & ?) != 0"' (int)(~TrackMediaAttributes.Music)' (int)(TrackMediaAttributes.VideoStream | TrackMediaAttributes.Podcast)); " is 210.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,CreateConfiguration,The length of the statement  "	Execute (String.Format ("INSERT INTO CoreConfiguration (EntryID' Key' Value) VALUES (null' 'DatabaseVersion'' {0})"' CURRENT_VERSION)); " is 135.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,CreateConfiguration,The length of the statement  "		Execute (String.Format ("INSERT INTO CoreConfiguration (EntryID' Key' Value) VALUES (null' 'MetadataVersion'' {0})"' CURRENT_METADATA_VERSION)); " is 144.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,CreateTablesAndIndexes,The length of the statement  "	Execute ("CREATE INDEX CoreTracksPrimarySourceIndex ON CoreTracks(ArtistID' AlbumID' PrimarySourceID' Disc' TrackNumber' Uri)"); " is 128.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,CreateTablesAndIndexes,The length of the statement  "	Execute ("CREATE INDEX CoreShuffleModificationsIndex ON CoreShuffleModifications (ShufflerId' TrackID' LastModifiedAt' ModificationType)"); " is 139.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,InitializeOrderedTracks,The length of the statement  "	foreach (long playlist_id in connection.QueryEnumerable<long> ("SELECT PlaylistID FROM CorePlaylists ORDER BY PlaylistID")) { " is 125.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,InitializeOrderedTracks,The length of the statement  "			connection.Execute (@"UPDATE CorePlaylistEntries SET ViewOrder = (ROWID - ?) WHERE PlaylistID = ?"' first_id' playlist_id); " is 123.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,RefreshMetadataThread,The length of the statement  "	HyenaSqliteCommand select_command = new HyenaSqliteCommand (String.Format ("SELECT {0} FROM {1} WHERE {2}"' DatabaseTrackInfo.Provider.Select' DatabaseTrackInfo.Provider.From' DatabaseTrackInfo.Provider.Where)); " is 211.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,RefreshMetadataThread,The length of the statement  "	if (ServiceManager.DbConnection.Query<int> ("SELECT count(*) FROM CoreConfiguration WHERE Key = 'MetadataVersion'") == 0) { " is 123.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,RefreshMetadataThread,The length of the statement  "		Execute (String.Format ("INSERT INTO CoreConfiguration (EntryID' Key' Value) VALUES (null' 'MetadataVersion'' {0})"' CURRENT_METADATA_VERSION)); " is 144.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,RefreshMetadataThread,The length of the statement  "		Execute (String.Format ("UPDATE CoreConfiguration SET Value = {0} WHERE Key = 'MetadataVersion'"' CURRENT_METADATA_VERSION)); " is 125.
Long Statement,Banshee.Database,SortKeyUpdater,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\SortKeyUpdater.cs,ForceUpdate,The length of the statement  "                        TitleLowered      = HYENA_SEARCH_KEY(COALESCE(Title' ?));"' ArtistInfo.UnknownArtistName' ArtistInfo.UnknownArtistName' AlbumInfo.UnknownAlbumTitle' ArtistInfo.UnknownArtistName' AlbumInfo.UnknownAlbumTitle' ArtistInfo.UnknownArtistName' TrackInfo.UnknownTitle' TrackInfo.UnknownTitle); " is 286.
Long Statement,Banshee.Collection.Database,DatabaseTrackInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,OnPlaybackFinished,The length of the statement  "		Save (true' BansheeQuery.ScoreField' BansheeQuery.SkipCountField' BansheeQuery.LastSkippedField' BansheeQuery.PlayCountField' BansheeQuery.LastPlayedField); " is 156.
Long Statement,Banshee.Collection.Database,DatabaseTrackInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,Save,The length of the statement  "	if (!transient.Contains (BansheeQuery.PlayCountField) && !ServiceManager.SourceManager.MusicLibrary.Equals (PrimarySource)) { " is 125.
Long Statement,Banshee.Collection.Database,DatabaseTrackInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,CopyToLibraryIfAppropriate,The length of the statement  "	bool in_library = old_uri.IsLocalPath ? old_uri.AbsolutePath.StartsWith (PrimarySource.BaseDirectoryWithSeparator) : false; " is 123.
Long Statement,Banshee.Collection.Database,DatabaseTrackInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,CopyToLibraryIfAppropriate,The length of the statement  "		string new_filename = PathPattern != null ? PathPattern.BuildFull (PrimarySource.BaseDirectory' this' Path.GetExtension (old_uri.ToString ())) : Path.Combine (PrimarySource.BaseDirectory' Path.GetFileName (SafeUri.UriToFilename (old_uri))); " is 240.
Long Statement,Banshee.Collection.Database,DatabaseTrackInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,CopyToLibraryIfAppropriate,The length of the statement  "					Hyena.Log.DebugFormat ("Not copying {0} to library because there is already a file of same size at {1}"' old_uri' new_uri); " is 123.
Long Statement,Banshee.Collection.Database,DatabaseTrackInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,FindTrackByMetadataHash,The length of the statement  "	var command = new HyenaSqliteCommand (String.Format (get_track_by_metadata_hash' provider.Select' provider.From' provider.Where)); " is 130.
Long Statement,Banshee.Collection.Database,DatabaseTrackInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,UpdateMetadataHash,The length of the statement  "	ServiceManager.DbConnection.Execute (String.Format (@"UPDATE CoreTracks SET MetadataHash = HYENA_MD5 (6' ?' ?' Genre' Title' TrackNumber' Year)" is 143.
Long Statement,Banshee.Collection.Database,DatabaseTrackListModel,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,GenerateSortQueryPart,The length of the statement  "	SortQuery = (SortColumn == null || SortColumn.SortType == SortType.None) ? (SortColumn != null && source is Banshee.Playlist.PlaylistSource) ? "CorePlaylistEntries.ViewOrder ASC' CorePlaylistEntries.EntryID ASC" : BansheeQuery.GetSort (BansheeQuery.ArtistField' true) : BansheeQuery.GetSort (SortColumn.Field' SortColumn.SortType == SortType.Ascending); " is 353.
Long Statement,Banshee.Collection.Database,DatabaseTrackListModel,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,UpdateUnfilteredAggregates,The length of the statement  "	HyenaSqliteCommand count_command = new HyenaSqliteCommand (String.Format ("SELECT COUNT(*)' SUM({0})' SUM({1}) {2}"' BansheeQuery.FileSizeField.Column' BansheeQuery.DurationField.Column' UnfilteredQuery)); " is 205.
Long Statement,Banshee.Collection.Database,DatabaseTrackListModel,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,Reload,The length of the statement  "		Log.WarningFormat ("Called Reload on {0} for source {1} but cache is null;  Did you forget to call AfterInitialized () in your DatabaseSource ctor?"' this' source == null ? "null source!" : source.Name); " is 203.
Long Statement,Banshee.Collection.Database,DatabaseTrackListModel,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,Contains,The length of the statement  "	return track != null && connection.Query<bool> (String.Format ("SELECT COUNT(*) > 0 {0} AND CoreTracks.TrackID = ? LIMIT 1"' UnfilteredQuery)' track.TrackId); " is 158.
Long Statement,Banshee.Collection.Database,DatabaseImportManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseImportManager.cs,ImportTrack,The length of the statement  "		throw new InvalidFileException (String.Format (Catalog.GetString ("File is not readable so it could not be imported: {0}")' Path.GetFileName (uri.LocalPath))); " is 159.
Long Statement,Banshee.Collection.Database,DatabaseImportManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseImportManager.cs,ImportTrack,The length of the statement  "		throw new InvalidFileException (String.Format (Catalog.GetString ("File is empty so it could not be imported: {0}")' Path.GetFileName (uri.LocalPath))); " is 152.
Long Statement,Banshee.Collection.Database,CachedList,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\CachedList.cs,Remove,The length of the statement  "		ServiceManager.DbConnection.Execute (String.Format ("DELETE FROM CoreCache WHERE ModelId = {0} AND ItemId IN ({1})"' CacheId' builder)); " is 136.
Long Statement,Banshee.Collection.Database,DatabaseFilterListModel,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseFilterListModel.cs,GenerateReloadFragment,The length of the statement  "	return String.Format (ReloadFragmentFormat' FilteredModel.CachesJoinTableEntries ? FilteredModel.JoinFragment : null' FilteredModel.CacheId' FilteredModel.CachesJoinTableEntries ? String.Format ("{0}.{1} AND CoreTracks.TrackID = {0}.{2}"' FilteredModel.JoinTable' FilteredModel.JoinPrimaryKey' FilteredModel.JoinColumn) : "CoreTracks.TrackID"' filtered ? GetFilterFragment () : ""' connection.LikelihoodSupport ? "UNLIKELY" : ""); " is 430.
Long Statement,Banshee.Collection.Database,QueryFilterInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\QueryFilterInfo.cs,CreateProvider,The length of the statement  "	SqliteModelProvider<QueryFilterInfo<T>> provider = new FilterModelProvider<QueryFilterInfo<T>> (ServiceManager.DbConnection' "CoreTracks"' "TrackID"' typeof(QueryFilterInfo<T>).GetMember ("DbId") [0] as PropertyInfo' filter_column' typeof(QueryFilterInfo<T>).GetMember ("Value") [0] as PropertyInfo); " is 300.
Long Statement,Banshee.Collection.Database,RandomBySlot,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\RandomBySlot.cs,Next,The length of the statement  "	var reader = Shuffler == Shuffler.Playback ? ServiceManager.DbConnection.Query (SlotQuery' after' after) : ServiceManager.DbConnection.Query (SlotQuery' after); " is 160.
Long Statement,Banshee.Collection.Database,Shuffler,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\Shuffler.cs,RecordShuffleModifications,The length of the statement  "	ServiceManager.DbConnection.Execute (String.Format ("{0} SELECT ?' ?' ?' {1}"' modify_sql' model.TrackIdsSql)' DbId' DateTime.Now' (int)type' model.CacheId' range.Start' range.Count); " is 183.
Long Statement,Banshee.Collection.Database,DatabaseAlbumArtistListModel,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseAlbumArtistListModel.cs,ItemToFilterValue,The length of the statement  "	return (item is DatabaseAlbumArtistInfo) ? "SELECT CoreAlbums.AlbumID FROM CoreAlbums WHERE CoreAlbums.ArtistID = " + (item as DatabaseAlbumArtistInfo).DbId.ToString () : null; " is 176.
Long Statement,Banshee.Networking,Network,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\Network.cs,InstallPreferences,The length of the statement  "	disable_internet_access_preference = service ["general"] ["misc"].Add (new SchemaPreference<bool> (DisableInternetAccess' Catalog.GetString ("_Disable features requiring Internet access")' Catalog.GetString ("Some features require a broadband Internet connection such as Last.fm or cover art fetching")' delegate { " is 314.
Long Statement,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,GetInheritedProperty,The length of the statement  "	return Properties.Contains (name) ? Properties.Get<T> (name) : Parent != null ? Parent.GetInheritedProperty<T> (name) : default(T); " is 131.
Long Statement,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,CreateSchema,The length of the statement  "	return new SchemaEntry<T> (String.Format ("sources.{0}"' ParentConfigurationId)' name' defaultValue' shortDescription' longDescription); " is 136.
Long Statement,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,CreateSchema,The length of the statement  "	return new SchemaEntry<T> (String.Format ("sources.{0}.{1}"' ParentConfigurationId' ns)' name' defaultValue' shortDescription' longDescription); " is 144.
Long Statement,Banshee.Sources,DatabaseSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,CreateFiltersFor,The length of the statement  "	DatabaseAlbumArtistListModel albumartist_model = new DatabaseAlbumArtistListModel (src' src.DatabaseTrackModel' ServiceManager.DbConnection' src.UniqueId); " is 155.
Long Statement,Banshee.Sources,DatabaseSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,CreateFiltersFor,The length of the statement  "	DatabaseArtistListModel artist_model = new DatabaseArtistListModel (src' src.DatabaseTrackModel' ServiceManager.DbConnection' src.UniqueId); " is 140.
Long Statement,Banshee.Sources,DatabaseSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,CreateFiltersFor,The length of the statement  "	DatabaseAlbumListModel album_model = new DatabaseAlbumListModel (src' src.DatabaseTrackModel' ServiceManager.DbConnection' src.UniqueId); " is 137.
Long Statement,Banshee.Sources,DatabaseSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,CreateFiltersFor,The length of the statement  "	DatabaseQueryFilterModel<string> genre_model = new DatabaseQueryFilterModel<string> (src' src.DatabaseTrackModel' ServiceManager.DbConnection' Catalog.GetString ("All Genres ({0})")' src.UniqueId' BansheeQuery.GenreField' "Genre"); " is 231.
Long Statement,Banshee.Sources,DatabaseSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,CreateFiltersFor,The length of the statement  "	DatabaseYearListModel year_model = new DatabaseYearListModel (src' src.DatabaseTrackModel' ServiceManager.DbConnection' src.UniqueId); " is 134.
Long Statement,Banshee.Sources,DatabaseSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,RateTrackRange,The length of the statement  "	ServiceManager.DbConnection.Execute (RateTrackRangeCommand' rating' DateTime.Now' range.Start' range.End - range.Start + 1); " is 124.
Long Statement,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,PrimarySourceInitialize,The length of the statement  "	expanded_schema = new SchemaEntry<bool> (String.Format ("sources.{0}"' ParentConfigurationId)' "expanded"' true' "Is source expanded"' "Is source expanded"); " is 157.
Long Statement,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,Save,The length of the statement  "	ServiceManager.DbConnection.Execute ("UPDATE CorePrimarySources SET CachedCount = ? WHERE PrimarySourceID = ?"' Count' DbId); " is 125.
Long Statement,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,RemoveTrackRange,The length of the statement  "	ServiceManager.DbConnection.Execute (String.Format (remove_range_sql' model.TrackIdsSql)' DateTime.Now' model.CacheId' range.Start' range.End - range.Start + 1' model.CacheId' range.Start' range.End - range.Start + 1); " is 218.
Long Statement,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,AcceptsInputFromSource,The length of the statement  "	return base.AcceptsInputFromSource (source) && source.Parent != this && (source.Parent is PrimarySource || source is PrimarySource) && !(source.Parent is Banshee.Library.LibrarySource); " is 185.
Long Statement,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,AddSelectedTracks,The length of the statement  "	CachedList<DatabaseTrackInfo> cached_list = CachedList<DatabaseTrackInfo>.CreateFromModelAndSelection (model' selection); " is 121.
Long Statement,Banshee.Sources,DurationStatusFormatters,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DurationStatusFormatters.cs,AwesomeConciseFormatter,The length of the statement  "		builder.AppendFormat (Catalog.GetPluralString ("{0} day"' "{0} days"' StringUtil.DoubleToPluralInt (days))' StringUtil.DoubleToTenthsPrecision (days)); " is 151.
Long Statement,Banshee.Sources,DurationStatusFormatters,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DurationStatusFormatters.cs,AwesomeConciseFormatter,The length of the statement  "		builder.AppendFormat (Catalog.GetPluralString ("{0} hour"' "{0} hours"' StringUtil.DoubleToPluralInt (hours))' StringUtil.DoubleToTenthsPrecision (hours)); " is 155.
Long Statement,Banshee.Sources,DurationStatusFormatters,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DurationStatusFormatters.cs,AwesomeConciseFormatter,The length of the statement  "		builder.AppendFormat (Catalog.GetPluralString ("{0} minute"' "{0} minutes"' StringUtil.DoubleToPluralInt (minutes))' StringUtil.DoubleToTenthsPrecision (minutes)); " is 163.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,AcceptsInputFromSource,The length of the statement  "	return base.AcceptsInputFromSource (source) && (source == Parent || (source.Parent == Parent || Parent == null)// This is commented out because we don't support (yet?) DnD from Play Queue to a playlist " is 201.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,Create,The length of the statement  "	DbId = ServiceManager.DbConnection.Execute (new HyenaSqliteCommand (@"INSERT INTO CorePlaylists (PlaylistID' Name' SortColumn' SortType' PrimarySourceID' IsTemporary)" is 166.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,AddSelectedTracks,The length of the statement  "		//Log.Information ("Note: Feature Not Implemented"' String.Format ("In this alpha release' you can only add tracks to {0} from {1} or its playlists."' Name' Parent.Name)' true); " is 177.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,ReorderSelectedTracks,The length of the statement  "	long order = track == null ? ServiceManager.DbConnection.Query<long> ("SELECT MAX(ViewOrder) + 1 FROM CorePlaylistEntries WHERE PlaylistID = ?"' DbId) : ServiceManager.DbConnection.Query<long> ("SELECT ViewOrder FROM CorePlaylistEntries WHERE PlaylistID = ? AND EntryID = ?"' DbId' Convert.ToInt64 (track.CacheEntryId)); " is 320.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,ReorderSelectedTracks,The length of the statement  "		ServiceManager.DbConnection.Execute ("UPDATE CorePlaylistEntries SET ViewOrder = ViewOrder + ? WHERE PlaylistID = ? AND ViewOrder >= ?"' TrackModel.Selection.Count' DbId' order); " is 178.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,ReorderSelectedTracks,The length of the statement  "	HyenaSqliteCommand update_command = new HyenaSqliteCommand (String.Format ("UPDATE CorePlaylistEntries SET ViewOrder = ? WHERE PlaylistID = {0} AND EntryID = ?"' DbId)); " is 169.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,ReorderSelectedTracks,The length of the statement  "	HyenaSqliteCommand select_command = new HyenaSqliteCommand (String.Format ("SELECT ItemID FROM CoreCache WHERE ModelID = {0} LIMIT ?' ?"' DatabaseTrackModel.CacheId)); " is 167.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,ReorderSelectedTracks,The length of the statement  "		foreach (long entry_id in ServiceManager.DbConnection.QueryEnumerable<long> (select_command' range.Start' range.Count)) { " is 121.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,AddTrackRange,The length of the statement  "	last_add_range_command = (!from.CachesJoinTableEntries) ? add_track_range_command : from == last_add_range_from_model ? last_add_range_command : new HyenaSqliteCommand (String.Format (add_track_range_from_joined_model_sql' from.JoinTable' from.JoinPrimaryKey)); " is 261.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,AddTrackRange,The length of the statement  "	long first_order_id = ServiceManager.DbConnection.Query<long> ("SELECT OrderID FROM CoreCache WHERE ModelID = ? LIMIT 1 OFFSET ?"' from.CacheId' range.Start); " is 158.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,AddTrackRange,The length of the statement  "	ServiceManager.DbConnection.Execute (last_add_range_command' DbId' MaxViewOrder - first_order_id' from.CacheId' range.Start' range.Count); " is 138.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,HandleTracksDeleted,The length of the statement  "                    //ServiceManager.DbConnection.Execute ("DELETE FROM CoreCache WHERE ModelID = ? AND ItemID IN (SELECT EntryID FROM CorePlaylistEntries WHERE PlaylistID = ? AND TrackID IN (TrackID FROM CoreRemovedTracks))");" is 207.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,HandleTracksDeleted,The length of the statement  "                    ServiceManager.DbConnection.Execute ("DELETE FROM CorePlaylistEntries WHERE TrackID IN (SELECT TrackID FROM CoreRemovedTracks)");" is 129.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The length of the statement  "	using (HyenaDataReader reader = new HyenaDataReader (ServiceManager.DbConnection.Query (@"SELECT PlaylistID' Name' SortColumn' SortType' PrimarySourceID' CachedCount' IsTemporary FROM CorePlaylists" is 197.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The length of the statement  "			yield return new PlaylistSource (reader.Get<string> (1)' reader.Get<long> (0)' reader.Get<int> (2)' reader.Get<int> (3)' parent' reader.Get<int> (5)' reader.Get<bool> (6)); " is 172.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,ClearTemporary,The length of the statement  "                    DELETE FROM CorePlaylistEntries WHERE PlaylistID IN (SELECT PlaylistID FROM CorePlaylists WHERE PrimarySourceID = ? AND IsTemporary = 1);" is 137.
Long Statement,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,CreateUniqueName,The length of the statement  "	return NamingUtil.PostfixDuplicate (NamingUtil.GenerateTrackCollectionName (tracks' Catalog.GetString ("New Playlist"))' PlaylistExists); " is 137.
Long Statement,Banshee.Playlist,ImportPlaylistWorker,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistFileUtil.cs,CreatePlaylist,The length of the statement  "		HyenaSqliteCommand insert_command = new HyenaSqliteCommand (String.Format (@"INSERT INTO CorePlaylistEntries (PlaylistID' TrackID) VALUES ({0}' ?)"' playlist.DbId)); " is 165.
Long Statement,Banshee.ServiceStack,Application,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\Application.cs,Shutdown,The length of the statement  "	if (Banshee.Kernel.Scheduler.IsScheduled (typeof(Banshee.Kernel.IInstanceCriticalJob)) || ServiceManager.JobScheduler.HasAnyDataLossJobs || Banshee.Kernel.Scheduler.CurrentJob is Banshee.Kernel.IInstanceCriticalJob) { " is 217.
Long Statement,Banshee.ServiceStack,ServiceManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\ServiceManager.cs,InitializeAddins,The length of the statement  "	IProgressStatus monitor = ApplicationContext.CommandLine.Contains ("debug-addins") ? new ConsoleProgressStatus (true) : null; " is 125.
Long Statement,Banshee.ServiceStack,ServiceManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\ServiceManager.cs,RegisterService,The length of the statement  "			Log.ErrorFormat ("Error initializing required service {0}"' service == null ? type.ToString () : service.ServiceName' false); " is 125.
Long Statement,Banshee.ServiceStack,ServiceManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\ServiceManager.cs,RegisterService,The length of the statement  "		Log.Warning (String.Format ("Service `{0}' not started: {1}"' type.FullName' e.InnerException != null ? e.InnerException.Message : e.Message)); " is 143.
Long Statement,Banshee.ServiceStack,ServiceManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\ServiceManager.cs,StartExtension,The length of the statement  "		Log.Warning (String.Format ("Extension `{0}' not started: {1}"' service == null ? node.Path : service.GetType ().FullName' e.Message)); " is 135.
Long Statement,Banshee.MediaEngine,PlayerEngine,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngine.cs,HandleNextTrack,The length of the statement  "		SetNextTrackUri (track == null ? null : track.Uri' track == null || track.HasAttribute (TrackMediaAttributes.VideoStream) || track is UnknownTrackInfo); " is 152.
Long Statement,Banshee.MediaEngine,PlayerEngine,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngine.cs,HandleOpen,The length of the statement  "	if (current_state != PlayerState.Idle && current_state != PlayerState.NotReady && current_state != PlayerState.Contacting) { " is 124.
Long Statement,Banshee.MediaEngine,PlayerEngine,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngine.cs,VideoExpose,The length of the statement  "	throw new NotImplementedException ("Engine must implement VideoExpose since this method only gets called when SupportsVideo is true"); " is 134.
Long Statement,Banshee.MediaEngine,PlayerEngine,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngine.cs,VideoWindowRealize,The length of the statement  "	throw new NotImplementedException ("Engine must implement VideoWindowRealize since this method only gets called when SupportsVideo is true"); " is 141.
Long Statement,Banshee.MediaEngine,PlayerEngine,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngine.cs,OnEventChanged,The length of the statement  "		Log.DebugFormat ("OnEventChanged called with StartOfStream.  Replacing current_track with pending_track: \"{0}\""' pending_track.DisplayTrackTitle); " is 148.
Long Statement,Banshee.MediaEngine,PlayerEngineService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngineService.cs,Initialize,The length of the statement  "		Log.Warning (Catalog.GetString ("No player engines were found. Please ensure Banshee has been cleanly installed.")' "Using the featureless NullPlayerEngine."); " is 159.
Long Statement,Banshee.MediaEngine,PlayerEngineService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngineService.cs,Initialize,The length of the statement  "	TrackInfo.IsPlayingMethod = track => IsPlaying (track) && track.CacheModelId == CurrentTrack.CacheModelId && (track.CacheEntryId == null || track.CacheEntryId.Equals (CurrentTrack.CacheEntryId)); " is 195.
Long Statement,Banshee.MediaEngine,PlayerEngineService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngineService.cs,OnEngineEventChanged,The length of the statement  "		dbus_handler (args.Event.ToString ().ToLower ()' args is PlayerEventErrorArgs ? ((PlayerEventErrorArgs)args).Message : String.Empty' args is PlayerEventBufferingArgs ? ((PlayerEventBufferingArgs)args).Progress : 0); " is 215.
Long Statement,Banshee.MediaEngine,PlayerEngineService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngineService.cs,IsPlaying,The length of the statement  "	return CurrentState == PlayerState.Playing || CurrentState == PlayerState.Paused || CurrentState == PlayerState.Loaded || CurrentState == PlayerState.Loading || CurrentState == PlayerState.Contacting; " is 200.
Long Statement,Banshee.Collection,ImportManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\ImportManager.cs,UpdateScannerProgress,The length of the statement  "				user_job.Status = String.Format (Catalog.GetString ("Scanning ({0} files)...")' import_element.TotalCount.ToString ("N"' number_format)); " is 137.
Long Statement,Banshee.Collection,RescanPipeline,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\RescanPipeline.cs,OnFinished,The length of the statement  "	//Hyena.Log.DebugFormat ("Have {0} items before delete"' ServiceManager.DbConnection.Query<int>("select count(*) from coretracks where primarysourceid=?"' psource.DbId)); " is 170.
Long Statement,Banshee.Collection,RescanPipeline,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\RescanPipeline.cs,OnFinished,The length of the statement  "	string condition = String.Format (@"WHERE PrimarySourceID = ? AND {0} LIKE ? ESCAPE '\' AND {1} IS NOT NULL AND {1} < ?"' Banshee.Query.BansheeQuery.UriField.Column' "CoreTracks.LastSyncedStamp"); " is 196.
Long Statement,Banshee.Collection,RescanPipeline,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\RescanPipeline.cs,OnFinished,The length of the statement  "	int remove_count = ServiceManager.DbConnection.Query<int> (String.Format (@"SELECT COUNT('x') FROM CoreTracks {0}"' condition)' psource.DbId' uri' scan_started); " is 161.
Long Statement,Banshee.Collection,RescanPipeline,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\RescanPipeline.cs,OnFinished,The length of the statement  "                        DELETE FROM CoreTracks {0}; COMMIT"' condition)' psource.DbId' uri' scan_started' psource.DbId' uri' scan_started' psource.DbId' uri' scan_started); " is 148.
Long Statement,Banshee.Collection,RescanPipeline,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\RescanPipeline.cs,OnFinished,The length of the statement  "	//Hyena.Log.DebugFormat ("Have {0} items after delete"' ServiceManager.DbConnection.Query<int>("select count(*) from coretracks where primarysourceid=?"' psource.DbId)); " is 169.
Long Statement,Banshee.Collection,TrackSyncPipelineElement,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\RescanPipeline.cs,ProcessItem,The length of the statement  "				using (var similar_reader = ServiceManager.DbConnection.Query (fetch_similar_command' psource.DbId' scan_started' track.MetadataHash)) { " is 136.
Long Statement,Banshee.Collection,TrackSyncPipelineElement,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\RescanPipeline.cs,MergeIfModified,The length of the statement  "			Banshee.Streaming.StreamTagger.TrackInfoMerge (track' file' false' SaveTrackMetadataService.WriteRatingsEnabled.Value' SaveTrackMetadataService.WritePlayCountsEnabled.Value); " is 174.
Long Statement,Banshee.Playlists.Formats,AsxPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,CheckAsxHeader,The length of the statement  "	return xml_reader.Depth == 0 && xml_reader.NodeType == XmlNodeType.Element && String.Compare ("asx"' xml_reader.LocalName' true) == 0; " is 134.
Long Statement,Banshee.Playlists.Formats,M3uPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\M3uPlaylistFormat.cs,MagicHandler,The length of the statement  "	return line == "#EXTM3U" || line.StartsWith ("http") || Banshee.Collection.Database.DatabaseImportManager.IsWhiteListedFile (line); " is 131.
Long Statement,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The length of the statement  "			int index = Int32.Parse (line.Substring (index_offset' eq_offset - index_offset)' ApplicationContext.InternalCultureInfo.NumberFormat) - 1; " is 139.
Long Statement,Banshee.Playlists.Formats,AsfReferencePlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsfReferencePlaylistFormat.cs,Load,The length of the statement  "		if (line.StartsWith ("ref01"' StringComparison.CurrentCultureIgnoreCase) || line.StartsWith ("ref1"' StringComparison.CurrentCultureIgnoreCase)) { " is 146.
Long Statement,Banshee.Web,Browser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\Browser.cs,Open,The length of the statement  "			Log.Warning (Catalog.GetString ("Could not launch URL")' String.Format (Catalog.GetString ("{0} could not be opened: {1}\n\n " + "Check your 'Preferred Applications' settings.")' url' e.Message)' true); " is 202.
Long Statement,Banshee.Web,HttpRequest,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\HttpRequest.cs,GetResponseStream,The length of the statement  "	return response.ContentEncoding == "gzip" ? new GZipInputStream (response.GetResponseStream ()) : response.GetResponseStream (); " is 128.
Long Statement,Banshee.Equalizer,EqualizerSetting,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerSetting.cs,SetGain,The length of the statement  "		throw new ArgumentOutOfRangeException (String.Format ("Band number {0} invalid - only up to {1} bands supported."' band' bandcount)); " is 133.
Long Statement,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The length of the statement  "	int version = ServiceManager.DbConnection.Query<int> ("SELECT Value FROM CoreConfiguration WHERE Key = 'SmartPlaylistVersion'"); " is 128.
Long Statement,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The length of the statement  "		using (IDataReader reader = ServiceManager.DbConnection.Query ("SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion FROM CoreSmartPlaylists")) { " is 170.
Long Statement,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The length of the statement  "				m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string); " is 151.
Long Statement,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The length of the statement  "		Log.Error (Catalog.GetString ("Unable to Migrate Smart Playlists")' String.Format (Catalog.GetString ("Please file a bug with this error: {0}")' e.ToString ())' true); " is 167.
Long Statement,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,AddCondition,The length of the statement  "		additional_conditions = additional_conditions == null ? part : String.Format ("{0} AND {1}"' additional_conditions' part); " is 122.
Long Statement,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,Create,The length of the statement  "                    VALUES (?' ?' ?' ?' ?' ?' ?' ?)"' Name' ConditionXml' QueryOrder != null ? QueryOrder.Name : null' IsLimited ? LimitValue.ToSql () : null' IsLimited ? Limit.Name : null' PrimarySourceId' IsTemporary' IsHiddenWhenEmpty)); " is 220.
Long Statement,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,Update,The length of the statement  "                    WHERE SmartPlaylistID = ?"' Name' ConditionXml' IsLimited ? QueryOrder.Name : null' IsLimited ? LimitValue.ToSql () : null' IsLimited ? Limit.Name : null' Count' IsTemporary' IsHiddenWhenEmpty' DbId)); " is 201.
Long Statement,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,Refresh,The length of the statement  "                        {4} {5} {6}"' DbId' DatabaseTrackInfo.Provider.From' DatabaseTrackInfo.Provider.Where' PrimarySourceId' PrependCondition ("AND")' OrderSql' LimitSql); " is 150.
Long Statement,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,Refresh,The length of the statement  "			ServiceManager.DbConnection.Execute (new HyenaSqliteCommand ("DELETE FROM CoreSmartPlaylistEntries WHERE SmartPlaylistID = ? AND EntryID >= ?"' DbId' cut_off_id)); " is 163.
Long Statement,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The length of the statement  "	using (HyenaDataReader reader = new HyenaDataReader (ServiceManager.DbConnection.Query (@"SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion' PrimarySourceID' CachedCount' IsTemporary' IsHiddenWhenEmpty" is 229.
Long Statement,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The length of the statement  "				playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9)); " is 251.
Long Statement,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,ClearTemporary,The length of the statement  "                    DELETE FROM CoreSmartPlaylistEntries WHERE SmartPlaylistID IN (SELECT SmartPlaylistID FROM CoreSmartPlaylists WHERE IsTemporary = 1);" is 133.
Long Statement,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,StartTimer,The length of the statement  "		Log.Information ("Starting Smart Playlist Auto-Refresh"' "Time-dependent smart playlist added' so starting one-minute auto-refresh timer."' false); " is 147.
Long Statement,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,StopTimer,The length of the statement  "		Log.Information ("Stopping timer"' "There are no time-dependent smart playlists' so stopping auto-refresh timer."' false); " is 122.
Long Statement,Banshee.SmartPlaylist,SmartPlaylistDefinition,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistDefinition.cs,ToSmartPlaylistSource,The length of the statement  "	return new SmartPlaylistSource (Name' UserQueryParser.Parse (Condition' BansheeQuery.FieldSet)' Order' Limit' LimitNumber' HiddenWhenEmpty' primary_source); " is 156.
Long Statement,Banshee.Metadata,SaveTrackMetadataJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata\SaveTrackMetadataJob.cs,RenameFile,The length of the statement  "	string new_filename = track.PathPattern.BuildFull (musicLibrarySource.BaseDirectory' track' System.IO.Path.GetExtension (old_uri.ToString ())); " is 143.
Long Statement,Banshee.Metadata.FileSystem,FileSystemQueryJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.FileSystem\FileSystemQueryJob.cs,Fetch,The length of the statement  "			SaveAtomically (CoverArtSpec.GetPathForNewFile (Track.ArtworkId' best_file)' Banshee.IO.File.OpenRead (new SafeUri (best_file))); " is 129.
Long Statement,Banshee.Metadata.Rhapsody,RhapsodyQueryJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.Rhapsody\RhapsodyQueryJob.cs,Run,The length of the statement  "		if (SaveHttpStreamCover (new Uri (first_attempt)' artwork_id' null) || SaveHttpStreamCover (new Uri (second_attempt)' artwork_id' null)) { " is 138.
Long Statement,Banshee.PlaybackController,PlaybackControllerService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,QueryTrackRandom,The length of the statement  "	TrackInfo track = track_shuffler == null ? Source.TrackModel.GetRandom (source_set_at) : track_shuffler.GetRandom (source_set_at' shuffle_mode' restart' last_was_skipped' Banshee.Collection.Database.Shuffler.Playback); " is 218.
Long Statement,Banshee.Configuration,DatabaseConfigurationClient,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Configuration\DatabaseConfigurationClient.cs,Get,The length of the statement  "	return connection.Query (select_value_command' Banshee.Configuration.MemoryConfigurationClient.MakeKey (namespce' key)); " is 120.
Long Statement,Banshee.Query,BansheeQuery,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Query\BansheeQuery.cs,GetSort,The length of the statement  "	} else if (field.Equals (ComposerField) || field.Equals (GenreField) || field.Equals (ComposerField) || field.Equals (ConductorField) || field.Equals (CommentField)) { " is 167.
Long Statement,Banshee.Query,BansheeQuery,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Query\BansheeQuery.cs,GetSort,The length of the statement  "	} else if (field.Equals (LastPlayedField) || field.Equals (LastSkippedField) || field.Equals (DateAddedField) || field.Equals (YearField) || field.Equals (BitRateField) || field.Equals (SampleRateField) || field.Equals (BitsPerSampleField) || field.Equals (BpmField) || field.Equals (TrackCountField) || field.Equals (DiscCountField) || field.Equals (DurationField) || field.Equals (RatingField) || field.Equals (PlayCountField) || field.Equals (SkipCountField) || field.Equals (FileSizeField) || field.Equals (UriField) || field.Equals (MimeTypeField) || field.Equals (LicenseUriField)) { " is 589.
Long Statement,Banshee.Hardware,VendorProductInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Hardware\VendorProductInfo.cs,ToString,The length of the statement  "	return String.Format ("{0}' {1}; Vendor ID = {2}' Product ID = {3} ({4})"' VendorName' ProductName' VendorId' ProductId' VendorProductId); " is 138.
Long Statement,Banshee.Hardware,VendorProductDeviceNode,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Hardware\VendorProductDeviceNode.cs,ParseId,The length of the statement  "		Int32.TryParse (value' NumberStyles.AllowLeadingWhite | NumberStyles.AllowTrailingWhite' CultureInfo.InvariantCulture' out result); " is 131.
Long Statement,Banshee.Hardware,DeviceCommand,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Hardware\DeviceCommand.cs,ParseCommandLine,The length of the statement  "	Hyena.Log.InformationFormat ("Received device command: action = {0}' device = {1}"' d_command.Action' d_command.DeviceId); " is 122.
Long Statement,Banshee.MediaProfiles,Pipeline,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\Pipeline.cs,AddVariable,The length of the statement  "		throw new ApplicationException (String.Format ("A variable with ID '{0}' already exists in this profile"' variable.Id)); " is 120.
Long Statement,Banshee.Metadata.LastFM,LastFMQueryJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.LastFM\LastFMQueryJob.cs,Run,The length of the statement  "		//Log.DebugFormat ("No coverart provided by lastfm. (you can upload it here: {0}) - {1} "' upload_url' Track.ArtworkId); " is 120.
Long Statement,Banshee.Metadata.LastFM,LastFMQueryJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.LastFM\LastFMQueryJob.cs,Run,The length of the statement  "		if ((high_res_url != null && SaveHttpStreamCover (new Uri (high_res_url)' artwork_id' null)) || SaveHttpStreamCover (new Uri (best_url)' artwork_id' null)) { " is 157.
Long Statement,Banshee.Collection.Indexer,CollectionIndexerService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Indexer\CollectionIndexerService.cs,HasCollectionLastModifiedChanged,The length of the statement  "			last_updated = Math.Max (last_updated' ServiceManager.DbConnection.Query<long> (String.Format ("SELECT MAX(CoreTracks.DateUpdatedStamp) {0}"' library.DatabaseTrackModel.UnfilteredQuery))); " is 188.
Long Statement,Banshee.Collection.Indexer,CollectionIndexerService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Indexer\CollectionIndexerService.cs,GetAvailableExportFields,The length of the statement  "		foreach (KeyValuePair<string' System.Reflection.PropertyInfo> field in TrackInfo.GetExportableProperties (typeof(DatabaseTrackInfo))) { " is 135.
Long Statement,Banshee.Collection.Indexer,CollectionIndexerService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Indexer\CollectionIndexerService.cs,OnLibraryChanged,The length of the statement  "		if (field != Banshee.Query.BansheeQuery.LastPlayedField && field != Banshee.Query.BansheeQuery.LastSkippedField && field != Banshee.Query.BansheeQuery.PlayCountField && field != Banshee.Query.BansheeQuery.SkipCountField) { " is 222.
Long Statement,Banshee.Metrics,Configuration,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metrics\Configuration.cs,OnSchemaAdded,The length of the statement  "	if (Array.BinarySearch<string> (fuzzy_keys' key) >= 0 || Array.BinarySearch<string> (exact_keys' String.Format ("{0}/{1}"' ns' key)) >= 0) { " is 140.
Complex Conditional,Banshee.Collection.Database,DatabaseTrackInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,Save,The conditional expression  "ArtistId == 0 || AlbumId == 0 || artist_changed == true || album_changed == true"  is complex.
Complex Conditional,Banshee.Collection.Database,DatabaseTrackInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,CopyToLibraryIfAppropriate,The conditional expression  "!in_library && ((library_source.HasCopyOnImport && library_source.CopyOnImport) || force_copy)"  is complex.
Complex Conditional,Banshee.MediaEngine,PlayerEngine,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngine.cs,OnTagFound,The conditional expression  "tag.Equals (StreamTag.Zero) || current_track == null || (current_track.Uri != null && current_track.Uri.IsFile)"  is complex.
Complex Conditional,Banshee.MediaEngine,PlayerEngineService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngineService.cs,Initialize,The conditional expression  "default_engine == null || active_engine == null || engines == null || engines.Count == 0"  is complex.
Complex Conditional,Banshee.Metadata.FileSystem,FileSystemQueryJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.FileSystem\FileSystemQueryJob.cs,Fetch,The conditional expression  "Track.Uri == null || !Track.Uri.IsFile || Track.ArtworkId == null || !Banshee.IO.File.Exists (Track.Uri)"  is complex.
Complex Conditional,Banshee.Query,BansheeQuery,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Query\BansheeQuery.cs,GetSort,The conditional expression  "field.Equals (ComposerField) || field.Equals (GenreField) || field.Equals (ComposerField) || field.Equals (ConductorField) || field.Equals (CommentField)"  is complex.
Complex Conditional,Banshee.Query,BansheeQuery,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Query\BansheeQuery.cs,GetSort,The conditional expression  "field.Equals (LastPlayedField) || field.Equals (LastSkippedField) || field.Equals (DateAddedField) || field.Equals (YearField) || field.Equals (BitRateField) || field.Equals (SampleRateField) || field.Equals (BitsPerSampleField) || field.Equals (BpmField) || field.Equals (TrackCountField) || field.Equals (DiscCountField) || field.Equals (DurationField) || field.Equals (RatingField) || field.Equals (PlayCountField) || field.Equals (SkipCountField) || field.Equals (FileSizeField) || field.Equals (UriField) || field.Equals (MimeTypeField) || field.Equals (LicenseUriField)"  is complex.
Complex Conditional,Banshee.MediaProfiles,PipelineVariable,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\PipelineVariable.cs,PipelineVariable,The conditional expression  "default_value != null && default_value != String.Empty && (current_value == null || current_value == String.Empty)"  is complex.
Complex Conditional,Banshee.Collection.Indexer,CollectionIndexerService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Indexer\CollectionIndexerService.cs,OnLibraryChanged,The conditional expression  "field != Banshee.Query.BansheeQuery.LastPlayedField && field != Banshee.Query.BansheeQuery.LastSkippedField && field != Banshee.Query.BansheeQuery.PlayCountField && field != Banshee.Query.BansheeQuery.SkipCountField"  is complex.
Virtual Method Call from Constructor,Banshee.PlaybackController,PlaybackControllerService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,PlaybackControllerService,The constructor "PlaybackControllerService" calls a virtual method "InstantiateStacks".
Empty Catch Block,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_7,The method has an empty catch block.
Empty Catch Block,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_7,The method has an empty catch block.
Empty Catch Block,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_7,The method has an empty catch block.
Empty Catch Block,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_7,The method has an empty catch block.
Empty Catch Block,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,MigrateFromLegacyBanshee,The method has an empty catch block.
Empty Catch Block,Banshee.Networking,Network,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\Network.cs,OnNetworkManagerEvent,The method has an empty catch block.
Empty Catch Block,Banshee.Sources,SourceManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\SourceManager.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,DeleteTrack,The method has an empty catch block.
Empty Catch Block,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,DeleteTrack,The method has an empty catch block.
Empty Catch Block,Banshee.Playlist,PlaylistFileUtil,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistFileUtil.cs,GetDefaultExportFormat,The method has an empty catch block.
Empty Catch Block,Banshee.Playlist,PlaylistFileUtil,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistFileUtil.cs,SetDefaultExportFormat,The method has an empty catch block.
Empty Catch Block,Banshee.Playlist,PlaylistFileUtil,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistFileUtil.cs,Load,The method has an empty catch block.
Empty Catch Block,Banshee.ServiceStack,ServiceManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\ServiceManager.cs,InitializeAddins,The method has an empty catch block.
Empty Catch Block,Banshee.MediaEngine,TranscoderService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\TranscoderService.cs,TranscoderService,The method has an empty catch block.
Empty Catch Block,Banshee.Playlists.Formats,AsxPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,Load,The method has an empty catch block.
Empty Catch Block,Banshee.Playlists.Formats,AsxPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,LoadEntry,The method has an empty catch block.
Empty Catch Block,Banshee.Playlists.Formats,M3uPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\M3uPlaylistFormat.cs,Load,The method has an empty catch block.
Empty Catch Block,Banshee.Web,BaseHttpServer,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\BaseHttpServer.cs,HandleConnection,The method has an empty catch block.
Empty Catch Block,Banshee.Configuration,DatabaseConfigurationClient,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Configuration\DatabaseConfigurationClient.cs,TryGet,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,MediaProfileManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\MediaProfileManager.cs,LoadPresetVariables,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,Pipeline,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\Pipeline.cs,Pipeline,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,Pipeline,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\Pipeline.cs,Pipeline,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,Pipeline,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\Pipeline.cs,Pipeline,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,PipelineVariable,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\PipelineVariable.cs,PipelineVariable,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,PipelineVariable,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\PipelineVariable.cs,PipelineVariable,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,PipelineVariable,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\PipelineVariable.cs,PipelineVariable,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,PipelineVariable,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\PipelineVariable.cs,ReadValue,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,PipelineVariable,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\PipelineVariable.cs,ToDouble,The method has an empty catch block.
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_1,The following statement contains a magic number: if (TableExists ("Tracks")) {  	InitializeFreshDatabase (true);  	uint timer_id = Log.DebugTimerStart ("Database Schema Migration");  	OnSlowStarted (Catalog.GetString ("Upgrading your Banshee Database")' Catalog.GetString ("Please wait while your old Banshee database is migrated to the new format."));  	Thread thread = new Thread (MigrateFromLegacyBanshee);  	thread.Name = "Database Migrator";  	thread.Start ();  	while (thread.IsAlive) {  		OnSlowPulse ();  		Thread.Sleep (100);  	}  	Log.DebugTimerPrint (timer_id);  	OnSlowFinished ();  	return false;  } else {  	InitializeFreshDatabase (false);  	return false;  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_1,The following statement contains a magic number: while (thread.IsAlive) {  	OnSlowPulse ();  	Thread.Sleep (100);  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_1,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: using (var reader = new HyenaDataReader (connection.Query (sql_select))) {  	while (reader.Read ()) {  		sb.Length = 0;  		sb.Append (reader.Get<string> (1));  		sb.Append (reader.Get<string> (2));  		sb.Append ((int)reader.Get<TimeSpan> (3).TotalSeconds);  		sb.Append (reader.Get<string> (4));  		sb.Append (reader.Get<string> (5));  		sb.Append (reader.Get<int> (6));  		sb.Append (reader.Get<int> (7));  		string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  		connection.Execute (sql_update' hash' reader.Get<int> (0));  	}  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: using (var reader = new HyenaDataReader (connection.Query (sql_select))) {  	while (reader.Read ()) {  		sb.Length = 0;  		sb.Append (reader.Get<string> (1));  		sb.Append (reader.Get<string> (2));  		sb.Append ((int)reader.Get<TimeSpan> (3).TotalSeconds);  		sb.Append (reader.Get<string> (4));  		sb.Append (reader.Get<string> (5));  		sb.Append (reader.Get<int> (6));  		sb.Append (reader.Get<int> (7));  		string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  		connection.Execute (sql_update' hash' reader.Get<int> (0));  	}  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: using (var reader = new HyenaDataReader (connection.Query (sql_select))) {  	while (reader.Read ()) {  		sb.Length = 0;  		sb.Append (reader.Get<string> (1));  		sb.Append (reader.Get<string> (2));  		sb.Append ((int)reader.Get<TimeSpan> (3).TotalSeconds);  		sb.Append (reader.Get<string> (4));  		sb.Append (reader.Get<string> (5));  		sb.Append (reader.Get<int> (6));  		sb.Append (reader.Get<int> (7));  		string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  		connection.Execute (sql_update' hash' reader.Get<int> (0));  	}  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: using (var reader = new HyenaDataReader (connection.Query (sql_select))) {  	while (reader.Read ()) {  		sb.Length = 0;  		sb.Append (reader.Get<string> (1));  		sb.Append (reader.Get<string> (2));  		sb.Append ((int)reader.Get<TimeSpan> (3).TotalSeconds);  		sb.Append (reader.Get<string> (4));  		sb.Append (reader.Get<string> (5));  		sb.Append (reader.Get<int> (6));  		sb.Append (reader.Get<int> (7));  		string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  		connection.Execute (sql_update' hash' reader.Get<int> (0));  	}  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: using (var reader = new HyenaDataReader (connection.Query (sql_select))) {  	while (reader.Read ()) {  		sb.Length = 0;  		sb.Append (reader.Get<string> (1));  		sb.Append (reader.Get<string> (2));  		sb.Append ((int)reader.Get<TimeSpan> (3).TotalSeconds);  		sb.Append (reader.Get<string> (4));  		sb.Append (reader.Get<string> (5));  		sb.Append (reader.Get<int> (6));  		sb.Append (reader.Get<int> (7));  		string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  		connection.Execute (sql_update' hash' reader.Get<int> (0));  	}  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: using (var reader = new HyenaDataReader (connection.Query (sql_select))) {  	while (reader.Read ()) {  		sb.Length = 0;  		sb.Append (reader.Get<string> (1));  		sb.Append (reader.Get<string> (2));  		sb.Append ((int)reader.Get<TimeSpan> (3).TotalSeconds);  		sb.Append (reader.Get<string> (4));  		sb.Append (reader.Get<string> (5));  		sb.Append (reader.Get<int> (6));  		sb.Append (reader.Get<int> (7));  		string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  		connection.Execute (sql_update' hash' reader.Get<int> (0));  	}  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: while (reader.Read ()) {  	sb.Length = 0;  	sb.Append (reader.Get<string> (1));  	sb.Append (reader.Get<string> (2));  	sb.Append ((int)reader.Get<TimeSpan> (3).TotalSeconds);  	sb.Append (reader.Get<string> (4));  	sb.Append (reader.Get<string> (5));  	sb.Append (reader.Get<int> (6));  	sb.Append (reader.Get<int> (7));  	string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  	connection.Execute (sql_update' hash' reader.Get<int> (0));  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: while (reader.Read ()) {  	sb.Length = 0;  	sb.Append (reader.Get<string> (1));  	sb.Append (reader.Get<string> (2));  	sb.Append ((int)reader.Get<TimeSpan> (3).TotalSeconds);  	sb.Append (reader.Get<string> (4));  	sb.Append (reader.Get<string> (5));  	sb.Append (reader.Get<int> (6));  	sb.Append (reader.Get<int> (7));  	string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  	connection.Execute (sql_update' hash' reader.Get<int> (0));  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: while (reader.Read ()) {  	sb.Length = 0;  	sb.Append (reader.Get<string> (1));  	sb.Append (reader.Get<string> (2));  	sb.Append ((int)reader.Get<TimeSpan> (3).TotalSeconds);  	sb.Append (reader.Get<string> (4));  	sb.Append (reader.Get<string> (5));  	sb.Append (reader.Get<int> (6));  	sb.Append (reader.Get<int> (7));  	string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  	connection.Execute (sql_update' hash' reader.Get<int> (0));  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: while (reader.Read ()) {  	sb.Length = 0;  	sb.Append (reader.Get<string> (1));  	sb.Append (reader.Get<string> (2));  	sb.Append ((int)reader.Get<TimeSpan> (3).TotalSeconds);  	sb.Append (reader.Get<string> (4));  	sb.Append (reader.Get<string> (5));  	sb.Append (reader.Get<int> (6));  	sb.Append (reader.Get<int> (7));  	string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  	connection.Execute (sql_update' hash' reader.Get<int> (0));  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: while (reader.Read ()) {  	sb.Length = 0;  	sb.Append (reader.Get<string> (1));  	sb.Append (reader.Get<string> (2));  	sb.Append ((int)reader.Get<TimeSpan> (3).TotalSeconds);  	sb.Append (reader.Get<string> (4));  	sb.Append (reader.Get<string> (5));  	sb.Append (reader.Get<int> (6));  	sb.Append (reader.Get<int> (7));  	string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  	connection.Execute (sql_update' hash' reader.Get<int> (0));  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: while (reader.Read ()) {  	sb.Length = 0;  	sb.Append (reader.Get<string> (1));  	sb.Append (reader.Get<string> (2));  	sb.Append ((int)reader.Get<TimeSpan> (3).TotalSeconds);  	sb.Append (reader.Get<string> (4));  	sb.Append (reader.Get<string> (5));  	sb.Append (reader.Get<int> (6));  	sb.Append (reader.Get<int> (7));  	string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  	connection.Execute (sql_update' hash' reader.Get<int> (0));  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: sb.Append (reader.Get<string> (2));  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: sb.Append ((int)reader.Get<TimeSpan> (3).TotalSeconds);  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: sb.Append (reader.Get<string> (4));  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: sb.Append (reader.Get<string> (5));  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: sb.Append (reader.Get<int> (6));  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: sb.Append (reader.Get<int> (7));  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: using (var reader = new HyenaDataReader (connection.Query (sql_select))) {  	while (reader.Read ()) {  		sb.Length = 0;  		sb.Append (reader.Get<string> (1));  		sb.Append (reader.Get<string> (2));  		sb.Append (reader.Get<string> (3));  		sb.Append (reader.Get<string> (4));  		sb.Append (reader.Get<int> (5));  		sb.Append (reader.Get<int> (6));  		string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  		connection.Execute (sql_update' hash' reader.Get<int> (0));  	}  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: using (var reader = new HyenaDataReader (connection.Query (sql_select))) {  	while (reader.Read ()) {  		sb.Length = 0;  		sb.Append (reader.Get<string> (1));  		sb.Append (reader.Get<string> (2));  		sb.Append (reader.Get<string> (3));  		sb.Append (reader.Get<string> (4));  		sb.Append (reader.Get<int> (5));  		sb.Append (reader.Get<int> (6));  		string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  		connection.Execute (sql_update' hash' reader.Get<int> (0));  	}  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: using (var reader = new HyenaDataReader (connection.Query (sql_select))) {  	while (reader.Read ()) {  		sb.Length = 0;  		sb.Append (reader.Get<string> (1));  		sb.Append (reader.Get<string> (2));  		sb.Append (reader.Get<string> (3));  		sb.Append (reader.Get<string> (4));  		sb.Append (reader.Get<int> (5));  		sb.Append (reader.Get<int> (6));  		string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  		connection.Execute (sql_update' hash' reader.Get<int> (0));  	}  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: using (var reader = new HyenaDataReader (connection.Query (sql_select))) {  	while (reader.Read ()) {  		sb.Length = 0;  		sb.Append (reader.Get<string> (1));  		sb.Append (reader.Get<string> (2));  		sb.Append (reader.Get<string> (3));  		sb.Append (reader.Get<string> (4));  		sb.Append (reader.Get<int> (5));  		sb.Append (reader.Get<int> (6));  		string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  		connection.Execute (sql_update' hash' reader.Get<int> (0));  	}  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: using (var reader = new HyenaDataReader (connection.Query (sql_select))) {  	while (reader.Read ()) {  		sb.Length = 0;  		sb.Append (reader.Get<string> (1));  		sb.Append (reader.Get<string> (2));  		sb.Append (reader.Get<string> (3));  		sb.Append (reader.Get<string> (4));  		sb.Append (reader.Get<int> (5));  		sb.Append (reader.Get<int> (6));  		string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  		connection.Execute (sql_update' hash' reader.Get<int> (0));  	}  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: while (reader.Read ()) {  	sb.Length = 0;  	sb.Append (reader.Get<string> (1));  	sb.Append (reader.Get<string> (2));  	sb.Append (reader.Get<string> (3));  	sb.Append (reader.Get<string> (4));  	sb.Append (reader.Get<int> (5));  	sb.Append (reader.Get<int> (6));  	string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  	connection.Execute (sql_update' hash' reader.Get<int> (0));  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: while (reader.Read ()) {  	sb.Length = 0;  	sb.Append (reader.Get<string> (1));  	sb.Append (reader.Get<string> (2));  	sb.Append (reader.Get<string> (3));  	sb.Append (reader.Get<string> (4));  	sb.Append (reader.Get<int> (5));  	sb.Append (reader.Get<int> (6));  	string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  	connection.Execute (sql_update' hash' reader.Get<int> (0));  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: while (reader.Read ()) {  	sb.Length = 0;  	sb.Append (reader.Get<string> (1));  	sb.Append (reader.Get<string> (2));  	sb.Append (reader.Get<string> (3));  	sb.Append (reader.Get<string> (4));  	sb.Append (reader.Get<int> (5));  	sb.Append (reader.Get<int> (6));  	string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  	connection.Execute (sql_update' hash' reader.Get<int> (0));  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: while (reader.Read ()) {  	sb.Length = 0;  	sb.Append (reader.Get<string> (1));  	sb.Append (reader.Get<string> (2));  	sb.Append (reader.Get<string> (3));  	sb.Append (reader.Get<string> (4));  	sb.Append (reader.Get<int> (5));  	sb.Append (reader.Get<int> (6));  	string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  	connection.Execute (sql_update' hash' reader.Get<int> (0));  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: while (reader.Read ()) {  	sb.Length = 0;  	sb.Append (reader.Get<string> (1));  	sb.Append (reader.Get<string> (2));  	sb.Append (reader.Get<string> (3));  	sb.Append (reader.Get<string> (4));  	sb.Append (reader.Get<int> (5));  	sb.Append (reader.Get<int> (6));  	string hash = Hyena.CryptoUtil.Md5Encode (sb.ToString ()' System.Text.Encoding.UTF8);  	connection.Execute (sql_update' hash' reader.Get<int> (0));  }  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: sb.Append (reader.Get<string> (2));  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: sb.Append (reader.Get<string> (3));  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: sb.Append (reader.Get<string> (4));  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: sb.Append (reader.Get<int> (5));  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: sb.Append (reader.Get<int> (6));  
Magic Number,Banshee.Database,BansheeDbFormatMigrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,RefreshMetadataDelayed,The following statement contains a magic number: Application.RunTimeout (3000' RefreshMetadata);  
Magic Number,Banshee.Collection.Database,Bookmark,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\Bookmark.cs,HandleStateChanged,The following statement contains a magic number: if (state == PlayerState.Loaded || state == PlayerState.Playing) {  	if (!ServiceManager.PlayerEngine.CurrentTrack.IsLive) {  		// Sleep in 5ms increments for at most 250ms waiting for CanSeek to be true  		int count = 0;  		while (count < 50 && !ServiceManager.PlayerEngine.CanSeek) {  			//Console.WriteLine ("JumpTo: HandleStateChanged' can't seek yet' waiting 5 ms");  			System.Threading.Thread.Sleep (5);  			count++;  		}  	}  	if (ServiceManager.PlayerEngine.CanSeek) {  		//Console.WriteLine ("JumpTo: HandleStateChanged' can seek - jumping!");  		ServiceManager.PlayerEngine.Position = (uint)Position.TotalMilliseconds;  		jumped = true;  	} else {  		//Console.WriteLine ("JumpTo: HandleStateChanged' can't seek - bailing :(");  	}  }  
Magic Number,Banshee.Collection.Database,Bookmark,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\Bookmark.cs,HandleStateChanged,The following statement contains a magic number: if (state == PlayerState.Loaded || state == PlayerState.Playing) {  	if (!ServiceManager.PlayerEngine.CurrentTrack.IsLive) {  		// Sleep in 5ms increments for at most 250ms waiting for CanSeek to be true  		int count = 0;  		while (count < 50 && !ServiceManager.PlayerEngine.CanSeek) {  			//Console.WriteLine ("JumpTo: HandleStateChanged' can't seek yet' waiting 5 ms");  			System.Threading.Thread.Sleep (5);  			count++;  		}  	}  	if (ServiceManager.PlayerEngine.CanSeek) {  		//Console.WriteLine ("JumpTo: HandleStateChanged' can seek - jumping!");  		ServiceManager.PlayerEngine.Position = (uint)Position.TotalMilliseconds;  		jumped = true;  	} else {  		//Console.WriteLine ("JumpTo: HandleStateChanged' can't seek - bailing :(");  	}  }  
Magic Number,Banshee.Collection.Database,Bookmark,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\Bookmark.cs,HandleStateChanged,The following statement contains a magic number: if (!ServiceManager.PlayerEngine.CurrentTrack.IsLive) {  	// Sleep in 5ms increments for at most 250ms waiting for CanSeek to be true  	int count = 0;  	while (count < 50 && !ServiceManager.PlayerEngine.CanSeek) {  		//Console.WriteLine ("JumpTo: HandleStateChanged' can't seek yet' waiting 5 ms");  		System.Threading.Thread.Sleep (5);  		count++;  	}  }  
Magic Number,Banshee.Collection.Database,Bookmark,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\Bookmark.cs,HandleStateChanged,The following statement contains a magic number: if (!ServiceManager.PlayerEngine.CurrentTrack.IsLive) {  	// Sleep in 5ms increments for at most 250ms waiting for CanSeek to be true  	int count = 0;  	while (count < 50 && !ServiceManager.PlayerEngine.CanSeek) {  		//Console.WriteLine ("JumpTo: HandleStateChanged' can't seek yet' waiting 5 ms");  		System.Threading.Thread.Sleep (5);  		count++;  	}  }  
Magic Number,Banshee.Collection.Database,Bookmark,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\Bookmark.cs,HandleStateChanged,The following statement contains a magic number: while (count < 50 && !ServiceManager.PlayerEngine.CanSeek) {  	//Console.WriteLine ("JumpTo: HandleStateChanged' can't seek yet' waiting 5 ms");  	System.Threading.Thread.Sleep (5);  	count++;  }  
Magic Number,Banshee.Collection.Database,Bookmark,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\Bookmark.cs,HandleStateChanged,The following statement contains a magic number: while (count < 50 && !ServiceManager.PlayerEngine.CanSeek) {  	//Console.WriteLine ("JumpTo: HandleStateChanged' can't seek yet' waiting 5 ms");  	System.Threading.Thread.Sleep (5);  	count++;  }  
Magic Number,Banshee.Collection.Database,Bookmark,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\Bookmark.cs,HandleStateChanged,The following statement contains a magic number: System.Threading.Thread.Sleep (5);  
Magic Number,Banshee.Collection.Database,DatabaseTrackListModel,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,HandleCacheAggregatesUpdated,The following statement contains a magic number: filtered_filesize = reader [2] == null ? 0 : Convert.ToInt64 (reader [2]);  
Magic Number,Banshee.Collection.Database,DatabaseTrackListModel,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,HandleCacheAggregatesUpdated,The following statement contains a magic number: filtered_filesize = reader [2] == null ? 0 : Convert.ToInt64 (reader [2]);  
Magic Number,Banshee.Collection.Database,DatabaseTrackListModel,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,UpdateUnfilteredAggregates,The following statement contains a magic number: using (HyenaDataReader reader = new HyenaDataReader (connection.Query (count_command))) {  	count = reader.Get<long> (0);  	filesize = reader.Get<long> (1);  	duration = reader.Get<TimeSpan> (2);  }  
Magic Number,Banshee.Collection.Database,DatabaseTrackListModel,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,UpdateUnfilteredAggregates,The following statement contains a magic number: duration = reader.Get<TimeSpan> (2);  
Magic Number,Banshee.Collection.Database,DatabaseImportManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseImportManager.cs,ImportTrack,The following statement contains a magic number: if (counts [track.PrimarySourceId] >= Math.Max (TotalCount / 5' 250)) {  	counts [track.PrimarySourceId] = 0;  	track.PrimarySource.NotifyTracksAdded ();  }  
Magic Number,Banshee.Collection.Database,DatabaseImportManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseImportManager.cs,ImportTrack,The following statement contains a magic number: if (counts [track.PrimarySourceId] >= Math.Max (TotalCount / 5' 250)) {  	counts [track.PrimarySourceId] = 0;  	track.PrimarySource.NotifyTracksAdded ();  }  
Magic Number,Banshee.Networking,NetworkManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following statement contains a magic number: switch ((int)state) {  case 10:  	return State.Asleep;  case 20:  	return State.Disconnected;  case 30:  	return State.Disconnected;  case 40:  	return State.Connecting;  case 50:  	return State.Connected;  case 60:  	return State.Connected;  case 70:  	return State.Connected;  }  
Magic Number,Banshee.Networking,NetworkManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following statement contains a magic number: switch ((int)state) {  case 10:  	return State.Asleep;  case 20:  	return State.Disconnected;  case 30:  	return State.Disconnected;  case 40:  	return State.Connecting;  case 50:  	return State.Connected;  case 60:  	return State.Connected;  case 70:  	return State.Connected;  }  
Magic Number,Banshee.Networking,NetworkManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following statement contains a magic number: switch ((int)state) {  case 10:  	return State.Asleep;  case 20:  	return State.Disconnected;  case 30:  	return State.Disconnected;  case 40:  	return State.Connecting;  case 50:  	return State.Connected;  case 60:  	return State.Connected;  case 70:  	return State.Connected;  }  
Magic Number,Banshee.Networking,NetworkManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following statement contains a magic number: switch ((int)state) {  case 10:  	return State.Asleep;  case 20:  	return State.Disconnected;  case 30:  	return State.Disconnected;  case 40:  	return State.Connecting;  case 50:  	return State.Connected;  case 60:  	return State.Connected;  case 70:  	return State.Connected;  }  
Magic Number,Banshee.Networking,NetworkManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following statement contains a magic number: switch ((int)state) {  case 10:  	return State.Asleep;  case 20:  	return State.Disconnected;  case 30:  	return State.Disconnected;  case 40:  	return State.Connecting;  case 50:  	return State.Connected;  case 60:  	return State.Connected;  case 70:  	return State.Connected;  }  
Magic Number,Banshee.Networking,NetworkManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following statement contains a magic number: switch ((int)state) {  case 10:  	return State.Asleep;  case 20:  	return State.Disconnected;  case 30:  	return State.Disconnected;  case 40:  	return State.Connecting;  case 50:  	return State.Connected;  case 60:  	return State.Connected;  case 70:  	return State.Connected;  }  
Magic Number,Banshee.Networking,NetworkManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following statement contains a magic number: switch ((int)state) {  case 10:  	return State.Asleep;  case 20:  	return State.Disconnected;  case 30:  	return State.Disconnected;  case 40:  	return State.Connecting;  case 50:  	return State.Connected;  case 60:  	return State.Connected;  case 70:  	return State.Connected;  }  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {  	if (count++ > 5) {  		if (count == 7) {  			RemoveMessage (message_3);  		}  		PopMessage ();  		return true;  	} else if (count > 10) {  		return false;  	}  	SourceMessage message = new SourceMessage (this);  	message.FreezeNotify ();  	message.Text = String.Format ("Testing message {0}"' count);  	message.IsSpinning = count % 2 == 0;  	message.CanClose = count % 2 == 1;  	if (count % 3 == 0) {  		for (int i = 2; i < count; i++) {  			message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));  		}  	}  	message.ThawNotify ();  	PushMessage (message);  	if (count == 3) {  		message_3 = message;  	}  	return true;  });  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {  	if (count++ > 5) {  		if (count == 7) {  			RemoveMessage (message_3);  		}  		PopMessage ();  		return true;  	} else if (count > 10) {  		return false;  	}  	SourceMessage message = new SourceMessage (this);  	message.FreezeNotify ();  	message.Text = String.Format ("Testing message {0}"' count);  	message.IsSpinning = count % 2 == 0;  	message.CanClose = count % 2 == 1;  	if (count % 3 == 0) {  		for (int i = 2; i < count; i++) {  			message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));  		}  	}  	message.ThawNotify ();  	PushMessage (message);  	if (count == 3) {  		message_3 = message;  	}  	return true;  });  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {  	if (count++ > 5) {  		if (count == 7) {  			RemoveMessage (message_3);  		}  		PopMessage ();  		return true;  	} else if (count > 10) {  		return false;  	}  	SourceMessage message = new SourceMessage (this);  	message.FreezeNotify ();  	message.Text = String.Format ("Testing message {0}"' count);  	message.IsSpinning = count % 2 == 0;  	message.CanClose = count % 2 == 1;  	if (count % 3 == 0) {  		for (int i = 2; i < count; i++) {  			message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));  		}  	}  	message.ThawNotify ();  	PushMessage (message);  	if (count == 3) {  		message_3 = message;  	}  	return true;  });  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {  	if (count++ > 5) {  		if (count == 7) {  			RemoveMessage (message_3);  		}  		PopMessage ();  		return true;  	} else if (count > 10) {  		return false;  	}  	SourceMessage message = new SourceMessage (this);  	message.FreezeNotify ();  	message.Text = String.Format ("Testing message {0}"' count);  	message.IsSpinning = count % 2 == 0;  	message.CanClose = count % 2 == 1;  	if (count % 3 == 0) {  		for (int i = 2; i < count; i++) {  			message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));  		}  	}  	message.ThawNotify ();  	PushMessage (message);  	if (count == 3) {  		message_3 = message;  	}  	return true;  });  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {  	if (count++ > 5) {  		if (count == 7) {  			RemoveMessage (message_3);  		}  		PopMessage ();  		return true;  	} else if (count > 10) {  		return false;  	}  	SourceMessage message = new SourceMessage (this);  	message.FreezeNotify ();  	message.Text = String.Format ("Testing message {0}"' count);  	message.IsSpinning = count % 2 == 0;  	message.CanClose = count % 2 == 1;  	if (count % 3 == 0) {  		for (int i = 2; i < count; i++) {  			message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));  		}  	}  	message.ThawNotify ();  	PushMessage (message);  	if (count == 3) {  		message_3 = message;  	}  	return true;  });  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {  	if (count++ > 5) {  		if (count == 7) {  			RemoveMessage (message_3);  		}  		PopMessage ();  		return true;  	} else if (count > 10) {  		return false;  	}  	SourceMessage message = new SourceMessage (this);  	message.FreezeNotify ();  	message.Text = String.Format ("Testing message {0}"' count);  	message.IsSpinning = count % 2 == 0;  	message.CanClose = count % 2 == 1;  	if (count % 3 == 0) {  		for (int i = 2; i < count; i++) {  			message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));  		}  	}  	message.ThawNotify ();  	PushMessage (message);  	if (count == 3) {  		message_3 = message;  	}  	return true;  });  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {  	if (count++ > 5) {  		if (count == 7) {  			RemoveMessage (message_3);  		}  		PopMessage ();  		return true;  	} else if (count > 10) {  		return false;  	}  	SourceMessage message = new SourceMessage (this);  	message.FreezeNotify ();  	message.Text = String.Format ("Testing message {0}"' count);  	message.IsSpinning = count % 2 == 0;  	message.CanClose = count % 2 == 1;  	if (count % 3 == 0) {  		for (int i = 2; i < count; i++) {  			message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));  		}  	}  	message.ThawNotify ();  	PushMessage (message);  	if (count == 3) {  		message_3 = message;  	}  	return true;  });  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {  	if (count++ > 5) {  		if (count == 7) {  			RemoveMessage (message_3);  		}  		PopMessage ();  		return true;  	} else if (count > 10) {  		return false;  	}  	SourceMessage message = new SourceMessage (this);  	message.FreezeNotify ();  	message.Text = String.Format ("Testing message {0}"' count);  	message.IsSpinning = count % 2 == 0;  	message.CanClose = count % 2 == 1;  	if (count % 3 == 0) {  		for (int i = 2; i < count; i++) {  			message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));  		}  	}  	message.ThawNotify ();  	PushMessage (message);  	if (count == 3) {  		message_3 = message;  	}  	return true;  });  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {  	if (count++ > 5) {  		if (count == 7) {  			RemoveMessage (message_3);  		}  		PopMessage ();  		return true;  	} else if (count > 10) {  		return false;  	}  	SourceMessage message = new SourceMessage (this);  	message.FreezeNotify ();  	message.Text = String.Format ("Testing message {0}"' count);  	message.IsSpinning = count % 2 == 0;  	message.CanClose = count % 2 == 1;  	if (count % 3 == 0) {  		for (int i = 2; i < count; i++) {  			message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));  		}  	}  	message.ThawNotify ();  	PushMessage (message);  	if (count == 3) {  		message_3 = message;  	}  	return true;  });  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: if (count++ > 5) {  	if (count == 7) {  		RemoveMessage (message_3);  	}  	PopMessage ();  	return true;  } else if (count > 10) {  	return false;  }  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: if (count++ > 5) {  	if (count == 7) {  		RemoveMessage (message_3);  	}  	PopMessage ();  	return true;  } else if (count > 10) {  	return false;  }  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: if (count++ > 5) {  	if (count == 7) {  		RemoveMessage (message_3);  	}  	PopMessage ();  	return true;  } else if (count > 10) {  	return false;  }  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: if (count == 7) {  	RemoveMessage (message_3);  }  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: if (count > 10) {  	return false;  }  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: message.IsSpinning = count % 2 == 0;  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: message.CanClose = count % 2 == 1;  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: if (count % 3 == 0) {  	for (int i = 2; i < count; i++) {  		message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));  	}  }  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: if (count % 3 == 0) {  	for (int i = 2; i < count; i++) {  		message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));  	}  }  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: for (int i = 2; i < count; i++) {  	message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));  }  
Magic Number,Banshee.Sources,Source,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: if (count == 3) {  	message_3 = message;  }  
Magic Number,Banshee.Sources,SourceManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\SourceManager.cs,Initialize,The following statement contains a magic number: group_sources.Add (new GroupSource (Catalog.GetString ("Online Media")' 60));  
Magic Number,Banshee.Sources,SourceManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\SourceManager.cs,Initialize,The following statement contains a magic number: group_sources.Add (new GroupSource (Catalog.GetString ("Libraries")' 39));  
Magic Number,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,OnTracksChanged,The following statement contains a magic number: ThreadAssist.SpawnFromMain (delegate {  	if (NeedsReloadWhenFieldsChanged (fields)) {  		Reload ();  	} else {  		InvalidateCaches ();  	}  	System.Threading.Thread.Sleep (150);  	TrackEventHandler handler = TracksChanged;  	if (handler != null) {  		handler (this' new TrackEventArgs (fields));  	}  });  
Magic Number,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,OnTracksChanged,The following statement contains a magic number: System.Threading.Thread.Sleep (150);  
Magic Number,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,DeleteTrackList,The following statement contains a magic number: foreach (DatabaseTrackInfo track in list) {  	if (track == null) {  		DeleteTrackJob.Completed++;  		continue;  	}  	if (DeleteTrackJob.IsCancelRequested) {  		skip_deletion.Add (track);  		continue;  	}  	try {  		DeleteTrackJob.Status = String.Format ("{0} - {1}"' track.ArtistName' track.TrackTitle);  		if (!DeleteTrack (track)) {  			skip_deletion.Add (track);  		}  	} catch (Exception e) {  		Log.Error (e);  		ErrorSource.AddMessage (e.Message' track.Uri.ToString ());  	}  	DeleteTrackJob.Completed++;  	if (DeleteTrackJob.Completed % 10 == 0 && !DeleteTrackJob.IsFinished) {  		OnTracksDeleted ();  	}  }  
Magic Number,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,DeleteTrackList,The following statement contains a magic number: if (DeleteTrackJob.Completed % 10 == 0 && !DeleteTrackJob.IsFinished) {  	OnTracksDeleted ();  }  
Magic Number,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,IncrementAddedTracks,The following statement contains a magic number: lock (this) {  	AddTrackJob.Completed++;  	if (add_track_job.IsFinished) {  		finished = true;  	} else {  		if (add_track_job.Completed % 10 == 0)  			notify = true;  	}  }  
Magic Number,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,IncrementAddedTracks,The following statement contains a magic number: if (add_track_job.IsFinished) {  	finished = true;  } else {  	if (add_track_job.Completed % 10 == 0)  		notify = true;  }  
Magic Number,Banshee.Sources,PrimarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,IncrementAddedTracks,The following statement contains a magic number: if (add_track_job.Completed % 10 == 0)  	notify = true;  
Magic Number,Banshee.Sources,DurationStatusFormatters,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DurationStatusFormatters.cs,AwesomeConciseFormatter,The following statement contains a magic number: if (span.Days > 0) {  	double days = span.Days + (span.Hours / 24.0);  	builder.AppendFormat (Catalog.GetPluralString ("{0} day"' "{0} days"' StringUtil.DoubleToPluralInt (days))' StringUtil.DoubleToTenthsPrecision (days));  } else if (span.Hours > 0) {  	double hours = span.Hours + (span.Minutes / 60.0);  	builder.AppendFormat (Catalog.GetPluralString ("{0} hour"' "{0} hours"' StringUtil.DoubleToPluralInt (hours))' StringUtil.DoubleToTenthsPrecision (hours));  } else {  	double minutes = span.Minutes + (span.Seconds / 60.0);  	builder.AppendFormat (Catalog.GetPluralString ("{0} minute"' "{0} minutes"' StringUtil.DoubleToPluralInt (minutes))' StringUtil.DoubleToTenthsPrecision (minutes));  }  
Magic Number,Banshee.Sources,DurationStatusFormatters,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DurationStatusFormatters.cs,AwesomeConciseFormatter,The following statement contains a magic number: if (span.Days > 0) {  	double days = span.Days + (span.Hours / 24.0);  	builder.AppendFormat (Catalog.GetPluralString ("{0} day"' "{0} days"' StringUtil.DoubleToPluralInt (days))' StringUtil.DoubleToTenthsPrecision (days));  } else if (span.Hours > 0) {  	double hours = span.Hours + (span.Minutes / 60.0);  	builder.AppendFormat (Catalog.GetPluralString ("{0} hour"' "{0} hours"' StringUtil.DoubleToPluralInt (hours))' StringUtil.DoubleToTenthsPrecision (hours));  } else {  	double minutes = span.Minutes + (span.Seconds / 60.0);  	builder.AppendFormat (Catalog.GetPluralString ("{0} minute"' "{0} minutes"' StringUtil.DoubleToPluralInt (minutes))' StringUtil.DoubleToTenthsPrecision (minutes));  }  
Magic Number,Banshee.Sources,DurationStatusFormatters,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DurationStatusFormatters.cs,AwesomeConciseFormatter,The following statement contains a magic number: if (span.Days > 0) {  	double days = span.Days + (span.Hours / 24.0);  	builder.AppendFormat (Catalog.GetPluralString ("{0} day"' "{0} days"' StringUtil.DoubleToPluralInt (days))' StringUtil.DoubleToTenthsPrecision (days));  } else if (span.Hours > 0) {  	double hours = span.Hours + (span.Minutes / 60.0);  	builder.AppendFormat (Catalog.GetPluralString ("{0} hour"' "{0} hours"' StringUtil.DoubleToPluralInt (hours))' StringUtil.DoubleToTenthsPrecision (hours));  } else {  	double minutes = span.Minutes + (span.Seconds / 60.0);  	builder.AppendFormat (Catalog.GetPluralString ("{0} minute"' "{0} minutes"' StringUtil.DoubleToPluralInt (minutes))' StringUtil.DoubleToTenthsPrecision (minutes));  }  
Magic Number,Banshee.Sources,DurationStatusFormatters,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DurationStatusFormatters.cs,AwesomeConciseFormatter,The following statement contains a magic number: if (span.Hours > 0) {  	double hours = span.Hours + (span.Minutes / 60.0);  	builder.AppendFormat (Catalog.GetPluralString ("{0} hour"' "{0} hours"' StringUtil.DoubleToPluralInt (hours))' StringUtil.DoubleToTenthsPrecision (hours));  } else {  	double minutes = span.Minutes + (span.Seconds / 60.0);  	builder.AppendFormat (Catalog.GetPluralString ("{0} minute"' "{0} minutes"' StringUtil.DoubleToPluralInt (minutes))' StringUtil.DoubleToTenthsPrecision (minutes));  }  
Magic Number,Banshee.Sources,DurationStatusFormatters,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DurationStatusFormatters.cs,AwesomeConciseFormatter,The following statement contains a magic number: if (span.Hours > 0) {  	double hours = span.Hours + (span.Minutes / 60.0);  	builder.AppendFormat (Catalog.GetPluralString ("{0} hour"' "{0} hours"' StringUtil.DoubleToPluralInt (hours))' StringUtil.DoubleToTenthsPrecision (hours));  } else {  	double minutes = span.Minutes + (span.Seconds / 60.0);  	builder.AppendFormat (Catalog.GetPluralString ("{0} minute"' "{0} minutes"' StringUtil.DoubleToPluralInt (minutes))' StringUtil.DoubleToTenthsPrecision (minutes));  }  
Magic Number,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: using (HyenaDataReader reader = new HyenaDataReader (ServiceManager.DbConnection.Query (@"SELECT PlaylistID' Name' SortColumn' SortType' PrimarySourceID' CachedCount' IsTemporary FROM CorePlaylists                     WHERE Special = 0 AND PrimarySourceID = ?"' parent.DbId))) {  	while (reader.Read ()) {  		yield return new PlaylistSource (reader.Get<string> (1)' reader.Get<long> (0)' reader.Get<int> (2)' reader.Get<int> (3)' parent' reader.Get<int> (5)' reader.Get<bool> (6));  	}  }  
Magic Number,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: using (HyenaDataReader reader = new HyenaDataReader (ServiceManager.DbConnection.Query (@"SELECT PlaylistID' Name' SortColumn' SortType' PrimarySourceID' CachedCount' IsTemporary FROM CorePlaylists                     WHERE Special = 0 AND PrimarySourceID = ?"' parent.DbId))) {  	while (reader.Read ()) {  		yield return new PlaylistSource (reader.Get<string> (1)' reader.Get<long> (0)' reader.Get<int> (2)' reader.Get<int> (3)' parent' reader.Get<int> (5)' reader.Get<bool> (6));  	}  }  
Magic Number,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: using (HyenaDataReader reader = new HyenaDataReader (ServiceManager.DbConnection.Query (@"SELECT PlaylistID' Name' SortColumn' SortType' PrimarySourceID' CachedCount' IsTemporary FROM CorePlaylists                     WHERE Special = 0 AND PrimarySourceID = ?"' parent.DbId))) {  	while (reader.Read ()) {  		yield return new PlaylistSource (reader.Get<string> (1)' reader.Get<long> (0)' reader.Get<int> (2)' reader.Get<int> (3)' parent' reader.Get<int> (5)' reader.Get<bool> (6));  	}  }  
Magic Number,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: using (HyenaDataReader reader = new HyenaDataReader (ServiceManager.DbConnection.Query (@"SELECT PlaylistID' Name' SortColumn' SortType' PrimarySourceID' CachedCount' IsTemporary FROM CorePlaylists                     WHERE Special = 0 AND PrimarySourceID = ?"' parent.DbId))) {  	while (reader.Read ()) {  		yield return new PlaylistSource (reader.Get<string> (1)' reader.Get<long> (0)' reader.Get<int> (2)' reader.Get<int> (3)' parent' reader.Get<int> (5)' reader.Get<bool> (6));  	}  }  
Magic Number,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: while (reader.Read ()) {  	yield return new PlaylistSource (reader.Get<string> (1)' reader.Get<long> (0)' reader.Get<int> (2)' reader.Get<int> (3)' parent' reader.Get<int> (5)' reader.Get<bool> (6));  }  
Magic Number,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: while (reader.Read ()) {  	yield return new PlaylistSource (reader.Get<string> (1)' reader.Get<long> (0)' reader.Get<int> (2)' reader.Get<int> (3)' parent' reader.Get<int> (5)' reader.Get<bool> (6));  }  
Magic Number,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: while (reader.Read ()) {  	yield return new PlaylistSource (reader.Get<string> (1)' reader.Get<long> (0)' reader.Get<int> (2)' reader.Get<int> (3)' parent' reader.Get<int> (5)' reader.Get<bool> (6));  }  
Magic Number,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: while (reader.Read ()) {  	yield return new PlaylistSource (reader.Get<string> (1)' reader.Get<long> (0)' reader.Get<int> (2)' reader.Get<int> (3)' parent' reader.Get<int> (5)' reader.Get<bool> (6));  }  
Magic Number,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: yield return new PlaylistSource (reader.Get<string> (1)' reader.Get<long> (0)' reader.Get<int> (2)' reader.Get<int> (3)' parent' reader.Get<int> (5)' reader.Get<bool> (6));  
Magic Number,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: yield return new PlaylistSource (reader.Get<string> (1)' reader.Get<long> (0)' reader.Get<int> (2)' reader.Get<int> (3)' parent' reader.Get<int> (5)' reader.Get<bool> (6));  
Magic Number,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: yield return new PlaylistSource (reader.Get<string> (1)' reader.Get<long> (0)' reader.Get<int> (2)' reader.Get<int> (3)' parent' reader.Get<int> (5)' reader.Get<bool> (6));  
Magic Number,Banshee.Playlist,PlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: yield return new PlaylistSource (reader.Get<string> (1)' reader.Get<long> (0)' reader.Get<int> (2)' reader.Get<int> (3)' parent' reader.Get<int> (5)' reader.Get<bool> (6));  
Magic Number,Banshee.Library,LibrarySource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Library\LibrarySource.cs,LibrarySource,The following statement contains a magic number: if (this.HasCopyOnImport || this.HasMoveFiles) {  	var file_system = PreferencesPage.FindOrAdd (new Section ("file-system"' Catalog.GetString ("File Organization")' 5));  	if (this.HasCopyOnImport) {  		file_system.Add (new SchemaPreference<bool> (copy_on_import' Catalog.GetString ("Co_py files to media folder when importing")));  	}  	if (this.HasMoveFiles) {  		file_system.Add (new SchemaPreference<bool> (move_files' Catalog.GetString ("_Update file and folder names")' Catalog.GetString ("Rename files and folders according to media metadata")));  	}  }  
Magic Number,Banshee.ServiceStack,ServiceManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\ServiceManager.cs,Run,The following statement contains a magic number: lock (self_mutex) {  	OnStartupBegin ();  	uint cumulative_timer_id = Log.InformationTimerStart ();  	System.Net.ServicePointManager.DefaultConnectionLimit = 6;  	foreach (Type type in service_types) {  		RegisterService (type);  	}  	if (extension_nodes != null) {  		foreach (TypeExtensionNode node in extension_nodes) {  			StartExtension (node);  		}  	}  	if (AddinManager.IsInitialized) {  		AddinManager.AddExtensionNodeHandler ("/Banshee/ServiceManager/Service"' OnExtensionChanged);  	}  	is_initialized = true;  	Log.InformationTimerPrint (cumulative_timer_id' "All services are started {0}");  	OnStartupFinished ();  }  
Magic Number,Banshee.ServiceStack,ServiceManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\ServiceManager.cs,Run,The following statement contains a magic number: System.Net.ServicePointManager.DefaultConnectionLimit = 6;  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {  	Title = "New Title for Test Job";  	main_timeout_id = Application.RunTimeout (50' delegate {  		Progress += 0.001;  		if (Progress >= 0.45 && Progress <= 0.55) {  			Status = null;  		} else {  			Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  		}  		if (Progress >= 0.65 && Progress <= 0.75) {  			Title = null;  		} else if (Title == null) {  			Title = "The final Title";  		}  		if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (100' delegate {  				icon_index = (icon_index + 1) % icon_names_go.Length;  				IconNames = new string[] {  					icon_names_go [icon_index]  				};  				if (Progress <= 0.35) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  			icon_timeout_id = Application.RunTimeout (250' delegate {  				icon_index = rand.Next (0' icon_names_rand.Length - 1);  				IconNames = new string[] {  					icon_names_rand [icon_index]  				};  				if (Progress <= 0.65) {  					return true;  				}  				icon_timeout_id = 0;  				return false;  			});  		}  		CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  		if (Progress == 1.0) {  			Progress = 0.0;  			Title = "Bouncing";  			Status = "I'm going to bounce now...";  			final_timeout_id = Application.RunTimeout (8000' delegate {  				Finish ();  				return false;  			});  			return false;  		}  		return true;  	});  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: main_timeout_id = Application.RunTimeout (50' delegate {  	Progress += 0.001;  	if (Progress >= 0.45 && Progress <= 0.55) {  		Status = null;  	} else {  		Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  	}  	if (Progress >= 0.65 && Progress <= 0.75) {  		Title = null;  	} else if (Title == null) {  		Title = "The final Title";  	}  	if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (100' delegate {  			icon_index = (icon_index + 1) % icon_names_go.Length;  			IconNames = new string[] {  				icon_names_go [icon_index]  			};  			if (Progress <= 0.35) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  		icon_timeout_id = Application.RunTimeout (250' delegate {  			icon_index = rand.Next (0' icon_names_rand.Length - 1);  			IconNames = new string[] {  				icon_names_rand [icon_index]  			};  			if (Progress <= 0.65) {  				return true;  			}  			icon_timeout_id = 0;  			return false;  		});  	}  	CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  	if (Progress == 1.0) {  		Progress = 0.0;  		Title = "Bouncing";  		Status = "I'm going to bounce now...";  		final_timeout_id = Application.RunTimeout (8000' delegate {  			Finish ();  			return false;  		});  		return false;  	}  	return true;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: Progress += 0.001;  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress >= 0.45 && Progress <= 0.55) {  	Status = null;  } else {  	Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress >= 0.45 && Progress <= 0.55) {  	Status = null;  } else {  	Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress >= 0.45 && Progress <= 0.55) {  	Status = null;  } else {  	Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress >= 0.65 && Progress <= 0.75) {  	Title = null;  } else if (Title == null) {  	Title = "The final Title";  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress >= 0.65 && Progress <= 0.75) {  	Title = null;  } else if (Title == null) {  	Title = "The final Title";  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  	icon_timeout_id = Application.RunTimeout (100' delegate {  		icon_index = (icon_index + 1) % icon_names_go.Length;  		IconNames = new string[] {  			icon_names_go [icon_index]  		};  		if (Progress <= 0.35) {  			return true;  		}  		icon_timeout_id = 0;  		return false;  	});  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  	icon_timeout_id = Application.RunTimeout (100' delegate {  		icon_index = (icon_index + 1) % icon_names_go.Length;  		IconNames = new string[] {  			icon_names_go [icon_index]  		};  		if (Progress <= 0.35) {  			return true;  		}  		icon_timeout_id = 0;  		return false;  	});  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  	icon_timeout_id = Application.RunTimeout (100' delegate {  		icon_index = (icon_index + 1) % icon_names_go.Length;  		IconNames = new string[] {  			icon_names_go [icon_index]  		};  		if (Progress <= 0.35) {  			return true;  		}  		icon_timeout_id = 0;  		return false;  	});  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {  	icon_timeout_id = Application.RunTimeout (100' delegate {  		icon_index = (icon_index + 1) % icon_names_go.Length;  		IconNames = new string[] {  			icon_names_go [icon_index]  		};  		if (Progress <= 0.35) {  			return true;  		}  		icon_timeout_id = 0;  		return false;  	});  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: icon_timeout_id = Application.RunTimeout (100' delegate {  	icon_index = (icon_index + 1) % icon_names_go.Length;  	IconNames = new string[] {  		icon_names_go [icon_index]  	};  	if (Progress <= 0.35) {  		return true;  	}  	icon_timeout_id = 0;  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: icon_timeout_id = Application.RunTimeout (100' delegate {  	icon_index = (icon_index + 1) % icon_names_go.Length;  	IconNames = new string[] {  		icon_names_go [icon_index]  	};  	if (Progress <= 0.35) {  		return true;  	}  	icon_timeout_id = 0;  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress <= 0.35) {  	return true;  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  	icon_timeout_id = Application.RunTimeout (250' delegate {  		icon_index = rand.Next (0' icon_names_rand.Length - 1);  		IconNames = new string[] {  			icon_names_rand [icon_index]  		};  		if (Progress <= 0.65) {  			return true;  		}  		icon_timeout_id = 0;  		return false;  	});  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  	icon_timeout_id = Application.RunTimeout (250' delegate {  		icon_index = rand.Next (0' icon_names_rand.Length - 1);  		IconNames = new string[] {  			icon_names_rand [icon_index]  		};  		if (Progress <= 0.65) {  			return true;  		}  		icon_timeout_id = 0;  		return false;  	});  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  	icon_timeout_id = Application.RunTimeout (250' delegate {  		icon_index = rand.Next (0' icon_names_rand.Length - 1);  		IconNames = new string[] {  			icon_names_rand [icon_index]  		};  		if (Progress <= 0.65) {  			return true;  		}  		icon_timeout_id = 0;  		return false;  	});  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {  	icon_timeout_id = Application.RunTimeout (250' delegate {  		icon_index = rand.Next (0' icon_names_rand.Length - 1);  		IconNames = new string[] {  			icon_names_rand [icon_index]  		};  		if (Progress <= 0.65) {  			return true;  		}  		icon_timeout_id = 0;  		return false;  	});  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: icon_timeout_id = Application.RunTimeout (250' delegate {  	icon_index = rand.Next (0' icon_names_rand.Length - 1);  	IconNames = new string[] {  		icon_names_rand [icon_index]  	};  	if (Progress <= 0.65) {  		return true;  	}  	icon_timeout_id = 0;  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: icon_timeout_id = Application.RunTimeout (250' delegate {  	icon_index = rand.Next (0' icon_names_rand.Length - 1);  	IconNames = new string[] {  		icon_names_rand [icon_index]  	};  	if (Progress <= 0.65) {  		return true;  	}  	icon_timeout_id = 0;  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress <= 0.65) {  	return true;  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: if (Progress == 1.0) {  	Progress = 0.0;  	Title = "Bouncing";  	Status = "I'm going to bounce now...";  	final_timeout_id = Application.RunTimeout (8000' delegate {  		Finish ();  		return false;  	});  	return false;  }  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: final_timeout_id = Application.RunTimeout (8000' delegate {  	Finish ();  	return false;  });  
Magic Number,Banshee.ServiceStack,TestUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,SpawnLikeFish,The following statement contains a magic number: Application.RunTimeout (2000' delegate {  	new TestUserJob ();  	return ++i < count;  });  
Magic Number,Banshee.ServiceStack,BatchUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\BatchUserJob.cs,UpdateProgress,The following statement contains a magic number: if (Total > 0) {  	FreezeUpdate ();  	Title = String.Format (title_format' completed == total ? completed : completed + 1' total);  	Progress = Math.Max (0.00001' ((double)Completed / (double)Total) + (DetailedProgress / (double)Total));  	ThawUpdate (true);  }  
Magic Number,Banshee.ServiceStack,BatchUserJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\BatchUserJob.cs,UpdateProgress,The following statement contains a magic number: Progress = Math.Max (0.00001' ((double)Completed / (double)Total) + (DetailedProgress / (double)Total));  
Magic Number,Banshee.ServiceStack,JobScheduler,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\JobScheduler.cs,OnClientStarted,The following statement contains a magic number: Application.RunTimeout (1000' delegate {  	startup_job.Finish ();  	return false;  });  
Magic Number,Banshee.MediaEngine,PlayerEngine,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngine.cs,OnTagFound,The following statement contains a magic number: if (track_info_updated_timeout <= 0) {  	track_info_updated_timeout = Application.RunTimeout (250' OnTrackInfoUpdated);  }  
Magic Number,Banshee.MediaEngine,PlayerEngine,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngine.cs,OnTagFound,The following statement contains a magic number: track_info_updated_timeout = Application.RunTimeout (250' OnTrackInfoUpdated);  
Magic Number,Banshee.Collection,ImportManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\ImportManager.cs,UpdateProgress,The following statement contains a magic number: if (user_job != null) {  	double new_progress = (double)import_element.ProcessedCount / (double)import_element.TotalCount;  	double old_progress = user_job.Progress;  	if (new_progress >= 0.0 && new_progress <= 1.0 && Math.Abs (new_progress - old_progress) > 0.001) {  		lock (number_format) {  			string disp_progress = String.Format (ProgressMessage' import_element.ProcessedCount' import_element.TotalCount);  			user_job.Title = disp_progress;  			user_job.Status = String.IsNullOrEmpty (message) ? Catalog.GetString ("Scanning...") : message;  			user_job.Progress = new_progress;  		}  	}  }  
Magic Number,Banshee.Collection,ImportManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\ImportManager.cs,UpdateProgress,The following statement contains a magic number: if (new_progress >= 0.0 && new_progress <= 1.0 && Math.Abs (new_progress - old_progress) > 0.001) {  	lock (number_format) {  		string disp_progress = String.Format (ProgressMessage' import_element.ProcessedCount' import_element.TotalCount);  		user_job.Title = disp_progress;  		user_job.Status = String.IsNullOrEmpty (message) ? Catalog.GetString ("Scanning...") : message;  		user_job.Progress = new_progress;  	}  }  
Magic Number,Banshee.Collection,ImportManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\ImportManager.cs,UpdateScannerProgress,The following statement contains a magic number: if (user_job != null) {  	if (DateTime.Now - last_enqueue_display > TimeSpan.FromMilliseconds (400)) {  		lock (number_format) {  			number_format.NumberDecimalDigits = 0;  			user_job.Status = String.Format (Catalog.GetString ("Scanning ({0} files)...")' import_element.TotalCount.ToString ("N"' number_format));  			last_enqueue_display = DateTime.Now;  		}  	}  }  
Magic Number,Banshee.Collection,ImportManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\ImportManager.cs,UpdateScannerProgress,The following statement contains a magic number: if (DateTime.Now - last_enqueue_display > TimeSpan.FromMilliseconds (400)) {  	lock (number_format) {  		number_format.NumberDecimalDigits = 0;  		user_job.Status = String.Format (Catalog.GetString ("Scanning ({0} files)...")' import_element.TotalCount.ToString ("N"' number_format));  		last_enqueue_display = DateTime.Now;  	}  }  
Magic Number,Banshee.Playlists.Formats,AsxPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,LoadEntry,The following statement contains a magic number: do {  	try {  		xml_reader.Read ();  	} catch {  		xml_reader.Skip ();  	}  	if (xml_reader.NodeType != XmlNodeType.Element) {  		continue;  	}  	switch (xml_reader.LocalName.ToLower ()) {  	case "title":  		xml_reader.Read ();  		element.Title = xml_reader.Value;  		break;  	case "ref":  		// asf links say they are http' but are mmsh instead  		string uri_aux = xml_reader ["HREF"] ?? xml_reader ["href"];  		if (uri_aux.StartsWith ("http"' StringComparison.CurrentCultureIgnoreCase)) {  			uri_aux = "mmsh" + uri_aux.Substring (4);  		}  		element.Uri = ResolveUri (uri_aux);  		break;  	case "duration":  		try {  			xml_reader.Read ();  			element.Duration = TimeSpan.Parse (xml_reader.Value);  		} catch {  		}  		break;  	}  } while (!xml_reader.EOF && xml_reader.Depth > 1);  
Magic Number,Banshee.Playlists.Formats,AsxPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,LoadEntry,The following statement contains a magic number: switch (xml_reader.LocalName.ToLower ()) {  case "title":  	xml_reader.Read ();  	element.Title = xml_reader.Value;  	break;  case "ref":  	// asf links say they are http' but are mmsh instead  	string uri_aux = xml_reader ["HREF"] ?? xml_reader ["href"];  	if (uri_aux.StartsWith ("http"' StringComparison.CurrentCultureIgnoreCase)) {  		uri_aux = "mmsh" + uri_aux.Substring (4);  	}  	element.Uri = ResolveUri (uri_aux);  	break;  case "duration":  	try {  		xml_reader.Read ();  		element.Duration = TimeSpan.Parse (xml_reader.Value);  	} catch {  	}  	break;  }  
Magic Number,Banshee.Playlists.Formats,AsxPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,LoadEntry,The following statement contains a magic number: if (uri_aux.StartsWith ("http"' StringComparison.CurrentCultureIgnoreCase)) {  	uri_aux = "mmsh" + uri_aux.Substring (4);  }  
Magic Number,Banshee.Playlists.Formats,AsxPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,LoadEntry,The following statement contains a magic number: uri_aux = "mmsh" + uri_aux.Substring (4);  
Magic Number,Banshee.Playlists.Formats,M3uPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\M3uPlaylistFormat.cs,ParseExtended,The following statement contains a magic number: if (parts.Length == 2) {  	element.Duration = SecondsStringToTimeSpan (parts [0]);  	element.Title = parts [1].Trim ();  } else {  	element.Title = split.Trim ();  }  
Magic Number,Banshee.Playlists.Formats,PlaylistParser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Parse,The following statement contains a magic number: if (uri.Scheme == "file") {  	stream = Banshee.IO.File.OpenRead (uri);  } else if (uri.Scheme == "http") {  	response = Download (uri' HTTP_REQUEST_RETRIES);  	web_stream = response.GetResponseStream ();  	try {  		stream = new MemoryStream ();  		byte[] buffer = new byte[4096];  		int read;  		// If we haven't read the whole stream and if  		// it turns out to be a playlist' we'll read the rest  		read = web_stream.Read (buffer' 0' buffer.Length);  		stream.Write (buffer' 0' read);  		if ((read = web_stream.Read (buffer' 0' buffer.Length)) > 0) {  			partial_read = true;  			stream.Write (buffer' 0' read);  			saved_position = stream.Position;  		}  		stream.Position = 0;  	} finally {  		if (!partial_read) {  			web_stream.Close ();  			response.Close ();  		}  	}  } else {  	Hyena.Log.DebugFormat ("Not able to parse playlist at {0}"' uri);  	return null;  }  
Magic Number,Banshee.Playlists.Formats,PlaylistParser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Parse,The following statement contains a magic number: if (uri.Scheme == "http") {  	response = Download (uri' HTTP_REQUEST_RETRIES);  	web_stream = response.GetResponseStream ();  	try {  		stream = new MemoryStream ();  		byte[] buffer = new byte[4096];  		int read;  		// If we haven't read the whole stream and if  		// it turns out to be a playlist' we'll read the rest  		read = web_stream.Read (buffer' 0' buffer.Length);  		stream.Write (buffer' 0' read);  		if ((read = web_stream.Read (buffer' 0' buffer.Length)) > 0) {  			partial_read = true;  			stream.Write (buffer' 0' read);  			saved_position = stream.Position;  		}  		stream.Position = 0;  	} finally {  		if (!partial_read) {  			web_stream.Close ();  			response.Close ();  		}  	}  } else {  	Hyena.Log.DebugFormat ("Not able to parse playlist at {0}"' uri);  	return null;  }  
Magic Number,Banshee.Playlists.Formats,PlaylistParser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Parse,The following statement contains a magic number: try {  	stream = new MemoryStream ();  	byte[] buffer = new byte[4096];  	int read;  	// If we haven't read the whole stream and if  	// it turns out to be a playlist' we'll read the rest  	read = web_stream.Read (buffer' 0' buffer.Length);  	stream.Write (buffer' 0' read);  	if ((read = web_stream.Read (buffer' 0' buffer.Length)) > 0) {  		partial_read = true;  		stream.Write (buffer' 0' read);  		saved_position = stream.Position;  	}  	stream.Position = 0;  } finally {  	if (!partial_read) {  		web_stream.Close ();  		response.Close ();  	}  }  
Magic Number,Banshee.Playlists.Formats,PlaylistParser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Download,The following statement contains a magic number: while (true) {  	try {  		HttpWebRequest request = (HttpWebRequest)WebRequest.Create (uri.AbsoluteUri);  		request.UserAgent = Banshee.Web.Browser.UserAgent;  		request.KeepAlive = false;  		request.Timeout = 5 * 1000;  		request.AllowAutoRedirect = true;  		// Parse out and set credentials' if any  		string user_info = new Uri (uri.AbsoluteUri).UserInfo;  		if (!String.IsNullOrEmpty (user_info)) {  			string username = String.Empty;  			string password = String.Empty;  			int cIndex = user_info.IndexOf (":");  			if (cIndex != -1) {  				username = user_info.Substring (0' cIndex);  				password = user_info.Substring (cIndex + 1);  			} else {  				username = user_info;  			}  			request.Credentials = new NetworkCredential (username' password);  		}  		var response = (HttpWebResponse)request.GetResponse ();  		if (response.StatusCode == HttpStatusCode.GatewayTimeout) {  			throw new WebException (""' WebExceptionStatus.Timeout);  		}  		return response;  	} catch (WebException e) {  		if (e.Status == WebExceptionStatus.Timeout && nb_retries > 0) {  			nb_retries--;  			Log.InformationFormat ("Playlist download from {0} timed out' retrying in 1 second..."' uri.AbsoluteUri);  			System.Threading.Thread.Sleep (1000);  		} else {  			throw;  		}  	}  }  
Magic Number,Banshee.Playlists.Formats,PlaylistParser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Download,The following statement contains a magic number: while (true) {  	try {  		HttpWebRequest request = (HttpWebRequest)WebRequest.Create (uri.AbsoluteUri);  		request.UserAgent = Banshee.Web.Browser.UserAgent;  		request.KeepAlive = false;  		request.Timeout = 5 * 1000;  		request.AllowAutoRedirect = true;  		// Parse out and set credentials' if any  		string user_info = new Uri (uri.AbsoluteUri).UserInfo;  		if (!String.IsNullOrEmpty (user_info)) {  			string username = String.Empty;  			string password = String.Empty;  			int cIndex = user_info.IndexOf (":");  			if (cIndex != -1) {  				username = user_info.Substring (0' cIndex);  				password = user_info.Substring (cIndex + 1);  			} else {  				username = user_info;  			}  			request.Credentials = new NetworkCredential (username' password);  		}  		var response = (HttpWebResponse)request.GetResponse ();  		if (response.StatusCode == HttpStatusCode.GatewayTimeout) {  			throw new WebException (""' WebExceptionStatus.Timeout);  		}  		return response;  	} catch (WebException e) {  		if (e.Status == WebExceptionStatus.Timeout && nb_retries > 0) {  			nb_retries--;  			Log.InformationFormat ("Playlist download from {0} timed out' retrying in 1 second..."' uri.AbsoluteUri);  			System.Threading.Thread.Sleep (1000);  		} else {  			throw;  		}  	}  }  
Magic Number,Banshee.Playlists.Formats,PlaylistParser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Download,The following statement contains a magic number: while (true) {  	try {  		HttpWebRequest request = (HttpWebRequest)WebRequest.Create (uri.AbsoluteUri);  		request.UserAgent = Banshee.Web.Browser.UserAgent;  		request.KeepAlive = false;  		request.Timeout = 5 * 1000;  		request.AllowAutoRedirect = true;  		// Parse out and set credentials' if any  		string user_info = new Uri (uri.AbsoluteUri).UserInfo;  		if (!String.IsNullOrEmpty (user_info)) {  			string username = String.Empty;  			string password = String.Empty;  			int cIndex = user_info.IndexOf (":");  			if (cIndex != -1) {  				username = user_info.Substring (0' cIndex);  				password = user_info.Substring (cIndex + 1);  			} else {  				username = user_info;  			}  			request.Credentials = new NetworkCredential (username' password);  		}  		var response = (HttpWebResponse)request.GetResponse ();  		if (response.StatusCode == HttpStatusCode.GatewayTimeout) {  			throw new WebException (""' WebExceptionStatus.Timeout);  		}  		return response;  	} catch (WebException e) {  		if (e.Status == WebExceptionStatus.Timeout && nb_retries > 0) {  			nb_retries--;  			Log.InformationFormat ("Playlist download from {0} timed out' retrying in 1 second..."' uri.AbsoluteUri);  			System.Threading.Thread.Sleep (1000);  		} else {  			throw;  		}  	}  }  
Magic Number,Banshee.Playlists.Formats,PlaylistParser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Download,The following statement contains a magic number: try {  	HttpWebRequest request = (HttpWebRequest)WebRequest.Create (uri.AbsoluteUri);  	request.UserAgent = Banshee.Web.Browser.UserAgent;  	request.KeepAlive = false;  	request.Timeout = 5 * 1000;  	request.AllowAutoRedirect = true;  	// Parse out and set credentials' if any  	string user_info = new Uri (uri.AbsoluteUri).UserInfo;  	if (!String.IsNullOrEmpty (user_info)) {  		string username = String.Empty;  		string password = String.Empty;  		int cIndex = user_info.IndexOf (":");  		if (cIndex != -1) {  			username = user_info.Substring (0' cIndex);  			password = user_info.Substring (cIndex + 1);  		} else {  			username = user_info;  		}  		request.Credentials = new NetworkCredential (username' password);  	}  	var response = (HttpWebResponse)request.GetResponse ();  	if (response.StatusCode == HttpStatusCode.GatewayTimeout) {  		throw new WebException (""' WebExceptionStatus.Timeout);  	}  	return response;  } catch (WebException e) {  	if (e.Status == WebExceptionStatus.Timeout && nb_retries > 0) {  		nb_retries--;  		Log.InformationFormat ("Playlist download from {0} timed out' retrying in 1 second..."' uri.AbsoluteUri);  		System.Threading.Thread.Sleep (1000);  	} else {  		throw;  	}  }  
Magic Number,Banshee.Playlists.Formats,PlaylistParser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Download,The following statement contains a magic number: try {  	HttpWebRequest request = (HttpWebRequest)WebRequest.Create (uri.AbsoluteUri);  	request.UserAgent = Banshee.Web.Browser.UserAgent;  	request.KeepAlive = false;  	request.Timeout = 5 * 1000;  	request.AllowAutoRedirect = true;  	// Parse out and set credentials' if any  	string user_info = new Uri (uri.AbsoluteUri).UserInfo;  	if (!String.IsNullOrEmpty (user_info)) {  		string username = String.Empty;  		string password = String.Empty;  		int cIndex = user_info.IndexOf (":");  		if (cIndex != -1) {  			username = user_info.Substring (0' cIndex);  			password = user_info.Substring (cIndex + 1);  		} else {  			username = user_info;  		}  		request.Credentials = new NetworkCredential (username' password);  	}  	var response = (HttpWebResponse)request.GetResponse ();  	if (response.StatusCode == HttpStatusCode.GatewayTimeout) {  		throw new WebException (""' WebExceptionStatus.Timeout);  	}  	return response;  } catch (WebException e) {  	if (e.Status == WebExceptionStatus.Timeout && nb_retries > 0) {  		nb_retries--;  		Log.InformationFormat ("Playlist download from {0} timed out' retrying in 1 second..."' uri.AbsoluteUri);  		System.Threading.Thread.Sleep (1000);  	} else {  		throw;  	}  }  
Magic Number,Banshee.Playlists.Formats,PlaylistParser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Download,The following statement contains a magic number: try {  	HttpWebRequest request = (HttpWebRequest)WebRequest.Create (uri.AbsoluteUri);  	request.UserAgent = Banshee.Web.Browser.UserAgent;  	request.KeepAlive = false;  	request.Timeout = 5 * 1000;  	request.AllowAutoRedirect = true;  	// Parse out and set credentials' if any  	string user_info = new Uri (uri.AbsoluteUri).UserInfo;  	if (!String.IsNullOrEmpty (user_info)) {  		string username = String.Empty;  		string password = String.Empty;  		int cIndex = user_info.IndexOf (":");  		if (cIndex != -1) {  			username = user_info.Substring (0' cIndex);  			password = user_info.Substring (cIndex + 1);  		} else {  			username = user_info;  		}  		request.Credentials = new NetworkCredential (username' password);  	}  	var response = (HttpWebResponse)request.GetResponse ();  	if (response.StatusCode == HttpStatusCode.GatewayTimeout) {  		throw new WebException (""' WebExceptionStatus.Timeout);  	}  	return response;  } catch (WebException e) {  	if (e.Status == WebExceptionStatus.Timeout && nb_retries > 0) {  		nb_retries--;  		Log.InformationFormat ("Playlist download from {0} timed out' retrying in 1 second..."' uri.AbsoluteUri);  		System.Threading.Thread.Sleep (1000);  	} else {  		throw;  	}  }  
Magic Number,Banshee.Playlists.Formats,PlaylistParser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Download,The following statement contains a magic number: request.Timeout = 5 * 1000;  
Magic Number,Banshee.Playlists.Formats,PlaylistParser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Download,The following statement contains a magic number: request.Timeout = 5 * 1000;  
Magic Number,Banshee.Playlists.Formats,PlaylistParser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Download,The following statement contains a magic number: if (e.Status == WebExceptionStatus.Timeout && nb_retries > 0) {  	nb_retries--;  	Log.InformationFormat ("Playlist download from {0} timed out' retrying in 1 second..."' uri.AbsoluteUri);  	System.Threading.Thread.Sleep (1000);  } else {  	throw;  }  
Magic Number,Banshee.Playlists.Formats,PlaylistParser,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Download,The following statement contains a magic number: System.Threading.Thread.Sleep (1000);  
Magic Number,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following statement contains a magic number: while ((line = reader.ReadLine ()) != null) {  	line = line.Trim ();  	if (line.Length == 0) {  		continue;  	}  	int eq_offset = line.IndexOf ('=');  	int index_offset = 0;  	if (eq_offset <= 0) {  		continue;  	}  	PlsType element_type = PlsType.Unknown;  	if (line.StartsWith ("File")) {  		element_type = PlsType.File;  		index_offset = 4;  	} else if (line.StartsWith ("Title")) {  		element_type = PlsType.Title;  		index_offset = 5;  	} else if (line.StartsWith ("Length")) {  		element_type = PlsType.Length;  		index_offset = 6;  	} else {  		continue;  	}  	try {  		int index = Int32.Parse (line.Substring (index_offset' eq_offset - index_offset)' ApplicationContext.InternalCultureInfo.NumberFormat) - 1;  		string value_string = line.Substring (eq_offset + 1).Trim ();  		PlaylistElement element = index < Elements.Count ? Elements [index] : AddElement ();  		switch (element_type) {  		case PlsType.File:  			element.Uri = ResolveUri (value_string);  			break;  		case PlsType.Title:  			element.Title = value_string;  			break;  		case PlsType.Length:  			element.Duration = SecondsStringToTimeSpan (value_string);  			break;  		}  	} catch {  		continue;  	}  }  
Magic Number,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following statement contains a magic number: while ((line = reader.ReadLine ()) != null) {  	line = line.Trim ();  	if (line.Length == 0) {  		continue;  	}  	int eq_offset = line.IndexOf ('=');  	int index_offset = 0;  	if (eq_offset <= 0) {  		continue;  	}  	PlsType element_type = PlsType.Unknown;  	if (line.StartsWith ("File")) {  		element_type = PlsType.File;  		index_offset = 4;  	} else if (line.StartsWith ("Title")) {  		element_type = PlsType.Title;  		index_offset = 5;  	} else if (line.StartsWith ("Length")) {  		element_type = PlsType.Length;  		index_offset = 6;  	} else {  		continue;  	}  	try {  		int index = Int32.Parse (line.Substring (index_offset' eq_offset - index_offset)' ApplicationContext.InternalCultureInfo.NumberFormat) - 1;  		string value_string = line.Substring (eq_offset + 1).Trim ();  		PlaylistElement element = index < Elements.Count ? Elements [index] : AddElement ();  		switch (element_type) {  		case PlsType.File:  			element.Uri = ResolveUri (value_string);  			break;  		case PlsType.Title:  			element.Title = value_string;  			break;  		case PlsType.Length:  			element.Duration = SecondsStringToTimeSpan (value_string);  			break;  		}  	} catch {  		continue;  	}  }  
Magic Number,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following statement contains a magic number: while ((line = reader.ReadLine ()) != null) {  	line = line.Trim ();  	if (line.Length == 0) {  		continue;  	}  	int eq_offset = line.IndexOf ('=');  	int index_offset = 0;  	if (eq_offset <= 0) {  		continue;  	}  	PlsType element_type = PlsType.Unknown;  	if (line.StartsWith ("File")) {  		element_type = PlsType.File;  		index_offset = 4;  	} else if (line.StartsWith ("Title")) {  		element_type = PlsType.Title;  		index_offset = 5;  	} else if (line.StartsWith ("Length")) {  		element_type = PlsType.Length;  		index_offset = 6;  	} else {  		continue;  	}  	try {  		int index = Int32.Parse (line.Substring (index_offset' eq_offset - index_offset)' ApplicationContext.InternalCultureInfo.NumberFormat) - 1;  		string value_string = line.Substring (eq_offset + 1).Trim ();  		PlaylistElement element = index < Elements.Count ? Elements [index] : AddElement ();  		switch (element_type) {  		case PlsType.File:  			element.Uri = ResolveUri (value_string);  			break;  		case PlsType.Title:  			element.Title = value_string;  			break;  		case PlsType.Length:  			element.Duration = SecondsStringToTimeSpan (value_string);  			break;  		}  	} catch {  		continue;  	}  }  
Magic Number,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following statement contains a magic number: if (line.StartsWith ("File")) {  	element_type = PlsType.File;  	index_offset = 4;  } else if (line.StartsWith ("Title")) {  	element_type = PlsType.Title;  	index_offset = 5;  } else if (line.StartsWith ("Length")) {  	element_type = PlsType.Length;  	index_offset = 6;  } else {  	continue;  }  
Magic Number,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following statement contains a magic number: if (line.StartsWith ("File")) {  	element_type = PlsType.File;  	index_offset = 4;  } else if (line.StartsWith ("Title")) {  	element_type = PlsType.Title;  	index_offset = 5;  } else if (line.StartsWith ("Length")) {  	element_type = PlsType.Length;  	index_offset = 6;  } else {  	continue;  }  
Magic Number,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following statement contains a magic number: if (line.StartsWith ("File")) {  	element_type = PlsType.File;  	index_offset = 4;  } else if (line.StartsWith ("Title")) {  	element_type = PlsType.Title;  	index_offset = 5;  } else if (line.StartsWith ("Length")) {  	element_type = PlsType.Length;  	index_offset = 6;  } else {  	continue;  }  
Magic Number,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following statement contains a magic number: index_offset = 4;  
Magic Number,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following statement contains a magic number: if (line.StartsWith ("Title")) {  	element_type = PlsType.Title;  	index_offset = 5;  } else if (line.StartsWith ("Length")) {  	element_type = PlsType.Length;  	index_offset = 6;  } else {  	continue;  }  
Magic Number,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following statement contains a magic number: if (line.StartsWith ("Title")) {  	element_type = PlsType.Title;  	index_offset = 5;  } else if (line.StartsWith ("Length")) {  	element_type = PlsType.Length;  	index_offset = 6;  } else {  	continue;  }  
Magic Number,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following statement contains a magic number: index_offset = 5;  
Magic Number,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following statement contains a magic number: if (line.StartsWith ("Length")) {  	element_type = PlsType.Length;  	index_offset = 6;  } else {  	continue;  }  
Magic Number,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following statement contains a magic number: index_offset = 6;  
Magic Number,Banshee.Playlists.Formats,AsfReferencePlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsfReferencePlaylistFormat.cs,Load,The following statement contains a magic number: while ((line = reader.ReadLine ()) != null) {  	if (line.StartsWith ("ref01"' StringComparison.CurrentCultureIgnoreCase) || line.StartsWith ("ref1"' StringComparison.CurrentCultureIgnoreCase)) {  		string uri_aux = line.Substring (line.IndexOf ("=") + 1).Trim ();  		if (uri_aux.StartsWith ("http"' StringComparison.CurrentCultureIgnoreCase))  			uri_aux = "mmsh" + uri_aux.Substring (4);  		element.Uri = ResolveUri (uri_aux);  		break;  	}  }  
Magic Number,Banshee.Playlists.Formats,AsfReferencePlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsfReferencePlaylistFormat.cs,Load,The following statement contains a magic number: if (line.StartsWith ("ref01"' StringComparison.CurrentCultureIgnoreCase) || line.StartsWith ("ref1"' StringComparison.CurrentCultureIgnoreCase)) {  	string uri_aux = line.Substring (line.IndexOf ("=") + 1).Trim ();  	if (uri_aux.StartsWith ("http"' StringComparison.CurrentCultureIgnoreCase))  		uri_aux = "mmsh" + uri_aux.Substring (4);  	element.Uri = ResolveUri (uri_aux);  	break;  }  
Magic Number,Banshee.Playlists.Formats,AsfReferencePlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsfReferencePlaylistFormat.cs,Load,The following statement contains a magic number: if (uri_aux.StartsWith ("http"' StringComparison.CurrentCultureIgnoreCase))  	uri_aux = "mmsh" + uri_aux.Substring (4);  
Magic Number,Banshee.Playlists.Formats,AsfReferencePlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsfReferencePlaylistFormat.cs,Load,The following statement contains a magic number: uri_aux = "mmsh" + uri_aux.Substring (4);  
Magic Number,Banshee.Web,BaseHttpServer,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\BaseHttpServer.cs,Start,The following statement contains a magic number: Start (10);  
Magic Number,Banshee.Web,BaseHttpServer,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\BaseHttpServer.cs,HandleRequest,The following statement contains a magic number: using (StreamReader reader = new StreamReader (new NetworkStream (client' false))) {  	string request_line = reader.ReadLine ();  	if (request_line == null) {  		return false;  	}  	List<string> request_headers = new List<string> ();  	string line = null;  	do {  		line = reader.ReadLine ();  		if (line.ToLower () == "connection: close") {  			keep_connection = false;  		}  		request_headers.Add (line);  	} while (line != String.Empty && line != null);  	string[] split_request_line = request_line.Split ();  	if (split_request_line.Length < 3) {  		WriteResponse (client' HttpStatusCode.BadRequest' "Bad Request");  		return keep_connection;  	} else {  		try {  			HandleValidRequest (client' split_request_line' request_headers.ToArray ());  		} catch (IOException) {  			keep_connection = false;  		} catch (Exception e) {  			keep_connection = false;  			Console.Error.WriteLine ("Trouble handling request {0}: {1}"' split_request_line [1]' e);  		}  	}  }  
Magic Number,Banshee.Web,BaseHttpServer,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\BaseHttpServer.cs,HandleRequest,The following statement contains a magic number: if (split_request_line.Length < 3) {  	WriteResponse (client' HttpStatusCode.BadRequest' "Bad Request");  	return keep_connection;  } else {  	try {  		HandleValidRequest (client' split_request_line' request_headers.ToArray ());  	} catch (IOException) {  		keep_connection = false;  	} catch (Exception e) {  		keep_connection = false;  		Console.Error.WriteLine ("Trouble handling request {0}: {1}"' split_request_line [1]' e);  	}  }  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Classical")' 0' new[] {  	0'  	0'  	0'  	0'  	0'  	0'  	-7.2'  	-7.2'  	-7.2'  	-9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Classical")' 0' new[] {  	0'  	0'  	0'  	0'  	0'  	0'  	-7.2'  	-7.2'  	-7.2'  	-9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Classical")' 0' new[] {  	0'  	0'  	0'  	0'  	0'  	0'  	-7.2'  	-7.2'  	-7.2'  	-9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Classical")' 0' new[] {  	0'  	0'  	0'  	0'  	0'  	0'  	-7.2'  	-7.2'  	-7.2'  	-9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Club")' 0' new[] {  	0'  	0'  	8'  	5.6'  	5.6'  	5.6'  	3.2'  	0'  	0'  	0  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Club")' 0' new[] {  	0'  	0'  	8'  	5.6'  	5.6'  	5.6'  	3.2'  	0'  	0'  	0  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Club")' 0' new[] {  	0'  	0'  	8'  	5.6'  	5.6'  	5.6'  	3.2'  	0'  	0'  	0  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Club")' 0' new[] {  	0'  	0'  	8'  	5.6'  	5.6'  	5.6'  	3.2'  	0'  	0'  	0  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Club")' 0' new[] {  	0'  	0'  	8'  	5.6'  	5.6'  	5.6'  	3.2'  	0'  	0'  	0  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new[] {  	9.6'  	7.2'  	2.4'  	-1.1'  	-1.1'  	-5.6'  	-7.2'  	-7.2'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new[] {  	9.6'  	7.2'  	2.4'  	-1.1'  	-1.1'  	-5.6'  	-7.2'  	-7.2'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new[] {  	9.6'  	7.2'  	2.4'  	-1.1'  	-1.1'  	-5.6'  	-7.2'  	-7.2'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new[] {  	9.6'  	7.2'  	2.4'  	-1.1'  	-1.1'  	-5.6'  	-7.2'  	-7.2'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new[] {  	9.6'  	7.2'  	2.4'  	-1.1'  	-1.1'  	-5.6'  	-7.2'  	-7.2'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new[] {  	9.6'  	7.2'  	2.4'  	-1.1'  	-1.1'  	-5.6'  	-7.2'  	-7.2'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new[] {  	9.6'  	7.2'  	2.4'  	-1.1'  	-1.1'  	-5.6'  	-7.2'  	-7.2'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new[] {  	9.6'  	7.2'  	2.4'  	-1.1'  	-1.1'  	-5.6'  	-7.2'  	-7.2'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new[] {  	9.6'  	7.2'  	2.4'  	-1.1'  	-1.1'  	-5.6'  	-7.2'  	-7.2'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new[] {  	9.6'  	7.2'  	2.4'  	-1.1'  	-1.1'  	-5.6'  	-7.2'  	-7.2'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new[] {  	9.6'  	7.2'  	2.4'  	-1.1'  	-1.1'  	-5.6'  	-7.2'  	-7.2'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new[] {  	-8'  	9.6'  	9.6'  	5.6'  	1.6'  	-4'  	-8'  	-10.4'  	-11.2'  	-11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new[] {  	-8'  	9.6'  	9.6'  	5.6'  	1.6'  	-4'  	-8'  	-10.4'  	-11.2'  	-11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new[] {  	-8'  	9.6'  	9.6'  	5.6'  	1.6'  	-4'  	-8'  	-10.4'  	-11.2'  	-11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new[] {  	-8'  	9.6'  	9.6'  	5.6'  	1.6'  	-4'  	-8'  	-10.4'  	-11.2'  	-11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new[] {  	-8'  	9.6'  	9.6'  	5.6'  	1.6'  	-4'  	-8'  	-10.4'  	-11.2'  	-11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new[] {  	-8'  	9.6'  	9.6'  	5.6'  	1.6'  	-4'  	-8'  	-10.4'  	-11.2'  	-11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new[] {  	-8'  	9.6'  	9.6'  	5.6'  	1.6'  	-4'  	-8'  	-10.4'  	-11.2'  	-11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new[] {  	-8'  	9.6'  	9.6'  	5.6'  	1.6'  	-4'  	-8'  	-10.4'  	-11.2'  	-11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new[] {  	-8'  	9.6'  	9.6'  	5.6'  	1.6'  	-4'  	-8'  	-10.4'  	-11.2'  	-11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new[] {  	-8'  	9.6'  	9.6'  	5.6'  	1.6'  	-4'  	-8'  	-10.4'  	-11.2'  	-11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new[] {  	-8'  	9.6'  	9.6'  	5.6'  	1.6'  	-4'  	-8'  	-10.4'  	-11.2'  	-11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new[] {  	7.2'  	5.6'  	-1.1'  	-7.2'  	-4.8'  	1.6'  	8'  	11.2'  	12'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new[] {  	7.2'  	5.6'  	-1.1'  	-7.2'  	-4.8'  	1.6'  	8'  	11.2'  	12'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new[] {  	7.2'  	5.6'  	-1.1'  	-7.2'  	-4.8'  	1.6'  	8'  	11.2'  	12'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new[] {  	7.2'  	5.6'  	-1.1'  	-7.2'  	-4.8'  	1.6'  	8'  	11.2'  	12'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new[] {  	7.2'  	5.6'  	-1.1'  	-7.2'  	-4.8'  	1.6'  	8'  	11.2'  	12'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new[] {  	7.2'  	5.6'  	-1.1'  	-7.2'  	-4.8'  	1.6'  	8'  	11.2'  	12'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new[] {  	7.2'  	5.6'  	-1.1'  	-7.2'  	-4.8'  	1.6'  	8'  	11.2'  	12'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new[] {  	7.2'  	5.6'  	-1.1'  	-7.2'  	-4.8'  	1.6'  	8'  	11.2'  	12'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new[] {  	7.2'  	5.6'  	-1.1'  	-7.2'  	-4.8'  	1.6'  	8'  	11.2'  	12'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new[] {  	7.2'  	5.6'  	-1.1'  	-7.2'  	-4.8'  	1.6'  	8'  	11.2'  	12'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new[] {  	7.2'  	5.6'  	-1.1'  	-7.2'  	-4.8'  	1.6'  	8'  	11.2'  	12'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new[] {  	-9.6'  	-9.6'  	-9.6'  	-4'  	2.4'  	11.2'  	11.5'  	11.8'  	11.8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new[] {  	-9.6'  	-9.6'  	-9.6'  	-4'  	2.4'  	11.2'  	11.5'  	11.8'  	11.8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new[] {  	-9.6'  	-9.6'  	-9.6'  	-4'  	2.4'  	11.2'  	11.5'  	11.8'  	11.8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new[] {  	-9.6'  	-9.6'  	-9.6'  	-4'  	2.4'  	11.2'  	11.5'  	11.8'  	11.8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new[] {  	-9.6'  	-9.6'  	-9.6'  	-4'  	2.4'  	11.2'  	11.5'  	11.8'  	11.8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new[] {  	-9.6'  	-9.6'  	-9.6'  	-4'  	2.4'  	11.2'  	11.5'  	11.8'  	11.8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new[] {  	-9.6'  	-9.6'  	-9.6'  	-4'  	2.4'  	11.2'  	11.5'  	11.8'  	11.8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new[] {  	-9.6'  	-9.6'  	-9.6'  	-4'  	2.4'  	11.2'  	11.5'  	11.8'  	11.8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new[] {  	-9.6'  	-9.6'  	-9.6'  	-4'  	2.4'  	11.2'  	11.5'  	11.8'  	11.8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new[] {  	-9.6'  	-9.6'  	-9.6'  	-4'  	2.4'  	11.2'  	11.5'  	11.8'  	11.8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new[] {  	-9.6'  	-9.6'  	-9.6'  	-4'  	2.4'  	11.2'  	11.5'  	11.8'  	11.8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new[] {  	4.8'  	11.2'  	5.6'  	-3.2'  	-2.4'  	1.6'  	4.8'  	9.6'  	11.9'  	11.9  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new[] {  	4.8'  	11.2'  	5.6'  	-3.2'  	-2.4'  	1.6'  	4.8'  	9.6'  	11.9'  	11.9  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new[] {  	4.8'  	11.2'  	5.6'  	-3.2'  	-2.4'  	1.6'  	4.8'  	9.6'  	11.9'  	11.9  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new[] {  	4.8'  	11.2'  	5.6'  	-3.2'  	-2.4'  	1.6'  	4.8'  	9.6'  	11.9'  	11.9  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new[] {  	4.8'  	11.2'  	5.6'  	-3.2'  	-2.4'  	1.6'  	4.8'  	9.6'  	11.9'  	11.9  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new[] {  	4.8'  	11.2'  	5.6'  	-3.2'  	-2.4'  	1.6'  	4.8'  	9.6'  	11.9'  	11.9  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new[] {  	4.8'  	11.2'  	5.6'  	-3.2'  	-2.4'  	1.6'  	4.8'  	9.6'  	11.9'  	11.9  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new[] {  	4.8'  	11.2'  	5.6'  	-3.2'  	-2.4'  	1.6'  	4.8'  	9.6'  	11.9'  	11.9  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new[] {  	4.8'  	11.2'  	5.6'  	-3.2'  	-2.4'  	1.6'  	4.8'  	9.6'  	11.9'  	11.9  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new[] {  	4.8'  	11.2'  	5.6'  	-3.2'  	-2.4'  	1.6'  	4.8'  	9.6'  	11.9'  	11.9  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new[] {  	4.8'  	11.2'  	5.6'  	-3.2'  	-2.4'  	1.6'  	4.8'  	9.6'  	11.9'  	11.9  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new[] {  	10.4'  	10.4'  	5.6'  	5.6'  	-1.1'  	-4.8'  	-4.8'  	-4.8'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new[] {  	10.4'  	10.4'  	5.6'  	5.6'  	-1.1'  	-4.8'  	-4.8'  	-4.8'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new[] {  	10.4'  	10.4'  	5.6'  	5.6'  	-1.1'  	-4.8'  	-4.8'  	-4.8'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new[] {  	10.4'  	10.4'  	5.6'  	5.6'  	-1.1'  	-4.8'  	-4.8'  	-4.8'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new[] {  	10.4'  	10.4'  	5.6'  	5.6'  	-1.1'  	-4.8'  	-4.8'  	-4.8'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new[] {  	10.4'  	10.4'  	5.6'  	5.6'  	-1.1'  	-4.8'  	-4.8'  	-4.8'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new[] {  	10.4'  	10.4'  	5.6'  	5.6'  	-1.1'  	-4.8'  	-4.8'  	-4.8'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new[] {  	10.4'  	10.4'  	5.6'  	5.6'  	-1.1'  	-4.8'  	-4.8'  	-4.8'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new[] {  	10.4'  	10.4'  	5.6'  	5.6'  	-1.1'  	-4.8'  	-4.8'  	-4.8'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new[] {  	10.4'  	10.4'  	5.6'  	5.6'  	-1.1'  	-4.8'  	-4.8'  	-4.8'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new[] {  	10.4'  	10.4'  	5.6'  	5.6'  	-1.1'  	-4.8'  	-4.8'  	-4.8'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new[] {  	-4.8'  	-1.1'  	4'  	5.6'  	5.6'  	5.6'  	4'  	2.4'  	2.4'  	2.4  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new[] {  	-4.8'  	-1.1'  	4'  	5.6'  	5.6'  	5.6'  	4'  	2.4'  	2.4'  	2.4  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new[] {  	-4.8'  	-1.1'  	4'  	5.6'  	5.6'  	5.6'  	4'  	2.4'  	2.4'  	2.4  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new[] {  	-4.8'  	-1.1'  	4'  	5.6'  	5.6'  	5.6'  	4'  	2.4'  	2.4'  	2.4  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new[] {  	-4.8'  	-1.1'  	4'  	5.6'  	5.6'  	5.6'  	4'  	2.4'  	2.4'  	2.4  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new[] {  	-4.8'  	-1.1'  	4'  	5.6'  	5.6'  	5.6'  	4'  	2.4'  	2.4'  	2.4  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new[] {  	-4.8'  	-1.1'  	4'  	5.6'  	5.6'  	5.6'  	4'  	2.4'  	2.4'  	2.4  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new[] {  	-4.8'  	-1.1'  	4'  	5.6'  	5.6'  	5.6'  	4'  	2.4'  	2.4'  	2.4  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new[] {  	-4.8'  	-1.1'  	4'  	5.6'  	5.6'  	5.6'  	4'  	2.4'  	2.4'  	2.4  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new[] {  	-4.8'  	-1.1'  	4'  	5.6'  	5.6'  	5.6'  	4'  	2.4'  	2.4'  	2.4  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new[] {  	-4.8'  	-1.1'  	4'  	5.6'  	5.6'  	5.6'  	4'  	2.4'  	2.4'  	2.4  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new[] {  	7.2'  	7.2'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	7.2'  	7.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new[] {  	7.2'  	7.2'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	7.2'  	7.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new[] {  	7.2'  	7.2'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	7.2'  	7.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new[] {  	7.2'  	7.2'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	7.2'  	7.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new[] {  	7.2'  	7.2'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	7.2'  	7.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new[] {  	7.2'  	7.2'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	7.2'  	7.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new[] {  	7.2'  	7.2'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	7.2'  	7.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new[] {  	7.2'  	7.2'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	7.2'  	7.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new[] {  	7.2'  	7.2'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	7.2'  	7.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new[] {  	7.2'  	7.2'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	7.2'  	7.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new[] {  	7.2'  	7.2'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	-1.1'  	7.2'  	7.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new[] {  	-1.6'  	4.8'  	7.2'  	8'  	5.6'  	-1.1'  	-2.4'  	-2.4'  	-1.6'  	-1.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new[] {  	-1.6'  	4.8'  	7.2'  	8'  	5.6'  	-1.1'  	-2.4'  	-2.4'  	-1.6'  	-1.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new[] {  	-1.6'  	4.8'  	7.2'  	8'  	5.6'  	-1.1'  	-2.4'  	-2.4'  	-1.6'  	-1.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new[] {  	-1.6'  	4.8'  	7.2'  	8'  	5.6'  	-1.1'  	-2.4'  	-2.4'  	-1.6'  	-1.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new[] {  	-1.6'  	4.8'  	7.2'  	8'  	5.6'  	-1.1'  	-2.4'  	-2.4'  	-1.6'  	-1.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new[] {  	-1.6'  	4.8'  	7.2'  	8'  	5.6'  	-1.1'  	-2.4'  	-2.4'  	-1.6'  	-1.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new[] {  	-1.6'  	4.8'  	7.2'  	8'  	5.6'  	-1.1'  	-2.4'  	-2.4'  	-1.6'  	-1.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new[] {  	-1.6'  	4.8'  	7.2'  	8'  	5.6'  	-1.1'  	-2.4'  	-2.4'  	-1.6'  	-1.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new[] {  	-1.6'  	4.8'  	7.2'  	8'  	5.6'  	-1.1'  	-2.4'  	-2.4'  	-1.6'  	-1.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new[] {  	-1.6'  	4.8'  	7.2'  	8'  	5.6'  	-1.1'  	-2.4'  	-2.4'  	-1.6'  	-1.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new[] {  	-1.6'  	4.8'  	7.2'  	8'  	5.6'  	-1.1'  	-2.4'  	-2.4'  	-1.6'  	-1.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new[] {  	-1.1'  	-1.1'  	-1.1'  	-5.6'  	-1.1'  	6.4'  	6.4'  	-1.1'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new[] {  	-1.1'  	-1.1'  	-1.1'  	-5.6'  	-1.1'  	6.4'  	6.4'  	-1.1'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new[] {  	-1.1'  	-1.1'  	-1.1'  	-5.6'  	-1.1'  	6.4'  	6.4'  	-1.1'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new[] {  	-1.1'  	-1.1'  	-1.1'  	-5.6'  	-1.1'  	6.4'  	6.4'  	-1.1'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new[] {  	-1.1'  	-1.1'  	-1.1'  	-5.6'  	-1.1'  	6.4'  	6.4'  	-1.1'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new[] {  	-1.1'  	-1.1'  	-1.1'  	-5.6'  	-1.1'  	6.4'  	6.4'  	-1.1'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new[] {  	-1.1'  	-1.1'  	-1.1'  	-5.6'  	-1.1'  	6.4'  	6.4'  	-1.1'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new[] {  	-1.1'  	-1.1'  	-1.1'  	-5.6'  	-1.1'  	6.4'  	6.4'  	-1.1'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new[] {  	-1.1'  	-1.1'  	-1.1'  	-5.6'  	-1.1'  	6.4'  	6.4'  	-1.1'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new[] {  	-1.1'  	-1.1'  	-1.1'  	-5.6'  	-1.1'  	6.4'  	6.4'  	-1.1'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new[] {  	-1.1'  	-1.1'  	-1.1'  	-5.6'  	-1.1'  	6.4'  	6.4'  	-1.1'  	-1.1'  	-1.1  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new[] {  	8'  	4.8'  	-5.6'  	-8'  	-3.2'  	4'  	8.8'  	11.2'  	11.2'  	11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new[] {  	8'  	4.8'  	-5.6'  	-8'  	-3.2'  	4'  	8.8'  	11.2'  	11.2'  	11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new[] {  	8'  	4.8'  	-5.6'  	-8'  	-3.2'  	4'  	8.8'  	11.2'  	11.2'  	11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new[] {  	8'  	4.8'  	-5.6'  	-8'  	-3.2'  	4'  	8.8'  	11.2'  	11.2'  	11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new[] {  	8'  	4.8'  	-5.6'  	-8'  	-3.2'  	4'  	8.8'  	11.2'  	11.2'  	11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new[] {  	8'  	4.8'  	-5.6'  	-8'  	-3.2'  	4'  	8.8'  	11.2'  	11.2'  	11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new[] {  	8'  	4.8'  	-5.6'  	-8'  	-3.2'  	4'  	8.8'  	11.2'  	11.2'  	11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new[] {  	8'  	4.8'  	-5.6'  	-8'  	-3.2'  	4'  	8.8'  	11.2'  	11.2'  	11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new[] {  	8'  	4.8'  	-5.6'  	-8'  	-3.2'  	4'  	8.8'  	11.2'  	11.2'  	11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new[] {  	8'  	4.8'  	-5.6'  	-8'  	-3.2'  	4'  	8.8'  	11.2'  	11.2'  	11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new[] {  	8'  	4.8'  	-5.6'  	-8'  	-3.2'  	4'  	8.8'  	11.2'  	11.2'  	11.2  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new[] {  	-2.4'  	-4.8'  	-4'  	-1.1'  	4'  	5.6'  	8.8'  	9.6'  	11.2'  	9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new[] {  	-2.4'  	-4.8'  	-4'  	-1.1'  	4'  	5.6'  	8.8'  	9.6'  	11.2'  	9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new[] {  	-2.4'  	-4.8'  	-4'  	-1.1'  	4'  	5.6'  	8.8'  	9.6'  	11.2'  	9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new[] {  	-2.4'  	-4.8'  	-4'  	-1.1'  	4'  	5.6'  	8.8'  	9.6'  	11.2'  	9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new[] {  	-2.4'  	-4.8'  	-4'  	-1.1'  	4'  	5.6'  	8.8'  	9.6'  	11.2'  	9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new[] {  	-2.4'  	-4.8'  	-4'  	-1.1'  	4'  	5.6'  	8.8'  	9.6'  	11.2'  	9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new[] {  	-2.4'  	-4.8'  	-4'  	-1.1'  	4'  	5.6'  	8.8'  	9.6'  	11.2'  	9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new[] {  	-2.4'  	-4.8'  	-4'  	-1.1'  	4'  	5.6'  	8.8'  	9.6'  	11.2'  	9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new[] {  	-2.4'  	-4.8'  	-4'  	-1.1'  	4'  	5.6'  	8.8'  	9.6'  	11.2'  	9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new[] {  	-2.4'  	-4.8'  	-4'  	-1.1'  	4'  	5.6'  	8.8'  	9.6'  	11.2'  	9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new[] {  	-2.4'  	-4.8'  	-4'  	-1.1'  	4'  	5.6'  	8.8'  	9.6'  	11.2'  	9.6  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new[] {  	12'  	8'  	6'  	3'  	0.0'  	0.0'  	3'  	6'  	8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new[] {  	12'  	8'  	6'  	3'  	0.0'  	0.0'  	3'  	6'  	8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new[] {  	12'  	8'  	6'  	3'  	0.0'  	0.0'  	3'  	6'  	8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new[] {  	12'  	8'  	6'  	3'  	0.0'  	0.0'  	3'  	6'  	8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new[] {  	12'  	8'  	6'  	3'  	0.0'  	0.0'  	3'  	6'  	8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new[] {  	12'  	8'  	6'  	3'  	0.0'  	0.0'  	3'  	6'  	8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new[] {  	12'  	8'  	6'  	3'  	0.0'  	0.0'  	3'  	6'  	8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new[] {  	12'  	8'  	6'  	3'  	0.0'  	0.0'  	3'  	6'  	8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new[] {  	12'  	8'  	6'  	3'  	0.0'  	0.0'  	3'  	6'  	8'  	12  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new[] {  	4.8'  	1.6'  	-1.1'  	-2.4'  	-1.1'  	4'  	8'  	9.6'  	11.2'  	12'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new[] {  	4.8'  	1.6'  	-1.1'  	-2.4'  	-1.1'  	4'  	8'  	9.6'  	11.2'  	12'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new[] {  	4.8'  	1.6'  	-1.1'  	-2.4'  	-1.1'  	4'  	8'  	9.6'  	11.2'  	12'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new[] {  	4.8'  	1.6'  	-1.1'  	-2.4'  	-1.1'  	4'  	8'  	9.6'  	11.2'  	12'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new[] {  	4.8'  	1.6'  	-1.1'  	-2.4'  	-1.1'  	4'  	8'  	9.6'  	11.2'  	12'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new[] {  	4.8'  	1.6'  	-1.1'  	-2.4'  	-1.1'  	4'  	8'  	9.6'  	11.2'  	12'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new[] {  	4.8'  	1.6'  	-1.1'  	-2.4'  	-1.1'  	4'  	8'  	9.6'  	11.2'  	12'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new[] {  	4.8'  	1.6'  	-1.1'  	-2.4'  	-1.1'  	4'  	8'  	9.6'  	11.2'  	12'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new[] {  	4.8'  	1.6'  	-1.1'  	-2.4'  	-1.1'  	4'  	8'  	9.6'  	11.2'  	12'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new[] {  	4.8'  	1.6'  	-1.1'  	-2.4'  	-1.1'  	4'  	8'  	9.6'  	11.2'  	12'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new[] {  	4.8'  	1.6'  	-1.1'  	-2.4'  	-1.1'  	4'  	8'  	9.6'  	11.2'  	12'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new[] {  	4'  	4'  	2.4'  	-1.1'  	-4'  	-5.6'  	-3.2'  	-1.1'  	2.4'  	8.8'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new[] {  	4'  	4'  	2.4'  	-1.1'  	-4'  	-5.6'  	-3.2'  	-1.1'  	2.4'  	8.8'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new[] {  	4'  	4'  	2.4'  	-1.1'  	-4'  	-5.6'  	-3.2'  	-1.1'  	2.4'  	8.8'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new[] {  	4'  	4'  	2.4'  	-1.1'  	-4'  	-5.6'  	-3.2'  	-1.1'  	2.4'  	8.8'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new[] {  	4'  	4'  	2.4'  	-1.1'  	-4'  	-5.6'  	-3.2'  	-1.1'  	2.4'  	8.8'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new[] {  	4'  	4'  	2.4'  	-1.1'  	-4'  	-5.6'  	-3.2'  	-1.1'  	2.4'  	8.8'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new[] {  	4'  	4'  	2.4'  	-1.1'  	-4'  	-5.6'  	-3.2'  	-1.1'  	2.4'  	8.8'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new[] {  	4'  	4'  	2.4'  	-1.1'  	-4'  	-5.6'  	-3.2'  	-1.1'  	2.4'  	8.8'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new[] {  	4'  	4'  	2.4'  	-1.1'  	-4'  	-5.6'  	-3.2'  	-1.1'  	2.4'  	8.8'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new[] {  	4'  	4'  	2.4'  	-1.1'  	-4'  	-5.6'  	-3.2'  	-1.1'  	2.4'  	8.8'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new[] {  	4'  	4'  	2.4'  	-1.1'  	-4'  	-5.6'  	-3.2'  	-1.1'  	2.4'  	8.8'  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new[] {  	8'  	5.6'  	-1.1'  	-5.6'  	-4.8'  	-1.1'  	8'  	9.6'  	9.6'  	8.8  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new[] {  	8'  	5.6'  	-1.1'  	-5.6'  	-4.8'  	-1.1'  	8'  	9.6'  	9.6'  	8.8  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new[] {  	8'  	5.6'  	-1.1'  	-5.6'  	-4.8'  	-1.1'  	8'  	9.6'  	9.6'  	8.8  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new[] {  	8'  	5.6'  	-1.1'  	-5.6'  	-4.8'  	-1.1'  	8'  	9.6'  	9.6'  	8.8  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new[] {  	8'  	5.6'  	-1.1'  	-5.6'  	-4.8'  	-1.1'  	8'  	9.6'  	9.6'  	8.8  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new[] {  	8'  	5.6'  	-1.1'  	-5.6'  	-4.8'  	-1.1'  	8'  	9.6'  	9.6'  	8.8  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new[] {  	8'  	5.6'  	-1.1'  	-5.6'  	-4.8'  	-1.1'  	8'  	9.6'  	9.6'  	8.8  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new[] {  	8'  	5.6'  	-1.1'  	-5.6'  	-4.8'  	-1.1'  	8'  	9.6'  	9.6'  	8.8  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new[] {  	8'  	5.6'  	-1.1'  	-5.6'  	-4.8'  	-1.1'  	8'  	9.6'  	9.6'  	8.8  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new[] {  	8'  	5.6'  	-1.1'  	-5.6'  	-4.8'  	-1.1'  	8'  	9.6'  	9.6'  	8.8  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new[] {  	8'  	5.6'  	-1.1'  	-5.6'  	-4.8'  	-1.1'  	8'  	9.6'  	9.6'  	8.8  });  
Magic Number,Banshee.Equalizer,EqualizerManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,QueueSave,The following statement contains a magic number: queue_save_id = GLib.Timeout.Add (2500' delegate {  	Save ();  	queue_save_id = 0;  	return false;  });  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: try {  	ServiceManager.DbConnection.Execute ("BEGIN");  	Migrator m = new Migrator ();  	using (IDataReader reader = ServiceManager.DbConnection.Query ("SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion FROM CoreSmartPlaylists")) {  		while (reader.Read ()) {  			m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  		}  	}  	ServiceManager.DbConnection.Execute ("INSERT INTO CoreConfiguration (Key' Value) Values ('SmartPlaylistVersion'' 1)");  	ServiceManager.DbConnection.Execute ("COMMIT");  	return true;  } catch (Exception e) {  	ServiceManager.DbConnection.Execute ("ROLLBACK");  	Log.Error (Catalog.GetString ("Unable to Migrate Smart Playlists")' String.Format (Catalog.GetString ("Please file a bug with this error: {0}")' e.ToString ())' true);  	return false;  }  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: try {  	ServiceManager.DbConnection.Execute ("BEGIN");  	Migrator m = new Migrator ();  	using (IDataReader reader = ServiceManager.DbConnection.Query ("SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion FROM CoreSmartPlaylists")) {  		while (reader.Read ()) {  			m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  		}  	}  	ServiceManager.DbConnection.Execute ("INSERT INTO CoreConfiguration (Key' Value) Values ('SmartPlaylistVersion'' 1)");  	ServiceManager.DbConnection.Execute ("COMMIT");  	return true;  } catch (Exception e) {  	ServiceManager.DbConnection.Execute ("ROLLBACK");  	Log.Error (Catalog.GetString ("Unable to Migrate Smart Playlists")' String.Format (Catalog.GetString ("Please file a bug with this error: {0}")' e.ToString ())' true);  	return false;  }  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: try {  	ServiceManager.DbConnection.Execute ("BEGIN");  	Migrator m = new Migrator ();  	using (IDataReader reader = ServiceManager.DbConnection.Query ("SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion FROM CoreSmartPlaylists")) {  		while (reader.Read ()) {  			m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  		}  	}  	ServiceManager.DbConnection.Execute ("INSERT INTO CoreConfiguration (Key' Value) Values ('SmartPlaylistVersion'' 1)");  	ServiceManager.DbConnection.Execute ("COMMIT");  	return true;  } catch (Exception e) {  	ServiceManager.DbConnection.Execute ("ROLLBACK");  	Log.Error (Catalog.GetString ("Unable to Migrate Smart Playlists")' String.Format (Catalog.GetString ("Please file a bug with this error: {0}")' e.ToString ())' true);  	return false;  }  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: try {  	ServiceManager.DbConnection.Execute ("BEGIN");  	Migrator m = new Migrator ();  	using (IDataReader reader = ServiceManager.DbConnection.Query ("SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion FROM CoreSmartPlaylists")) {  		while (reader.Read ()) {  			m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  		}  	}  	ServiceManager.DbConnection.Execute ("INSERT INTO CoreConfiguration (Key' Value) Values ('SmartPlaylistVersion'' 1)");  	ServiceManager.DbConnection.Execute ("COMMIT");  	return true;  } catch (Exception e) {  	ServiceManager.DbConnection.Execute ("ROLLBACK");  	Log.Error (Catalog.GetString ("Unable to Migrate Smart Playlists")' String.Format (Catalog.GetString ("Please file a bug with this error: {0}")' e.ToString ())' true);  	return false;  }  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: using (IDataReader reader = ServiceManager.DbConnection.Query ("SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion FROM CoreSmartPlaylists")) {  	while (reader.Read ()) {  		m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  	}  }  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: using (IDataReader reader = ServiceManager.DbConnection.Query ("SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion FROM CoreSmartPlaylists")) {  	while (reader.Read ()) {  		m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  	}  }  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: using (IDataReader reader = ServiceManager.DbConnection.Query ("SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion FROM CoreSmartPlaylists")) {  	while (reader.Read ()) {  		m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  	}  }  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: using (IDataReader reader = ServiceManager.DbConnection.Query ("SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion FROM CoreSmartPlaylists")) {  	while (reader.Read ()) {  		m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  	}  }  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: while (reader.Read ()) {  	m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  }  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: while (reader.Read ()) {  	m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  }  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: while (reader.Read ()) {  	m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  }  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: while (reader.Read ()) {  	m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  }  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: m.Migrate (Convert.ToInt32 (reader [0])' reader [1] as string' reader [2] as string' reader [3] as string' reader [4] as string' reader [5] as string);  
Magic Number,Banshee.SmartPlaylist,Migrator,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,ParseCondition,The following statement contains a magic number: conditions [0] = conditions [0].Remove (0' 2);  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: using (HyenaDataReader reader = new HyenaDataReader (ServiceManager.DbConnection.Query (@"SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion' PrimarySourceID' CachedCount' IsTemporary' IsHiddenWhenEmpty                     FROM CoreSmartPlaylists WHERE PrimarySourceID = ?"' parent.DbId))) {  	while (reader.Read ()) {  		SmartPlaylistSource playlist = null;  		try {  			playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  		} catch (Exception e) {  			Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  		}  		if (playlist != null) {  			yield return playlist;  		}  	}  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: using (HyenaDataReader reader = new HyenaDataReader (ServiceManager.DbConnection.Query (@"SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion' PrimarySourceID' CachedCount' IsTemporary' IsHiddenWhenEmpty                     FROM CoreSmartPlaylists WHERE PrimarySourceID = ?"' parent.DbId))) {  	while (reader.Read ()) {  		SmartPlaylistSource playlist = null;  		try {  			playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  		} catch (Exception e) {  			Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  		}  		if (playlist != null) {  			yield return playlist;  		}  	}  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: using (HyenaDataReader reader = new HyenaDataReader (ServiceManager.DbConnection.Query (@"SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion' PrimarySourceID' CachedCount' IsTemporary' IsHiddenWhenEmpty                     FROM CoreSmartPlaylists WHERE PrimarySourceID = ?"' parent.DbId))) {  	while (reader.Read ()) {  		SmartPlaylistSource playlist = null;  		try {  			playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  		} catch (Exception e) {  			Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  		}  		if (playlist != null) {  			yield return playlist;  		}  	}  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: using (HyenaDataReader reader = new HyenaDataReader (ServiceManager.DbConnection.Query (@"SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion' PrimarySourceID' CachedCount' IsTemporary' IsHiddenWhenEmpty                     FROM CoreSmartPlaylists WHERE PrimarySourceID = ?"' parent.DbId))) {  	while (reader.Read ()) {  		SmartPlaylistSource playlist = null;  		try {  			playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  		} catch (Exception e) {  			Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  		}  		if (playlist != null) {  			yield return playlist;  		}  	}  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: using (HyenaDataReader reader = new HyenaDataReader (ServiceManager.DbConnection.Query (@"SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion' PrimarySourceID' CachedCount' IsTemporary' IsHiddenWhenEmpty                     FROM CoreSmartPlaylists WHERE PrimarySourceID = ?"' parent.DbId))) {  	while (reader.Read ()) {  		SmartPlaylistSource playlist = null;  		try {  			playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  		} catch (Exception e) {  			Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  		}  		if (playlist != null) {  			yield return playlist;  		}  	}  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: using (HyenaDataReader reader = new HyenaDataReader (ServiceManager.DbConnection.Query (@"SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion' PrimarySourceID' CachedCount' IsTemporary' IsHiddenWhenEmpty                     FROM CoreSmartPlaylists WHERE PrimarySourceID = ?"' parent.DbId))) {  	while (reader.Read ()) {  		SmartPlaylistSource playlist = null;  		try {  			playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  		} catch (Exception e) {  			Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  		}  		if (playlist != null) {  			yield return playlist;  		}  	}  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: using (HyenaDataReader reader = new HyenaDataReader (ServiceManager.DbConnection.Query (@"SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion' PrimarySourceID' CachedCount' IsTemporary' IsHiddenWhenEmpty                     FROM CoreSmartPlaylists WHERE PrimarySourceID = ?"' parent.DbId))) {  	while (reader.Read ()) {  		SmartPlaylistSource playlist = null;  		try {  			playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  		} catch (Exception e) {  			Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  		}  		if (playlist != null) {  			yield return playlist;  		}  	}  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: while (reader.Read ()) {  	SmartPlaylistSource playlist = null;  	try {  		playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  	} catch (Exception e) {  		Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  	}  	if (playlist != null) {  		yield return playlist;  	}  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: while (reader.Read ()) {  	SmartPlaylistSource playlist = null;  	try {  		playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  	} catch (Exception e) {  		Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  	}  	if (playlist != null) {  		yield return playlist;  	}  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: while (reader.Read ()) {  	SmartPlaylistSource playlist = null;  	try {  		playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  	} catch (Exception e) {  		Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  	}  	if (playlist != null) {  		yield return playlist;  	}  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: while (reader.Read ()) {  	SmartPlaylistSource playlist = null;  	try {  		playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  	} catch (Exception e) {  		Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  	}  	if (playlist != null) {  		yield return playlist;  	}  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: while (reader.Read ()) {  	SmartPlaylistSource playlist = null;  	try {  		playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  	} catch (Exception e) {  		Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  	}  	if (playlist != null) {  		yield return playlist;  	}  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: while (reader.Read ()) {  	SmartPlaylistSource playlist = null;  	try {  		playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  	} catch (Exception e) {  		Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  	}  	if (playlist != null) {  		yield return playlist;  	}  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: while (reader.Read ()) {  	SmartPlaylistSource playlist = null;  	try {  		playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  	} catch (Exception e) {  		Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  	}  	if (playlist != null) {  		yield return playlist;  	}  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: try {  	playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  } catch (Exception e) {  	Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: try {  	playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  } catch (Exception e) {  	Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: try {  	playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  } catch (Exception e) {  	Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: try {  	playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  } catch (Exception e) {  	Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: try {  	playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  } catch (Exception e) {  	Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: try {  	playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  } catch (Exception e) {  	Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: try {  	playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  } catch (Exception e) {  	Log.Warning ("Ignoring Smart Playlist"' String.Format ("Caught error: {0}"' e)' false);  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: playlist = new SmartPlaylistSource (reader.Get<long> (0)' reader.Get<string> (1)' reader.Get<string> (2)' reader.Get<string> (3)' reader.Get<string> (4)' reader.Get<string> (5)' parent' reader.Get<int> (7)' reader.Get<bool> (8)' reader.Get<bool> (9));  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,StartTimer,The following statement contains a magic number: if (timeout_id == 0 && playlist.TimeDependent) {  	Log.Information ("Starting Smart Playlist Auto-Refresh"' "Time-dependent smart playlist added' so starting one-minute auto-refresh timer."' false);  	timeout_id = GLib.Timeout.Add (1000 * 60' OnTimerBeep);  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,StartTimer,The following statement contains a magic number: if (timeout_id == 0 && playlist.TimeDependent) {  	Log.Information ("Starting Smart Playlist Auto-Refresh"' "Time-dependent smart playlist added' so starting one-minute auto-refresh timer."' false);  	timeout_id = GLib.Timeout.Add (1000 * 60' OnTimerBeep);  }  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,StartTimer,The following statement contains a magic number: timeout_id = GLib.Timeout.Add (1000 * 60' OnTimerBeep);  
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,StartTimer,The following statement contains a magic number: timeout_id = GLib.Timeout.Add (1000 * 60' OnTimerBeep);  
Magic Number,Banshee.Metadata,MetadataServiceJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata\MetadataServiceJob.cs,GetHttpStream,The following statement contains a magic number: request.Timeout = 10 * 1000;  
Magic Number,Banshee.Metadata,MetadataServiceJob,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata\MetadataServiceJob.cs,GetHttpStream,The following statement contains a magic number: request.Timeout = 10 * 1000;  
Magic Number,Banshee.Metadata,SaveTrackMetadataService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata\SaveTrackMetadataService.cs,SaveTrackMetadataService,The following statement contains a magic number: Banshee.ServiceStack.Application.RunTimeout (10000' delegate {  	WriteMetadataEnabled.ValueChanged += OnEnabledChanged;  	WriteRatingsEnabled.ValueChanged += OnEnabledChanged;  	WritePlayCountsEnabled.ValueChanged += OnEnabledChanged;  	foreach (var source in ServiceManager.SourceManager.Sources) {  		AddPrimarySource (source);  	}  	ServiceManager.SourceManager.SourceAdded += a => AddPrimarySource (a.Source);  	ServiceManager.SourceManager.SourceRemoved += a => RemovePrimarySource (a.Source);  	Save ();  	inited = true;  	return false;  });  
Magic Number,Banshee.PlaybackController,PlaybackControllerService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,OnPlayerEvent,The following statement contains a magic number: switch (args.Event) {  case PlayerEvent.StartOfStream:  	CurrentTrack = player_engine.CurrentTrack;  	consecutive_errors = 0;  	break;  case PlayerEvent.EndOfStream:  	EosTransition ();  	break;  case PlayerEvent.Error:  	if (++consecutive_errors >= 5) {  		consecutive_errors = 0;  		player_engine.Close (false);  		OnStopped ();  		break;  	}  	CancelErrorTransition ();  	// TODO why is this so long? any reason not to be instantaneous?  	error_transition_id = Application.RunTimeout (250' delegate {  		EosTransition ();  		RequestTrackHandler ();  		return true;  	});  	break;  case PlayerEvent.StateChange:  	if (((PlayerEventStateChangeArgs)args).Current != PlayerState.Loading) {  		break;  	}  	TrackInfo track = player_engine.CurrentTrack;  	if (changing_to_track != track && track != null) {  		CurrentTrack = track;  	}  	changing_to_track = null;  	if (!raise_started_after_transition) {  		transition_track_started = false;  		OnTrackStarted ();  	} else {  		transition_track_started = true;  	}  	break;  case PlayerEvent.RequestNextTrack:  	RequestTrackHandler ();  	break;  }  
Magic Number,Banshee.PlaybackController,PlaybackControllerService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,OnPlayerEvent,The following statement contains a magic number: switch (args.Event) {  case PlayerEvent.StartOfStream:  	CurrentTrack = player_engine.CurrentTrack;  	consecutive_errors = 0;  	break;  case PlayerEvent.EndOfStream:  	EosTransition ();  	break;  case PlayerEvent.Error:  	if (++consecutive_errors >= 5) {  		consecutive_errors = 0;  		player_engine.Close (false);  		OnStopped ();  		break;  	}  	CancelErrorTransition ();  	// TODO why is this so long? any reason not to be instantaneous?  	error_transition_id = Application.RunTimeout (250' delegate {  		EosTransition ();  		RequestTrackHandler ();  		return true;  	});  	break;  case PlayerEvent.StateChange:  	if (((PlayerEventStateChangeArgs)args).Current != PlayerState.Loading) {  		break;  	}  	TrackInfo track = player_engine.CurrentTrack;  	if (changing_to_track != track && track != null) {  		CurrentTrack = track;  	}  	changing_to_track = null;  	if (!raise_started_after_transition) {  		transition_track_started = false;  		OnTrackStarted ();  	} else {  		transition_track_started = true;  	}  	break;  case PlayerEvent.RequestNextTrack:  	RequestTrackHandler ();  	break;  }  
Magic Number,Banshee.PlaybackController,PlaybackControllerService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,OnPlayerEvent,The following statement contains a magic number: if (++consecutive_errors >= 5) {  	consecutive_errors = 0;  	player_engine.Close (false);  	OnStopped ();  	break;  }  
Magic Number,Banshee.PlaybackController,PlaybackControllerService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,OnPlayerEvent,The following statement contains a magic number: error_transition_id = Application.RunTimeout (250' delegate {  	EosTransition ();  	RequestTrackHandler ();  	return true;  });  
Magic Number,Banshee.Hardware,VendorProductInfo,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Hardware\VendorProductInfo.cs,VendorProductInfo,The following statement contains a magic number: vendor_id = (short)(vendorProductId >> 16);  
Magic Number,Banshee.Hardware,VendorProductDeviceNode,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Hardware\VendorProductDeviceNode.cs,ParseId,The following statement contains a magic number: if (value.StartsWith ("0x")) {  	Int32.TryParse (value.Substring (2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out result);  } else {  	Int32.TryParse (value' NumberStyles.AllowLeadingWhite | NumberStyles.AllowTrailingWhite' CultureInfo.InvariantCulture' out result);  }  
Magic Number,Banshee.Hardware,VendorProductDeviceNode,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Hardware\VendorProductDeviceNode.cs,ParseId,The following statement contains a magic number: Int32.TryParse (value.Substring (2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out result);  
Magic Number,Banshee.MediaProfiles,MediaProfileManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\MediaProfileManager.cs,GetProfileForExtension,The following statement contains a magic number: if (extension == null || extension.Length < 2)  	return null;  
Magic Number,Banshee.Preferences,PreferenceService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Preferences\PreferenceService.cs,PreferenceService,The following statement contains a magic number: Add (new Page ("extensions"' Catalog.GetString ("Extensions")' 10));  
Magic Number,Banshee.Collection.Indexer,CollectionIndexer,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Indexer\CollectionIndexer.cs,SaveToXml,The following statement contains a magic number: lock (this) {  	uint timer_id = Hyena.Log.DebugTimerStart ();  	bool success = false;  	try {  		XmlTextWriter writer = new XmlTextWriter (path' System.Text.Encoding.UTF8);  		writer.Formatting = Formatting.Indented;  		writer.Indentation = 2;  		writer.IndentChar = ' ';  		writer.WriteStartDocument (true);  		writer.WriteStartElement ("banshee-collection");  		writer.WriteStartAttribute ("version");  		writer.WriteString (TrackInfo.ExportVersion);  		writer.WriteEndAttribute ();  		for (int i = 0; i < model_caches.Count; i++) {  			CachedList<DatabaseTrackInfo> model = model_caches [i];  			if (model.Count <= 0) {  				continue;  			}  			writer.WriteStartElement ("model");  			for (int j = 0; j < model.Count; j++) {  				writer.WriteStartElement ("item");  				foreach (KeyValuePair<string' object> item in model [j].GenerateExportable (export_fields)) {  					string type = "string";  					if (item.Value is Boolean)  						type = "bool";  					else if (item.Value is Byte)  						type = "byte";  					else if (item.Value is SByte)  						type = "sbyte";  					else if (item.Value is Int16)  						type = "short";  					else if (item.Value is UInt16)  						type = "ushort";  					else if (item.Value is Int32)  						type = "int";  					else if (item.Value is UInt32)  						type = "uint";  					else if (item.Value is Int64)  						type = "long";  					else if (item.Value is UInt64)  						type = "ulong";  					else if (item.Value is Char)  						type = "char";  					else if (item.Value is Double)  						type = "double";  					else if (item.Value is Single)  						type = "float";  					writer.WriteStartElement (item.Key);  					writer.WriteStartAttribute ("type");  					writer.WriteString (type);  					writer.WriteEndAttribute ();  					writer.WriteString (item.Value.ToString ());  					writer.WriteEndElement ();  				}  				writer.WriteEndElement ();  			}  			writer.WriteEndElement ();  		}  		writer.WriteEndElement ();  		writer.WriteEndDocument ();  		writer.Close ();  		success = true;  	} catch (Exception e) {  		Log.Error (e);  	}  	Hyena.Log.DebugTimerPrint (timer_id' "CollectionIndexer.SaveToXml: {0}");  	SaveToXmlFinishedHandler handler = save_to_xml_finished;  	if (handler != null) {  		handler (success' path);  	}  }  
Magic Number,Banshee.Collection.Indexer,CollectionIndexer,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Indexer\CollectionIndexer.cs,SaveToXml,The following statement contains a magic number: try {  	XmlTextWriter writer = new XmlTextWriter (path' System.Text.Encoding.UTF8);  	writer.Formatting = Formatting.Indented;  	writer.Indentation = 2;  	writer.IndentChar = ' ';  	writer.WriteStartDocument (true);  	writer.WriteStartElement ("banshee-collection");  	writer.WriteStartAttribute ("version");  	writer.WriteString (TrackInfo.ExportVersion);  	writer.WriteEndAttribute ();  	for (int i = 0; i < model_caches.Count; i++) {  		CachedList<DatabaseTrackInfo> model = model_caches [i];  		if (model.Count <= 0) {  			continue;  		}  		writer.WriteStartElement ("model");  		for (int j = 0; j < model.Count; j++) {  			writer.WriteStartElement ("item");  			foreach (KeyValuePair<string' object> item in model [j].GenerateExportable (export_fields)) {  				string type = "string";  				if (item.Value is Boolean)  					type = "bool";  				else if (item.Value is Byte)  					type = "byte";  				else if (item.Value is SByte)  					type = "sbyte";  				else if (item.Value is Int16)  					type = "short";  				else if (item.Value is UInt16)  					type = "ushort";  				else if (item.Value is Int32)  					type = "int";  				else if (item.Value is UInt32)  					type = "uint";  				else if (item.Value is Int64)  					type = "long";  				else if (item.Value is UInt64)  					type = "ulong";  				else if (item.Value is Char)  					type = "char";  				else if (item.Value is Double)  					type = "double";  				else if (item.Value is Single)  					type = "float";  				writer.WriteStartElement (item.Key);  				writer.WriteStartAttribute ("type");  				writer.WriteString (type);  				writer.WriteEndAttribute ();  				writer.WriteString (item.Value.ToString ());  				writer.WriteEndElement ();  			}  			writer.WriteEndElement ();  		}  		writer.WriteEndElement ();  	}  	writer.WriteEndElement ();  	writer.WriteEndDocument ();  	writer.Close ();  	success = true;  } catch (Exception e) {  	Log.Error (e);  }  
Magic Number,Banshee.Collection.Indexer,CollectionIndexer,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Indexer\CollectionIndexer.cs,SaveToXml,The following statement contains a magic number: writer.Indentation = 2;  
Magic Number,Banshee.Metrics,BansheeMetrics,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metrics\BansheeMetrics.cs,Initialize,The following statement contains a magic number: Application.RunTimeout (5 * 1000' delegate {  	if (BansheeMetrics.Instance == null) {  		return false;  	}  	ThreadAssist.SpawnFromMain (delegate {  		metrics.AddDefaults ();  		AddMetrics ();  		if (ApplicationContext.CommandLine.Contains ("debug-metrics")) {  			Log.InformationFormat ("Anonymous usage data collected:\n{0}"' metrics.ToJsonString ());  			System.IO.File.WriteAllText ("usage-data.json"' metrics.ToJsonString ());  		}  		if (!ServiceManager.Get<Network> ().Connected) {  			return;  		}  		// Don't post to server more than every 48 hours  		var last_post_time = DatabaseConfigurationClient.Client.Get<DateTime> (last_post_key' DateTime.MinValue);  		var last_post_rel = (DateTime.Now - last_post_time).TotalDays;  		if (last_post_rel < 0 || last_post_rel > 4.0) {  			var poster = new HttpPoster ("http://metrics.banshee.fm/submit/"' metrics);  			bool posted = poster.Post ();  			Log.InformationFormat ("Posted usage data? {0}"' posted);  			// Clear the old metrics' even if we failed to post them; it might be a server-side  			// problem w/ the data we want to send (eg too big' out of space) and we don't want  			// to keep retrying to send the same data.  			metrics.Store.Clear ();  			DatabaseConfigurationClient.Client.Set<DateTime> (last_post_key' DateTime.Now);  		}  	});  	return false;  });  
Magic Number,Banshee.Metrics,BansheeMetrics,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metrics\BansheeMetrics.cs,Initialize,The following statement contains a magic number: Application.RunTimeout (5 * 1000' delegate {  	if (BansheeMetrics.Instance == null) {  		return false;  	}  	ThreadAssist.SpawnFromMain (delegate {  		metrics.AddDefaults ();  		AddMetrics ();  		if (ApplicationContext.CommandLine.Contains ("debug-metrics")) {  			Log.InformationFormat ("Anonymous usage data collected:\n{0}"' metrics.ToJsonString ());  			System.IO.File.WriteAllText ("usage-data.json"' metrics.ToJsonString ());  		}  		if (!ServiceManager.Get<Network> ().Connected) {  			return;  		}  		// Don't post to server more than every 48 hours  		var last_post_time = DatabaseConfigurationClient.Client.Get<DateTime> (last_post_key' DateTime.MinValue);  		var last_post_rel = (DateTime.Now - last_post_time).TotalDays;  		if (last_post_rel < 0 || last_post_rel > 4.0) {  			var poster = new HttpPoster ("http://metrics.banshee.fm/submit/"' metrics);  			bool posted = poster.Post ();  			Log.InformationFormat ("Posted usage data? {0}"' posted);  			// Clear the old metrics' even if we failed to post them; it might be a server-side  			// problem w/ the data we want to send (eg too big' out of space) and we don't want  			// to keep retrying to send the same data.  			metrics.Store.Clear ();  			DatabaseConfigurationClient.Client.Set<DateTime> (last_post_key' DateTime.Now);  		}  	});  	return false;  });  
Magic Number,Banshee.Metrics,BansheeMetrics,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metrics\BansheeMetrics.cs,Initialize,The following statement contains a magic number: Application.RunTimeout (5 * 1000' delegate {  	if (BansheeMetrics.Instance == null) {  		return false;  	}  	ThreadAssist.SpawnFromMain (delegate {  		metrics.AddDefaults ();  		AddMetrics ();  		if (ApplicationContext.CommandLine.Contains ("debug-metrics")) {  			Log.InformationFormat ("Anonymous usage data collected:\n{0}"' metrics.ToJsonString ());  			System.IO.File.WriteAllText ("usage-data.json"' metrics.ToJsonString ());  		}  		if (!ServiceManager.Get<Network> ().Connected) {  			return;  		}  		// Don't post to server more than every 48 hours  		var last_post_time = DatabaseConfigurationClient.Client.Get<DateTime> (last_post_key' DateTime.MinValue);  		var last_post_rel = (DateTime.Now - last_post_time).TotalDays;  		if (last_post_rel < 0 || last_post_rel > 4.0) {  			var poster = new HttpPoster ("http://metrics.banshee.fm/submit/"' metrics);  			bool posted = poster.Post ();  			Log.InformationFormat ("Posted usage data? {0}"' posted);  			// Clear the old metrics' even if we failed to post them; it might be a server-side  			// problem w/ the data we want to send (eg too big' out of space) and we don't want  			// to keep retrying to send the same data.  			metrics.Store.Clear ();  			DatabaseConfigurationClient.Client.Set<DateTime> (last_post_key' DateTime.Now);  		}  	});  	return false;  });  
Magic Number,Banshee.Metrics,BansheeMetrics,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metrics\BansheeMetrics.cs,Initialize,The following statement contains a magic number: ThreadAssist.SpawnFromMain (delegate {  	metrics.AddDefaults ();  	AddMetrics ();  	if (ApplicationContext.CommandLine.Contains ("debug-metrics")) {  		Log.InformationFormat ("Anonymous usage data collected:\n{0}"' metrics.ToJsonString ());  		System.IO.File.WriteAllText ("usage-data.json"' metrics.ToJsonString ());  	}  	if (!ServiceManager.Get<Network> ().Connected) {  		return;  	}  	// Don't post to server more than every 48 hours  	var last_post_time = DatabaseConfigurationClient.Client.Get<DateTime> (last_post_key' DateTime.MinValue);  	var last_post_rel = (DateTime.Now - last_post_time).TotalDays;  	if (last_post_rel < 0 || last_post_rel > 4.0) {  		var poster = new HttpPoster ("http://metrics.banshee.fm/submit/"' metrics);  		bool posted = poster.Post ();  		Log.InformationFormat ("Posted usage data? {0}"' posted);  		// Clear the old metrics' even if we failed to post them; it might be a server-side  		// problem w/ the data we want to send (eg too big' out of space) and we don't want  		// to keep retrying to send the same data.  		metrics.Store.Clear ();  		DatabaseConfigurationClient.Client.Set<DateTime> (last_post_key' DateTime.Now);  	}  });  
Magic Number,Banshee.Metrics,BansheeMetrics,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metrics\BansheeMetrics.cs,Initialize,The following statement contains a magic number: if (last_post_rel < 0 || last_post_rel > 4.0) {  	var poster = new HttpPoster ("http://metrics.banshee.fm/submit/"' metrics);  	bool posted = poster.Post ();  	Log.InformationFormat ("Posted usage data? {0}"' posted);  	// Clear the old metrics' even if we failed to post them; it might be a server-side  	// problem w/ the data we want to send (eg too big' out of space) and we don't want  	// to keep retrying to send the same data.  	metrics.Store.Clear ();  	DatabaseConfigurationClient.Client.Set<DateTime> (last_post_key' DateTime.Now);  }  
Magic Number,Banshee.Metrics,BansheeMetrics,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metrics\BansheeMetrics.cs,AddMetrics,The following statement contains a magic number: HyenaSqliteCommand.RaiseCommandExecutedThresholdMs = 400;  
Missing Default,Banshee.Networking,NetworkManager,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following switch statement is missing a default case: switch ((int)state) {  case 10:  	return State.Asleep;  case 20:  	return State.Disconnected;  case 30:  	return State.Disconnected;  case 40:  	return State.Connecting;  case 50:  	return State.Connected;  case 60:  	return State.Connected;  case 70:  	return State.Connected;  }  
Missing Default,Banshee.Playlists.Formats,AsxPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,Load,The following switch statement is missing a default case: switch (xml_reader.LocalName.ToLower ()) {  case "title":  	try {  		xml_reader.Read ();  		Title = xml_reader.Value;  	} catch {  	}  	break;  case "entry":  	LoadEntry (xml_reader);  	break;  case "entryref":  	string href = xml_reader ["HREF"] ?? xml_reader ["href"];  	if (href != null) {  		var secondary = PlaylistParser.Parse (new SafeUri (ResolveUri (href)));  		if (secondary != null) {  			// splice in Elements of secondary  			foreach (PlaylistElement e in secondary.Elements) {  				Elements.Add (e);  			}  		}  	}  	break;  }  
Missing Default,Banshee.Playlists.Formats,AsxPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,LoadEntry,The following switch statement is missing a default case: switch (xml_reader.LocalName.ToLower ()) {  case "title":  	xml_reader.Read ();  	element.Title = xml_reader.Value;  	break;  case "ref":  	// asf links say they are http' but are mmsh instead  	string uri_aux = xml_reader ["HREF"] ?? xml_reader ["href"];  	if (uri_aux.StartsWith ("http"' StringComparison.CurrentCultureIgnoreCase)) {  		uri_aux = "mmsh" + uri_aux.Substring (4);  	}  	element.Uri = ResolveUri (uri_aux);  	break;  case "duration":  	try {  		xml_reader.Read ();  		element.Duration = TimeSpan.Parse (xml_reader.Value);  	} catch {  	}  	break;  }  
Missing Default,Banshee.Playlists.Formats,PlsPlaylistFormat,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following switch statement is missing a default case: switch (element_type) {  case PlsType.File:  	element.Uri = ResolveUri (value_string);  	break;  case PlsType.Title:  	element.Title = value_string;  	break;  case PlsType.Length:  	element.Duration = SecondsStringToTimeSpan (value_string);  	break;  }  
Missing Default,Banshee.PlaybackController,PlaybackControllerService,F:\newReposMay17\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,OnPlayerEvent,The following switch statement is missing a default case: switch (args.Event) {  case PlayerEvent.StartOfStream:  	CurrentTrack = player_engine.CurrentTrack;  	consecutive_errors = 0;  	break;  case PlayerEvent.EndOfStream:  	EosTransition ();  	break;  case PlayerEvent.Error:  	if (++consecutive_errors >= 5) {  		consecutive_errors = 0;  		player_engine.Close (false);  		OnStopped ();  		break;  	}  	CancelErrorTransition ();  	// TODO why is this so long? any reason not to be instantaneous?  	error_transition_id = Application.RunTimeout (250' delegate {  		EosTransition ();  		RequestTrackHandler ();  		return true;  	});  	break;  case PlayerEvent.StateChange:  	if (((PlayerEventStateChangeArgs)args).Current != PlayerState.Loading) {  		break;  	}  	TrackInfo track = player_engine.CurrentTrack;  	if (changing_to_track != track && track != null) {  		CurrentTrack = track;  	}  	changing_to_track = null;  	if (!raise_started_after_transition) {  		transition_track_started = false;  		OnTrackStarted ();  	} else {  		transition_track_started = true;  	}  	break;  case PlayerEvent.RequestNextTrack:  	RequestTrackHandler ();  	break;  }  
