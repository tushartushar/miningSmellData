Implementation smell,Namespace,Class,File,Method,Description
Long Method,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,CreateTablesAndIndexes,The method has 189 lines of code.
Long Method,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,MigrateFromLegacyBanshee,The method has 103 lines of code.
Long Method,Banshee.Library,MusicFileNamePattern,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Library\MusicFileNamePattern.cs,MusicFileNamePattern,The method has 100 lines of code.
Long Method,Banshee.Query,BansheeQuery,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Query\BansheeQuery.cs,GetSort,The method has 105 lines of code.
Complex Method,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,InnerMigrate,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Collection.Database,DatabaseTrackListModel,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,Reload,Cyclomatic complexity of the method is 12
Complex Method,Banshee.Collection.Database,DatabaseAlbumInfo,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseAlbumInfo.cs,FindOrCreate,Cyclomatic complexity of the method is 11
Complex Method,Banshee.Collection.Database,DatabaseImportManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseImportManager.cs,ImportTrack,Cyclomatic complexity of the method is 9
Complex Method,Banshee.Collection.Database,DatabaseQueryFilterModel<T>,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseQueryFilterModel.cs,GetSqlFilter,Cyclomatic complexity of the method is 9
Complex Method,Banshee.Collection.Database,Shuffler,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\Shuffler.cs,OnExtensionChanged,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Collection.Database,Shuffler,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\Shuffler.cs,GetRandomTrack,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Sources,SourceManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\SourceManager.cs,AddSource,Cyclomatic complexity of the method is 9
Complex Method,Banshee.Sources,SourceManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\SourceManager.cs,RemoveSource,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Sources,DatabaseSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,NeedsReloadWhenFieldChanged,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Sources,PrimarySource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,PrimarySourceInitialize,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Sources,PrimarySource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,DeleteTrackList,Cyclomatic complexity of the method is 9
Complex Method,Banshee.Playlist,PlaylistFileUtil,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistFileUtil.cs,ImportPlaylistToLibrary,Cyclomatic complexity of the method is 10
Complex Method,Banshee.MediaEngine,PlayerEngineService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngineService.cs,OnEngineEventChanged,Cyclomatic complexity of the method is 8
Complex Method,Banshee.MediaEngine,PlayerEngineService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngineService.cs,OpenCheck,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Playlists.Formats,AsxPlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,Load,Cyclomatic complexity of the method is 9
Complex Method,Banshee.Playlists.Formats,PlaylistParser,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Parse,Cyclomatic complexity of the method is 11
Complex Method,Banshee.Playlists.Formats,PlsPlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,Cyclomatic complexity of the method is 10
Complex Method,Banshee.Web,HttpRequest,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\HttpRequest.cs,GetResponse,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Web,BaseHttpServer,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\BaseHttpServer.cs,WriteResponseStream,Cyclomatic complexity of the method is 11
Complex Method,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,Load,Cyclomatic complexity of the method is 12
Complex Method,Banshee.SmartPlaylist,Migrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,ParseCondition,Cyclomatic complexity of the method is 17
Complex Method,Banshee.Metadata.FileSystem,FileSystemQueryJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.FileSystem\FileSystemQueryJob.cs,Fetch,Cyclomatic complexity of the method is 11
Complex Method,Banshee.Metadata.MusicBrainz,MusicBrainzQueryJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.MusicBrainz\MusicBrainzQueryJob.cs,Lookup,Cyclomatic complexity of the method is 17
Complex Method,Banshee.PlaybackController,PlaybackControllerService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,OnPlayerEvent,Cyclomatic complexity of the method is 9
Complex Method,Banshee.Query,BansheeQuery,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Query\BansheeQuery.cs,GetSort,Cyclomatic complexity of the method is 11
Complex Method,Banshee.MediaProfiles,MediaProfileManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\MediaProfileManager.cs,Initialize,Cyclomatic complexity of the method is 8
Complex Method,Banshee.MediaProfiles,Pipeline,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\Pipeline.cs,CompileProcess,Cyclomatic complexity of the method is 8
Complex Method,Banshee.MediaProfiles,PipelineVariable,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\PipelineVariable.cs,PipelineVariable,Cyclomatic complexity of the method is 21
Complex Method,Banshee.Metadata.LastFM,LastFMQueryJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.LastFM\LastFMQueryJob.cs,Run,Cyclomatic complexity of the method is 10
Complex Method,Banshee.Collection.Indexer,CollectionIndexer,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Indexer\CollectionIndexer.cs,SaveToXml,Cyclomatic complexity of the method is 18
Long Parameter List,Banshee.Collection.Database,DatabaseTrackListModel,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,GetRandom,The method has 5 parameters. Parameters: notPlayedSince' shuffle_mode' repeat' resetSinceTime' shuffler
Long Parameter List,Banshee.Collection.Database,DatabaseAlbumInfo,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseAlbumInfo.cs,FindOrCreate,The method has 5 parameters. Parameters: artist' title' title_sort' isCompilation' album_musicrainz_id
Long Parameter List,Banshee.Collection.Database,DatabaseFilterListModel<T;U>,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseFilterListModel.cs,DatabaseFilterListModel,The method has 8 parameters. Parameters: name' label' source' trackModel' connection' provider' selectAllItem' uuid
Long Parameter List,Banshee.Collection.Database,DatabaseQueryFilterModel<T>,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseQueryFilterModel.cs,DatabaseQueryFilterModel,The method has 7 parameters. Parameters: source' trackModel' connection' select_all_fmt' uuid' field' filter_column
Long Parameter List,Banshee.Collection.Database,FilterModelProvider<T>,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\FilterModelProvider.cs,FilterModelProvider,The method has 6 parameters. Parameters: conn' table_name' pk_column' pk_info' value_column' value_info
Long Parameter List,Banshee.Sources,Source,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,CreateSchema,The method has 5 parameters. Parameters: ns' name' defaultValue' shortDescription' longDescription
Long Parameter List,Banshee.Sources,DatabaseSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,DatabaseSource,The method has 5 parameters. Parameters: generic_name' name' id' order' parent
Long Parameter List,Banshee.Sources,PrimarySource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,PrimarySource,The method has 5 parameters. Parameters: generic_name' name' id' order' is_temp
Long Parameter List,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,PlaylistSource,The method has 7 parameters. Parameters: name' dbid' sortColumn' sortType' parent' count' is_temp
Long Parameter List,Banshee.Playlist,AbstractPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\AbstractPlaylistSource.cs,AbstractPlaylistSource,The method has 7 parameters. Parameters: generic_name' name' dbid' sortColumn' sortType' parent' is_temp
Long Parameter List,Banshee.MediaEngine,TranscoderService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\TranscoderService.cs,Enqueue,The method has 5 parameters. Parameters: track' config' handler' cancelledHandler' errorHandler
Long Parameter List,Banshee.MediaEngine,TranscoderService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\TranscoderService.cs,Enqueue,The method has 6 parameters. Parameters: track' out_uri' config' handler' cancelledHandler' errorHandler
Long Parameter List,Banshee.MediaEngine,TranscodeContext,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\TranscoderService.cs,TranscodeContext,The method has 6 parameters. Parameters: track' out_uri' config' handler' cancelledHandler' errorHandler
Long Parameter List,Banshee.Collection,ModelHelper,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\ModelHelper.cs,BuildIdFilter,The method has 5 parameters. Parameters: value' field' oldFilter' singleFilterHandler' filterChangedHandler
Long Parameter List,Banshee.Playlists.Formats,PlaylistFormatDescription,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistFormatDescription.cs,PlaylistFormatDescription,The method has 5 parameters. Parameters: type' magic_handler' name' extension' mimetypes
Long Parameter List,Banshee.Web,BaseHttpServer,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\BaseHttpServer.cs,WriteResponseStream,The method has 5 parameters. Parameters: client' response' length' filename' offset
Long Parameter List,Banshee.SmartPlaylist,Migrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,Migrate,The method has 6 parameters. Parameters: dbid' Name' Condition' OrderBy' LimitNumber' LimitCriterion
Long Parameter List,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,SmartPlaylistSource,The method has 6 parameters. Parameters: name' condition' order' limit' limit_value' parent
Long Parameter List,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,SmartPlaylistSource,The method has 7 parameters. Parameters: name' condition' order' limit' limit_value' hiddenWhenEmpty' parent
Long Parameter List,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,SmartPlaylistSource,The method has 10 parameters. Parameters: dbid' name' condition_xml' order_by' limit_number' limit_criterion' parent' count' is_temp' hiddenWhenEmpty
Long Parameter List,Banshee.SmartPlaylist,SmartPlaylistDefinition,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistDefinition.cs,SmartPlaylistDefinition,The method has 6 parameters. Parameters: name' description' condition' limit_number' limit' order
Long Parameter List,Banshee.SmartPlaylist,SmartPlaylistDefinition,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistDefinition.cs,SmartPlaylistDefinition,The method has 6 parameters. Parameters: name' description' condition' limit_number' limit' order
Long Parameter List,Banshee.SmartPlaylist,SmartPlaylistDefinition,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistDefinition.cs,SmartPlaylistDefinition,The method has 7 parameters. Parameters: name' description' condition' limit_number' limit' order' hiddenWhenEmpty
Long Identifier,Banshee.Collection.Database,DatabaseTrackInfo,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,,The length of the parameter get_track_id_by_uri_primarysources is 34.
Long Identifier,Banshee.Collection.Database,DatabaseTrackInfo,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,,The length of the parameter get_track_count_by_metadata_hash is 32.
Long Identifier,Banshee.Networking,Network,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\Network.cs,,The length of the parameter disable_internet_access_preference is 34.
Long Identifier,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,,The length of the parameter add_track_range_from_joined_model_sql is 37.
Long Identifier,Banshee.MediaEngine,PlayerEngineService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngineService.cs,,The length of the parameter pending_playback_for_not_ready is 30.
Long Identifier,Banshee.MediaEngine,PlayerEngineService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngineService.cs,,The length of the parameter pending_playback_for_not_ready_play is 35.
Long Identifier,Banshee.PlaybackController,PlaybackControllerService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,,The length of the parameter raise_started_after_transition is 30.
Long Identifier,Banshee.Hardware,HardwareManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Hardware\HardwareManager.cs,,The length of the parameter startup_device_command_checked is 30.
Long Statement,Banshee.Database,BansheeDbConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbConnection.cs,ValidateSchema,The length of the statement  "                    a.Except (b).ForEach (c => { is_valid = false; Hyena.Log.ErrorFormat ("Table {0} should contain column {1}"' table' c); }); " is 123.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_5,The length of the statement  "            Execute ("CREATE INDEX IF NOT EXISTS CoreTracksIndex ON CoreTracks(ArtistID' AlbumID' PrimarySourceID' Disc' TrackNumber' Uri)"); " is 129.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_5,The length of the statement  "            Execute ("CREATE INDEX IF NOT EXISTS CoreSmartPlaylistEntriesIndex ON CoreSmartPlaylistEntries(SmartPlaylistID' TrackID)"); " is 123.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_7,The length of the statement  "            try { Execute ("UPDATE CorePrimarySources SET StringID = 'MusicLibrarySource-Library' WHERE StringID = 'Library'"); } catch {} " is 126.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_7,The length of the statement  "            try { Execute ("UPDATE CorePrimarySources SET StringID = 'VideoLibrarySource-VideoLibrary' WHERE StringID = 'VideoLibrary'"); } catch {} " is 136.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_7,The length of the statement  "            try { Execute ("UPDATE CorePrimarySources SET StringID = 'PodcastSource-podcasting' WHERE StringID = 'podcasting'"); } catch {} " is 127.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_21,The length of the statement  "            int id = connection.Query<int> ("SELECT PrimarySourceId FROM CorePrimarySources WHERE StringID = 'PodcastSource-PodcastLibrary'"); " is 130.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_21,The length of the statement  "                connection.Execute ("UPDATE CoreTracks SET Attributes = Attributes | ? WHERE PrimarySourceID = ?"' (int)TrackMediaAttributes.Podcast' id); " is 138.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_31,The length of the statement  "                string library_path = Banshee.Library.LibrarySource.OldLocationSchema.Get (Banshee.Library.MusicLibrarySource.GetDefaultBaseDirectory ()); " is 138.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_31,The length of the statement  "                    int podcast_src_id = connection.Query<int> ("SELECT PrimarySourceID FROM CorePrimarySources WHERE StringID = 'PodcastSource-PodcastLibrary'"); " is 142.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_33,The length of the statement  "                    "UPDATE CoreTracks SET MimeType = 'taglib/{0}' WHERE PrimarySourceId = 1 AND (MimeType IS NULL OR MimeType = '') AND Uri LIKE '%.{0}'"' ext " is 139.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_34,The length of the statement  "            Execute ("CREATE INDEX IF NOT EXISTS CoreSmartPlaylistEntriesIndex ON CoreSmartPlaylistEntries(SmartPlaylistID' TrackID)"); " is 123.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_41,The length of the statement  "            Execute ("CREATE INDEX CoreShuffleModificationsIndex ON CoreShuffleModifications (ShufflerId' TrackID' LastModifiedAt' ModificationType)"); " is 139.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,CreateConfiguration,The length of the statement  "            Execute (String.Format ("INSERT INTO CoreConfiguration (EntryID' Key' Value) VALUES (null' 'DatabaseVersion'' {0})"' CURRENT_VERSION)); " is 135.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,CreateConfiguration,The length of the statement  "                Execute (String.Format ("INSERT INTO CoreConfiguration (EntryID' Key' Value) VALUES (null' 'MetadataVersion'' {0})"' CURRENT_METADATA_VERSION)); " is 144.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,CreateTablesAndIndexes,The length of the statement  "            Execute("CREATE INDEX CoreTracksPrimarySourceIndex ON CoreTracks(ArtistID' AlbumID' PrimarySourceID' Disc' TrackNumber' Uri)"); " is 127.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,CreateTablesAndIndexes,The length of the statement  "            Execute ("CREATE INDEX CoreShuffleModificationsIndex ON CoreShuffleModifications (ShufflerId' TrackID' LastModifiedAt' ModificationType)"); " is 139.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,InitializeOrderedTracks,The length of the statement  "            foreach (long playlist_id in connection.QueryEnumerable<long> ("SELECT PlaylistID FROM CorePlaylists ORDER BY PlaylistID")) { " is 125.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,RefreshMetadataThread,The length of the statement  "            if (ServiceManager.DbConnection.Query<int> ("SELECT count(*) FROM CoreConfiguration WHERE Key = 'MetadataVersion'") == 0) { " is 123.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,RefreshMetadataThread,The length of the statement  "                Execute (String.Format ("INSERT INTO CoreConfiguration (EntryID' Key' Value) VALUES (null' 'MetadataVersion'' {0})"' CURRENT_METADATA_VERSION)); " is 144.
Long Statement,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,RefreshMetadataThread,The length of the statement  "                Execute (String.Format ("UPDATE CoreConfiguration SET Value = {0} WHERE Key = 'MetadataVersion'"' CURRENT_METADATA_VERSION)); " is 125.
Long Statement,Banshee.Collection.Database,DatabaseTrackInfo,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,CopyToLibraryIfAppropriate,The length of the statement  "            bool in_library = old_uri.IsLocalPath ? old_uri.AbsolutePath.StartsWith (PrimarySource.BaseDirectoryWithSeparator) : false; " is 123.
Long Statement,Banshee.Collection.Database,DatabaseTrackInfo,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,CopyToLibraryIfAppropriate,The length of the statement  "                string new_filename = PathPattern != null ? PathPattern.BuildFull (PrimarySource.BaseDirectory' this' Path.GetExtension (old_uri.ToString ())) " is 142.
Long Statement,Banshee.Collection.Database,DatabaseTrackInfo,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,CopyToLibraryIfAppropriate,The length of the statement  "                            Hyena.Log.DebugFormat ("Not copying {0} to library because there is already a file of same size at {1}"' old_uri' new_uri); " is 123.
Long Statement,Banshee.Collection.Database,DatabaseTrackListModel,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,Reload,The length of the statement  "                Log.WarningFormat ("Called Reload on {0} for source {1} but cache is null;  Did you forget to call AfterInitialized () in your DatabaseSource ctor?"' " is 149.
Long Statement,Banshee.Collection.Database,DatabaseAlbumArtistListModel,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseAlbumArtistListModel.cs,ItemToFilterValue,The length of the statement  "            return (item is DatabaseAlbumArtistInfo) ? "SELECT CoreAlbums.AlbumID FROM CoreAlbums WHERE CoreAlbums.ArtistID = " + (item as DatabaseAlbumArtistInfo).DbId.ToString () : null; " is 176.
Long Statement,Banshee.Sources,Source,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,CreateSchema,The length of the statement  "            return new SchemaEntry<T> (String.Format ("sources.{0}"' ParentConfigurationId)' name' defaultValue' shortDescription' longDescription); " is 136.
Long Statement,Banshee.Sources,Source,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,CreateSchema,The length of the statement  "            return new SchemaEntry<T> (String.Format ("sources.{0}.{1}"' ParentConfigurationId' ns)' name' defaultValue' shortDescription' longDescription); " is 144.
Long Statement,Banshee.Sources,DatabaseSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,CreateFiltersFor,The length of the statement  "            DatabaseAlbumArtistListModel albumartist_model = new DatabaseAlbumArtistListModel (src' src.DatabaseTrackModel' ServiceManager.DbConnection' src.UniqueId); " is 155.
Long Statement,Banshee.Sources,DatabaseSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,CreateFiltersFor,The length of the statement  "            DatabaseArtistListModel artist_model = new DatabaseArtistListModel (src' src.DatabaseTrackModel' ServiceManager.DbConnection' src.UniqueId); " is 140.
Long Statement,Banshee.Sources,DatabaseSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,CreateFiltersFor,The length of the statement  "            DatabaseAlbumListModel album_model = new DatabaseAlbumListModel (src' src.DatabaseTrackModel' ServiceManager.DbConnection' src.UniqueId); " is 137.
Long Statement,Banshee.Sources,DatabaseSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,CreateFiltersFor,The length of the statement  "            DatabaseQueryFilterModel<string> genre_model = new DatabaseQueryFilterModel<string> (src' src.DatabaseTrackModel' ServiceManager.DbConnection' " is 142.
Long Statement,Banshee.Sources,DatabaseSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,CreateFiltersFor,The length of the statement  "            DatabaseYearListModel year_model = new DatabaseYearListModel (src' src.DatabaseTrackModel' ServiceManager.DbConnection' src.UniqueId); " is 134.
Long Statement,Banshee.Sources,PrimarySource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,AddSelectedTracks,The length of the statement  "            CachedList<DatabaseTrackInfo> cached_list = CachedList<DatabaseTrackInfo>.CreateFromModelAndSelection (model' selection); " is 121.
Long Statement,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,AddSelectedTracks,The length of the statement  "                //Log.Information ("Note: Feature Not Implemented"' String.Format ("In this alpha release' you can only add tracks to {0} from {1} or its playlists."' Name' Parent.Name)' true); " is 177.
Long Statement,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,ReorderSelectedTracks,The length of the statement  "                ? ServiceManager.DbConnection.Query<long> ("SELECT MAX(ViewOrder) + 1 FROM CorePlaylistEntries WHERE PlaylistID = ?"' DbId) " is 123.
Long Statement,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,ReorderSelectedTracks,The length of the statement  "                : ServiceManager.DbConnection.Query<long> ("SELECT ViewOrder FROM CorePlaylistEntries WHERE PlaylistID = ? AND EntryID = ?"' DbId' Convert.ToInt64 (track.CacheEntryId)); " is 169.
Long Statement,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,ReorderSelectedTracks,The length of the statement  "                ServiceManager.DbConnection.Execute ("UPDATE CorePlaylistEntries SET ViewOrder = ViewOrder + ? WHERE PlaylistID = ? AND ViewOrder >= ?"' " is 136.
Long Statement,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,ReorderSelectedTracks,The length of the statement  "            HyenaSqliteCommand update_command = new HyenaSqliteCommand (String.Format ("UPDATE CorePlaylistEntries SET ViewOrder = ? WHERE PlaylistID = {0} AND EntryID = ?"' DbId)); " is 169.
Long Statement,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,ReorderSelectedTracks,The length of the statement  "            HyenaSqliteCommand select_command = new HyenaSqliteCommand (String.Format ("SELECT ItemID FROM CoreCache WHERE ModelID = {0} LIMIT ?' ?"' DatabaseTrackModel.CacheId)); " is 167.
Long Statement,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,ReorderSelectedTracks,The length of the statement  "                foreach (long entry_id in ServiceManager.DbConnection.QueryEnumerable<long> (select_command' range.Start' range.Count)) { " is 121.
Long Statement,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,AddTrackRange,The length of the statement  "            long first_order_id = ServiceManager.DbConnection.Query<long> ("SELECT OrderID FROM CoreCache WHERE ModelID = ? LIMIT 1 OFFSET ?"' from.CacheId' range.Start); " is 158.
Long Statement,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,AddTrackRange,The length of the statement  "            ServiceManager.DbConnection.Execute (last_add_range_command' DbId' MaxViewOrder - first_order_id' from.CacheId' range.Start' range.Count); " is 138.
Long Statement,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,HandleTracksDeleted,The length of the statement  "                    //ServiceManager.DbConnection.Execute ("DELETE FROM CoreCache WHERE ModelID = ? AND ItemID IN (SELECT EntryID FROM CorePlaylistEntries WHERE PlaylistID = ? AND TrackID IN (TrackID FROM CoreRemovedTracks))"); " is 207.
Long Statement,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,HandleTracksDeleted,The length of the statement  "                    ServiceManager.DbConnection.Execute ("DELETE FROM CorePlaylistEntries WHERE TrackID IN (SELECT TrackID FROM CoreRemovedTracks)"); " is 129.
Long Statement,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,ClearTemporary,The length of the statement  "                    DELETE FROM CorePlaylistEntries WHERE PlaylistID IN (SELECT PlaylistID FROM CorePlaylists WHERE PrimarySourceID = ? AND IsTemporary = 1); " is 137.
Long Statement,Banshee.MediaEngine,PlayerEngine,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngine.cs,HandleOpen,The length of the statement  "            if (current_state != PlayerState.Idle && current_state != PlayerState.NotReady && current_state != PlayerState.Contacting) { " is 124.
Long Statement,Banshee.MediaEngine,PlayerEngine,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngine.cs,VideoExpose,The length of the statement  "            throw new NotImplementedException ("Engine must implement VideoExpose since this method only gets called when SupportsVideo is true"); " is 134.
Long Statement,Banshee.MediaEngine,PlayerEngine,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngine.cs,VideoWindowRealize,The length of the statement  "            throw new NotImplementedException ("Engine must implement VideoWindowRealize since this method only gets called when SupportsVideo is true"); " is 141.
Long Statement,Banshee.Collection,RescanPipeline,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\RescanPipeline.cs,OnFinished,The length of the statement  "            //Hyena.Log.DebugFormat ("Have {0} items before delete"' ServiceManager.DbConnection.Query<int>("select count(*) from coretracks where primarysourceid=?"' psource.DbId)); " is 170.
Long Statement,Banshee.Collection,RescanPipeline,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\RescanPipeline.cs,OnFinished,The length of the statement  "            //Hyena.Log.DebugFormat ("Have {0} items after delete"' ServiceManager.DbConnection.Query<int>("select count(*) from coretracks where primarysourceid=?"' psource.DbId)); " is 169.
Long Statement,Banshee.Playlists.Formats,M3uPlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\M3uPlaylistFormat.cs,MagicHandler,The length of the statement  "            return line == "#EXTM3U" || line.StartsWith("http") || Banshee.Collection.Database.DatabaseImportManager.IsWhiteListedFile (line); " is 130.
Long Statement,Banshee.SmartPlaylist,Migrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The length of the statement  "            int version = ServiceManager.DbConnection.Query<int> ("SELECT Value FROM CoreConfiguration WHERE Key = 'SmartPlaylistVersion'"); " is 128.
Long Statement,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,AddCondition,The length of the statement  "                additional_conditions = additional_conditions == null ? part : String.Format ("{0} AND {1}"' additional_conditions' part); " is 122.
Long Statement,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The length of the statement  "                @"SELECT SmartPlaylistID' Name' Condition' OrderBy' LimitNumber' LimitCriterion' PrimarySourceID' CachedCount' IsTemporary' IsHiddenWhenEmpty " is 141.
Long Statement,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,ClearTemporary,The length of the statement  "                    DELETE FROM CoreSmartPlaylistEntries WHERE SmartPlaylistID IN (SELECT SmartPlaylistID FROM CoreSmartPlaylists WHERE IsTemporary = 1); " is 133.
Long Statement,Banshee.Metadata,SaveTrackMetadataJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata\SaveTrackMetadataJob.cs,RenameFile,The length of the statement  "            string new_filename = track.PathPattern.BuildFull (musicLibrarySource.BaseDirectory' track' System.IO.Path.GetExtension (old_uri.ToString ())); " is 143.
Long Statement,Banshee.Metadata.FileSystem,FileSystemQueryJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.FileSystem\FileSystemQueryJob.cs,Fetch,The length of the statement  "                    SaveAtomically (CoverArtSpec.GetPathForNewFile (Track.ArtworkId' best_file)' Banshee.IO.File.OpenRead (new SafeUri (best_file))); " is 129.
Long Statement,Banshee.PlaybackController,PlaybackControllerService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,QueryTrackRandom,The length of the statement  "                : track_shuffler.GetRandom (source_set_at' shuffle_mode' restart' last_was_skipped' Banshee.Collection.Database.Shuffler.Playback); " is 131.
Long Statement,Banshee.Metadata.LastFM,LastFMQueryJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.LastFM\LastFMQueryJob.cs,Run,The length of the statement  "                //Log.DebugFormat ("No coverart provided by lastfm. (you can upload it here: {0}) - {1} "' upload_url' Track.ArtworkId); " is 120.
Complex Conditional,Banshee.Collection.Database,DatabaseTrackInfo,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,Save,The conditional expression  "ArtistId == 0 || AlbumId == 0 || artist_changed == true || album_changed == true"  is complex.
Complex Conditional,Banshee.Collection.Database,DatabaseTrackInfo,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackInfo.cs,CopyToLibraryIfAppropriate,The conditional expression  "!in_library && ((library_source.HasCopyOnImport && library_source.CopyOnImport) || force_copy)"  is complex.
Complex Conditional,Banshee.MediaEngine,PlayerEngine,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngine.cs,OnTagFound,The conditional expression  "tag.Equals (StreamTag.Zero) || current_track == null                  || (current_track.Uri != null && current_track.Uri.IsFile)"  is complex.
Complex Conditional,Banshee.MediaEngine,PlayerEngineService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngineService.cs,Initialize,The conditional expression  "default_engine == null || active_engine == null || engines == null || engines.Count == 0"  is complex.
Complex Conditional,Banshee.Metadata.FileSystem,FileSystemQueryJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.FileSystem\FileSystemQueryJob.cs,Fetch,The conditional expression  "Track.Uri == null || !Track.Uri.IsFile ||                      Track.ArtworkId == null || !Banshee.IO.File.Exists (Track.Uri)"  is complex.
Complex Conditional,Banshee.Query,BansheeQuery,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Query\BansheeQuery.cs,GetSort,The conditional expression  "field.Equals (ComposerField) ||                       field.Equals (GenreField)    ||                       field.Equals (ComposerField) ||                       field.Equals (ConductorField) ||                       field.Equals (CommentField)"  is complex.
Complex Conditional,Banshee.Query,BansheeQuery,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Query\BansheeQuery.cs,GetSort,The conditional expression  "field.Equals (LastPlayedField)    ||                       field.Equals (LastSkippedField)   ||                       field.Equals (DateAddedField)     ||                       field.Equals (YearField)          ||                       field.Equals (BitRateField)       ||                       field.Equals (SampleRateField)    ||                       field.Equals (BitsPerSampleField) ||                       field.Equals (BpmField)           ||                       field.Equals (TrackCountField)    ||                       field.Equals (DiscCountField)     ||                       field.Equals (DurationField)      ||                       field.Equals (RatingField)        ||                       field.Equals (PlayCountField)     ||                       field.Equals (SkipCountField)     ||                       field.Equals (FileSizeField)      ||                       field.Equals (UriField)           ||                       field.Equals (MimeTypeField)      ||                       field.Equals (LicenseUriField)"  is complex.
Complex Conditional,Banshee.MediaProfiles,PipelineVariable,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\PipelineVariable.cs,PipelineVariable,The conditional expression  "default_value != null && default_value != String.Empty && (current_value == null ||                  current_value == String.Empty)"  is complex.
Complex Conditional,Banshee.Collection.Indexer,CollectionIndexerService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Indexer\CollectionIndexerService.cs,OnLibraryChanged,The conditional expression  "field != Banshee.Query.BansheeQuery.LastPlayedField &&                      field != Banshee.Query.BansheeQuery.LastSkippedField &&                      field != Banshee.Query.BansheeQuery.PlayCountField &&                      field != Banshee.Query.BansheeQuery.SkipCountField"  is complex.
Virtual Method Call from Constructor,Banshee.Sources,DatabaseSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DatabaseSource.cs,DatabaseSource,The constructor "DatabaseSource" calls a virtual method "SetParentSource".
Virtual Method Call from Constructor,Banshee.Playlist,AbstractPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\AbstractPlaylistSource.cs,AbstractPlaylistSource,The constructor "AbstractPlaylistSource" calls a virtual method "SetParentSource".
Virtual Method Call from Constructor,Banshee.Library,LibrarySource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Library\LibrarySource.cs,LibrarySource,The constructor "LibrarySource" calls a virtual method "AfterInitialized".
Virtual Method Call from Constructor,Banshee.Web,HttpRequest,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\HttpRequest.cs,HttpRequest,The constructor "HttpRequest" calls a virtual method "CreateRequest".
Virtual Method Call from Constructor,Banshee.PlaybackController,PlaybackControllerService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,PlaybackControllerService,The constructor "PlaybackControllerService" calls a virtual method "InstantiateStacks".
Empty Catch Block,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_7,The method has an empty catch block.
Empty Catch Block,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_7,The method has an empty catch block.
Empty Catch Block,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_7,The method has an empty catch block.
Empty Catch Block,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_7,The method has an empty catch block.
Empty Catch Block,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,MigrateFromLegacyBanshee,The method has an empty catch block.
Empty Catch Block,Banshee.Networking,Network,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\Network.cs,OnNetworkManagerEvent,The method has an empty catch block.
Empty Catch Block,Banshee.Sources,SourceManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\SourceManager.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Banshee.Sources,PrimarySource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,DeleteTrack,The method has an empty catch block.
Empty Catch Block,Banshee.Sources,PrimarySource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,DeleteTrack,The method has an empty catch block.
Empty Catch Block,Banshee.Playlist,PlaylistFileUtil,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistFileUtil.cs,GetDefaultExportFormat,The method has an empty catch block.
Empty Catch Block,Banshee.Playlist,PlaylistFileUtil,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistFileUtil.cs,SetDefaultExportFormat,The method has an empty catch block.
Empty Catch Block,Banshee.Playlist,PlaylistFileUtil,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistFileUtil.cs,Load,The method has an empty catch block.
Empty Catch Block,Banshee.ServiceStack,ServiceManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\ServiceManager.cs,InitializeAddins,The method has an empty catch block.
Empty Catch Block,Banshee.MediaEngine,TranscoderService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\TranscoderService.cs,TranscoderService,The method has an empty catch block.
Empty Catch Block,Banshee.Playlists.Formats,AsxPlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,Load,The method has an empty catch block.
Empty Catch Block,Banshee.Playlists.Formats,AsxPlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,LoadEntry,The method has an empty catch block.
Empty Catch Block,Banshee.Playlists.Formats,M3uPlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\M3uPlaylistFormat.cs,Load,The method has an empty catch block.
Empty Catch Block,Banshee.Web,BaseHttpServer,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\BaseHttpServer.cs,HandleConnection,The method has an empty catch block.
Empty Catch Block,Banshee.Configuration,DatabaseConfigurationClient,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Configuration\DatabaseConfigurationClient.cs,TryGet,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,MediaProfileManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\MediaProfileManager.cs,LoadPresetVariables,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,Pipeline,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\Pipeline.cs,Pipeline,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,Pipeline,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\Pipeline.cs,Pipeline,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,Pipeline,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\Pipeline.cs,Pipeline,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,PipelineVariable,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\PipelineVariable.cs,PipelineVariable,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,PipelineVariable,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\PipelineVariable.cs,PipelineVariable,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,PipelineVariable,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\PipelineVariable.cs,PipelineVariable,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,PipelineVariable,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\PipelineVariable.cs,ReadValue,The method has an empty catch block.
Empty Catch Block,Banshee.MediaProfiles,PipelineVariable,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\PipelineVariable.cs,ToDouble,The method has an empty catch block.
Magic Number,Banshee.Database,BansheeDbConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbConnection.cs,BansheeDbConnection,The following statement contains a magic number: int cache_size = (TableExists ("CoreTracks") && Query<long> ("SELECT COUNT(*) FROM CoreTracks") > 10000) ? 32768 : 16384;
Magic Number,Banshee.Database,BansheeDbConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbConnection.cs,BansheeDbConnection,The following statement contains a magic number: int cache_size = (TableExists ("CoreTracks") && Query<long> ("SELECT COUNT(*) FROM CoreTracks") > 10000) ? 32768 : 16384;
Magic Number,Banshee.Database,BansheeDbConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbConnection.cs,BansheeDbConnection,The following statement contains a magic number: int cache_size = (TableExists ("CoreTracks") && Query<long> ("SELECT COUNT(*) FROM CoreTracks") > 10000) ? 32768 : 16384;
Magic Number,Banshee.Database,BansheeDbConnection,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbConnection.cs,OptimizeDatabase,The following statement contains a magic number: long analyze_threshold = configuration.Get<long> ("Database"' "AnalyzeThreshold"' 100);
Magic Number,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_1,The following statement contains a magic number: Thread.Sleep (100);
Magic Number,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: sb.Append (reader.Get<string> (2));
Magic Number,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: sb.Append ((int)reader.Get<TimeSpan> (3).TotalSeconds);
Magic Number,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: sb.Append (reader.Get<string> (4));
Magic Number,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: sb.Append (reader.Get<string> (5));
Magic Number,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: sb.Append (reader.Get<int> (6));
Magic Number,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_27,The following statement contains a magic number: sb.Append (reader.Get<int> (7));
Magic Number,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: sb.Append (reader.Get<string> (2));
Magic Number,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: sb.Append (reader.Get<string> (3));
Magic Number,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: sb.Append (reader.Get<string> (4));
Magic Number,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: sb.Append (reader.Get<int> (5));
Magic Number,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,Migrate_39,The following statement contains a magic number: sb.Append (reader.Get<int> (6));
Magic Number,Banshee.Database,BansheeDbFormatMigrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Database\BansheeDbFormatMigrator.cs,RefreshMetadataDelayed,The following statement contains a magic number: Application.RunTimeout (3000' RefreshMetadata);
Magic Number,Banshee.Collection.Database,Bookmark,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\Bookmark.cs,HandleStateChanged,The following statement contains a magic number: System.Threading.Thread.Sleep (5);
Magic Number,Banshee.Collection.Database,Bookmark,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\Bookmark.cs,HandleStateChanged,The following statement contains a magic number: count < 50 && !ServiceManager.PlayerEngine.CanSeek
Magic Number,Banshee.Collection.Database,DatabaseTrackListModel,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,HandleCacheAggregatesUpdated,The following statement contains a magic number: filtered_filesize = reader[2] == null ? 0 : Convert.ToInt64 (reader[2]);
Magic Number,Banshee.Collection.Database,DatabaseTrackListModel,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,HandleCacheAggregatesUpdated,The following statement contains a magic number: filtered_filesize = reader[2] == null ? 0 : Convert.ToInt64 (reader[2]);
Magic Number,Banshee.Collection.Database,DatabaseTrackListModel,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseTrackListModel.cs,UpdateUnfilteredAggregates,The following statement contains a magic number: duration = reader.Get<TimeSpan> (2);
Magic Number,Banshee.Collection.Database,DatabaseImportManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseImportManager.cs,ImportTrack,The following statement contains a magic number: counts[track.PrimarySourceId] >= Math.Max (TotalCount/5' 250)
Magic Number,Banshee.Collection.Database,DatabaseImportManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\DatabaseImportManager.cs,ImportTrack,The following statement contains a magic number: counts[track.PrimarySourceId] >= Math.Max (TotalCount/5' 250)
Magic Number,Banshee.Collection.Database,RandomByScore,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\RandomByScore.cs,GetConditionParameters,The following statement contains a magic number: int min = slot * 100 / Slots + 1;
Magic Number,Banshee.Collection.Database,RandomByScore,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\RandomByScore.cs,GetConditionParameters,The following statement contains a magic number: int max = (slot + 1) * 100 / Slots;
Magic Number,Banshee.Collection.Database,RandomBySlot,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\RandomBySlot.cs,Next,The following statement contains a magic number: int default_slot = (Slots - 1) / 2;
Magic Number,Banshee.Collection.Database,RandomBySlot,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\RandomBySlot.cs,Next,The following statement contains a magic number: const double phi = 1.618033989;
Magic Number,Banshee.Collection.Database,RandomBySlot,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Database\RandomBySlot.cs,Next,The following statement contains a magic number: var weights = Enumerable.Range (0' Slots).Select (i => Math.Pow (phi' i * 5 / (double) Slots)).ToArray ();
Magic Number,Banshee.Networking,NetworkManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following statement contains a magic number: switch ((int) state) {                  case 10: return State.Asleep;                  case 20: return State.Disconnected;                  case 30: return State.Disconnected;                  case 40: return State.Connecting;                  case 50: return State.Connected;                  case 60: return State.Connected;                  case 70: return State.Connected;              }
Magic Number,Banshee.Networking,NetworkManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following statement contains a magic number: switch ((int) state) {                  case 10: return State.Asleep;                  case 20: return State.Disconnected;                  case 30: return State.Disconnected;                  case 40: return State.Connecting;                  case 50: return State.Connected;                  case 60: return State.Connected;                  case 70: return State.Connected;              }
Magic Number,Banshee.Networking,NetworkManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following statement contains a magic number: switch ((int) state) {                  case 10: return State.Asleep;                  case 20: return State.Disconnected;                  case 30: return State.Disconnected;                  case 40: return State.Connecting;                  case 50: return State.Connected;                  case 60: return State.Connected;                  case 70: return State.Connected;              }
Magic Number,Banshee.Networking,NetworkManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following statement contains a magic number: switch ((int) state) {                  case 10: return State.Asleep;                  case 20: return State.Disconnected;                  case 30: return State.Disconnected;                  case 40: return State.Connecting;                  case 50: return State.Connected;                  case 60: return State.Connected;                  case 70: return State.Connected;              }
Magic Number,Banshee.Networking,NetworkManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following statement contains a magic number: switch ((int) state) {                  case 10: return State.Asleep;                  case 20: return State.Disconnected;                  case 30: return State.Disconnected;                  case 40: return State.Connecting;                  case 50: return State.Connected;                  case 60: return State.Connected;                  case 70: return State.Connected;              }
Magic Number,Banshee.Networking,NetworkManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following statement contains a magic number: switch ((int) state) {                  case 10: return State.Asleep;                  case 20: return State.Disconnected;                  case 30: return State.Disconnected;                  case 40: return State.Connecting;                  case 50: return State.Connected;                  case 60: return State.Connected;                  case 70: return State.Connected;              }
Magic Number,Banshee.Networking,NetworkManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following statement contains a magic number: switch ((int) state) {                  case 10: return State.Asleep;                  case 20: return State.Disconnected;                  case 30: return State.Disconnected;                  case 40: return State.Connecting;                  case 50: return State.Connected;                  case 60: return State.Connected;                  case 70: return State.Connected;              }
Magic Number,Banshee.Sources,Source,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {                  if (count++ > 5) {                      if (count == 7) {                          RemoveMessage (message_3);                      }                      PopMessage ();                      return true;                  } else if (count > 10) {                      return false;                  }                    SourceMessage message = new SourceMessage (this);                  message.FreezeNotify ();                  message.Text = String.Format ("Testing message {0}"' count);                  message.IsSpinning = count % 2 == 0;                  message.CanClose = count % 2 == 1;                  if (count % 3 == 0) {                      for (int i = 2; i < count; i++) {                          message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));                      }                  }                    message.ThawNotify ();                  PushMessage (message);                    if (count == 3) {                      message_3 = message;                  }                    return true;              });
Magic Number,Banshee.Sources,Source,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {                  if (count++ > 5) {                      if (count == 7) {                          RemoveMessage (message_3);                      }                      PopMessage ();                      return true;                  } else if (count > 10) {                      return false;                  }                    SourceMessage message = new SourceMessage (this);                  message.FreezeNotify ();                  message.Text = String.Format ("Testing message {0}"' count);                  message.IsSpinning = count % 2 == 0;                  message.CanClose = count % 2 == 1;                  if (count % 3 == 0) {                      for (int i = 2; i < count; i++) {                          message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));                      }                  }                    message.ThawNotify ();                  PushMessage (message);                    if (count == 3) {                      message_3 = message;                  }                    return true;              });
Magic Number,Banshee.Sources,Source,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {                  if (count++ > 5) {                      if (count == 7) {                          RemoveMessage (message_3);                      }                      PopMessage ();                      return true;                  } else if (count > 10) {                      return false;                  }                    SourceMessage message = new SourceMessage (this);                  message.FreezeNotify ();                  message.Text = String.Format ("Testing message {0}"' count);                  message.IsSpinning = count % 2 == 0;                  message.CanClose = count % 2 == 1;                  if (count % 3 == 0) {                      for (int i = 2; i < count; i++) {                          message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));                      }                  }                    message.ThawNotify ();                  PushMessage (message);                    if (count == 3) {                      message_3 = message;                  }                    return true;              });
Magic Number,Banshee.Sources,Source,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {                  if (count++ > 5) {                      if (count == 7) {                          RemoveMessage (message_3);                      }                      PopMessage ();                      return true;                  } else if (count > 10) {                      return false;                  }                    SourceMessage message = new SourceMessage (this);                  message.FreezeNotify ();                  message.Text = String.Format ("Testing message {0}"' count);                  message.IsSpinning = count % 2 == 0;                  message.CanClose = count % 2 == 1;                  if (count % 3 == 0) {                      for (int i = 2; i < count; i++) {                          message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));                      }                  }                    message.ThawNotify ();                  PushMessage (message);                    if (count == 3) {                      message_3 = message;                  }                    return true;              });
Magic Number,Banshee.Sources,Source,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {                  if (count++ > 5) {                      if (count == 7) {                          RemoveMessage (message_3);                      }                      PopMessage ();                      return true;                  } else if (count > 10) {                      return false;                  }                    SourceMessage message = new SourceMessage (this);                  message.FreezeNotify ();                  message.Text = String.Format ("Testing message {0}"' count);                  message.IsSpinning = count % 2 == 0;                  message.CanClose = count % 2 == 1;                  if (count % 3 == 0) {                      for (int i = 2; i < count; i++) {                          message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));                      }                  }                    message.ThawNotify ();                  PushMessage (message);                    if (count == 3) {                      message_3 = message;                  }                    return true;              });
Magic Number,Banshee.Sources,Source,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {                  if (count++ > 5) {                      if (count == 7) {                          RemoveMessage (message_3);                      }                      PopMessage ();                      return true;                  } else if (count > 10) {                      return false;                  }                    SourceMessage message = new SourceMessage (this);                  message.FreezeNotify ();                  message.Text = String.Format ("Testing message {0}"' count);                  message.IsSpinning = count % 2 == 0;                  message.CanClose = count % 2 == 1;                  if (count % 3 == 0) {                      for (int i = 2; i < count; i++) {                          message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));                      }                  }                    message.ThawNotify ();                  PushMessage (message);                    if (count == 3) {                      message_3 = message;                  }                    return true;              });
Magic Number,Banshee.Sources,Source,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {                  if (count++ > 5) {                      if (count == 7) {                          RemoveMessage (message_3);                      }                      PopMessage ();                      return true;                  } else if (count > 10) {                      return false;                  }                    SourceMessage message = new SourceMessage (this);                  message.FreezeNotify ();                  message.Text = String.Format ("Testing message {0}"' count);                  message.IsSpinning = count % 2 == 0;                  message.CanClose = count % 2 == 1;                  if (count % 3 == 0) {                      for (int i = 2; i < count; i++) {                          message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));                      }                  }                    message.ThawNotify ();                  PushMessage (message);                    if (count == 3) {                      message_3 = message;                  }                    return true;              });
Magic Number,Banshee.Sources,Source,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {                  if (count++ > 5) {                      if (count == 7) {                          RemoveMessage (message_3);                      }                      PopMessage ();                      return true;                  } else if (count > 10) {                      return false;                  }                    SourceMessage message = new SourceMessage (this);                  message.FreezeNotify ();                  message.Text = String.Format ("Testing message {0}"' count);                  message.IsSpinning = count % 2 == 0;                  message.CanClose = count % 2 == 1;                  if (count % 3 == 0) {                      for (int i = 2; i < count; i++) {                          message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));                      }                  }                    message.ThawNotify ();                  PushMessage (message);                    if (count == 3) {                      message_3 = message;                  }                    return true;              });
Magic Number,Banshee.Sources,Source,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\Source.cs,TestMessages,The following statement contains a magic number: Application.RunTimeout (5000' delegate {                  if (count++ > 5) {                      if (count == 7) {                          RemoveMessage (message_3);                      }                      PopMessage ();                      return true;                  } else if (count > 10) {                      return false;                  }                    SourceMessage message = new SourceMessage (this);                  message.FreezeNotify ();                  message.Text = String.Format ("Testing message {0}"' count);                  message.IsSpinning = count % 2 == 0;                  message.CanClose = count % 2 == 1;                  if (count % 3 == 0) {                      for (int i = 2; i < count; i++) {                          message.AddAction (new MessageAction (String.Format ("Button {0}"' i)));                      }                  }                    message.ThawNotify ();                  PushMessage (message);                    if (count == 3) {                      message_3 = message;                  }                    return true;              });
Magic Number,Banshee.Sources,SourceManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\SourceManager.cs,Initialize,The following statement contains a magic number: group_sources.Add (new GroupSource (Catalog.GetString ("Online Media")' 60));
Magic Number,Banshee.Sources,SourceManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\SourceManager.cs,Initialize,The following statement contains a magic number: group_sources.Add (new GroupSource (Catalog.GetString ("Libraries")' 39));
Magic Number,Banshee.Sources,PrimarySource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,SetFileNamePattern,The following statement contains a magic number: var file_system = PreferencesPage.FindOrAdd (new Section ("file-system"' Catalog.GetString ("File Organization")' 5));
Magic Number,Banshee.Sources,PrimarySource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,OnTracksChanged,The following statement contains a magic number: ThreadAssist.SpawnFromMain (delegate {                  if (NeedsReloadWhenFieldsChanged (fields)) {                      Reload ();                  } else {                      InvalidateCaches ();                  }                    System.Threading.Thread.Sleep (150);                    TrackEventHandler handler = TracksChanged;                  if (handler != null) {                      handler (this' new TrackEventArgs (fields));                  }              });
Magic Number,Banshee.Sources,PrimarySource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\PrimarySource.cs,DeleteTrackList,The following statement contains a magic number: DeleteTrackJob.Completed % 10 == 0 && !DeleteTrackJob.IsFinished
Magic Number,Banshee.Sources,DurationStatusFormatters,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Sources\DurationStatusFormatters.cs,AwesomeConciseFormatter,The following statement contains a magic number: double days = span.Days + (span.Hours / 24.0);
Magic Number,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: yield return new PlaylistSource (                          reader.Get<string> (1)' reader.Get<long> (0)'                          reader.Get<int> (2)' reader.Get<int> (3)' parent'                          reader.Get<int> (5)' reader.Get<bool> (6)                      );
Magic Number,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: yield return new PlaylistSource (                          reader.Get<string> (1)' reader.Get<long> (0)'                          reader.Get<int> (2)' reader.Get<int> (3)' parent'                          reader.Get<int> (5)' reader.Get<bool> (6)                      );
Magic Number,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: yield return new PlaylistSource (                          reader.Get<string> (1)' reader.Get<long> (0)'                          reader.Get<int> (2)' reader.Get<int> (3)' parent'                          reader.Get<int> (5)' reader.Get<bool> (6)                      );
Magic Number,Banshee.Playlist,PlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlist\PlaylistSource.cs,LoadAll,The following statement contains a magic number: yield return new PlaylistSource (                          reader.Get<string> (1)' reader.Get<long> (0)'                          reader.Get<int> (2)' reader.Get<int> (3)' parent'                          reader.Get<int> (5)' reader.Get<bool> (6)                      );
Magic Number,Banshee.Library,LibrarySource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Library\LibrarySource.cs,LibrarySource,The following statement contains a magic number: Section library_section = PreferencesPage.Add (new Section ("library-location"' SectionName' 2));
Magic Number,Banshee.Library,LibrarySource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Library\LibrarySource.cs,LibrarySource,The following statement contains a magic number: var file_system = PreferencesPage.FindOrAdd (                      new Section ("file-system"' Catalog.GetString ("File Organization")' 5));
Magic Number,Banshee.Library,MusicLibrarySource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Library\MusicLibrarySource.cs,MusicLibrarySource,The following statement contains a magic number: Section misc = PreferencesPage.Add (new Section ("misc"'                  Catalog.GetString ("Miscellaneous")' 10));
Magic Number,Banshee.ServiceStack,ServiceManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\ServiceManager.cs,Run,The following statement contains a magic number: System.Net.ServicePointManager.DefaultConnectionLimit = 6;
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,TestUserJob,The following statement contains a magic number: initial_timeout_id = Application.RunTimeout (7500' delegate {                  Title = "New Title for Test Job";                    main_timeout_id = Application.RunTimeout (50' delegate {                      Progress += 0.001;                        if (Progress >= 0.45 && Progress <= 0.55) {                          Status = null;                      } else {                          Status = String.Format ("I am {0:0.0}% complete"' Progress * 100.0);                      }                        if (Progress >= 0.65 && Progress <= 0.75) {                          Title = null;                      } else if (Title == null) {                          Title = "The final Title";                      }                        if (Progress >= 0.25 && Progress <= 0.35 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (100' delegate {                              icon_index = (icon_index + 1) % icon_names_go.Length;                              IconNames = new string [] { icon_names_go [icon_index] };                              if (Progress <= 0.35) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        if (Progress >= 0.45 && Progress <= 0.70 && icon_timeout_id == 0) {                          icon_timeout_id = Application.RunTimeout (250' delegate {                              icon_index = rand.Next (0' icon_names_rand.Length - 1);                              IconNames = new string [] { icon_names_rand[icon_index] };                              if (Progress <= 0.65) {                                  return true;                              }                              icon_timeout_id = 0;                              return false;                          });                      }                        CanCancel = (Progress >= 0.15 && Progress <= 0.30) || (Progress >= 0.65 && Progress <= 0.85);                        if (Progress == 1.0) {                          Progress = 0.0;                          Title = "Bouncing";                          Status = "I'm going to bounce now...";                          final_timeout_id = Application.RunTimeout (8000' delegate {                              Finish ();                              return false;                          });                            return false;                      }                        return true;                  });                    return false;              });
Magic Number,Banshee.ServiceStack,TestUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\TestUserJob.cs,SpawnLikeFish,The following statement contains a magic number: Application.RunTimeout (2000' delegate {                  new TestUserJob ();                  return ++i < count;              });
Magic Number,Banshee.ServiceStack,BatchUserJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\BatchUserJob.cs,UpdateProgress,The following statement contains a magic number: Progress = Math.Max (0.00001' ((double)Completed / (double)Total) + (DetailedProgress / (double) Total));
Magic Number,Banshee.ServiceStack,JobScheduler,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.ServiceStack\JobScheduler.cs,OnClientStarted,The following statement contains a magic number: Application.RunTimeout (1000' delegate {                  startup_job.Finish ();                  return false;              });
Magic Number,Banshee.MediaEngine,PlayerEngine,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaEngine\PlayerEngine.cs,OnTagFound,The following statement contains a magic number: track_info_updated_timeout = Application.RunTimeout (250' OnTrackInfoUpdated);
Magic Number,Banshee.Collection,ImportManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\ImportManager.cs,UpdateProgress,The following statement contains a magic number: new_progress >= 0.0 && new_progress <= 1.0 && Math.Abs (new_progress - old_progress) > 0.001
Magic Number,Banshee.Collection,ImportManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection\ImportManager.cs,UpdateScannerProgress,The following statement contains a magic number: DateTime.Now - last_enqueue_display > TimeSpan.FromMilliseconds (400)
Magic Number,Banshee.Playlists.Formats,AsxPlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,LoadEntry,The following statement contains a magic number: switch (xml_reader.LocalName.ToLower ()) {                      case "title":                          xml_reader.Read ();                          element.Title = xml_reader.Value;                          break;                        case "ref":                          // asf links say they are http' but are mmsh instead                          string uri_aux = xml_reader["HREF"] ?? xml_reader["href"];                          if (uri_aux.StartsWith ("http"' StringComparison.CurrentCultureIgnoreCase)) {                              uri_aux = "mmsh" + uri_aux.Substring (4);                          }                            element.Uri = ResolveUri (uri_aux);                          break;                        case "duration":                          try {                              xml_reader.Read ();                              element.Duration = TimeSpan.Parse (xml_reader.Value);                          } catch {                          }                          break;                  }
Magic Number,Banshee.Playlists.Formats,M3uPlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\M3uPlaylistFormat.cs,ParseExtended,The following statement contains a magic number: string split = line.Substring(8).TrimStart(''');
Magic Number,Banshee.Playlists.Formats,M3uPlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\M3uPlaylistFormat.cs,ParseExtended,The following statement contains a magic number: string [] parts = split.Split(new char [] { ''' }' 2);
Magic Number,Banshee.Playlists.Formats,M3uPlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\M3uPlaylistFormat.cs,ParseExtended,The following statement contains a magic number: parts.Length == 2
Magic Number,Banshee.Playlists.Formats,PlaylistParser,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Download,The following statement contains a magic number: request.Timeout = 5 * 1000;
Magic Number,Banshee.Playlists.Formats,PlaylistParser,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlaylistParser.cs,Download,The following statement contains a magic number: request.Timeout = 5 * 1000;
Magic Number,Banshee.Playlists.Formats,PlsPlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following statement contains a magic number: index_offset = 4;
Magic Number,Banshee.Playlists.Formats,AsfReferencePlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsfReferencePlaylistFormat.cs,Load,The following statement contains a magic number: uri_aux = "mmsh" + uri_aux.Substring (4);
Magic Number,Banshee.Web,BaseHttpServer,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\BaseHttpServer.cs,Start,The following statement contains a magic number: Start (10);
Magic Number,Banshee.Web,BaseHttpServer,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Web\BaseHttpServer.cs,HandleRequest,The following statement contains a magic number: split_request_line.Length < 3
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Classical")' 0' new [] {                  0' 0' 0' 0' 0' 0' -7.2' -7.2' -7.2' -9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Classical")' 0' new [] {                  0' 0' 0' 0' 0' 0' -7.2' -7.2' -7.2' -9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Classical")' 0' new [] {                  0' 0' 0' 0' 0' 0' -7.2' -7.2' -7.2' -9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Classical")' 0' new [] {                  0' 0' 0' 0' 0' 0' -7.2' -7.2' -7.2' -9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Club")' 0' new [] {                  0' 0' 8' 5.6' 5.6' 5.6' 3.2' 0' 0' 0              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Club")' 0' new [] {                  0' 0' 8' 5.6' 5.6' 5.6' 3.2' 0' 0' 0              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Club")' 0' new [] {                  0' 0' 8' 5.6' 5.6' 5.6' 3.2' 0' 0' 0              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Club")' 0' new [] {                  0' 0' 8' 5.6' 5.6' 5.6' 3.2' 0' 0' 0              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Club")' 0' new [] {                  0' 0' 8' 5.6' 5.6' 5.6' 3.2' 0' 0' 0              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new [] {                  9.6' 7.2' 2.4' -1.1' -1.1' -5.6' -7.2' -7.2' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new [] {                  9.6' 7.2' 2.4' -1.1' -1.1' -5.6' -7.2' -7.2' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new [] {                  9.6' 7.2' 2.4' -1.1' -1.1' -5.6' -7.2' -7.2' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new [] {                  9.6' 7.2' 2.4' -1.1' -1.1' -5.6' -7.2' -7.2' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new [] {                  9.6' 7.2' 2.4' -1.1' -1.1' -5.6' -7.2' -7.2' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new [] {                  9.6' 7.2' 2.4' -1.1' -1.1' -5.6' -7.2' -7.2' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new [] {                  9.6' 7.2' 2.4' -1.1' -1.1' -5.6' -7.2' -7.2' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new [] {                  9.6' 7.2' 2.4' -1.1' -1.1' -5.6' -7.2' -7.2' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new [] {                  9.6' 7.2' 2.4' -1.1' -1.1' -5.6' -7.2' -7.2' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new [] {                  9.6' 7.2' 2.4' -1.1' -1.1' -5.6' -7.2' -7.2' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Dance")' -1.1' new [] {                  9.6' 7.2' 2.4' -1.1' -1.1' -5.6' -7.2' -7.2' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new [] {                  -8' 9.6' 9.6' 5.6' 1.6' -4' -8' -10.4' -11.2' -11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new [] {                  -8' 9.6' 9.6' 5.6' 1.6' -4' -8' -10.4' -11.2' -11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new [] {                  -8' 9.6' 9.6' 5.6' 1.6' -4' -8' -10.4' -11.2' -11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new [] {                  -8' 9.6' 9.6' 5.6' 1.6' -4' -8' -10.4' -11.2' -11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new [] {                  -8' 9.6' 9.6' 5.6' 1.6' -4' -8' -10.4' -11.2' -11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new [] {                  -8' 9.6' 9.6' 5.6' 1.6' -4' -8' -10.4' -11.2' -11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new [] {                  -8' 9.6' 9.6' 5.6' 1.6' -4' -8' -10.4' -11.2' -11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new [] {                  -8' 9.6' 9.6' 5.6' 1.6' -4' -8' -10.4' -11.2' -11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new [] {                  -8' 9.6' 9.6' 5.6' 1.6' -4' -8' -10.4' -11.2' -11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new [] {                  -8' 9.6' 9.6' 5.6' 1.6' -4' -8' -10.4' -11.2' -11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass")' -1.1' new [] {                  -8' 9.6' 9.6' 5.6' 1.6' -4' -8' -10.4' -11.2' -11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new [] {                  7.2' 5.6' -1.1' -7.2' -4.8' 1.6' 8' 11.2' 12' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new [] {                  7.2' 5.6' -1.1' -7.2' -4.8' 1.6' 8' 11.2' 12' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new [] {                  7.2' 5.6' -1.1' -7.2' -4.8' 1.6' 8' 11.2' 12' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new [] {                  7.2' 5.6' -1.1' -7.2' -4.8' 1.6' 8' 11.2' 12' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new [] {                  7.2' 5.6' -1.1' -7.2' -4.8' 1.6' 8' 11.2' 12' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new [] {                  7.2' 5.6' -1.1' -7.2' -4.8' 1.6' 8' 11.2' 12' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new [] {                  7.2' 5.6' -1.1' -7.2' -4.8' 1.6' 8' 11.2' 12' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new [] {                  7.2' 5.6' -1.1' -7.2' -4.8' 1.6' 8' 11.2' 12' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new [] {                  7.2' 5.6' -1.1' -7.2' -4.8' 1.6' 8' 11.2' 12' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new [] {                  7.2' 5.6' -1.1' -7.2' -4.8' 1.6' 8' 11.2' 12' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Bass and Treble")' -1.1' new [] {                  7.2' 5.6' -1.1' -7.2' -4.8' 1.6' 8' 11.2' 12' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new [] {                  -9.6' -9.6' -9.6' -4' 2.4' 11.2' 11.5' 11.8' 11.8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new [] {                  -9.6' -9.6' -9.6' -4' 2.4' 11.2' 11.5' 11.8' 11.8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new [] {                  -9.6' -9.6' -9.6' -4' 2.4' 11.2' 11.5' 11.8' 11.8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new [] {                  -9.6' -9.6' -9.6' -4' 2.4' 11.2' 11.5' 11.8' 11.8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new [] {                  -9.6' -9.6' -9.6' -4' 2.4' 11.2' 11.5' 11.8' 11.8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new [] {                  -9.6' -9.6' -9.6' -4' 2.4' 11.2' 11.5' 11.8' 11.8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new [] {                  -9.6' -9.6' -9.6' -4' 2.4' 11.2' 11.5' 11.8' 11.8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new [] {                  -9.6' -9.6' -9.6' -4' 2.4' 11.2' 11.5' 11.8' 11.8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new [] {                  -9.6' -9.6' -9.6' -4' 2.4' 11.2' 11.5' 11.8' 11.8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new [] {                  -9.6' -9.6' -9.6' -4' 2.4' 11.2' 11.5' 11.8' 11.8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Full Treble")' -1.1' new [] {                  -9.6' -9.6' -9.6' -4' 2.4' 11.2' 11.5' 11.8' 11.8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new [] {                  4.8' 11.2' 5.6' -3.2' -2.4' 1.6' 4.8' 9.6' 11.9' 11.9              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new [] {                  4.8' 11.2' 5.6' -3.2' -2.4' 1.6' 4.8' 9.6' 11.9' 11.9              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new [] {                  4.8' 11.2' 5.6' -3.2' -2.4' 1.6' 4.8' 9.6' 11.9' 11.9              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new [] {                  4.8' 11.2' 5.6' -3.2' -2.4' 1.6' 4.8' 9.6' 11.9' 11.9              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new [] {                  4.8' 11.2' 5.6' -3.2' -2.4' 1.6' 4.8' 9.6' 11.9' 11.9              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new [] {                  4.8' 11.2' 5.6' -3.2' -2.4' 1.6' 4.8' 9.6' 11.9' 11.9              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new [] {                  4.8' 11.2' 5.6' -3.2' -2.4' 1.6' 4.8' 9.6' 11.9' 11.9              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new [] {                  4.8' 11.2' 5.6' -3.2' -2.4' 1.6' 4.8' 9.6' 11.9' 11.9              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new [] {                  4.8' 11.2' 5.6' -3.2' -2.4' 1.6' 4.8' 9.6' 11.9' 11.9              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new [] {                  4.8' 11.2' 5.6' -3.2' -2.4' 1.6' 4.8' 9.6' 11.9' 11.9              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Laptop Speakers and Headphones")' -1.1' new [] {                  4.8' 11.2' 5.6' -3.2' -2.4' 1.6' 4.8' 9.6' 11.9' 11.9              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new [] {                  10.4' 10.4' 5.6' 5.6' -1.1' -4.8' -4.8' -4.8' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new [] {                  10.4' 10.4' 5.6' 5.6' -1.1' -4.8' -4.8' -4.8' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new [] {                  10.4' 10.4' 5.6' 5.6' -1.1' -4.8' -4.8' -4.8' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new [] {                  10.4' 10.4' 5.6' 5.6' -1.1' -4.8' -4.8' -4.8' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new [] {                  10.4' 10.4' 5.6' 5.6' -1.1' -4.8' -4.8' -4.8' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new [] {                  10.4' 10.4' 5.6' 5.6' -1.1' -4.8' -4.8' -4.8' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new [] {                  10.4' 10.4' 5.6' 5.6' -1.1' -4.8' -4.8' -4.8' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new [] {                  10.4' 10.4' 5.6' 5.6' -1.1' -4.8' -4.8' -4.8' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new [] {                  10.4' 10.4' 5.6' 5.6' -1.1' -4.8' -4.8' -4.8' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new [] {                  10.4' 10.4' 5.6' 5.6' -1.1' -4.8' -4.8' -4.8' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Large Hall")' -1.1' new [] {                  10.4' 10.4' 5.6' 5.6' -1.1' -4.8' -4.8' -4.8' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new [] {                  -4.8' -1.1' 4' 5.6' 5.6' 5.6' 4' 2.4' 2.4' 2.4              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new [] {                  -4.8' -1.1' 4' 5.6' 5.6' 5.6' 4' 2.4' 2.4' 2.4              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new [] {                  -4.8' -1.1' 4' 5.6' 5.6' 5.6' 4' 2.4' 2.4' 2.4              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new [] {                  -4.8' -1.1' 4' 5.6' 5.6' 5.6' 4' 2.4' 2.4' 2.4              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new [] {                  -4.8' -1.1' 4' 5.6' 5.6' 5.6' 4' 2.4' 2.4' 2.4              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new [] {                  -4.8' -1.1' 4' 5.6' 5.6' 5.6' 4' 2.4' 2.4' 2.4              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new [] {                  -4.8' -1.1' 4' 5.6' 5.6' 5.6' 4' 2.4' 2.4' 2.4              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new [] {                  -4.8' -1.1' 4' 5.6' 5.6' 5.6' 4' 2.4' 2.4' 2.4              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new [] {                  -4.8' -1.1' 4' 5.6' 5.6' 5.6' 4' 2.4' 2.4' 2.4              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new [] {                  -4.8' -1.1' 4' 5.6' 5.6' 5.6' 4' 2.4' 2.4' 2.4              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Live")' -1.1' new [] {                  -4.8' -1.1' 4' 5.6' 5.6' 5.6' 4' 2.4' 2.4' 2.4              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new [] {                  7.2' 7.2' -1.1' -1.1' -1.1' -1.1' -1.1' -1.1' 7.2' 7.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new [] {                  7.2' 7.2' -1.1' -1.1' -1.1' -1.1' -1.1' -1.1' 7.2' 7.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new [] {                  7.2' 7.2' -1.1' -1.1' -1.1' -1.1' -1.1' -1.1' 7.2' 7.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new [] {                  7.2' 7.2' -1.1' -1.1' -1.1' -1.1' -1.1' -1.1' 7.2' 7.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new [] {                  7.2' 7.2' -1.1' -1.1' -1.1' -1.1' -1.1' -1.1' 7.2' 7.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new [] {                  7.2' 7.2' -1.1' -1.1' -1.1' -1.1' -1.1' -1.1' 7.2' 7.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new [] {                  7.2' 7.2' -1.1' -1.1' -1.1' -1.1' -1.1' -1.1' 7.2' 7.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new [] {                  7.2' 7.2' -1.1' -1.1' -1.1' -1.1' -1.1' -1.1' 7.2' 7.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new [] {                  7.2' 7.2' -1.1' -1.1' -1.1' -1.1' -1.1' -1.1' 7.2' 7.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new [] {                  7.2' 7.2' -1.1' -1.1' -1.1' -1.1' -1.1' -1.1' 7.2' 7.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Party")' -1.1' new [] {                  7.2' 7.2' -1.1' -1.1' -1.1' -1.1' -1.1' -1.1' 7.2' 7.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new [] {                  -1.6' 4.8' 7.2' 8' 5.6' -1.1' -2.4' -2.4' -1.6' -1.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new [] {                  -1.6' 4.8' 7.2' 8' 5.6' -1.1' -2.4' -2.4' -1.6' -1.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new [] {                  -1.6' 4.8' 7.2' 8' 5.6' -1.1' -2.4' -2.4' -1.6' -1.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new [] {                  -1.6' 4.8' 7.2' 8' 5.6' -1.1' -2.4' -2.4' -1.6' -1.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new [] {                  -1.6' 4.8' 7.2' 8' 5.6' -1.1' -2.4' -2.4' -1.6' -1.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new [] {                  -1.6' 4.8' 7.2' 8' 5.6' -1.1' -2.4' -2.4' -1.6' -1.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new [] {                  -1.6' 4.8' 7.2' 8' 5.6' -1.1' -2.4' -2.4' -1.6' -1.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new [] {                  -1.6' 4.8' 7.2' 8' 5.6' -1.1' -2.4' -2.4' -1.6' -1.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new [] {                  -1.6' 4.8' 7.2' 8' 5.6' -1.1' -2.4' -2.4' -1.6' -1.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new [] {                  -1.6' 4.8' 7.2' 8' 5.6' -1.1' -2.4' -2.4' -1.6' -1.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Pop")' -1.1' new [] {                  -1.6' 4.8' 7.2' 8' 5.6' -1.1' -2.4' -2.4' -1.6' -1.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new [] {                  -1.1' -1.1' -1.1' -5.6' -1.1' 6.4' 6.4' -1.1' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new [] {                  -1.1' -1.1' -1.1' -5.6' -1.1' 6.4' 6.4' -1.1' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new [] {                  -1.1' -1.1' -1.1' -5.6' -1.1' 6.4' 6.4' -1.1' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new [] {                  -1.1' -1.1' -1.1' -5.6' -1.1' 6.4' 6.4' -1.1' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new [] {                  -1.1' -1.1' -1.1' -5.6' -1.1' 6.4' 6.4' -1.1' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new [] {                  -1.1' -1.1' -1.1' -5.6' -1.1' 6.4' 6.4' -1.1' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new [] {                  -1.1' -1.1' -1.1' -5.6' -1.1' 6.4' 6.4' -1.1' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new [] {                  -1.1' -1.1' -1.1' -5.6' -1.1' 6.4' 6.4' -1.1' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new [] {                  -1.1' -1.1' -1.1' -5.6' -1.1' 6.4' 6.4' -1.1' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new [] {                  -1.1' -1.1' -1.1' -5.6' -1.1' 6.4' 6.4' -1.1' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Reggae")' -1.1' new [] {                  -1.1' -1.1' -1.1' -5.6' -1.1' 6.4' 6.4' -1.1' -1.1' -1.1              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new [] {                  8' 4.8' -5.6' -8' -3.2' 4' 8.8' 11.2' 11.2' 11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new [] {                  8' 4.8' -5.6' -8' -3.2' 4' 8.8' 11.2' 11.2' 11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new [] {                  8' 4.8' -5.6' -8' -3.2' 4' 8.8' 11.2' 11.2' 11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new [] {                  8' 4.8' -5.6' -8' -3.2' 4' 8.8' 11.2' 11.2' 11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new [] {                  8' 4.8' -5.6' -8' -3.2' 4' 8.8' 11.2' 11.2' 11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new [] {                  8' 4.8' -5.6' -8' -3.2' 4' 8.8' 11.2' 11.2' 11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new [] {                  8' 4.8' -5.6' -8' -3.2' 4' 8.8' 11.2' 11.2' 11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new [] {                  8' 4.8' -5.6' -8' -3.2' 4' 8.8' 11.2' 11.2' 11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new [] {                  8' 4.8' -5.6' -8' -3.2' 4' 8.8' 11.2' 11.2' 11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new [] {                  8' 4.8' -5.6' -8' -3.2' 4' 8.8' 11.2' 11.2' 11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Rock")' -1.1' new [] {                  8' 4.8' -5.6' -8' -3.2' 4' 8.8' 11.2' 11.2' 11.2              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new [] {                  -2.4' -4.8' -4' -1.1' 4' 5.6' 8.8' 9.6' 11.2' 9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new [] {                  -2.4' -4.8' -4' -1.1' 4' 5.6' 8.8' 9.6' 11.2' 9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new [] {                  -2.4' -4.8' -4' -1.1' 4' 5.6' 8.8' 9.6' 11.2' 9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new [] {                  -2.4' -4.8' -4' -1.1' 4' 5.6' 8.8' 9.6' 11.2' 9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new [] {                  -2.4' -4.8' -4' -1.1' 4' 5.6' 8.8' 9.6' 11.2' 9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new [] {                  -2.4' -4.8' -4' -1.1' 4' 5.6' 8.8' 9.6' 11.2' 9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new [] {                  -2.4' -4.8' -4' -1.1' 4' 5.6' 8.8' 9.6' 11.2' 9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new [] {                  -2.4' -4.8' -4' -1.1' 4' 5.6' 8.8' 9.6' 11.2' 9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new [] {                  -2.4' -4.8' -4' -1.1' 4' 5.6' 8.8' 9.6' 11.2' 9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new [] {                  -2.4' -4.8' -4' -1.1' 4' 5.6' 8.8' 9.6' 11.2' 9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Ska")' -1.1' new [] {                  -2.4' -4.8' -4' -1.1' 4' 5.6' 8.8' 9.6' 11.2' 9.6              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new [] {                  12' 8' 6' 3' 0.0' 0.0' 3' 6' 8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new [] {                  12' 8' 6' 3' 0.0' 0.0' 3' 6' 8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new [] {                  12' 8' 6' 3' 0.0' 0.0' 3' 6' 8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new [] {                  12' 8' 6' 3' 0.0' 0.0' 3' 6' 8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new [] {                  12' 8' 6' 3' 0.0' 0.0' 3' 6' 8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new [] {                  12' 8' 6' 3' 0.0' 0.0' 3' 6' 8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new [] {                  12' 8' 6' 3' 0.0' 0.0' 3' 6' 8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new [] {                  12' 8' 6' 3' 0.0' 0.0' 3' 6' 8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Smiley Face Curve")' -7' new [] {                  12' 8' 6' 3' 0.0' 0.0' 3' 6' 8' 12              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new [] {                  4.8' 1.6' -1.1' -2.4' -1.1' 4' 8' 9.6' 11.2' 12'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new [] {                  4.8' 1.6' -1.1' -2.4' -1.1' 4' 8' 9.6' 11.2' 12'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new [] {                  4.8' 1.6' -1.1' -2.4' -1.1' 4' 8' 9.6' 11.2' 12'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new [] {                  4.8' 1.6' -1.1' -2.4' -1.1' 4' 8' 9.6' 11.2' 12'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new [] {                  4.8' 1.6' -1.1' -2.4' -1.1' 4' 8' 9.6' 11.2' 12'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new [] {                  4.8' 1.6' -1.1' -2.4' -1.1' 4' 8' 9.6' 11.2' 12'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new [] {                  4.8' 1.6' -1.1' -2.4' -1.1' 4' 8' 9.6' 11.2' 12'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new [] {                  4.8' 1.6' -1.1' -2.4' -1.1' 4' 8' 9.6' 11.2' 12'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new [] {                  4.8' 1.6' -1.1' -2.4' -1.1' 4' 8' 9.6' 11.2' 12'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new [] {                  4.8' 1.6' -1.1' -2.4' -1.1' 4' 8' 9.6' 11.2' 12'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft")' -1.1' new [] {                  4.8' 1.6' -1.1' -2.4' -1.1' 4' 8' 9.6' 11.2' 12'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new [] {                  4' 4' 2.4' -1.1' -4' -5.6' -3.2' -1.1' 2.4' 8.8'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new [] {                  4' 4' 2.4' -1.1' -4' -5.6' -3.2' -1.1' 2.4' 8.8'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new [] {                  4' 4' 2.4' -1.1' -4' -5.6' -3.2' -1.1' 2.4' 8.8'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new [] {                  4' 4' 2.4' -1.1' -4' -5.6' -3.2' -1.1' 2.4' 8.8'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new [] {                  4' 4' 2.4' -1.1' -4' -5.6' -3.2' -1.1' 2.4' 8.8'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new [] {                  4' 4' 2.4' -1.1' -4' -5.6' -3.2' -1.1' 2.4' 8.8'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new [] {                  4' 4' 2.4' -1.1' -4' -5.6' -3.2' -1.1' 2.4' 8.8'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new [] {                  4' 4' 2.4' -1.1' -4' -5.6' -3.2' -1.1' 2.4' 8.8'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new [] {                  4' 4' 2.4' -1.1' -4' -5.6' -3.2' -1.1' 2.4' 8.8'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new [] {                  4' 4' 2.4' -1.1' -4' -5.6' -3.2' -1.1' 2.4' 8.8'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Soft Rock")' -1.1' new [] {                  4' 4' 2.4' -1.1' -4' -5.6' -3.2' -1.1' 2.4' 8.8'              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new [] {                  8' 5.6' -1.1' -5.6' -4.8' -1.1' 8' 9.6' 9.6' 8.8              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new [] {                  8' 5.6' -1.1' -5.6' -4.8' -1.1' 8' 9.6' 9.6' 8.8              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new [] {                  8' 5.6' -1.1' -5.6' -4.8' -1.1' 8' 9.6' 9.6' 8.8              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new [] {                  8' 5.6' -1.1' -5.6' -4.8' -1.1' 8' 9.6' 9.6' 8.8              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new [] {                  8' 5.6' -1.1' -5.6' -4.8' -1.1' 8' 9.6' 9.6' 8.8              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new [] {                  8' 5.6' -1.1' -5.6' -4.8' -1.1' 8' 9.6' 9.6' 8.8              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new [] {                  8' 5.6' -1.1' -5.6' -4.8' -1.1' 8' 9.6' 9.6' 8.8              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new [] {                  8' 5.6' -1.1' -5.6' -4.8' -1.1' 8' 9.6' 9.6' 8.8              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new [] {                  8' 5.6' -1.1' -5.6' -4.8' -1.1' 8' 9.6' 9.6' 8.8              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new [] {                  8' 5.6' -1.1' -5.6' -4.8' -1.1' 8' 9.6' 9.6' 8.8              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,GetDefaultEqualizers,The following statement contains a magic number: yield return new EqualizerSetting (this' Catalog.GetString ("Techno")' -1.1' new [] {                  8' 5.6' -1.1' -5.6' -4.8' -1.1' 8' 9.6' 9.6' 8.8              });
Magic Number,Banshee.Equalizer,EqualizerManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Equalizer\EqualizerManager.cs,QueueSave,The following statement contains a magic number: queue_save_id = GLib.Timeout.Add (2500' delegate {                  Save ();                  queue_save_id = 0;                  return false;              });
Magic Number,Banshee.SmartPlaylist,Migrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: m.Migrate (                              Convert.ToInt32 (reader[0])' reader[1] as string'                              reader[2] as string' reader[3] as string'                              reader[4] as string' reader[5] as string                          );
Magic Number,Banshee.SmartPlaylist,Migrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: m.Migrate (                              Convert.ToInt32 (reader[0])' reader[1] as string'                              reader[2] as string' reader[3] as string'                              reader[4] as string' reader[5] as string                          );
Magic Number,Banshee.SmartPlaylist,Migrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: m.Migrate (                              Convert.ToInt32 (reader[0])' reader[1] as string'                              reader[2] as string' reader[3] as string'                              reader[4] as string' reader[5] as string                          );
Magic Number,Banshee.SmartPlaylist,Migrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MigrateAll,The following statement contains a magic number: m.Migrate (                              Convert.ToInt32 (reader[0])' reader[1] as string'                              reader[2] as string' reader[3] as string'                              reader[4] as string' reader[5] as string                          );
Magic Number,Banshee.SmartPlaylist,Migrator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,ParseCondition,The following statement contains a magic number: conditions[0] = conditions[0].Remove(0' 2);
Magic Number,Banshee.SmartPlaylist,QueryOperator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MatchesCondition,The following statement contains a magic number: value1 = mc[0].Groups[2].Captures[0].Value.Trim(new char[] {'\''});
Magic Number,Banshee.SmartPlaylist,QueryOperator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MatchesCondition,The following statement contains a magic number: value2 = mc[0].Groups[3].Captures[0].Value.Trim(new char[] {'\''});
Magic Number,Banshee.SmartPlaylist,QueryOperator,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\Migrator.cs,MatchesCondition,The following statement contains a magic number: mc[0].Groups.Count == 4
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: playlist = new SmartPlaylistSource (                              reader.Get<long> (0)' reader.Get<string> (1)'                              reader.Get<string> (2)' reader.Get<string> (3)'                              reader.Get<string> (4)' reader.Get<string> (5)'                              parent' reader.Get<int> (7)' reader.Get<bool> (8)'                              reader.Get<bool> (9)                          );
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: playlist = new SmartPlaylistSource (                              reader.Get<long> (0)' reader.Get<string> (1)'                              reader.Get<string> (2)' reader.Get<string> (3)'                              reader.Get<string> (4)' reader.Get<string> (5)'                              parent' reader.Get<int> (7)' reader.Get<bool> (8)'                              reader.Get<bool> (9)                          );
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: playlist = new SmartPlaylistSource (                              reader.Get<long> (0)' reader.Get<string> (1)'                              reader.Get<string> (2)' reader.Get<string> (3)'                              reader.Get<string> (4)' reader.Get<string> (5)'                              parent' reader.Get<int> (7)' reader.Get<bool> (8)'                              reader.Get<bool> (9)                          );
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: playlist = new SmartPlaylistSource (                              reader.Get<long> (0)' reader.Get<string> (1)'                              reader.Get<string> (2)' reader.Get<string> (3)'                              reader.Get<string> (4)' reader.Get<string> (5)'                              parent' reader.Get<int> (7)' reader.Get<bool> (8)'                              reader.Get<bool> (9)                          );
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: playlist = new SmartPlaylistSource (                              reader.Get<long> (0)' reader.Get<string> (1)'                              reader.Get<string> (2)' reader.Get<string> (3)'                              reader.Get<string> (4)' reader.Get<string> (5)'                              parent' reader.Get<int> (7)' reader.Get<bool> (8)'                              reader.Get<bool> (9)                          );
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: playlist = new SmartPlaylistSource (                              reader.Get<long> (0)' reader.Get<string> (1)'                              reader.Get<string> (2)' reader.Get<string> (3)'                              reader.Get<string> (4)' reader.Get<string> (5)'                              parent' reader.Get<int> (7)' reader.Get<bool> (8)'                              reader.Get<bool> (9)                          );
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,LoadAll,The following statement contains a magic number: playlist = new SmartPlaylistSource (                              reader.Get<long> (0)' reader.Get<string> (1)'                              reader.Get<string> (2)' reader.Get<string> (3)'                              reader.Get<string> (4)' reader.Get<string> (5)'                              parent' reader.Get<int> (7)' reader.Get<bool> (8)'                              reader.Get<bool> (9)                          );
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,StartTimer,The following statement contains a magic number: timeout_id = GLib.Timeout.Add(1000*60' OnTimerBeep);
Magic Number,Banshee.SmartPlaylist,SmartPlaylistSource,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.SmartPlaylist\SmartPlaylistSource.cs,StartTimer,The following statement contains a magic number: timeout_id = GLib.Timeout.Add(1000*60' OnTimerBeep);
Magic Number,Banshee.Metadata,MetadataServiceJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata\MetadataServiceJob.cs,GetHttpStream,The following statement contains a magic number: request.Timeout = 10 * 1000;
Magic Number,Banshee.Metadata,MetadataServiceJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata\MetadataServiceJob.cs,GetHttpStream,The following statement contains a magic number: request.Timeout = 10 * 1000;
Magic Number,Banshee.Metadata,SaveTrackMetadataJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata\SaveTrackMetadataJob.cs,IterateCore,The following statement contains a magic number: var write_delay = track.DateUpdated.AddSeconds (2) - DateTime.Now;
Magic Number,Banshee.Metadata,SaveTrackMetadataService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata\SaveTrackMetadataService.cs,SaveTrackMetadataService,The following statement contains a magic number: Banshee.ServiceStack.Application.RunTimeout (10000' delegate {                  WriteMetadataEnabled.ValueChanged += OnEnabledChanged;                  WriteRatingsEnabled.ValueChanged += OnEnabledChanged;                  WritePlayCountsEnabled.ValueChanged += OnEnabledChanged;                    foreach (var source in ServiceManager.SourceManager.Sources) {                      AddPrimarySource (source);                  }                    ServiceManager.SourceManager.SourceAdded += (a) => AddPrimarySource (a.Source);                  ServiceManager.SourceManager.SourceRemoved += (a) => RemovePrimarySource (a.Source);                  Save ();                    inited = true;                  return false;              });
Magic Number,Banshee.Metadata.FileSystem,FileSystemQueryJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.FileSystem\FileSystemQueryJob.cs,Fetch,The following statement contains a magic number: int max_acceptable_items = Math.Max (30' track_count + 8);
Magic Number,Banshee.Metadata.FileSystem,FileSystemQueryJob,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metadata.FileSystem\FileSystemQueryJob.cs,Fetch,The following statement contains a magic number: int max_acceptable_items = Math.Max (30' track_count + 8);
Magic Number,Banshee.PlaybackController,PlaybackControllerService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,OnPlayerEvent,The following statement contains a magic number: switch (args.Event) {                  case PlayerEvent.StartOfStream:                      CurrentTrack = player_engine.CurrentTrack;                      consecutive_errors = 0;                      break;                  case PlayerEvent.EndOfStream:                      EosTransition ();                      break;                  case PlayerEvent.Error:                      if (++consecutive_errors >= 5) {                          consecutive_errors = 0;                          player_engine.Close (false);                          OnStopped ();                          break;                      }                        CancelErrorTransition ();                      // TODO why is this so long? any reason not to be instantaneous?                      error_transition_id = Application.RunTimeout (250' delegate {                          EosTransition ();                          RequestTrackHandler ();                          return true;                      });                      break;                  case PlayerEvent.StateChange:                      if (((PlayerEventStateChangeArgs)args).Current != PlayerState.Loading) {                          break;                      }                        TrackInfo track = player_engine.CurrentTrack;                      if (changing_to_track != track && track != null) {                          CurrentTrack = track;                      }                        changing_to_track = null;                        if (!raise_started_after_transition) {                          transition_track_started = false;                          OnTrackStarted ();                      } else {                          transition_track_started = true;                      }                      break;                  case PlayerEvent.RequestNextTrack:                      RequestTrackHandler ();                      break;              }
Magic Number,Banshee.PlaybackController,PlaybackControllerService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,OnPlayerEvent,The following statement contains a magic number: switch (args.Event) {                  case PlayerEvent.StartOfStream:                      CurrentTrack = player_engine.CurrentTrack;                      consecutive_errors = 0;                      break;                  case PlayerEvent.EndOfStream:                      EosTransition ();                      break;                  case PlayerEvent.Error:                      if (++consecutive_errors >= 5) {                          consecutive_errors = 0;                          player_engine.Close (false);                          OnStopped ();                          break;                      }                        CancelErrorTransition ();                      // TODO why is this so long? any reason not to be instantaneous?                      error_transition_id = Application.RunTimeout (250' delegate {                          EosTransition ();                          RequestTrackHandler ();                          return true;                      });                      break;                  case PlayerEvent.StateChange:                      if (((PlayerEventStateChangeArgs)args).Current != PlayerState.Loading) {                          break;                      }                        TrackInfo track = player_engine.CurrentTrack;                      if (changing_to_track != track && track != null) {                          CurrentTrack = track;                      }                        changing_to_track = null;                        if (!raise_started_after_transition) {                          transition_track_started = false;                          OnTrackStarted ();                      } else {                          transition_track_started = true;                      }                      break;                  case PlayerEvent.RequestNextTrack:                      RequestTrackHandler ();                      break;              }
Magic Number,Banshee.PlaybackController,PlaybackControllerService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,RestartOrPrevious,The following statement contains a magic number: const int delay = 4000;
Magic Number,Banshee.Hardware,VendorProductInfo,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Hardware\VendorProductInfo.cs,VendorProductInfo,The following statement contains a magic number: vendor_id = (short)(vendorProductId >> 16);
Magic Number,Banshee.Hardware,VendorProductDeviceNode,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Hardware\VendorProductDeviceNode.cs,ParseId,The following statement contains a magic number: Int32.TryParse (value.Substring (2)' NumberStyles.HexNumber'                      CultureInfo.InvariantCulture' out result);
Magic Number,Banshee.MediaProfiles,MediaProfileManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.MediaProfiles\MediaProfileManager.cs,GetProfileForExtension,The following statement contains a magic number: extension == null || extension.Length < 2
Magic Number,Banshee.Preferences,PreferenceService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Preferences\PreferenceService.cs,PreferenceService,The following statement contains a magic number: Add (new Page ("extensions"' Catalog.GetString ("Extensions")' 10));
Magic Number,Banshee.Preferences,PreferenceService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Preferences\PreferenceService.cs,PreferenceService,The following statement contains a magic number: var misc = new Section ("misc"' Catalog.GetString ("Miscellaneous")' 20);
Magic Number,Banshee.Collection.Indexer,CollectionIndexer,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Collection.Indexer\CollectionIndexer.cs,SaveToXml,The following statement contains a magic number: writer.Indentation = 2;
Magic Number,Banshee.Metrics,BansheeMetrics,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metrics\BansheeMetrics.cs,Start,The following statement contains a magic number: var one_in_twenty = new Random ().NextDouble () < 0.05;
Magic Number,Banshee.Metrics,BansheeMetrics,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metrics\BansheeMetrics.cs,Initialize,The following statement contains a magic number: Application.RunTimeout (5*1000' delegate {                  if (BansheeMetrics.Instance == null) {                      return false;                  }                    ThreadAssist.SpawnFromMain (delegate {                      metrics.AddDefaults ();                      AddMetrics ();                        if (ApplicationContext.CommandLine.Contains ("debug-metrics")) {                          Log.InformationFormat ("Anonymous usage data collected:\n{0}"' metrics.ToJsonString ());                          System.IO.File.WriteAllText ("usage-data.json"' metrics.ToJsonString ());                      }                        if (!ServiceManager.Get<Network> ().Connected) {                          return;                      }                        // Don't post to server more than every 48 hours                      var last_post_time = DatabaseConfigurationClient.Client.Get<DateTime> (last_post_key' DateTime.MinValue);                      var last_post_rel = (DateTime.Now - last_post_time).TotalDays;                      if (last_post_rel < 0 || last_post_rel > 4.0) {                          var poster = new HttpPoster ("http://metrics.banshee.fm/submit/"' metrics);                          bool posted = poster.Post ();                          Log.InformationFormat ("Posted usage data? {0}"' posted);                            // Clear the old metrics' even if we failed to post them; it might be a server-side                          // problem w/ the data we want to send (eg too big' out of space) and we don't want                          // to keep retrying to send the same data.                          metrics.Store.Clear ();                          DatabaseConfigurationClient.Client.Set<DateTime> (last_post_key' DateTime.Now);                      }                  });                    return false;              });
Magic Number,Banshee.Metrics,BansheeMetrics,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metrics\BansheeMetrics.cs,Initialize,The following statement contains a magic number: Application.RunTimeout (5*1000' delegate {                  if (BansheeMetrics.Instance == null) {                      return false;                  }                    ThreadAssist.SpawnFromMain (delegate {                      metrics.AddDefaults ();                      AddMetrics ();                        if (ApplicationContext.CommandLine.Contains ("debug-metrics")) {                          Log.InformationFormat ("Anonymous usage data collected:\n{0}"' metrics.ToJsonString ());                          System.IO.File.WriteAllText ("usage-data.json"' metrics.ToJsonString ());                      }                        if (!ServiceManager.Get<Network> ().Connected) {                          return;                      }                        // Don't post to server more than every 48 hours                      var last_post_time = DatabaseConfigurationClient.Client.Get<DateTime> (last_post_key' DateTime.MinValue);                      var last_post_rel = (DateTime.Now - last_post_time).TotalDays;                      if (last_post_rel < 0 || last_post_rel > 4.0) {                          var poster = new HttpPoster ("http://metrics.banshee.fm/submit/"' metrics);                          bool posted = poster.Post ();                          Log.InformationFormat ("Posted usage data? {0}"' posted);                            // Clear the old metrics' even if we failed to post them; it might be a server-side                          // problem w/ the data we want to send (eg too big' out of space) and we don't want                          // to keep retrying to send the same data.                          metrics.Store.Clear ();                          DatabaseConfigurationClient.Client.Set<DateTime> (last_post_key' DateTime.Now);                      }                  });                    return false;              });
Magic Number,Banshee.Metrics,BansheeMetrics,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metrics\BansheeMetrics.cs,Initialize,The following statement contains a magic number: Application.RunTimeout (5*1000' delegate {                  if (BansheeMetrics.Instance == null) {                      return false;                  }                    ThreadAssist.SpawnFromMain (delegate {                      metrics.AddDefaults ();                      AddMetrics ();                        if (ApplicationContext.CommandLine.Contains ("debug-metrics")) {                          Log.InformationFormat ("Anonymous usage data collected:\n{0}"' metrics.ToJsonString ());                          System.IO.File.WriteAllText ("usage-data.json"' metrics.ToJsonString ());                      }                        if (!ServiceManager.Get<Network> ().Connected) {                          return;                      }                        // Don't post to server more than every 48 hours                      var last_post_time = DatabaseConfigurationClient.Client.Get<DateTime> (last_post_key' DateTime.MinValue);                      var last_post_rel = (DateTime.Now - last_post_time).TotalDays;                      if (last_post_rel < 0 || last_post_rel > 4.0) {                          var poster = new HttpPoster ("http://metrics.banshee.fm/submit/"' metrics);                          bool posted = poster.Post ();                          Log.InformationFormat ("Posted usage data? {0}"' posted);                            // Clear the old metrics' even if we failed to post them; it might be a server-side                          // problem w/ the data we want to send (eg too big' out of space) and we don't want                          // to keep retrying to send the same data.                          metrics.Store.Clear ();                          DatabaseConfigurationClient.Client.Set<DateTime> (last_post_key' DateTime.Now);                      }                  });                    return false;              });
Magic Number,Banshee.Metrics,BansheeMetrics,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Metrics\BansheeMetrics.cs,AddMetrics,The following statement contains a magic number: HyenaSqliteCommand.RaiseCommandExecutedThresholdMs = 400;
Missing Default,Banshee.Networking,NetworkManager,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Networking\NetworkManager.cs,DeFrobApiBreak,The following switch statement is missing a default case: switch ((int) state) {                  case 10: return State.Asleep;                  case 20: return State.Disconnected;                  case 30: return State.Disconnected;                  case 40: return State.Connecting;                  case 50: return State.Connected;                  case 60: return State.Connected;                  case 70: return State.Connected;              }
Missing Default,Banshee.Playlists.Formats,AsxPlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,Load,The following switch statement is missing a default case: switch (xml_reader.LocalName.ToLower ()) {                      case "title":                          try {                              xml_reader.Read ();                              Title = xml_reader.Value;                          }                          catch {                          }                          break;                        case "entry":                          LoadEntry (xml_reader);                          break;                        case "entryref":                          string href = xml_reader["HREF"] ?? xml_reader["href"];                          if (href != null) {                              var secondary = PlaylistParser.Parse (new SafeUri (ResolveUri (href)));                              if (secondary != null) {                                  // splice in Elements of secondary                                  foreach (PlaylistElement e in secondary.Elements) {                                      Elements.Add (e);                                  }                              }                          }                          break;                  }
Missing Default,Banshee.Playlists.Formats,AsxPlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\AsxPlaylistFormat.cs,LoadEntry,The following switch statement is missing a default case: switch (xml_reader.LocalName.ToLower ()) {                      case "title":                          xml_reader.Read ();                          element.Title = xml_reader.Value;                          break;                        case "ref":                          // asf links say they are http' but are mmsh instead                          string uri_aux = xml_reader["HREF"] ?? xml_reader["href"];                          if (uri_aux.StartsWith ("http"' StringComparison.CurrentCultureIgnoreCase)) {                              uri_aux = "mmsh" + uri_aux.Substring (4);                          }                            element.Uri = ResolveUri (uri_aux);                          break;                        case "duration":                          try {                              xml_reader.Read ();                              element.Duration = TimeSpan.Parse (xml_reader.Value);                          } catch {                          }                          break;                  }
Missing Default,Banshee.Playlists.Formats,PlsPlaylistFormat,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.Playlists.Formats\PlsPlaylistFormat.cs,Load,The following switch statement is missing a default case: switch(element_type) {                          case PlsType.File:                              element.Uri = ResolveUri (value_string);                              break;                          case PlsType.Title:                              element.Title = value_string;                              break;                          case PlsType.Length:                              element.Duration = SecondsStringToTimeSpan (value_string);                              break;                      }
Missing Default,Banshee.PlaybackController,PlaybackControllerService,D:\research\architectureSmells\repos\GNOME_banshee\src\Core\Banshee.Services\Banshee.PlaybackController\PlaybackControllerService.cs,OnPlayerEvent,The following switch statement is missing a default case: switch (args.Event) {                  case PlayerEvent.StartOfStream:                      CurrentTrack = player_engine.CurrentTrack;                      consecutive_errors = 0;                      break;                  case PlayerEvent.EndOfStream:                      EosTransition ();                      break;                  case PlayerEvent.Error:                      if (++consecutive_errors >= 5) {                          consecutive_errors = 0;                          player_engine.Close (false);                          OnStopped ();                          break;                      }                        CancelErrorTransition ();                      // TODO why is this so long? any reason not to be instantaneous?                      error_transition_id = Application.RunTimeout (250' delegate {                          EosTransition ();                          RequestTrackHandler ();                          return true;                      });                      break;                  case PlayerEvent.StateChange:                      if (((PlayerEventStateChangeArgs)args).Current != PlayerState.Loading) {                          break;                      }                        TrackInfo track = player_engine.CurrentTrack;                      if (changing_to_track != track && track != null) {                          CurrentTrack = track;                      }                        changing_to_track = null;                        if (!raise_started_after_transition) {                          transition_track_started = false;                          OnTrackStarted ();                      } else {                          transition_track_started = true;                      }                      break;                  case PlayerEvent.RequestNextTrack:                      RequestTrackHandler ();                      break;              }
