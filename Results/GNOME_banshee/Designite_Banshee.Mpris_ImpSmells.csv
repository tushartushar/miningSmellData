Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Banshee.Mpris,Metadata,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.Mpris\Banshee.Mpris\Metadata.cs,Metadata,Cyclomatic complexity of the method is 10
Complex Method,Banshee.Mpris,MediaPlayer,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.Mpris\Banshee.Mpris\MediaPlayer.cs,GetPlaylists,Cyclomatic complexity of the method is 8
Complex Method,Banshee.Mpris,MediaPlayer,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.Mpris\Banshee.Mpris\MediaPlayer.cs,Get,Cyclomatic complexity of the method is 31
Complex Method,Banshee.Mpris,MediaPlayer,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.Mpris\Banshee.Mpris\MediaPlayer.cs,Set,Cyclomatic complexity of the method is 18
Complex Method,Banshee.Mpris,MprisService,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.Mpris\Banshee.Mpris\MprisService.cs,OnPlayerEvent,Cyclomatic complexity of the method is 13
Long Statement,Banshee.Mpris,MediaPlayer,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.Mpris\Banshee.Mpris\MediaPlayer.cs,GetIconPath,The length of the statement  "	string icon_path = Paths.Combine (Paths.GetInstalledDataDirectory ("icons")' "hicolor"' "22x22"' "categories"' String.Concat (icon_name' ".png")); " is 146.
Long Statement,Banshee.Mpris,MprisService,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.Mpris\Banshee.Mpris\MprisService.cs,Initialize,The length of the statement  "	ServiceManager.PlayerEngine.ConnectEvent (OnPlayerEvent' PlayerEvent.StartOfStream | PlayerEvent.StateChange | PlayerEvent.TrackInfoUpdated | PlayerEvent.Seek | PlayerEvent.Volume); " is 181.
Magic Number,Banshee.Mpris,Metadata,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.Mpris\Banshee.Mpris\Metadata.cs,Metadata,The following statement contains a magic number: SetInfo ("mpris:length"' (long)track.Duration.TotalMilliseconds * 1000);  
Magic Number,Banshee.Mpris,Metadata,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.Mpris\Banshee.Mpris\Metadata.cs,Metadata,The following statement contains a magic number: if (track.Rating > 0) {  	// Scale is 0.0 to 1.0  	SetInfo ("xesam:userRating"' (double)track.Rating / 5);  }  
Magic Number,Banshee.Mpris,Metadata,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.Mpris\Banshee.Mpris\Metadata.cs,Metadata,The following statement contains a magic number: SetInfo ("xesam:userRating"' (double)track.Rating / 5);  
Missing Default,Banshee.Mpris,MediaPlayer,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.Mpris\Banshee.Mpris\MediaPlayer.cs,GetPlaylists,The following switch statement is missing a default case: switch (order) {  case "Alphabetical":  	playlist_sources = playlist_sources.OrderBy (p => p.Name);  	break;  case "UserDefined":  	playlist_sources = playlist_sources.OrderBy (p => p.Order);  	break;  }  
Missing Default,Banshee.Mpris,MediaPlayer,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.Mpris\Banshee.Mpris\MediaPlayer.cs,Set,The following switch statement is missing a default case: switch (propname) {  case "LoopStatus":  	string s = value as string;  	if (!String.IsNullOrEmpty (s)) {  		LoopStatus = s;  	}  	break;  case "Shuffle":  	if (value is bool) {  		Shuffle = (bool)value;  	}  	break;  case "Volume":  	if (value is double) {  		Volume = (double)value;  	}  	break;  }  
Missing Default,Banshee.Mpris,MediaPlayer,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.Mpris\Banshee.Mpris\MediaPlayer.cs,Set,The following switch statement is missing a default case: switch (propname) {  case "Fullscreen":  	if (value is bool) {  		Fullscreen = (bool)value;  	}  	break;  }  
Missing Default,Banshee.Mpris,MprisService,F:\newReposMay17\GNOME_banshee\src\Extensions\Banshee.Mpris\Banshee.Mpris\MprisService.cs,OnPlayerEvent,The following switch statement is missing a default case: switch (args.Event) {  case PlayerEvent.StartOfStream:  case PlayerEvent.TrackInfoUpdated:  	player.AddPropertyChange (PlayerProperties.Metadata);  	break;  case PlayerEvent.StateChange:  	player.AddPropertyChange (PlayerProperties.PlaybackStatus);  	break;  case PlayerEvent.Seek:  	player.HandleSeek ();  	break;  case PlayerEvent.Volume:  	player.AddPropertyChange (PlayerProperties.Volume);  	break;  }  
