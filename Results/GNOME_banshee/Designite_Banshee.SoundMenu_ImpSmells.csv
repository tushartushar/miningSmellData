Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Banshee.SoundMenu,SoundMenuService,C:\repos\GNOME_banshee\src\Extensions\Banshee.SoundMenu\Banshee.SoundMenu\SoundMenuService.cs,ShowTrackNotification,Cyclomatic complexity of the method is 10
Empty Catch Block,Banshee.SoundMenu,SoundMenuService,C:\repos\GNOME_banshee\src\Extensions\Banshee.SoundMenu\Banshee.SoundMenu\SoundMenuService.cs,Dispose,The method has an empty catch block.
Magic Number,Banshee.SoundMenu,SoundMenuService,C:\repos\GNOME_banshee\src\Extensions\Banshee.SoundMenu\Banshee.SoundMenu\SoundMenuService.cs,ShowTrackNotification,The following statement contains a magic number: try {                  if (current_nf == null) {                      current_nf = new Notification (current_track.DisplayTrackTitle' message' image);                  } else {                      current_nf.Summary = current_track.DisplayTrackTitle;                      current_nf.Body = message;                      current_nf.IconName = image;                  }                    current_nf.Urgency = Urgency.Low;                  current_nf.Timeout = 4500;                    if (!current_track.IsLive && ActionsSupported && interface_action_service.PlaybackActions["NextAction"].Sensitive) {                      current_nf.AddAction ("skip-song"' Catalog.GetString ("Skip this item")' OnSongSkipped);                  }                  current_nf.Show ();                } catch (Exception e) {                  Log.Exception ("Cannot show notification"' e);              }
Missing Default,Banshee.SoundMenu,SoundMenuService,C:\repos\GNOME_banshee\src\Extensions\Banshee.SoundMenu\Banshee.SoundMenu\SoundMenuService.cs,OnPlayerEvent,The following switch statement is missing a default case: switch (args.Event) {                  case PlayerEvent.StartOfStream:                  case PlayerEvent.TrackInfoUpdated:                      current_track = ServiceManager.PlayerEngine.CurrentTrack;                      ShowTrackNotification ();                      break;                  case PlayerEvent.EndOfStream:                      current_track = null;                      break;              }
