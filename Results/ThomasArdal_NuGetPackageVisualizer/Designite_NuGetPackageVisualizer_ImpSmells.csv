Implementation smell,Namespace,Class,File,Method,Description
Long Method,NuGetPackageVisualizer,Program,D:\research\architectureSmells\repos1\ThomasArdal_NuGetPackageVisualizer\Program.cs,GeneratePackages,The method has 122 lines of code.
Complex Method,NuGetPackageVisualizer,Program,D:\research\architectureSmells\repos1\ThomasArdal_NuGetPackageVisualizer\Program.cs,GeneratePackages,Cyclomatic complexity of the method is 11
Long Parameter List,NuGetPackageVisualizer.NuGetService,V2FeedPackage,D:\research\architectureSmells\repos1\ThomasArdal_NuGetPackageVisualizer\Service References\NuGetService\Reference.cs,CreateV2FeedPackage,The method has 12 parameters. Parameters: ID' version' created' downloadCount' isLatestVersion' isAbsoluteLatestVersion' isPrerelease' lastUpdated' published' packageSize' requireLicenseAcceptance' versionDownloadCount
Long Statement,NuGetPackageVisualizer,DGMLWriter,D:\research\architectureSmells\repos1\ThomasArdal_NuGetPackageVisualizer\DGMLWriter.cs,Write,The length of the statement  "                                new XAttribute("Target"' packages.Any(x => x.NugetId == dep.NugetId && x.LocalVersion == dep.Version) ? packages.First(x => x.NugetId == dep.NugetId && x.LocalVersion == dep.Version).Id : string.Format("{0} ({1})"' dep.NugetId' dep.Version))))) " is 244.
Long Statement,NuGetPackageVisualizer,Program,D:\research\architectureSmells\repos1\ThomasArdal_NuGetPackageVisualizer\Program.cs,GeneratePackages,The length of the statement  "                //todo process new format CSProj file.  <PackageReference Include="Microsoft.TeamFoundation.DistributedTask.Common" version="15.112.1" /> " is 137.
Long Statement,NuGetPackageVisualizer.NuGetService,FeedContext_x0060_1,D:\research\architectureSmells\repos1\ThomasArdal_NuGetPackageVisualizer\Service References\NuGetService\Reference.cs,ResolveTypeFromName,The length of the statement  "                return this.GetType().Assembly.GetType(string.Concat("NuGetPackageVisualizer.NuGetService"' typeName.Substring(12))' false); " is 124.
Magic Number,NuGetPackageVisualizer.NuGetService,FeedContext_x0060_1,D:\research\architectureSmells\repos1\ThomasArdal_NuGetPackageVisualizer\Service References\NuGetService\Reference.cs,ResolveTypeFromName,The following statement contains a magic number: return this.GetType().Assembly.GetType(string.Concat("NuGetPackageVisualizer.NuGetService"' typeName.Substring(12))' false);
Duplicate Code,NuGetPackageVisualizer,Program,D:\research\architectureSmells\repos1\ThomasArdal_NuGetPackageVisualizer\Program.cs,GeneratePackages,The method contains a code clone-set at the following line numbers (starting from the method definition): ((21' 71)' (79' 129))
Missing Default,NuGetPackageVisualizer,Program,D:\research\architectureSmells\repos1\ThomasArdal_NuGetPackageVisualizer\Program.cs,GenerateFile,The following switch statement is missing a default case: switch (OutputType)              {                  case "dgml":                      new DGMLWriter().Write(packages' fileName);                      break;                    case "graphviz":                      new GraphvizWriter().Write(packages' fileName);                      break;              }
