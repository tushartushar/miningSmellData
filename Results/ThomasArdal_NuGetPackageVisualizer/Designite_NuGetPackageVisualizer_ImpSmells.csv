Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NuGetPackageVisualizer.NuGetService,V2FeedPackage,C:\repos\ThomasArdal_NuGetPackageVisualizer\Service References\NuGetService\Reference.cs,CreateV2FeedPackage,The method has 12 parameters. Parameters: ID' version' created' downloadCount' isLatestVersion' isAbsoluteLatestVersion' isPrerelease' lastUpdated' published' packageSize' requireLicenseAcceptance' versionDownloadCount
Long Statement,NuGetPackageVisualizer,DGMLWriter,C:\repos\ThomasArdal_NuGetPackageVisualizer\DGMLWriter.cs,Write,The length of the statement  "                                new XAttribute("Target"' packages.Any(x => x.NugetId == dep.NugetId && x.LocalVersion == dep.Version) ? packages.First(x => x.NugetId == dep.NugetId && x.LocalVersion == dep.Version).Id : string.Format("{0} ({1})"' dep.NugetId' dep.Version))))) " is 244.
Long Statement,NuGetPackageVisualizer,Program,C:\repos\ThomasArdal_NuGetPackageVisualizer\Program.cs,Run,The length of the statement  "                if (ProjectDiagrams) GenerateFile(projectPackages' BuildFilePath(Path.GetFileName(Path.GetDirectoryName(packageFile)))); " is 120.
Long Statement,NuGetPackageVisualizer.NuGetService,FeedContext_x0060_1,C:\repos\ThomasArdal_NuGetPackageVisualizer\Service References\NuGetService\Reference.cs,ResolveTypeFromName,The length of the statement  "                return this.GetType().Assembly.GetType(string.Concat("NuGetPackageVisualizer.NuGetService"' typeName.Substring(12))' false); " is 124.
Magic Number,NuGetPackageVisualizer.NuGetService,FeedContext_x0060_1,C:\repos\ThomasArdal_NuGetPackageVisualizer\Service References\NuGetService\Reference.cs,ResolveTypeFromName,The following statement contains a magic number: if (typeName.StartsWith("NuGetGallery"' global::System.StringComparison.Ordinal))              {                  return this.GetType().Assembly.GetType(string.Concat("NuGetPackageVisualizer.NuGetService"' typeName.Substring(12))' false);              }
Missing Default,NuGetPackageVisualizer,Program,C:\repos\ThomasArdal_NuGetPackageVisualizer\Program.cs,GenerateFile,The following switch statement is missing a default case: switch (OutputType)              {                  case "dgml":                      new DGMLWriter().Write(packages' fileName);                      break;                    case "graphviz":                      new GraphvizWriter().Write(packages' fileName);                      break;              }
