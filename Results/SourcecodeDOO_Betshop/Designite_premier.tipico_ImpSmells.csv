Implementation smell,Namespace,Class,File,Method,Description
Complex Method,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,old_refreshTimer_Tick,Cyclomatic complexity of the method is 11
Complex Method,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,LoadIds,Cyclomatic complexity of the method is 13
Long Statement,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,old_refreshTimer_Tick,The length of the statement  "		// <button name="q6062813910" type="button" class="but qbtn roll_red" onclick="javascript:tr(6062813910''WEB_LIVE_UPCOMING')">1'55</button> " is 139.
Long Statement,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,ParseHtmlDocument,The length of the statement  "			labelTimeSinceLastUpdate.Text = difference.Hours.ToString () + ":" + difference.Minutes.ToString ("d2") + ":" + difference.Seconds.ToString ("d2"); " is 147.
Long Statement,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,ParseHtmlDocument,The length of the statement  "			labelTimeSinceLastUpdate.ForeColor = difference.Minutes != 0 ? Color.Red : (difference.Seconds < 30 ? Color.Black : Color.Blue); " is 128.
Long Statement,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,dataGridView_CellValuePushed,The length of the statement  "	if (dataGridView != null && e.RowIndex >= 0 && e.ColumnIndex == 0 && viewReverseCatalog.ContainsKey (dataGridView) && itemCatalog.ContainsKey (viewReverseCatalog [dataGridView]) && itemCatalog [viewReverseCatalog [dataGridView]].Count > e.RowIndex) { " is 250.
Long Statement,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,dataGridView_CellValuePushed,The length of the statement  "				SendUpdate (itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex].JSON (textBoxToken.Text)' itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex].Id); " is 164.
Long Statement,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,dataGridView_CellValueNeeded,The length of the statement  "	if (dataGridView != null && e.RowIndex >= 0 && e.ColumnIndex >= 0 && viewReverseCatalog.ContainsKey (dataGridView) && itemCatalog.ContainsKey (viewReverseCatalog [dataGridView]) && itemCatalog [viewReverseCatalog [dataGridView]].Count > e.RowIndex && itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex].Lenght > e.ColumnIndex - 1) { " is 341.
Long Statement,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,dataGridView_CellValueNeeded,The length of the statement  "			if (e.ColumnIndex > 4 && itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex] [e.ColumnIndex - 1] != itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex].OldData [e.ColumnIndex - 1]) { " is 200.
Long Statement,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,SendUpdate,The length of the statement  "	FileStream fs = new FileStream (@"c:\users\Aleksandar\Desktop\ParseOutFile." + DateTime.Now.ToString ("yyMMddHHmmss") + ".txt"' FileMode.Create); " is 145.
Long Statement,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,SendUpdate,The length of the statement  "	//    textBoxLog.Invoke(new MethodInvoker(delegate { textBoxLog.AppendText("\r\n" + message + "\r\n"); textBoxLog.SelectionStart = textBoxLog.Text.Length; textBoxLog.ScrollToCaret(); })); " is 187.
Long Statement,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,SendUpdate,The length of the statement  "	//                // textBoxLog.Invoke(new MethodInvoker(delegate { textBoxLog.AppendText("\r\n" + ex.Message + "\r\n"); textBoxLog.SelectionStart = textBoxLog.Text.Length; textBoxLog.ScrollToCaret(); })); " is 205.
Long Statement,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,SendUpdate,The length of the statement  "	//            TextWriter logID = new StreamWriter(Path.Combine(Application.StartupPath' "log" + id.Replace('+'' '_') + ".txt")' true); " is 134.
Long Statement,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,SendUpdate,The length of the statement  "	//        textBoxLog.Invoke(new MethodInvoker(delegate { textBoxLog.AppendText("\r\nresponse: " + responseMessage + "\r\n"); textBoxLog.SelectionStart = textBoxLog.Text.Length; textBoxLog.ScrollToCaret(); })); " is 209.
Complex Conditional,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,ParseHtmlDocument,The conditional expression  "document.Body != null && document.Body.InnerText != null && (forceParse || document.Body.InnerText != htmlBody)"  is complex.
Complex Conditional,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,dataGridView_CellValuePushed,The conditional expression  "dataGridView != null && e.RowIndex >= 0 && e.ColumnIndex == 0 && viewReverseCatalog.ContainsKey (dataGridView) && itemCatalog.ContainsKey (viewReverseCatalog [dataGridView]) && itemCatalog [viewReverseCatalog [dataGridView]].Count > e.RowIndex"  is complex.
Complex Conditional,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,dataGridView_CellValueNeeded,The conditional expression  "dataGridView != null && e.RowIndex >= 0 && e.ColumnIndex >= 0 && viewReverseCatalog.ContainsKey (dataGridView) && itemCatalog.ContainsKey (viewReverseCatalog [dataGridView]) && itemCatalog [viewReverseCatalog [dataGridView]].Count > e.RowIndex && itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex].Lenght > e.ColumnIndex - 1"  is complex.
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,old_refreshTimer_Tick,The following statement contains a magic number: foreach (HtmlElement button in browserForm.webBrowser.Document.GetElementsByTagName ("button")) {  	// Console.WriteLine(button.InnerHtml);  	if (button.OuterHtml.Contains ("WEB_LIVE_UPCOMING")) {  		if (random.Next (1000) < 10) {  			button.InvokeMember ("onclick");  			break;  		}  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,old_refreshTimer_Tick,The following statement contains a magic number: foreach (HtmlElement button in browserForm.webBrowser.Document.GetElementsByTagName ("button")) {  	// Console.WriteLine(button.InnerHtml);  	if (button.OuterHtml.Contains ("WEB_LIVE_UPCOMING")) {  		if (random.Next (1000) < 10) {  			button.InvokeMember ("onclick");  			break;  		}  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,old_refreshTimer_Tick,The following statement contains a magic number: if (button.OuterHtml.Contains ("WEB_LIVE_UPCOMING")) {  	if (random.Next (1000) < 10) {  		button.InvokeMember ("onclick");  		break;  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,old_refreshTimer_Tick,The following statement contains a magic number: if (button.OuterHtml.Contains ("WEB_LIVE_UPCOMING")) {  	if (random.Next (1000) < 10) {  		button.InvokeMember ("onclick");  		break;  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,old_refreshTimer_Tick,The following statement contains a magic number: if (random.Next (1000) < 10) {  	button.InvokeMember ("onclick");  	break;  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,old_refreshTimer_Tick,The following statement contains a magic number: if (random.Next (1000) < 10) {  	button.InvokeMember ("onclick");  	break;  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,old_refreshTimer_Tick,The following statement contains a magic number: while (true) {  	// startIndex = browserForm.webBrowser.DocumentText.IndexOf("upcoming_"' startIndex);  	// <button name="q6062813910" type="button" class="but qbtn roll_red" onclick="javascript:tr(6062813910''WEB_LIVE_UPCOMING')">1'55</button>  	// startIndex = "WEB_LIVE_UPCOMING";   	startIndex = browserForm.webBrowser.DocumentText.IndexOf ("<button name=");  	if (startIndex == -1) {  		break;  	}  	startIndex = browserForm.webBrowser.DocumentText.IndexOf ('\"'' startIndex);  	if (startIndex == -1) {  		break;  	}  	int endIndex = browserForm.webBrowser.DocumentText.IndexOf ('\"'' startIndex + 1);  	if (endIndex == -1) {  		break;  	}  	if (startIndex + 20 > endIndex) {  		string tryThis = browserForm.webBrowser.DocumentText.Substring (startIndex' endIndex - startIndex + 1);  		links.Add (tryThis);  		break;  	}  	startIndex++;  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,old_refreshTimer_Tick,The following statement contains a magic number: if (startIndex + 20 > endIndex) {  	string tryThis = browserForm.webBrowser.DocumentText.Substring (startIndex' endIndex - startIndex + 1);  	links.Add (tryThis);  	break;  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,textBoxClick_TextChanged,The following statement contains a magic number: if (int.TryParse (textBoxClick.Text' out interval)) {  	refreshTimer.Interval = random.Next (interval * 800' interval * 1200);  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,textBoxClick_TextChanged,The following statement contains a magic number: if (int.TryParse (textBoxClick.Text' out interval)) {  	refreshTimer.Interval = random.Next (interval * 800' interval * 1200);  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,textBoxClick_TextChanged,The following statement contains a magic number: refreshTimer.Interval = random.Next (interval * 800' interval * 1200);  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,textBoxClick_TextChanged,The following statement contains a magic number: refreshTimer.Interval = random.Next (interval * 800' interval * 1200);  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: foreach (header h in itemCatalog.Keys) {  	if (viewCatalog.ContainsKey (h)) {  		if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  			viewCatalog [h].RowCount = itemCatalog [h].Count;  		}  		viewCatalog [h].Refresh ();  	}  	else {  		DataGridView dataGridView = new DataGridView ();  		TabPage tabPage = new TabPage ();  		tabControl.SuspendLayout ();  		tabPage.SuspendLayout ();  		tabPage.Controls.Add (dataGridView);  		tabPage.Location = new System.Drawing.Point (4' 22);  		tabPage.Name = "tabPage" + h.Event;  		tabPage.Padding = new System.Windows.Forms.Padding (3);  		tabPage.Size = new System.Drawing.Size (639' 484);  		tabPage.TabIndex = 0;  		tabPage.Text = h.Event;  		tabPage.UseVisualStyleBackColor = true;  		tabControl.Controls.Add (tabPage);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Location = new System.Drawing.Point (3' 3);  		dataGridView.Name = "dataGridView" + h.Event;  		dataGridView.Size = new System.Drawing.Size (633' 478);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Name = "dataGridView" + h.Event;  		tabPage.ResumeLayout (false);  		tabControl.ResumeLayout (false);  		dataGridView.ColumnCount = h.Lenght + 1;  		dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.AllowUserToAddRows = false;  		dataGridView.AllowUserToDeleteRows = false;  		dataGridView.Columns [0].Name = "Id";  		for (int i = 0; i < h.Lenght; i++) {  			dataGridView.Columns [i + 1].Name = h [i];  		}  		dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  		dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  		dataGridView.VirtualMode = true;  		viewCatalog.Add (h' dataGridView);  		viewReverseCatalog.Add (dataGridView' h);  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: foreach (header h in itemCatalog.Keys) {  	if (viewCatalog.ContainsKey (h)) {  		if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  			viewCatalog [h].RowCount = itemCatalog [h].Count;  		}  		viewCatalog [h].Refresh ();  	}  	else {  		DataGridView dataGridView = new DataGridView ();  		TabPage tabPage = new TabPage ();  		tabControl.SuspendLayout ();  		tabPage.SuspendLayout ();  		tabPage.Controls.Add (dataGridView);  		tabPage.Location = new System.Drawing.Point (4' 22);  		tabPage.Name = "tabPage" + h.Event;  		tabPage.Padding = new System.Windows.Forms.Padding (3);  		tabPage.Size = new System.Drawing.Size (639' 484);  		tabPage.TabIndex = 0;  		tabPage.Text = h.Event;  		tabPage.UseVisualStyleBackColor = true;  		tabControl.Controls.Add (tabPage);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Location = new System.Drawing.Point (3' 3);  		dataGridView.Name = "dataGridView" + h.Event;  		dataGridView.Size = new System.Drawing.Size (633' 478);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Name = "dataGridView" + h.Event;  		tabPage.ResumeLayout (false);  		tabControl.ResumeLayout (false);  		dataGridView.ColumnCount = h.Lenght + 1;  		dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.AllowUserToAddRows = false;  		dataGridView.AllowUserToDeleteRows = false;  		dataGridView.Columns [0].Name = "Id";  		for (int i = 0; i < h.Lenght; i++) {  			dataGridView.Columns [i + 1].Name = h [i];  		}  		dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  		dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  		dataGridView.VirtualMode = true;  		viewCatalog.Add (h' dataGridView);  		viewReverseCatalog.Add (dataGridView' h);  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: foreach (header h in itemCatalog.Keys) {  	if (viewCatalog.ContainsKey (h)) {  		if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  			viewCatalog [h].RowCount = itemCatalog [h].Count;  		}  		viewCatalog [h].Refresh ();  	}  	else {  		DataGridView dataGridView = new DataGridView ();  		TabPage tabPage = new TabPage ();  		tabControl.SuspendLayout ();  		tabPage.SuspendLayout ();  		tabPage.Controls.Add (dataGridView);  		tabPage.Location = new System.Drawing.Point (4' 22);  		tabPage.Name = "tabPage" + h.Event;  		tabPage.Padding = new System.Windows.Forms.Padding (3);  		tabPage.Size = new System.Drawing.Size (639' 484);  		tabPage.TabIndex = 0;  		tabPage.Text = h.Event;  		tabPage.UseVisualStyleBackColor = true;  		tabControl.Controls.Add (tabPage);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Location = new System.Drawing.Point (3' 3);  		dataGridView.Name = "dataGridView" + h.Event;  		dataGridView.Size = new System.Drawing.Size (633' 478);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Name = "dataGridView" + h.Event;  		tabPage.ResumeLayout (false);  		tabControl.ResumeLayout (false);  		dataGridView.ColumnCount = h.Lenght + 1;  		dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.AllowUserToAddRows = false;  		dataGridView.AllowUserToDeleteRows = false;  		dataGridView.Columns [0].Name = "Id";  		for (int i = 0; i < h.Lenght; i++) {  			dataGridView.Columns [i + 1].Name = h [i];  		}  		dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  		dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  		dataGridView.VirtualMode = true;  		viewCatalog.Add (h' dataGridView);  		viewReverseCatalog.Add (dataGridView' h);  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: foreach (header h in itemCatalog.Keys) {  	if (viewCatalog.ContainsKey (h)) {  		if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  			viewCatalog [h].RowCount = itemCatalog [h].Count;  		}  		viewCatalog [h].Refresh ();  	}  	else {  		DataGridView dataGridView = new DataGridView ();  		TabPage tabPage = new TabPage ();  		tabControl.SuspendLayout ();  		tabPage.SuspendLayout ();  		tabPage.Controls.Add (dataGridView);  		tabPage.Location = new System.Drawing.Point (4' 22);  		tabPage.Name = "tabPage" + h.Event;  		tabPage.Padding = new System.Windows.Forms.Padding (3);  		tabPage.Size = new System.Drawing.Size (639' 484);  		tabPage.TabIndex = 0;  		tabPage.Text = h.Event;  		tabPage.UseVisualStyleBackColor = true;  		tabControl.Controls.Add (tabPage);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Location = new System.Drawing.Point (3' 3);  		dataGridView.Name = "dataGridView" + h.Event;  		dataGridView.Size = new System.Drawing.Size (633' 478);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Name = "dataGridView" + h.Event;  		tabPage.ResumeLayout (false);  		tabControl.ResumeLayout (false);  		dataGridView.ColumnCount = h.Lenght + 1;  		dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.AllowUserToAddRows = false;  		dataGridView.AllowUserToDeleteRows = false;  		dataGridView.Columns [0].Name = "Id";  		for (int i = 0; i < h.Lenght; i++) {  			dataGridView.Columns [i + 1].Name = h [i];  		}  		dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  		dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  		dataGridView.VirtualMode = true;  		viewCatalog.Add (h' dataGridView);  		viewReverseCatalog.Add (dataGridView' h);  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: foreach (header h in itemCatalog.Keys) {  	if (viewCatalog.ContainsKey (h)) {  		if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  			viewCatalog [h].RowCount = itemCatalog [h].Count;  		}  		viewCatalog [h].Refresh ();  	}  	else {  		DataGridView dataGridView = new DataGridView ();  		TabPage tabPage = new TabPage ();  		tabControl.SuspendLayout ();  		tabPage.SuspendLayout ();  		tabPage.Controls.Add (dataGridView);  		tabPage.Location = new System.Drawing.Point (4' 22);  		tabPage.Name = "tabPage" + h.Event;  		tabPage.Padding = new System.Windows.Forms.Padding (3);  		tabPage.Size = new System.Drawing.Size (639' 484);  		tabPage.TabIndex = 0;  		tabPage.Text = h.Event;  		tabPage.UseVisualStyleBackColor = true;  		tabControl.Controls.Add (tabPage);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Location = new System.Drawing.Point (3' 3);  		dataGridView.Name = "dataGridView" + h.Event;  		dataGridView.Size = new System.Drawing.Size (633' 478);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Name = "dataGridView" + h.Event;  		tabPage.ResumeLayout (false);  		tabControl.ResumeLayout (false);  		dataGridView.ColumnCount = h.Lenght + 1;  		dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.AllowUserToAddRows = false;  		dataGridView.AllowUserToDeleteRows = false;  		dataGridView.Columns [0].Name = "Id";  		for (int i = 0; i < h.Lenght; i++) {  			dataGridView.Columns [i + 1].Name = h [i];  		}  		dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  		dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  		dataGridView.VirtualMode = true;  		viewCatalog.Add (h' dataGridView);  		viewReverseCatalog.Add (dataGridView' h);  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: foreach (header h in itemCatalog.Keys) {  	if (viewCatalog.ContainsKey (h)) {  		if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  			viewCatalog [h].RowCount = itemCatalog [h].Count;  		}  		viewCatalog [h].Refresh ();  	}  	else {  		DataGridView dataGridView = new DataGridView ();  		TabPage tabPage = new TabPage ();  		tabControl.SuspendLayout ();  		tabPage.SuspendLayout ();  		tabPage.Controls.Add (dataGridView);  		tabPage.Location = new System.Drawing.Point (4' 22);  		tabPage.Name = "tabPage" + h.Event;  		tabPage.Padding = new System.Windows.Forms.Padding (3);  		tabPage.Size = new System.Drawing.Size (639' 484);  		tabPage.TabIndex = 0;  		tabPage.Text = h.Event;  		tabPage.UseVisualStyleBackColor = true;  		tabControl.Controls.Add (tabPage);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Location = new System.Drawing.Point (3' 3);  		dataGridView.Name = "dataGridView" + h.Event;  		dataGridView.Size = new System.Drawing.Size (633' 478);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Name = "dataGridView" + h.Event;  		tabPage.ResumeLayout (false);  		tabControl.ResumeLayout (false);  		dataGridView.ColumnCount = h.Lenght + 1;  		dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.AllowUserToAddRows = false;  		dataGridView.AllowUserToDeleteRows = false;  		dataGridView.Columns [0].Name = "Id";  		for (int i = 0; i < h.Lenght; i++) {  			dataGridView.Columns [i + 1].Name = h [i];  		}  		dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  		dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  		dataGridView.VirtualMode = true;  		viewCatalog.Add (h' dataGridView);  		viewReverseCatalog.Add (dataGridView' h);  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: foreach (header h in itemCatalog.Keys) {  	if (viewCatalog.ContainsKey (h)) {  		if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  			viewCatalog [h].RowCount = itemCatalog [h].Count;  		}  		viewCatalog [h].Refresh ();  	}  	else {  		DataGridView dataGridView = new DataGridView ();  		TabPage tabPage = new TabPage ();  		tabControl.SuspendLayout ();  		tabPage.SuspendLayout ();  		tabPage.Controls.Add (dataGridView);  		tabPage.Location = new System.Drawing.Point (4' 22);  		tabPage.Name = "tabPage" + h.Event;  		tabPage.Padding = new System.Windows.Forms.Padding (3);  		tabPage.Size = new System.Drawing.Size (639' 484);  		tabPage.TabIndex = 0;  		tabPage.Text = h.Event;  		tabPage.UseVisualStyleBackColor = true;  		tabControl.Controls.Add (tabPage);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Location = new System.Drawing.Point (3' 3);  		dataGridView.Name = "dataGridView" + h.Event;  		dataGridView.Size = new System.Drawing.Size (633' 478);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Name = "dataGridView" + h.Event;  		tabPage.ResumeLayout (false);  		tabControl.ResumeLayout (false);  		dataGridView.ColumnCount = h.Lenght + 1;  		dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.AllowUserToAddRows = false;  		dataGridView.AllowUserToDeleteRows = false;  		dataGridView.Columns [0].Name = "Id";  		for (int i = 0; i < h.Lenght; i++) {  			dataGridView.Columns [i + 1].Name = h [i];  		}  		dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  		dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  		dataGridView.VirtualMode = true;  		viewCatalog.Add (h' dataGridView);  		viewReverseCatalog.Add (dataGridView' h);  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: foreach (header h in itemCatalog.Keys) {  	if (viewCatalog.ContainsKey (h)) {  		if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  			viewCatalog [h].RowCount = itemCatalog [h].Count;  		}  		viewCatalog [h].Refresh ();  	}  	else {  		DataGridView dataGridView = new DataGridView ();  		TabPage tabPage = new TabPage ();  		tabControl.SuspendLayout ();  		tabPage.SuspendLayout ();  		tabPage.Controls.Add (dataGridView);  		tabPage.Location = new System.Drawing.Point (4' 22);  		tabPage.Name = "tabPage" + h.Event;  		tabPage.Padding = new System.Windows.Forms.Padding (3);  		tabPage.Size = new System.Drawing.Size (639' 484);  		tabPage.TabIndex = 0;  		tabPage.Text = h.Event;  		tabPage.UseVisualStyleBackColor = true;  		tabControl.Controls.Add (tabPage);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Location = new System.Drawing.Point (3' 3);  		dataGridView.Name = "dataGridView" + h.Event;  		dataGridView.Size = new System.Drawing.Size (633' 478);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Name = "dataGridView" + h.Event;  		tabPage.ResumeLayout (false);  		tabControl.ResumeLayout (false);  		dataGridView.ColumnCount = h.Lenght + 1;  		dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.AllowUserToAddRows = false;  		dataGridView.AllowUserToDeleteRows = false;  		dataGridView.Columns [0].Name = "Id";  		for (int i = 0; i < h.Lenght; i++) {  			dataGridView.Columns [i + 1].Name = h [i];  		}  		dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  		dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  		dataGridView.VirtualMode = true;  		viewCatalog.Add (h' dataGridView);  		viewReverseCatalog.Add (dataGridView' h);  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: foreach (header h in itemCatalog.Keys) {  	if (viewCatalog.ContainsKey (h)) {  		if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  			viewCatalog [h].RowCount = itemCatalog [h].Count;  		}  		viewCatalog [h].Refresh ();  	}  	else {  		DataGridView dataGridView = new DataGridView ();  		TabPage tabPage = new TabPage ();  		tabControl.SuspendLayout ();  		tabPage.SuspendLayout ();  		tabPage.Controls.Add (dataGridView);  		tabPage.Location = new System.Drawing.Point (4' 22);  		tabPage.Name = "tabPage" + h.Event;  		tabPage.Padding = new System.Windows.Forms.Padding (3);  		tabPage.Size = new System.Drawing.Size (639' 484);  		tabPage.TabIndex = 0;  		tabPage.Text = h.Event;  		tabPage.UseVisualStyleBackColor = true;  		tabControl.Controls.Add (tabPage);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Location = new System.Drawing.Point (3' 3);  		dataGridView.Name = "dataGridView" + h.Event;  		dataGridView.Size = new System.Drawing.Size (633' 478);  		dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  		dataGridView.Name = "dataGridView" + h.Event;  		tabPage.ResumeLayout (false);  		tabControl.ResumeLayout (false);  		dataGridView.ColumnCount = h.Lenght + 1;  		dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  		dataGridView.AllowUserToAddRows = false;  		dataGridView.AllowUserToDeleteRows = false;  		dataGridView.Columns [0].Name = "Id";  		for (int i = 0; i < h.Lenght; i++) {  			dataGridView.Columns [i + 1].Name = h [i];  		}  		dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  		dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  		dataGridView.VirtualMode = true;  		viewCatalog.Add (h' dataGridView);  		viewReverseCatalog.Add (dataGridView' h);  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: if (viewCatalog.ContainsKey (h)) {  	if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  	viewCatalog [h].Refresh ();  }  else {  	DataGridView dataGridView = new DataGridView ();  	TabPage tabPage = new TabPage ();  	tabControl.SuspendLayout ();  	tabPage.SuspendLayout ();  	tabPage.Controls.Add (dataGridView);  	tabPage.Location = new System.Drawing.Point (4' 22);  	tabPage.Name = "tabPage" + h.Event;  	tabPage.Padding = new System.Windows.Forms.Padding (3);  	tabPage.Size = new System.Drawing.Size (639' 484);  	tabPage.TabIndex = 0;  	tabPage.Text = h.Event;  	tabPage.UseVisualStyleBackColor = true;  	tabControl.Controls.Add (tabPage);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Location = new System.Drawing.Point (3' 3);  	dataGridView.Name = "dataGridView" + h.Event;  	dataGridView.Size = new System.Drawing.Size (633' 478);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Name = "dataGridView" + h.Event;  	tabPage.ResumeLayout (false);  	tabControl.ResumeLayout (false);  	dataGridView.ColumnCount = h.Lenght + 1;  	dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.AllowUserToAddRows = false;  	dataGridView.AllowUserToDeleteRows = false;  	dataGridView.Columns [0].Name = "Id";  	for (int i = 0; i < h.Lenght; i++) {  		dataGridView.Columns [i + 1].Name = h [i];  	}  	dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  	dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  	dataGridView.VirtualMode = true;  	viewCatalog.Add (h' dataGridView);  	viewReverseCatalog.Add (dataGridView' h);  	viewCatalog [h].RowCount = itemCatalog [h].Count;  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: if (viewCatalog.ContainsKey (h)) {  	if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  	viewCatalog [h].Refresh ();  }  else {  	DataGridView dataGridView = new DataGridView ();  	TabPage tabPage = new TabPage ();  	tabControl.SuspendLayout ();  	tabPage.SuspendLayout ();  	tabPage.Controls.Add (dataGridView);  	tabPage.Location = new System.Drawing.Point (4' 22);  	tabPage.Name = "tabPage" + h.Event;  	tabPage.Padding = new System.Windows.Forms.Padding (3);  	tabPage.Size = new System.Drawing.Size (639' 484);  	tabPage.TabIndex = 0;  	tabPage.Text = h.Event;  	tabPage.UseVisualStyleBackColor = true;  	tabControl.Controls.Add (tabPage);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Location = new System.Drawing.Point (3' 3);  	dataGridView.Name = "dataGridView" + h.Event;  	dataGridView.Size = new System.Drawing.Size (633' 478);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Name = "dataGridView" + h.Event;  	tabPage.ResumeLayout (false);  	tabControl.ResumeLayout (false);  	dataGridView.ColumnCount = h.Lenght + 1;  	dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.AllowUserToAddRows = false;  	dataGridView.AllowUserToDeleteRows = false;  	dataGridView.Columns [0].Name = "Id";  	for (int i = 0; i < h.Lenght; i++) {  		dataGridView.Columns [i + 1].Name = h [i];  	}  	dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  	dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  	dataGridView.VirtualMode = true;  	viewCatalog.Add (h' dataGridView);  	viewReverseCatalog.Add (dataGridView' h);  	viewCatalog [h].RowCount = itemCatalog [h].Count;  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: if (viewCatalog.ContainsKey (h)) {  	if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  	viewCatalog [h].Refresh ();  }  else {  	DataGridView dataGridView = new DataGridView ();  	TabPage tabPage = new TabPage ();  	tabControl.SuspendLayout ();  	tabPage.SuspendLayout ();  	tabPage.Controls.Add (dataGridView);  	tabPage.Location = new System.Drawing.Point (4' 22);  	tabPage.Name = "tabPage" + h.Event;  	tabPage.Padding = new System.Windows.Forms.Padding (3);  	tabPage.Size = new System.Drawing.Size (639' 484);  	tabPage.TabIndex = 0;  	tabPage.Text = h.Event;  	tabPage.UseVisualStyleBackColor = true;  	tabControl.Controls.Add (tabPage);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Location = new System.Drawing.Point (3' 3);  	dataGridView.Name = "dataGridView" + h.Event;  	dataGridView.Size = new System.Drawing.Size (633' 478);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Name = "dataGridView" + h.Event;  	tabPage.ResumeLayout (false);  	tabControl.ResumeLayout (false);  	dataGridView.ColumnCount = h.Lenght + 1;  	dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.AllowUserToAddRows = false;  	dataGridView.AllowUserToDeleteRows = false;  	dataGridView.Columns [0].Name = "Id";  	for (int i = 0; i < h.Lenght; i++) {  		dataGridView.Columns [i + 1].Name = h [i];  	}  	dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  	dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  	dataGridView.VirtualMode = true;  	viewCatalog.Add (h' dataGridView);  	viewReverseCatalog.Add (dataGridView' h);  	viewCatalog [h].RowCount = itemCatalog [h].Count;  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: if (viewCatalog.ContainsKey (h)) {  	if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  	viewCatalog [h].Refresh ();  }  else {  	DataGridView dataGridView = new DataGridView ();  	TabPage tabPage = new TabPage ();  	tabControl.SuspendLayout ();  	tabPage.SuspendLayout ();  	tabPage.Controls.Add (dataGridView);  	tabPage.Location = new System.Drawing.Point (4' 22);  	tabPage.Name = "tabPage" + h.Event;  	tabPage.Padding = new System.Windows.Forms.Padding (3);  	tabPage.Size = new System.Drawing.Size (639' 484);  	tabPage.TabIndex = 0;  	tabPage.Text = h.Event;  	tabPage.UseVisualStyleBackColor = true;  	tabControl.Controls.Add (tabPage);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Location = new System.Drawing.Point (3' 3);  	dataGridView.Name = "dataGridView" + h.Event;  	dataGridView.Size = new System.Drawing.Size (633' 478);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Name = "dataGridView" + h.Event;  	tabPage.ResumeLayout (false);  	tabControl.ResumeLayout (false);  	dataGridView.ColumnCount = h.Lenght + 1;  	dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.AllowUserToAddRows = false;  	dataGridView.AllowUserToDeleteRows = false;  	dataGridView.Columns [0].Name = "Id";  	for (int i = 0; i < h.Lenght; i++) {  		dataGridView.Columns [i + 1].Name = h [i];  	}  	dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  	dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  	dataGridView.VirtualMode = true;  	viewCatalog.Add (h' dataGridView);  	viewReverseCatalog.Add (dataGridView' h);  	viewCatalog [h].RowCount = itemCatalog [h].Count;  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: if (viewCatalog.ContainsKey (h)) {  	if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  	viewCatalog [h].Refresh ();  }  else {  	DataGridView dataGridView = new DataGridView ();  	TabPage tabPage = new TabPage ();  	tabControl.SuspendLayout ();  	tabPage.SuspendLayout ();  	tabPage.Controls.Add (dataGridView);  	tabPage.Location = new System.Drawing.Point (4' 22);  	tabPage.Name = "tabPage" + h.Event;  	tabPage.Padding = new System.Windows.Forms.Padding (3);  	tabPage.Size = new System.Drawing.Size (639' 484);  	tabPage.TabIndex = 0;  	tabPage.Text = h.Event;  	tabPage.UseVisualStyleBackColor = true;  	tabControl.Controls.Add (tabPage);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Location = new System.Drawing.Point (3' 3);  	dataGridView.Name = "dataGridView" + h.Event;  	dataGridView.Size = new System.Drawing.Size (633' 478);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Name = "dataGridView" + h.Event;  	tabPage.ResumeLayout (false);  	tabControl.ResumeLayout (false);  	dataGridView.ColumnCount = h.Lenght + 1;  	dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.AllowUserToAddRows = false;  	dataGridView.AllowUserToDeleteRows = false;  	dataGridView.Columns [0].Name = "Id";  	for (int i = 0; i < h.Lenght; i++) {  		dataGridView.Columns [i + 1].Name = h [i];  	}  	dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  	dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  	dataGridView.VirtualMode = true;  	viewCatalog.Add (h' dataGridView);  	viewReverseCatalog.Add (dataGridView' h);  	viewCatalog [h].RowCount = itemCatalog [h].Count;  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: if (viewCatalog.ContainsKey (h)) {  	if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  	viewCatalog [h].Refresh ();  }  else {  	DataGridView dataGridView = new DataGridView ();  	TabPage tabPage = new TabPage ();  	tabControl.SuspendLayout ();  	tabPage.SuspendLayout ();  	tabPage.Controls.Add (dataGridView);  	tabPage.Location = new System.Drawing.Point (4' 22);  	tabPage.Name = "tabPage" + h.Event;  	tabPage.Padding = new System.Windows.Forms.Padding (3);  	tabPage.Size = new System.Drawing.Size (639' 484);  	tabPage.TabIndex = 0;  	tabPage.Text = h.Event;  	tabPage.UseVisualStyleBackColor = true;  	tabControl.Controls.Add (tabPage);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Location = new System.Drawing.Point (3' 3);  	dataGridView.Name = "dataGridView" + h.Event;  	dataGridView.Size = new System.Drawing.Size (633' 478);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Name = "dataGridView" + h.Event;  	tabPage.ResumeLayout (false);  	tabControl.ResumeLayout (false);  	dataGridView.ColumnCount = h.Lenght + 1;  	dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.AllowUserToAddRows = false;  	dataGridView.AllowUserToDeleteRows = false;  	dataGridView.Columns [0].Name = "Id";  	for (int i = 0; i < h.Lenght; i++) {  		dataGridView.Columns [i + 1].Name = h [i];  	}  	dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  	dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  	dataGridView.VirtualMode = true;  	viewCatalog.Add (h' dataGridView);  	viewReverseCatalog.Add (dataGridView' h);  	viewCatalog [h].RowCount = itemCatalog [h].Count;  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: if (viewCatalog.ContainsKey (h)) {  	if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  	viewCatalog [h].Refresh ();  }  else {  	DataGridView dataGridView = new DataGridView ();  	TabPage tabPage = new TabPage ();  	tabControl.SuspendLayout ();  	tabPage.SuspendLayout ();  	tabPage.Controls.Add (dataGridView);  	tabPage.Location = new System.Drawing.Point (4' 22);  	tabPage.Name = "tabPage" + h.Event;  	tabPage.Padding = new System.Windows.Forms.Padding (3);  	tabPage.Size = new System.Drawing.Size (639' 484);  	tabPage.TabIndex = 0;  	tabPage.Text = h.Event;  	tabPage.UseVisualStyleBackColor = true;  	tabControl.Controls.Add (tabPage);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Location = new System.Drawing.Point (3' 3);  	dataGridView.Name = "dataGridView" + h.Event;  	dataGridView.Size = new System.Drawing.Size (633' 478);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Name = "dataGridView" + h.Event;  	tabPage.ResumeLayout (false);  	tabControl.ResumeLayout (false);  	dataGridView.ColumnCount = h.Lenght + 1;  	dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.AllowUserToAddRows = false;  	dataGridView.AllowUserToDeleteRows = false;  	dataGridView.Columns [0].Name = "Id";  	for (int i = 0; i < h.Lenght; i++) {  		dataGridView.Columns [i + 1].Name = h [i];  	}  	dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  	dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  	dataGridView.VirtualMode = true;  	viewCatalog.Add (h' dataGridView);  	viewReverseCatalog.Add (dataGridView' h);  	viewCatalog [h].RowCount = itemCatalog [h].Count;  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: if (viewCatalog.ContainsKey (h)) {  	if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  	viewCatalog [h].Refresh ();  }  else {  	DataGridView dataGridView = new DataGridView ();  	TabPage tabPage = new TabPage ();  	tabControl.SuspendLayout ();  	tabPage.SuspendLayout ();  	tabPage.Controls.Add (dataGridView);  	tabPage.Location = new System.Drawing.Point (4' 22);  	tabPage.Name = "tabPage" + h.Event;  	tabPage.Padding = new System.Windows.Forms.Padding (3);  	tabPage.Size = new System.Drawing.Size (639' 484);  	tabPage.TabIndex = 0;  	tabPage.Text = h.Event;  	tabPage.UseVisualStyleBackColor = true;  	tabControl.Controls.Add (tabPage);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Location = new System.Drawing.Point (3' 3);  	dataGridView.Name = "dataGridView" + h.Event;  	dataGridView.Size = new System.Drawing.Size (633' 478);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Name = "dataGridView" + h.Event;  	tabPage.ResumeLayout (false);  	tabControl.ResumeLayout (false);  	dataGridView.ColumnCount = h.Lenght + 1;  	dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.AllowUserToAddRows = false;  	dataGridView.AllowUserToDeleteRows = false;  	dataGridView.Columns [0].Name = "Id";  	for (int i = 0; i < h.Lenght; i++) {  		dataGridView.Columns [i + 1].Name = h [i];  	}  	dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  	dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  	dataGridView.VirtualMode = true;  	viewCatalog.Add (h' dataGridView);  	viewReverseCatalog.Add (dataGridView' h);  	viewCatalog [h].RowCount = itemCatalog [h].Count;  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: if (viewCatalog.ContainsKey (h)) {  	if (viewCatalog [h].RowCount != itemCatalog [h].Count) {  		viewCatalog [h].RowCount = itemCatalog [h].Count;  	}  	viewCatalog [h].Refresh ();  }  else {  	DataGridView dataGridView = new DataGridView ();  	TabPage tabPage = new TabPage ();  	tabControl.SuspendLayout ();  	tabPage.SuspendLayout ();  	tabPage.Controls.Add (dataGridView);  	tabPage.Location = new System.Drawing.Point (4' 22);  	tabPage.Name = "tabPage" + h.Event;  	tabPage.Padding = new System.Windows.Forms.Padding (3);  	tabPage.Size = new System.Drawing.Size (639' 484);  	tabPage.TabIndex = 0;  	tabPage.Text = h.Event;  	tabPage.UseVisualStyleBackColor = true;  	tabControl.Controls.Add (tabPage);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Location = new System.Drawing.Point (3' 3);  	dataGridView.Name = "dataGridView" + h.Event;  	dataGridView.Size = new System.Drawing.Size (633' 478);  	dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.Dock = System.Windows.Forms.DockStyle.Fill;  	dataGridView.Name = "dataGridView" + h.Event;  	tabPage.ResumeLayout (false);  	tabControl.ResumeLayout (false);  	dataGridView.ColumnCount = h.Lenght + 1;  	dataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;  	dataGridView.AllowUserToAddRows = false;  	dataGridView.AllowUserToDeleteRows = false;  	dataGridView.Columns [0].Name = "Id";  	for (int i = 0; i < h.Lenght; i++) {  		dataGridView.Columns [i + 1].Name = h [i];  	}  	dataGridView.CellValueNeeded += new DataGridViewCellValueEventHandler (dataGridView_CellValueNeeded);  	dataGridView.CellValuePushed += new DataGridViewCellValueEventHandler (dataGridView_CellValuePushed);  	dataGridView.VirtualMode = true;  	viewCatalog.Add (h' dataGridView);  	viewReverseCatalog.Add (dataGridView' h);  	viewCatalog [h].RowCount = itemCatalog [h].Count;  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: tabPage.Location = new System.Drawing.Point (4' 22);  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: tabPage.Location = new System.Drawing.Point (4' 22);  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: tabPage.Padding = new System.Windows.Forms.Padding (3);  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: tabPage.Size = new System.Drawing.Size (639' 484);  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: tabPage.Size = new System.Drawing.Size (639' 484);  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: dataGridView.Location = new System.Drawing.Point (3' 3);  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: dataGridView.Location = new System.Drawing.Point (3' 3);  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: dataGridView.Size = new System.Drawing.Size (633' 478);  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,UpdateView,The following statement contains a magic number: dataGridView.Size = new System.Drawing.Size (633' 478);  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,ParseHtmlDocument,The following statement contains a magic number: if (document != null) {  	document.InvokeScript ("handleMove");  	if (document.Body != null && document.Body.InnerText != null && (forceParse || document.Body.InnerText != htmlBody)) {  		forceUpdate = false;  		soundPlayed = false;  		lastUpdateTime = DateTime.Now;  		htmlBody = document.Body.InnerText;  		parser.tipico tipico = new tipico ();  		tipico.PrepareHtml (document);  		if (!tipico.ReadCompleted) {  			return;  		}  		tipico.InitAll (itemCatalog' SendUpdate' textBoxToken.Text' listOfIds);  		tipico.DoAll ();  		UpdateView ();  		//System.Threading.Thread thread = new System.Threading.Thread(tipico.DoAll);  		//thread.Start();  	}  	TimeSpan difference = DateTime.Now.Subtract (lastUpdateTime);  	labelTimeSinceLastUpdate.Text = difference.Hours.ToString () + ":" + difference.Minutes.ToString ("d2") + ":" + difference.Seconds.ToString ("d2");  	labelTimeSinceLastUpdate.ForeColor = difference.Minutes != 0 ? Color.Red : (difference.Seconds < 30 ? Color.Black : Color.Blue);  	if (soundPlayed == false && difference.TotalSeconds > soundInterval) {  		soundPlayed = true;  		try {  			new SoundPlayer (soundToPlay).Play ();  		}  		catch (Exception ex) {  			System.Diagnostics.Debug.WriteLine (ex.Message);  		}  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,ParseHtmlDocument,The following statement contains a magic number: labelTimeSinceLastUpdate.ForeColor = difference.Minutes != 0 ? Color.Red : (difference.Seconds < 30 ? Color.Black : Color.Blue);  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,dataGridView_CellValueNeeded,The following statement contains a magic number: if (dataGridView != null && e.RowIndex >= 0 && e.ColumnIndex >= 0 && viewReverseCatalog.ContainsKey (dataGridView) && itemCatalog.ContainsKey (viewReverseCatalog [dataGridView]) && itemCatalog [viewReverseCatalog [dataGridView]].Count > e.RowIndex && itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex].Lenght > e.ColumnIndex - 1) {  	if (e.ColumnIndex == 0) {  		e.Value = itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex].Id;  	}  	else {  		e.Value = itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex] [e.ColumnIndex - 1];  		if (e.ColumnIndex > 4 && itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex] [e.ColumnIndex - 1] != itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex].OldData [e.ColumnIndex - 1]) {  			e.Value += " (" + itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex].OldData [e.ColumnIndex - 1] + ")";  		}  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,dataGridView_CellValueNeeded,The following statement contains a magic number: if (e.ColumnIndex == 0) {  	e.Value = itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex].Id;  }  else {  	e.Value = itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex] [e.ColumnIndex - 1];  	if (e.ColumnIndex > 4 && itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex] [e.ColumnIndex - 1] != itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex].OldData [e.ColumnIndex - 1]) {  		e.Value += " (" + itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex].OldData [e.ColumnIndex - 1] + ")";  	}  }  
Magic Number,premier,MainForm,C:\repos\SourcecodeDOO_Betshop\Parser\premier\MainForm.cs,dataGridView_CellValueNeeded,The following statement contains a magic number: if (e.ColumnIndex > 4 && itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex] [e.ColumnIndex - 1] != itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex].OldData [e.ColumnIndex - 1]) {  	e.Value += " (" + itemCatalog [viewReverseCatalog [dataGridView]] [e.RowIndex].OldData [e.ColumnIndex - 1] + ")";  }  
