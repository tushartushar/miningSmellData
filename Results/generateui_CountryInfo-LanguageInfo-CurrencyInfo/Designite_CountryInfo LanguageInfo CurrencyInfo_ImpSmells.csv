Implementation smell,Namespace,Class,File,Method,Description
Long Method,CountryLanguageCurrency,CountryInfo,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\CountryInfo.cs,AddVehicleRegistrationCodesAndGermanNames,The method has 229 lines of code.
Complex Method,CountryLanguageCurrency,CountryInfo,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\CountryInfo.cs,GetShortEnglishName,Cyclomatic complexity of the method is 10
Complex Method,CountryLanguageCurrency,CountryInfo,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\CountryInfo.cs,GetMostSpokenLanguageCultureString,Cyclomatic complexity of the method is 14
Complex Method,CountryLanguageCurrency,LanguageInfo,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\LanguageInfo.cs,LanguageInfo,Cyclomatic complexity of the method is 10
Long Statement,CountryLanguageCurrency,CountryInfo,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\CountryInfo.cs,GetCountryByVehicleRegistrationCode,The length of the statement  "	return string.IsNullOrEmpty (vehicleRegistrationCode) ? null : _all.Values.FirstOrDefault (c => c.VehicleRegistrationCode == vehicleRegistrationCode.ToUpperInvariant ()); " is 170.
Long Statement,CountryLanguageCurrency,CurrencyInfo,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\CurrencyInfo.cs,Dump,The length of the statement  "	sb.AppendLine (string.Format (format' prefix' "Countries"' string.Join ("' "' Countries.Select (c => c.ShortEnglishName)))); " is 124.
Long Statement,CountryLanguageCurrency,Extensions,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\Extensions.cs,GetCountryCode,The length of the statement  "	return cultureInfo.LCID == CultureInfo.InvariantCulture.LCID || cultureInfo.IsNeutralCulture ? (CountryCode?)null : new RegionInfo (cultureInfo.LCID).GetCountryCode (); " is 168.
Long Statement,CountryLanguageCurrency,Extensions,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\Extensions.cs,GetDefaultCountryCode,The length of the statement  "	return cultureInfo.LCID == CultureInfo.InvariantCulture.LCID ? null : (cultureInfo.IsNeutralCulture ? cultureInfo.GetLanguage ().Country.Code : cultureInfo.GetCountryCode ()); " is 175.
Long Statement,CountryLanguageCurrency,Extensions,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\Extensions.cs,GetDefaultCountry,The length of the statement  "	return cultureInfo.LCID == CultureInfo.InvariantCulture.LCID ? null : (cultureInfo.IsNeutralCulture ? cultureInfo.GetLanguage ().Country : cultureInfo.GetCountry ()); " is 166.
Long Statement,CountryLanguageCurrency,Extensions,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\Extensions.cs,GetDefaultCurrencyCode,The length of the statement  "	return cultureInfo.LCID == CultureInfo.InvariantCulture.LCID ? null : (cultureInfo.IsNeutralCulture ? cultureInfo.GetLanguage ().Country.CurrencyCode : cultureInfo.GetCurrencyCode ()); " is 184.
Long Statement,CountryLanguageCurrency,Extensions,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\Extensions.cs,GetDefaultCurrency,The length of the statement  "	return cultureInfo.LCID == CultureInfo.InvariantCulture.LCID ? null : (cultureInfo.IsNeutralCulture ? cultureInfo.GetLanguage ().Country.Currency : cultureInfo.GetCurrency ()); " is 176.
Long Statement,CountryLanguageCurrency,Extensions,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\Extensions.cs,GetCountryCode,The length of the statement  "		throw new ArgumentException (string.Format ("There is no CountryCode for region '{0}'."' regionInfo.TwoLetterISORegionName)); " is 125.
Long Statement,CountryLanguageCurrency,LanguageInfo,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\LanguageInfo.cs,Dump,The length of the statement  "	sb.AppendLine (string.Format (format' prefix' "Countries"' string.Join ("' "' Countries.Select (c => c.ShortEnglishName)))); " is 124.
Missing Default,CountryLanguageCurrency,CountryInfo,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\CountryInfo.cs,GetShortEnglishName,The following switch statement is missing a default case: switch (countryInfo.EnglishName) {  case "Brunei Darussalam":  	return "Brunei";  case "People's Republic of China":  	return "China";  case "Serbia and Montenegro (Former)":  	return "Serbia and Montenegro";  case "Hong Kong S.A.R.":  	return "Hong Kong";  case "Lao P.D.R.":  	return "Laos";  case "Principality of Monaco":  	return "Monaco";  case "Macedonia (FYROM)":  	return "Macedonia";  case "Macao S.A.R.":  	return "Macao";  case "Islamic Republic of Pakistan":  	return "Pakistan";  case "Bolivarian Republic of Venezuela":  	return "Venezuela";  }  
Missing Default,CountryLanguageCurrency,CountryInfo,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\CountryInfo.cs,GetMostSpokenLanguageCultureString,The following switch statement is missing a default case: switch (regionName) {  case "BO":  	return "es-BO";  case "CA":  	return "en-CA";  case "CH":  	return "de-CH";  case "CL":  	return "es-CL";  case "CN":  	return "zh-CN";  case "DZ":  	return "ar-DZ";  case "EC":  	return "es-EC";  case "ES":  	return "es-ES";  case "GB":  	return "en-GB";  case "GT":  	return "es-GT";  case "NZ":  	return "en-NZ";  case "PE":  	return "es-PE";  case "SY":  	return "ar-SY";  case "ZA":  	return "en-ZA";  }  
Missing Default,CountryLanguageCurrency,LanguageInfo,C:\repos\generateui_CountryInfo-LanguageInfo-CurrencyInfo\LanguageInfo.cs,GetCountryForLanguage,The following switch statement is missing a default case: switch (languageCode) {  // Arabic -> Saudi Arabia  case LanguageCode.Ar:  	return CountryInfo.GetCountry (CountryCode.Sa);  // Bengali -> Bangladesh  case LanguageCode.Bg:  	return CountryInfo.GetCountry (CountryCode.Bd);  // English -> United Kingdom  case LanguageCode.En:  	return CountryInfo.GetCountry (CountryCode.Gb);  // Malay -> Malaysia  case LanguageCode.Ms:  	return CountryInfo.GetCountry (CountryCode.My);  // Serbian -> Serbia  case LanguageCode.Sr:  	return CountryInfo.GetCountry (CountryCode.Rs);  // Chinese -> China  case LanguageCode.Zh:  	return CountryInfo.GetCountry (CountryCode.Cn);  }  
