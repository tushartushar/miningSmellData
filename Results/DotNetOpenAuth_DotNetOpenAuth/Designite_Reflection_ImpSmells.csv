Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Ddue.Tools.Reflection,OrcasNamer,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\OrcasNamer.cs,GetMemberName,Cyclomatic complexity of the method is 26
Complex Method,Microsoft.Ddue.Tools.Reflection,OrcasNamer,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\OrcasNamer.cs,GetName,Cyclomatic complexity of the method is 31
Complex Method,Microsoft.Ddue.Tools.Reflection,OrcasNamer,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\OrcasNamer.cs,WriteMethod,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Ddue.Tools.Reflection,OrcasNamer,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\OrcasNamer.cs,WriteType,Cyclomatic complexity of the method is 46
Complex Method,Microsoft.Ddue.Tools.Reflection,ReflectionUtilities,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\Reflection.cs,GetTemplateType,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Ddue.Tools.Reflection,WhidbeyNamer,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\WhidbeyNamer.cs,GetMemberName,Cyclomatic complexity of the method is 26
Complex Method,Microsoft.Ddue.Tools.Reflection,WhidbeyNamer,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\WhidbeyNamer.cs,GetName,Cyclomatic complexity of the method is 31
Complex Method,Microsoft.Ddue.Tools.Reflection,WhidbeyNamer,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\WhidbeyNamer.cs,WriteType,Cyclomatic complexity of the method is 52
Long Statement,Microsoft.Ddue.Tools.Reflection,ApiVisitor,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\ApiVisitor.cs,LoadAssembly,The length of the statement  "	//AssemblyNode assembly = AssemblyNode.GetAssembly(filePath' cache); // this causes compact framework non-classes to register as classes " is 136.
Long Statement,Microsoft.Ddue.Tools.Reflection,ApiVisitor,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\ApiVisitor.cs,LoadAssembly,The length of the statement  "	//AssemblyNode assembly = AssemblyNode.GetAssembly(filePath' cache' false' false' true' false); // this causes missing mscorlib members " is 135.
Long Statement,Microsoft.Ddue.Tools.Reflection,ApiVisitor,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\ApiVisitor.cs,LoadAssembly,The length of the statement  "	//AssemblyNode assembly = AssemblyNode.GetAssembly(filePath' cache' false' false' false' false); // this causes non-classes to register as classes " is 146.
Long Statement,Microsoft.Ddue.Tools.Reflection,ApiVisitor,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\ApiVisitor.cs,LoadAssembly,The length of the statement  "	//AssemblyNode assembly = AssemblyNode.GetAssembly(filePath' null' false' false' true' false); // this causes missing mscorlib members " is 134.
Long Statement,Microsoft.Ddue.Tools.Reflection,ExternalDocumentedFilter,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\ExternalDocumentedFilter.cs,IsExposedMember,The length of the statement  "	if (!member.IsVisibleOutsideAssembly && !(protectedSealedVisible && type.IsSealed && (member.IsFamily || member.IsFamilyOrAssembly))) " is 133.
Long Statement,Microsoft.Ddue.Tools.Reflection,ReflectionUtilities,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\Reflection.cs,GetTemplateMember,The length of the statement  "		throw new InvalidOperationException ("No members in the template had the name found in the specialization. This is not possible' but apparently it happened."); " is 159.
Long Statement,Microsoft.Ddue.Tools.Reflection,ReflectionUtilities,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\Reflection.cs,GetTemplateMember,The length of the statement  "	throw new InvalidOperationException ("No members in the template matched the parameters of the specialization. This is not possible."); " is 135.
Long Statement,Microsoft.Ddue.Tools.Reflection,ReflectionUtilities,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\Reflection.cs,GetTemplateType,The length of the statement  "		Identifier name = new Identifier (String.Format ("{0}`{1}"' type.GetUnmangledNameWithoutTypeParameters ()' type.TemplateArguments.Count)); " is 138.
Long Statement,Microsoft.Ddue.Tools.Reflection,ReflectionUtilities,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\Reflection.cs,ParametersMatch,The length of the statement  "		if ((type1.NodeType == NodeType.Class) || (type1.NodeType == NodeType.Struct) || (type1.NodeType == NodeType.Interface) || (type1.NodeType == NodeType.EnumNode) || (type1.NodeType == NodeType.DelegateNode)) { " is 208.
Complex Conditional,Microsoft.Ddue.Tools.Reflection,ExternalDocumentedFilter,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\ExternalDocumentedFilter.cs,IsExposedMember,The conditional expression  "!member.IsVisibleOutsideAssembly && !(protectedSealedVisible && type.IsSealed && (member.IsFamily || member.IsFamilyOrAssembly))"  is complex.
Complex Conditional,Microsoft.Ddue.Tools.Reflection,ReflectionUtilities,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\Reflection.cs,ParametersMatch,The conditional expression  "(type1.NodeType == NodeType.Class) || (type1.NodeType == NodeType.Struct) || (type1.NodeType == NodeType.Interface) || (type1.NodeType == NodeType.EnumNode) || (type1.NodeType == NodeType.DelegateNode)"  is complex.
Missing Default,Microsoft.Ddue.Tools.Reflection,OrcasNamer,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\OrcasNamer.cs,GetMemberName,The following switch statement is missing a default case: switch (member.NodeType) {  case NodeType.Field:  	writer.Write ("F:");  	WriteField ((Field)member' writer);  	break;  case NodeType.Property:  	writer.Write ("P:");  	WriteProperty ((Property)member' writer);  	break;  case NodeType.Method:  	writer.Write ("M:");  	WriteMethod ((Method)member' writer);  	break;  case NodeType.InstanceInitializer:  	writer.Write ("M:");  	WriteConstructor ((InstanceInitializer)member' writer);  	break;  case NodeType.StaticInitializer:  	writer.Write ("M:");  	WriteStaticConstructor ((StaticInitializer)member' writer);  	break;  case NodeType.Event:  	writer.Write ("E:");  	WriteEvent ((Event)member' writer);  	break;  }  
Missing Default,Microsoft.Ddue.Tools.Reflection,OrcasNamer,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\OrcasNamer.cs,GetName,The following switch statement is missing a default case: switch (entity.NodeType) {  case NodeType.Namespace:  	writer.Write ("N:");  	WriteNamespace (entity as Namespace' writer);  	break;  case NodeType.Field:  	writer.Write ("F:");  	WriteField (entity as Field' writer);  	break;  case NodeType.Property:  	writer.Write ("P:");  	WriteProperty (entity as Property' writer);  	break;  case NodeType.Method:  	writer.Write ("M:");  	WriteMethod (entity as Method' writer);  	break;  case NodeType.InstanceInitializer:  	writer.Write ("M:");  	WriteConstructor (entity as InstanceInitializer' writer);  	break;  case NodeType.StaticInitializer:  	writer.Write ("M:");  	WriteStaticConstructor (entity as StaticInitializer' writer);  	break;  case NodeType.Event:  	writer.Write ("E:");  	WriteEvent (entity as Event' writer);  	break;  }  
Missing Default,Microsoft.Ddue.Tools.Reflection,WhidbeyNamer,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\WhidbeyNamer.cs,GetMemberName,The following switch statement is missing a default case: switch (member.NodeType) {  case NodeType.Field:  	writer.Write ("F:");  	WriteField ((Field)member' writer);  	break;  case NodeType.Property:  	writer.Write ("P:");  	WriteProperty ((Property)member' writer);  	break;  case NodeType.Method:  	writer.Write ("M:");  	WriteMethod ((Method)member' writer);  	break;  case NodeType.InstanceInitializer:  	writer.Write ("M:");  	WriteConstructor ((InstanceInitializer)member' writer);  	break;  case NodeType.StaticInitializer:  	writer.Write ("M:");  	WriteStaticConstructor ((StaticInitializer)member' writer);  	break;  case NodeType.Event:  	writer.Write ("E:");  	WriteEvent ((Event)member' writer);  	break;  }  
Missing Default,Microsoft.Ddue.Tools.Reflection,WhidbeyNamer,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\tools\Sandcastle\Source\Reflection\WhidbeyNamer.cs,GetName,The following switch statement is missing a default case: switch (entity.NodeType) {  case NodeType.Namespace:  	writer.Write ("N:");  	WriteNamespace (entity as Namespace' writer);  	break;  case NodeType.Field:  	writer.Write ("F:");  	WriteField (entity as Field' writer);  	break;  case NodeType.Property:  	writer.Write ("P:");  	WriteProperty (entity as Property' writer);  	break;  case NodeType.Method:  	writer.Write ("M:");  	WriteMethod (entity as Method' writer);  	break;  case NodeType.InstanceInitializer:  	writer.Write ("M:");  	WriteConstructor (entity as InstanceInitializer' writer);  	break;  case NodeType.StaticInitializer:  	writer.Write ("M:");  	WriteStaticConstructor (entity as StaticInitializer' writer);  	break;  case NodeType.Event:  	writer.Write ("E:");  	WriteEvent (entity as Event' writer);  	break;  }  
