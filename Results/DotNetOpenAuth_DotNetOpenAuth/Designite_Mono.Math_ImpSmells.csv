Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,Parse,Cyclomatic complexity of the method is 11
Complex Method,Mono.Math,Montgomery,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,Reduce,Cyclomatic complexity of the method is 8
Complex Method,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,Compare,Cyclomatic complexity of the method is 9
Complex Method,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,SquarePositive,Cyclomatic complexity of the method is 12
Complex Method,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,gcd,Cyclomatic complexity of the method is 8
Complex Method,Mono.Math.Prime,PrimalityTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\PrimalityTests.cs,GetSPPRounds,Cyclomatic complexity of the method is 18
Complex Method,Mono.Math.Prime,PrimalityTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\PrimalityTests.cs,RabinMillerTest,Cyclomatic complexity of the method is 9
Complex Method,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,Cyclomatic complexity of the method is 16
Long Parameter List,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,Multiply,The method has 8 parameters. Parameters: x' xOffset' xLen' y' yOffset' yLen' d' dOffset
Long Parameter List,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,MultiplyMod2p32pmod,The method has 9 parameters. Parameters: x' xOffset' xLen' y' yOffest' yLen' d' dOffset' mod
Long Statement,Mono.Math,ModulusRing,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BarrettReduction,The length of the statement  "				Kernel.MultiplyMod2p32pmod (q3.data' (int)kPlusOne' (int)q3.length - (int)kPlusOne' n.data' 0' (int)n.length' r2.data' 0' (int)kPlusOne); " is 137.
Long Statement,Mono.Math,ModulusRing,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,OddPow,The length of the statement  "				BigInteger tempNum = new BigInteger (Montgomery.ToMont (b' mod)' mod.length << 1);  // ensures (tempNum * tempNum) < b^ (2k) " is 124.
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,Parse,The following statement contains a magic number: val = val * 10 + (c - '0');
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: length = (uint)inData.Length >> 2;
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i-0] << (0*8))  					);
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i-0] << (0*8))  					);
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i-0] << (0*8))  					);
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i-0] << (0*8))  					);
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i-0] << (0*8))  					);
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i-0] << (0*8))  					);
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i-0] << (0*8))  					);
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i-0] << (0*8))  					);
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: i >= 3
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver) {  			case 1: data [length-1] = (uint)inData [0]; break;  			case 2: data [length-1] = (uint)((inData [0] << 8) | inData [1]); break;  			case 3: data [length-1] = (uint)((inData [0] << 16) | (inData [1] << 8) | inData [2]); break;  			}
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver) {  			case 1: data [length-1] = (uint)inData [0]; break;  			case 2: data [length-1] = (uint)((inData [0] << 8) | inData [1]); break;  			case 3: data [length-1] = (uint)((inData [0] << 16) | (inData [1] << 8) | inData [2]); break;  			}
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver) {  			case 1: data [length-1] = (uint)inData [0]; break;  			case 2: data [length-1] = (uint)((inData [0] << 8) | inData [1]); break;  			case 3: data [length-1] = (uint)((inData [0] << 16) | (inData [1] << 8) | inData [2]); break;  			}
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver) {  			case 1: data [length-1] = (uint)inData [0]; break;  			case 2: data [length-1] = (uint)((inData [0] << 8) | inData [1]); break;  			case 3: data [length-1] = (uint)((inData [0] << 16) | (inData [1] << 8) | inData [2]); break;  			}
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver) {  			case 1: data [length-1] = (uint)inData [0]; break;  			case 2: data [length-1] = (uint)((inData [0] << 8) | inData [1]); break;  			case 3: data [length-1] = (uint)((inData [0] << 16) | (inData [1] << 8) | inData [2]); break;  			}
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver) {  			case 1: data [length-1] = (uint)inData [0]; break;  			case 2: data [length-1] = (uint)((inData [0] << 8) | inData [1]); break;  			case 3: data [length-1] = (uint)((inData [0] << 16) | (inData [1] << 8) | inData [2]); break;  			}
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data = new uint [2] { (uint)ul' (uint)(ul >> 32)};
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data = new uint [2] { (uint)ul' (uint)(ul >> 32)};
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: length = 2;
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,genRandom,The following statement contains a magic number: int dwords = bits >> 5;
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,genRandom,The following statement contains a magic number: byte [] random = new byte [dwords << 2];
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,genRandom,The following statement contains a magic number: Buffer.BlockCopy (random' 0' ret.data' 0' (int)dwords << 2);
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,genRandom,The following statement contains a magic number: mask = (uint)(0xFFFFFFFF >> (32 - remBits));
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,randomize,The following statement contains a magic number: int dwords = bits >> 5;
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,randomize,The following statement contains a magic number: byte [] random = new byte [dwords << 2];
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,randomize,The following statement contains a magic number: Buffer.BlockCopy (random' 0' data' 0' (int)dwords << 2);
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,randomize,The following statement contains a magic number: mask = (uint)(0xFFFFFFFF >> (32 - remBits));
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,bitCount,The following statement contains a magic number: uint bits = 32;
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,bitCount,The following statement contains a magic number: bits += ((length - 1) << 5);
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,testBit,The following statement contains a magic number: uint bytePos = bitNum >> 5;
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,testBit,The following statement contains a magic number: uint bytePos = (uint)bitNum >> 5;
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,setBit,The following statement contains a magic number: uint bytePos = bitNum >> 5;
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,getBytes,The following statement contains a magic number: int numBytes = numBits >> 3;
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,getBytes,The following statement contains a magic number: numBytesInWord = 4;
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,getBytes,The following statement contains a magic number: val >>= 8;
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,getBytes,The following statement contains a magic number: numBytesInWord = 4;
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,ToString,The following statement contains a magic number: return ToString (10);
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,Incr2,The following statement contains a magic number: data [0] += 2;
Magic Number,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,Incr2,The following statement contains a magic number: data [0] < 2
Magic Number,Mono.Math,ModulusRing,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,Pow,The following statement contains a magic number: b != 2
Magic Number,Mono.Math,ModulusRing,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,OddPow,The following statement contains a magic number: uint pos = (uint)exp.bitCount () - 2;
Magic Number,Mono.Math,ModulusRing,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,OddPow,The following statement contains a magic number: mc >>= 32;
Magic Number,Mono.Math,ModulusRing,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,EvenPow,The following statement contains a magic number: uint pos = (uint)exp.bitCount() - 2;
Magic Number,Mono.Math,ModulusRing,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,EvenPow,The following statement contains a magic number: mc >>= 32;
Magic Number,Mono.Math,ModulusRing,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,EvenModTwoPow,The following statement contains a magic number: BigInteger resultNum = new BigInteger (2' mod.length << 1 +1);
Magic Number,Mono.Math,ModulusRing,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,EvenModTwoPow,The following statement contains a magic number: carry = x >> (32 - 1);
Magic Number,Mono.Math,ModulusRing,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,OddModTwoPow,The following statement contains a magic number: BigInteger resultNum = Montgomery.ToMont ((BigInteger)2' this.mod);
Magic Number,Mono.Math,ModulusRing,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,OddModTwoPow,The following statement contains a magic number: uint pos = (uint)exp.bitCount () - 2;
Magic Number,Mono.Math,ModulusRing,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,OddModTwoPow,The following statement contains a magic number: carry = x >> (32 - 1);
Magic Number,Mono.Math,Montgomery,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,Inverse,The following statement contains a magic number: y *= 2 - z;
Magic Number,Mono.Math,Montgomery,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,ToMont,The following statement contains a magic number: n <<= (int)m.length * 32;
Magic Number,Mono.Math,Montgomery,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,Reduce,The following statement contains a magic number: c >>= 32;
Magic Number,Mono.Math,Montgomery,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,Reduce,The following statement contains a magic number: c >>= 32;
Magic Number,Mono.Math,Montgomery,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,Reduce,The following statement contains a magic number: c >>= 32;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,AddSameSign,The following statement contains a magic number: sum >>= 32;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,PlusEq,The following statement contains a magic number: sum >>= 32;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,SingleByteDivideInPlace,The following statement contains a magic number: r <<= 32;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,DwordMod,The following statement contains a magic number: r <<= 32;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,DwordDiv,The following statement contains a magic number: r <<= 32;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,DwordDivMod,The following statement contains a magic number: r <<= 32;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: return new BigInteger [2] { 0' new BigInteger (bi1) };
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: ulong secondDivisorByte = bi2.data [bi2.length-2];
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: ulong dividend = ((ulong)remainder [pos] << 32) + (ulong)remainder [pos-1];
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: q_hat == 0x100000000 ||  							(q_hat * secondDivisorByte) > ((r_hat << 32) + remainder [pos-2])
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: q_hat == 0x100000000 ||  							(q_hat * secondDivisorByte) > ((r_hat << 32) + remainder [pos-2])
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: mc >>= 32;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: sum >>= 32;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: BigInteger [] ret = new BigInteger [2] { quot' rem };
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,LeftShift,The following statement contains a magic number: int w = n >> 5;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,LeftShift,The following statement contains a magic number: n &= ((1 << 5) - 1);
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,LeftShift,The following statement contains a magic number: carry = x >> (32 - n);
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,RightShift,The following statement contains a magic number: int w = n >> 5;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,RightShift,The following statement contains a magic number: int s = n & ((1 << 5) - 1);
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,RightShift,The following statement contains a magic number: carry = x << (32 - n);
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,MultiplyByDword,The following statement contains a magic number: c >>= 32;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,Multiply,The following statement contains a magic number: mcarry >>= 32;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,MultiplyMod2p32pmod,The following statement contains a magic number: mcarry >>= 32;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,SquarePositive,The following statement contains a magic number: uint dP2 = dP + 1' tP2 = tP + 2 * i + 1;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,SquarePositive,The following statement contains a magic number: mcarry >>= 32;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,SquarePositive,The following statement contains a magic number: carry = x >> (32 - 1);
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,SquarePositive,The following statement contains a magic number: val >>= 32;
Magic Number,Mono.Math,Kernel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,modInverse,The following statement contains a magic number: BigInteger [] q = new BigInteger [2];
Magic Number,Mono.Math.Prime,PrimalityTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\PrimalityTests.cs,GetSPPRounds,The following statement contains a magic number: Rounds = 27;
Magic Number,Mono.Math.Prime,PrimalityTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\PrimalityTests.cs,GetSPPRounds,The following statement contains a magic number: bc <= 100
Magic Number,Mono.Math.Prime,PrimalityTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\PrimalityTests.cs,GetSPPRounds,The following statement contains a magic number: switch (confidence) {  				case ConfidenceFactor.ExtraLow:  					Rounds >>= 2;  					return Rounds != 0 ? Rounds : 1;  				case ConfidenceFactor.Low:  					Rounds >>= 1;  					return Rounds != 0 ? Rounds : 1;  				case ConfidenceFactor.Medium:  					return Rounds;  				case ConfidenceFactor.High:  					return Rounds <<= 1;  				case ConfidenceFactor.ExtraHigh:  					return Rounds <<= 2;  				case ConfidenceFactor.Provable:  					throw new Exception ("The Rabin-Miller test can not be executed in a way such that its results are provable");  				default:  					throw new ArgumentOutOfRangeException ("confidence");  			}
Magic Number,Mono.Math.Prime,PrimalityTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\PrimalityTests.cs,GetSPPRounds,The following statement contains a magic number: switch (confidence) {  				case ConfidenceFactor.ExtraLow:  					Rounds >>= 2;  					return Rounds != 0 ? Rounds : 1;  				case ConfidenceFactor.Low:  					Rounds >>= 1;  					return Rounds != 0 ? Rounds : 1;  				case ConfidenceFactor.Medium:  					return Rounds;  				case ConfidenceFactor.High:  					return Rounds <<= 1;  				case ConfidenceFactor.ExtraHigh:  					return Rounds <<= 2;  				case ConfidenceFactor.Provable:  					throw new Exception ("The Rabin-Miller test can not be executed in a way such that its results are provable");  				default:  					throw new ArgumentOutOfRangeException ("confidence");  			}
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 %  3 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 %  5 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 %  7 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 % 11 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 % 13 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 % 17 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 % 19 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 % 23 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 % 29 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 += 2;
Missing Default,Mono.Math,BigInteger,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\Mono.Math\BigInteger.cs,BigInteger,The following switch statement is missing a default case: switch (leftOver) {  			case 1: data [length-1] = (uint)inData [0]; break;  			case 2: data [length-1] = (uint)((inData [0] << 8) | inData [1]); break;  			case 3: data [length-1] = (uint)((inData [0] << 16) | (inData [1] << 8) | inData [2]); break;  			}
