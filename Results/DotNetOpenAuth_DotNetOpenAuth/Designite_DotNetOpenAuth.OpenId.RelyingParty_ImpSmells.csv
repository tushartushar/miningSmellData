Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyMessageFactory.cs,GetNewRequestMessage,Cyclomatic complexity of the method is 8
Complex Method,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyMessageFactory.cs,GetNewResponseMessage,Cyclomatic complexity of the method is 11
Complex Method,DotNetOpenAuth.OpenId.RelyingParty,AssociationManager,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AssociationManager.cs,CreateNewAssociationAsync,Cyclomatic complexity of the method is 9
Complex Method,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateAsync,Cyclomatic complexity of the method is 8
Complex Method,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,GetAssociationAsync,Cyclomatic complexity of the method is 12
Complex Method,DotNetOpenAuth.OpenId.RelyingParty,OpenIdRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\OpenIdRelyingParty.cs,ProcessResponseFromPopupAsync,Cyclomatic complexity of the method is 8
Long Parameter List,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyChannel,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyChannel.cs,OpenIdRelyingPartyChannel,The method has 6 parameters.
Long Parameter List,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateAsync,The method has 6 parameters.
Long Parameter List,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateInternalAsync,The method has 7 parameters.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Behaviors\GsaIcamProfile.cs,OnOutgoingAuthenticationRequest,The length of the statement  "	ErrorUtilities.VerifyProtocol (string.Equals (request.Realm.Scheme' Uri.UriSchemeHttps' StringComparison.Ordinal) || DisableSslRequirement' BehaviorStrings.RealmMustBeHttps); " is 174.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Behaviors\GsaIcamProfile.cs,OnOutgoingAuthenticationRequest,The length of the statement  "	if (!AllowPersonallyIdentifiableInformation && !pape.PreferredPolicies.Contains (AuthenticationPolicies.NoPersonallyIdentifiableInformation)) { " is 143.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Behaviors\GsaIcamProfile.cs,OnOutgoingAuthenticationRequest,The length of the statement  "		ErrorUtilities.VerifyProtocol ((!requestInternal.AppliedExtensions.OfType<ClaimsRequest> ().Any () && !requestInternal.AppliedExtensions.OfType<FetchRequest> ().Any ())' BehaviorStrings.PiiIncludedWithNoPiiPolicy); " is 214.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Behaviors\GsaIcamProfile.cs,OnIncomingPositiveAssertion,The length of the statement  "	ErrorUtilities.VerifyProtocol (pape != null && pape.ActualPolicies.Contains (AuthenticationPolicies.USGovernmentTrustLevel1) && pape.ActualPolicies.Contains (AuthenticationPolicies.PrivatePersonalIdentifier)' BehaviorStrings.PapeResponseOrRequiredPoliciesMissing); " is 264.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Behaviors\GsaIcamProfile.cs,OnIncomingPositiveAssertion,The length of the statement  "	ErrorUtilities.VerifyProtocol (AllowPersonallyIdentifiableInformation || pape.ActualPolicies.Contains (AuthenticationPolicies.NoPersonallyIdentifiableInformation)' BehaviorStrings.PapeResponseOrRequiredPoliciesMissing); " is 219.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Behaviors\GsaIcamProfile.cs,OnIncomingPositiveAssertion,The length of the statement  "		ErrorUtilities.VerifyProtocol (assertion.GetExtension<ClaimsResponse> () == null && assertion.GetExtension<FetchResponse> () == null' BehaviorStrings.PiiIncludedWithNoPiiPolicy); " is 178.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyChannel,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyChannel.cs,CreateNonVerifyingChannel,The length of the statement  "	return new OpenIdRelyingPartyChannel (null' null' new OpenIdRelyingPartyMessageFactory ()' new RelyingPartySecuritySettings ()' true' new DefaultOpenIdHostFactories ()); " is 169.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyChannel,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyChannel.cs,InitializeBindingElements,The length of the statement  "	signingElement = nonVerifying ? null : new RelyingPartySigningBindingElement (new CryptoKeyStoreAsRelyingPartyAssociationStore (cryptoKeyStore ?? new MemoryCryptoKeyStore ())); " is 176.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyChannel,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyChannel.cs,InitializeBindingElements,The length of the statement  "	ErrorUtilities.VerifyOperation (!securitySettings.RejectUnsolicitedAssertions || requestNonceElement != null' OpenIdStrings.UnsolicitedAssertionRejectionRequiresNonceStore); " is 173.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyMessageFactory.cs,GetNewRequestMessage,The length of the statement  "		ErrorUtilities.VerifyProtocol (string.Equals (ns' Protocol.OpenId2Namespace' StringComparison.Ordinal)' MessagingStrings.UnexpectedMessagePartValue' Protocol.V20.openid.ns' ns); " is 177.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyMessageFactory.cs,GetNewRequestMessage,The length of the statement  "		if (string.Equals (mode' protocol.Args.Mode.cancel) || (string.Equals (mode' protocol.Args.Mode.setup_needed) && (protocol.Version.Major >= 2 || fields.ContainsKey (protocol.openid.user_setup_url)))) { " is 201.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyMessageFactory.cs,GetNewRequestMessage,The length of the statement  "				ErrorUtilities.VerifyProtocol (!fields.ContainsKey (protocol.openid.claimed_id)' OpenIdStrings.IdentityAndClaimedIdentifierMustBeBothPresentOrAbsent); " is 150.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyMessageFactory.cs,GetNewResponseMessage,The length of the statement  "		ErrorUtilities.VerifyProtocol (string.Equals (ns' Protocol.OpenId2Namespace' StringComparison.Ordinal)' MessagingStrings.UnexpectedMessagePartValue' Protocol.V20.openidnp.ns' ns); " is 179.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,RelyingPartySecurityOptions,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\RelyingPartySecurityOptions.cs,ProcessIncomingMessageAsync,The length of the statement  "		ErrorUtilities.VerifyProtocol (!this.securitySettings.RejectDelegatingIdentifiers || positiveAssertion.LocalIdentifier == positiveAssertion.ClaimedIdentifier' OpenIdStrings.DelegatingIdentifiersNotAllowed); " is 206.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,RelyingPartySigningBindingElement,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\RelyingPartySigningBindingElement.cs,VerifySignatureByUnrecognizedHandleAsync,The length of the statement  "	var checkSignatureResponse = await this.Channel.RequestAsync<CheckAuthenticationResponse> (checkSignatureRequest' cancellationToken); " is 133.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,RelyingPartySigningBindingElement,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\RelyingPartySigningBindingElement.cs,VerifySignatureByUnrecognizedHandleAsync,The length of the statement  "			this.rpAssociations.RemoveAssociation (indirectSignedResponse.ProviderEndpoint' checkSignatureResponse.InvalidateHandle); " is 121.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,ReturnToNonceBindingElement,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\ReturnToNonceBindingElement.cs,ProcessIncomingMessageAsync,The length of the statement  "		ErrorUtilities.VerifyProtocol (nonceValue != null && response.ReturnToParametersSignatureValidated' this.securitySettings.RejectUnsolicitedAssertions ? OpenIdStrings.UnsolicitedAssertionsNotAllowed : OpenIdStrings.UnsolicitedAssertionsNotAllowedFrom1xOPs); " is 256.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,ReturnToNonceBindingElement,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\ReturnToNonceBindingElement.cs,ProcessIncomingMessageAsync,The length of the statement  "			Logger.OpenId.ErrorFormat ("Replayed nonce detected ({0} {1}).  Rejecting message."' replayResponse.Nonce' replayResponse.UtcCreationDate); " is 139.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,ReturnToNonceBindingElement,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\ReturnToNonceBindingElement.cs,UseRequestNonce,The length of the statement  "	return message != null && (this.securitySettings.RejectUnsolicitedAssertions || (message.Version.Major < 2 && this.securitySettings.ProtectDownlevelReplayAttacks)); " is 164.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty.Extensions,ExtensionsInteropHelper,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Extensions\ExtensionsInteropHelper.cs,SpreadSregToAX,The length of the statement  "		Logger.OpenId.Debug ("Skipping generation of AX request because the Identifier advertises the Provider supports the Sreg extension."); " is 134.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty.Extensions,ExtensionsInteropHelper,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Extensions\ExtensionsInteropHelper.cs,SpreadSregToAX,The length of the statement  "		Logger.OpenId.Debug ("Detected OP support for AX but not for Sreg.  Removing Sreg extension request and using AX instead."); " is 124.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty.Extensions,ExtensionsInteropHelper,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Extensions\ExtensionsInteropHelper.cs,SpreadSregToAX,The length of the statement  "		OpenIdExtensionsInteropHelper.FetchAttribute (ax' format' WellKnownAttributes.BirthDate.WholeBirthDate' sreg.BirthDate); " is 120.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty.Extensions,ExtensionsInteropHelper,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Extensions\ExtensionsInteropHelper.cs,SpreadSregToAX,The length of the statement  "		OpenIdExtensionsInteropHelper.FetchAttribute (ax' format' WellKnownAttributes.Contact.HomeAddress.Country' sreg.Country); " is 121.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty.Extensions,ExtensionsInteropHelper,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Extensions\ExtensionsInteropHelper.cs,SpreadSregToAX,The length of the statement  "		OpenIdExtensionsInteropHelper.FetchAttribute (ax' format' WellKnownAttributes.Contact.HomeAddress.PostalCode' sreg.PostalCode); " is 127.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty.Extensions,ExtensionsInteropHelper,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Extensions\ExtensionsInteropHelper.cs,GetAttributeValue,The length of the statement  "	return OpenIdExtensionsInteropHelper.ForEachFormat (formats).Select (format => fetchResponse.GetAttributeValue (OpenIdExtensionsInteropHelper.TransformAXFormat (typeUri' format))).FirstOrDefault (s => s != null); " is 212.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,DiscoverAsync,The length of the statement  "				Logger.Yadis.ErrorFormat ("Error while parsing XRDS document at {0} pointed to by host-meta: {1}"' response.Result.RequestMessage.RequestUri' ex); " is 146.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,ValidateXmlDSigAsync,The length of the statement  "	ErrorUtilities.VerifyProtocol (signedInfoNode.SelectSingleNode ("ds:CanonicalizationMethod[@Algorithm='http://docs.oasis-open.org/xri/xrd/2009/01#canonicalize-raw-octets']"' document.XmlNamespaceResolver) != null' OpenIdStrings.UnsupportedCanonicalizationMethod); " is 263.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,ValidateXmlDSigAsync,The length of the statement  "	ErrorUtilities.VerifyProtocol (signedInfoNode.SelectSingleNode ("ds:SignatureMethod[@Algorithm='http://www.w3.org/2000/09/xmldsig#rsa-sha1']"' document.XmlNamespaceResolver) != null' OpenIdStrings.UnsupportedSignatureMethod); " is 225.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,ValidateXmlDSigAsync,The length of the statement  "	var certs = certNodes.Cast<XPathNavigator> ().Select (n => new X509Certificate2 (Convert.FromBase64String (n.Value.Trim ()))).ToList (); " is 136.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,ValidateXmlDSigAsync,The length of the statement  "	ErrorUtilities.VerifyProtocol (string.Equals (hostName' signingHost' StringComparison.OrdinalIgnoreCase)' OpenIdStrings.MisdirectedSigningCertificate' hostName' signingHost); " is 174.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,VerifyCertChain,The length of the statement  "		ErrorUtilities.ThrowProtocol (string.Format (CultureInfo.CurrentCulture' OpenIdStrings.X509CertificateNotTrusted + " {0}"' string.Join ("' "' chain.ChainStatus.Select (status => status.StatusInformation).ToArray ()))); " is 218.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,VerifyCertificateChain,The length of the statement  "			Logger.Yadis.Warn ("Signing certificate verification failed and we have insufficient code access security permissions to perform certificate chain validation."); " is 161.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,GetExternalServicesAsync,The length of the statement  "		var nextAuthorityNode = serviceElement.Node.SelectSingleNode ("google:NextAuthority"' serviceElement.XmlNamespaceResolver); " is 123.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,GetExternalServicesAsync,The length of the statement  "			Uri externalLocation = new Uri (templateNode.Value.Trim ().Replace ("{%uri}"' Uri.EscapeDataString (identifier.Uri.AbsoluteUri))); " is 130.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,GetExternalServicesAsync,The length of the statement  "				Logger.Yadis.WarnFormat ("HTTP GET error while retrieving described-by XRDS document {0}: {1}"' externalLocation.AbsoluteUri' ex); " is 130.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,GetXrdsResponseAsync,The length of the statement  "	using (var httpClient = this.HostFactories.CreateHttpClient (identifier.IsDiscoverySecureEndToEnd' Yadis.IdentifierDiscoveryCachePolicy)) { " is 139.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,GetXrdsResponseAsync,The length of the statement  "				Logger.Yadis.WarnFormat ("Host-meta pointed to XRDS at {0}' but Content-Type at that URL was unexpected value '{1}'."' xrdsLocation' response.Content.Headers.ContentType); " is 171.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,GetXrdsLocationAsync,The length of the statement  "				Logger.Yadis.InfoFormat ("Found link to XRDS at {0} in host-meta document {1}."' location' hostMetaResponse.Result.RequestMessage.RequestUri); " is 142.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,GetXrdsLocationAsync,The length of the statement  "		Logger.Yadis.WarnFormat ("Could not find link to XRDS in host-meta document: {0}"' hostMetaResponse.Result.RequestMessage.RequestUri); " is 134.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,GetHostMetaAsync,The length of the statement  "	using (var httpClient = this.HostFactories.CreateHttpClient (identifier.IsDiscoverySecureEndToEnd' Yadis.IdentifierDiscoveryCachePolicy)) { " is 139.
Long Statement,DotNetOpenAuth.OpenId,HostMetaDiscoveryService,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\HostMetaDiscoveryService.cs,GetHostMetaLocations,The length of the statement  "	localHostMetaBuilder.Scheme = identifier.IsDiscoverySecureEndToEnd || identifier.Uri.IsTransportSecure () ? Uri.UriSchemeHttps : Uri.UriSchemeHttp; " is 147.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateDiffieHellmanRelyingPartyResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\Messages\AssociateDiffieHellmanRelyingPartyResponse.cs,CreateAssociationAtRelyingParty,The length of the statement  "	byte[] associationSecret = DiffieHellmanUtilities.SHAHashXorSecret (hasher' diffieHellmanRequest.Algorithm' this.DiffieHellmanServerPublic' this.EncodedMacKey); " is 160.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateDiffieHellmanRelyingPartyResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\Messages\AssociateDiffieHellmanRelyingPartyResponse.cs,CreateAssociationAtRelyingParty,The length of the statement  "	Association association = HmacShaAssociation.Create (Protocol' this.AssociationType' this.AssociationHandle' associationSecret' TimeSpan.FromSeconds (this.ExpiresIn)); " is 167.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateRequestRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\Messages\AssociateRequestRelyingParty.cs,Create,The length of the statement  "	if (!HmacShaAssociation.TryFindBestAssociation (Protocol.Lookup (provider.Version)' true' securityRequirements' useDiffieHellman' out associationType' out sessionType)) { " is 170.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateRequestRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\Messages\AssociateRequestRelyingParty.cs,Create,The length of the statement  "		Logger.OpenId.Warn ("Security requirements and protocol combination knock out all possible association types.  Dumb mode forced."); " is 131.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateUnencryptedResponseRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\Messages\AssociateUnencryptedResponseRelyingParty.cs,CreateAssociationAtRelyingParty,The length of the statement  "	Association association = HmacShaAssociation.Create (Protocol' this.AssociationType' this.AssociationHandle' this.MacKey' TimeSpan.FromSeconds (this.ExpiresIn)); " is 161.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AssociationManager,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AssociationManager.cs,CreateNewAssociationAsync,The length of the statement  "		Logger.OpenId.ErrorFormat ("VerificationException occurred while trying to create an association with {0}.  {1}"' provider.Uri' ex); " is 132.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AssociationManager,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AssociationManager.cs,CreateNewAssociationAsync,The length of the statement  "				Logger.OpenId.Debug ("Provider rejected an association request and gave no suggestion as to an alternative association type.  Giving up."); " is 139.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AssociationManager,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AssociationManager.cs,CreateNewAssociationAsync,The length of the statement  "			if (!this.securitySettings.IsAssociationInPermittedRange (Protocol.Lookup (provider.Version)' associateUnsuccessfulResponse.AssociationType)) { " is 143.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AssociationManager,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AssociationManager.cs,CreateNewAssociationAsync,The length of the statement  "				Logger.OpenId.DebugFormat ("Provider rejected an association request and suggested '{0}' as an association to try' which this Relying Party does not support.  Giving up."' associateUnsuccessfulResponse.AssociationType); " is 219.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AssociationManager,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AssociationManager.cs,CreateNewAssociationAsync,The length of the statement  "				Logger.OpenId.Debug ("Unable to agree on an association type with the Provider in the allowed number of retries.  Giving up."); " is 127.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AssociationManager,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AssociationManager.cs,CreateNewAssociationAsync,The length of the statement  "			ErrorUtilities.VerifyProtocol (HmacShaAssociation.IsDHSessionCompatible (protocol' associateUnsuccessfulResponse.AssociationType' associateUnsuccessfulResponse.SessionType)' OpenIdStrings.IncompatibleAssociationAndSessionTypes' associateUnsuccessfulResponse.AssociationType' associateUnsuccessfulResponse.SessionType); " is 318.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AssociationManager,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AssociationManager.cs,CreateNewAssociationAsync,The length of the statement  "			associateRequest = AssociateRequestRelyingParty.Create (this.securitySettings' provider' associateUnsuccessfulResponse.AssociationType' associateUnsuccessfulResponse.SessionType); " is 179.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AssociationManager,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AssociationManager.cs,CreateNewAssociationAsync,The length of the statement  "	Logger.OpenId.ErrorFormat ("An error occurred while trying to create an association with {0}.  {1}"' provider.Uri' exception); " is 126.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,AddCallbackArguments,The length of the statement  "	ErrorUtilities.VerifyOperation (this.RelyingParty.CanSignCallbackArguments' OpenIdStrings.CallbackArgumentsRequireSecretStore' typeof(IRelyingPartyAssociationStore).Name' typeof(OpenIdRelyingParty).Name); " is 204.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,AddCallbackArguments,The length of the statement  "	ErrorUtilities.VerifyOperation (this.RelyingParty.CanSignCallbackArguments' OpenIdStrings.CallbackArgumentsRequireSecretStore' typeof(IRelyingPartyAssociationStore).Name' typeof(OpenIdRelyingParty).Name); " is 204.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,SetCallbackArgument,The length of the statement  "	ErrorUtilities.VerifyOperation (this.RelyingParty.CanSignCallbackArguments' OpenIdStrings.CallbackArgumentsRequireSecretStore' typeof(IRelyingPartyAssociationStore).Name' typeof(OpenIdRelyingParty).Name); " is 204.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateAsync,The length of the statement  "	if (returnTo.Path.StartsWith (realm.AbsolutePath' StringComparison.OrdinalIgnoreCase) && !returnTo.Path.StartsWith (realm.AbsolutePath' StringComparison.Ordinal)) { " is 164.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateAsync,The length of the statement  "			Logger.OpenId.WarnFormat ("RequireSsl mode is on' so discovery on insecure identifier {0} will yield no results."' userSuppliedIdentifier); " is 139.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateAsync,The length of the statement  "				Logger.OpenId.WarnFormat ("OpenID argument \"{0}\" found in return_to URL.  This can corrupt an OpenID response."' key); " is 120.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateAsync,The length of the statement  "		var opIdentifiers = results.Where (result => result.ClaimedIdentifier == result.Protocol.ClaimedIdentifierForOPIdentifier).CacheGeneratedResults (); " is 148.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateAsync,The length of the statement  "		var claimedIdentifiers = results.Where (result => result.ClaimedIdentifier != result.Protocol.ClaimedIdentifierForOPIdentifier); " is 128.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateAsync,The length of the statement  "	return await CreateInternalAsync (userSuppliedIdentifier' relyingParty' realm' returnToUrl' serviceEndpoints' createNewAssociationsAsNeeded' cancellationToken); " is 160.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateInternalAsync,The length of the statement  "	ErrorUtilities.VerifyOperation (!relyingParty.SecuritySettings.RequireAssociation || relyingParty.AssociationManager.HasAssociationStore' OpenIdStrings.AssociationStoreRequired); " is 178.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateInternalAsync,The length of the statement  "		Logger.OpenId.DebugFormat ("Creating authentication request for user supplied Identifier: {0}"' userSuppliedIdentifier); " is 120.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateInternalAsync,The length of the statement  "			Association association = createNewAssociationsAsNeeded ? await relyingParty.AssociationManager.GetOrCreateAssociationAsync (endpoint' cancellationToken) : relyingParty.AssociationManager.GetExistingAssociation (endpoint); " is 222.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateInternalAsync,The length of the statement  "				Logger.OpenId.WarnFormat ("Failed to create association with {0}.  Skipping to next endpoint."' endpoint.ProviderEndpoint); " is 123.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateInternalAsync,The length of the statement  "		return new KeyValuePair<IdentifierDiscoveryResult' AuthenticationRequest> (endpoint' new AuthenticationRequest (endpoint' realm' returnToUrl' relyingParty)); " is 157.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateInternalAsync,The length of the statement  "			Logger.OpenId.Warn ("Associations could not be formed with some Providers.  Security settings require shared associations for authentication requests so these will be skipped."); " is 178.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateInternalAsync,The length of the statement  "				Logger.OpenId.DebugFormat ("Creating authentication request for user supplied Identifier: {0} at endpoint: {1}"' userSuppliedIdentifier' endpoint.ProviderEndpoint.AbsoluteUri); " is 176.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,FilterAndSortEndpoints,The length of the statement  "		Logger.Yadis.DebugFormat ("Some endpoints were filtered out.  Total endpoints remaining: {0}"' filteredEndpoints.Count); " is 120.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateRequestMessageAsync,The length of the statement  "		CheckIdRequest authRequest = new CheckIdRequest (this.DiscoveryResult.Version' this.DiscoveryResult.ProviderEndpoint' this.Mode); " is 129.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateRequestMessageAsync,The length of the statement  "	if (this.DiscoveryResult.UserSuppliedIdentifier != null && OpenIdElement.Configuration.RelyingParty.PreserveUserSuppliedIdentifier) { " is 133.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,CreateRequestMessageAsync,The length of the statement  "		request.AddReturnToArguments (UserSuppliedIdentifierParameterName' this.DiscoveryResult.UserSuppliedIdentifier.OriginalString); " is 127.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,AuthenticationRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\AuthenticationRequest.cs,GetAssociationAsync,The length of the statement  "		association = await this.RelyingParty.AssociationManager.GetOrCreateAssociationAsync (this.DiscoveryResult' cancellationToken); " is 127.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,NegativeAuthenticationResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\NegativeAuthenticationResponse.cs,GetUntrustedExtension,The length of the statement  "	return this.response.Extensions.OfType<IOpenIdMessageExtension> ().Where (ext => extensionType.IsInstanceOfType (ext)).FirstOrDefault (); " is 137.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,PositiveAnonymousResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\PositiveAnonymousResponse.cs,GetCallbackArgument,The length of the statement  "		Logger.OpenId.WarnFormat (OpenIdStrings.CallbackArgumentsRequireSecretStore' typeof(IRelyingPartyAssociationStore).Name' typeof(OpenIdRelyingParty).Name); " is 154.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,PositiveAnonymousResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\PositiveAnonymousResponse.cs,GetCallbackArguments,The length of the statement  "		Logger.OpenId.WarnFormat (OpenIdStrings.CallbackArgumentsRequireSecretStore' typeof(IRelyingPartyAssociationStore).Name' typeof(OpenIdRelyingParty).Name); " is 154.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,PositiveAnonymousResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\PositiveAnonymousResponse.cs,GetUntrustedCallbackArguments,The length of the statement  "	foreach (string key in this.response.GetReturnToParameterNames ().Where (key => !OpenIdRelyingParty.IsOpenIdSupportingParameter (key))) { " is 137.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,PositiveAnonymousResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\PositiveAnonymousResponse.cs,GetExtension,The length of the statement  "	return this.response.SignedExtensions.OfType<IOpenIdMessageExtension> ().Where (ext => extensionType.IsInstanceOfType (ext)).FirstOrDefault (); " is 143.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,PositiveAnonymousResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\PositiveAnonymousResponse.cs,GetUntrustedExtension,The length of the statement  "	return this.response.Extensions.OfType<IOpenIdMessageExtension> ().Where (ext => extensionType.IsInstanceOfType (ext)).FirstOrDefault (); " is 137.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,PositiveAuthenticationResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\PositiveAuthenticationResponse.cs,VerifyDiscoveryMatchesAssertionAsync,The length of the statement  "			Logger.OpenId.ErrorFormat ("This site is configured to accept only SSL-protected OpenIDs' but {0} was asserted and must be rejected."' this.Response.ClaimedIdentifier); " is 168.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,PositiveAuthenticationResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\PositiveAuthenticationResponse.cs,VerifyDiscoveryMatchesAssertionAsync,The length of the statement  "			ErrorUtilities.ThrowProtocol (OpenIdStrings.RequireSslNotSatisfiedByAssertedClaimedId' this.Response.ClaimedIdentifier); " is 120.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,PositiveAuthenticationResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\PositiveAuthenticationResponse.cs,VerifyDiscoveryMatchesAssertionAsync,The length of the statement  "		ErrorUtilities.VerifyProtocol (relyingParty.SecuritySettings.AllowApproximateIdentifierDiscovery' OpenIdStrings.ClaimedIdentifierDefiesDotNetNormalization); " is 156.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,PositiveAuthenticationResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\PositiveAuthenticationResponse.cs,VerifyDiscoveryMatchesAssertionAsync,The length of the statement  "		Logger.OpenId.WarnFormat ("Positive assertion for claimed identifier {0} cannot be precisely verified under partial trust hosting due to .NET limitation.  An approximate verification will be attempted."' claimedId); " is 215.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,PositiveAuthenticationResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\PositiveAuthenticationResponse.cs,VerifyDiscoveryMatchesAssertionAsync,The length of the statement  "	ErrorUtilities.VerifyProtocol (discoveryResults.Contains (this.Endpoint)' OpenIdStrings.IssuedAssertionFailsIdentifierDiscovery' this.Endpoint' discoveryResults.ToStringDeferred (true)); " is 186.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,OpenIdRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\OpenIdRelyingParty.cs,GetHttpApplicationStore,The length of the statement  "		ErrorUtilities.VerifyOperation (HttpContext.Current != null' Strings.StoreRequiredWhenNoHttpContextAvailable' typeof(ICryptoKeyAndNonceStore).Name); " is 148.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,OpenIdRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\OpenIdRelyingParty.cs,CreateRequestAsync,The length of the statement  "		var authenticationRequests = await this.CreateRequestsAsync (userSuppliedIdentifier' requestContext' cancellationToken); " is 120.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,OpenIdRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\OpenIdRelyingParty.cs,CreateRequestsAsync,The length of the statement  "	var requests = await AuthenticationRequest.CreateAsync (userSuppliedIdentifier' this' realm' returnToUrl' true' cancellationToken); " is 131.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,OpenIdRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\OpenIdRelyingParty.cs,CreateRequestsAsync,The length of the statement  "	RequiresEx.ValidState (requestContext != null || (HttpContext.Current != null && HttpContext.Current.Request != null)' MessagingStrings.HttpContextRequired); " is 157.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,OpenIdRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\OpenIdRelyingParty.cs,GetResponseAsync,The length of the statement  "			ErrorUtilities.VerifyProtocol (this.FilterEndpoint (providerEndpoint)' OpenIdStrings.PositiveAssertionFromNonQualifiedProvider' providerEndpoint.Uri); " is 150.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,OpenIdRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\OpenIdRelyingParty.cs,GetResponseAsync,The length of the statement  "			Logger.OpenId.WarnFormat ("Received unexpected message type {0} when expecting an assertion message."' message.GetType ().Name); " is 128.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,OpenIdRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\OpenIdRelyingParty.cs,RegisterClientScriptExtension,The length of the statement  "	ErrorUtilities.VerifyArgumentNamed (!this.clientScriptExtensions.ContainsValue (propertyName)' "propertyName"' OpenIdStrings.ClientScriptExtensionPropertyNameCollision' propertyName); " is 183.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,OpenIdRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\OpenIdRelyingParty.cs,IsOpenIdSupportingParameter,The length of the statement  "	return parameterName.StartsWith (protocol.openid.Prefix' StringComparison.OrdinalIgnoreCase) || parameterName.StartsWith (OpenIdUtilities.CustomParameterPrefix' StringComparison.Ordinal); " is 187.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,OpenIdRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\OpenIdRelyingParty.cs,ProcessResponseFromPopupAsync,The length of the statement  "	Logger.Controls.DebugFormat ("An authentication response was found in a popup window or iframe using a non-verifying RP with status: {0}"' authResponse.Status); " is 160.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,OpenIdRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\OpenIdRelyingParty.cs,FilterEndpoint,The length of the statement  "			Logger.OpenId.InfoFormat ("Filtering out OP endpoint {0} because it is not on the exclusive trusted provider whitelist."' endpoint.Uri.AbsoluteUri); " is 148.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty,OpenIdRelyingParty,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\OpenIdRelyingParty.cs,FilterEndpoint,The length of the statement  "		Logger.OpenId.InfoFormat ("Filtering out OP endpoint {0} because it implements OpenID {1} but this relying party requires OpenID {2} or later."' endpoint.Uri.AbsoluteUri' endpoint.Version' Protocol.Lookup (this.SecuritySettings.MinimumRequiredOpenIdVersion).Version); " is 267.
Long Statement,DotNetOpenAuth.OpenId.RelyingParty.Extensions.UI,UIUtilities,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Extensions\UIUtilities.cs,GetWindowPopupScriptAsync,The length of the statement  "	return string.Format (CultureInfo.InvariantCulture' "(window.showModalDialog ? window.showModalDialog({0}' {1}' 'status:0;resizable:1;scroll:1;center:1;dialogWidth:{2}px; dialogHeight:{3}') : window.open({0}' {1}' 'status=0'toolbar=0'location=1'resizable=1'scrollbars=1'left=' + ((screen.width - {2}) / 2) + ''top=' + ((screen.height - {3}) / 2) + ''width={2}'height={3}'));"' MessagingUtilities.GetSafeJavascriptValue (popupUrl.AbsoluteUri)' MessagingUtilities.GetSafeJavascriptValue (windowName)' OpenId.Extensions.UI.UIUtilities.PopupWidth' OpenId.Extensions.UI.UIUtilities.PopupHeight); " is 590.
Complex Conditional,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyMessageFactory.cs,GetNewRequestMessage,The conditional expression  "string.Equals (mode' protocol.Args.Mode.cancel) || (string.Equals (mode' protocol.Args.Mode.setup_needed) && (protocol.Version.Major >= 2 || fields.ContainsKey (protocol.openid.user_setup_url)))"  is complex.
Magic Number,DotNetOpenAuth.OpenId.RelyingParty.Behaviors,AXFetchAsSregTransform,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Behaviors\AXFetchAsSregTransform.cs,OnOutgoingAuthenticationRequest,The following statement contains a magic number: if (request.Provider.Version.Major >= 2) {  	request.SpreadSregToAX (this.AXFormats);  }  
Magic Number,DotNetOpenAuth.OpenId.RelyingParty.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Behaviors\GsaIcamProfile.cs,ApplySecuritySettings,The following statement contains a magic number: if (securitySettings.MaximumHashBitLength < 256) {  	securitySettings.MaximumHashBitLength = 256;  }  
Magic Number,DotNetOpenAuth.OpenId.RelyingParty.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Behaviors\GsaIcamProfile.cs,ApplySecuritySettings,The following statement contains a magic number: if (securitySettings.MaximumHashBitLength < 256) {  	securitySettings.MaximumHashBitLength = 256;  }  
Magic Number,DotNetOpenAuth.OpenId.RelyingParty.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\RelyingParty\Behaviors\GsaIcamProfile.cs,ApplySecuritySettings,The following statement contains a magic number: securitySettings.MaximumHashBitLength = 256;  
Magic Number,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyMessageFactory.cs,GetNewRequestMessage,The following statement contains a magic number: if (fields.TryGetValue (protocol.openid.mode' out mode)) {  	if (string.Equals (mode' protocol.Args.Mode.cancel) || (string.Equals (mode' protocol.Args.Mode.setup_needed) && (protocol.Version.Major >= 2 || fields.ContainsKey (protocol.openid.user_setup_url)))) {  		message = new NegativeAssertionResponse (protocol.Version' recipient.Location' mode);  	} else if (string.Equals (mode' protocol.Args.Mode.id_res)) {  		if (fields.ContainsKey (protocol.openid.identity)) {  			message = new PositiveAssertionResponse (protocol.Version' recipient.Location);  		} else {  			ErrorUtilities.VerifyProtocol (!fields.ContainsKey (protocol.openid.claimed_id)' OpenIdStrings.IdentityAndClaimedIdentifierMustBeBothPresentOrAbsent);  			message = new IndirectSignedResponse (protocol.Version' recipient.Location);  		}  	} else if (string.Equals (mode' protocol.Args.Mode.error)) {  		message = new IndirectErrorResponse (protocol.Version' recipient.Location);  	} else {  		ErrorUtilities.ThrowProtocol (MessagingStrings.UnexpectedMessagePartValue' protocol.openid.mode' mode);  	}  }  
Magic Number,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyMessageFactory.cs,GetNewRequestMessage,The following statement contains a magic number: if (string.Equals (mode' protocol.Args.Mode.cancel) || (string.Equals (mode' protocol.Args.Mode.setup_needed) && (protocol.Version.Major >= 2 || fields.ContainsKey (protocol.openid.user_setup_url)))) {  	message = new NegativeAssertionResponse (protocol.Version' recipient.Location' mode);  } else if (string.Equals (mode' protocol.Args.Mode.id_res)) {  	if (fields.ContainsKey (protocol.openid.identity)) {  		message = new PositiveAssertionResponse (protocol.Version' recipient.Location);  	} else {  		ErrorUtilities.VerifyProtocol (!fields.ContainsKey (protocol.openid.claimed_id)' OpenIdStrings.IdentityAndClaimedIdentifierMustBeBothPresentOrAbsent);  		message = new IndirectSignedResponse (protocol.Version' recipient.Location);  	}  } else if (string.Equals (mode' protocol.Args.Mode.error)) {  	message = new IndirectErrorResponse (protocol.Version' recipient.Location);  } else {  	ErrorUtilities.ThrowProtocol (MessagingStrings.UnexpectedMessagePartValue' protocol.openid.mode' mode);  }  
Magic Number,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyMessageFactory.cs,GetNewResponseMessage,The following statement contains a magic number: if (associateRequest != null) {  	if (protocol.Version.Major >= 2 && fields.ContainsKey (protocol.openidnp.error_code)) {  		// This is a special recognized error case that we create a special message for.  		message = new AssociateUnsuccessfulResponse (protocol.Version' associateRequest);  	} else if (message == null) {  		if (OpenIdUtilities.IsDiffieHellmanPresent) {  			var associateDiffieHellmanRequest = request as AssociateDiffieHellmanRequest;  			if (associateDiffieHellmanRequest != null) {  				message = new AssociateDiffieHellmanRelyingPartyResponse (protocol.Version' associateDiffieHellmanRequest);  			}  		}  		var associateUnencryptedRequest = request as AssociateUnencryptedRequest;  		if (associateUnencryptedRequest != null) {  			message = new AssociateUnencryptedResponseRelyingParty (protocol.Version' associateUnencryptedRequest);  		}  	}  }  
Magic Number,DotNetOpenAuth.OpenId.ChannelElements,OpenIdRelyingPartyMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\OpenIdRelyingPartyMessageFactory.cs,GetNewResponseMessage,The following statement contains a magic number: if (protocol.Version.Major >= 2 && fields.ContainsKey (protocol.openidnp.error_code)) {  	// This is a special recognized error case that we create a special message for.  	message = new AssociateUnsuccessfulResponse (protocol.Version' associateRequest);  } else if (message == null) {  	if (OpenIdUtilities.IsDiffieHellmanPresent) {  		var associateDiffieHellmanRequest = request as AssociateDiffieHellmanRequest;  		if (associateDiffieHellmanRequest != null) {  			message = new AssociateDiffieHellmanRelyingPartyResponse (protocol.Version' associateDiffieHellmanRequest);  		}  	}  	var associateUnencryptedRequest = request as AssociateUnencryptedRequest;  	if (associateUnencryptedRequest != null) {  		message = new AssociateUnencryptedResponseRelyingParty (protocol.Version' associateUnencryptedRequest);  	}  }  
Magic Number,DotNetOpenAuth.OpenId.ChannelElements,RelyingPartySigningBindingElement,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\RelyingPartySigningBindingElement.cs,VerifySignatureByUnrecognizedHandleAsync,The following statement contains a magic number: if (message.Version.Major >= 2) {  	protectionsApplied |= MessageProtections.ReplayProtection;  }  
Magic Number,DotNetOpenAuth.OpenId.ChannelElements,ReturnToNonceBindingElement,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.RelyingParty\OpenId\ChannelElements\ReturnToNonceBindingElement.cs,UseRequestNonce,The following statement contains a magic number: return message != null && (this.securitySettings.RejectUnsolicitedAssertions || (message.Version.Major < 2 && this.securitySettings.ProtectDownlevelReplayAttacks));  
