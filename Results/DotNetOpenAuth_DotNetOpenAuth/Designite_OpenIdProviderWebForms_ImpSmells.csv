Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OpenIdProviderWebForms.Code,ReadOnlyXmlMembershipProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Code\ReadOnlyXmlMembershipProvider.cs,Initialize,Cyclomatic complexity of the method is 8
Long Parameter List,OpenIdProviderWebForms.Code,ReadOnlyXmlMembershipProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Code\ReadOnlyXmlMembershipProvider.cs,CreateUser,The method has 8 parameters.
Long Statement,OpenIdProviderWebForms,access_token,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\access_token.ashx.cs,ProcessRequestAsync,The length of the statement  "	var request = await OAuthHybrid.ServiceProvider.ReadAccessTokenRequestAsync (new HttpRequestWrapper (context.Request)' context.Response.ClientDisconnectedToken); " is 161.
Long Statement,OpenIdProviderWebForms,access_token,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\access_token.ashx.cs,ProcessRequestAsync,The length of the statement  "	var httpResponseMessage = await OAuthHybrid.ServiceProvider.Channel.PrepareResponseAsync (response' context.Response.ClientDisconnectedToken); " is 142.
Long Statement,OpenIdProviderWebForms,decide,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\decide.aspx.cs,Page_Load,The length of the statement  "		this.relyingPartyVerificationResultLabel.Text = await ProviderEndpoint.PendingRequest.IsReturnUrlDiscoverableAsync (new DefaultOpenIdHostFactories ()) == RelyingPartyDiscoveryResult.Success ? "passed" : "failed"; " is 212.
Long Statement,OpenIdProviderWebForms,decide,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\decide.aspx.cs,Page_Load,The length of the statement  "			// check that the logged in user is the same as the user requesting authentication to the consumer. If not' then log them out. " is 126.
Long Statement,OpenIdProviderWebForms,decide,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\decide.aspx.cs,Page_Load,The length of the statement  "			if (!string.Equals (User.Identity.Name' Code.Util.ExtractUserName (ProviderEndpoint.PendingAuthenticationRequest.LocalIdentifier)' StringComparison.OrdinalIgnoreCase)) { " is 169.
Long Statement,OpenIdProviderWebForms,decide,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\decide.aspx.cs,Yes_Click,The length of the statement  "		Debug.Assert (ProviderEndpoint.PendingRequest.IsResponseReady' "Setting authentication should be all that's necessary."); " is 121.
Long Statement,OpenIdProviderWebForms,decide,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\decide.aspx.cs,No_Click,The length of the statement  "		Debug.Assert (ProviderEndpoint.PendingRequest.IsResponseReady' "Setting authentication should be all that's necessary."); " is 121.
Long Statement,OpenIdProviderWebForms,_default,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Default.aspx.cs,SendAssertionAsync,The length of the statement  "		var response = await op.PrepareUnsolicitedAssertionAsync (providerEndpoint' rpSite' Util.BuildIdentityUrl ()' Util.BuildIdentityUrl ()); " is 136.
Long Statement,OpenIdProviderWebForms,Global,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Global.asax.cs,Application_Error,The length of the statement  "	Logger.ErrorFormat ("An unhandled exception was raised. Details follow: {0}"' HttpContext.Current.Server.GetLastError ()); " is 122.
Long Statement,OpenIdProviderWebForms,login,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\login.aspx.cs,Page_Load,The length of the statement  "		if (ProviderEndpoint.PendingAuthenticationRequest != null && !ProviderEndpoint.PendingAuthenticationRequest.IsDirectedIdentity) { " is 129.
Long Statement,OpenIdProviderWebForms,login,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\login.aspx.cs,TryVerifyYubikeyAndGetUsername,The length of the statement  "	var yubikey = new YubikeyRelyingParty (int.Parse (ConfigurationManager.AppSettings ["YubicoAPIKey"]' CultureInfo.InvariantCulture)); " is 132.
Long Statement,OpenIdProviderWebForms,Provider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Provider.ashx.cs,ProcessRequestAsync,The length of the statement  "	IRequest request = await providerEndpoint.Provider.GetRequestAsync (new HttpRequestWrapper (context.Request)' context.Response.ClientDisconnectedToken); " is 152.
Long Statement,OpenIdProviderWebForms,Provider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Provider.ashx.cs,ProcessRequestAsync,The length of the statement  "			var response = await providerEndpoint.Provider.PrepareResponseAsync (request' context.Response.ClientDisconnectedToken); " is 120.
Long Statement,OpenIdProviderWebForms.Code,CustomStore,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Code\CustomStore.cs,GetKeys,The length of the statement  "	string filter = string.Format (CultureInfo.InvariantCulture' "{0} = '{1}'"' dataSet.CryptoKey.BucketColumn.ColumnName' value); " is 126.
Long Statement,OpenIdProviderWebForms.Code,CustomStoreDataSet,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Code\CustomStoreDataSet.Designer.cs,GetTypedDataSetSchema,The length of the statement  "			for (global::System.Collections.IEnumerator schemas = xs.Schemas (dsSchema.TargetNamespace).GetEnumerator (); schemas.MoveNext ();) { " is 133.
Long Statement,OpenIdProviderWebForms.Code,ReadOnlyXmlMembershipProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Code\ReadOnlyXmlMembershipProvider.cs,Initialize,The length of the statement  "	string fullyQualifiedPath = VirtualPathUtility.Combine (VirtualPathUtility.AppendTrailingSlash (HttpRuntime.AppDomainAppVirtualPath)' path); " is 140.
Long Statement,OpenIdProviderWebForms.Code,Util,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Code\Util.cs,BuildIdentityUrl,The length of the statement  "	return new Uri (HttpContext.Current.Request.Url' HttpContext.Current.Response.ApplyAppPathModifier ("~/user.aspx/" + username)); " is 128.
Magic Number,OpenIdProviderWebForms.Code,ReadOnlyXmlMembershipProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Code\ReadOnlyXmlMembershipProvider.cs,ReadMembershipDataStore,The following statement contains a magic number: lock (this) {  	if (this.users == null) {  		this.users = new Dictionary<string' MembershipUser> (16' StringComparer.InvariantCultureIgnoreCase);  		XmlDocument doc = new XmlDocument ();  		doc.Load (this.xmlFileName);  		XmlNodeList nodes = doc.GetElementsByTagName ("User");  		foreach (XmlNode node in nodes) {  			MembershipUser user = new MembershipUser (Name' // Provider name  			node ["UserName"].InnerText' // Username  			null' // providerUserKey  			null' // Email  			string.Empty' // passwordQuestion  			node ["Password"].InnerText' // Comment  			true' // isApproved  			false' // isLockedOut  			DateTime.Now' // creationDate  			DateTime.Now' // lastLoginDate  			DateTime.Now' // lastActivityDate  			DateTime.Now' // lastPasswordChangedDate  			new DateTime (1980' 1' 1));  			// lastLockoutDate  			this.users.Add (user.UserName' user);  		}  	}  }  
Magic Number,OpenIdProviderWebForms.Code,ReadOnlyXmlMembershipProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Code\ReadOnlyXmlMembershipProvider.cs,ReadMembershipDataStore,The following statement contains a magic number: lock (this) {  	if (this.users == null) {  		this.users = new Dictionary<string' MembershipUser> (16' StringComparer.InvariantCultureIgnoreCase);  		XmlDocument doc = new XmlDocument ();  		doc.Load (this.xmlFileName);  		XmlNodeList nodes = doc.GetElementsByTagName ("User");  		foreach (XmlNode node in nodes) {  			MembershipUser user = new MembershipUser (Name' // Provider name  			node ["UserName"].InnerText' // Username  			null' // providerUserKey  			null' // Email  			string.Empty' // passwordQuestion  			node ["Password"].InnerText' // Comment  			true' // isApproved  			false' // isLockedOut  			DateTime.Now' // creationDate  			DateTime.Now' // lastLoginDate  			DateTime.Now' // lastActivityDate  			DateTime.Now' // lastPasswordChangedDate  			new DateTime (1980' 1' 1));  			// lastLockoutDate  			this.users.Add (user.UserName' user);  		}  	}  }  
Magic Number,OpenIdProviderWebForms.Code,ReadOnlyXmlMembershipProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Code\ReadOnlyXmlMembershipProvider.cs,ReadMembershipDataStore,The following statement contains a magic number: if (this.users == null) {  	this.users = new Dictionary<string' MembershipUser> (16' StringComparer.InvariantCultureIgnoreCase);  	XmlDocument doc = new XmlDocument ();  	doc.Load (this.xmlFileName);  	XmlNodeList nodes = doc.GetElementsByTagName ("User");  	foreach (XmlNode node in nodes) {  		MembershipUser user = new MembershipUser (Name' // Provider name  		node ["UserName"].InnerText' // Username  		null' // providerUserKey  		null' // Email  		string.Empty' // passwordQuestion  		node ["Password"].InnerText' // Comment  		true' // isApproved  		false' // isLockedOut  		DateTime.Now' // creationDate  		DateTime.Now' // lastLoginDate  		DateTime.Now' // lastActivityDate  		DateTime.Now' // lastPasswordChangedDate  		new DateTime (1980' 1' 1));  		// lastLockoutDate  		this.users.Add (user.UserName' user);  	}  }  
Magic Number,OpenIdProviderWebForms.Code,ReadOnlyXmlMembershipProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Code\ReadOnlyXmlMembershipProvider.cs,ReadMembershipDataStore,The following statement contains a magic number: if (this.users == null) {  	this.users = new Dictionary<string' MembershipUser> (16' StringComparer.InvariantCultureIgnoreCase);  	XmlDocument doc = new XmlDocument ();  	doc.Load (this.xmlFileName);  	XmlNodeList nodes = doc.GetElementsByTagName ("User");  	foreach (XmlNode node in nodes) {  		MembershipUser user = new MembershipUser (Name' // Provider name  		node ["UserName"].InnerText' // Username  		null' // providerUserKey  		null' // Email  		string.Empty' // passwordQuestion  		node ["Password"].InnerText' // Comment  		true' // isApproved  		false' // isLockedOut  		DateTime.Now' // creationDate  		DateTime.Now' // lastLoginDate  		DateTime.Now' // lastActivityDate  		DateTime.Now' // lastPasswordChangedDate  		new DateTime (1980' 1' 1));  		// lastLockoutDate  		this.users.Add (user.UserName' user);  	}  }  
Magic Number,OpenIdProviderWebForms.Code,ReadOnlyXmlMembershipProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Code\ReadOnlyXmlMembershipProvider.cs,ReadMembershipDataStore,The following statement contains a magic number: this.users = new Dictionary<string' MembershipUser> (16' StringComparer.InvariantCultureIgnoreCase);  
Magic Number,OpenIdProviderWebForms.Code,ReadOnlyXmlMembershipProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OpenIdProviderWebForms\Code\ReadOnlyXmlMembershipProvider.cs,ReadMembershipDataStore,The following statement contains a magic number: foreach (XmlNode node in nodes) {  	MembershipUser user = new MembershipUser (Name' // Provider name  	node ["UserName"].InnerText' // Username  	null' // providerUserKey  	null' // Email  	string.Empty' // passwordQuestion  	node ["Password"].InnerText' // Comment  	true' // isApproved  	false' // isLockedOut  	DateTime.Now' // creationDate  	DateTime.Now' // lastLoginDate  	DateTime.Now' // lastActivityDate  	DateTime.Now' // lastPasswordChangedDate  	new DateTime (1980' 1' 1));  	// lastLockoutDate  	this.users.Add (user.UserName' user);  }  
