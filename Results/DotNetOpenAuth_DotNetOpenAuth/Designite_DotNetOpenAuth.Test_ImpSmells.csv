Implementation smell,Namespace,Class,File,Method,Description
Long Method,DotNetOpenAuth.Test.OpenId,AuthenticationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AuthenticationTests.cs,ParameterizedAuthenticationTestAsync,The method has 133 lines of code.
Long Method,DotNetOpenAuth.Test.OpenId.DiscoveryServices,XriDiscoveryProxyServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\XriDiscoveryProxyServiceTests.cs,DiscoverCommunityInameCanonicalIDs,The method has 228 lines of code.
Long Parameter List,DotNetOpenAuth.Test,TestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\TestBase.cs,MeasurePerformance,The method has 5 parameters. Parameters: action' maximumAllowedUnitTime' samples' iterations' name
Long Parameter List,DotNetOpenAuth.Test.Mocks,MockHttpRequest,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Mocks\MockHttpRequest.cs,RegisterMockResponse,The method has 5 parameters. Parameters: test' requestUri' responseUri' contentType' content
Long Parameter List,DotNetOpenAuth.Test.Mocks,MockHttpRequest,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Mocks\MockHttpRequest.cs,RegisterMockResponse,The method has 6 parameters. Parameters: test' requestUri' responseUri' contentType' headers' content
Long Parameter List,DotNetOpenAuth.Test.OpenId,AuthenticationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AuthenticationTests.cs,ParameterizedAuthenticationTestAsync,The method has 6 parameters. Parameters: protocol' statelessRP' sharedAssociation' positive' immediate' tamper
Long Parameter List,DotNetOpenAuth.Test.OpenId,OpenIdTestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\OpenIdTestBase.cs,GetServiceEndpoint,The method has 5 parameters. Parameters: user' providerVersion' servicePriority' useSsl' delegating
Long Parameter List,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DiscoverAsync,The method has 6 parameters. Parameters: url' version' expectedLocalId' providerEndpoint' expectSreg' useRedirect
Long Parameter List,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DiscoverAsync,The method has 7 parameters. Parameters: url' version' expectedLocalId' providerEndpoint' expectSreg' useRedirect' headers
Long Parameter List,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DiscoverXrdsAsync,The method has 5 parameters. Parameters: page' version' expectedLocalId' providerEndpoint' headers
Long Parameter List,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DiscoverHtmlAsync,The method has 5 parameters. Parameters: page' version' expectedLocalId' providerEndpoint' useRedirect
Long Identifier,DotNetOpenAuth.Test.Messaging.Reflection,MultiVersionMessage,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessageDescriptionTests.cs,,The length of the parameter OptionalIn10RequiredIn25AndLater is 32.
Long Identifier,DotNetOpenAuth.Test.Mocks,MockHttpRequest,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Mocks\MockHttpRequest.cs,RegisterMockXrdsResponse,The length of the parameter directedIdentityAssignedIdentifier is 34.
Long Identifier,DotNetOpenAuth.Test.OAuth2,OAuth2TestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\OAuth2TestBase.cs,,The length of the parameter AuthorizationServerDescription is 30.
Long Identifier,DotNetOpenAuth.Test.OAuth.ChannelElements,OAuthChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\OAuthChannelTests.cs,,The length of the parameter serviceProviderSecuritySettings is 31.
Long Identifier,DotNetOpenAuth.Test.OpenId.DiscoveryServices,XriDiscoveryProxyServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\XriDiscoveryProxyServiceTests.cs,DiscoverCommunityInameCanonicalIDs,The length of the parameter llliAreaCanadaUnattachedResponse is 32.
Long Identifier,DotNetOpenAuth.Test.OpenId.DiscoveryServices,XriDiscoveryProxyServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\XriDiscoveryProxyServiceTests.cs,DiscoverCommunityInameCanonicalIDs,The length of the parameter llliAreaCanadaUnattachedAdaResponse is 35.
Long Statement,DotNetOpenAuth.Test,MessagingTestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingTestBase.cs,ParameterizedReceiveTestAsync,The length of the statement  "			IDirectedProtocolMessage requestMessage = await this.Channel.ReadFromRequestAsync(CreateHttpRequestInfo(method' fields)' CancellationToken.None); " is 145.
Long Statement,DotNetOpenAuth.Test,MessagingTestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingTestBase.cs,ParameterizedReceiveProtectedTestAsync,The length of the statement  "				utcCreatedDate = DateTime.Parse(utcCreatedDate.Value.ToUniversalTime().ToString()); // round off the milliseconds so comparisons work later " is 139.
Long Statement,DotNetOpenAuth.Test,MessagingTestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingTestBase.cs,ParameterizedReceiveProtectedTestAsync,The length of the statement  "			IProtocolMessage requestMessage = await this.Channel.ReadFromRequestAsync(CreateHttpRequestInfo(HttpMethod.Get' fields)' CancellationToken.None); " is 145.
Long Statement,DotNetOpenAuth.Test,RealmTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RealmTests.cs,EqualsTest,The length of the statement  "			Assert.AreNotEqual(testRealm1a' testRealm1a.ToString()' "Although the URLs are equal' different object types shouldn't be equal."); " is 131.
Long Statement,DotNetOpenAuth.Test,TestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\TestBase.cs,MeasurePerformance,The length of the statement  "			Assert.IsTrue(stats.Mean < maximumAllowedUnitTime' "The mean time of {0} exceeded the maximum allowable of {1}."' stats.Mean' maximumAllowedUnitTime); " is 150.
Long Statement,DotNetOpenAuth.Test,TestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\TestBase.cs,MeasurePerformance,The length of the statement  "			TestUtilities.TestLogger.InfoFormat("Within {0}% of the maximum allowed time of {1}."' Math.Round((maximumAllowedUnitTime - stats.Mean) / maximumAllowedUnitTime * 100' 1)' maximumAllowedUnitTime); " is 196.
Long Statement,DotNetOpenAuth.Test.Configuration,SectionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Configuration\SectionTests.cs,OpenIdProvider,The length of the statement  "			Assert.AreEqual(TimeSpan.Parse("2.00:00:02")' op.SecuritySettings.AssociationLifetimes.Single(a => a.AssociationType == "HMAC-SHA1").MaximumLifetime); " is 150.
Long Statement,DotNetOpenAuth.Test.Configuration,SectionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Configuration\SectionTests.cs,OpenIdProvider,The length of the statement  "			Assert.AreEqual(TimeSpan.Parse("14.00:00:14")' op.SecuritySettings.AssociationLifetimes.Single(a => a.AssociationType == "HMAC-SHA256").MaximumLifetime); " is 153.
Long Statement,DotNetOpenAuth.Test.Messaging,MessageSerializerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessageSerializerTests.cs,SerializeDeserializeJson,The length of the statement  "			string expected = @"{""age"":15'""Name"":""Andrew""'""Location"":""http:\/\/localtest\/path""'""Timestamp"":""2008-09-09T08:00:00Z""}"; " is 135.
Long Statement,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,GetHttpVerbTest,The length of the statement  "			Assert.AreEqual(HttpMethod.Get' MessagingUtilities.GetHttpVerb(HttpDeliveryMethods.GetRequest | HttpDeliveryMethods.AuthorizationHeaderRequest)); " is 145.
Long Statement,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,GetHttpVerbTest,The length of the statement  "			Assert.AreEqual(HttpMethod.Post' MessagingUtilities.GetHttpVerb(HttpDeliveryMethods.PostRequest | HttpDeliveryMethods.AuthorizationHeaderRequest)); " is 147.
Long Statement,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,GetHttpVerbTest,The length of the statement  "			Assert.AreEqual(HttpMethod.Head' MessagingUtilities.GetHttpVerb(HttpDeliveryMethods.HeadRequest | HttpDeliveryMethods.AuthorizationHeaderRequest)); " is 147.
Long Statement,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,GetHttpVerbTest,The length of the statement  "			Assert.AreEqual(HttpMethod.Delete' MessagingUtilities.GetHttpVerb(HttpDeliveryMethods.DeleteRequest | HttpDeliveryMethods.AuthorizationHeaderRequest)); " is 151.
Long Statement,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,GetHttpVerbTest,The length of the statement  "			Assert.AreEqual(HttpMethod.Put' MessagingUtilities.GetHttpVerb(HttpDeliveryMethods.PutRequest | HttpDeliveryMethods.AuthorizationHeaderRequest)); " is 145.
Long Statement,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,GetHttpVerbTest,The length of the statement  "			Assert.AreEqual(new HttpMethod("PATCH")' MessagingUtilities.GetHttpVerb(HttpDeliveryMethods.PatchRequest | HttpDeliveryMethods.AuthorizationHeaderRequest)); " is 156.
Long Statement,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,GetHttpVerbTest,The length of the statement  "			Assert.AreEqual(HttpMethod.Options' MessagingUtilities.GetHttpVerb(HttpDeliveryMethods.OptionsRequest | HttpDeliveryMethods.AuthorizationHeaderRequest)); " is 153.
Long Statement,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EncryptDecrypt,The length of the statement  "			Console.WriteLine("Encrypted \"{0}\" ({1} length) to {2} encrypted bytes."' PlainText' PlainText.Length' cipher.Length); " is 120.
Long Statement,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,DeserializeFromJson,The length of the statement  "			Assert.That(message.Timestamp' Is.EqualTo(DateTime.ParseExact("28/04/2012 08:00"' "dd/MM/yyyy hh:mm"' CultureInfo.InvariantCulture))); " is 134.
Long Statement,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The length of the statement  "			Assert.IsTrue(absoluteDifference <= tolerableDifference' "A total mismatch took {0} but a near match took {1}' which is too different to be indistinguishable.  The tolerable difference is {2} but the actual difference is {3}.  This represents a difference of {4}%' beyond the tolerated {5}%."' totalMismatchTimer.Elapsed' almostMatchTimer.Elapsed' tolerableDifference' absoluteDifference' Math.Round(actualFactor * 100)' Math.Round(ToleranceFactor * 100)); " is 456.
Long Statement,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The length of the statement  "			Console.WriteLine("A total mismatch took {0} and a near match took {1}.  The tolerable difference is {2}' and the actual difference is {3}.  This represents a difference of {4}%' within the tolerated {5}%."' totalMismatchTimer.Elapsed' almostMatchTimer.Elapsed' tolerableDifference' absoluteDifference' Math.Round(actualFactor * 100)' Math.Round(ToleranceFactor * 100)); " is 370.
Long Statement,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The length of the statement  "			Console.WriteLine("The equality test execution time difference was only {0}%' within the tolerable {1}%"' Math.Round(100 * actualFactor)' Math.Round(ToleranceFactor * 100)); " is 173.
Long Statement,DotNetOpenAuth.Test.Messaging,ChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\ChannelTests.cs,SendIndirectMessage301Get,The length of the statement  "			Assert.IsTrue(response.Content != null && response.Content.Headers.ContentLength > 0); // a non-empty body helps get passed filters like WebSense " is 145.
Long Statement,DotNetOpenAuth.Test.Messaging,ChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\ChannelTests.cs,SendIndirectMessageFormPost,The length of the statement  "			StringAssert.Contains("<input type=\"hidden\" name=\"Name\" value=\"" + HttpUtility.HtmlEncode(message.Name) + "\" />"' body); " is 126.
Long Statement,DotNetOpenAuth.Test.Messaging,ChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\ChannelTests.cs,ReadFromRequestWithContext,The length of the statement  "			IProtocolMessage message = await this.Channel.ReadFromRequestAsync(requestBase.AsHttpRequestMessage()' CancellationToken.None); " is 127.
Long Statement,DotNetOpenAuth.Test.Messaging,StandardMessageFactoryTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\StandardMessageFactoryTests.cs,SingleResponseMessageType,The length of the statement  "			this.factory.AddMessageTypes(new MessageDescription[] { MessageDescriptions.Get(typeof(DirectResponseMessageMock)' V1) }); " is 122.
Long Statement,DotNetOpenAuth.Test.Messaging.Reflection,MessagePartTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessagePartTests.cs,CtorNullAttribute,The length of the statement  "			PropertyInfo field = typeof(MessageWithNullableOptionalStruct).GetProperty("OptionalInt"' BindingFlags.NonPublic | BindingFlags.Instance); " is 138.
Long Statement,DotNetOpenAuth.Test.Messaging.Reflection,MessagePartTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessagePartTests.cs,NonFieldOrPropertyMember,The length of the statement  "			MemberInfo method = typeof(MessageWithNullableOptionalStruct).GetMethod("Equals"' BindingFlags.Public | BindingFlags.Instance); " is 127.
Long Statement,DotNetOpenAuth.Test.Messaging.Reflection,MessagePartTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessagePartTests.cs,RequiredMinAndMaxVersions,The length of the statement  "			MessagePartAttribute newIn2Attribute = newIn2Field.GetCustomAttributes(typeof(MessagePartAttribute)' true).OfType<MessagePartAttribute>().Single(); " is 147.
Long Statement,DotNetOpenAuth.Test.Messaging.Reflection,MessagePartTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessagePartTests.cs,RequiredMinAndMaxVersions,The length of the statement  "			MessagePartAttribute removedIn3Attribute = removedIn3Field.GetCustomAttributes(typeof(MessagePartAttribute)' true).OfType<MessagePartAttribute>().Single(); " is 155.
Long Statement,DotNetOpenAuth.Test.Messaging.Reflection,MessagePartTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessagePartTests.cs,GetMessagePart,The length of the statement  "			MessagePartAttribute attribute = field.GetCustomAttributes(typeof(MessagePartAttribute)' true).OfType<MessagePartAttribute>().Single(); " is 135.
Long Statement,DotNetOpenAuth.Test.Messaging.Reflection,MessagePartTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessagePartTests.cs,ParameterizedMessageTypeTest,The length of the statement  "			MessagePartAttribute attribute = field.GetCustomAttributes(typeof(MessagePartAttribute)' true).OfType<MessagePartAttribute>().Single(); " is 135.
Long Statement,DotNetOpenAuth.Test.Messaging.Bindings,StandardExpirationBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Bindings\StandardExpirationBindingElementTests.cs,SendSetsTimestamp,The length of the statement  "			Assert.IsTrue(DateTime.UtcNow - ((IExpiringProtocolMessage)message).UtcCreationDate < TimeSpan.FromSeconds(3)' "The timestamp on the message was not set on send."); " is 164.
Long Statement,DotNetOpenAuth.Test.Messaging.Bindings,StandardExpirationBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Bindings\StandardExpirationBindingElementTests.cs,VerifyFutureTimestampWithinClockSkewIsAccepted,The length of the statement  "			await this.ParameterizedReceiveProtectedTestAsync(DateTime.UtcNow + DotNetOpenAuthSection.Messaging.MaximumClockSkew - TimeSpan.FromSeconds(1)' false); " is 151.
Long Statement,DotNetOpenAuth.Test.Messaging.Bindings,StandardExpirationBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Bindings\StandardExpirationBindingElementTests.cs,VerifyOldTimestampIsRejected,The length of the statement  "			await this.ParameterizedReceiveProtectedTestAsync(DateTime.UtcNow - StandardExpirationBindingElement.MaximumMessageAge - TimeSpan.FromSeconds(1)' false); " is 153.
Long Statement,DotNetOpenAuth.Test.Messaging.Bindings,StandardExpirationBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Bindings\StandardExpirationBindingElementTests.cs,VerifyFutureTimestampIsRejected,The length of the statement  "			await this.ParameterizedReceiveProtectedTestAsync(DateTime.UtcNow + DotNetOpenAuthSection.Messaging.MaximumClockSkew + TimeSpan.FromSeconds(2)' false); " is 151.
Long Statement,DotNetOpenAuth.Test.Mocks,InMemoryTokenManager,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Mocks\InMemoryTokenManager.cs,StoreNewRequestToken,The length of the statement  "			this.tokens.Add(new TokenInfo { ConsumerKey = request.ConsumerKey' Token = response.Token' Secret = response.TokenSecret }); " is 124.
Long Statement,DotNetOpenAuth.Test.Mocks,InMemoryTokenManager,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Mocks\InMemoryTokenManager.cs,AddConsumer,The length of the statement  "			this.consumers.Add(new ConsumerInfo { Key = consumerDescription.ConsumerKey' Secret = consumerDescription.ConsumerSecret }); " is 124.
Long Statement,DotNetOpenAuth.Test.Mocks,MockHttpRequest,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Mocks\MockHttpRequest.cs,RegisterMockXrdsResponse,The length of the statement  "			xrds.AppendLine(@"<xrds:XRDS xmlns:xrds='xri://$xrds' xmlns:openid='http://openid.net/xmlns/1.0' xmlns='xri://$xrd*($v*2.0)'> " is 125.
Long Statement,DotNetOpenAuth.Test.Mocks,MockHttpRequest,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Mocks\MockHttpRequest.cs,RegisterMockRPDiscovery,The length of the statement  "			string template = @"<xrds:XRDS xmlns:xrds='xri://$xrds' xmlns:openid='http://openid.net/xmlns/1.0' xmlns='xri://$xrd*($v*2.0)'> " is 127.
Long Statement,DotNetOpenAuth.Test.OAuth2,AuthorizationServerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\AuthorizationServerTests.cs,ErrorResponseTest,The length of the statement  "			var request = new AccessTokenAuthorizationCodeRequestC(AuthorizationServerDescription) { ClientIdentifier = ClientId' ClientSecret = ClientSecret' AuthorizationCode = "foo" }; " is 175.
Long Statement,DotNetOpenAuth.Test.OAuth2,AuthorizationServerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\AuthorizationServerTests.cs,ResourceOwnerScopeOverride,The length of the statement  "				.Setup(a => a.CheckAuthorizeResourceOwnerCredentialGrant(ResourceOwnerUsername' ResourceOwnerPassword' It.IsAny<IAccessTokenRequest>())) " is 136.
Long Statement,DotNetOpenAuth.Test.OAuth2,AuthorizationServerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\AuthorizationServerTests.cs,ResourceOwnerScopeOverride,The length of the statement  "			var result = await client.ExchangeUserCredentialForTokenAsync(ResourceOwnerUsername' ResourceOwnerPassword' clientRequestedScopes); " is 131.
Long Statement,DotNetOpenAuth.Test.OAuth2,AuthorizationServerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\AuthorizationServerTests.cs,CreateAccessTokenSeesAuthorizingUserResourceOwnerGrant,The length of the statement  "				.Setup(a => a.CheckAuthorizeResourceOwnerCredentialGrant(ResourceOwnerUsername' ResourceOwnerPassword' It.IsAny<IAccessTokenRequest>())) " is 136.
Long Statement,DotNetOpenAuth.Test.OAuth2,AuthorizationServerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\AuthorizationServerTests.cs,CreateAccessTokenSeesAuthorizingUserResourceOwnerGrant,The length of the statement  "			var result = await client.ExchangeUserCredentialForTokenAsync(ResourceOwnerUsername' ResourceOwnerPassword' TestScopes); " is 120.
Long Statement,DotNetOpenAuth.Test.OAuth2,MessageFactoryTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\MessageFactoryTests.cs,SetUp,The length of the statement  "			var authServerChannel = new OAuth2AuthorizationServerChannel(new Mock<IAuthorizationServerHost>().Object' new Mock<ClientAuthenticationModule>().Object); " is 153.
Long Statement,DotNetOpenAuth.Test.OAuth2,ResourceServerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\ResourceServerTests.cs,GetAccessTokenWithMissingAccessToken,The length of the statement  "			Assert.That(() => resourceServer.GetAccessTokenAsync(request).GetAwaiter().GetResult()' Throws.InstanceOf<ProtocolException>()); " is 128.
Long Statement,DotNetOpenAuth.Test.OAuth2,ResourceServerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\ResourceServerTests.cs,GetPrincipalWithMissingAccessToken,The length of the statement  "			Assert.That(() => resourceServer.GetPrincipalAsync(request).GetAwaiter().GetResult()' Throws.InstanceOf<ProtocolException>()); " is 126.
Long Statement,DotNetOpenAuth.Test.OAuth2,ResourceServerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\ResourceServerTests.cs,GetAccessTokenWithTotallyFakeToken,The length of the statement  "			Assert.That(() => resourceServer.GetAccessTokenAsync(request).GetAwaiter().GetResult()' Throws.InstanceOf<ProtocolException>()); " is 128.
Long Statement,DotNetOpenAuth.Test.OAuth2,ResourceServerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\ResourceServerTests.cs,GetAccessTokenWithCorruptedToken,The length of the statement  "			Assert.That(() => resourceServer.GetAccessTokenAsync(request).GetAwaiter().GetResult()' Throws.InstanceOf<ProtocolException>()); " is 128.
Long Statement,DotNetOpenAuth.Test.OAuth2,ResourceServerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\ResourceServerTests.cs,ObtainValidAccessTokenAsync,The length of the statement  "				a => a.IsAuthorizationValid(It.Is<IAuthorizationDescription>(d => d.User == null && d.ClientIdentifier == ClientId && MessagingUtilities.AreEquivalent(d.Scope' TestScopes)))) " is 174.
Long Statement,DotNetOpenAuth.Test.OAuth2,ResourceServerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\ResourceServerTests.cs,ObtainValidAccessTokenAsync,The length of the statement  "				a => a.CheckAuthorizeClientCredentialsGrant(It.Is<IAccessTokenRequest>(d => d.ClientIdentifier == ClientId && MessagingUtilities.AreEquivalent(d.Scope' TestScopes)))) " is 166.
Long Statement,DotNetOpenAuth.Test.OAuth2,UserAgentClientAuthorizeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\UserAgentClientAuthorizeTests.cs,ImplicitGrant,The length of the statement  "					await client.Channel.ReadFromRequestAsync(new HttpRequestMessage(HttpMethod.Get' authRequestResponse)' CancellationToken.None); " is 127.
Long Statement,DotNetOpenAuth.Test.OAuth2,OAuth2TestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\OAuth2TestBase.cs,CreateAuthorizationServerMock,The length of the statement  "				.Setup(m => m.CheckAuthorizeResourceOwnerCredentialGrant(ResourceOwnerUsername' ResourceOwnerPassword' It.IsAny<IAccessTokenRequest>())) " is 136.
Long Statement,DotNetOpenAuth.Test.OAuth2,OAuth2TestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\OAuth2TestBase.cs,CreateAuthorizationServerMock,The length of the statement  "				.Returns<string' string' IAccessTokenRequest>((p1' p2' p3) => new AutomatedUserAuthorizationCheckResponse(p3' true' ResourceOwnerUsername)); " is 140.
Long Statement,DotNetOpenAuth.Test.OAuth2,OAuth2TestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\OAuth2TestBase.cs,CreateAuthorizationServerMock,The length of the statement  "			authHostMock.Setup(m => m.CreateAccessToken(It.IsAny<IAccessTokenRequest>())).Returns(new AccessTokenResult(new AuthorizationServerAccessToken() { AccessTokenSigningKey = AsymmetricKey })); " is 189.
Long Statement,DotNetOpenAuth.Test.OAuth2,WebServerClientAuthorizeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\WebServerClientAuthorizeTests.cs,ResourceOwnerPasswordCredentialGrant,The length of the statement  "			var authState = await client.ExchangeUserCredentialForTokenAsync(ResourceOwnerUsername' ResourceOwnerPassword' TestScopes); " is 123.
Long Statement,DotNetOpenAuth.Test.OAuth2,WebServerClientAuthorizeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\WebServerClientAuthorizeTests.cs,ClientCredentialGrant,The length of the statement  "				a => a.IsAuthorizationValid(It.Is<IAuthorizationDescription>(d => d.User == null && d.ClientIdentifier == ClientId && MessagingUtilities.AreEquivalent(d.Scope' TestScopes)))) " is 174.
Long Statement,DotNetOpenAuth.Test.OAuth2,WebServerClientAuthorizeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\WebServerClientAuthorizeTests.cs,ClientCredentialGrant,The length of the statement  "				a => a.CheckAuthorizeClientCredentialsGrant(It.Is<IAccessTokenRequest>(d => d.ClientIdentifier == ClientId && MessagingUtilities.AreEquivalent(d.Scope' TestScopes)))) " is 166.
Long Statement,DotNetOpenAuth.Test.OAuth2,WebServerClientAuthorizeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\WebServerClientAuthorizeTests.cs,GetClientAccessTokenReturnsApprovedScope,The length of the statement  "				a => a.IsAuthorizationValid(It.Is<IAuthorizationDescription>(d => d.User == null && d.ClientIdentifier == ClientId && MessagingUtilities.AreEquivalent(d.Scope' TestScopes)))) " is 174.
Long Statement,DotNetOpenAuth.Test.OAuth2,WebServerClientAuthorizeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth2\WebServerClientAuthorizeTests.cs,GetClientAccessTokenReturnsApprovedScope,The length of the statement  "				a => a.CheckAuthorizeClientCredentialsGrant(It.Is<IAccessTokenRequest>(d => d.ClientIdentifier == ClientId && MessagingUtilities.AreEquivalent(d.Scope' TestScopes)))) " is 166.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,HmacSha1SigningBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\HmacSha1SigningBindingElementTests.cs,SignatureTest,The length of the statement  "			UnauthorizedTokenRequest message = SigningBindingElementBaseTests.CreateTestRequestTokenMessage(this.MessageDescriptions' null); " is 128.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,HmacSha1SigningBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\HmacSha1SigningBindingElementTests.cs,LinkedInInteropTest,The length of the statement  "			var endpoint = new MessageReceivingEndpoint("https://api.linkedin.com/v1/people/~:(id'first-name'last-name'headline'industry'summary)"' HttpDeliveryMethods.AuthorizationHeaderRequest | HttpDeliveryMethods.GetRequest); " is 217.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,OAuthChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\OAuthChannelTests.cs,SetUp,The length of the statement  "			this.channel = new OAuthServiceProviderChannel(this.signingElement' this.nonceStore' new InMemoryTokenManager()' this.serviceProviderSecuritySettings' new TestMessageFactory()' this.HostFactories); " is 197.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,OAuthChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\OAuthChannelTests.cs,CtorNullSigner,The length of the statement  "			new OAuthServiceProviderChannel(null' this.nonceStore' new InMemoryTokenManager()' this.serviceProviderSecuritySettings' new TestMessageFactory()); " is 147.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,OAuthChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\OAuthChannelTests.cs,CtorNullStore,The length of the statement  "			new OAuthServiceProviderChannel(new RsaSha1ServiceProviderSigningBindingElement(new InMemoryTokenManager())' null' new InMemoryTokenManager()' this.serviceProviderSecuritySettings' new TestMessageFactory()); " is 207.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,OAuthChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\OAuthChannelTests.cs,CtorNullTokenManager,The length of the statement  "			new OAuthServiceProviderChannel(new RsaSha1ServiceProviderSigningBindingElement(new InMemoryTokenManager())' this.nonceStore' null' this.serviceProviderSecuritySettings' new TestMessageFactory()); " is 196.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,OAuthChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\OAuthChannelTests.cs,CtorSimpleServiceProvider,The length of the statement  "			new OAuthServiceProviderChannel(new RsaSha1ServiceProviderSigningBindingElement(new InMemoryTokenManager())' this.nonceStore' (IServiceProviderTokenManager)new InMemoryTokenManager()' this.serviceProviderSecuritySettings); " is 222.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,OAuthChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\OAuthChannelTests.cs,ReadFromRequestAuthorizationScattered,The length of the statement  "			var requestInfo = new HttpRequestInfo("POST"' builder.Uri' form: postedFields.ToNameValueCollection()' headers: headers); " is 121.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,OAuthChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\OAuthChannelTests.cs,ReadFromRequestAuthorizationScattered,The length of the statement  "			IDirectedProtocolMessage requestMessage = await this.channel.ReadFromRequestAsync(requestInfo.AsHttpRequestMessage()' CancellationToken.None); " is 142.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,OAuthChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\OAuthChannelTests.cs,ParameterizedReceiveTestAsync,The length of the statement  "			IProtocolMessage requestMessage = await this.channel.ReadFromRequestAsync(CreateHttpRequestInfo(scheme' fields).AsHttpRequestMessage()' CancellationToken.None); " is 160.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,PlaintextSigningBindingElementTest,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\PlaintextSigningBindingElementTest.cs,HttpsSignatureVerificationNotApplicable,The length of the statement  "			Assert.AreEqual(MessageProtections.None' await target.ProcessIncomingMessageAsync(message' CancellationToken.None)' "PLAINTEXT binding element should opt-out where it doesn't understand."); " is 189.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,PlaintextSigningBindingElementTest,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\PlaintextSigningBindingElementTest.cs,HttpSignatureVerification,The length of the statement  "			Assert.IsNull(await target.ProcessIncomingMessageAsync(message' CancellationToken.None)' "PLAINTEXT signature binding element should refuse to participate in non-encrypted messages."); " is 184.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,BaseSignatureStringTest,The length of the statement  "				new MessageReceivingEndpoint("https://www.google.com/accounts/OAuthGetRequestToken"' HttpDeliveryMethods.AuthorizationHeaderRequest | HttpDeliveryMethods.GetRequest)); " is 167.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,BaseSignatureStringTest,The length of the statement  "				"GET&https%3A%2F%2Fwww.google.com%2Faccounts%2FOAuthGetRequestToken&oauth_consumer_key%3Dnerdbank.org%26oauth_nonce%3Dfe4045a3f0efdd1e019fa8f8ae3f5c38%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1222665749%26oauth_version%3D1.0%26scope%3Dhttp%253A%252F%252Fwww.google.com%252Fm8%252Ffeeds%252F"' " is 308.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,BaseSignatureStringTest,The length of the statement  "				new MessageReceivingEndpoint("https://www.google.com/accounts/OAuthGetRequestToken?scope=http://www.google.com/m8/feeds/"' HttpDeliveryMethods.AuthorizationHeaderRequest | HttpDeliveryMethods.GetRequest)); " is 205.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,BaseSignatureStringTest,The length of the statement  "				"GET&https%3A%2F%2Fwww.google.com%2Faccounts%2FOAuthGetRequestToken&oauth_consumer_key%3Dnerdbank.org%26oauth_nonce%3Dfe4045a3f0efdd1e019fa8f8ae3f5c38%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1222665749%26oauth_version%3D1.0%26scope%3Dhttp%253A%252F%252Fwww.google.com%252Fm8%252Ffeeds%252F"' " is 308.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,BaseSignatureStringTest,The length of the statement  "				new MessageReceivingEndpoint("https://www.google.com/accounts/OAuthGetRequestToken?scope=http://www.google.com/m8/feeds/"' HttpDeliveryMethods.AuthorizationHeaderRequest | HttpDeliveryMethods.PostRequest)); " is 206.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,BaseSignatureStringTest,The length of the statement  "				"GET&https%3A%2F%2Fwww.google.com%2Faccounts%2FOAuthGetRequestToken&oauth_consumer_key%3Dnerdbank.org%26oauth_nonce%3Dfe4045a3f0efdd1e019fa8f8ae3f5c38%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1222665749%26oauth_version%3D1.0%26scope%3Dhttp%253A%252F%252Fwww.google.com%252Fm8%252Ffeeds%252F"' " is 308.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,BaseSignatureStringTest,The length of the statement  "				new MessageReceivingEndpoint("https://www.google.com/accounts/OAuthGetRequestToken?scope=http://www.google.com/m8/feeds/"' HttpDeliveryMethods.PostRequest)); " is 157.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,BaseSignatureStringTest,The length of the statement  "				"GET&https%3A%2F%2Fwww.google.com%2Faccounts%2FOAuthGetRequestToken&oauth_consumer_key%3Dnerdbank.org%26oauth_nonce%3Dfe4045a3f0efdd1e019fa8f8ae3f5c38%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1222665749%26oauth_version%3D1.0%26scope%3Dhttp%253A%252F%252Fwww.google.com%252Fm8%252Ffeeds%252F"' " is 308.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,BaseSignatureStringTest,The length of the statement  "				new MessageReceivingEndpoint("https://www.google.com/accounts/OAuthGetRequestToken?scope=http://www.google.com/m8/feeds/"' HttpDeliveryMethods.GetRequest)); " is 156.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,BaseSignatureStringTest,The length of the statement  "				"GET&https%3A%2F%2Fwww.google.com%2Faccounts%2FOAuthGetRequestToken&oauth_consumer_key%3Dnerdbank.org%26oauth_nonce%3Dfe4045a3f0efdd1e019fa8f8ae3f5c38%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1222665749%26scope%3Dhttp%253A%252F%252Fwww.google.com%252Fm8%252Ffeeds%252F"' " is 286.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,BaseSignatureStringTest,The length of the statement  "				new MessageReceivingEndpoint("https://www.google.com/accounts/OAuthGetRequestToken?scope=http://www.google.com/m8/feeds/"' HttpDeliveryMethods.AuthorizationHeaderRequest | HttpDeliveryMethods.PostRequest)); " is 206.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,BaseSignatureStringTest,The length of the statement  "				"GET&https%3A%2F%2Fwww.google.com%2Faccounts%2FOAuthGetRequestToken&oauth_consumer_key%3Dnerdbank.org%26oauth_nonce%3Dfe4045a3f0efdd1e019fa8f8ae3f5c38%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1222665749%26oauth_version%3D1.0%26scope%3Dhttp%253A%252F%252Fwww.google.com%252Fm8%252Ffeeds%252F"' " is 308.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,BaseSignatureStringResourceRequests,The length of the statement  "			var message = this.CreateResourceRequest(new MessageReceivingEndpoint("http://tom.test.wishpot.com/restapi/List/Search?List.LastName=ciccotosto"' HttpDeliveryMethods.GetRequest)); " is 179.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,BaseSignatureStringResourceRequests,The length of the statement  "				"GET&http%3A%2F%2Ftom.test.wishpot.com%2Frestapi%2FList%2FSearch&List.LastName%3Dciccotosto%26oauth_consumer_key%3Dpublic%26oauth_nonce%3D2U5YsZvL%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1302716502%26oauth_token%3Dtokenpublic%26oauth_version%3D1.0"' " is 266.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,CreateTestRequestTokenMessageNoOAuthVersion,The length of the statement  "			endpoint = endpoint ?? new MessageReceivingEndpoint("https://www.google.com/accounts/OAuthGetRequestToken"' HttpDeliveryMethods.AuthorizationHeaderRequest | HttpDeliveryMethods.GetRequest); " is 189.
Long Statement,DotNetOpenAuth.Test.OAuth.ChannelElements,SigningBindingElementBaseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\SigningBindingElementBaseTests.cs,CreateTestRequestTokenMessage,The length of the statement  "			endpoint = endpoint ?? new MessageReceivingEndpoint("https://www.google.com/accounts/OAuthGetRequestToken"' HttpDeliveryMethods.AuthorizationHeaderRequest | HttpDeliveryMethods.GetRequest); " is 189.
Long Statement,DotNetOpenAuth.Test.OAuth,ServiceProviderDescriptionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ServiceProviderDescriptionTests.cs,RequestTokenUriWithOAuthParametersTest,The length of the statement  "			target.RequestTokenEndpoint = new MessageReceivingEndpoint("http://localhost/requesttoken?oauth_token=something"' HttpDeliveryMethods.GetRequest); " is 146.
Long Statement,DotNetOpenAuth.Test.OAuth,ServiceProviderDescriptionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ServiceProviderDescriptionTests.cs,AccessTokenUriTest,The length of the statement  "			MessageReceivingEndpoint expected = new MessageReceivingEndpoint("http://localhost/accesstoken"' HttpDeliveryMethods.GetRequest); " is 129.
Long Statement,DotNetOpenAuth.Test.OAuth,AppendixScenarios,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\AppendixScenarios.cs,SpecAppendixAExample,The length of the statement  "				RequestTokenEndpoint = new MessageReceivingEndpoint(serviceDescription.TemporaryCredentialsRequestEndpoint' HttpDeliveryMethods.PostRequest | HttpDeliveryMethods.AuthorizationHeaderRequest)' " is 190.
Long Statement,DotNetOpenAuth.Test.OAuth,AppendixScenarios,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\AppendixScenarios.cs,SpecAppendixAExample,The length of the statement  "				UserAuthorizationEndpoint = new MessageReceivingEndpoint(serviceDescription.ResourceOwnerAuthorizationEndpoint' HttpDeliveryMethods.GetRequest)' " is 144.
Long Statement,DotNetOpenAuth.Test.OAuth,AppendixScenarios,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\AppendixScenarios.cs,SpecAppendixAExample,The length of the statement  "				AccessTokenEndpoint = new MessageReceivingEndpoint(serviceDescription.TokenRequestEndpoint' HttpDeliveryMethods.PostRequest | HttpDeliveryMethods.AuthorizationHeaderRequest)' " is 174.
Long Statement,DotNetOpenAuth.Test.OAuth,AppendixScenarios,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\AppendixScenarios.cs,SpecAppendixAExample,The length of the statement  "			var authorizeUrl = await consumer.RequestUserAuthorizationAsync(new Uri("http://printer.example.com/request_token_ready")); " is 123.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,AuthenticationRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\AuthenticationRequestTests.cs,CreateFiltersDelegatingIdentifiers,The length of the statement  "			Assert.IsTrue((await AuthenticationRequest.CreateAsync(id' rp' this.realm' this.returnTo' false' CancellationToken.None)).Any()' "The delegating identifier should have not generated any results."); " is 197.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,AuthenticationRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\AuthenticationRequestTests.cs,CreateFiltersDelegatingIdentifiers,The length of the statement  "			Assert.IsFalse((await AuthenticationRequest.CreateAsync(id' rp' this.realm' this.returnTo' false' CancellationToken.None)).Any()' "The delegating identifier should have not generated any results."); " is 198.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,AuthenticationRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\AuthenticationRequestTests.cs,DualIdentifierUsedOnlyAsOPIdentifierForAuthRequest,The length of the statement  "			var results = (await AuthenticationRequest.CreateAsync(GetMockDualIdentifier()' rp' this.realm' this.returnTo' false' CancellationToken.None)).ToList(); " is 152.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,AuthenticationRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\AuthenticationRequestTests.cs,DualIdentifierUsedOnlyAsOPIdentifierForAuthRequest,The length of the statement  "			results = (await AuthenticationRequest.CreateAsync(GetMockDualIdentifier()' rp' this.realm' this.returnTo' false' CancellationToken.None)).ToList(); " is 148.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,AuthenticationRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\AuthenticationRequestTests.cs,CreateAuthenticationRequest,The length of the statement  "			IdentifierDiscoveryResult endpoint = IdentifierDiscoveryResult.CreateForClaimedIdentifier(claimedIdentifier' providerLocalIdentifier' providerEndpoint' 10' 5); " is 159.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,NegativeAuthenticationResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\NegativeAuthenticationResponseTests.cs,ImmediateVsSetupModes,The length of the statement  "			this.responseMessage = new NegativeAssertionResponse(this.protocol.Version' RPUri' this.protocol.Args.Mode.setup_needed); " is 121.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,NegativeAuthenticationResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\NegativeAuthenticationResponseTests.cs,CommonMethods,The length of the statement  "			Assert.IsNull(this.response.GetCallbackArgument(AuthenticationRequest.UserSuppliedIdentifierParameterName)' "Although the userSuppliedIdentifier parameter is present' failure responses should never return callback args."); " is 222.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,PositiveAuthenticationResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\PositiveAuthenticationResponseTests.cs,DualIdentifierMatchesInAssertionVerification,The length of the statement  "			await PositiveAuthenticationResponse.CreateAsync(assertion' rp' CancellationToken.None); // this will throw if it fails to find a match " is 135.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,PositiveAuthenticationResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\PositiveAuthenticationResponseTests.cs,DualIdentifierNoMatchInAssertionVerificationByDefault,The length of the statement  "			await PositiveAuthenticationResponse.CreateAsync(assertion' rp' CancellationToken.None); // this will throw if it fails to find a match " is 135.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,PositiveAuthenticationResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\PositiveAuthenticationResponseTests.cs,GetPositiveAssertion,The length of the statement  "			assertion.ClaimedIdentifier = dualIdentifier ? this.GetMockDualIdentifier() : this.GetMockIdentifier(protocol.ProtocolVersion' false); " is 134.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,Ctor,The length of the statement  "			IdentifierDiscoveryResult se = IdentifierDiscoveryResult.CreateForClaimedIdentifier(this.claimedId' this.localId' new ProviderEndpointDescription(this.providerEndpoint' this.v20TypeUris)' this.servicePriority' this.uriPriority); " is 228.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,CtorImpliedLocalIdentifier,The length of the statement  "			IdentifierDiscoveryResult se = IdentifierDiscoveryResult.CreateForClaimedIdentifier(this.claimedId' null' new ProviderEndpointDescription(this.providerEndpoint' this.v20TypeUris)' this.servicePriority' this.uriPriority); " is 220.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,ProtocolDetection,The length of the statement  "			IdentifierDiscoveryResult se = IdentifierDiscoveryResult.CreateForClaimedIdentifier(this.claimedId' this.localId' new ProviderEndpointDescription(this.providerEndpoint' this.v20TypeUris)' this.servicePriority' this.uriPriority); " is 228.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,ProtocolDetection,The length of the statement  "			se = IdentifierDiscoveryResult.CreateForClaimedIdentifier(this.claimedId' this.localId' new ProviderEndpointDescription(this.providerEndpoint' this.v11TypeUris)' this.servicePriority' this.uriPriority); " is 202.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,EqualsTests,The length of the statement  "			IdentifierDiscoveryResult se = IdentifierDiscoveryResult.CreateForClaimedIdentifier(this.claimedId' this.localId' new ProviderEndpointDescription(this.providerEndpoint' this.v20TypeUris)' this.servicePriority' this.uriPriority); " is 228.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,EqualsTests,The length of the statement  "			IdentifierDiscoveryResult se2 = IdentifierDiscoveryResult.CreateForClaimedIdentifier(this.claimedId' this.localId' new ProviderEndpointDescription(this.providerEndpoint' this.v20TypeUris)' (int?)null' (int?)null); " is 213.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,EqualsTests,The length of the statement  "			IdentifierDiscoveryResult se3 = IdentifierDiscoveryResult.CreateForClaimedIdentifier(new UriIdentifier(this.claimedId + "a")' this.localId' new ProviderEndpointDescription(this.providerEndpoint' this.v20TypeUris)' this.servicePriority' this.uriPriority); " is 254.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,EqualsTests,The length of the statement  "			se3 = IdentifierDiscoveryResult.CreateForClaimedIdentifier(this.claimedId' this.localId' new ProviderEndpointDescription(new Uri(this.providerEndpoint.AbsoluteUri + "a")' this.v20TypeUris)' this.servicePriority' this.uriPriority); " is 230.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,EqualsTests,The length of the statement  "			se3 = IdentifierDiscoveryResult.CreateForClaimedIdentifier(this.claimedId' this.localId + "a"' new ProviderEndpointDescription(this.providerEndpoint' this.v20TypeUris)' this.servicePriority' this.uriPriority); " is 209.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,EqualsTests,The length of the statement  "			se3 = IdentifierDiscoveryResult.CreateForClaimedIdentifier(this.claimedId' this.localId' new ProviderEndpointDescription(this.providerEndpoint' this.v11TypeUris)' this.servicePriority' this.uriPriority); " is 203.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,GetFriendlyIdentifierForDisplay,The length of the statement  "			se = IdentifierDiscoveryResult.CreateForClaimedIdentifier(foreignUri' localId' new ProviderEndpointDescription(providerEndpoint' serviceTypeUris)' null' null); " is 159.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,IsTypeUriPresent,The length of the statement  "			IdentifierDiscoveryResult se = IdentifierDiscoveryResult.CreateForClaimedIdentifier(this.claimedXri' this.userSuppliedXri' this.localId' new ProviderEndpointDescription(this.providerEndpoint' this.v20TypeUris)' this.servicePriority' this.uriPriority); " is 251.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,IsTypeUriPresentNull,The length of the statement  "			IdentifierDiscoveryResult se = IdentifierDiscoveryResult.CreateForClaimedIdentifier(this.claimedXri' this.userSuppliedXri' this.localId' new ProviderEndpointDescription(this.providerEndpoint' this.v20TypeUris)' this.servicePriority' this.uriPriority); " is 251.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,IsTypeUriPresentEmpty,The length of the statement  "			IdentifierDiscoveryResult se = IdentifierDiscoveryResult.CreateForClaimedIdentifier(this.claimedXri' this.userSuppliedXri' this.localId' new ProviderEndpointDescription(this.providerEndpoint' this.v20TypeUris)' this.servicePriority' this.uriPriority); " is 251.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,IsExtensionSupportedNullType,The length of the statement  "			var se = IdentifierDiscoveryResult.CreateForProviderIdentifier(OPUri' new ProviderEndpointDescription(OPUri' this.v20TypeUris)' null' null); " is 140.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,IsTypeUriPresentNullString,The length of the statement  "			var se = IdentifierDiscoveryResult.CreateForProviderIdentifier(OPUri' new ProviderEndpointDescription(OPUri' this.v20TypeUris)' null' null); " is 140.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,IsTypeUriPresentEmptyString,The length of the statement  "			var se = IdentifierDiscoveryResult.CreateForProviderIdentifier(OPUri' new ProviderEndpointDescription(OPUri' this.v20TypeUris)' null' null); " is 140.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,IsExtensionSupportedNullExtension,The length of the statement  "			var se = IdentifierDiscoveryResult.CreateForProviderIdentifier(OPUri' new ProviderEndpointDescription(OPUri' this.v20TypeUris)' null' null); " is 140.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,IsExtensionSupported,The length of the statement  "			var se = IdentifierDiscoveryResult.CreateForProviderIdentifier(OPUri' new ProviderEndpointDescription(OPUri' this.v20TypeUris)' null' null); " is 140.
Long Statement,DotNetOpenAuth.Test.OpenId.RelyingParty,IdentifierDiscoveryResultTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\IdentifierDiscoveryResultTests.cs,IsExtensionSupported,The length of the statement  "				new ProviderEndpointDescription(OPUri' new[] { Protocol.V20.ClaimedIdentifierServiceTypeURI' "http://someextension"' Constants.TypeUris.Standard })' " is 148.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationTests.cs,Properties,The length of the statement  "			Association assoc = HmacShaAssociation.Create(Protocol.Default' Protocol.Default.Args.SignatureAlgorithm.HMAC_SHA1' handle' this.sha1Secret' lifetime); " is 151.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationTests.cs,Sign,The length of the statement  "			Association assoc1 = HmacShaAssociation.Create(Protocol.Default' Protocol.Default.Args.SignatureAlgorithm.HMAC_SHA1' "h1"' this.sha1Secret' TimeSpan.FromMinutes(2)); " is 165.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationTests.cs,Sign,The length of the statement  "			Association assoc2 = HmacShaAssociation.Create(Protocol.Default' Protocol.Default.Args.SignatureAlgorithm.HMAC_SHA1' "h2"' this.sha1Secret2' TimeSpan.FromMinutes(2)); " is 166.
Long Statement,DotNetOpenAuth.Test.OpenId,AuthenticationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AuthenticationTests.cs,ParameterizedAuthenticationTestAsync,The length of the statement  "						TestLogger.InfoFormat("Beginning authentication test scenario.  OpenID: {0}' Shared: {1}' positive: {2}' tamper: {3}' stateless: {4}' immediate: {5}"' protocol.Version' sharedAssociation' positive' tamper' statelessRP' immediate); " is 230.
Long Statement,DotNetOpenAuth.Test.OpenId,AuthenticationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AuthenticationTests.cs,ParameterizedAuthenticationTestAsync,The length of the statement  "			Requires.That(!statelessRP || !sharedAssociation' null' "The RP cannot be stateless while sharing an association with the OP."); " is 128.
Long Statement,DotNetOpenAuth.Test.OpenId,AuthenticationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AuthenticationTests.cs,ParameterizedAuthenticationTestAsync,The length of the statement  "			Association association = sharedAssociation ? HmacShaAssociationProvider.Create(protocol' protocol.Args.SignatureAlgorithm.Best' AssociationRelyingPartyType.Smart' associationStore' securitySettings) : null; " is 207.
Long Statement,DotNetOpenAuth.Test.OpenId,DiffieHellmanTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiffieHellmanTests.cs,TestPublic,The length of the statement  "					DiffieHellmanManaged dh = new DiffieHellmanManaged(AssociateDiffieHellmanRequest.DefaultMod' AssociateDiffieHellmanRequest.DefaultGen' x); " is 138.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,AssociateRenegotiateBitLength,The length of the statement  "			Association association = await rp.AssociationManager.GetOrCreateAssociationAsync(opDescription' CancellationToken.None); " is 121.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,RPRejectsUnrecognizedAssociationType,The length of the statement  "			var association = await rp.AssociationManager.GetOrCreateAssociationAsync(new ProviderEndpointDescription(OPUri' protocol.Version)' CancellationToken.None); " is 156.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,RPRejectsUnencryptedSuggestion,The length of the statement  "			var association = await rp.AssociationManager.GetOrCreateAssociationAsync(new ProviderEndpointDescription(OPUri' protocol.Version)' CancellationToken.None); " is 156.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,RPRejectsMismatchingAssociationAndSessionBitLengths,The length of the statement  "			var association = await rp.AssociationManager.GetOrCreateAssociationAsync(new ProviderEndpointDescription(OPUri' protocol.Version)' CancellationToken.None); " is 156.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,RPOnlyRenegotiatesOnce,The length of the statement  "			var association = await rp.AssociationManager.GetOrCreateAssociationAsync(new ProviderEndpointDescription(OPUri' protocol.Version)' CancellationToken.None); " is 156.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,AssociateRenegotiateLimitedByRPSecuritySettings,The length of the statement  "			var association = await rp.AssociationManager.GetOrCreateAssociationAsync(new ProviderEndpointDescription(OPUri' protocol.Version)' CancellationToken.None); " is 156.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,AssociateRenegotiateLimitedByRPSecuritySettings,The length of the statement  "			Assert.IsNull(association' "No association should have been created when RP and OP could not agree on association strength."); " is 126.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,AssociateQuietlyFailsAfterHttpError,The length of the statement  "			var association = await rp.AssociationManager.GetOrCreateAssociationAsync(new ProviderEndpointDescription(OPUri' Protocol.V20.Version)' CancellationToken.None); " is 160.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,ParameterizedAssociationTestAsync,The length of the statement  "				var associationType = protocol.Version.Major < 2 ? protocol.Args.SignatureAlgorithm.HMAC_SHA1 : protocol.Args.SignatureAlgorithm.HMAC_SHA256; " is 141.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,ParameterizedAssociationTestAsync,The length of the statement  "				Assert.AreSame(opDescription.Version' message.Version' "The message was recognized as version {0} but was expected to be {1}."' message.Version' Protocol.Lookup(opDescription.Version).ProtocolVersion); " is 201.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,ParameterizedAssociationTestAsync,The length of the statement  "				Assert.AreEqual(opDescription.Version' message.Version' "The message was for version {0} but was expected to be for {1}."' message.Version' opDescription.Version); " is 163.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,ParameterizedAssociationTestAsync,The length of the statement  "			rpAssociation = await relyingParty.AssociationManager.GetOrCreateAssociationAsync(opDescription' CancellationToken.None); " is 121.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,ParameterizedAssociationTestAsync,The length of the statement  "				Association actual = relyingParty.AssociationManager.AssociationStoreTestHook.GetAssociation(opDescription.Uri' rpAssociation.Handle); " is 134.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,ParameterizedAssociationTestAsync,The length of the statement  "					Assert.IsFalse(MessagingUtilities.AreEquivalent(diffieHellmanResponse.EncodedMacKey' rpAssociation.SecretKey)' "Key should have been encrypted."); " is 146.
Long Statement,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,ParameterizedAssociationTestAsync,The length of the statement  "				Assert.IsNull(relyingParty.AssociationManager.AssociationStoreTestHook.GetAssociation(opDescription.Uri' new RelyingPartySecuritySettings())); " is 142.
Long Statement,DotNetOpenAuth.Test.OpenId,OpenIdTestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\OpenIdTestBase.cs,GetMockRealm,The length of the statement  "			var rpDescription = new RelyingPartyEndpointDescription(useSsl ? RPUriSsl : RPUri' new string[] { Protocol.V20.RPReturnToTypeURI }); " is 132.
Long Statement,DotNetOpenAuth.Test.OpenId,ProviderEndpointDescriptionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ProviderEndpointDescriptionTests.cs,ProtocolDetectionWithoutClues,The length of the statement  "			new ProviderEndpointDescription(OPUri' new[] { Protocol.V20.HtmlDiscoveryLocalIdKey }); // random type URI irrelevant to detection " is 130.
Long Statement,DotNetOpenAuth.Test.OpenId,UriIdentifierTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\UriIdentifierTests.cs,EqualsTest,The length of the statement  "				Assert.AreNotEqual(Identifier.Parse("http://www.foo.com/abc"' true)' Identifier.Parse("http://www.foo.com/ABC"' false)); " is 120.
Long Statement,DotNetOpenAuth.Test.OpenId,UriIdentifierTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\UriIdentifierTests.cs,EqualsTest,The length of the statement  "				Assert.AreNotEqual(Identifier.Parse("http://www.foo.com/abc"' false)' Identifier.Parse("http://www.foo.com/ABC"' false)); " is 121.
Long Statement,DotNetOpenAuth.Test.OpenId,UriIdentifierTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\UriIdentifierTests.cs,TrailingPeriodsNotTrimmed,The length of the statement  "				Assert.AreEqual(Uri.UriSchemeHttps' idUri.Uri.Scheme); // in case custom scheme tricks are played' this must still match " is 120.
Long Statement,DotNetOpenAuth.Test.OpenId,UriIdentifierTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\UriIdentifierTests.cs,TrailingPeriodsNotTrimmed,The length of the statement  "				Assert.AreEqual(id.ToString()' new UriIdentifier((Uri)idUri).ToString()' "Round tripping UriIdentifier->Uri->UriIdentifier failed."); " is 133.
Long Statement,DotNetOpenAuth.Test.OpenId,UriIdentifierTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\UriIdentifierTests.cs,TrailingPeriodsNotTrimmed,The length of the statement  "				Assert.AreEqual(Uri.UriSchemeHttps' idUri.Uri.Scheme); // in case custom scheme tricks are played' this must still match " is 120.
Long Statement,DotNetOpenAuth.Test.OpenId,UriIdentifierTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\UriIdentifierTests.cs,TrailingPeriodsNotTrimmed,The length of the statement  "				Assert.AreEqual(id.ToString()' new UriIdentifier((Uri)idUri).ToString()' "Round tripping UriIdentifier->Uri->UriIdentifier failed."); " is 133.
Long Statement,DotNetOpenAuth.Test.OpenId,UriIdentifierTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\UriIdentifierTests.cs,TryRequireSslAdjustsIdentifier,The length of the statement  "			Assert.IsTrue(secureId.IsDiscoverySecureEndToEnd' "Although the TryRequireSsl failed' the created identifier should retain the Ssl status."); " is 141.
Long Statement,DotNetOpenAuth.Test.OpenId,UriIdentifierTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\UriIdentifierTests.cs,TryRequireSslAdjustsIdentifier,The length of the statement  "			Assert.AreEqual(0' (await DiscoverAsync(secureId)).Count()' "Since TryRequireSsl failed' the created Identifier should never discover anything."); " is 146.
Long Statement,DotNetOpenAuth.Test.OpenId.ChannelElements,ExtensionsBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\ExtensionsBindingElementTests.cs,SetUp,The length of the statement  "			this.request = new SignedResponseRequest(Protocol.Default.Version' OpenIdTestBase.OPUri' AuthenticationRequestMode.Immediate); " is 126.
Long Statement,DotNetOpenAuth.Test.OpenId.ChannelElements,KeyValueFormEncodingTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\KeyValueFormEncodingTests.cs,EncodeDecode,The length of the statement  "			await this.KVDictTestAsync(UTF8Encoding.UTF8.GetBytes("is_valid:true\ninvalidate_handle:{HMAC-SHA1:2398410938412093}\n")' d3' TestMode.Both); " is 141.
Long Statement,DotNetOpenAuth.Test.OpenId.ChannelElements,KeyValueFormEncodingTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\KeyValueFormEncodingTests.cs,IllegalAsync,The length of the statement  "			await new KeyValueFormEncoding(level).GetDictionaryAsync(new MemoryStream(Encoding.UTF8.GetBytes(s))' CancellationToken.None); " is 126.
Long Statement,DotNetOpenAuth.Test.OpenId.ChannelElements,SigningBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\SigningBindingElementTests.cs,SignaturesMatchKnownGood,The length of the statement  "			cryptoStore.StoreKey(ProviderAssociationKeyStorage.SharedAssociationBucket' handle' new CryptoKey(associationSecret' DateTime.UtcNow.AddDays(1))); " is 146.
Long Statement,DotNetOpenAuth.Test.OpenId.ChannelElements,SigningBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\SigningBindingElementTests.cs,SignedResponsesIncludeExtraDataInSignature,The length of the statement  "			SigningBindingElement sbe = new ProviderSigningBindingElement(new ProviderAssociationHandleEncoder(new MemoryCryptoKeyStore())' new ProviderSecuritySettings()); " is 160.
Long Statement,DotNetOpenAuth.Test.OpenId.ChannelElements,SigningBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\SigningBindingElementTests.cs,MissingSignedParameter,The length of the statement  "			cryptoStore.StoreKey(ProviderAssociationKeyStorage.PrivateAssociationBucket' handle' new CryptoKey(associationSecret' DateTime.UtcNow.AddDays(1))); " is 147.
Long Statement,DotNetOpenAuth.Test.OpenId.ChannelElements,SigningBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\SigningBindingElementTests.cs,MissingSignedParameter,The length of the statement  "			var signer = new ProviderSigningBindingElement(new ProviderAssociationKeyStorage(cryptoStore)' new ProviderSecuritySettings()); " is 127.
Long Statement,DotNetOpenAuth.Test.OpenId.ChannelElements,SigningBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\SigningBindingElementTests.cs,MissingSignedParameter,The length of the statement  "			var testChannel = new TestChannel(new OpenIdProviderMessageFactory()' new IChannelBindingElement[0]' this.HostFactories); " is 121.
Long Statement,DotNetOpenAuth.Test.OpenId.ChannelElements,SigningBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\SigningBindingElementTests.cs,MissingSignedParameter,The length of the statement  "				{ "openid.return_to"' "http://openid-consumer.appspot.com/finish?session_id=1543025&janrain_nonce=2011-08-01T00%3A32%3A09ZIPGz7D" }' " is 132.
Long Statement,DotNetOpenAuth.Test.OpenId.ChannelElements,SigningBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\SigningBindingElementTests.cs,MissingSignedParameter,The length of the statement  "				{ "openid.signed"' "claimed_id'identity'assoc_handle'op_endpoint'return_to'response_nonce'ns.sreg'sreg.email'sreg.fullname" }' " is 126.
Long Statement,DotNetOpenAuth.Test.OpenId.ChannelElements,SigningBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\SigningBindingElementTests.cs,MissingSignedParameter,The length of the statement  "			var message = (CheckAuthenticationRequest)testChannel.Receive(buggyRPMessage' new MessageReceivingEndpoint(OPUri' HttpDeliveryMethods.PostRequest)); " is 148.
Long Statement,DotNetOpenAuth.Test.OpenId.ChannelElements,OpenIdChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\OpenIdChannelTests.cs,Setup,The length of the statement  "			this.channel = new OpenIdRelyingPartyChannel(new MemoryCryptoKeyStore()' new MemoryNonceStore(maximumMessageAge)' new RelyingPartySecuritySettings()' this.HostFactories); " is 170.
Long Statement,DotNetOpenAuth.Test.OpenId.ChannelElements,OpenIdChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\OpenIdChannelTests.cs,Ctor,The length of the statement  "			var replayElement = (StandardReplayProtectionBindingElement)this.channel.BindingElements.SingleOrDefault(el => el is StandardReplayProtectionBindingElement); " is 157.
Long Statement,DotNetOpenAuth.Test.OpenId.ChannelElements,OpenIdChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\OpenIdChannelTests.cs,DirectResponsesReceivedAsKeyValueForm,The length of the statement  "			Assert.IsTrue(MessagingUtilities.AreEquivalent(fields' await this.channel.ReadFromResponseCoreAsyncTestHook(response' CancellationToken.None))); " is 144.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DiscoveryRequireSslWithInsecureXrdsInSecureHtmlHead,The length of the statement  "			string html = string.Format("<html><head><meta http-equiv='X-XRDS-Location' content='{0}'/></head><body></body></html>"' insecureXrdsSource); " is 141.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,XrdsDiscoveryFromHttpHeader,The length of the statement  "			this.RegisterMockResponse(new Uri("http://localhost/xrds1020.xml")' "application/xrds+xml"' LoadEmbeddedFile("/Discovery/xrdsdiscovery/xrds1020.xml")); " is 151.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,HtmlDiscoveryProceedsIfXrdsIsEmpty,The length of the statement  "			this.RegisterMockResponse(new Uri("http://localhost/xrds-irrelevant.xml")' "application/xrds+xml"' LoadEmbeddedFile("/Discovery/xrdsdiscovery/xrds-irrelevant.xml")); " is 165.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DualIdentifierOffByDefault,The length of the statement  "			this.RegisterMockResponse(VanityUri' "application/xrds+xml"' LoadEmbeddedFile("/Discovery/xrdsdiscovery/xrds20dual.xml")); " is 122.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DualIdentifierOffByDefault,The length of the statement  "			Assert.AreEqual(1' results.Count(r => r.ClaimedIdentifier == r.Protocol.ClaimedIdentifierForOPIdentifier)' "OP Identifier missing from discovery results."); " is 156.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DualIdentifier,The length of the statement  "			this.RegisterMockResponse(VanityUri' "application/xrds+xml"' LoadEmbeddedFile("/Discovery/xrdsdiscovery/xrds20dual.xml")); " is 122.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DualIdentifier,The length of the statement  "			Assert.AreEqual(1' results.Count(r => r.ClaimedIdentifier == r.Protocol.ClaimedIdentifierForOPIdentifier)' "OP Identifier missing from discovery results."); " is 156.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DualIdentifier,The length of the statement  "			Assert.AreEqual(1' results.Count(r => r.ClaimedIdentifier == VanityUri)' "Claimed identifier missing from discovery results."); " is 127.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DiscoverAsync,The length of the statement  "			this.RegisterMockResponse(claimedId' claimedId' contentType' headers ?? new WebHeaderCollection()' LoadEmbeddedFile(url)); " is 122.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DiscoverAsync,The length of the statement  "				new ProviderEndpointDescription(new Uri(providerEndpoint)' new string[] { protocol.ClaimedIdentifierServiceTypeURI })' // services aren't checked by Equals " is 155.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DiscoverXrdsAsync,The length of the statement  "			await this.DiscoverAsync("/Discovery/xrdsdiscovery/" + page' version' expectedLocalId' providerEndpoint' true' false' headers); " is 127.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DiscoverXrdsAsync,The length of the statement  "			await this.DiscoverAsync("/Discovery/xrdsdiscovery/" + page' version' expectedLocalId' providerEndpoint' true' true' headers); " is 126.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DiscoverHtmlAsync,The length of the statement  "			await this.DiscoverAsync("/Discovery/htmldiscovery/" + page' version' expectedLocalId' providerEndpoint' false' useRedirect); " is 125.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,XriDiscoveryProxyServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\XriDiscoveryProxyServiceTests.cs,DiscoverCommunityInameCanonicalIDs,The length of the statement  "				{ "https://xri.net/@llli*area*canada.unattached?_xrd_r=application/xrd%2Bxml;sep=false"' llliAreaCanadaUnattachedResponse }' " is 124.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,XriDiscoveryProxyServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\XriDiscoveryProxyServiceTests.cs,DiscoverCommunityInameCanonicalIDs,The length of the statement  "				{ "https://xri.net/@llli*area*canada.unattached*ada?_xrd_r=application/xrd%2Bxml;sep=false"' llliAreaCanadaUnattachedAdaResponse }' " is 131.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,XriDiscoveryProxyServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\XriDiscoveryProxyServiceTests.cs,DiscoverCommunityInameCanonicalIDs,The length of the statement  "			await this.VerifyCanonicalIdAsync("@llli*area*canada.unattached"' "@!72CD.A072.157E.A9C6!0000.0000.3B9A.CA0C!0000.0000.3B9A.CA41"); " is 131.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,XriDiscoveryProxyServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\XriDiscoveryProxyServiceTests.cs,DiscoverCommunityInameCanonicalIDs,The length of the statement  "			await this.VerifyCanonicalIdAsync("@llli*area*canada.unattached*ada"' "@!72CD.A072.157E.A9C6!0000.0000.3B9A.CA0C!0000.0000.3B9A.CA41!0000.0000.3B9A.CA01"); " is 155.
Long Statement,DotNetOpenAuth.Test.OpenId.DiscoveryServices,XriDiscoveryProxyServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\XriDiscoveryProxyServiceTests.cs,VerifyCanonicalIdAsync,The length of the statement  "				Assert.AreEqual(expectedClaimedIdentifier' se.ClaimedIdentifier.ToString()' "i-name {0} discovery resulted in unexpected CanonicalId"' iname); " is 142.
Long Statement,DotNetOpenAuth.Test.OpenId.Extensions,ExtensionsInteropHelperOPTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ExtensionsInteropHelperOPTests.cs,SetUp,The length of the statement  "			var rpRequest = new CheckIdRequest(Protocol.Default.Version' OPUri' DotNetOpenAuth.OpenId.AuthenticationRequestMode.Setup); " is 123.
Long Statement,DotNetOpenAuth.Test.OpenId.Extensions,ExtensionsInteropHelperOPTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ExtensionsInteropHelperOPTests.cs,ParameterizedAXTestAsync,The length of the statement  "			axInjected.Attributes.AddOptional(ExtensionsInteropHelper.TransformAXFormatTestHook(WellKnownAttributes.Name.Alias' format)); " is 125.
Long Statement,DotNetOpenAuth.Test.OpenId.Extensions,ExtensionsInteropHelperOPTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ExtensionsInteropHelperOPTests.cs,ParameterizedAXTestAsync,The length of the statement  "			axInjected.Attributes.AddRequired(ExtensionsInteropHelper.TransformAXFormatTestHook(WellKnownAttributes.Name.FullName' format)); " is 128.
Long Statement,DotNetOpenAuth.Test.OpenId.Extensions,ExtensionsInteropHelperOPTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ExtensionsInteropHelperOPTests.cs,ParameterizedAXTestAsync,The length of the statement  "			Assert.AreEqual("andy"' axResponse.GetAttributeValue(ExtensionsInteropHelper.TransformAXFormatTestHook(WellKnownAttributes.Name.Alias' format))); " is 145.
Long Statement,DotNetOpenAuth.Test.OpenId.Extensions,ExtensionsInteropHelperRPResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ExtensionsInteropHelperRPResponseTests.cs,UnifyExtensionsasSregFromSchemaOpenIdNet,The length of the statement  "			axInjected.Attributes.Add(ExtensionsInteropProviderHelper.TransformAXFormatTestHook(WellKnownAttributes.Name.Alias' AXAttributeFormats.SchemaOpenIdNet)' "nate"); " is 161.
Long Statement,DotNetOpenAuth.Test.OpenId.Extensions,ClaimsResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\SimpleRegistration\ClaimsResponseTests.cs,Birthdates,The length of the statement  "			// Verify that an partial raw birthdate works' and sets the strong-typed property to null since it cannot be represented. " is 121.
Long Statement,DotNetOpenAuth.Test.OpenId.Extensions,ExtensionTestUtilities,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ExtensionTestUtilities.cs,RegisterExtension,The length of the statement  "			var factory = (OpenIdExtensionFactoryAggregator)channel.BindingElements.OfType<ExtensionsBindingElement>().Single().ExtensionFactory; " is 133.
Long Statement,DotNetOpenAuth.Test.OpenId.Extensions,ExtensionsInteropHelperRPRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ExtensionsInteropHelperRPRequestTests.cs,SpreadSregToAxMultipleSchemas,The length of the statement  "			ExtensionsInteropHelper.SpreadSregToAX(this.authReq' AXAttributeFormats.AXSchemaOrg | AXAttributeFormats.SchemaOpenIdNet); " is 122.
Long Statement,DotNetOpenAuth.Test.OpenId.Extensions,ExtensionsInteropHelperRPRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ExtensionsInteropHelperRPRequestTests.cs,SpreadSregToAxMultipleSchemas,The length of the statement  "			Assert.IsTrue(ax.Attributes.Contains(ExtensionsInteropProviderHelper.TransformAXFormatTestHook(WellKnownAttributes.Name.Alias' AXAttributeFormats.SchemaOpenIdNet))); " is 165.
Long Statement,DotNetOpenAuth.Test.OpenId.Extensions,ExtensionsInteropHelperRPRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ExtensionsInteropHelperRPRequestTests.cs,SpreadSregToAxMultipleSchemas,The length of the statement  "			Assert.IsFalse(ax.Attributes.Contains(ExtensionsInteropProviderHelper.TransformAXFormatTestHook(WellKnownAttributes.Name.Alias' AXAttributeFormats.OpenIdNetSchema))); " is 166.
Long Statement,DotNetOpenAuth.Test.OpenId.Extensions,ExtensionsInteropHelperRPRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ExtensionsInteropHelperRPRequestTests.cs,SpreadSregToAxTargetedAtOPFormat,The length of the statement  "			Assert.IsFalse(ax.Attributes.Contains(ExtensionsInteropProviderHelper.TransformAXFormatTestHook(WellKnownAttributes.Contact.Email' AXAttributeFormats.OpenIdNetSchema))); " is 169.
Long Statement,DotNetOpenAuth.Test.OpenId.Extensions,ExtensionsInteropHelperRPRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ExtensionsInteropHelperRPRequestTests.cs,TransformAXFormatTest,The length of the statement  "			Assert.AreEqual(WellKnownAttributes.Name.Alias' ExtensionsInteropProviderHelper.TransformAXFormatTestHook(WellKnownAttributes.Name.Alias' AXAttributeFormats.AXSchemaOrg)); " is 171.
Long Statement,DotNetOpenAuth.Test.OpenId.Extensions,ExtensionsInteropHelperRPRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ExtensionsInteropHelperRPRequestTests.cs,TransformAXFormatTest,The length of the statement  "			Assert.AreEqual("http://schema.openid.net/namePerson/friendly"' ExtensionsInteropProviderHelper.TransformAXFormatTestHook(WellKnownAttributes.Name.Alias' AXAttributeFormats.SchemaOpenIdNet)); " is 191.
Long Statement,DotNetOpenAuth.Test.OpenId.Extensions,ExtensionsInteropHelperRPRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ExtensionsInteropHelperRPRequestTests.cs,TransformAXFormatTest,The length of the statement  "			Assert.AreEqual("http://openid.net/schema/namePerson/friendly"' ExtensionsInteropProviderHelper.TransformAXFormatTestHook(WellKnownAttributes.Name.Alias' AXAttributeFormats.OpenIdNetSchema)); " is 191.
Long Statement,DotNetOpenAuth.Test.OpenId.Messages,AssociateRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Messages\AssociateRequestTests.cs,AssociateRequestDeterminedBySecuritySettings,The length of the statement  "			Assert.AreEqual(AssociateRequestRelyingParty.Create(securitySettings' provider).AssociationType' protocol.Args.SignatureAlgorithm.HMAC_SHA1); " is 141.
Long Statement,DotNetOpenAuth.Test.OpenId.Messages,AssociateRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Messages\AssociateRequestTests.cs,AssociateRequestDeterminedBySecuritySettings,The length of the statement  "			Assert.AreEqual(AssociateRequestRelyingParty.Create(securitySettings' provider).AssociationType' protocol.Args.SignatureAlgorithm.HMAC_SHA384); " is 143.
Long Statement,DotNetOpenAuth.Test.OpenId.Messages,IndirectSignedResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Messages\IndirectSignedResponseTests.cs,CtorFromRequest,The length of the statement  "			Assert.IsTrue(DateTime.UtcNow - ((ITamperResistantOpenIdMessage)this.response).UtcCreationDate < TimeSpan.FromSeconds(5)); " is 122.
Long Statement,DotNetOpenAuth.Test.OpenId.Messages,IndirectSignedResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Messages\IndirectSignedResponseTests.cs,CtorUnsolicited,The length of the statement  "			Assert.IsTrue(DateTime.UtcNow - ((ITamperResistantOpenIdMessage)this.unsolicited).UtcCreationDate < TimeSpan.FromSeconds(5)); " is 125.
Long Statement,DotNetOpenAuth.Test.OpenId.Messages,SignedResponseRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Messages\SignedResponseRequestTests.cs,SetUp,The length of the statement  "			this.immediatev1 = new SignedResponseRequest(Protocol.V11.Version' this.providerEndpoint' AuthenticationRequestMode.Immediate); " is 127.
Long Statement,DotNetOpenAuth.Test.OpenId.Messages,SignedResponseRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Messages\SignedResponseRequestTests.cs,SetUp,The length of the statement  "			this.immediatev2 = new SignedResponseRequest(Protocol.V20.Version' this.providerEndpoint' AuthenticationRequestMode.Immediate); " is 127.
Long Statement,DotNetOpenAuth.Test.OpenId.Provider,PerformanceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Provider\PerformanceTests.cs,CreateAssociateRequest,The length of the statement  "			AssociateRequest associateMessage = AssociateRequestRelyingParty.Create(rp.SecuritySettings' new ProviderEndpointDescription(opEndpoint' Protocol.Default.Version)); " is 164.
Long Statement,DotNetOpenAuth.Test.OpenId.Provider,AuthenticationRequestTest,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Provider\AuthenticationRequestTest.cs,UserSetupUrl,The length of the statement  "			var immediateRequest = new CheckIdRequest(protocol.Version' OPUri' DotNetOpenAuth.OpenId.AuthenticationRequestMode.Immediate); " is 126.
Long Statement,DotNetOpenAuth.Test.OpenId.Provider,AuthenticationRequestTest,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Provider\AuthenticationRequestTest.cs,Serializable,The length of the statement  "			CheckIdRequest immediateRequest = new CheckIdRequest(Protocol.Default.Version' OPUri' DotNetOpenAuth.OpenId.AuthenticationRequestMode.Immediate); " is 145.
Long Statement,DotNetOpenAuth.Test.OpenId.Provider,HostProcessedRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Provider\HostProcessedRequestTests.cs,IsReturnUrlDiscoverableNoResponse,The length of the statement  "			Assert.AreEqual(RelyingPartyDiscoveryResult.NoServiceDocument' await this.request.IsReturnUrlDiscoverableAsync(this.provider.Channel.HostFactories' CancellationToken.None)); " is 173.
Long Statement,DotNetOpenAuth.Test.OpenId.Provider,HostProcessedRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Provider\HostProcessedRequestTests.cs,IsReturnUrlDiscoverableValidResponse,The length of the statement  "			Assert.AreEqual(RelyingPartyDiscoveryResult.Success' await this.request.IsReturnUrlDiscoverableAsync(this.provider.Channel.HostFactories' CancellationToken.None)); " is 163.
Long Statement,DotNetOpenAuth.Test.OpenId.Provider,HostProcessedRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Provider\HostProcessedRequestTests.cs,IsReturnUrlDiscoverableNotSsl,The length of the statement  "			Assert.AreEqual(RelyingPartyDiscoveryResult.NoServiceDocument' await this.request.IsReturnUrlDiscoverableAsync(this.provider.Channel.HostFactories' CancellationToken.None)); " is 173.
Long Statement,DotNetOpenAuth.Test.OpenId.Provider,HostProcessedRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Provider\HostProcessedRequestTests.cs,IsReturnUrlDiscoverableRequireSsl,The length of the statement  "			Assert.AreEqual(RelyingPartyDiscoveryResult.Success' await this.request.IsReturnUrlDiscoverableAsync(this.HostFactories' CancellationToken.None)); " is 146.
Long Statement,DotNetOpenAuth.Test.OpenId.Provider,HostProcessedRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Provider\HostProcessedRequestTests.cs,IsReturnUrlDiscoverableRequireSsl,The length of the statement  "			Assert.AreEqual(RelyingPartyDiscoveryResult.Success' await this.request.IsReturnUrlDiscoverableAsync(this.HostFactories' CancellationToken.None)); " is 146.
Long Statement,DotNetOpenAuth.Test.OpenId.Provider,OpenIdProviderTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Provider\OpenIdProviderTests.cs,GetRequest,The length of the statement  "			await rp.Channel.RequestAsync(AssociateRequestRelyingParty.Create(rp.SecuritySettings' providerDescription)' CancellationToken.None); " is 133.
Long Statement,DotNetOpenAuth.Test.Performance,PerformanceTestUtilities,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\PerformanceTestUtilities.cs,IsOptimized,The length of the statement  "			DebuggableAttribute debugAttribute = (DebuggableAttribute)System.Attribute.GetCustomAttribute(assembly' typeof(System.Diagnostics.DebuggableAttribute)); " is 152.
Complex Conditional,DotNetOpenAuth.Test.Mocks,TestMessageFactory,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Mocks\TestMessageFactory.cs,TestMessageFactory,The conditional expression  "(!signed && expiring) || (!expiring && replay)"  is complex.
Empty Catch Block,DotNetOpenAuth.Test.OpenId.RelyingParty,NegativeAuthenticationResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\NegativeAuthenticationResponseTests.cs,ImmediateVsSetupModes,The method has an empty catch block.
Empty Catch Block,DotNetOpenAuth.Test.OpenId.ChannelElements,ExtensionsBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\ExtensionsBindingElementTests.cs,TwoExtensionsSameTypeUri,The method has an empty catch block.
Empty Catch Block,DotNetOpenAuth.Test.OpenId.Messages,IndirectSignedResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Messages\IndirectSignedResponseTests.cs,ReturnToDoesNotMatchRecipient,The method has an empty catch block.
Magic Number,DotNetOpenAuth.Test,MessagingTestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingTestBase.cs,GetStandardTestMessage,The following statement contains a magic number: message.Age = 15;
Magic Number,DotNetOpenAuth.Test,TestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\TestBase.cs,MeasurePerformance,The following statement contains a magic number: TestUtilities.TestLogger.InfoFormat(  				"Performance counters: median {0}' mean {1}' min {2}' max {3}' stddev {4} ({5}%)."'  				stats.Median'  				stats.Mean'  				stats.Minimum'  				stats.Maximum'  				stats.StandardDeviation'  				stats.StandardDeviation / stats.Median * 100);
Magic Number,DotNetOpenAuth.Test,TestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\TestBase.cs,MeasurePerformance,The following statement contains a magic number: TestUtilities.TestLogger.InfoFormat("Within {0}% of the maximum allowed time of {1}."' Math.Round((maximumAllowedUnitTime - stats.Mean) / maximumAllowedUnitTime * 100' 1)' maximumAllowedUnitTime);
Magic Number,DotNetOpenAuth.Test.Configuration,SectionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Configuration\SectionTests.cs,UntrustedWebRequest,The following statement contains a magic number: Assert.AreEqual(500001' uwr.MaximumBytesToRead);
Magic Number,DotNetOpenAuth.Test.Configuration,SectionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Configuration\SectionTests.cs,UntrustedWebRequest,The following statement contains a magic number: Assert.AreEqual(9' uwr.MaximumRedirections);
Magic Number,DotNetOpenAuth.Test.Configuration,SectionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Configuration\SectionTests.cs,OpenIdRelyingParty,The following statement contains a magic number: Assert.AreEqual(6' rp.SecuritySettings.MinimumHashBitLength);
Magic Number,DotNetOpenAuth.Test.Configuration,SectionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Configuration\SectionTests.cs,OpenIdRelyingParty,The following statement contains a magic number: Assert.AreEqual(301' rp.SecuritySettings.MaximumHashBitLength);
Magic Number,DotNetOpenAuth.Test.Configuration,SectionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Configuration\SectionTests.cs,OpenIdProvider,The following statement contains a magic number: Assert.AreEqual(7' op.SecuritySettings.MinimumHashBitLength);
Magic Number,DotNetOpenAuth.Test.Configuration,SectionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Configuration\SectionTests.cs,OpenIdProvider,The following statement contains a magic number: Assert.AreEqual(302' op.SecuritySettings.MaximumHashBitLength);
Magic Number,DotNetOpenAuth.Test.Configuration,SectionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Configuration\SectionTests.cs,OpenIdProvider,The following statement contains a magic number: Assert.AreEqual(2' op.SecuritySettings.AssociationLifetimes.Count);
Magic Number,DotNetOpenAuth.Test.Messaging,EnumerableCacheTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\EnumerableCacheTests.cs,EnumerableCache,The following statement contains a magic number: Assert.AreEqual(2' this.generatorInvocations);
Magic Number,DotNetOpenAuth.Test.Messaging,EnumerableCacheTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\EnumerableCacheTests.cs,GeneratesOnlyRequiredElements,The following statement contains a magic number: generator.Take(2).ToList();
Magic Number,DotNetOpenAuth.Test.Messaging,EnumerableCacheTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\EnumerableCacheTests.cs,NumberGenerator,The following statement contains a magic number: i < 15
Magic Number,DotNetOpenAuth.Test.Messaging,MessageSerializerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessageSerializerTests.cs,SerializeTest,The following statement contains a magic number: Assert.AreEqual(4' actual.Count);
Magic Number,DotNetOpenAuth.Test.Messaging,MessageSerializerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessageSerializerTests.cs,DeserializeSimple,The following statement contains a magic number: Assert.AreEqual(15' actual.Age);
Magic Number,DotNetOpenAuth.Test.Messaging,MessageSerializerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessageSerializerTests.cs,DeserializeVerifyElementOrdering,The following statement contains a magic number: Assert.AreEqual(15' actual.Age);
Magic Number,DotNetOpenAuth.Test.Messaging,MessageSerializerTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessageSerializerTests.cs,DeserializeWithExtraFields,The following statement contains a magic number: Assert.AreEqual(15' actual.Age);
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EncryptDecrypt,The following statement contains a magic number: byte[] key = MessagingUtilities.GetCryptoRandomData(128 / 8);
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EncryptDecrypt,The following statement contains a magic number: byte[] key = MessagingUtilities.GetCryptoRandomData(128 / 8);
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,SerializeAsJsonTest,The following statement contains a magic number: var message = new TestMessageWithDate() {  				Age = 18'  				Timestamp = DateTime.ParseExact("28/04/2012 08:00"' "dd/MM/yyyy hh:mm"' CultureInfo.InvariantCulture)'  				Name = "Andrew"'  			};
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,DeserializeFromJson,The following statement contains a magic number: Assert.That(message.Age' Is.EqualTo(18));
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The following statement contains a magic number: string expected = new string('A'' 5000);
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The following statement contains a magic number: string totalmismatch = new string('B'' 5000);
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The following statement contains a magic number: string almostmatch = new string('A'' 4999) + 'B';
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The following statement contains a magic number: const int Iterations = 100000;
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The following statement contains a magic number: const double ToleranceFactor = 0.12;
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The following statement contains a magic number: long averageTimeTicks = (totalMismatchTimer.ElapsedTicks + almostMatchTimer.ElapsedTicks) / 2;
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The following statement contains a magic number: Assert.IsTrue(absoluteDifference <= tolerableDifference' "A total mismatch took {0} but a near match took {1}' which is too different to be indistinguishable.  The tolerable difference is {2} but the actual difference is {3}.  This represents a difference of {4}%' beyond the tolerated {5}%."' totalMismatchTimer.Elapsed' almostMatchTimer.Elapsed' tolerableDifference' absoluteDifference' Math.Round(actualFactor * 100)' Math.Round(ToleranceFactor * 100));
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The following statement contains a magic number: Assert.IsTrue(absoluteDifference <= tolerableDifference' "A total mismatch took {0} but a near match took {1}' which is too different to be indistinguishable.  The tolerable difference is {2} but the actual difference is {3}.  This represents a difference of {4}%' beyond the tolerated {5}%."' totalMismatchTimer.Elapsed' almostMatchTimer.Elapsed' tolerableDifference' absoluteDifference' Math.Round(actualFactor * 100)' Math.Round(ToleranceFactor * 100));
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The following statement contains a magic number: Console.WriteLine("A total mismatch took {0} and a near match took {1}.  The tolerable difference is {2}' and the actual difference is {3}.  This represents a difference of {4}%' within the tolerated {5}%."' totalMismatchTimer.Elapsed' almostMatchTimer.Elapsed' tolerableDifference' absoluteDifference' Math.Round(actualFactor * 100)' Math.Round(ToleranceFactor * 100));
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The following statement contains a magic number: Console.WriteLine("A total mismatch took {0} and a near match took {1}.  The tolerable difference is {2}' and the actual difference is {3}.  This represents a difference of {4}%' within the tolerated {5}%."' totalMismatchTimer.Elapsed' almostMatchTimer.Elapsed' tolerableDifference' absoluteDifference' Math.Round(actualFactor * 100)' Math.Round(ToleranceFactor * 100));
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The following statement contains a magic number: Console.WriteLine("The equality test execution time difference was only {0}%' within the tolerable {1}%"' Math.Round(100 * actualFactor)' Math.Round(ToleranceFactor * 100));
Magic Number,DotNetOpenAuth.Test.Messaging,MessagingUtilitiesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\MessagingUtilitiesTests.cs,EqualsConstantTimeIsActuallyConstantTime,The following statement contains a magic number: Console.WriteLine("The equality test execution time difference was only {0}%' within the tolerable {1}%"' Math.Round(100 * actualFactor)' Math.Round(ToleranceFactor * 100));
Magic Number,DotNetOpenAuth.Test.Messaging,ChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\ChannelTests.cs,SendInvalidMessageTransport,The following statement contains a magic number: IProtocolMessage message = new TestDirectedMessage((MessageTransport)100);
Magic Number,DotNetOpenAuth.Test.Messaging,ChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\ChannelTests.cs,SendIndirectMessageFormPost,The following statement contains a magic number: var message = new TestDirectedMessage(MessageTransport.Indirect) {  				Age = 15'  				Name = "c<b" + new string('a'' 10 * 1024)'  				Location = new Uri("http://host/path")'  				Recipient = new Uri("http://provider/path")'  			};
Magic Number,DotNetOpenAuth.Test.Messaging,ChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\ChannelTests.cs,SendIndirectMessageFormPost,The following statement contains a magic number: var message = new TestDirectedMessage(MessageTransport.Indirect) {  				Age = 15'  				Name = "c<b" + new string('a'' 10 * 1024)'  				Location = new Uri("http://host/path")'  				Recipient = new Uri("http://provider/path")'  			};
Magic Number,DotNetOpenAuth.Test.Messaging,ChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\ChannelTests.cs,SendIndirectMessageFormPost,The following statement contains a magic number: var message = new TestDirectedMessage(MessageTransport.Indirect) {  				Age = 15'  				Name = "c<b" + new string('a'' 10 * 1024)'  				Location = new Uri("http://host/path")'  				Recipient = new Uri("http://provider/path")'  			};
Magic Number,DotNetOpenAuth.Test.Messaging,ChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\ChannelTests.cs,SendDirectMessageResponse,The following statement contains a magic number: IProtocolMessage message = new TestDirectedMessage {  				Age = 15'  				Name = "Andrew"'  				Location = new Uri("http://host/path")'  			};
Magic Number,DotNetOpenAuth.Test.Messaging,ChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\ChannelTests.cs,BindingElementsOrdering,The following statement contains a magic number: Assert.AreEqual(5' channel.BindingElements.Count);
Magic Number,DotNetOpenAuth.Test.Messaging,ChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\ChannelTests.cs,BindingElementsOrdering,The following statement contains a magic number: Assert.AreSame(replay' channel.BindingElements[2]);
Magic Number,DotNetOpenAuth.Test.Messaging,ChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\ChannelTests.cs,BindingElementsOrdering,The following statement contains a magic number: Assert.AreSame(expire' channel.BindingElements[3]);
Magic Number,DotNetOpenAuth.Test.Messaging,ChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\ChannelTests.cs,BindingElementsOrdering,The following statement contains a magic number: Assert.AreSame(sign' channel.BindingElements[4]);
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessageDescriptionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessageDescriptionTests.cs,MultiVersionedMessageTest,The following statement contains a magic number: var v20 = new MessageDescription(typeof(MultiVersionMessage)' new Version(2' 0));
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessageDescriptionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessageDescriptionTests.cs,MultiVersionedMessageTest,The following statement contains a magic number: var v25 = new MessageDescription(typeof(MultiVersionMessage)' new Version(2' 5));
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessageDescriptionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessageDescriptionTests.cs,MultiVersionedMessageTest,The following statement contains a magic number: var v25 = new MessageDescription(typeof(MultiVersionMessage)' new Version(2' 5));
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessageDescriptionTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessageDescriptionTests.cs,MultiVersionedMessageTest,The following statement contains a magic number: var v30 = new MessageDescription(typeof(MultiVersionMessage)' new Version(3' 0));
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessageDictionaryTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessageDictionaryTests.cs,Values,The following statement contains a magic number: this.message.Age = 15;
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessageDictionaryTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessageDictionaryTests.cs,Item,The following statement contains a magic number: this.message.Age = 15;
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessageDictionaryTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessageDictionaryTests.cs,Item,The following statement contains a magic number: Assert.AreEqual(13' this.message.Age);
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessageDictionaryTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessageDictionaryTests.cs,RemoveStructDeclaredProperty,The following statement contains a magic number: this.message.Age = 5;
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessageDictionaryTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessageDictionaryTests.cs,ClearValues,The following statement contains a magic number: this.message.Age = 15;
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessageDictionaryTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessageDictionaryTests.cs,ClearValues,The following statement contains a magic number: Assert.AreEqual(2' target.Count' "Clearing should remove all keys except for declared non-nullable structs.");
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessagePartTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessagePartTests.cs,SetValue,The following statement contains a magic number: Assert.AreEqual(5' message.OptionalInt);
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessagePartTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessagePartTests.cs,GetValue,The following statement contains a magic number: message.OptionalInt = 8;
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessagePartTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessagePartTests.cs,RequiredMinAndMaxVersions,The following statement contains a magic number: Assert.AreEqual(new Version(2' 0)' newIn2Attribute.MinVersionValue);
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessagePartTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessagePartTests.cs,RequiredMinAndMaxVersions,The following statement contains a magic number: Assert.AreEqual(new Version(2' 5)' removedIn3Attribute.MaxVersionValue);
Magic Number,DotNetOpenAuth.Test.Messaging.Reflection,MessagePartTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Reflection\MessagePartTests.cs,RequiredMinAndMaxVersions,The following statement contains a magic number: Assert.AreEqual(new Version(2' 5)' removedIn3Attribute.MaxVersionValue);
Magic Number,DotNetOpenAuth.Test.Messaging.Bindings,StandardExpirationBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Bindings\StandardExpirationBindingElementTests.cs,SendSetsTimestamp,The following statement contains a magic number: Assert.IsTrue(DateTime.UtcNow - ((IExpiringProtocolMessage)message).UtcCreationDate < TimeSpan.FromSeconds(3)' "The timestamp on the message was not set on send.");
Magic Number,DotNetOpenAuth.Test.Messaging.Bindings,StandardExpirationBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Bindings\StandardExpirationBindingElementTests.cs,VerifyFutureTimestampIsRejected,The following statement contains a magic number: await this.ParameterizedReceiveProtectedTestAsync(DateTime.UtcNow + DotNetOpenAuthSection.Messaging.MaximumClockSkew + TimeSpan.FromSeconds(2)' false);
Magic Number,DotNetOpenAuth.Test.Messaging.Bindings,StandardReplayProtectionBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Messaging\Bindings\StandardReplayProtectionBindingElementTests.cs,SetUp,The following statement contains a magic number: this.nonceStore = new MemoryNonceStore(TimeSpan.FromHours(3));
Magic Number,DotNetOpenAuth.Test.Mocks,MockHttpRequest,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Mocks\MockHttpRequest.cs,RegisterMockXrdsResponse,The following statement contains a magic number: IdentifierDiscoveryResult identityEndpoint = IdentifierDiscoveryResult.CreateForClaimedIdentifier(  				directedIdentityAssignedIdentifier'  				directedIdentityAssignedIdentifier'  				providerEndpoint.ProviderLocalIdentifier'  				new ProviderEndpointDescription(providerEndpoint.ProviderEndpoint' providerEndpoint.Capabilities)'  				10'  				10);
Magic Number,DotNetOpenAuth.Test.Mocks,MockHttpRequest,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Mocks\MockHttpRequest.cs,RegisterMockXrdsResponse,The following statement contains a magic number: IdentifierDiscoveryResult identityEndpoint = IdentifierDiscoveryResult.CreateForClaimedIdentifier(  				directedIdentityAssignedIdentifier'  				directedIdentityAssignedIdentifier'  				providerEndpoint.ProviderLocalIdentifier'  				new ProviderEndpointDescription(providerEndpoint.ProviderEndpoint' providerEndpoint.Capabilities)'  				10'  				10);
Magic Number,DotNetOpenAuth.Test.OAuth.ChannelElements,OAuthChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\OAuthChannelTests.cs,ReadFromRequestAuthorizationScattered,The following statement contains a magic number: Assert.AreEqual(15' testMessage.Age);
Magic Number,DotNetOpenAuth.Test.OAuth.ChannelElements,OAuthChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\OAuthChannelTests.cs,SendDirectMessageResponse,The following statement contains a magic number: IProtocolMessage message = new TestDirectedMessage {  				Age = 15'  				Name = "Andrew"'  				Location = new Uri("http://hostb/pathB")'  			};
Magic Number,DotNetOpenAuth.Test.OAuth.ChannelElements,OAuthChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\OAuthChannelTests.cs,RequestUsingAuthorizationHeaderScattered,The following statement contains a magic number: TestDirectedMessage request = new TestDirectedMessage(MessageTransport.Direct) {  				Age = 15'  				Name = "Andrew"'  				Location = new Uri("http://hostb/pathB")'  				Recipient = new Uri("http://localtest")'  				Timestamp = DateTime.UtcNow'  				HttpMethods = HttpDeliveryMethods.AuthorizationHeaderRequest'  			};
Magic Number,DotNetOpenAuth.Test.OAuth.ChannelElements,OAuthChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\OAuthChannelTests.cs,ParameterizedRequestTestAsync,The following statement contains a magic number: var request = new TestDirectedMessage(MessageTransport.Direct) {  				Age = 15'  				Name = "Andrew"'  				Location = new Uri("http://hostb/pathB")'  				Recipient = new Uri("http://localtest")'  				Timestamp = DateTime.UtcNow'  				HttpMethods = scheme'  			};
Magic Number,DotNetOpenAuth.Test.OAuth.ChannelElements,OAuthChannelTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ChannelElements\OAuthChannelTests.cs,ParameterizedReceiveTestAsync,The following statement contains a magic number: Assert.AreEqual(15' testMessage.Age);
Magic Number,DotNetOpenAuth.Test.OAuth,ServiceProviderTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ServiceProviderTests.cs,CreateVerificationCode,The following statement contains a magic number: this.TestCode(VerificationCodeFormat.Numeric' 3' MessagingUtilities.Digits);
Magic Number,DotNetOpenAuth.Test.OAuth,ServiceProviderTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ServiceProviderTests.cs,CreateVerificationCode,The following statement contains a magic number: this.TestCode(VerificationCodeFormat.AlphaLower' 5' MessagingUtilities.LowercaseLetters);
Magic Number,DotNetOpenAuth.Test.OAuth,ServiceProviderTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ServiceProviderTests.cs,CreateVerificationCode,The following statement contains a magic number: this.TestCode(VerificationCodeFormat.AlphaUpper' 5' MessagingUtilities.UppercaseLetters);
Magic Number,DotNetOpenAuth.Test.OAuth,ServiceProviderTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OAuth\ServiceProviderTests.cs,CreateVerificationCode,The following statement contains a magic number: this.TestCode(VerificationCodeFormat.AlphaNumericNoLookAlikes' 8' MessagingUtilities.AlphaNumericNoLookAlikes);
Magic Number,DotNetOpenAuth.Test.OpenId.RelyingParty,AssociationsTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\AssociationsTests.cs,SetUp,The following statement contains a magic number: this.sha1Secret = new byte[sha1.HashSize / 8];
Magic Number,DotNetOpenAuth.Test.OpenId.RelyingParty,AssociationsTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\AssociationsTests.cs,Best,The following statement contains a magic number: b.Issued -= TimeSpan.FromHours(2);
Magic Number,DotNetOpenAuth.Test.OpenId.RelyingParty,AuthenticationRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\AuthenticationRequestTests.cs,CreateAuthenticationRequest,The following statement contains a magic number: IdentifierDiscoveryResult endpoint = IdentifierDiscoveryResult.CreateForClaimedIdentifier(claimedIdentifier' providerLocalIdentifier' providerEndpoint' 10' 5);
Magic Number,DotNetOpenAuth.Test.OpenId.RelyingParty,AuthenticationRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\AuthenticationRequestTests.cs,CreateAuthenticationRequest,The following statement contains a magic number: IdentifierDiscoveryResult endpoint = IdentifierDiscoveryResult.CreateForClaimedIdentifier(claimedIdentifier' providerLocalIdentifier' providerEndpoint' 10' 5);
Magic Number,DotNetOpenAuth.Test.OpenId.RelyingParty,OpenIdRelyingPartyTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\OpenIdRelyingPartyTests.cs,CreateRequest,The following statement contains a magic number: StoreAssociation(rp' OPUri' HmacShaAssociation.Create("somehandle"' new byte[20]' TimeSpan.FromDays(1)));
Magic Number,DotNetOpenAuth.Test.OpenId.RelyingParty,OpenIdRelyingPartyTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\OpenIdRelyingPartyTests.cs,CreateRequests,The following statement contains a magic number: StoreAssociation(rp' OPUri' HmacShaAssociation.Create("somehandle"' new byte[20]' TimeSpan.FromDays(1)));
Magic Number,DotNetOpenAuth.Test.OpenId.RelyingParty,OpenIdRelyingPartyTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\RelyingParty\OpenIdRelyingPartyTests.cs,CreateRequestsWithEndpointFilter,The following statement contains a magic number: StoreAssociation(rp' OPUri' HmacShaAssociation.Create("somehandle"' new byte[20]' TimeSpan.FromDays(1)));
Magic Number,DotNetOpenAuth.Test.OpenId,AssociationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationTests.cs,SetUp,The following statement contains a magic number: this.sha1Secret = new byte[sha1.HashSize / 8];
Magic Number,DotNetOpenAuth.Test.OpenId,AssociationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationTests.cs,SetUp,The following statement contains a magic number: this.sha1Secret2 = new byte[sha1.HashSize / 8];
Magic Number,DotNetOpenAuth.Test.OpenId,AssociationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationTests.cs,Properties,The following statement contains a magic number: TimeSpan lifetime = TimeSpan.FromMinutes(2);
Magic Number,DotNetOpenAuth.Test.OpenId,AssociationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationTests.cs,Sign,The following statement contains a magic number: Association assoc1 = HmacShaAssociation.Create(Protocol.Default' Protocol.Default.Args.SignatureAlgorithm.HMAC_SHA1' "h1"' this.sha1Secret' TimeSpan.FromMinutes(2));
Magic Number,DotNetOpenAuth.Test.OpenId,AssociationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationTests.cs,Sign,The following statement contains a magic number: Association assoc2 = HmacShaAssociation.Create(Protocol.Default' Protocol.Default.Args.SignatureAlgorithm.HMAC_SHA1' "h2"' this.sha1Secret2' TimeSpan.FromMinutes(2));
Magic Number,DotNetOpenAuth.Test.OpenId,AuthenticationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AuthenticationTests.cs,ParameterizedAuthenticationTestAsync,The following statement contains a magic number: HandleProvider(  				async (op' req) => {  					if (association != null) {  						var key = cryptoKeyStore.GetCurrentKey(  							ProviderAssociationHandleEncoder.AssociationHandleEncodingSecretBucket' TimeSpan.FromSeconds(1));  						op.CryptoKeyStore.StoreKey(  							ProviderAssociationHandleEncoder.AssociationHandleEncodingSecretBucket' key.Key' key.Value);  					}    					switch (++opStep) {  						case 1:  							var request = await op.Channel.ReadFromRequestAsync<CheckIdRequest>(req' CancellationToken.None);  							Assert.IsNotNull(request);  							IProtocolMessage response;  							if (positive) {  								response = new PositiveAssertionResponse(request);  							} else {  								response = await NegativeAssertionResponse.CreateAsync(request' CancellationToken.None' op.Channel);  							}    							return await op.Channel.PrepareResponseAsync(response);  						case 2:  							if (positive && (statelessRP || !sharedAssociation)) {  								var checkauthRequest =  									await op.Channel.ReadFromRequestAsync<CheckAuthenticationRequest>(req' CancellationToken.None);  								var checkauthResponse = new CheckAuthenticationResponse(checkauthRequest.Version' checkauthRequest);  								checkauthResponse.IsValid = checkauthRequest.IsValid;  								return await op.Channel.PrepareResponseAsync(checkauthResponse);  							}    							throw Assumes.NotReachable();  						case 3:  							if (positive && (statelessRP || !sharedAssociation)) {  								if (!tamper) {  									// Respond to the replay attack.  									var checkauthRequest =  										await op.Channel.ReadFromRequestAsync<CheckAuthenticationRequest>(req' CancellationToken.None);  									var checkauthResponse = new CheckAuthenticationResponse(checkauthRequest.Version' checkauthRequest);  									checkauthResponse.IsValid = checkauthRequest.IsValid;  									return await op.Channel.PrepareResponseAsync(checkauthResponse);  								}  							}    							throw Assumes.NotReachable();  						default:  							throw Assumes.NotReachable();  					}  				});
Magic Number,DotNetOpenAuth.Test.OpenId,AuthenticationTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AuthenticationTests.cs,ParameterizedAuthenticationTestAsync,The following statement contains a magic number: HandleProvider(  				async (op' req) => {  					if (association != null) {  						var key = cryptoKeyStore.GetCurrentKey(  							ProviderAssociationHandleEncoder.AssociationHandleEncodingSecretBucket' TimeSpan.FromSeconds(1));  						op.CryptoKeyStore.StoreKey(  							ProviderAssociationHandleEncoder.AssociationHandleEncodingSecretBucket' key.Key' key.Value);  					}    					switch (++opStep) {  						case 1:  							var request = await op.Channel.ReadFromRequestAsync<CheckIdRequest>(req' CancellationToken.None);  							Assert.IsNotNull(request);  							IProtocolMessage response;  							if (positive) {  								response = new PositiveAssertionResponse(request);  							} else {  								response = await NegativeAssertionResponse.CreateAsync(request' CancellationToken.None' op.Channel);  							}    							return await op.Channel.PrepareResponseAsync(response);  						case 2:  							if (positive && (statelessRP || !sharedAssociation)) {  								var checkauthRequest =  									await op.Channel.ReadFromRequestAsync<CheckAuthenticationRequest>(req' CancellationToken.None);  								var checkauthResponse = new CheckAuthenticationResponse(checkauthRequest.Version' checkauthRequest);  								checkauthResponse.IsValid = checkauthRequest.IsValid;  								return await op.Channel.PrepareResponseAsync(checkauthResponse);  							}    							throw Assumes.NotReachable();  						case 3:  							if (positive && (statelessRP || !sharedAssociation)) {  								if (!tamper) {  									// Respond to the replay attack.  									var checkauthRequest =  										await op.Channel.ReadFromRequestAsync<CheckAuthenticationRequest>(req' CancellationToken.None);  									var checkauthResponse = new CheckAuthenticationResponse(checkauthRequest.Version' checkauthRequest);  									checkauthResponse.IsValid = checkauthRequest.IsValid;  									return await op.Channel.PrepareResponseAsync(checkauthResponse);  								}  							}    							throw Assumes.NotReachable();  						default:  							throw Assumes.NotReachable();  					}  				});
Magic Number,DotNetOpenAuth.Test.OpenId,DiffieHellmanTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiffieHellmanTests.cs,TestPublic,The following statement contains a magic number: y[0] == 0 && y[1] <= 127
Magic Number,DotNetOpenAuth.Test.OpenId,NonIdentityTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\NonIdentityTests.cs,ExtensionOnlyFacadeLevel,The following statement contains a magic number: HandleProvider(  				async (op' req) => {  					switch (++opStep) {  						case 1:  							var assocRequest = await op.GetRequestAsync(req);  							return await op.PrepareResponseAsync(assocRequest);  						case 2:  							var request = (IAnonymousRequest)await op.GetRequestAsync(req);  							request.IsApproved = true;  							Assert.IsNotInstanceOf<CheckIdRequest>(request);  							return await op.PrepareResponseAsync(request);  						default:  							throw Assumes.NotReachable();  					}  				});
Magic Number,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,AssociateRenegotiateBitLength,The following statement contains a magic number: HandleProvider(  				async (op' request) => {  					op.SecuritySettings.MaximumHashBitLength = 160; // Force OP to reject HMAC-SHA256    					switch (++providerAttemptCount) {  						case 1:  							// Receive initial request for an HMAC-SHA256 association.  							var req = (AutoResponsiveRequest)await op.GetRequestAsync(request);  							var associateRequest = (AssociateRequest)req.RequestMessage;  							Assert.That(associateRequest' Is.Not.Null);  							Assert.AreEqual(protocol.Args.SignatureAlgorithm.HMAC_SHA256' associateRequest.AssociationType);    							// Ensure that the response is a suggestion that the RP try again with HMAC-SHA1  							var renegotiateResponse =  								(AssociateUnsuccessfulResponse)await req.GetResponseMessageAsyncTestHook(CancellationToken.None);  							Assert.AreEqual(protocol.Args.SignatureAlgorithm.HMAC_SHA1' renegotiateResponse.AssociationType);  							return await op.PrepareResponseAsync(req);    						case 2:  							// Receive second attempt request for an HMAC-SHA1 association.  							req = (AutoResponsiveRequest)await op.GetRequestAsync(request);  							associateRequest = (AssociateRequest)req.RequestMessage;  							Assert.AreEqual(protocol.Args.SignatureAlgorithm.HMAC_SHA1' associateRequest.AssociationType);    							// Ensure that the response is a success response.  							var successResponse =  								(AssociateSuccessfulResponse)await req.GetResponseMessageAsyncTestHook(CancellationToken.None);  							Assert.AreEqual(protocol.Args.SignatureAlgorithm.HMAC_SHA1' successResponse.AssociationType);  							return await op.PrepareResponseAsync(req);    						default:  							throw Assumes.NotReachable();  					}  				});
Magic Number,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,AssociateRenegotiateBitLength,The following statement contains a magic number: HandleProvider(  				async (op' request) => {  					op.SecuritySettings.MaximumHashBitLength = 160; // Force OP to reject HMAC-SHA256    					switch (++providerAttemptCount) {  						case 1:  							// Receive initial request for an HMAC-SHA256 association.  							var req = (AutoResponsiveRequest)await op.GetRequestAsync(request);  							var associateRequest = (AssociateRequest)req.RequestMessage;  							Assert.That(associateRequest' Is.Not.Null);  							Assert.AreEqual(protocol.Args.SignatureAlgorithm.HMAC_SHA256' associateRequest.AssociationType);    							// Ensure that the response is a suggestion that the RP try again with HMAC-SHA1  							var renegotiateResponse =  								(AssociateUnsuccessfulResponse)await req.GetResponseMessageAsyncTestHook(CancellationToken.None);  							Assert.AreEqual(protocol.Args.SignatureAlgorithm.HMAC_SHA1' renegotiateResponse.AssociationType);  							return await op.PrepareResponseAsync(req);    						case 2:  							// Receive second attempt request for an HMAC-SHA1 association.  							req = (AutoResponsiveRequest)await op.GetRequestAsync(request);  							associateRequest = (AssociateRequest)req.RequestMessage;  							Assert.AreEqual(protocol.Args.SignatureAlgorithm.HMAC_SHA1' associateRequest.AssociationType);    							// Ensure that the response is a success response.  							var successResponse =  								(AssociateSuccessfulResponse)await req.GetResponseMessageAsyncTestHook(CancellationToken.None);  							Assert.AreEqual(protocol.Args.SignatureAlgorithm.HMAC_SHA1' successResponse.AssociationType);  							return await op.PrepareResponseAsync(req);    						default:  							throw Assumes.NotReachable();  					}  				});
Magic Number,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,RPOnlyRenegotiatesOnce,The following statement contains a magic number: HandleProvider(  				async (op' req) => {  					switch (++opStep) {  						case 1:  							// Receive initial request.  							var request = await op.Channel.ReadFromRequestAsync<AssociateRequest>(req' CancellationToken.None);    							// Send a renegotiate response  							var renegotiateResponse = new AssociateUnsuccessfulResponse(request.Version' request);  							renegotiateResponse.AssociationType = protocol.Args.SignatureAlgorithm.HMAC_SHA1;  							renegotiateResponse.SessionType = protocol.Args.SessionType.DH_SHA1;  							return await op.Channel.PrepareResponseAsync(renegotiateResponse' CancellationToken.None);    						case 2:  							// Receive second-try  							request = await op.Channel.ReadFromRequestAsync<AssociateRequest>(req' CancellationToken.None);    							// Send ANOTHER renegotiate response' at which point the DNOI RP should give up.  							renegotiateResponse = new AssociateUnsuccessfulResponse(request.Version' request);  							renegotiateResponse.AssociationType = protocol.Args.SignatureAlgorithm.HMAC_SHA256;  							renegotiateResponse.SessionType = protocol.Args.SessionType.DH_SHA256;  							return await op.Channel.PrepareResponseAsync(renegotiateResponse' CancellationToken.None);    						default:  							throw Assumes.NotReachable();  					}  				});
Magic Number,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,AssociateRenegotiateLimitedByRPSecuritySettings,The following statement contains a magic number: HandleProvider(  				async (op' req) => {  					op.SecuritySettings.MaximumHashBitLength = 160;  					return await AutoProviderActionAsync(op' req' CancellationToken.None);  				});
Magic Number,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,AssociateRenegotiateLimitedByRPSecuritySettings,The following statement contains a magic number: rp.SecuritySettings.MinimumHashBitLength = 256;
Magic Number,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,ParameterizedAssociationTestAsync,The following statement contains a magic number: var associationType = protocol.Version.Major < 2 ? protocol.Args.SignatureAlgorithm.HMAC_SHA1 : protocol.Args.SignatureAlgorithm.HMAC_SHA256;
Magic Number,DotNetOpenAuth.Test.OpenId,AssociationHandshakeTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\AssociationHandshakeTests.cs,ParameterizedAssociationTestAsync,The following statement contains a magic number: Assert.IsTrue(Math.Abs(opAssociation.SecondsTillExpiration - rpAssociation.SecondsTillExpiration) < 60);
Magic Number,DotNetOpenAuth.Test.OpenId,OpenIdTestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\OpenIdTestBase.cs,GetServiceEndpoint,The following statement contains a magic number: return IdentifierDiscoveryResult.CreateForClaimedIdentifier(  				claimed_id'  				claimed_id'  				local_id'  				providerEndpoint'  				servicePriority'  				10);
Magic Number,DotNetOpenAuth.Test.OpenId,OpenIdTestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\OpenIdTestBase.cs,GetMockIdentifier,The following statement contains a magic number: var se = GetServiceEndpoint(0' providerVersion' 10' useSsl' delegating);
Magic Number,DotNetOpenAuth.Test.OpenId,OpenIdTestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\OpenIdTestBase.cs,GetMockDualIdentifier,The following statement contains a magic number: var dualResults = new IdentifierDiscoveryResult[] {  				IdentifierDiscoveryResult.CreateForClaimedIdentifier(VanityUri.AbsoluteUri' OPLocalIdentifiers[0]' opDesc' 10' 10)'  				IdentifierDiscoveryResult.CreateForProviderIdentifier(protocol.ClaimedIdentifierForOPIdentifier' opDesc' 20' 20)'  			};
Magic Number,DotNetOpenAuth.Test.OpenId,OpenIdTestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\OpenIdTestBase.cs,GetMockDualIdentifier,The following statement contains a magic number: var dualResults = new IdentifierDiscoveryResult[] {  				IdentifierDiscoveryResult.CreateForClaimedIdentifier(VanityUri.AbsoluteUri' OPLocalIdentifiers[0]' opDesc' 10' 10)'  				IdentifierDiscoveryResult.CreateForProviderIdentifier(protocol.ClaimedIdentifierForOPIdentifier' opDesc' 20' 20)'  			};
Magic Number,DotNetOpenAuth.Test.OpenId,OpenIdTestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\OpenIdTestBase.cs,GetMockDualIdentifier,The following statement contains a magic number: var dualResults = new IdentifierDiscoveryResult[] {  				IdentifierDiscoveryResult.CreateForClaimedIdentifier(VanityUri.AbsoluteUri' OPLocalIdentifiers[0]' opDesc' 10' 10)'  				IdentifierDiscoveryResult.CreateForProviderIdentifier(protocol.ClaimedIdentifierForOPIdentifier' opDesc' 20' 20)'  			};
Magic Number,DotNetOpenAuth.Test.OpenId,OpenIdTestBase,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\OpenIdTestBase.cs,GetMockDualIdentifier,The following statement contains a magic number: var dualResults = new IdentifierDiscoveryResult[] {  				IdentifierDiscoveryResult.CreateForClaimedIdentifier(VanityUri.AbsoluteUri' OPLocalIdentifiers[0]' opDesc' 10' 10)'  				IdentifierDiscoveryResult.CreateForProviderIdentifier(protocol.ClaimedIdentifierForOPIdentifier' opDesc' 20' 20)'  			};
Magic Number,DotNetOpenAuth.Test.OpenId.ChannelElements,ExtensionsBindingElementTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\ChannelElements\ExtensionsBindingElementTests.cs,ExtensionsAreIdentifiedAsSignedOrUnsigned,The following statement contains a magic number: Handle(RPUri).By(  				async req => {  					var rp = new OpenIdRelyingParty(new MemoryCryptoKeyAndNonceStore()' this.HostFactories);  					RegisterMockExtension(rp.Channel);    					switch (++rpStep) {  						case 1:  							var response = await rp.Channel.ReadFromRequestAsync<IndirectSignedResponse>(req' CancellationToken.None);  							Assert.AreEqual(1' response.SignedExtensions.Count()' "Signed extension should have been received.");  							Assert.AreEqual(0' response.UnsignedExtensions.Count()' "No unsigned extension should be present.");  							break;  						case 2:  							response = await rp.Channel.ReadFromRequestAsync<IndirectSignedResponse>(req' CancellationToken.None);  							Assert.AreEqual(0' response.SignedExtensions.Count()' "No signed extension should have been received.");  							Assert.AreEqual(1' response.UnsignedExtensions.Count()' "Unsigned extension should have been received.");  							break;    						default:  							throw Assumes.NotReachable();  					}    					return new HttpResponseMessage();  				});
Magic Number,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DiscoveryRequiresSslIgnoresInsecureEndpointsInXrds,The following statement contains a magic number: var insecureEndpoint = GetServiceEndpoint(0' ProtocolVersion.V20' 10' false);
Magic Number,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DiscoveryRequiresSslIgnoresInsecureEndpointsInXrds,The following statement contains a magic number: var secureEndpoint = GetServiceEndpoint(1' ProtocolVersion.V20' 20' true);
Magic Number,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DualIdentifier,The following statement contains a magic number: Assert.AreEqual(2' results.Count' "Unexpected additional services discovered.");
Magic Number,DotNetOpenAuth.Test.OpenId.DiscoveryServices,UriDiscoveryServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\UriDiscoveryServiceTests.cs,DiscoverAsync,The following statement contains a magic number: Assert.AreEqual(expectSreg ? 2 : 1' se.Capabilities.Count);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions,FetchRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\AttributeExchange\FetchRequestTests.cs,RespondTwoValues,The following statement contains a magic number: req.Count = 2;
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions,FetchRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\AttributeExchange\FetchRequestTests.cs,RespondTwoValues,The following statement contains a magic number: Assert.AreEqual(2' resp.Values.Count);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions,AttributeRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\AttributeExchange\AttributeRequestTests.cs,CtorFull,The following statement contains a magic number: var req = new AttributeRequest(WellKnownAttributes.Contact.Email' true' 5);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions,AttributeRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\AttributeExchange\AttributeRequestTests.cs,CtorFull,The following statement contains a magic number: Assert.AreEqual(5' req.Count);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions,AttributeRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\AttributeExchange\AttributeRequestTests.cs,EqualityTests,The following statement contains a magic number: req1.Count = 3;
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions,AttributeRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\AttributeExchange\AttributeRequestTests.cs,EqualityTests,The following statement contains a magic number: req2.Count = 3;
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions,ClaimsResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\SimpleRegistration\ClaimsResponseTests.cs,Birthdates,The following statement contains a magic number: Assert.AreEqual(4' response.BirthDate.Value.Month);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions,ClaimsResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\SimpleRegistration\ClaimsResponseTests.cs,GetFilledData,The following statement contains a magic number: return new ClaimsResponse(Constants.TypeUris.Standard) {  				BirthDate = new DateTime(2005' 2' 3)'  				Culture = new System.Globalization.CultureInfo("en-US")'  				Email = "a@b.com"'  				FullName = "Jimmy buffet"'  				Gender = Gender.Male'  				Nickname = "Jimbo"'  				PostalCode = "12345"'  				TimeZone = "PST"'  			};
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions,ClaimsResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\SimpleRegistration\ClaimsResponseTests.cs,GetFilledData,The following statement contains a magic number: return new ClaimsResponse(Constants.TypeUris.Standard) {  				BirthDate = new DateTime(2005' 2' 3)'  				Culture = new System.Globalization.CultureInfo("en-US")'  				Email = "a@b.com"'  				FullName = "Jimmy buffet"'  				Gender = Gender.Male'  				Nickname = "Jimbo"'  				PostalCode = "12345"'  				TimeZone = "PST"'  			};
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions,ClaimsResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\SimpleRegistration\ClaimsResponseTests.cs,GetFilledData,The following statement contains a magic number: return new ClaimsResponse(Constants.TypeUris.Standard) {  				BirthDate = new DateTime(2005' 2' 3)'  				Culture = new System.Globalization.CultureInfo("en-US")'  				Email = "a@b.com"'  				FullName = "Jimmy buffet"'  				Gender = Gender.Male'  				Nickname = "Jimbo"'  				PostalCode = "12345"'  				TimeZone = "PST"'  			};
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions.AttributeExchange,AttributeValuesTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\AttributeExchange\AttributeValuesTests.cs,Ctor,The following statement contains a magic number: Assert.AreEqual(2' att.Values.Count);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions.ProviderAuthenticationPolicy,PapeRoundTripTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ProviderAuthenticationPolicy\PapeRoundTripTests.cs,Full,The following statement contains a magic number: request.MaximumAuthenticationAge = TimeSpan.FromMinutes(10);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions.ProviderAuthenticationPolicy,PapeRoundTripTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ProviderAuthenticationPolicy\PapeRoundTripTests.cs,Full,The following statement contains a magic number: response.AuthenticationTimeUtc = DateTime.UtcNow - TimeSpan.FromMinutes(5);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions.ProviderAuthenticationPolicy,PolicyRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ProviderAuthenticationPolicy\PolicyRequestTests.cs,AddPolicies,The following statement contains a magic number: Assert.AreEqual(2' resp.PreferredPolicies.Count);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions.ProviderAuthenticationPolicy,PolicyRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ProviderAuthenticationPolicy\PolicyRequestTests.cs,AddPolicyMultipleTimes,The following statement contains a magic number: Assert.AreEqual(2' resp.PreferredPolicies.Count);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions.ProviderAuthenticationPolicy,PolicyRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ProviderAuthenticationPolicy\PolicyRequestTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual(2' fields.Count);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions.ProviderAuthenticationPolicy,PolicyRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ProviderAuthenticationPolicy\PolicyRequestTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual(4' fields.Count);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions.ProviderAuthenticationPolicy,PolicyRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ProviderAuthenticationPolicy\PolicyRequestTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual(5' fields.Count);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions.ProviderAuthenticationPolicy,PolicyResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ProviderAuthenticationPolicy\PolicyResponseTests.cs,AddPolicies,The following statement contains a magic number: Assert.AreEqual(2' resp.ActualPolicies.Count);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions.ProviderAuthenticationPolicy,PolicyResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ProviderAuthenticationPolicy\PolicyResponseTests.cs,AddPolicyMultipleTimes,The following statement contains a magic number: Assert.AreEqual(2' resp.ActualPolicies.Count);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions.ProviderAuthenticationPolicy,PolicyResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ProviderAuthenticationPolicy\PolicyResponseTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual(2' fields.Count);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions.ProviderAuthenticationPolicy,PolicyResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ProviderAuthenticationPolicy\PolicyResponseTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual(4' fields.Count);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions.ProviderAuthenticationPolicy,PolicyResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\ProviderAuthenticationPolicy\PolicyResponseTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual(6' fields.Count);
Magic Number,DotNetOpenAuth.Test.OpenId.Extensions.UI,UIRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Extensions\UI\UIRequestTests.cs,LanguagePreferenceEncodingDecoding,The following statement contains a magic number: Assert.AreEqual(2' request.LanguagePreference.Length);
Magic Number,DotNetOpenAuth.Test.OpenId.Messages,AssociateRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Messages\AssociateRequestTests.cs,AssociateRequestDeterminedBySecuritySettings,The following statement contains a magic number: securitySettings.MinimumHashBitLength = 160;
Magic Number,DotNetOpenAuth.Test.OpenId.Messages,AssociateRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Messages\AssociateRequestTests.cs,AssociateRequestDeterminedBySecuritySettings,The following statement contains a magic number: securitySettings.MaximumHashBitLength = 160;
Magic Number,DotNetOpenAuth.Test.OpenId.Messages,AssociateRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Messages\AssociateRequestTests.cs,AssociateRequestDeterminedBySecuritySettings,The following statement contains a magic number: securitySettings.MinimumHashBitLength = 384;
Magic Number,DotNetOpenAuth.Test.OpenId.Messages,AssociateRequestTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Messages\AssociateRequestTests.cs,AssociateRequestDeterminedBySecuritySettings,The following statement contains a magic number: securitySettings.MaximumHashBitLength = 384;
Magic Number,DotNetOpenAuth.Test.OpenId.Messages,AssociateUnencryptedResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Messages\AssociateUnencryptedResponseTests.cs,ParameterNames,The following statement contains a magic number: this.response.ExpiresIn = 50;
Magic Number,DotNetOpenAuth.Test.OpenId.Messages,IndirectSignedResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Messages\IndirectSignedResponseTests.cs,CtorFromRequest,The following statement contains a magic number: Assert.IsTrue(DateTime.UtcNow - ((ITamperResistantOpenIdMessage)this.response).UtcCreationDate < TimeSpan.FromSeconds(5));
Magic Number,DotNetOpenAuth.Test.OpenId.Messages,IndirectSignedResponseTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Messages\IndirectSignedResponseTests.cs,CtorUnsolicited,The following statement contains a magic number: Assert.IsTrue(DateTime.UtcNow - ((ITamperResistantOpenIdMessage)this.unsolicited).UtcCreationDate < TimeSpan.FromSeconds(5));
Magic Number,DotNetOpenAuth.Test.OpenId.Provider,PerformanceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Provider\PerformanceTests.cs,AssociateDH,The following statement contains a magic number: MeasurePerformance(  				async delegate {  					IRequest request = await this.provider.GetRequestAsync(associateRequest);  					var response = await this.provider.PrepareResponseAsync(request);  					Assert.IsInstanceOf<AssociateSuccessfulResponse>(((HttpResponseMessageWithOriginal)response).OriginalMessage);  				}'  				maximumAllowedUnitTime: 3.5e6f'  				iterations: 1);
Magic Number,DotNetOpenAuth.Test.OpenId.Provider,PerformanceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Provider\PerformanceTests.cs,AssociateClearText,The following statement contains a magic number: MeasurePerformance(  				async delegate {  					IRequest request = await this.provider.GetRequestAsync(associateRequest);  					var response = await this.provider.PrepareResponseAsync(request);  					Assert.IsInstanceOf<AssociateSuccessfulResponse>(((HttpResponseMessageWithOriginal)response).OriginalMessage);  				}'  				maximumAllowedUnitTime: 1.5e4f'  				iterations: 1000);
Magic Number,DotNetOpenAuth.Test.OpenId.Provider,PerformanceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Provider\PerformanceTests.cs,AssociateClearText,The following statement contains a magic number: MeasurePerformance(  				async delegate {  					IRequest request = await this.provider.GetRequestAsync(associateRequest);  					var response = await this.provider.PrepareResponseAsync(request);  					Assert.IsInstanceOf<AssociateSuccessfulResponse>(((HttpResponseMessageWithOriginal)response).OriginalMessage);  				}'  				maximumAllowedUnitTime: 1.5e4f'  				iterations: 1000);
Magic Number,DotNetOpenAuth.Test.OpenId.Provider,PerformanceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\Provider\PerformanceTests.cs,ParameterizedCheckIdTest,The following statement contains a magic number: MeasurePerformance(  				async delegate {  					var request = (IAuthenticationRequest)await this.provider.GetRequestAsync(checkidRequest);  					request.IsAuthenticated = true;  					var response = await this.provider.PrepareResponseAsync(request);  					Assert.IsInstanceOf<PositiveAssertionResponse>(((HttpResponseMessageWithOriginal)response).OriginalMessage);  				}'  				maximumAllowedUnitTime: 6.8e4f);
Magic Number,DotNetOpenAuth.Test.Performance,Stats,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\CodeTimers.cs,ComputeStats,The following statement contains a magic number: median = this[Count / 2];
Magic Number,DotNetOpenAuth.Test.Performance,Stats,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\CodeTimers.cs,ComputeStats,The following statement contains a magic number: Count % 2 == 1
Magic Number,DotNetOpenAuth.Test.Performance,CodeTimer,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\CodeTimers.cs,CodeTimer,The following statement contains a magic number: sw.ElapsedMilliseconds < 32
Magic Number,DotNetOpenAuth.Test.Performance,CodeTimer,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\CodeTimers.cs,Measure,The following statement contains a magic number: float sampleUsec = (float)((sw.Elapsed.TotalMilliseconds * 1000.0F - overheadUsec) / scale / iterationCount);
Magic Number,DotNetOpenAuth.Test.Performance,CodeTimer,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\CodeTimers.cs,GetOverheadUsec,The following statement contains a magic number: i < 5
Magic Number,DotNetOpenAuth.Test.Performance,CodeTimer,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\CodeTimers.cs,GetOverheadUsec,The following statement contains a magic number: i < 5
Magic Number,DotNetOpenAuth.Test.Performance,HighPerformance,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\HighPerformance.cs,SpinCpu,The following statement contains a magic number: new MultiSampleCodeTimer(10' 1000).Measure(  				"Loop 1K times"'  				1'  				delegate {  					int k = 0;  					while (k < 1000) {  						k++;        // still in danger of being optimized.    					}    					dummy = k;      // avoid optimization.    				});
Magic Number,DotNetOpenAuth.Test.Performance,HighPerformance,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\HighPerformance.cs,SpinCpu,The following statement contains a magic number: new MultiSampleCodeTimer(10' 1000).Measure(  				"Loop 1K times"'  				1'  				delegate {  					int k = 0;  					while (k < 1000) {  						k++;        // still in danger of being optimized.    					}    					dummy = k;      // avoid optimization.    				});
Magic Number,DotNetOpenAuth.Test.Performance,HighPerformance,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\HighPerformance.cs,SpinCpu,The following statement contains a magic number: new MultiSampleCodeTimer(10' 1000).Measure(  				"Loop 1K times"'  				1'  				delegate {  					int k = 0;  					while (k < 1000) {  						k++;        // still in danger of being optimized.    					}    					dummy = k;      // avoid optimization.    				});
Magic Number,DotNetOpenAuth.Test.Performance,HighPerformance,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\HighPerformance.cs,WaitForQuietCpu,The following statement contains a magic number: TimeSpan samplingInterval = TimeSpan.FromMilliseconds(1000);
Magic Number,DotNetOpenAuth.Test.Performance,PerformanceTestUtilities,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\PerformanceTestUtilities.cs,PerformanceTestUtilities,The following statement contains a magic number: TestUtilities.TestLogger.InfoFormat(  				"Scaled where EmptyStaticFunction = 1.0 ({0:f1} nsec = 1.0 units)"'  				Baseline.Median * 1000);
Magic Number,DotNetOpenAuth.Test.Performance,PerformanceTestUtilities,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\PerformanceTestUtilities.cs,CollectBaseline,The following statement contains a magic number: return new MultiSampleCodeTimer(10' 1000).Measure(  					"MethodCalls: EmptyStaticFunction()"'  					10'  					delegate {  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  					});
Magic Number,DotNetOpenAuth.Test.Performance,PerformanceTestUtilities,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\PerformanceTestUtilities.cs,CollectBaseline,The following statement contains a magic number: return new MultiSampleCodeTimer(10' 1000).Measure(  					"MethodCalls: EmptyStaticFunction()"'  					10'  					delegate {  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  					});
Magic Number,DotNetOpenAuth.Test.Performance,PerformanceTestUtilities,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\Performance\PerformanceTestUtilities.cs,CollectBaseline,The following statement contains a magic number: return new MultiSampleCodeTimer(10' 1000).Measure(  					"MethodCalls: EmptyStaticFunction()"'  					10'  					delegate {  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  						Class.EmptyStaticFunction();  					});
Duplicate Code,DotNetOpenAuth.Test.OpenId.DiscoveryServices,XriDiscoveryProxyServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\XriDiscoveryProxyServiceTests.cs,DiscoverCommunityInameCanonicalIDs,The method contains a code clone-set at the following line numbers (starting from the method definition): ((48' 72)' (85' 109))
Duplicate Code,DotNetOpenAuth.Test.OpenId.DiscoveryServices,XriDiscoveryProxyServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\XriDiscoveryProxyServiceTests.cs,DiscoverCommunityInameCanonicalIDs,The method contains a code clone-set at the following line numbers (starting from the method definition): ((48' 68)' (122' 142)' (85' 105))
Duplicate Code,DotNetOpenAuth.Test.OpenId.DiscoveryServices,XriDiscoveryProxyServiceTests,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.Test\OpenId\DiscoveryServices\XriDiscoveryProxyServiceTests.cs,DiscoveryCommunityInameDelegateWithoutCanonicalID,The method contains a code clone-set at the following line numbers (starting from the method definition): ((10' 34)' (53' 77))
