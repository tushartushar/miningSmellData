Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,Consumer,The method has 5 parameters. Parameters: consumerKey' consumerSecret' serviceProvider' temporaryCredentialStorage' hostFactories
Long Identifier,DotNetOpenAuth.OAuth,ServiceProviderDescription,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\ServiceProviderDescription.cs,ServiceProviderDescription,The length of the parameter temporaryCredentialsRequestEndpoint is 35.
Long Identifier,DotNetOpenAuth.OAuth,ServiceProviderDescription,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\ServiceProviderDescription.cs,ServiceProviderDescription,The length of the parameter resourceOwnerAuthorizationEndpoint is 34.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,RequestNewClientAccountAsync,The length of the statement  "						ErrorUtilities.VerifyProtocol(!string.IsNullOrEmpty(identifier)' MessagingStrings.RequiredParametersMissing' typeof(UnauthorizedTokenResponse).Name' Protocol.TokenParameter); " is 174.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,RequestNewClientAccountAsync,The length of the statement  "						ErrorUtilities.VerifyProtocol(secret != null' MessagingStrings.RequiredParametersMissing' typeof(UnauthorizedTokenResponse).Name' Protocol.TokenSecretParameter); " is 161.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,RequestNewClientAccountAsync,The length of the statement  "					request = new HttpRequestMessage(this.ServiceProvider.TokenRequestEndpointMethod' this.ServiceProvider.TokenRequestEndpoint); " is 125.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,RequestNewClientAccountAsync,The length of the statement  "						ErrorUtilities.VerifyProtocol(!string.IsNullOrEmpty(accessToken)' MessagingStrings.RequiredParametersMissing' typeof(AuthorizedTokenResponse).Name' Protocol.TokenParameter); " is 173.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,RequestNewClientAccountAsync,The length of the statement  "						ErrorUtilities.VerifyProtocol(tokenSecret != null' MessagingStrings.RequiredParametersMissing' typeof(AuthorizedTokenResponse).Name' Protocol.TokenSecretParameter); " is 164.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,RequestUserAuthorizationAsync,The length of the statement  "			Verify.Operation(this.TemporaryCredentialStorage != null' Strings.RequiredPropertyNotYetPreset' "TemporaryCredentialStorage"); " is 126.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,RequestUserAuthorizationAsync,The length of the statement  "					ErrorUtilities.VerifyProtocol(string.Equals(responseData[Protocol.CallbackConfirmedParameter]' "true"' StringComparison.Ordinal)' MessagingStrings.RequiredParametersMissing' typeof(UnauthorizedTokenResponse).Name' Protocol.CallbackConfirmedParameter); " is 251.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,RequestUserAuthorizationAsync,The length of the statement  "					ErrorUtilities.VerifyProtocol(!string.IsNullOrEmpty(identifier)' MessagingStrings.RequiredParametersMissing' typeof(UnauthorizedTokenResponse).Name' Protocol.TokenParameter); " is 174.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,RequestUserAuthorizationAsync,The length of the statement  "					ErrorUtilities.VerifyProtocol(secret != null' MessagingStrings.RequiredParametersMissing' typeof(UnauthorizedTokenResponse).Name' Protocol.TokenSecretParameter); " is 161.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,ProcessUserAuthorizationAsync,The length of the statement  "			Verify.Operation(this.TemporaryCredentialStorage != null' Strings.RequiredPropertyNotYetPreset' "TemporaryCredentialStorage"); " is 126.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,ProcessUserAuthorizationAsync,The length of the statement  "			ErrorUtilities.VerifyProtocol(!string.IsNullOrEmpty(identifier)' MessagingStrings.RequiredNonEmptyParameterWasEmpty' typeof(UserAuthorizationResponse).Name' Protocol.TokenParameter); " is 182.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,ProcessUserAuthorizationAsync,The length of the statement  "			ErrorUtilities.VerifyProtocol(!string.IsNullOrEmpty(verifier)' MessagingStrings.RequiredNonEmptyParameterWasEmpty' typeof(UserAuthorizationResponse).Name' Protocol.VerifierParameter); " is 183.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,ProcessUserAuthorizationAsync,The length of the statement  "			Verify.Operation(string.Equals(temporaryCredential.Key' identifier' StringComparison.Ordinal)' "Temporary credential identifiers do not match."); " is 145.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,ProcessUserAuthorizationAsync,The length of the statement  "			Verify.Operation(this.TemporaryCredentialStorage != null' Strings.RequiredPropertyNotYetPreset' "TemporaryCredentialStorage"); " is 126.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,ProcessUserAuthorizationAsync,The length of the statement  "					ErrorUtilities.VerifyProtocol(!string.IsNullOrEmpty(accessToken)' MessagingStrings.RequiredParametersMissing' typeof(AuthorizedTokenResponse).Name' Protocol.TokenParameter); " is 173.
Long Statement,DotNetOpenAuth.OAuth,Consumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\Consumer.cs,ProcessUserAuthorizationAsync,The length of the statement  "					ErrorUtilities.VerifyProtocol(tokenSecret != null' MessagingStrings.RequiredParametersMissing' typeof(AuthorizedTokenResponse).Name' Protocol.TokenSecretParameter); " is 164.
Long Statement,DotNetOpenAuth.OAuth,OAuth1HttpMessageHandlerBase,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\OAuth1HttpMessageHandlerBase.cs,ApplyAuthorization,The length of the statement  "					request.Headers.Authorization = new AuthenticationHeaderValue(Protocol.AuthorizationHeaderScheme' MessagingUtilities.AssembleAuthorizationHeader(oauthParameters.AsKeyValuePairs())); " is 181.
Long Statement,DotNetOpenAuth.OAuth,OAuth1HttpMessageHandlerBase,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\OAuth1HttpMessageHandlerBase.cs,GetNormalizedParameters,The length of the statement  "				string escapedValue = UrlEscape(pair.Value ?? string.Empty); // value can be null if no "=" appears in the query string for this key. " is 133.
Magic Number,DotNetOpenAuth.OAuth,CookieTemporaryCredentialStorage,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\CookieTemporaryCredentialStorage.cs,ClearTemporaryCredential,The following statement contains a magic number: var cookie = new HttpCookie(TokenCookieKey) {  				Value = string.Empty'  				Expires = DateTime.UtcNow.AddDays(-5)'  			};
Magic Number,DotNetOpenAuth.OAuth,OAuth1HttpMessageHandlerBase,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\OAuth1HttpMessageHandlerBase.cs,GetOAuthParameters,The following statement contains a magic number: var nvc = new NameValueCollection(8);
Magic Number,DotNetOpenAuth.OAuth,OAuth1HttpMessageHandlerBase,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\OAuth1HttpMessageHandlerBase.cs,GetNormalizedParameters,The following statement contains a magic number: if (request.RequestUri.Query != null) {  				// NameValueCollection does support non-unique keys' as long as you use it carefully.  				nvc = HttpUtility.ParseQueryString(request.RequestUri.Query);  			} else {  				nvc = new NameValueCollection(8);  			}
Missing Default,DotNetOpenAuth.OAuth,OAuth1HttpMessageHandlerBase,C:\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OAuth.Consumer\OAuth\OAuth1HttpMessageHandlerBase.cs,ApplyAuthorization,The following switch statement is missing a default case: switch (this.Location) {  				case OAuthParametersLocation.AuthorizationHttpHeader:  					// Some oauth parameters may have been put in the query string of the original message.  					// We want to move any that we find into the authorization header.  					oauthParameters.Add(ExtractOAuthParametersFromQueryString(request));    					request.Headers.Authorization = new AuthenticationHeaderValue(Protocol.AuthorizationHeaderScheme' MessagingUtilities.AssembleAuthorizationHeader(oauthParameters.AsKeyValuePairs()));  					break;  				case OAuthParametersLocation.QueryString:  					var uriBuilder = new UriBuilder(request.RequestUri);  					uriBuilder.AppendQueryArgs(oauthParameters.AsKeyValuePairs());  					request.RequestUri = uriBuilder.Uri;  					break;  			}
