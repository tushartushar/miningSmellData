Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumerWpf\MainWindow.xaml.cs,beginButton_Click,Cyclomatic complexity of the method is 9
Complex Method,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumerWpf\MainWindow.xaml.cs,oauth2BeginButton_Click,Cyclomatic complexity of the method is 9
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumerWpf\MainWindow.xaml.cs,beginAuthorizationButton_Click,The length of the statement  "		MessageBox.Show (this' "You must modify the App.config or OAuthConsumerWpf.exe.config file for this application to include your Google OAuth consumer key first."' "Configuration required"' MessageBoxButton.OK' MessageBoxImage.Stop); " is 232.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumerWpf\MainWindow.xaml.cs,beginAuthorizationButton_Click,The length of the statement  "	var auth = new Authorize (this.google' consumer => ((GoogleConsumer)consumer).RequestUserAuthorizationAsync (GoogleConsumer.Applications.Contacts | GoogleConsumer.Applications.Blogger)); " is 186.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumerWpf\MainWindow.xaml.cs,postButton_Click,The length of the statement  "	await this.google.PostBlogEntryAsync (this.googleAccessToken' this.blogUrlBox.Text' this.postTitleBox.Text' postBodyXml); " is 121.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumerWpf\MainWindow.xaml.cs,beginWcfAuthorizationButton_Click,The length of the statement  "	auth.Authorization.Scope.AddRange (OAuthUtilities.SplitScopes ("http://tempuri.org/IDataApi/GetName http://tempuri.org/IDataApi/GetAge http://tempuri.org/IDataApi/GetFavoriteSites")); " is 183.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumerWpf\MainWindow.xaml.cs,beginButton_Click,The length of the statement  "		var service = new ServiceProviderDescription (this.requestTokenUrlBox.Text' this.authorizeUrlBox.Text' this.accessTokenUrlBox.Text); " is 132.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumerWpf\MainWindow.xaml.cs,beginButton_Click,The length of the statement  "		var consumer = new Consumer (this.consumerKeyBox.Text' this.consumerSecretBox.Text' service' new MemoryTemporaryCredentialStorage ()); " is 134.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumerWpf\MainWindow.xaml.cs,beginButton_Click,The length of the statement  "			handler.Location = this.resourceHttpMethodList.SelectedIndex == 1 ? OAuth1HttpMessageHandlerBase.OAuthParametersLocation.AuthorizationHttpHeader : OAuth1HttpMessageHandlerBase.OAuthParametersLocation.QueryString; " is 212.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumerWpf\MainWindow.xaml.cs,oauth2BeginButton_Click,The length of the statement  "		var client = new OAuth2.UserAgentClient (authServer' this.oauth2ClientIdentifierBox.Text' this.oauth2ClientSecretBox.Text); " is 123.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumerWpf\MainWindow.xaml.cs,oauth2BeginButton_Click,The length of the statement  "			var request = new HttpRequestMessage (new HttpMethod (((ComboBoxItem)this.oauth2ResourceHttpMethodList.SelectedValue).Content.ToString ())' this.oauth2ResourceUrlBox.Text); " is 172.
Magic Number,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumerWpf\MainWindow.xaml.cs,beginButton_Click,The following statement contains a magic number: try {  	var service = new ServiceProviderDescription (this.requestTokenUrlBox.Text' this.authorizeUrlBox.Text' this.accessTokenUrlBox.Text);  	var consumer = new Consumer (this.consumerKeyBox.Text' this.consumerSecretBox.Text' service' new MemoryTemporaryCredentialStorage ());  	DotNetOpenAuth.OAuth.AccessToken accessToken;  	var authorizePopup = new Authorize (consumer' c => c.RequestUserAuthorizationAsync (null' null));  	authorizePopup.Owner = this;  	bool? result = authorizePopup.ShowDialog ();  	if (result.HasValue && result.Value) {  		accessToken = authorizePopup.AccessToken;  	} else {  		return;  	}  	HttpMethod resourceHttpMethod = this.resourceHttpMethodList.SelectedIndex < 2 ? HttpMethod.Get : HttpMethod.Post;  	using (var handler = consumer.CreateMessageHandler (accessToken)) {  		handler.Location = this.resourceHttpMethodList.SelectedIndex == 1 ? OAuth1HttpMessageHandlerBase.OAuthParametersLocation.AuthorizationHttpHeader : OAuth1HttpMessageHandlerBase.OAuthParametersLocation.QueryString;  		using (var httpClient = consumer.CreateHttpClient (handler)) {  			var request = new HttpRequestMessage (resourceHttpMethod' this.resourceUrlBox.Text);  			using (var resourceResponse = await httpClient.SendAsync (request)) {  				this.resultsBox.Text = await resourceResponse.Content.ReadAsStringAsync ();  			}  		}  	}  } catch (DotNetOpenAuth.Messaging.ProtocolException ex) {  	MessageBox.Show (this' ex.Message);  }  
