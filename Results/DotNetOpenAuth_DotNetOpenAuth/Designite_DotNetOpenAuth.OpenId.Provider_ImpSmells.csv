Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,OnOutgoingResponseAsync,Cyclomatic complexity of the method is 11
Complex Method,DotNetOpenAuth.OpenId.Provider.Behaviors,PpidGeneration,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\PpidGeneration.cs,OnOutgoingResponseAsync,Cyclomatic complexity of the method is 8
Complex Method,DotNetOpenAuth.OpenId.ChannelElements,OpenIdProviderMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\OpenIdProviderMessageFactory.cs,GetNewRequestMessage,Cyclomatic complexity of the method is 9
Complex Method,DotNetOpenAuth.OpenId.Provider,PrivatePersonalIdentifierProviderBase,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\PrivatePersonalIdentifierProviderBase.cs,GetIdentifier,Cyclomatic complexity of the method is 10
Complex Method,DotNetOpenAuth.OpenId.Provider,HostProcessedRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\HostProcessedRequest.cs,IsReturnUrlDiscoverableCoreAsync,Cyclomatic complexity of the method is 8
Complex Method,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,GetRequestAsync,Cyclomatic complexity of the method is 14
Long Parameter List,DotNetOpenAuth.OpenId.ChannelElements,OpenIdProviderChannel,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\OpenIdProviderChannel.cs,OpenIdProviderChannel,The method has 5 parameters.
Long Parameter List,DotNetOpenAuth.OpenId.Provider,HmacShaAssociationProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\HmacShaAssociationProvider.cs,Create,The method has 5 parameters.
Long Parameter List,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,PrepareUnsolicitedAssertionAsync,The method has 6 parameters.
Long Statement,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,ApplySecuritySettings,The length of the statement  "	SetMaximumAssociationLifetimeToNotExceed (Protocol.Default.Args.SignatureAlgorithm.HMAC_SHA256' MaximumAssociationLifetime' securitySettings); " is 142.
Long Statement,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,ApplySecuritySettings,The length of the statement  "	SetMaximumAssociationLifetimeToNotExceed (Protocol.Default.Args.SignatureAlgorithm.HMAC_SHA1' MaximumAssociationLifetime' securitySettings); " is 140.
Long Statement,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,OnIncomingRequestAsync,The length of the statement  "				ErrorUtilities.VerifyProtocol (papeRequest.PreferredPolicies.Contains (AuthenticationPolicies.PrivatePersonalIdentifier)' BehaviorStrings.PapeRequestMissingRequiredPolicies); " is 174.
Long Statement,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,OnIncomingRequestAsync,The length of the statement  "				ErrorUtilities.VerifyProtocol (string.Equals (hostProcessedRequest.Realm.Scheme' Uri.UriSchemeHttps' StringComparison.Ordinal) || DisableSslRequirement' BehaviorStrings.RealmMustBeHttps); " is 187.
Long Statement,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,OnOutgoingResponseAsync,The length of the statement  "			ErrorUtilities.VerifyProtocol (request.ClaimedIdentifier == request.LocalIdentifier' OpenIdStrings.DelegatingIdentifiersNotAllowed); " is 132.
Long Statement,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,OnOutgoingResponseAsync,The length of the statement  "			ErrorUtilities.VerifyProtocol (!responseMessage.Extensions.OfType<ClaimsResponse> ().Any () && !responseMessage.Extensions.OfType<FetchResponse> ().Any ()' BehaviorStrings.PiiIncludedWithNoPiiPolicy); " is 200.
Long Statement,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,SetMaximumAssociationLifetimeToNotExceed,The length of the statement  "	if (!securitySettings.AssociationLifetimes.ContainsKey (associationType) || securitySettings.AssociationLifetimes [associationType] > maximumLifetime) { " is 152.
Long Statement,DotNetOpenAuth.OpenId.Provider.Behaviors,PpidGeneration,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\PpidGeneration.cs,OnOutgoingResponseAsync,The length of the statement  "			ErrorUtilities.VerifyProtocol (request.ClaimedIdentifier == request.LocalIdentifier' OpenIdStrings.DelegatingIdentifiersNotAllowed); " is 132.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,OpenIdProviderMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\OpenIdProviderMessageFactory.cs,GetNewRequestMessage,The length of the statement  "		ErrorUtilities.VerifyProtocol (string.Equals (ns' Protocol.OpenId2Namespace' StringComparison.Ordinal)' MessagingStrings.UnexpectedMessagePartValue' Protocol.V20.openid.ns' ns); " is 177.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,OpenIdProviderMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\OpenIdProviderMessageFactory.cs,GetNewRequestMessage,The length of the statement  "		} else if (string.Equals (mode' protocol.Args.Mode.checkid_setup) || string.Equals (mode' protocol.Args.Mode.checkid_immediate)) { " is 130.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,OpenIdProviderMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\OpenIdProviderMessageFactory.cs,GetNewRequestMessage,The length of the statement  "			AuthenticationRequestMode authMode = string.Equals (mode' protocol.Args.Mode.checkid_immediate) ? AuthenticationRequestMode.Immediate : AuthenticationRequestMode.Setup; " is 168.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,OpenIdProviderMessageFactory,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\OpenIdProviderMessageFactory.cs,GetNewRequestMessage,The length of the statement  "				ErrorUtilities.VerifyProtocol (!fields.ContainsKey (protocol.openid.claimed_id)' OpenIdStrings.IdentityAndClaimedIdentifierMustBeBothPresentOrAbsent); " is 150.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,ProviderSigningBindingElement,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\ProviderSigningBindingElement.cs,GetAssociation,The length of the statement  "		bool forcePrivateAssociation = this.opSecuritySettings.ProtectDownlevelReplayAttacks && IsRelyingPartyVulnerableToReplays (null' (IndirectSignedResponse)signedMessage); " is 168.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,ProviderSigningBindingElement,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\ProviderSigningBindingElement.cs,GetAssociation,The length of the statement  "				Logger.Signatures.Info ("An OpenID 1.x authentication request with a shared association handle will be responded to with a private association in order to provide OP-side replay protection."); " is 192.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,ProviderSigningBindingElement,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\ProviderSigningBindingElement.cs,GetDumbAssociationForSigning,The length of the statement  "	Association association = HmacShaAssociationProvider.Create (protocol' protocol.Args.SignatureAlgorithm.HMAC_SHA256' AssociationRelyingPartyType.Dumb' this.opAssociations' this.opSecuritySettings); " is 197.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,ProviderSigningBindingElement,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\ProviderSigningBindingElement.cs,GetSignedParameterOrder,The length of the statement  "	where (part.RequiredProtection & System.Net.Security.ProtectionLevel.Sign) != 0 && part.GetValue (signedMessage) != null " is 120.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,ProviderSigningBindingElement,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\ProviderSigningBindingElement.cs,GetSignedParameterOrder,The length of the statement  "	ErrorUtilities.VerifyInternal (signedParts.All (name => name.StartsWith (prefix' StringComparison.Ordinal))' "All signed message parts must start with 'openid.'."); " is 164.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,ProviderSigningBindingElement,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\ProviderSigningBindingElement.cs,GetSignedParameterOrder,The length of the statement  "				Logger.Signatures.DebugFormat ("The extra parameter '{0}' will not be signed because it does not start with 'openid.'."' key); " is 126.
Long Statement,DotNetOpenAuth.OpenId.Provider.Extensions,ExtensionsInteropHelper,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Extensions\ExtensionsInteropHelper.cs,ConvertSregToMatchRequestAsync,The length of the statement  "			AXAttributeFormats format = OpenIdExtensionsInteropHelper.DetectAXFormat (axRequest.Attributes.Select (att => att.TypeUri)); " is 124.
Long Statement,DotNetOpenAuth.OpenId.Provider.Extensions,ExtensionsInteropHelper,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Extensions\ExtensionsInteropHelper.cs,ConvertSregToMatchRequestAsync,The length of the statement  "				AddAXAttributeValue (axResponse' WellKnownAttributes.Person.Gender' format' OpenIdExtensionsInteropHelper.GenderEncoder.Encode (sregResponse.Gender)); " is 150.
Long Statement,DotNetOpenAuth.OpenId.Provider,HmacShaAssociationProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\HmacShaAssociationProvider.cs,Create,The length of the statement  "	string handle = associationStore.Serialize (secret' DateTime.UtcNow + lifetime' associationUse == AssociationRelyingPartyType.Dumb); " is 132.
Long Statement,DotNetOpenAuth.OpenId.Provider,AssociationDataBag,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\AssociationDataBag.cs,CreateFormatter,The length of the statement  "	return new BinaryDataBagFormatter<AssociationDataBag> (cryptoKeyStore' bucket' signed: true' encrypted: true' minimumAge: minimumAge); " is 134.
Long Statement,DotNetOpenAuth.OpenId.Provider,ProviderAssociationHandleEncoder,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\ProviderAssociationHandleEncoder.cs,Serialize,The length of the statement  "	var formatter = AssociationDataBag.CreateFormatter (this.cryptoKeyStore' AssociationHandleEncodingSecretBucket' expiresUtc - DateTime.UtcNow); " is 142.
Long Statement,DotNetOpenAuth.OpenId.Provider,ProviderAssociationKeyStorage,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\ProviderAssociationKeyStorage.cs,Serialize,The length of the statement  "	this.cryptoKeyStore.StoreKey (privateAssociation ? PrivateAssociationBucket : SharedAssociationBucket' handle = OpenIdUtilities.GenerateRandomAssociationHandle ()' new CryptoKey (secret' expiresUtc)); " is 200.
Long Statement,DotNetOpenAuth.OpenId.Provider,ProviderAssociationKeyStorage,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\ProviderAssociationKeyStorage.cs,Deserialize,The length of the statement  "	var key = this.cryptoKeyStore.GetKey (isPrivateAssociation ? PrivateAssociationBucket : SharedAssociationBucket' handle); " is 121.
Long Statement,DotNetOpenAuth.OpenId.Provider,PrivatePersonalIdentifierProviderBase,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\PrivatePersonalIdentifierProviderBase.cs,GetIdentifier,The length of the statement  "		throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' OpenIdStrings.UnexpectedEnumPropertyValue' "PairwiseUnique"' this.PairwiseUnique)); " is 163.
Long Statement,DotNetOpenAuth.OpenId.Provider,HostProcessedRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\HostProcessedRequest.cs,IsReturnUrlDiscoverableCoreAsync,The length of the statement  "			Logger.OpenId.WarnFormat ("RP discovery failed because RequireSsl is true and RP discovery would begin at insecure URL {0}."' this.Realm); " is 138.
Long Statement,DotNetOpenAuth.OpenId.Provider,HostProcessedRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\HostProcessedRequest.cs,IsReturnUrlDiscoverableCoreAsync,The length of the statement  "				Logger.Yadis.WarnFormat ("Realm {0} contained return_to URL {1} which contains a wildcard' which is not allowed."' Realm' discoveredReturnToUrl); " is 145.
Long Statement,DotNetOpenAuth.OpenId.Provider,HostProcessedRequest,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\HostProcessedRequest.cs,SharedInitialization,The length of the statement  "	this.negativeResponse = new Lazy<Task<NegativeAssertionResponse>> (() => NegativeAssertionResponse.CreateAsync (this.RequestMessage' CancellationToken.None' provider.Channel)); " is 176.
Long Statement,DotNetOpenAuth.OpenId.Provider,Request,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Request.cs,GetExtension,The length of the statement  "		return this.extensibleMessage.Extensions.OfType<IOpenIdMessageExtension> ().Where (ext => extensionType.IsInstanceOfType (ext)).SingleOrDefault (); " is 147.
Long Statement,DotNetOpenAuth.OpenId.Provider,Request,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Request.cs,GetResponseAsync,The length of the statement  "		ErrorUtilities.VerifyOperation (extensibleResponse != null' MessagingStrings.MessageNotExtensible' responseMessage.GetType ().Name); " is 132.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,GetHttpApplicationStore,The length of the statement  "		ErrorUtilities.VerifyOperation (HttpContext.Current != null' Strings.StoreRequiredWhenNoHttpContextAvailable' typeof(ICryptoKeyAndNonceStore).Name); " is 148.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,GetRequestAsync,The length of the statement  "			if (request.Method == HttpMethod.Get && !request.RequestUri.QueryStringContainPrefixedParameters (Protocol.Default.openid.Prefix)) { " is 132.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,GetRequestAsync,The length of the statement  "				result = new AutoResponsiveRequest (incomingMessage' new CheckAuthenticationResponseProvider (checkAuthMessage' this)' this.SecuritySettings); " is 142.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,GetRequestAsync,The length of the statement  "				result = new AutoResponsiveRequest (incomingMessage' AssociateRequestProviderTools.CreateResponse (associateMessage' this.AssociationStore' this.SecuritySettings)' this.SecuritySettings); " is 187.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,PrepareUnsolicitedAssertionAsync,The length of the statement  "	if (this.SecuritySettings.UnsolicitedAssertionVerification != ProviderSecuritySettings.UnsolicitedAssertionVerificationLevel.NeverVerify) { " is 139.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,PrepareUnsolicitedAssertionAsync,The length of the statement  "		var serviceEndpoint = IdentifierDiscoveryResult.CreateForClaimedIdentifier (claimedIdentifier' localIdentifier' new ProviderEndpointDescription (providerEndpoint' Protocol.Default.Version)' null' null); " is 202.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,PrepareUnsolicitedAssertionAsync,The length of the statement  "			Logger.OpenId.WarnFormat ("Failed to send unsolicited assertion for {0} because its discovered services did not include this endpoint: {1}{2}{1}Discovered endpoints: {1}{3}"' claimedIdentifier' Environment.NewLine' serviceEndpoint' discoveredEndpoints.ToStringDeferred (true)); " is 277.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,PrepareUnsolicitedAssertionAsync,The length of the statement  "			if (this.securitySettings.UnsolicitedAssertionVerification == ProviderSecuritySettings.UnsolicitedAssertionVerificationLevel.RequireSuccess) { " is 142.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,PrepareUnsolicitedAssertionAsync,The length of the statement  "	var returnToEndpoints = await relyingPartyRealm.DiscoverReturnToEndpointsAsync (this.Channel.HostFactories' true' cancellationToken); " is 133.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,PrepareUnsolicitedAssertionAsync,The length of the statement  "	ErrorUtilities.VerifyProtocol (returnToEndpoint != null' OpenIdStrings.NoRelyingPartyEndpointDiscovered' relyingPartyRealm); " is 124.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateDiffieHellmanProviderResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateDiffieHellmanProviderResponse.cs,CreateAssociationAtProvider,The length of the statement  "	Association association = HmacShaAssociationProvider.Create (this.Protocol' this.AssociationType' AssociationRelyingPartyType.Smart' associationStore' securitySettings); " is 169.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateDiffieHellmanProviderResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateDiffieHellmanProviderResponse.cs,CreateAssociationAtProvider,The length of the statement  "	using (DiffieHellman dh = new DiffieHellmanManaged (diffieHellmanRequest.DiffieHellmanModulus ?? AssociateDiffieHellmanRequest.DefaultMod' diffieHellmanRequest.DiffieHellmanGen ?? AssociateDiffieHellmanRequest.DefaultGen' AssociateDiffieHellmanRequest.DefaultX)) { " is 264.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateDiffieHellmanProviderResponse,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateDiffieHellmanProviderResponse.cs,CreateAssociationAtProvider,The length of the statement  "		this.EncodedMacKey = DiffieHellmanUtilities.SHAHashXorSecret (hasher' dh' diffieHellmanRequest.DiffieHellmanConsumerPublic' association.SecretKey); " is 147.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateRequestProviderTools,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateRequestProviderTools.cs,CreateResponse,The length of the statement  "	if (securitySettings.IsAssociationInPermittedRange (protocol' request.AssociationType) && HmacShaAssociation.IsDHSessionCompatible (protocol' request.AssociationType' request.SessionType)) { " is 190.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateRequestProviderTools,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateRequestProviderTools.cs,CreateUnsuccessfulResponse,The length of the statement  "	var unsuccessfulResponse = new AssociateUnsuccessfulResponse (requestMessage.Version' (AssociateRequest)requestMessage); " is 120.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateRequestProviderTools,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateRequestProviderTools.cs,CreateUnsuccessfulResponse,The length of the statement  "	if (HmacShaAssociation.TryFindBestAssociation (protocol' false' securitySettings' useDiffieHellman' out associationType' out sessionType)) { " is 140.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateRequestProviderTools,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateRequestProviderTools.cs,CreateUnsuccessfulResponse,The length of the statement  "		ErrorUtilities.VerifyInternal (request.AssociationType != associationType' "The RP asked for an association that should have been allowed' but the OP is trying to suggest the same one as an alternative!"); " is 205.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateRequestProviderTools,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateRequestProviderTools.cs,CreateUnsuccessfulResponse,The length of the statement  "		Logger.OpenId.InfoFormat ("Association requested of type '{0}' and session '{1}'' which the Provider does not support.  Sending back suggested alternative of '{0}' with session '{1}'."' request.AssociationType' request.SessionType' unsuccessfulResponse.AssociationType' unsuccessfulResponse.SessionType); " is 304.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateRequestProviderTools,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateRequestProviderTools.cs,CreateUnsuccessfulResponse,The length of the statement  "		Logger.OpenId.InfoFormat ("Association requested of type '{0}' and session '{1}'' which the Provider does not support.  No alternative association type qualified for suggesting back to the Relying Party."' request.AssociationType' request.SessionType); " is 252.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateUnencryptedResponseProvider,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateUnencryptedResponseProvider.cs,CreateAssociationAtProvider,The length of the statement  "	Association association = HmacShaAssociationProvider.Create (Protocol' this.AssociationType' AssociationRelyingPartyType.Smart' associationStore' securitySettings); " is 164.
Magic Number,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,ApplySecuritySettings,The following statement contains a magic number: if (securitySettings.MaximumHashBitLength < 256) {  	securitySettings.MaximumHashBitLength = 256;  }  
Magic Number,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,ApplySecuritySettings,The following statement contains a magic number: if (securitySettings.MaximumHashBitLength < 256) {  	securitySettings.MaximumHashBitLength = 256;  }  
Magic Number,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,ApplySecuritySettings,The following statement contains a magic number: securitySettings.MaximumHashBitLength = 256;  
Magic Number,DotNetOpenAuth.OpenId.ChannelElements,ProviderSigningBindingElement,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\ProviderSigningBindingElement.cs,IsRelyingPartyVulnerableToReplays,The following statement contains a magic number: if (response.Version.Major >= 2) {  	return false;  }  
Magic Number,DotNetOpenAuth.OpenId.Provider,AssociationDataBag,F:\newReposMay17\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\AssociationDataBag.cs,Deserialize,The following statement contains a magic number: this.Secret = reader.ReadBuffer (256);  
