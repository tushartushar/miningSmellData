Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,OnOutgoingResponseAsync,Cyclomatic complexity of the method is 11
Complex Method,DotNetOpenAuth.OpenId.Provider.Behaviors,PpidGeneration,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\PpidGeneration.cs,OnOutgoingResponseAsync,Cyclomatic complexity of the method is 8
Complex Method,DotNetOpenAuth.OpenId.ChannelElements,OpenIdProviderMessageFactory,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\OpenIdProviderMessageFactory.cs,GetNewRequestMessage,Cyclomatic complexity of the method is 9
Complex Method,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,GetRequestAsync,Cyclomatic complexity of the method is 13
Long Parameter List,DotNetOpenAuth.OpenId.ChannelElements,OpenIdProviderChannel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\OpenIdProviderChannel.cs,OpenIdProviderChannel,The method has 5 parameters. Parameters: cryptoKeyStore' nonceStore' messageTypeProvider' securitySettings' hostFactories
Long Parameter List,DotNetOpenAuth.OpenId.Provider,HmacShaAssociationProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\HmacShaAssociationProvider.cs,Create,The method has 5 parameters. Parameters: protocol' associationType' associationUse' associationStore' securitySettings
Long Parameter List,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,PrepareUnsolicitedAssertionAsync,The method has 6 parameters. Parameters: providerEndpoint' relyingPartyRealm' claimedIdentifier' localIdentifier' cancellationToken' extensions
Long Identifier,DotNetOpenAuth.OpenId.Provider,ProviderAssociationHandleEncoder,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\ProviderAssociationHandleEncoder.cs,,The length of the parameter AssociationHandleEncodingSecretBucket is 37.
Long Statement,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,ApplySecuritySettings,The length of the statement  "			SetMaximumAssociationLifetimeToNotExceed(Protocol.Default.Args.SignatureAlgorithm.HMAC_SHA256' MaximumAssociationLifetime' securitySettings); " is 141.
Long Statement,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,ApplySecuritySettings,The length of the statement  "			SetMaximumAssociationLifetimeToNotExceed(Protocol.Default.Args.SignatureAlgorithm.HMAC_SHA1' MaximumAssociationLifetime' securitySettings); " is 139.
Long Statement,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,OnIncomingRequestAsync,The length of the statement  "						ErrorUtilities.VerifyProtocol(papeRequest.PreferredPolicies.Contains(AuthenticationPolicies.PrivatePersonalIdentifier)' BehaviorStrings.PapeRequestMissingRequiredPolicies); " is 172.
Long Statement,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,OnIncomingRequestAsync,The length of the statement  "						ErrorUtilities.VerifyProtocol(string.Equals(hostProcessedRequest.Realm.Scheme' Uri.UriSchemeHttps' StringComparison.Ordinal) || DisableSslRequirement' BehaviorStrings.RealmMustBeHttps); " is 185.
Long Statement,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,OnOutgoingResponseAsync,The length of the statement  "					ErrorUtilities.VerifyProtocol(request.ClaimedIdentifier == request.LocalIdentifier' OpenIdStrings.DelegatingIdentifiersNotAllowed); " is 131.
Long Statement,DotNetOpenAuth.OpenId.Provider.Behaviors,PpidGeneration,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\PpidGeneration.cs,OnOutgoingResponseAsync,The length of the statement  "					ErrorUtilities.VerifyProtocol(request.ClaimedIdentifier == request.LocalIdentifier' OpenIdStrings.DelegatingIdentifiersNotAllowed); " is 131.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,OpenIdProviderMessageFactory,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\OpenIdProviderMessageFactory.cs,GetNewRequestMessage,The length of the statement  "				ErrorUtilities.VerifyProtocol(string.Equals(ns' Protocol.OpenId2Namespace' StringComparison.Ordinal)' MessagingStrings.UnexpectedMessagePartValue' Protocol.V20.openid.ns' ns); " is 175.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,OpenIdProviderMessageFactory,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\OpenIdProviderMessageFactory.cs,GetNewRequestMessage,The length of the statement  "					AuthenticationRequestMode authMode = string.Equals(mode' protocol.Args.Mode.checkid_immediate) ? AuthenticationRequestMode.Immediate : AuthenticationRequestMode.Setup; " is 167.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,OpenIdProviderMessageFactory,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\OpenIdProviderMessageFactory.cs,GetNewRequestMessage,The length of the statement  "						ErrorUtilities.VerifyProtocol(!fields.ContainsKey(protocol.openid.claimed_id)' OpenIdStrings.IdentityAndClaimedIdentifierMustBeBothPresentOrAbsent); " is 148.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,ProviderSigningBindingElement,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\ProviderSigningBindingElement.cs,GetAssociation,The length of the statement  "						Logger.Signatures.Info("An OpenID 1.x authentication request with a shared association handle will be responded to with a private association in order to provide OP-side replay protection."); " is 191.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,ProviderSigningBindingElement,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\ProviderSigningBindingElement.cs,GetDumbAssociationForSigning,The length of the statement  "			Association association = HmacShaAssociationProvider.Create(protocol' protocol.Args.SignatureAlgorithm.HMAC_SHA256' AssociationRelyingPartyType.Dumb' this.opAssociations' this.opSecuritySettings); " is 196.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,ProviderSigningBindingElement,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\ProviderSigningBindingElement.cs,GetSignedParameterOrder,The length of the statement  "			ErrorUtilities.VerifyInternal(signedParts.All(name => name.StartsWith(prefix' StringComparison.Ordinal))' "All signed message parts must start with 'openid.'."); " is 161.
Long Statement,DotNetOpenAuth.OpenId.ChannelElements,ProviderSigningBindingElement,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\ProviderSigningBindingElement.cs,GetSignedParameterOrder,The length of the statement  "						Logger.Signatures.DebugFormat("The extra parameter '{0}' will not be signed because it does not start with 'openid.'."' key); " is 125.
Long Statement,DotNetOpenAuth.OpenId.Provider.Extensions,ExtensionsInteropHelper,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Extensions\ExtensionsInteropHelper.cs,ConvertSregToMatchRequestAsync,The length of the statement  "					AXAttributeFormats format = OpenIdExtensionsInteropHelper.DetectAXFormat(axRequest.Attributes.Select(att => att.TypeUri)); " is 122.
Long Statement,DotNetOpenAuth.OpenId.Provider.Extensions,ExtensionsInteropHelper,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Extensions\ExtensionsInteropHelper.cs,ConvertSregToMatchRequestAsync,The length of the statement  "						AddAXAttributeValue(axResponse' WellKnownAttributes.Person.Gender' format' OpenIdExtensionsInteropHelper.GenderEncoder.Encode(sregResponse.Gender)); " is 148.
Long Statement,DotNetOpenAuth.OpenId.Provider,HmacShaAssociationProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\HmacShaAssociationProvider.cs,Create,The length of the statement  "			string handle = associationStore.Serialize(secret' DateTime.UtcNow + lifetime' associationUse == AssociationRelyingPartyType.Dumb); " is 131.
Long Statement,DotNetOpenAuth.OpenId.Provider,HmacShaAssociationProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\HmacShaAssociationProvider.cs,Create,The length of the statement  "			Assumes.True(protocol != null); // All the way up to the method call' the condition holds' yet we get a Requires failure next " is 125.
Long Statement,DotNetOpenAuth.OpenId.Provider,AssociationDataBag,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\AssociationDataBag.cs,CreateFormatter,The length of the statement  "			return new BinaryDataBagFormatter<AssociationDataBag>(cryptoKeyStore' bucket' signed: true' encrypted: true' minimumAge: minimumAge); " is 133.
Long Statement,DotNetOpenAuth.OpenId.Provider,ProviderAssociationHandleEncoder,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\ProviderAssociationHandleEncoder.cs,Serialize,The length of the statement  "			var formatter = AssociationDataBag.CreateFormatter(this.cryptoKeyStore' AssociationHandleEncodingSecretBucket' expiresUtc - DateTime.UtcNow); " is 141.
Long Statement,DotNetOpenAuth.OpenId.Provider,ProviderAssociationKeyStorage,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\ProviderAssociationKeyStorage.cs,Deserialize,The length of the statement  "			var key = this.cryptoKeyStore.GetKey(isPrivateAssociation ? PrivateAssociationBucket : SharedAssociationBucket' handle); " is 120.
Long Statement,DotNetOpenAuth.OpenId.Provider,HostProcessedRequest,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\HostProcessedRequest.cs,IsReturnUrlDiscoverableCoreAsync,The length of the statement  "					Logger.OpenId.WarnFormat("RP discovery failed because RequireSsl is true and RP discovery would begin at insecure URL {0}."' this.Realm); " is 137.
Long Statement,DotNetOpenAuth.OpenId.Provider,HostProcessedRequest,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\HostProcessedRequest.cs,IsReturnUrlDiscoverableCoreAsync,The length of the statement  "						Logger.Yadis.WarnFormat("Realm {0} contained return_to URL {1} which contains a wildcard' which is not allowed."' Realm' discoveredReturnToUrl); " is 144.
Long Statement,DotNetOpenAuth.OpenId.Provider,HostProcessedRequest,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\HostProcessedRequest.cs,SharedInitialization,The length of the statement  "			this.negativeResponse = new Lazy<Task<NegativeAssertionResponse>>(() => NegativeAssertionResponse.CreateAsync(this.RequestMessage' CancellationToken.None' provider.Channel)); " is 174.
Long Statement,DotNetOpenAuth.OpenId.Provider,Request,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Request.cs,GetExtension,The length of the statement  "				return this.extensibleMessage.Extensions.OfType<IOpenIdMessageExtension>().Where(ext => extensionType.IsInstanceOfType(ext)).SingleOrDefault(); " is 143.
Long Statement,DotNetOpenAuth.OpenId.Provider,Request,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Request.cs,GetResponseAsync,The length of the statement  "				ErrorUtilities.VerifyOperation(extensibleResponse != null' MessagingStrings.MessageNotExtensible' responseMessage.GetType().Name); " is 130.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,GetHttpApplicationStore,The length of the statement  "				ErrorUtilities.VerifyOperation(HttpContext.Current != null' Strings.StoreRequiredWhenNoHttpContextAvailable' typeof(ICryptoKeyAndNonceStore).Name); " is 147.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,GetRequestAsync,The length of the statement  "					if (request.Method == HttpMethod.Get && !request.RequestUri.QueryStringContainPrefixedParameters(Protocol.Default.openid.Prefix)) { " is 131.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,GetRequestAsync,The length of the statement  "						result = new AutoResponsiveRequest(incomingMessage' new CheckAuthenticationResponseProvider(checkAuthMessage' this)' this.SecuritySettings); " is 140.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,GetRequestAsync,The length of the statement  "						result = new AutoResponsiveRequest(incomingMessage' AssociateRequestProviderTools.CreateResponse(associateMessage' this.AssociationStore' this.SecuritySettings)' this.SecuritySettings); " is 185.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,PrepareUnsolicitedAssertionAsync,The length of the statement  "			if (this.SecuritySettings.UnsolicitedAssertionVerification != ProviderSecuritySettings.UnsolicitedAssertionVerificationLevel.NeverVerify) { " is 139.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,PrepareUnsolicitedAssertionAsync,The length of the statement  "				var serviceEndpoint = IdentifierDiscoveryResult.CreateForClaimedIdentifier(claimedIdentifier' localIdentifier' new ProviderEndpointDescription(providerEndpoint' Protocol.Default.Version)' null' null); " is 200.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,PrepareUnsolicitedAssertionAsync,The length of the statement  "						"Failed to send unsolicited assertion for {0} because its discovered services did not include this endpoint: {1}{2}{1}Discovered endpoints: {1}{3}"' " is 148.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,PrepareUnsolicitedAssertionAsync,The length of the statement  "					if (this.securitySettings.UnsolicitedAssertionVerification == ProviderSecuritySettings.UnsolicitedAssertionVerificationLevel.RequireSuccess) { " is 142.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,PrepareUnsolicitedAssertionAsync,The length of the statement  "			var returnToEndpoints = await relyingPartyRealm.DiscoverReturnToEndpointsAsync(this.Channel.HostFactories' true' cancellationToken); " is 132.
Long Statement,DotNetOpenAuth.OpenId.Provider,OpenIdProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\OpenIdProvider.cs,PrepareUnsolicitedAssertionAsync,The length of the statement  "			ErrorUtilities.VerifyProtocol(returnToEndpoint != null' OpenIdStrings.NoRelyingPartyEndpointDiscovered' relyingPartyRealm); " is 123.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateDiffieHellmanProviderResponse,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateDiffieHellmanProviderResponse.cs,CreateAssociationAtProvider,The length of the statement  "			Association association = HmacShaAssociationProvider.Create(this.Protocol' this.AssociationType' AssociationRelyingPartyType.Smart' associationStore' securitySettings); " is 168.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateDiffieHellmanProviderResponse,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateDiffieHellmanProviderResponse.cs,CreateAssociationAtProvider,The length of the statement  "				this.EncodedMacKey = DiffieHellmanUtilities.SHAHashXorSecret(hasher' dh' diffieHellmanRequest.DiffieHellmanConsumerPublic' association.SecretKey); " is 146.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateRequestProviderTools,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateRequestProviderTools.cs,CreateUnsuccessfulResponse,The length of the statement  "			if (HmacShaAssociation.TryFindBestAssociation(protocol' false' securitySettings' useDiffieHellman' out associationType' out sessionType)) { " is 139.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateRequestProviderTools,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateRequestProviderTools.cs,CreateUnsuccessfulResponse,The length of the statement  "				ErrorUtilities.VerifyInternal(request.AssociationType != associationType' "The RP asked for an association that should have been allowed' but the OP is trying to suggest the same one as an alternative!"); " is 204.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateRequestProviderTools,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateRequestProviderTools.cs,CreateUnsuccessfulResponse,The length of the statement  "					"Association requested of type '{0}' and session '{1}'' which the Provider does not support.  Sending back suggested alternative of '{0}' with session '{1}'."' " is 159.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateRequestProviderTools,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateRequestProviderTools.cs,CreateUnsuccessfulResponse,The length of the statement  "				Logger.OpenId.InfoFormat("Association requested of type '{0}' and session '{1}'' which the Provider does not support.  No alternative association type qualified for suggesting back to the Relying Party."' request.AssociationType' request.SessionType); " is 251.
Long Statement,DotNetOpenAuth.OpenId.Messages,AssociateUnencryptedResponseProvider,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Messages\AssociateUnencryptedResponseProvider.cs,CreateAssociationAtProvider,The length of the statement  "			Association association = HmacShaAssociationProvider.Create(Protocol' this.AssociationType' AssociationRelyingPartyType.Smart' associationStore' securitySettings); " is 163.
Magic Number,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,ApplySecuritySettings,The following statement contains a magic number: securitySettings.MaximumHashBitLength = 256;
Magic Number,DotNetOpenAuth.OpenId.Provider.Behaviors,GsaIcamProfile,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\Behaviors\GsaIcamProfile.cs,ApplySecuritySettings,The following statement contains a magic number: securitySettings.MaximumHashBitLength < 256
Magic Number,DotNetOpenAuth.OpenId.ChannelElements,OpenIdProviderChannel,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\OpenIdProviderChannel.cs,InitializeBindingElements,The following statement contains a magic number: List<IChannelBindingElement> elements = new List<IChannelBindingElement>(8);
Magic Number,DotNetOpenAuth.OpenId.ChannelElements,ProviderSigningBindingElement,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\ChannelElements\ProviderSigningBindingElement.cs,IsRelyingPartyVulnerableToReplays,The following statement contains a magic number: response.Version.Major >= 2
Magic Number,DotNetOpenAuth.OpenId.Provider,AssociationDataBag,D:\research\architectureSmells\repos\DotNetOpenAuth_DotNetOpenAuth\src\DotNetOpenAuth.OpenId.Provider\OpenId\Provider\AssociationDataBag.cs,Deserialize,The following statement contains a magic number: this.Secret = reader.ReadBuffer(256);
