Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,OAuthConsumer,Yammer,C:\repos\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumer\Yammer.aspx.cs,,The length of the parameter ClientRegistrationRequiredView is 30.
Long Statement,OAuthConsumer,Global,C:\repos\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumer\Global.asax.cs,Application_Error,The length of the statement  "			Logging.Logger.ErrorFormat("An unhandled exception was raised. Details follow: {0}"' HttpContext.Current.Server.GetLastError()); " is 128.
Long Statement,OAuthConsumer,SampleWcf,C:\repos\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumer\SampleWcf.aspx.cs,CallServiceAsync,The length of the statement  "			var serviceEndpoint = new MessageReceivingEndpoint(client.Endpoint.Address.Uri' HttpDeliveryMethods.AuthorizationHeaderRequest | HttpDeliveryMethods.PostRequest); " is 162.
Long Statement,OAuthConsumer,SampleWcf,C:\repos\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumer\SampleWcf.aspx.cs,CreateConsumer,The length of the statement  "				new ServiceProviderDescription(oauthEndpoint.Location.AbsoluteUri' oauthEndpoint.Location.AbsoluteUri' oauthEndpoint.Location.AbsoluteUri)' " is 139.
Magic Number,OAuthConsumer,GoogleAddressBook,C:\repos\DotNetOpenAuth_DotNetOpenAuth\samples\OAuthConsumer\GoogleAddressBook.aspx.designer.cs,getAddressBookButton_Click,The following statement contains a magic number: this.RegisterAsyncTask(  				new PageAsyncTask(  					async ct => {  						var google = new GoogleConsumer();    						XDocument contactsDocument =  							await google.GetContactsAsync(this.AccessToken' 5' 1' Response.ClientDisconnectedToken);  						var contacts =  							from entry in contactsDocument.Root.Elements(XName.Get("entry"' "http://www.w3.org/2005/Atom"))  							select new {  								Name = entry.Element(XName.Get("title"' "http://www.w3.org/2005/Atom")).Value'  								Email = entry.Element(XName.Get("email"' "http://schemas.google.com/g/2005")).Attribute("address").Value'  							};  						StringBuilder tableBuilder = new StringBuilder();  						tableBuilder.Append("<table><tr><td>Name</td><td>Email</td></tr>");  						foreach (var contact in contacts) {  							tableBuilder.AppendFormat(  								"<tr><td>{0}</td><td>{1}</td></tr>"' HttpUtility.HtmlEncode(contact.Name)' HttpUtility.HtmlEncode(contact.Email));  						}  						tableBuilder.Append("</table>");  						this.resultsPlaceholder.Controls.Add(new Literal { Text = tableBuilder.ToString() });  					}));
