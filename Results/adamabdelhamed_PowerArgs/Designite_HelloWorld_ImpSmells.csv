Implementation smell,Namespace,Class,File,Method,Description
Long Statement,HelloWorld,Program,D:\research\architectureSmells\repos\adamabdelhamed_PowerArgs\HelloWorld\Program.cs,Main,The length of the statement  "            //Samples.HelloWorldParse._Main(args);            //  The simplest way to use the parser.  All this sample does is parse the arguments and send them back to your program. " is 170.
Long Statement,HelloWorld,Program,D:\research\architectureSmells\repos\adamabdelhamed_PowerArgs\HelloWorld\Program.cs,Main,The length of the statement  "            // Samples.HelloWorldInvoke._Main(args);        //  A simple way to have the parser parse your arguments and then call a new Main method that you build. " is 152.
Long Statement,HelloWorld,Program,D:\research\architectureSmells\repos\adamabdelhamed_PowerArgs\HelloWorld\Program.cs,Main,The length of the statement  "            // Samples.Git._Main(args);                     //  Sample that shows how to implement a program that accepts multiple commands and where each command takes its own set of arguments. " is 182.
Long Statement,HelloWorld.Samples,REPLInvokeArgs,D:\research\architectureSmells\repos\adamabdelhamed_PowerArgs\HelloWorld\Samples\REPLInvoke.cs,Clear,The length of the statement  "            if (Output != OutputMode.Off) Console.WriteLine(count == 1 ? "Removed 1 item" : string.Format("Removed {0} items"' count)); " is 123.
Long Statement,HelloWorld.Samples,HelloWorldInvokeArgs,D:\research\architectureSmells\repos\adamabdelhamed_PowerArgs\HelloWorld\Samples\HelloWorldInvoke.cs,Main,The length of the statement  "            Console.WriteLine("You entered StringArg '{0}' and IntArg '{1}'' switch was '{2}'"' this.StringArg' this.IntArg' this.SwitchArg); " is 129.
Magic Number,HelloWorld.Samples,PerformanceInfo,D:\research\architectureSmells\repos\adamabdelhamed_PowerArgs\HelloWorld\Samples\Helpers\PerformanceInfo.cs,GetPhysicalAvailableMemoryInMiB,The following statement contains a magic number: return Convert.ToInt64((pi.PhysicalAvailable.ToInt64() * pi.PageSize.ToInt64() / 1048576));
Magic Number,HelloWorld.Samples,PerformanceInfo,D:\research\architectureSmells\repos\adamabdelhamed_PowerArgs\HelloWorld\Samples\Helpers\PerformanceInfo.cs,GetTotalMemoryInMiB,The following statement contains a magic number: return Convert.ToInt64((pi.PhysicalTotal.ToInt64() * pi.PageSize.ToInt64() / 1048576));
