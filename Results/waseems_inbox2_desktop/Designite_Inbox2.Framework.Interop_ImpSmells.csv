Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Inbox2.Framework.Interop,KeyboardExtensions,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\Keyboard.cs,GetControlKeyStates,Cyclomatic complexity of the method is 9
Complex Method,Inbox2.Framework.Interop.iFilters,FilterReader,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\iFilters\FilterReader.cs,Read,Cyclomatic complexity of the method is 12
Long Parameter List,Inbox2.Framework.Interop,NativeMethods,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\Keyboard.cs,ToUnicode,The method has 6 parameters. Parameters: wVirtKey' wScanCode' lpKeyState' pwszBuff' cchBuff' wFlags
Long Parameter List,Inbox2.Framework.Interop,KeyboardExtensions,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\Keyboard.cs,ToUnicode,The method has 6 parameters. Parameters: wVirtKey' wScanCode' lpKeyState' pwszBuff' cchBuff' wFlags
Long Parameter List,Inbox2.Framework.Interop,KeyboardExtensions,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\Keyboard.cs,ToAsciiEx,The method has 6 parameters. Parameters: uVirtKey' uScanCode' lpKeyState' lpChar' uFlags' hkl
Long Parameter List,Inbox2.Framework.Interop,KeyboardExtensions,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\Keyboard.cs,ToAscii,The method has 5 parameters. Parameters: uVirtKey' uScanCode' lpKeyState' lpChar' uFlags
Long Parameter List,Inbox2.Framework.Interop,WinApi,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WinApi.cs,VirtualAllocEx,The method has 5 parameters. Parameters: hProcess' lpAddress' dwSize' flAllocationType' flProtect
Long Parameter List,Inbox2.Framework.Interop,WinApi,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WinApi.cs,WriteProcessMemory,The method has 5 parameters. Parameters: hProcess' lpBaseAddress' lpBuffer' nSize' vNumberOfBytesRead
Long Parameter List,Inbox2.Framework.Interop,WinApi,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WinApi.cs,ReadProcessMemory,The method has 5 parameters. Parameters: hProcess' lpBaseAddress' lpBuffer' nSize' vNumberOfBytesRead
Long Parameter List,Inbox2.Framework.Interop,WinApi,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WinApi.cs,SetWindowPos,The method has 7 parameters. Parameters: hwnd' hwndInsertAfter' x' y' cx' cy' wFlags
Long Parameter List,Inbox2.Framework.Interop,WinApi,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WinApi.cs,CreateRoundRectRgn,The method has 6 parameters. Parameters: x1' y1' x2' y2' cx' cy
Long Parameter List,Inbox2.Framework.Interop.TaskbarNotification.Interop,WinApi,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\TaskbarNotification\WinApi.cs,CreateWindowEx,The method has 12 parameters. Parameters: dwExStyle' lpClassName' lpWindowName' dwStyle' x' y' nWidth' nHeight' hWndParent' hMenu' hInstance' lpParam
Long Parameter List,Inbox2.Framework.Interop.WebBrowser,IMouseHookUser,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\IMouseHookUser.cs,SystemMouseHookProc,The method has 5 parameters. Parameters: code' mainParameter' additionalParameter' point' extraInfo
Long Parameter List,Inbox2.Framework.Interop.WebBrowser,IOleInPlaceObjectWindowless,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\IOleInPlaceObjectWindowless.cs,DoVerb,The method has 6 parameters. Parameters: iVerb' lpmsg' pActiveSite' lindex' hwndParent' lprcPosRect
Long Parameter List,Inbox2.Framework.Interop.WebBrowser,IOleObject,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\IOleObject.cs,DoVerb,The method has 6 parameters. Parameters: iVerb' lpmsg' pActiveSite' lindex' hwndParent' lprcPosRect
Long Parameter List,Inbox2.Framework.Interop.WebBrowser,IViewObject,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\IViewObject.cs,Draw,The method has 10 parameters. Parameters: dwDrawAspect' lindex' pvAspect' ptd' hdcTargetDev' hdcDraw' lprcBounds' lprcWBounds' pfnContinue' dwContinue
Long Parameter List,Inbox2.Framework.Interop.WebBrowser,IViewObject,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\IViewObject.cs,GetColorSet,The method has 6 parameters. Parameters: dwDrawAspect' lindex' pvAspect' ptd' hicTargetDev' ppColorSet
Long Parameter List,Inbox2.Framework.Interop.WebBrowser,IWebBrowser2,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\IWebBrowser2.cs,Navigate,The method has 5 parameters. Parameters: Url' flags' targetFrameName' postData' headers
Long Parameter List,Inbox2.Framework.Interop.WebBrowser,IWebBrowser2,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\IWebBrowser2.cs,Navigate2,The method has 5 parameters. Parameters: URL' flags' targetFrameName' postData' headers
Long Parameter List,Inbox2.Framework.Interop.WebBrowser,User32,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\User32.cs,SetWindowPos,The method has 7 parameters. Parameters: hWnd' hWndInsertAfter' X' Y' cx' cy' uFlags
Long Parameter List,Inbox2.Framework.Interop.WebBrowser,User32,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\User32.cs,mouse_event,The method has 5 parameters. Parameters: dwFlags' dx' dy' dwData' dwExtraInfo
Long Statement,Inbox2.Framework.Interop,Desktop,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\Desktop.cs,GetSelectedItems,The length of the statement  "				Logger.Debug("Desktop listview was not active' expected handle for desktop {0} or for window {1}' actual handle {2}"' LogSource.Interop' progmanHandle' windowHandle' handle); " is 174.
Long Statement,Inbox2.Framework.Interop,Desktop,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\Desktop.cs,GetSelectedItems,The length of the statement  "								results.Add(new ExplorerSelectedFile() { Location = Path.GetDirectoryName(item.Path)' Filename = Path.GetFileName(item.Path) }); " is 128.
Long Statement,Inbox2.Framework.Interop,ExplorerSelectedFile,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\ExplorerSelectedFile.cs,GetFileInfo,The length of the statement  "				// ToDo: match on filesize? (Multiple files with same filename but different extensions on desktop are not supported yet) " is 121.
Long Statement,Inbox2.Framework.Interop,KeyInfo,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\Keyboard.cs,ToString,The length of the statement  "			return string.Format(CultureInfo.InvariantCulture' "{0}'{1}'{2}'{3}"' new object[] { this.VirtualKeyCode' this.Character' this.ControlKeyState' this.KeyDown }); " is 160.
Long Statement,Inbox2.Framework.Interop.iFilters,ComHelper,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\iFilters\ComHelper.cs,GetClassFactoryFromDll,The length of the statement  "			DllGetClassObject dllGetClassObject=(DllGetClassObject)Marshal.GetDelegateForFunctionPointer(dllGetClassObjectPtr' typeof(DllGetClassObject)); " is 142.
Long Statement,Inbox2.Framework.Interop.WebBrowser,COMRECT,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\COMRECT.cs,ToString,The length of the statement  "			return string.Concat( new object[] { "Left = "' this.left' " Top "' this.top' " Right = "' this.right' " Bottom = "' this.bottom } ); " is 133.
Long Statement,Inbox2.Framework.Interop.WebBrowser,MouseHookManager,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\MouseHookManager.cs,MessageHookProc,The length of the statement  "						if ((user != null) && user.SystemMouseHookProc(nCode' wParam' lParam' new Point(mousehookstruct_ll1.pt_x' mousehookstruct_ll1.pt_y)' (int)mousehookstruct_ll1.dwExtraInfo)) " is 171.
Magic Number,Inbox2.Framework.Interop,Desktop,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\Desktop.cs,GetSelectedItemsOnDesktop,The following statement contains a magic number: IntPtr vPointer = WinApi.VirtualAllocEx(vProcess' IntPtr.Zero' 4096'  											 WinApi.MEM_RESERVE | WinApi.MEM_COMMIT' WinApi.PAGE_READWRITE);
Magic Number,Inbox2.Framework.Interop,Desktop,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\Desktop.cs,GetSelectedItemsOnDesktop,The following statement contains a magic number: try  			{  				string desktopPath = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);    				for (int j = 0; j < vItemCount; j++)  				{  					byte[] vBuffer = new byte[256];  					LVITEM[] vItem = new LVITEM[1];  					vItem[0].mask = WinApi.LVIF_TEXT;  					vItem[0].iItem = j;  					vItem[0].iSubItem = 0;  					vItem[0].cchTextMax = vBuffer.Length;  					vItem[0].pszText = (IntPtr)((int)vPointer + Marshal.SizeOf(typeof(LVITEM)));    					uint vNumberOfBytesRead = 0;    					WinApi.WriteProcessMemory(vProcess' vPointer'  									   Marshal.UnsafeAddrOfPinnedArrayElement(vItem' 0)'  									   Marshal.SizeOf(typeof(LVITEM))' ref vNumberOfBytesRead);    					WinApi.SendMessage(listviewHandle' WinApi.LVM_GETITEMW' j' vPointer.ToInt32());    					WinApi.ReadProcessMemory(vProcess'  									  (IntPtr)((int)vPointer + Marshal.SizeOf(typeof(LVITEM)))'  									  Marshal.UnsafeAddrOfPinnedArrayElement(vBuffer' 0)'  									  vBuffer.Length' ref vNumberOfBytesRead);    					string vText = Encoding.Unicode.GetString(vBuffer' 0'  															  (int)vNumberOfBytesRead);    					string iconName = vText;    					int index = vText.IndexOf('\0');  					if (index > -1)  						iconName = vText.Substring(0' index);    					//Get icon location  					WinApi.SendMessage(listviewHandle' WinApi.LVM_GETITEMPOSITION' j' vPointer.ToInt32());    					Point[] vPoint = new Point[1];  					WinApi.ReadProcessMemory(vProcess' vPointer'  									  Marshal.UnsafeAddrOfPinnedArrayElement(vPoint' 0)'  									  Marshal.SizeOf(typeof(Point))' ref vNumberOfBytesRead);    					  					  					Point iconLocation = vPoint[0];  					bool selected = selectedItems.Contains(j);    					if (selected)  						yield return new ExplorerSelectedFile  						           	{  										Filename = iconName'   										Location = desktopPath'   										Coordinates = iconLocation  						           	};  				}  			}  			finally  			{  				WinApi.VirtualFreeEx(vProcess' vPointer' 0' WinApi.MEM_RELEASE);  				WinApi.CloseHandle(vProcess);  			}
Magic Number,Inbox2.Framework.Interop,KeyboardExtensions,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\Keyboard.cs,GetChar,The following statement contains a magic number: var ks = new byte[256];
Magic Number,Inbox2.Framework.Interop,KeyboardExtensions,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\Keyboard.cs,GetChar,The following statement contains a magic number: var sb = new StringBuilder(2);
Magic Number,Inbox2.Framework.Interop,WinApi,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WinApi.cs,WmGetMinMaxInfo,The following statement contains a magic number: if (monitor != IntPtr.Zero)  			{  				MONITORINFO monitorInfo = new MONITORINFO();  				GetMonitorInfo(monitor' monitorInfo);  				RECT rcWorkArea = monitorInfo.rcWork;  				RECT rcMonitorArea = monitorInfo.rcMonitor;  				mmi.ptMaxPosition.x = Math.Abs(rcWorkArea.left - rcMonitorArea.left);  				mmi.ptMaxPosition.y = Math.Abs(rcWorkArea.top - rcMonitorArea.top);  				mmi.ptMaxSize.x = Math.Abs(rcWorkArea.right - rcWorkArea.left);  				mmi.ptMaxSize.y = Math.Abs(rcWorkArea.bottom - rcWorkArea.top);  				mmi.ptMinTrackSize.x = 240;  				mmi.ptMinTrackSize.y = 320;  			}
Magic Number,Inbox2.Framework.Interop,WinApi,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WinApi.cs,WmGetMinMaxInfo,The following statement contains a magic number: if (monitor != IntPtr.Zero)  			{  				MONITORINFO monitorInfo = new MONITORINFO();  				GetMonitorInfo(monitor' monitorInfo);  				RECT rcWorkArea = monitorInfo.rcWork;  				RECT rcMonitorArea = monitorInfo.rcMonitor;  				mmi.ptMaxPosition.x = Math.Abs(rcWorkArea.left - rcMonitorArea.left);  				mmi.ptMaxPosition.y = Math.Abs(rcWorkArea.top - rcMonitorArea.top);  				mmi.ptMaxSize.x = Math.Abs(rcWorkArea.right - rcWorkArea.left);  				mmi.ptMaxSize.y = Math.Abs(rcWorkArea.bottom - rcWorkArea.top);  				mmi.ptMinTrackSize.x = 240;  				mmi.ptMinTrackSize.y = 320;  			}
Magic Number,Inbox2.Framework.Interop.iFilters,FilterReader,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\iFilters\FilterReader.cs,Read,The following statement contains a magic number: while (!_done && charsRead<count)  			{  				if (_charsLeftFromLastRead!=null)  				{  					int charsToCopy=(_charsLeftFromLastRead.Length<count-charsRead)?_charsLeftFromLastRead.Length:count-charsRead;  					Array.Copy(_charsLeftFromLastRead'0' array' offset+charsRead' charsToCopy);  					charsRead+=charsToCopy;  					if (charsToCopy<_charsLeftFromLastRead.Length)  					{  						char[] tmp=new char[_charsLeftFromLastRead.Length-charsToCopy];  						Array.Copy(_charsLeftFromLastRead' charsToCopy' tmp' 0' tmp.Length);  						_charsLeftFromLastRead=tmp;  					}  					else  						_charsLeftFromLastRead=null;  					continue;  				};    				if (!_currentChunkValid)  				{  					IFilterReturnCode res=_filter.GetChunk(out _currentChunk);  					_currentChunkValid=(res==IFilterReturnCode.S_OK) && ((_currentChunk.flags & CHUNKSTATE.CHUNK_TEXT)!=0);    					if (res==IFilterReturnCode.FILTER_E_END_OF_CHUNKS)  						endOfChunksCount++;    					if (endOfChunksCount>1)  						_done=true; //That's it. no more chuncks available  				}    				if (_currentChunkValid)  				{  					uint bufLength=(uint)(count-charsRead);  					if (bufLength<8192)  						bufLength=8192; //Read ahead    					char[] buffer=new char[bufLength];  					IFilterReturnCode res=_filter.GetText(ref bufLength' buffer);  					if (res==IFilterReturnCode.S_OK || res==IFilterReturnCode.FILTER_S_LAST_TEXT)  					{  						int cRead=(int)bufLength;  						if (cRead+charsRead>count)  						{  							int charsLeft=(cRead+charsRead-count);  							_charsLeftFromLastRead=new char[charsLeft];  							Array.Copy(buffer' cRead-charsLeft' _charsLeftFromLastRead' 0' charsLeft);  							cRead-=charsLeft;  						}  						else  							_charsLeftFromLastRead=null;    						Array.Copy(buffer' 0' array' offset+charsRead' cRead);  						charsRead+=cRead;  					}    					if (res==IFilterReturnCode.FILTER_S_LAST_TEXT || res==IFilterReturnCode.FILTER_E_NO_MORE_TEXT)  						_currentChunkValid=false;  				}  			}
Magic Number,Inbox2.Framework.Interop.iFilters,FilterReader,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\iFilters\FilterReader.cs,Read,The following statement contains a magic number: while (!_done && charsRead<count)  			{  				if (_charsLeftFromLastRead!=null)  				{  					int charsToCopy=(_charsLeftFromLastRead.Length<count-charsRead)?_charsLeftFromLastRead.Length:count-charsRead;  					Array.Copy(_charsLeftFromLastRead'0' array' offset+charsRead' charsToCopy);  					charsRead+=charsToCopy;  					if (charsToCopy<_charsLeftFromLastRead.Length)  					{  						char[] tmp=new char[_charsLeftFromLastRead.Length-charsToCopy];  						Array.Copy(_charsLeftFromLastRead' charsToCopy' tmp' 0' tmp.Length);  						_charsLeftFromLastRead=tmp;  					}  					else  						_charsLeftFromLastRead=null;  					continue;  				};    				if (!_currentChunkValid)  				{  					IFilterReturnCode res=_filter.GetChunk(out _currentChunk);  					_currentChunkValid=(res==IFilterReturnCode.S_OK) && ((_currentChunk.flags & CHUNKSTATE.CHUNK_TEXT)!=0);    					if (res==IFilterReturnCode.FILTER_E_END_OF_CHUNKS)  						endOfChunksCount++;    					if (endOfChunksCount>1)  						_done=true; //That's it. no more chuncks available  				}    				if (_currentChunkValid)  				{  					uint bufLength=(uint)(count-charsRead);  					if (bufLength<8192)  						bufLength=8192; //Read ahead    					char[] buffer=new char[bufLength];  					IFilterReturnCode res=_filter.GetText(ref bufLength' buffer);  					if (res==IFilterReturnCode.S_OK || res==IFilterReturnCode.FILTER_S_LAST_TEXT)  					{  						int cRead=(int)bufLength;  						if (cRead+charsRead>count)  						{  							int charsLeft=(cRead+charsRead-count);  							_charsLeftFromLastRead=new char[charsLeft];  							Array.Copy(buffer' cRead-charsLeft' _charsLeftFromLastRead' 0' charsLeft);  							cRead-=charsLeft;  						}  						else  							_charsLeftFromLastRead=null;    						Array.Copy(buffer' 0' array' offset+charsRead' cRead);  						charsRead+=cRead;  					}    					if (res==IFilterReturnCode.FILTER_S_LAST_TEXT || res==IFilterReturnCode.FILTER_E_NO_MORE_TEXT)  						_currentChunkValid=false;  				}  			}
Magic Number,Inbox2.Framework.Interop.TaskbarNotification.Interop,NotifyIconData,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\TaskbarNotification\NotifyIconData.cs,CreateDefault,The following statement contains a magic number: if (Environment.OSVersion.Version.Major >= 6)        {          //use the current size          data.cbSize = (uint)Marshal.SizeOf(data);        }        else        {          //we need to set another size on xp/2003- otherwise certain          //features (e.g. balloon tooltips) don't work.          data.cbSize = 504;            //set to fixed timeout          data.VersionOrTimeout = 10;        }
Magic Number,Inbox2.Framework.Interop.TaskbarNotification.Interop,NotifyIconData,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\TaskbarNotification\NotifyIconData.cs,CreateDefault,The following statement contains a magic number: if (Environment.OSVersion.Version.Major >= 6)        {          //use the current size          data.cbSize = (uint)Marshal.SizeOf(data);        }        else        {          //we need to set another size on xp/2003- otherwise certain          //features (e.g. balloon tooltips) don't work.          data.cbSize = 504;            //set to fixed timeout          data.VersionOrTimeout = 10;        }
Magic Number,Inbox2.Framework.Interop.TaskbarNotification.Interop,NotifyIconData,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\TaskbarNotification\NotifyIconData.cs,CreateDefault,The following statement contains a magic number: if (Environment.OSVersion.Version.Major >= 6)        {          //use the current size          data.cbSize = (uint)Marshal.SizeOf(data);        }        else        {          //we need to set another size on xp/2003- otherwise certain          //features (e.g. balloon tooltips) don't work.          data.cbSize = 504;            //set to fixed timeout          data.VersionOrTimeout = 10;        }
Magic Number,Inbox2.Framework.Interop.TaskbarNotification.Interop,TrayInfo,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\TaskbarNotification\TrayInfo.cs,GetTrayLocation,The following statement contains a magic number: if (info.Edge == AppBarInfo.ScreenEdge.Left)        {          x = rcWorkArea.Left + 2;          y = rcWorkArea.Bottom;        }        else if (info.Edge == AppBarInfo.ScreenEdge.Bottom)        {          x = rcWorkArea.Right;          y = rcWorkArea.Bottom;        }        else if (info.Edge == AppBarInfo.ScreenEdge.Top)        {          x = rcWorkArea.Right;          y = rcWorkArea.Top;        }        else if (info.Edge == AppBarInfo.ScreenEdge.Right)        {          x = rcWorkArea.Right;          y = rcWorkArea.Bottom;        }
Magic Number,Inbox2.Framework.Interop.TaskbarNotification.Interop,WindowMessageSink,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\TaskbarNotification\WindowMessageSink.cs,ProcessWindowMessage,The following statement contains a magic number: switch (lParam)        {          case 0x200:            MouseEventReceived(MouseEvent.MouseMove);            break;            case 0x201:            MouseEventReceived(MouseEvent.IconLeftMouseDown);            break;            case 0x202:            if (!isDoubleClick)            {              MouseEventReceived(MouseEvent.IconLeftMouseUp);            }            isDoubleClick = false;            break;            case 0x203:            isDoubleClick = true;            MouseEventReceived(MouseEvent.IconDoubleClick);            break;            case 0x204:            MouseEventReceived(MouseEvent.IconRightMouseDown);            break;            case 0x205:            MouseEventReceived(MouseEvent.IconRightMouseUp);            break;            case 0x206:            //double click with right mouse button - do not trigger event            break;            case 0x207:            MouseEventReceived(MouseEvent.IconMiddleMouseDown);            break;            case 520:            MouseEventReceived(MouseEvent.IconMiddleMouseUp);            break;            case 0x209:            //double click with middle mouse button - do not trigger event            break;            case 0x402:            BallonToolTipChanged(true);            break;            case 0x403:          case 0x404:            BallonToolTipChanged(false);            break;            case 0x405:            MouseEventReceived(MouseEvent.BalloonToolTipClicked);            break;            case 0x406:            ChangeToolTipStateRequest(true);            break;            case 0x407:            ChangeToolTipStateRequest(false);            break;            default:            Debug.WriteLine("Unhandled NotifyIcon message ID: " + lParam);            break;        }
Magic Number,Inbox2.Framework.Interop.WebBrowser,MouseHookManager,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\MouseHookManager.cs,HookMessage,The following statement contains a magic number: try  				{  					if (this.MessageHookHandle == IntPtr.Zero)  					{  						if (this.handle != IntPtr.Zero)  						{  							if (this.thisProcessID == 0)  							{  								GetWindowThreadProcessId(this.handle' ref this.thisProcessID);  							}  						}  						obj1 = new MessageHookObject(this);  						proc1 = new HookProc(obj1.Callback);  						this.MessageHookRoot = GCHandle.Alloc(proc1);  						this.MessageHookHandle = SetWindowsHookEx(14' proc1' new IntPtr(GetModuleHandle(null))' 0);  					}  				}  				finally  				{  					Monitor.Exit(manager1);  				}
Magic Number,Inbox2.Framework.Interop.WebBrowser,User32,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\User32.cs,MAKEDWORD,The following statement contains a magic number: return (uint)(loWord + (hiWord << 16));
Magic Number,Inbox2.Framework.Interop.WebBrowser,User32,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\User32.cs,MAKEDWORD,The following statement contains a magic number: return (uint)(loWord + (hiWord << 16));
Magic Number,Inbox2.Framework.Interop.WebBrowser,User32,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Interop\WebBrowser\User32.cs,DWordToPoint,The following statement contains a magic number: return new Point(  				(int)(dWord & 0xFFFF)'  				(int)(dWord >> 16)  				);
