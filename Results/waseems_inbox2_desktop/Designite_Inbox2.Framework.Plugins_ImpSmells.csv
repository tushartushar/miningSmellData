Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Inbox2.Framework.Plugins.SharedControls,MessageEditControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\MessageEditControl.xaml.cs,TryCancel,The length of the statement  "				if (Inbox2MessageBox.Show("Cancel and move draft to trash folder?"' Inbox2MessageBoxButton.YesNo).Result == Inbox2MessageBoxResult.No) " is 134.
Long Statement,Inbox2.Framework.Plugins.SharedControls,MessageEditControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\MessageEditControl.xaml.cs,TryCancel,The length of the statement  "				if (Inbox2MessageBox.Show("Cancel and lose all changes?"' Inbox2MessageBoxButton.YesNo).Result == Inbox2MessageBoxResult.No) " is 124.
Long Statement,Inbox2.Framework.Plugins.SharedControls,MessageEditControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\MessageEditControl.xaml.cs,CreateMessage,The length of the statement  "			message.From = new SourceAddress(channel.InputChannel.SourceAdress' SettingsManager.ClientSettings.AppConfiguration.Fullname); " is 126.
Long Statement,Inbox2.Framework.Plugins.SharedControls.Profiles,ChannelProfileControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\Profiles\ChannelProfileControl.xaml.cs,Reply_Click,The length of the statement  "			EventBroker.Publish(AppEvents.RequestStatusUpdate' String.Format("@{0} "' Profile.ScreenName)' Channel.ChannelId' LastStatus); " is 126.
Long Statement,Inbox2.Framework.Plugins.SharedControls.Profiles,UserProfileControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\Profiles\UserProfileControl.xaml.cs,UserProfileControl_SourceAddresChanged,The length of the statement  "					person.Profiles.Add(new Profile { SourceAddress = address' ScreenName = address.DisplayName' Address = address.Address }); " is 122.
Magic Number,Inbox2.Framework.Plugins.SharedControls,LabelsEditorControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\LabelsEditorControl.xaml.cs,LabelsEditorControl,The following statement contains a magic number: _flipper = new Flipper(TimeSpan.FromMilliseconds(400)' CheckExistingLabel);
Magic Number,Inbox2.Framework.Plugins.SharedControls,LabelsEditorControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\LabelsEditorControl.xaml.cs,Editor_KeyUp,The following statement contains a magic number: if (tr.Text.Length >= 2)  			{  				var results = VirtualMailBox.VirtualMailBox.Current.Labels.Keys  					.Where(k => k.IndexOf(tr.Text' StringComparison.InvariantCultureIgnoreCase) > -1)  					.Select(k => new LabelsContainer(k))  					.ToList();    				var prevResults = AutoCompletionListBox.ItemsSource as List<LabelsContainer>;    				if (prevResults != null && prevResults.Count == results.Count)  					return;    				// No result' hide list (if it was allready shown)  				if (results.Count > 0)  				{  					// Get position of caret  					var pos = tr.Start.GetCharacterRect(LogicalDirection.Forward);    					ShowList(results' pos);    					return;  				}  			}
Magic Number,Inbox2.Framework.Plugins.SharedControls,MessageEditControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\MessageEditControl.xaml.cs,SaveDocuments,The following statement contains a magic number: foreach (var file in attachedFiles)  			{  				var document = new Document  				{  					Message = message'  					Filename = file.Filename'  					ContentType = ContentType.Attachment'  					SourceChannelId = message.SourceChannelId'  					DateCreated = DateTime.Now'  					DateSent = DateTime.Now'  					DocumentFolder = Folders.SentItems  				};    				document.StreamName = Guid.NewGuid().GetHash(12) + "_" + Path.GetExtension(document.Filename);  				document.ContentStream = new FileStream(file.Streamname' FileMode.Open' FileAccess.Read' FileShare.ReadWrite);    				EventBroker.Publish(AppEvents.DocumentReceived' document);    				// Might needs this when deleting an attachment from a draft message  				file.DocumentId = document.DocumentId;  			}
Magic Number,Inbox2.Framework.Plugins.SharedControls,RecipientsEditorControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\RecipientsEditorControl.xaml.cs,RecipientsEditorControl,The following statement contains a magic number: wordFlipper = new Flipper(TimeSpan.FromMilliseconds(400)' ProcessCurrentWord);
Magic Number,Inbox2.Framework.Plugins.SharedControls,RecipientsEditorControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\RecipientsEditorControl.xaml.cs,RecipientsEditorControl,The following statement contains a magic number: autocompleteFlipper = new Flipper(TimeSpan.FromMilliseconds(500)' SearchContacts);
Magic Number,Inbox2.Framework.Plugins.SharedControls,RecipientsEditorControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\RecipientsEditorControl.xaml.cs,SearchContacts,The following statement contains a magic number: if (tr.Text.Length >= 3)  			{  				var prevResults = AutoCompletionListBox.ItemsSource as List<Profile>;    				List<Profile> results;    				var q = mailbox.Profiles.Where(  						p => p.SourceAddress.ToString().IndexOf(Text' StringComparison.InvariantCultureIgnoreCase) > -1)  					.Where(p => p.SourceChannelId == 0 || p.SourceChannel.Charasteristics.SupportsPrivateMessage)  					.Union(mailbox.Persons  						.Where(r => r.Name.IndexOf(Text' StringComparison.InvariantCultureIgnoreCase) > -1)  						.SelectMany(r => r.Profiles  							.Where(p => p.SourceChannelId == 0 || p.SourceChannel.Charasteristics.SupportsPrivateMessage)))  					.OrderByDescending(p => p.Messages.Count)  					.Distinct()  					.Take(10);    				using (mailbox.Profiles.ReaderLock)  					results = q.ToList();    				if (prevResults != null && prevResults.Count == results.Count)  					return;    				if (results.Count > 0)  				{  					ShowList(results);    					return;  				}				  			}
Magic Number,Inbox2.Framework.Plugins.SharedControls,RecipientsEditorControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\RecipientsEditorControl.xaml.cs,SearchContacts,The following statement contains a magic number: if (tr.Text.Length >= 3)  			{  				var prevResults = AutoCompletionListBox.ItemsSource as List<Profile>;    				List<Profile> results;    				var q = mailbox.Profiles.Where(  						p => p.SourceAddress.ToString().IndexOf(Text' StringComparison.InvariantCultureIgnoreCase) > -1)  					.Where(p => p.SourceChannelId == 0 || p.SourceChannel.Charasteristics.SupportsPrivateMessage)  					.Union(mailbox.Persons  						.Where(r => r.Name.IndexOf(Text' StringComparison.InvariantCultureIgnoreCase) > -1)  						.SelectMany(r => r.Profiles  							.Where(p => p.SourceChannelId == 0 || p.SourceChannel.Charasteristics.SupportsPrivateMessage)))  					.OrderByDescending(p => p.Messages.Count)  					.Distinct()  					.Take(10);    				using (mailbox.Profiles.ReaderLock)  					results = q.ToList();    				if (prevResults != null && prevResults.Count == results.Count)  					return;    				if (results.Count > 0)  				{  					ShowList(results);    					return;  				}				  			}
Magic Number,Inbox2.Framework.Plugins.SharedControls,RecipientsEditorControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\RecipientsEditorControl.xaml.cs,ShowList,The following statement contains a magic number: Canvas.SetTop(AutoCompletionListBox' screenPos.Y + 20);
Magic Number,Inbox2.Framework.Plugins.SharedControls,StatusUpdateControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\StatusUpdateControl.xaml.cs,ToggleChannel2_Executed,The following statement contains a magic number: ToggleChanneIndex(2);
Magic Number,Inbox2.Framework.Plugins.SharedControls,StatusUpdateControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\StatusUpdateControl.xaml.cs,ToggleChannel3_Executed,The following statement contains a magic number: ToggleChanneIndex(3);
Magic Number,Inbox2.Framework.Plugins.SharedControls,StatusUpdateControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\StatusUpdateControl.xaml.cs,ToggleChannel4_Executed,The following statement contains a magic number: ToggleChanneIndex(4);
Magic Number,Inbox2.Framework.Plugins.SharedControls,StatusUpdateControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\StatusUpdateControl.xaml.cs,ToggleChannel5_Executed,The following statement contains a magic number: ToggleChanneIndex(5);
Magic Number,Inbox2.Framework.Plugins.SharedControls,StatusUpdateControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\StatusUpdateControl.xaml.cs,ToggleChannel6_Executed,The following statement contains a magic number: ToggleChanneIndex(6);
Magic Number,Inbox2.Framework.Plugins.SharedControls,StatusUpdateControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\StatusUpdateControl.xaml.cs,ToggleChannel7_Executed,The following statement contains a magic number: ToggleChanneIndex(7);
Magic Number,Inbox2.Framework.Plugins.SharedControls,StatusUpdateControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\StatusUpdateControl.xaml.cs,ToggleChannel8_Executed,The following statement contains a magic number: ToggleChanneIndex(8);
Magic Number,Inbox2.Framework.Plugins.SharedControls,StatusUpdateControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\StatusUpdateControl.xaml.cs,ToggleChannel9_Executed,The following statement contains a magic number: ToggleChanneIndex(9);
Missing Default,Inbox2.Framework.Plugins.SharedControls,LabelsEditorControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\LabelsEditorControl.xaml.cs,Editor_PreviewKeyDown,The following switch statement is missing a default case: switch (e.Key)  			{  				case Key.Up:  					// Move selection up  					if (AutoCompletionListBox.SelectedIndex > 0)  						AutoCompletionListBox.SelectedIndex--;    					e.Handled = true;    					break;    				case Key.Down:  					// Move selection down  					if (AutoCompletionListBox.SelectedIndex < AutoCompletionListBox.Items.Count)  						AutoCompletionListBox.SelectedIndex++;    					e.Handled = true;    					break;				    				case Key.Escape:  					// Restore state before we opened the list                      if (AutoCompletionPopup.IsOpen)  					    HideList();                      else                          EventBroker.Publish(AppEvents.RequestFocus);    					break;    				case Key.Tab:  				case Key.Enter:  				case Key.Space:  					if (IsPopupOpen && CanInsertSelectedVisualLabel())  						InsertSelectedVisualLabel();  					else  						ProcessCurrentWord();    					e.Handled = true;    					break;  			}
Missing Default,Inbox2.Framework.Plugins.SharedControls,LabelsEditorControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\LabelsEditorControl.xaml.cs,Editor_PreviewKeyUp,The following switch statement is missing a default case: switch (e.Key)  			{  				case Key.Back:  				case Key.Delete:  					DeleteMissingVisualLabels();    					break;    				case Key.C:  				case Key.V:  				case Key.X:  					if (Keyboard.IsKeyDown(Key.LeftCtrl) || Keyboard.IsKeyDown(Key.RightCtrl))  						DeleteMissingVisualLabels();    					break;  			}
Missing Default,Inbox2.Framework.Plugins.SharedControls,RecipientsEditorControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Framework\Plugins\SharedControls\RecipientsEditorControl.xaml.cs,Editor_PreviewKeyUp,The following switch statement is missing a default case: switch (e.Key)  			{  				case Key.Back:  				case Key.Delete:  					// Rebuild list of recipients on delete' we don't do this in the PreviewKeyDown  					// because this doesn't work correctly with listeners on the recipients collection  					RebuildRecipientsList();    					break;    				case Key.C:  				case Key.V:  				case Key.X:  					if (Keyboard.IsKeyDown(Key.LeftCtrl) || Keyboard.IsKeyDown(Key.RightCtrl))  						RebuildRecipientsList();    					break;  			}
