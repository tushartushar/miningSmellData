Implementation smell,Namespace,Class,File,Method,Description
Virtual Method Call from Constructor,Inbox2.Plugins.Contacts,ContactsState,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Plugins\Contacts\ContactsState.cs,ContactsState,The constructor "ContactsState" calls a virtual method "LoadSettings".
Magic Number,Inbox2.Plugins.Contacts.Controls,Column,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Plugins\Contacts\Controls\Column.xaml.cs,Column,The following statement contains a magic number: selectionFlipper = new Flipper(TimeSpan.FromMilliseconds(400)'  					() => State.SelectedPersons.ReplaceWithCast(ContactsListView.SelectedItems));
Magic Number,Inbox2.Plugins.Contacts.Controls,SearchProfilesControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Plugins\Contacts\Controls\SearchProfilesControl.xaml.cs,PerformSearch,The following statement contains a magic number: new BackgroundActionTask(delegate  			{  				var profiles = new List<Profile>();    				foreach (var keyword in keywords)  				{  					if (keyword.Length > 2)  					{  						using (mailbox.Profiles.ReaderLock)  						{  							string keyword1 = keyword;    							profiles.AddRange(mailbox.Profiles.Where(p =>  								(p.ScreenName != null && p.ScreenName.IndexOf(keyword1' StringComparison.InvariantCultureIgnoreCase) > -1) ||  								(p.Address != null && p.Address.IndexOf(keyword1' StringComparison.InvariantCultureIgnoreCase) > -1) ||  								(p.CompanyName != null && p.CompanyName.IndexOf(keyword1' StringComparison.InvariantCultureIgnoreCase) > -1)));  						}  					}  				}    				Thread.CurrentThread.ExecuteOnUIThread(delegate  				{  					loader.Visibility = Visibility.Hidden;    					// remove any profiles that belong to the person we are currently viewing  					Profiles.Replace(profiles.Where(p => p.Person != Person).Distinct());  				});    			}).ExecuteAsync();
Magic Number,Inbox2.Plugins.Contacts.Controls,SearchProfilesControl,C:\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Plugins\Contacts\Controls\SearchProfilesControl.xaml.cs,SearchTextBox_TextChanged,The following statement contains a magic number: if (SearchTextBox.Text.Length > 2)  			{  				currentSearchTerm = SearchTextBox.Text.Trim();    				PerformSearch();  			}
