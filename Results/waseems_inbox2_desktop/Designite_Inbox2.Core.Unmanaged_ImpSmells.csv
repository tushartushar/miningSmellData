Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,Open,Cyclomatic complexity of the method is 9
Complex Method,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,ReadHeader,Cyclomatic complexity of the method is 9
Complex Method,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,ProcessFileError,Cyclomatic complexity of the method is 8
Complex Method,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,RARCallback,Cyclomatic complexity of the method is 8
Complex Method,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,Open,Cyclomatic complexity of the method is 9
Complex Method,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,ReadHeader,Cyclomatic complexity of the method is 9
Complex Method,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,ProcessFileError,Cyclomatic complexity of the method is 8
Complex Method,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,RARCallback,Cyclomatic complexity of the method is 8
Long Statement,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,Extract,The length of the statement  "			int result = Unrar64.RARProcessFile(this.archiveHandle' (int)Unrar.Operation.Extract' destinationPath' destinationName); " is 120.
Long Statement,Inbox2.Core.Unmanaged.Unrar,UnrarExecutable,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\UnrarExecutable.cs,ExecuteFiles,The length of the statement  "				throw new ArgumentException("Filenames or destFilenames parameters were empty or did not contain the same amount of strings"); " is 126.
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,Open,The following statement contains a magic number: openStruct.CmtBuf = new string((char)0' 65536);
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,Open,The following statement contains a magic number: openStruct.CmtBufSize = 65536;
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,FromMSDOSTime,The following statement contains a magic number: hiWord = (ushort)((dosTime & 0xFFFF0000) >> 16);
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,FromMSDOSTime,The following statement contains a magic number: year = ((hiWord & 0xFE00) >> 9) + 1980;
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,FromMSDOSTime,The following statement contains a magic number: year = ((hiWord & 0xFE00) >> 9) + 1980;
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,FromMSDOSTime,The following statement contains a magic number: month = (hiWord & 0x01E0) >> 5;
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,FromMSDOSTime,The following statement contains a magic number: hour = (loWord & 0xF800) >> 11;
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,FromMSDOSTime,The following statement contains a magic number: minute = (loWord & 0x07E0) >> 5;
Magic Number,Inbox2.Core.Unmanaged.Unrar,RARHeaderData,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,Initialize,The following statement contains a magic number: this.CmtBuf = new string((char)0' 65536);
Magic Number,Inbox2.Core.Unmanaged.Unrar,RARHeaderData,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,Initialize,The following statement contains a magic number: this.CmtBufSize = 65536;
Magic Number,Inbox2.Core.Unmanaged.Unrar,RARHeaderDataEx,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,Initialize,The following statement contains a magic number: this.CmtBuf = new string((char)0' 65536);
Magic Number,Inbox2.Core.Unmanaged.Unrar,RARHeaderDataEx,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,Initialize,The following statement contains a magic number: this.CmtBufSize = 65536;
Magic Number,Inbox2.Core.Unmanaged.Unrar,RAROpenArchiveData,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,Initialize,The following statement contains a magic number: this.CmtBuf = new string((char)0' 65536);
Magic Number,Inbox2.Core.Unmanaged.Unrar,RAROpenArchiveData,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,Initialize,The following statement contains a magic number: this.CmtBufSize = 65536;
Magic Number,Inbox2.Core.Unmanaged.Unrar,RAROpenArchiveDataEx,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,Initialize,The following statement contains a magic number: this.CmtBuf = new string((char)0' 65536);
Magic Number,Inbox2.Core.Unmanaged.Unrar,RAROpenArchiveDataEx,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,Initialize,The following statement contains a magic number: this.CmtBufSize = 65536;
Magic Number,Inbox2.Core.Unmanaged.Unrar,RAROpenArchiveDataEx,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,Initialize,The following statement contains a magic number: this.Reserved = new uint[32];
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,Open,The following statement contains a magic number: openStruct.CmtBuf = new string((char)0' 65536);
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,Open,The following statement contains a magic number: openStruct.CmtBufSize = 65536;
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,FromMSDOSTime,The following statement contains a magic number: hiWord = (ushort)((dosTime & 0xFFFF0000) >> 16);
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,FromMSDOSTime,The following statement contains a magic number: year = ((hiWord & 0xFE00) >> 9) + 1980;
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,FromMSDOSTime,The following statement contains a magic number: year = ((hiWord & 0xFE00) >> 9) + 1980;
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,FromMSDOSTime,The following statement contains a magic number: month = (hiWord & 0x01E0) >> 5;
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,FromMSDOSTime,The following statement contains a magic number: hour = (loWord & 0xF800) >> 11;
Magic Number,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,FromMSDOSTime,The following statement contains a magic number: minute = (loWord & 0x07E0) >> 5;
Magic Number,Inbox2.Core.Unmanaged.Unrar,UnrarExecutable,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\UnrarExecutable.cs,Is64BitMode,The following statement contains a magic number: return System.Runtime.InteropServices.Marshal.SizeOf(typeof(IntPtr)) == 8;
Missing Default,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,Open,The following switch statement is missing a default case: switch ((RarError)openStruct.OpenResult)  				{  					case RarError.InsufficientMemory:  						throw new OutOfMemoryException("Insufficient memory to perform operation.");    					case RarError.BadData:  						throw new IOException("Archive header broken");    					case RarError.BadArchive:  						throw new IOException("File is not a valid archive.");    					case RarError.OpenError:  						throw new IOException("File could not be opened.");  				}
Missing Default,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,ProcessFileError,The following switch statement is missing a default case: switch ((RarError)result)  			{  				case RarError.UnknownFormat:  					throw new OutOfMemoryException("Unknown archive format.");    				case RarError.BadData:  					throw new IOException("File CRC Error");    				case RarError.BadArchive:  					throw new IOException("File is not a valid archive.");    				case RarError.OpenError:  					throw new IOException("File could not be opened.");    				case RarError.CreateError:  					throw new IOException("File could not be created.");    				case RarError.CloseError:  					throw new IOException("File close error.");    				case RarError.ReadError:  					throw new IOException("File read error.");    				case RarError.WriteError:  					throw new IOException("File write error.");  			}
Missing Default,Inbox2.Core.Unmanaged.Unrar,Unrar,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar.cs,RARCallback,The following switch statement is missing a default case: switch ((CallbackMessages)msg)  			{  				case CallbackMessages.VolumeChange:  					volume = Marshal.PtrToStringAnsi(p1);  					if ((VolumeMessage)p2 == VolumeMessage.Notify)  						result = OnNewVolume(volume);  					else if ((VolumeMessage)p2 == VolumeMessage.Ask)  					{  						newVolume = OnMissingVolume(volume);  						if (newVolume.Length == 0)  							result = -1;  						else  						{  							if (newVolume != volume)  							{  								for (int i = 0; i < newVolume.Length; i++)  								{  									Marshal.WriteByte(p1' i' (byte)newVolume[i]);  								}  								Marshal.WriteByte(p1' newVolume.Length' (byte)0);  							}  							result = 1;  						}  					}  					break;    				case CallbackMessages.ProcessData:  					result = OnDataAvailable(p1' p2);  					break;    				case CallbackMessages.NeedPassword:  					result = OnPasswordRequired(p1' p2);  					break;  			}
Missing Default,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,Open,The following switch statement is missing a default case: switch ((Unrar.RarError)openStruct.OpenResult)  				{  					case Unrar.RarError.InsufficientMemory:  						throw new OutOfMemoryException("Insufficient memory to perform operation.");    					case Unrar.RarError.BadData:  						throw new IOException("Archive header broken");    					case Unrar.RarError.BadArchive:  						throw new IOException("File is not a valid archive.");    					case Unrar.RarError.OpenError:  						throw new IOException("File could not be opened.");  				}
Missing Default,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,ProcessFileError,The following switch statement is missing a default case: switch ((Unrar.RarError)result)  			{  				case Unrar.RarError.UnknownFormat:  					throw new OutOfMemoryException("Unknown archive format.");    				case Unrar.RarError.BadData:  					throw new IOException("File CRC Error");    				case Unrar.RarError.BadArchive:  					throw new IOException("File is not a valid archive.");    				case Unrar.RarError.OpenError:  					throw new IOException("File could not be opened.");    				case Unrar.RarError.CreateError:  					throw new IOException("File could not be created.");    				case Unrar.RarError.CloseError:  					throw new IOException("File close error.");    				case Unrar.RarError.ReadError:  					throw new IOException("File read error.");    				case Unrar.RarError.WriteError:  					throw new IOException("File write error.");  			}
Missing Default,Inbox2.Core.Unmanaged.Unrar,Unrar64,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Client\Inbox2\Core\Unmanaged\Unrar\Unrar64.cs,RARCallback,The following switch statement is missing a default case: switch ((Unrar.CallbackMessages)msg)  			{  				case Unrar.CallbackMessages.VolumeChange:  					volume = Marshal.PtrToStringAnsi(p1);  					if ((Unrar.VolumeMessage)p2 == Unrar.VolumeMessage.Notify)  						result = OnNewVolume(volume);  					else if ((Unrar.VolumeMessage)p2 == Unrar.VolumeMessage.Ask)  					{  						newVolume = OnMissingVolume(volume);  						if (newVolume.Length == 0)  							result = -1;  						else  						{  							if (newVolume != volume)  							{  								for (int i = 0; i < newVolume.Length; i++)  								{  									Marshal.WriteByte(p1' i' (byte)newVolume[i]);  								}  								Marshal.WriteByte(p1' newVolume.Length' (byte)0);  							}  							result = 1;  						}  					}  					break;    				case Unrar.CallbackMessages.ProcessData:  					result = OnDataAvailable(p1' p2);  					break;    				case Unrar.CallbackMessages.NeedPassword:  					result = OnPasswordRequired(p1' p2);  					break;  			}
