Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Inbox2.Channels.LinkedIn,LinkedInClientChannel,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Channels\LinkedIn\LinkedInClientChannel.cs,GetUpdates,Cyclomatic complexity of the method is 13
Long Parameter List,Inbox2.Channels.LinkedIn,LinkedInWebRequest,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Channels\LinkedIn\LinkedInWebRequest.cs,Put,The method has 6 parameters. Parameters: sourceUri' data' consumerKey' consumerSecret' token' tokenSecret
Long Parameter List,Inbox2.Channels.LinkedIn,LinkedInWebRequest,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Channels\LinkedIn\LinkedInWebRequest.cs,PerformRequest,The method has 6 parameters. Parameters: sourceUri' consumerKey' consumerSecret' token' tokenSecret' verifier
Long Parameter List,Inbox2.Channels.LinkedIn,LinkedInWebRequest,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Channels\LinkedIn\LinkedInWebRequest.cs,PerformRequest,The method has 5 parameters. Parameters: sourceUri' consumerKey' consumerSecret' token' tokenSecret
Long Parameter List,Inbox2.Channels.LinkedIn,LinkedInWebRequest,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Channels\LinkedIn\LinkedInWebRequest.cs,BuildOAuthParams,The method has 6 parameters. Parameters: source' consumerKey' consumerSecret' token' tokenSecret' verifier
Long Parameter List,Inbox2.Channels.LinkedIn,LinkedInWebRequest,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Channels\LinkedIn\LinkedInWebRequest.cs,BuildOAuthParams,The method has 7 parameters. Parameters: source' consumerKey' consumerSecret' token' tokenSecret' verifier' httpMethod
Long Statement,Inbox2.Channels.LinkedIn,LinkedInClientChannel,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Channels\LinkedIn\LinkedInClientChannel.cs,GetProfile,The length of the statement  "			var result = LinkedInWebRequest.PerformRequest(new Uri("http://api.linkedin.com/v1/people/~:(id'first-name'last-name'picture-url)")' " is 132.
Long Statement,Inbox2.Channels.LinkedIn,LinkedInClientChannel,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Channels\LinkedIn\LinkedInClientChannel.cs,GetUpdates,The length of the statement  "			var result = LinkedInWebRequest.PerformRequest(new Uri("http://api.linkedin.com/v1/people/~/network")' ChannelHelper.ConsumerKey' ChannelHelper.ConsumerSecret' ChannelHelper.Token' ChannelHelper.TokenSecret); " is 208.
Long Statement,Inbox2.Channels.LinkedIn,LinkedInClientChannel,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Channels\LinkedIn\LinkedInClientChannel.cs,BuildConnectionStatusMessage,The length of the statement  "				connectedTo[i] = String.Format("{0} {1}"' persons[i].Element("first-name").Value' persons[i].Element("last-name").Value); " is 121.
Long Statement,Inbox2.Channels.LinkedIn,LinkedInClientChannel,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Channels\LinkedIn\LinkedInClientChannel.cs,GetUserUpdates,The length of the statement  "			var result = LinkedInWebRequest.PerformRequest(new Uri(String.Concat("http://api.linkedin.com/v1/people/id="' username' ":(current-status'current-status-timestamp)"))' " is 167.
Long Statement,Inbox2.Channels.LinkedIn,LinkedInRedirectBuilder,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Channels\LinkedIn\LinkedInRedirectBuilder.cs,BuildRedirectUri,The length of the statement  "			return new Uri("https://api.linkedin.com/uas/oauth/authorize?oauth_token=" + Token + "&oauth_callback=" + BuildEnvironmentUrl()); " is 129.
Long Statement,Inbox2.Channels.LinkedIn,LinkedInRedirectBuilder,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Channels\LinkedIn\LinkedInRedirectBuilder.cs,GetUsername,The length of the statement  "			return result.Element("person").Element("first-name").Value + " " + result.Element("person").Element("last-name").Value; " is 120.
Long Statement,Inbox2.Channels.LinkedIn,LinkedInWebRequest,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Channels\LinkedIn\LinkedInWebRequest.cs,BuildOAuthParams,The length of the statement  "            string signature = oauth.GenerateSignature(source' parameters' consumerKey' consumerSecret' token' tokenSecret' httpMethod' timeStamp' nonce' OAuthBase.SignatureTypes.HMACSHA1); " is 177.
Missing Default,Inbox2.Channels.LinkedIn,LinkedInClientChannel,D:\research\architectureSmells\repos\waseems_inbox2_desktop\Code\Channels\LinkedIn\LinkedInClientChannel.cs,GetUpdates,The following switch statement is missing a default case: switch (updateType)  				{  					case LinkedInUpdateType.ANSW:  						// TODO : Answer Update  						break;  					case LinkedInUpdateType.APPS:  					case LinkedInUpdateType.APPM:  						// TODO : Application Update  						break;  					case LinkedInUpdateType.CONN:  					case LinkedInUpdateType.NCON:  					case LinkedInUpdateType.CCEM:  						// Connection updates  						statusUpdate = new ChannelStatusUpdate  						{  							ChannelStatusKey = BuildChannelStatusKey(response)'  							From = BuildSourceAddress(response)'  							Status = BuildConnectionStatusMessage(response)'  							DatePosted = GetDateTime(response)  						};  						break;  					case LinkedInUpdateType.JOBS:  					case LinkedInUpdateType.JOBP:  						// TODO : Posted a job  						break;  					case LinkedInUpdateType.JGRP:  						// TODO : Joined a group  						break;  					case LinkedInUpdateType.PICT:  					case LinkedInUpdateType.PICU:  						// TODO : Changed a picture  						break;  					case LinkedInUpdateType.RECU:  					case LinkedInUpdateType.PREC:  						// TODO : Recommendations  						break;  					case LinkedInUpdateType.PRFU:  					case LinkedInUpdateType.PROF:  						// TODO : Changed profile  						break;  					case LinkedInUpdateType.QSTN:  						// TODO : Question update  						break;  					case LinkedInUpdateType.STAT:  						// Status update  						statusUpdate = new ChannelStatusUpdate  						{  							ChannelStatusKey = BuildChannelStatusKey(response)'  							From = BuildSourceAddress(response)'  							Status = response.Element("update-content").Element("person").Element("current-status").Value'  							DatePosted = GetDateTime(response)  						};  						break;  				}
