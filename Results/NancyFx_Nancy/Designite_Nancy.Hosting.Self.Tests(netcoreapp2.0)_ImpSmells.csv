Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Nancy.Tests.Fakes,FakeRequest,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\Fakes\FakeRequest.cs,FakeRequest,The method has 7 parameters. Parameters: method' path' headers' body' protocol' query' userHostAddress
Long Statement,Nancy.Hosting.Self.Tests,NancySelfHostFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Hosting.Self.Tests\NancySelfHostFixture.cs,Should_set_query_string_and_uri_correctly,The length of the statement  "            A.CallTo(() => fakeEngine.HandleRequest(A<Request>.Ignored' A<Func<NancyContext' NancyContext>>.Ignored'A<CancellationToken>.Ignored)) " is 134.
Long Statement,Nancy.Hosting.Self.Tests,NancySelfHostFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Hosting.Self.Tests\NancySelfHostFixture.cs,Should_set_query_string_and_uri_correctly,The length of the statement  "                .ReturnsLazily(c => Task.FromResult(new NancyContext { Request = (Request)c.Arguments[0]' Response = new Response() })); " is 120.
Long Statement,Nancy.Tests.Fakes,FakeRouteCacheConfigurator,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\Fakes\FakeRouteCache.cs,AddGetRoute,The length of the statement  "                this.AddRoutesToCache(new[] { new RouteDescription(string.Empty' "GET"' path' condition' typeof(object)) }' moduleType); " is 120.
Long Statement,Nancy.Tests,ShouldAssertExtensions,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\ShouldExtensions.cs,ShouldStartWith,The length of the statement  "            Assert.True(actual.StartsWith(expected)' String.Format("Expected to start with {0} but ended with {1}"' expected' actual)); " is 123.
Empty Catch Block,Nancy.Hosting.Self.Tests,NancySelfHostFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Hosting.Self.Tests\NancySelfHostFixture.cs,Should_set_query_string_and_uri_correctly,The method has an empty catch block.
Magic Number,Nancy.Hosting.Self.Tests,NancySelfHostFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Hosting.Self.Tests\NancySelfHostFixture.cs,Should_be_able_to_get_from_contentlength_selfhost,The following statement contains a magic number: Assert.Equal(22' Convert.ToInt32(response.Headers["Content-Length"]));
Magic Number,Nancy.Tests.Fakes,FakeNancyModuleWithBasePath,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\Fakes\FakeNancyModuleWithBasePath.cs,FakeNancyModuleWithBasePath,The following statement contains a magic number: Delete("/"' args => {                  throw new NotImplementedException();                  return 500;              });
Magic Number,Nancy.Tests.Fakes,FakeNancyModuleWithBasePath,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\Fakes\FakeNancyModuleWithBasePath.cs,FakeNancyModuleWithBasePath,The following statement contains a magic number: Get<object>("/child/{value}"' args => {                  throw new NotImplementedException();                  return 500;              });
Magic Number,Nancy.Tests.Fakes,FakeNancyModuleWithBasePath,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\Fakes\FakeNancyModuleWithBasePath.cs,FakeNancyModuleWithBasePath,The following statement contains a magic number: Get("/child/route/{value}"' args => {                  return "test";                  return 500;              });
Magic Number,Nancy.Tests.Fakes,FakeNancyModuleWithBasePath,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\Fakes\FakeNancyModuleWithBasePath.cs,FakeNancyModuleWithBasePath,The following statement contains a magic number: Get("/"' args => {                  throw new NotImplementedException();                  return 500;              });
Magic Number,Nancy.Tests.Fakes,FakeNancyModuleWithBasePath,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\Fakes\FakeNancyModuleWithBasePath.cs,FakeNancyModuleWithBasePath,The following statement contains a magic number: Put("/"' args => {                  throw new NotImplementedException();                  return 500;              });
