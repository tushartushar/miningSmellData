Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Nancy.Encryption.MachineKey,MachineKeyHmacProvider,C:\repos\NancyFx_Nancy\src\Nancy.Encryption.MachineKey\MachineKeyHmacProvider.cs,HexStringToByteArray,The following statement contains a magic number: if (string.IsNullOrEmpty(data) || data.Length % 2 != 0)              {                  return ArrayCache.Empty<byte>();              }
Magic Number,Nancy.Encryption.MachineKey,MachineKeyHmacProvider,C:\repos\NancyFx_Nancy\src\Nancy.Encryption.MachineKey\MachineKeyHmacProvider.cs,HexStringToByteArray,The following statement contains a magic number: var output = new byte[data.Length / 2];
Magic Number,Nancy.Encryption.MachineKey,MachineKeyHmacProvider,C:\repos\NancyFx_Nancy\src\Nancy.Encryption.MachineKey\MachineKeyHmacProvider.cs,HexStringToByteArray,The following statement contains a magic number: for (var i = 0; i < data.Length / 2; i++)              {                  var numberString = new string(new[] { data[2 * i]' data[2 * i + 1] });                    var value = byte.Parse(numberString' NumberStyles.HexNumber);                    output[i] = value;              }
Magic Number,Nancy.Encryption.MachineKey,MachineKeyHmacProvider,C:\repos\NancyFx_Nancy\src\Nancy.Encryption.MachineKey\MachineKeyHmacProvider.cs,HexStringToByteArray,The following statement contains a magic number: for (var i = 0; i < data.Length / 2; i++)              {                  var numberString = new string(new[] { data[2 * i]' data[2 * i + 1] });                    var value = byte.Parse(numberString' NumberStyles.HexNumber);                    output[i] = value;              }
Magic Number,Nancy.Encryption.MachineKey,MachineKeyHmacProvider,C:\repos\NancyFx_Nancy\src\Nancy.Encryption.MachineKey\MachineKeyHmacProvider.cs,HexStringToByteArray,The following statement contains a magic number: for (var i = 0; i < data.Length / 2; i++)              {                  var numberString = new string(new[] { data[2 * i]' data[2 * i + 1] });                    var value = byte.Parse(numberString' NumberStyles.HexNumber);                    output[i] = value;              }
