Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Nancy.Tests.Fakes,FakeRequest,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\Fakes\FakeRequest.cs,FakeRequest,The method has 7 parameters. Parameters: method' path' headers' body' protocol' query' userHostAddress
Long Statement,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_read_range_annotation,The length of the statement  "            subject.Description.Rules.SelectMany(r => r.Value).ShouldHave(r => r.RuleType == "Comparison" && r.MemberNames.Contains("Value")); " is 130.
Long Statement,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_read_range_annotation,The length of the statement  "            subject.Description.Rules.SelectMany(r => r.Value).ShouldHave(r => r.RuleType == "Comparison" && r.MemberNames.Contains("Value")); " is 130.
Long Statement,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_read_derived_range_annotation,The length of the statement  "            subject.Description.Rules.SelectMany(r => r.Value).ShouldHave(r => r.RuleType == "Comparison" && r.MemberNames.Contains("Value")); " is 130.
Long Statement,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_read_derived_range_annotation,The length of the statement  "            subject.Description.Rules.SelectMany(r => r.Value).ShouldHave(r => r.RuleType == "Comparison" && r.MemberNames.Contains("Value")); " is 130.
Long Statement,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_read_regex_annotation,The length of the statement  "            subject.Description.Rules.SelectMany(r => r.Value).ShouldHave(r => r.RuleType == "Regex" && r.MemberNames.Contains("Age")); " is 123.
Long Statement,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_read_derived_regex_annotation,The length of the statement  "            subject.Description.Rules.SelectMany(r => r.Value).ShouldHave(r => r.RuleType == "Regex" && r.MemberNames.Contains("Age")); " is 123.
Long Statement,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_read_required_annotation,The length of the statement  "            subject.Description.Rules.SelectMany(r => r.Value).ShouldHave(r => r.RuleType == "NotNull" && r.MemberNames.Contains("FirstName")); " is 131.
Long Statement,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_read_required_annotation,The length of the statement  "            subject.Description.Rules.SelectMany(r => r.Value).ShouldHave(r => r.RuleType == "NotEmpty" && r.MemberNames.Contains("FirstName")); " is 132.
Long Statement,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_read_derived_required_annotation,The length of the statement  "            subject.Description.Rules.SelectMany(r => r.Value).ShouldHave(r => r.RuleType == "NotNull" && r.MemberNames.Contains("FirstName")); " is 131.
Long Statement,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_read_derived_required_annotation,The length of the statement  "            subject.Description.Rules.SelectMany(r => r.Value).ShouldHave(r => r.RuleType == "NotEmpty" && r.MemberNames.Contains("FirstName")); " is 132.
Long Statement,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_read_string_length_annotation,The length of the statement  "            subject.Description.Rules.SelectMany(r => r.Value).ShouldHave(r => r.RuleType == "StringLength" && r.MemberNames.Contains("FirstName")); " is 136.
Long Statement,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_read_derived_string_length_annotation,The length of the statement  "            subject.Description.Rules.SelectMany(r => r.Value).ShouldHave(r => r.RuleType == "StringLength" && r.MemberNames.Contains("FirstName")); " is 136.
Long Statement,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_use_custom_validator,The length of the statement  "            subject.Description.Rules.SelectMany(r => r.Value).ShouldHave(r => r.RuleType == "Oops" && r.MemberNames.Contains(string.Empty)); " is 129.
Long Statement,Nancy.Validation.DataAnnotations.Tests,PropertyValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\PropertyValidatorFixture.cs,Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked,The length of the statement  "            A.CallTo(() => this.adapter1.Validate(A<object>._' A<ValidationAttribute>._' A<PropertyDescriptor>._' A<NancyContext>._)).MustHaveHappened(); " is 141.
Long Statement,Nancy.Validation.DataAnnotations.Tests,PropertyValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\PropertyValidatorFixture.cs,Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked,The length of the statement  "            A.CallTo(() => this.adapter2.Validate(A<object>._' A<ValidationAttribute>._' A<PropertyDescriptor>._' A<NancyContext>._)).MustHaveHappened(); " is 141.
Long Statement,Nancy.Validation.DataAnnotations.Tests,PropertyValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\PropertyValidatorFixture.cs,Should_pass_instance_to_validator_when_validate_is_invoked,The length of the statement  "            A.CallTo(() => this.adapter1.Validate(instance' A<ValidationAttribute>._' A<PropertyDescriptor>._' context)).MustHaveHappened(); " is 128.
Long Statement,Nancy.Validation.DataAnnotations.Tests,PropertyValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\PropertyValidatorFixture.cs,Should_pass_attribute_to_validator_when_validate_is_invoked,The length of the statement  "            A.CallTo(() => this.adapter1.Validate(A<object>._' this.mappings.Keys.First()' A<PropertyDescriptor>._' A<NancyContext>._)).MustHaveHappened(); " is 143.
Long Statement,Nancy.Validation.DataAnnotations.Tests,PropertyValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\PropertyValidatorFixture.cs,Should_pass_descriptor_to_validator_when_validate_is_invoked,The length of the statement  "            A.CallTo(() => this.adapter1.Validate(A<object>._' A<ValidationAttribute>._' this.descriptor' A<NancyContext>._)).MustHaveHappened(); " is 133.
Long Statement,Nancy.Tests.Fakes,FakeRouteCacheConfigurator,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\Fakes\FakeRouteCache.cs,AddGetRoute,The length of the statement  "                this.AddRoutesToCache(new[] { new RouteDescription(string.Empty' "GET"' path' condition' typeof(object)) }' moduleType); " is 120.
Long Statement,Nancy.Tests,ShouldAssertExtensions,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\ShouldExtensions.cs,ShouldStartWith,The length of the statement  "            Assert.True(actual.StartsWith(expected)' String.Format("Expected to start with {0} but ended with {1}"' expected' actual)); " is 123.
Magic Number,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_contain_validation_results_from_all_validators,The following statement contains a magic number: results.Errors.Count().ShouldEqual(3);
Magic Number,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_return_descriptor_with_rules_from_all_validators,The following statement contains a magic number: descriptor.Rules.Count().ShouldEqual(3);
Magic Number,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Should_invoke_validation,The following statement contains a magic number: result.Errors.ShouldHaveCount(3);
Magic Number,Nancy.Validation.DataAnnotations.Tests,DataAnnotationsValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DataAnnotationsValidatorFixture.cs,Description_should_be_correct,The following statement contains a magic number: subject.Description.Rules.SelectMany(r => r.Value).ShouldHaveCount(10);
Magic Number,Nancy.Validation.DataAnnotations.Tests,DefaultValidatableObjectAdapterFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\DefaultValidatableObjectAdapterFixture.cs,Should_return_validation_error_for_all_validation_results,The following statement contains a magic number: results.Count().ShouldEqual(2);
Magic Number,Nancy.Validation.DataAnnotations.Tests,PropertyValidatorFixture,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Validation.DataAnnotations.Tests\PropertyValidatorFixture.cs,PropertyValidatorFixture,The following statement contains a magic number: this.mappings =                  new Dictionary<ValidationAttribute' IEnumerable<IDataAnnotationsValidatorAdapter>>                  {                      {new RangeAttribute(1' 10)' new[] {this.adapter1}}'                      {new RequiredAttribute()' new[] {this.adapter2}}                  };
Magic Number,Nancy.Tests.Fakes,FakeNancyModuleWithBasePath,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\Fakes\FakeNancyModuleWithBasePath.cs,FakeNancyModuleWithBasePath,The following statement contains a magic number: Delete("/"' args => {                  throw new NotImplementedException();                  return 500;              });
Magic Number,Nancy.Tests.Fakes,FakeNancyModuleWithBasePath,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\Fakes\FakeNancyModuleWithBasePath.cs,FakeNancyModuleWithBasePath,The following statement contains a magic number: Get<object>("/child/{value}"' args => {                  throw new NotImplementedException();                  return 500;              });
Magic Number,Nancy.Tests.Fakes,FakeNancyModuleWithBasePath,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\Fakes\FakeNancyModuleWithBasePath.cs,FakeNancyModuleWithBasePath,The following statement contains a magic number: Get("/child/route/{value}"' args => {                  return "test";                  return 500;              });
Magic Number,Nancy.Tests.Fakes,FakeNancyModuleWithBasePath,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\Fakes\FakeNancyModuleWithBasePath.cs,FakeNancyModuleWithBasePath,The following statement contains a magic number: Get("/"' args => {                  throw new NotImplementedException();                  return 500;              });
Magic Number,Nancy.Tests.Fakes,FakeNancyModuleWithBasePath,C:\research\architectureSmells\repos\NancyFx_Nancy\test\Nancy.Tests\Fakes\FakeNancyModuleWithBasePath.cs,FakeNancyModuleWithBasePath,The following statement contains a magic number: Put("/"' args => {                  throw new NotImplementedException();                  return 500;              });
