Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Nancy.Demo.Async,MainModule,C:\repos\NancyFx_Nancy\samples\Nancy.Demo.Async\MainModule.cs,MainModule,The following statement contains a magic number: Before += async (ctx' ct) =>                  {                      this.AddToLog("Before Hook Delay\n");                      await Task.Delay(5000);                        return null;                  };
Magic Number,Nancy.Demo.Async,MainModule,C:\repos\NancyFx_Nancy\samples\Nancy.Demo.Async\MainModule.cs,MainModule,The following statement contains a magic number: After += async (ctx' ct) =>                  {                      this.AddToLog("After Hook Delay\n");                      await Task.Delay(5000);                      this.AddToLog("After Hook Complete\n");                        ctx.Response = this.GetLog();                  };
Magic Number,Nancy.Demo.Async,MainModule,C:\repos\NancyFx_Nancy\samples\Nancy.Demo.Async\MainModule.cs,MainModule,The following statement contains a magic number: Get["/"' true] = async (x' ct) =>                  {                      this.AddToLog("Delay 1\n");                      await Task.Delay(1000);                        this.AddToLog("Delay 2\n");                      await Task.Delay(1000);                        this.AddToLog("Executing async http client\n");                      var client = new HttpClient();                      var res = await client.GetAsync("http://nancyfx.org");                      var content = await res.Content.ReadAsStringAsync();                        this.AddToLog("Response: " + content.Split('\n')[0] + "\n");                        return (Response)this.GetLog();                  };
Magic Number,Nancy.Demo.Async,MainModule,C:\repos\NancyFx_Nancy\samples\Nancy.Demo.Async\MainModule.cs,MainModule,The following statement contains a magic number: Get["/"' true] = async (x' ct) =>                  {                      this.AddToLog("Delay 1\n");                      await Task.Delay(1000);                        this.AddToLog("Delay 2\n");                      await Task.Delay(1000);                        this.AddToLog("Executing async http client\n");                      var client = new HttpClient();                      var res = await client.GetAsync("http://nancyfx.org");                      var content = await res.Content.ReadAsStringAsync();                        this.AddToLog("Response: " + content.Split('\n')[0] + "\n");                        return (Response)this.GetLog();                  };
Magic Number,Nancy.Demo.Async,Program,C:\repos\NancyFx_Nancy\samples\Nancy.Demo.Async\Program.cs,Main,The following statement contains a magic number: while (!completionTask.IsCompleted && !completionTask.IsFaulted)              {                  Console.Write("*");                  Thread.Sleep(100);              }
