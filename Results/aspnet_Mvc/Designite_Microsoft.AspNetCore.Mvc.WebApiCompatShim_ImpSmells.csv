Implementation smell,Namespace,Class,File,Method,Description
Complex Method,System.Net.Http.Formatting,DefaultContentNegotiator,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\DefaultContentNegotiator.cs,ComputeFormatterMatches,Cyclomatic complexity of the method is 10
Complex Method,System.Net.Http.Formatting,MediaTypeHeaderValueExtensions,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\MediaTypeHeaderValueExtensions.cs,IsSubsetOf,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.AspNetCore.Mvc.WebApiCompatShim,FormDataCollectionExtensions,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\FormDataCollectionExtensions.cs,NormalizeJQueryToMvc,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.AspNetCore.Mvc.WebApiCompatShim,OverloadActionConstraint,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\OverloadActionConstraint.cs,Accept,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.AspNetCore.Mvc.WebApiCompatShim,OverloadActionConstraint,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\OverloadActionConstraint.cs,GetOverloadableParameters,Cyclomatic complexity of the method is 10
Long Parameter List,System.Net.Http,HttpRequestMessageExtensions,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\HttpRequestMessage\HttpRequestMessageExtensions.cs,CreateResponse,The method has 5 parameters. Parameters: request' statusCode' value' formatter' mediaType
Long Parameter List,System.Net.Http,HttpRequestMessageExtensions,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\HttpRequestMessage\HttpRequestMessageExtensions.cs,CreateResponse,The method has 5 parameters. Parameters: request' statusCode' value' formatter' mediaType
Long Parameter List,Microsoft.AspNetCore.Builder,WebApiCompatShimRouteBuilderExtensions,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\Routing\WebApiCompatShimRouteBuilderExtensions.cs,MapWebApiRoute,The method has 5 parameters. Parameters: routeCollectionBuilder' name' template' defaults' constraints
Long Parameter List,Microsoft.AspNetCore.Builder,WebApiCompatShimRouteBuilderExtensions,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\Routing\WebApiCompatShimRouteBuilderExtensions.cs,MapWebApiRoute,The method has 6 parameters. Parameters: routeCollectionBuilder' name' template' defaults' constraints' dataTokens
Long Identifier,System.Net.Http.Formatting,DefaultContentNegotiator,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\DefaultContentNegotiator.cs,SelectResponseMediaTypeFormatter,The length of the parameter bestMatchOnAcceptHeaderLiteral is 30.
Long Identifier,System.Net.Http.Formatting,DefaultContentNegotiator,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\DefaultContentNegotiator.cs,SelectResponseMediaTypeFormatter,The length of the parameter bestMatchOnAcceptHeaderSubtypeMediaRange is 40.
Long Identifier,System.Net.Http.Formatting,DefaultContentNegotiator,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\DefaultContentNegotiator.cs,SelectResponseMediaTypeFormatter,The length of the parameter bestMatchOnAcceptHeaderAllMediaRange is 36.
Long Identifier,System.Net.Http.Formatting,MediaTypeConstants,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\MediaTypeConstants.cs,,The length of the parameter _defaultApplicationXmlMediaType is 31.
Long Identifier,System.Net.Http.Formatting,MediaTypeConstants,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\MediaTypeConstants.cs,,The length of the parameter _defaultApplicationJsonMediaType is 32.
Long Identifier,System.Net.Http.Formatting,MediaTypeConstants,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\MediaTypeConstants.cs,,The length of the parameter _defaultApplicationOctetStreamMediaType is 39.
Long Identifier,System.Net.Http.Formatting,MediaTypeConstants,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\MediaTypeConstants.cs,,The length of the parameter _defaultApplicationFormUrlEncodedMediaType is 42.
Long Identifier,System.Net.Http.Formatting,MediaTypeConstants,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\MediaTypeConstants.cs,,The length of the parameter _defaultApplicationBsonMediaType is 32.
Long Identifier,System.Net.Http,FormattingUtilities,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\FormattingUtilities.cs,,The length of the parameter DelegatingEnumerableGenericType is 31.
Long Identifier,System.Net.Http,FormattingUtilities,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\FormattingUtilities.cs,,The length of the parameter EnumerableInterfaceGenericType is 30.
Long Identifier,Microsoft.AspNetCore.Mvc.WebApiCompatShim,WebApiActionConventionsApplicationModelConvention,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\Conventions\WebApiActionConventionsApplicationModelConvention.cs,,The length of the parameter SupportedHttpMethodConventions is 30.
Long Statement,System.Net.Http.Formatting,MediaTypeHeaderValueExtensions,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\MediaTypeHeaderValueExtensions.cs,IsSubsetOf,The length of the statement  "            mediaType2Range = parsedMediaType2.IsAllMediaRange ? MediaTypeFormatterMatchRanking.MatchOnRequestAcceptHeaderAllMediaRange : " is 125.
Complex Conditional,System.Net.Http.Formatting,DefaultContentNegotiator,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\DefaultContentNegotiator.cs,SelectResponseCharacterEncoding,The conditional expression  "encoding != null && acceptCharset.Quality != FormattingUtilities.NoMatch &&                              (acceptCharset.Value.Equals(encoding.WebName' StringComparison.OrdinalIgnoreCase) ||                              acceptCharset.Value.Equals("*"' StringComparison.Ordinal))"  is complex.
Complex Conditional,Microsoft.AspNetCore.Mvc.WebApiCompatShim,WebApiParameterConventionsApplicationModelConvention,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\Conventions\WebApiParameterConventionsApplicationModelConvention.cs,Apply,The conditional expression  "parameter.ParameterInfo.HasDefaultValue && parameter.BindingInfo.BindingSource == uriBindingSource ||                          optionalMetadata != null && optionalMetadata.IsOptional ||                          optionalMetadata == null && parameter.BindingInfo.BindingSource != uriBindingSource"  is complex.
Magic Number,System.Net.Http.Formatting,ParsedMediaTypeHeaderValue,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\ParsedMediaTypeHeaderValue.cs,ParsedMediaTypeHeaderValue,The following statement contains a magic number: if (_delimiterIndex == mediaTypeLength - 2)              {                  if (mediaType[mediaTypeLength - 1] == MediaRangeAsterisk)                  {                      _isSubtypeMediaRange = true;                      if (_delimiterIndex == 1 && mediaType[0] == MediaRangeAsterisk)                      {                          _isAllMediaRange = true;                      }                  }              }
Magic Number,System.Net.Http,FormattingUtilities,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\FormattingUtilities.cs,UnquoteToken,The following statement contains a magic number: if (token.StartsWith("\""' StringComparison.Ordinal) &&                  token.EndsWith("\""' StringComparison.Ordinal) &&                  token.Length > 1)              {                  return token.Substring(1' token.Length - 2);              }
Missing Default,System.Net.Http.Formatting,DefaultContentNegotiator,C:\repos\aspnet_Mvc\src\Microsoft.AspNetCore.Mvc.WebApiCompatShim\ContentNegotiator\DefaultContentNegotiator.cs,SelectResponseMediaTypeFormatter,The following switch statement is missing a default case: switch (match.Ranking)                  {                      case MediaTypeFormatterMatchRanking.MatchOnCanWriteType:                          // First match by type trumps all other type matches                          if (bestMatchOnType == null)                          {                              bestMatchOnType = match;                          }                          break;                        case MediaTypeFormatterMatchRanking.MatchOnRequestAcceptHeaderLiteral:                          // Matches on accept headers must choose the highest quality match.                          // A match of 0.0 means we won't use it at all.                          bestMatchOnAcceptHeaderLiteral = UpdateBestMatch(bestMatchOnAcceptHeaderLiteral' match);                          break;                        case MediaTypeFormatterMatchRanking.MatchOnRequestAcceptHeaderSubtypeMediaRange:                          // Matches on accept headers must choose the highest quality match.                          // A match of 0.0 means we won't use it at all.                          bestMatchOnAcceptHeaderSubtypeMediaRange =                              UpdateBestMatch(bestMatchOnAcceptHeaderSubtypeMediaRange' match);                          break;                        case MediaTypeFormatterMatchRanking.MatchOnRequestAcceptHeaderAllMediaRange:                          // Matches on accept headers must choose the highest quality match.                          // A match of 0.0 means we won't use it at all.                          bestMatchOnAcceptHeaderAllMediaRange =                              UpdateBestMatch(bestMatchOnAcceptHeaderAllMediaRange' match);                          break;                        case MediaTypeFormatterMatchRanking.MatchOnRequestMediaType:                          // First match on request content type trumps other request content matches                          if (bestMatchOnRequestMediaType == null)                          {                              bestMatchOnRequestMediaType = match;                          }                          break;                  }
