Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Clifton.Tools.Data,Converter,C:\repos\cliftonm_nlp\Lib\Converter.cs,Convert,Cyclomatic complexity of the method is 9
Complex Method,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,Cyclomatic complexity of the method is 17
Complex Method,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,AddFile,Cyclomatic complexity of the method is 8
Complex Method,Clifton.MycroParser,MycroParser,C:\repos\cliftonm_nlp\Lib\MycroParser.cs,OnAddToCollection,Cyclomatic complexity of the method is 11
Complex Method,Clifton.MycroParser,MycroParser,C:\repos\cliftonm_nlp\Lib\MycroParser.cs,ProcessNode,Cyclomatic complexity of the method is 9
Complex Method,Clifton.MycroParser,MycroParser,C:\repos\cliftonm_nlp\Lib\MycroParser.cs,ProcessChildProperties,Cyclomatic complexity of the method is 10
Complex Method,Clifton.MycroParser,MycroParser,C:\repos\cliftonm_nlp\Lib\MycroParser.cs,ProcessAttributes,Cyclomatic complexity of the method is 15
Long Parameter List,Clifton.Tools.Data,JoinExtensions,C:\repos\cliftonm_nlp\Lib\JoinExtensions.cs,LeftJoin,The method has 5 parameters.
Long Parameter List,Clifton.Tools.Data,JoinExtensions,C:\repos\cliftonm_nlp\Lib\JoinExtensions.cs,RightJoin,The method has 5 parameters.
Long Parameter List,Clifton.Tools.Data,JoinExtensions,C:\repos\cliftonm_nlp\Lib\JoinExtensions.cs,FullOuterJoinJoin,The method has 5 parameters.
Long Parameter List,Clifton.Tools.Data,JoinExtensions,C:\repos\cliftonm_nlp\Lib\JoinExtensions.cs,LeftExcludingJoin,The method has 5 parameters.
Long Parameter List,Clifton.Tools.Data,JoinExtensions,C:\repos\cliftonm_nlp\Lib\JoinExtensions.cs,RightExcludingJoin,The method has 5 parameters.
Long Parameter List,Clifton.Tools.Data,JoinExtensions,C:\repos\cliftonm_nlp\Lib\JoinExtensions.cs,FullExcludingJoin,The method has 5 parameters.
Long Parameter List,Clifton.ExtensionMethods,ExtensionMethods,C:\repos\cliftonm_nlp\Lib\ExtensionMethods.cs,Merge,The method has 5 parameters.
Long Parameter List,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,MruStripMenu,The method has 5 parameters.
Long Parameter List,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,Init,The method has 5 parameters.
Long Parameter List,Clifton.Windows.Forms,MruStripMenuInline,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,MruStripMenuInline,The method has 5 parameters.
Long Parameter List,Clifton.Windows.Forms,MruStripMenuInline,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,MruStripMenuInline,The method has 5 parameters.
Long Parameter List,Clifton.Windows.Forms,MruStripMenuInline,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,MruStripMenuInline,The method has 6 parameters.
Long Parameter List,Clifton.MycroParser,EventEventArgs,C:\repos\cliftonm_nlp\Lib\MycroParser.cs,EventEventArgs,The method has 5 parameters.
Long Parameter List,Clifton.MycroParser,MycroParser,C:\repos\cliftonm_nlp\Lib\MycroParser.cs,OnAssignEvent,The method has 5 parameters.
Long Parameter List,Clifton.MycroParser,MycroParser,C:\repos\cliftonm_nlp\Lib\MycroParser.cs,OnAddToCollection,The method has 6 parameters.
Long Statement,Clifton.ExtensionMethods,ExtensionMethods,C:\repos\cliftonm_nlp\Lib\ExtensionMethods.cs,KeyFromValue,The length of the statement  "	// "Instead of calling Equals' it's better to use an IComparer<T> - and if you have no more information' EqualityComparer<T>.Default is a good choice: Aside from anything else' this avoids boxing/casting." " is 205.
Long Statement,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The length of the statement  "	string[] elements = pathname.Substring (root.Length).Split (Path.DirectorySeparatorChar' Path.AltDirectorySeparatorChar); " is 121.
Long Statement,Clifton.MycroParser,MycroParser,C:\repos\cliftonm_nlp\Lib\MycroParser.cs,OnAssignEvent,The length of the statement  "			MethodInfo mi = sink.GetType ().GetMethod (methodName' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static); " is 147.
Long Statement,Clifton.MycroParser,MycroParser,C:\repos\cliftonm_nlp\Lib\MycroParser.cs,ProcessNode,The length of the statement  "	// If the referenced object has additional properties that have been set (attributeCount > 1' as the first attribute is the ref:)' " is 130.
Long Statement,Clifton.MycroParser,MycroParser,C:\repos\cliftonm_nlp\Lib\MycroParser.cs,ProcessNode,The length of the statement  "	// then we call EndInit again because the object might need to do initialization with the attribute values that have now been assigned. " is 135.
Long Statement,Clifton.MycroParser,MycroParser,C:\repos\cliftonm_nlp\Lib\MycroParser.cs,ProcessNode,The length of the statement  "	// If the referenced object has additional properties that have been set (attributeCount > 1' as the first attribute is the ref:)' " is 130.
Long Statement,Clifton.MycroParser,MycroParser,C:\repos\cliftonm_nlp\Lib\MycroParser.cs,ProcessNode,The length of the statement  "	// then we call EndInit again because the object might need to do initialization with the attribute values that have now been assigned. " is 135.
Long Statement,Clifton.MycroParser,MycroParser,C:\repos\cliftonm_nlp\Lib\MycroParser.cs,ProcessAttributes,The length of the statement  "							Trace.Fail ("Property setter for " + pname + " cannot be converted to property type " + pi.PropertyType.FullName + "."); " is 120.
Long Statement,Clifton.ApplicationStateManagement,StatePersistence,C:\repos\cliftonm_nlp\Lib\StatePersistence.cs,SaveState,The length of the statement  "	appState.ObjectStates = (List<ObjectState>)appState.ObjectStates.Replace (objState' (a' b) => (a.StateObjectKey == b.StateObjectKey)); " is 134.
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,FixupEntryname,The following statement contains a magic number: if (number < 9)  	return "&" + (number + 1) + "  " + entryname;  else if (number == 9)  	return "1&0" + "  " + entryname;  else  	return (number + 1) + "  " + entryname;  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,FixupEntryname,The following statement contains a magic number: if (number < 9)  	return "&" + (number + 1) + "  " + entryname;  else if (number == 9)  	return "1&0" + "  " + entryname;  else  	return (number + 1) + "  " + entryname;  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,FixupEntryname,The following statement contains a magic number: if (number == 9)  	return "1&0" + "  " + entryname;  else  	return (number + 1) + "  " + entryname;  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,FixupPrefixes,The following statement contains a magic number: if (startNumber < maxEntries) {  	for (int i = StartIndex + startNumber; i < EndIndex; i++' startNumber++) {  		MenuItems [i].Text = FixupEntryname (startNumber' MenuItems [i].Text.Substring (startNumber == 9 ? 5 : 4));  	}  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,FixupPrefixes,The following statement contains a magic number: if (startNumber < maxEntries) {  	for (int i = StartIndex + startNumber; i < EndIndex; i++' startNumber++) {  		MenuItems [i].Text = FixupEntryname (startNumber' MenuItems [i].Text.Substring (startNumber == 9 ? 5 : 4));  	}  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,FixupPrefixes,The following statement contains a magic number: if (startNumber < maxEntries) {  	for (int i = StartIndex + startNumber; i < EndIndex; i++' startNumber++) {  		MenuItems [i].Text = FixupEntryname (startNumber' MenuItems [i].Text.Substring (startNumber == 9 ? 5 : 4));  	}  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,FixupPrefixes,The following statement contains a magic number: for (int i = StartIndex + startNumber; i < EndIndex; i++' startNumber++) {  	MenuItems [i].Text = FixupEntryname (startNumber' MenuItems [i].Text.Substring (startNumber == 9 ? 5 : 4));  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,FixupPrefixes,The following statement contains a magic number: for (int i = StartIndex + startNumber; i < EndIndex; i++' startNumber++) {  	MenuItems [i].Text = FixupEntryname (startNumber' MenuItems [i].Text.Substring (startNumber == 9 ? 5 : 4));  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,FixupPrefixes,The following statement contains a magic number: for (int i = StartIndex + startNumber; i < EndIndex; i++' startNumber++) {  	MenuItems [i].Text = FixupEntryname (startNumber' MenuItems [i].Text.Substring (startNumber == 9 ? 5 : 4));  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,FixupPrefixes,The following statement contains a magic number: MenuItems [i].Text = FixupEntryname (startNumber' MenuItems [i].Text.Substring (startNumber == 9 ? 5 : 4));  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,FixupPrefixes,The following statement contains a magic number: MenuItems [i].Text = FixupEntryname (startNumber' MenuItems [i].Text.Substring (startNumber == 9 ? 5 : 4));  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,FixupPrefixes,The following statement contains a magic number: MenuItems [i].Text = FixupEntryname (startNumber' MenuItems [i].Text.Substring (startNumber == 9 ? 5 : 4));  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (root.Length > 3)  	root += Path.DirectorySeparatorChar;  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements.GetLength (0) == 1)// pathname is just a root and filename   {  	if (elements [0].Length > 5)// long enough to shorten  	 {  		// if path is a UNC path' root may be rather long  		if (root.Length + 6 >= maxLength) {  			return root + elements [0].Substring (0' 3) + "...";  		}  		else {  			return pathname.Substring (0' maxLength - 3) + "...";  		}  	}  }  else if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements.GetLength (0) == 1)// pathname is just a root and filename   {  	if (elements [0].Length > 5)// long enough to shorten  	 {  		// if path is a UNC path' root may be rather long  		if (root.Length + 6 >= maxLength) {  			return root + elements [0].Substring (0' 3) + "...";  		}  		else {  			return pathname.Substring (0' maxLength - 3) + "...";  		}  	}  }  else if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements.GetLength (0) == 1)// pathname is just a root and filename   {  	if (elements [0].Length > 5)// long enough to shorten  	 {  		// if path is a UNC path' root may be rather long  		if (root.Length + 6 >= maxLength) {  			return root + elements [0].Substring (0' 3) + "...";  		}  		else {  			return pathname.Substring (0' maxLength - 3) + "...";  		}  	}  }  else if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements.GetLength (0) == 1)// pathname is just a root and filename   {  	if (elements [0].Length > 5)// long enough to shorten  	 {  		// if path is a UNC path' root may be rather long  		if (root.Length + 6 >= maxLength) {  			return root + elements [0].Substring (0' 3) + "...";  		}  		else {  			return pathname.Substring (0' maxLength - 3) + "...";  		}  	}  }  else if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements.GetLength (0) == 1)// pathname is just a root and filename   {  	if (elements [0].Length > 5)// long enough to shorten  	 {  		// if path is a UNC path' root may be rather long  		if (root.Length + 6 >= maxLength) {  			return root + elements [0].Substring (0' 3) + "...";  		}  		else {  			return pathname.Substring (0' maxLength - 3) + "...";  		}  	}  }  else if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements.GetLength (0) == 1)// pathname is just a root and filename   {  	if (elements [0].Length > 5)// long enough to shorten  	 {  		// if path is a UNC path' root may be rather long  		if (root.Length + 6 >= maxLength) {  			return root + elements [0].Substring (0' 3) + "...";  		}  		else {  			return pathname.Substring (0' maxLength - 3) + "...";  		}  	}  }  else if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements.GetLength (0) == 1)// pathname is just a root and filename   {  	if (elements [0].Length > 5)// long enough to shorten  	 {  		// if path is a UNC path' root may be rather long  		if (root.Length + 6 >= maxLength) {  			return root + elements [0].Substring (0' 3) + "...";  		}  		else {  			return pathname.Substring (0' maxLength - 3) + "...";  		}  	}  }  else if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements.GetLength (0) == 1)// pathname is just a root and filename   {  	if (elements [0].Length > 5)// long enough to shorten  	 {  		// if path is a UNC path' root may be rather long  		if (root.Length + 6 >= maxLength) {  			return root + elements [0].Substring (0' 3) + "...";  		}  		else {  			return pathname.Substring (0' maxLength - 3) + "...";  		}  	}  }  else if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements.GetLength (0) == 1)// pathname is just a root and filename   {  	if (elements [0].Length > 5)// long enough to shorten  	 {  		// if path is a UNC path' root may be rather long  		if (root.Length + 6 >= maxLength) {  			return root + elements [0].Substring (0' 3) + "...";  		}  		else {  			return pathname.Substring (0' maxLength - 3) + "...";  		}  	}  }  else if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements.GetLength (0) == 1)// pathname is just a root and filename   {  	if (elements [0].Length > 5)// long enough to shorten  	 {  		// if path is a UNC path' root may be rather long  		if (root.Length + 6 >= maxLength) {  			return root + elements [0].Substring (0' 3) + "...";  		}  		else {  			return pathname.Substring (0' maxLength - 3) + "...";  		}  	}  }  else if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements.GetLength (0) == 1)// pathname is just a root and filename   {  	if (elements [0].Length > 5)// long enough to shorten  	 {  		// if path is a UNC path' root may be rather long  		if (root.Length + 6 >= maxLength) {  			return root + elements [0].Substring (0' 3) + "...";  		}  		else {  			return pathname.Substring (0' maxLength - 3) + "...";  		}  	}  }  else if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements [0].Length > 5)// long enough to shorten   {  	// if path is a UNC path' root may be rather long  	if (root.Length + 6 >= maxLength) {  		return root + elements [0].Substring (0' 3) + "...";  	}  	else {  		return pathname.Substring (0' maxLength - 3) + "...";  	}  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements [0].Length > 5)// long enough to shorten   {  	// if path is a UNC path' root may be rather long  	if (root.Length + 6 >= maxLength) {  		return root + elements [0].Substring (0' 3) + "...";  	}  	else {  		return pathname.Substring (0' maxLength - 3) + "...";  	}  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements [0].Length > 5)// long enough to shorten   {  	// if path is a UNC path' root may be rather long  	if (root.Length + 6 >= maxLength) {  		return root + elements [0].Substring (0' 3) + "...";  	}  	else {  		return pathname.Substring (0' maxLength - 3) + "...";  	}  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements [0].Length > 5)// long enough to shorten   {  	// if path is a UNC path' root may be rather long  	if (root.Length + 6 >= maxLength) {  		return root + elements [0].Substring (0' 3) + "...";  	}  	else {  		return pathname.Substring (0' maxLength - 3) + "...";  	}  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (root.Length + 6 >= maxLength) {  	return root + elements [0].Substring (0' 3) + "...";  }  else {  	return pathname.Substring (0' maxLength - 3) + "...";  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (root.Length + 6 >= maxLength) {  	return root + elements [0].Substring (0' 3) + "...";  }  else {  	return pathname.Substring (0' maxLength - 3) + "...";  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (root.Length + 6 >= maxLength) {  	return root + elements [0].Substring (0' 3) + "...";  }  else {  	return pathname.Substring (0' maxLength - 3) + "...";  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: return root + elements [0].Substring (0' 3) + "...";  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: return pathname.Substring (0' maxLength - 3) + "...";  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if ((root.Length + 4 + elements [filenameIndex].Length) > maxLength)// pathname is just a root and filename   {  	root += "...\\";  	int len = elements [filenameIndex].Length;  	if (len < 6)  		return root + elements [filenameIndex];  	if ((root.Length + 6) >= maxLength) {  		len = 3;  	}  	else {  		len = maxLength - root.Length - 3;  	}  	return root + elements [filenameIndex].Substring (0' len) + "...";  }  else if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (len < 6)  	return root + elements [filenameIndex];  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if ((root.Length + 6) >= maxLength) {  	len = 3;  }  else {  	len = maxLength - root.Length - 3;  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if ((root.Length + 6) >= maxLength) {  	len = 3;  }  else {  	len = maxLength - root.Length - 3;  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if ((root.Length + 6) >= maxLength) {  	len = 3;  }  else {  	len = maxLength - root.Length - 3;  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: len = 3;  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: len = maxLength - root.Length - 3;  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,ShortenPathname,The following statement contains a magic number: if (elements.GetLength (0) == 2) {  	return root + "...\\" + elements [1];  }  else {  	int len = 0;  	int begin = 0;  	for (int i = 0; i < filenameIndex; i++) {  		if (elements [i].Length > len) {  			begin = i;  			len = elements [i].Length;  		}  	}  	int totalLength = pathname.Length - len + 3;  	int end = begin + 1;  	while (totalLength > maxLength) {  		if (begin > 0)  			totalLength -= elements [--begin].Length - 1;  		if (totalLength <= maxLength)  			break;  		if (end < filenameIndex)  			totalLength -= elements [++end].Length - 1;  		if (begin == 0 && end == filenameIndex)  			break;  	}  	// assemble final string  	for (int i = 0; i < begin; i++) {  		root += elements [i] + '\\';  	}  	root += "...\\";  	for (int i = end; i < filenameIndex; i++) {  		root += elements [i] + '\\';  	}  	return root + elements [filenameIndex];  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,SaveToRegistry,The following statement contains a magic number: if (registryKeyName != null) {  	mruStripMutex.WaitOne ();  	RegistryKey regKey = Registry.CurrentUser.CreateSubKey (registryKeyName);  	if (regKey != null) {  		regKey.SetValue ("max"' maxEntries);  		int number = 1;  		int i = StartIndex;  		for (; i < EndIndex; i++' number++) {  			regKey.SetValue ("File" + number.ToString ()' ((MruMenuItem)MenuItems [i]).Filename);  		}  		for (; number <= 16; number++) {  			regKey.DeleteValue ("File" + number.ToString ()' false);  		}  		regKey.Close ();  	}  	mruStripMutex.ReleaseMutex ();  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,SaveToRegistry,The following statement contains a magic number: if (regKey != null) {  	regKey.SetValue ("max"' maxEntries);  	int number = 1;  	int i = StartIndex;  	for (; i < EndIndex; i++' number++) {  		regKey.SetValue ("File" + number.ToString ()' ((MruMenuItem)MenuItems [i]).Filename);  	}  	for (; number <= 16; number++) {  		regKey.DeleteValue ("File" + number.ToString ()' false);  	}  	regKey.Close ();  }  
Magic Number,Clifton.Windows.Forms,MruStripMenu,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,SaveToRegistry,The following statement contains a magic number: for (; number <= 16; number++) {  	regKey.DeleteValue ("File" + number.ToString ()' false);  }  
Magic Number,Clifton.Windows.Forms,MruStripMenuInline,C:\repos\cliftonm_nlp\Lib\MruStripMenu.cs,MruStripMenuInline,The following statement contains a magic number: maxShortenPathLength = 48;  
