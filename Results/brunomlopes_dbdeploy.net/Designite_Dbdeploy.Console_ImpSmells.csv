Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Net.Sf.Dbdeploy,OptionsManager,C:\repos\brunomlopes_dbdeploy.net\src\Dbdeploy.Console\OptionsManager.cs,StripQuotes,The length of the statement  "                if ((value.StartsWith("\""' StringComparison.OrdinalIgnoreCase) && value.EndsWith("\""' StringComparison.OrdinalIgnoreCase)) " is 124.
Long Statement,Net.Sf.Dbdeploy,OptionsManager,C:\repos\brunomlopes_dbdeploy.net\src\Dbdeploy.Console\OptionsManager.cs,StripQuotes,The length of the statement  "                    || (value.StartsWith("'"' StringComparison.OrdinalIgnoreCase) && value.EndsWith("'"' StringComparison.OrdinalIgnoreCase))) " is 122.
Complex Conditional,Net.Sf.Dbdeploy,OptionsManager,C:\repos\brunomlopes_dbdeploy.net\src\Dbdeploy.Console\OptionsManager.cs,StripQuotes,The conditional expression  "(value.StartsWith("\""' StringComparison.OrdinalIgnoreCase) && value.EndsWith("\""' StringComparison.OrdinalIgnoreCase))                      || (value.StartsWith("'"' StringComparison.OrdinalIgnoreCase) && value.EndsWith("'"' StringComparison.OrdinalIgnoreCase))"  is complex.
Magic Number,Net.Sf.Dbdeploy,OptionsManager,C:\repos\brunomlopes_dbdeploy.net\src\Dbdeploy.Console\OptionsManager.cs,StripQuotes,The following statement contains a magic number: if (value != null)              {                  value = value.Trim();                    if ((value.StartsWith("\""' StringComparison.OrdinalIgnoreCase) && value.EndsWith("\""' StringComparison.OrdinalIgnoreCase))                      || (value.StartsWith("'"' StringComparison.OrdinalIgnoreCase) && value.EndsWith("'"' StringComparison.OrdinalIgnoreCase)))                  {                      return value.Substring(1' value.Length - 2);                  }              }
Magic Number,Net.Sf.Dbdeploy,CommandLine,C:\repos\brunomlopes_dbdeploy.net\src\Dbdeploy.Console\CommandLine.cs,Main,The following statement contains a magic number: try              {                  // Read arguments from command line                  var deploymentsConfig = OptionsManager.ParseOptions(args);                  var deployer = new DbDeployer();                  foreach (var config in deploymentsConfig.Deployments)                  {                      deployer.Execute(config' Console.Out);                  }              }              catch (UsageException ex)              {                  Console.Error.WriteLine("ERROR: " + ex.Message);                                    OptionsManager.PrintUsage();              }              catch (DbDeployException ex)              {                  Console.Error.WriteLine(ex.Message);                  exitCode = 1;              }              catch (Exception ex)              {                  Console.Error.WriteLine("Failed to apply changes: " + ex.Message);                  Console.Error.WriteLine(ex.StackTrace);                  exitCode = 2;              }
