Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Net.Sf.Dbdeploy,OptionsManager,F:\newReposMay17\brunomlopes_dbdeploy.net\src\Dbdeploy.Console\OptionsManager.cs,Initialize,The length of the statement  "	options.Add ("d|dbms="' "DBMS type ('mssql'' 'mysql' or 'ora')"' s => config.Dbms = s).Add ("c|connectionstring="' "connection string for database"' s => config.ConnectionString = StripQuotes (s)).Add ("s|scriptdirectory="' "directory containing change scripts (default: .)"' s => config.ScriptDirectory = new DirectoryInfo (StripQuotes (s))).Add ("o|outputfile="' "output file"' s => config.OutputFile = new FileInfo (StripQuotes (s))).Add ("t|changelogtablename="' "name of change log table to use (default: ChangeLog)"' s => config.ChangeLogTableName = StripQuotes (s)).Add ("a|autocreatechangelogtable="' "automatically creates the change log table if it does not exist (true or false).  Defaults to true."' s => config.AutoCreateChangeLogTable = s.ToLowerInvariant () != "false").Add ("f|forceupdate="' "forces previously failed scripts to be run again (true or false).  Defaults to false."' s => config.ForceUpdate = s.ToLowerInvariant () == "true").Add ("u|usesqlcmd="' "runs scripts in SQLCMD mode (true or false).  Defaults to false."' s => config.UseSqlCmd = s.ToLowerInvariant () == "true").Add ("l|lastchangetoapply="' "sets the last change to apply in the form of folder/scriptnumber (v1.0.0/4)."' s => config.LastChangeToApply = !string.IsNullOrWhiteSpace (s) ? new UniqueChange (s) : null).Add ("e|encoding="' "encoding for input and output files (default: UTF-8)"' s => config.Encoding = new OutputFileEncoding (StripQuotes (s)).AsEncoding ()).Add ("templatedirectory="' "template directory"' s => config.TemplateDirectory = new DirectoryInfo (StripQuotes (s))).Add ("delimiter="' "delimiter to separate sql statements"' s => config.Delimiter = s).Add ("delimitertype="' "delimiter type to separate sql statements (row or normal)"' s => config.DelimiterType = Parser.ParseDelimiterType (s)).Add ("lineending="' "line ending to use when applying scripts direct to db (platform' cr' crlf' lf)"' s => config.LineEnding = Parser.ParseLineEnding (s)).Add ("config="' "configuration file to use for all settings."' s => configFile.FileInfo = !string.IsNullOrWhiteSpace (s) ? new FileInfo (StripQuotes (s)) : null); " is 2124.
Long Statement,Net.Sf.Dbdeploy,OptionsManager,F:\newReposMay17\brunomlopes_dbdeploy.net\src\Dbdeploy.Console\OptionsManager.cs,StripQuotes,The length of the statement  "		if ((value.StartsWith ("\""' StringComparison.OrdinalIgnoreCase) && value.EndsWith ("\""' StringComparison.OrdinalIgnoreCase)) || (value.StartsWith ("'"' StringComparison.OrdinalIgnoreCase) && value.EndsWith ("'"' StringComparison.OrdinalIgnoreCase))) { " is 253.
Complex Conditional,Net.Sf.Dbdeploy,OptionsManager,F:\newReposMay17\brunomlopes_dbdeploy.net\src\Dbdeploy.Console\OptionsManager.cs,StripQuotes,The conditional expression  "(value.StartsWith ("\""' StringComparison.OrdinalIgnoreCase) && value.EndsWith ("\""' StringComparison.OrdinalIgnoreCase)) || (value.StartsWith ("'"' StringComparison.OrdinalIgnoreCase) && value.EndsWith ("'"' StringComparison.OrdinalIgnoreCase))"  is complex.
Magic Number,Net.Sf.Dbdeploy,OptionsManager,F:\newReposMay17\brunomlopes_dbdeploy.net\src\Dbdeploy.Console\OptionsManager.cs,StripQuotes,The following statement contains a magic number: if (value != null) {  	value = value.Trim ();  	if ((value.StartsWith ("\""' StringComparison.OrdinalIgnoreCase) && value.EndsWith ("\""' StringComparison.OrdinalIgnoreCase)) || (value.StartsWith ("'"' StringComparison.OrdinalIgnoreCase) && value.EndsWith ("'"' StringComparison.OrdinalIgnoreCase))) {  		return value.Substring (1' value.Length - 2);  	}  }  
Magic Number,Net.Sf.Dbdeploy,OptionsManager,F:\newReposMay17\brunomlopes_dbdeploy.net\src\Dbdeploy.Console\OptionsManager.cs,StripQuotes,The following statement contains a magic number: if ((value.StartsWith ("\""' StringComparison.OrdinalIgnoreCase) && value.EndsWith ("\""' StringComparison.OrdinalIgnoreCase)) || (value.StartsWith ("'"' StringComparison.OrdinalIgnoreCase) && value.EndsWith ("'"' StringComparison.OrdinalIgnoreCase))) {  	return value.Substring (1' value.Length - 2);  }  
Magic Number,Net.Sf.Dbdeploy,OptionsManager,F:\newReposMay17\brunomlopes_dbdeploy.net\src\Dbdeploy.Console\OptionsManager.cs,StripQuotes,The following statement contains a magic number: return value.Substring (1' value.Length - 2);  
Magic Number,Net.Sf.Dbdeploy,CommandLine,F:\newReposMay17\brunomlopes_dbdeploy.net\src\Dbdeploy.Console\CommandLine.cs,Main,The following statement contains a magic number: try {  	// Read arguments from command line  	var deploymentsConfig = OptionsManager.ParseOptions (args);  	var deployer = new DbDeployer ();  	foreach (var config in deploymentsConfig.Deployments) {  		deployer.Execute (config' Console.Out);  	}  } catch (UsageException ex) {  	Console.Error.WriteLine ("ERROR: " + ex.Message);  	OptionsManager.PrintUsage ();  } catch (DbDeployException ex) {  	Console.Error.WriteLine (ex.Message);  	exitCode = 1;  } catch (Exception ex) {  	Console.Error.WriteLine ("Failed to apply changes: " + ex.Message);  	Console.Error.WriteLine (ex.StackTrace);  	exitCode = 2;  }  
Magic Number,Net.Sf.Dbdeploy,CommandLine,F:\newReposMay17\brunomlopes_dbdeploy.net\src\Dbdeploy.Console\CommandLine.cs,Main,The following statement contains a magic number: exitCode = 2;  
