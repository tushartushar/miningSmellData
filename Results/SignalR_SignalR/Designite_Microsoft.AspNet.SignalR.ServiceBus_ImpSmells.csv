Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Microsoft.AspNet.SignalR,TaskAsyncHelper,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.Core\TaskAsyncHelper.cs,Then,The method has 5 parameters. Parameters: task' successor' arg1' arg2' arg3
Long Parameter List,Microsoft.AspNet.SignalR,GenericDelegates<T;TResult;T1;T2;T3>,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.Core\TaskAsyncHelper.cs,ThenWithArgs,The method has 5 parameters. Parameters: task' successor' arg1' arg2' arg3
Long Parameter List,Microsoft.AspNet.SignalR.ServiceBus,ServiceBusConnectionContext,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusConnectionContext.cs,ServiceBusConnectionContext,The method has 6 parameters. Parameters: configuration' topicNames' traceSource' handler' errorHandler' openStream
Long Statement,Microsoft.AspNet.SignalR.ServiceBus.Infrastructure,ServiceBusTaskExtensions,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\Infrastructure\ServiceBusTaskExtensions.cs,SendAsync,The length of the statement  "            return Task.Factory.FromAsync((cb' state) => client.BeginSend((BrokeredMessage)state' cb' null)' client.EndSend' message); " is 122.
Long Statement,Microsoft.AspNet.SignalR.ServiceBus,ServiceBusConnectionContext,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusConnectionContext.cs,Publish,The length of the statement  "                _trace.TraceWarning("Message size {0}KB exceeds the maximum size limit of {1}KB : {2}"' message.Size / 1024' _configuration.MaximumMessageSize / 1024' message); " is 160.
Long Statement,Microsoft.AspNet.SignalR.ServiceBus,ServiceBusConnection,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusConnection.cs,Subscribe,The length of the statement  "            _trace.TraceInformation("Subscription to {0} topics in the service bus Topic service completed successfully."' connectionContext.TopicNames.Count); " is 147.
Long Statement,Microsoft.AspNet.SignalR.ServiceBus,ServiceBusConnection,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusConnection.cs,CreateSubscription,The length of the statement  "                    _trace.TraceInformation("Creation of a new subscription {0} for topic {1} in the service bus completed successfully."' subscriptionName' topicName); " is 148.
Long Statement,Microsoft.AspNet.SignalR.ServiceBus,ServiceBusConnection,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusConnection.cs,CreateSubscription,The length of the statement  "                    _trace.TraceInformation("Creation of a new subscription {0} for topic {1} threw an MessagingEntityAlreadyExistsException."' subscriptionName' topicName); " is 153.
Long Statement,Microsoft.AspNet.SignalR.ServiceBus,ServiceBusConnection,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusConnection.cs,CreateSubscription,The length of the statement  "                _trace.TraceInformation("Creation of a message receive for subscription entity path {0} in the service bus completed successfully."' subscriptionEntityPath); " is 157.
Long Statement,Microsoft.AspNet.SignalR.ServiceBus,ServiceBusConnection,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusConnection.cs,ProcessMessages,The length of the statement  "                IAsyncResult result = receiverContext.Receiver.BeginReceiveBatch(ReceiverContext.ReceiveBatchSize' receiverContext.ReceiveTimeout' ar => " is 136.
Long Statement,Microsoft.AspNet.SignalR.ServiceBus,ServiceBusConnection,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusConnection.cs,ContinueReceiving,The length of the statement  "                _trace.TraceError("Receiving messages from the service bus threw an OperationCanceledException' most likely due to a closed channel."); " is 135.
Long Statement,Microsoft.AspNet.SignalR.ServiceBus,ServiceBusMessageBus,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusMessageBus.cs,TraceMessages,The length of the statement  "                _trace.TraceVerbose("{0} {1} bytes over Service Bus: {2}"' messageType' message.Value.Array.Length' message.GetString()); " is 121.
Magic Number,Microsoft.AspNet.SignalR,ServiceBusScaleoutConfiguration,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusScaleoutConfiguration.cs,ServiceBusScaleoutConfiguration,The following statement contains a magic number: TopicCount = 5;
Magic Number,Microsoft.AspNet.SignalR,ServiceBusScaleoutConfiguration,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusScaleoutConfiguration.cs,ServiceBusScaleoutConfiguration,The following statement contains a magic number: BackoffTime = TimeSpan.FromSeconds(20);
Magic Number,Microsoft.AspNet.SignalR,ServiceBusScaleoutConfiguration,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusScaleoutConfiguration.cs,ServiceBusScaleoutConfiguration,The following statement contains a magic number: MaximumMessageSize = 256 * 1024;
Magic Number,Microsoft.AspNet.SignalR,ServiceBusScaleoutConfiguration,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusScaleoutConfiguration.cs,ServiceBusScaleoutConfiguration,The following statement contains a magic number: MaximumMessageSize = 256 * 1024;
Magic Number,Microsoft.AspNet.SignalR.ServiceBus,ServiceBusConnectionContext,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusConnectionContext.cs,Publish,The following statement contains a magic number: if (message.Size > _configuration.MaximumMessageSize)              {                  _trace.TraceWarning("Message size {0}KB exceeds the maximum size limit of {1}KB : {2}"' message.Size / 1024' _configuration.MaximumMessageSize / 1024' message);              }
Magic Number,Microsoft.AspNet.SignalR.ServiceBus,ServiceBusConnectionContext,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.ServiceBus\ServiceBusConnectionContext.cs,Publish,The following statement contains a magic number: if (message.Size > _configuration.MaximumMessageSize)              {                  _trace.TraceWarning("Message size {0}KB exceeds the maximum size limit of {1}KB : {2}"' message.Size / 1024' _configuration.MaximumMessageSize / 1024' message);              }
