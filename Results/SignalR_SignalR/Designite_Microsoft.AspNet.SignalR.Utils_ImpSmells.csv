Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Microsoft.AspNet.SignalR.Infrastructure,PerformanceCounterManager,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.Core\Infrastructure\PerformanceCounterManager.cs,Initialize,The length of the parameter needToRegisterWithShutdownToken is 31.
Long Statement,Microsoft.AspNet.SignalR.Infrastructure,PerformanceCounterManager,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.Core\Infrastructure\PerformanceCounterManager.cs,SanitizeInstanceName,The length of the statement  "            // Details on how to sanitize instance names are at http://msdn.microsoft.com/en-us/library/vstudio/system.diagnostics.performancecounter.instancename " is 150.
Long Statement,Microsoft.AspNet.SignalR.Utils,Program,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.Utils\Program.cs,PrintBanner,The length of the statement  "            Console.WriteLine(String.Format(CultureInfo.CurrentCulture' Resources.Notify_SignalRUtilityVersion' Assembly.GetExecutingAssembly().GetName().Version)); " is 152.
Long Statement,Microsoft.AspNet.SignalR.Utils,Program,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.Utils\Program.cs,PrintHelp,The length of the statement  "            var commands = String.Join(Environment.NewLine + "  "' _commands.Select(c => String.Join("' "' c.Names.Select(n => n)) + "    " + c.Help)); " is 139.
Empty Catch Block,Microsoft.AspNet.SignalR.Infrastructure,PerformanceCounterWrapper,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.Core\Infrastructure\PerformanceCounterWrapper.cs,RemoveInstance,The method has an empty catch block.
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,PerformanceCounterManager,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.Core\Infrastructure\PerformanceCounterManager.cs,SanitizeInstanceName,The following statement contains a magic number: var maxLength = 127;
Missing Default,Microsoft.AspNet.SignalR.Utils,GenerateHubProxyCommand,C:\repos\SignalR_SignalR\src\Microsoft.AspNet.SignalR.Utils\Commands\GenerateHubProxyCommand.cs,ParseArguments,The following switch statement is missing a default case: switch (arg.Key)                  {                      case "path":                          path = arg.Value;                          break;                      case "url":                          url = arg.Value;                          break;                      case "o":                          outputPath = arg.Value;                          break;                  }
