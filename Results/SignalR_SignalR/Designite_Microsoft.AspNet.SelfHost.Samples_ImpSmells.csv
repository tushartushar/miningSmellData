Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,C:\repos\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,InlineScriptTag,The length of the statement  "            return "WAITING for Script Tag to replace this.<script>$(\"#inlineScriptTag\").html('Success! Replaced by inline Script Tag');</script>"; " is 137.
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,C:\repos\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,GetValue,The following statement contains a magic number: return Task.Factory.StartNew(() =>              {                  Thread.Sleep(5000);                  return 10;              });
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,C:\repos\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,GetValue,The following statement contains a magic number: return Task.Factory.StartNew(() =>              {                  Thread.Sleep(5000);                  return 10;              });
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,C:\repos\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,PlainTask,The following statement contains a magic number: await Task.Delay(500);
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,C:\repos\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,GenericTaskWithContinueWith,The following statement contains a magic number: return await Task.Run(() => 2 + 2).ContinueWith(task => task.Result);
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,C:\repos\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,GenericTaskWithContinueWith,The following statement contains a magic number: return await Task.Run(() => 2 + 2).ContinueWith(task => task.Result);
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,C:\repos\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,MultipleCalls,The following statement contains a magic number: for (int i = 0; i < 10; i++)              {                  Clients.Caller.index = i + 1;                  Clients.Caller.invoke(i);                  Thread.Sleep(1000);              }
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,C:\repos\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,MultipleCalls,The following statement contains a magic number: for (int i = 0; i < 10; i++)              {                  Clients.Caller.index = i + 1;                  Clients.Caller.invoke(i);                  Thread.Sleep(1000);              }
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,C:\repos\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,ReportProgress,The following statement contains a magic number: for (int i = 0; i <= 100; i += 10)              {                  await Task.Delay(250);                  progress.Report(i);              }
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,C:\repos\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,ReportProgress,The following statement contains a magic number: for (int i = 0; i <= 100; i += 10)              {                  await Task.Delay(250);                  progress.Report(i);              }
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,C:\repos\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,ReportProgress,The following statement contains a magic number: for (int i = 0; i <= 100; i += 10)              {                  await Task.Delay(250);                  progress.Report(i);              }
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,C:\repos\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,ReturnLargePayload,The following statement contains a magic number: return new string('a'' 64 * 1024);
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,C:\repos\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,ReturnLargePayload,The following statement contains a magic number: return new string('a'' 64 * 1024);
