Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.AspNet.SignalR.Samples.Hubs.Chat,Chat,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\Chat\Chat.cs,TryHandleCommand,The method has 171 lines of code.
Complex Method,Microsoft.AspNet.SignalR.Samples,RawConnection,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Raw\RawConnection.cs,OnReceived,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.AspNet.SignalR.Samples.Hubs.Chat,Chat,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\Chat\Chat.cs,TryHandleCommand,Cyclomatic complexity of the method is 25
Long Parameter List,Microsoft.AspNet.SignalR,HighFrequencyTimer,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\RealtimeBroadcast\HighFrequencyTimer.cs,HighFrequencyTimer,The method has 5 parameters. Parameters: fps' callback' started' stopped' actualFpsUpdate
Long Parameter List,Microsoft.AspNet.SignalR.Samples.Hubs.ShapeShare,ShapeShare,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\ShapeShare\ShapeShare.cs,ChangeShape,The method has 5 parameters. Parameters: id' x' y' w' h
Long Statement,Microsoft.AspNet.SignalR.Samples,Startup,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\App_Start\Startup.SignalR.cs,ConfigureSignalR,The length of the statement  "            //dependencyResolver.UseSqlServer(System.Configuration.ConfigurationManager.ConnectionStrings["SignalRSamples"].ConnectionString); " is 130.
Long Statement,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,InlineScriptTag,The length of the statement  "            return "WAITING for Script Tag to replace this.<script>$(\"#inlineScriptTag\").html('Success! Replaced by inline Script Tag');</script>"; " is 137.
Long Statement,Microsoft.AspNet.SignalR.Samples.Hubs.Chat,Chat,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\Chat\Chat.cs,ExtractContent,The length of the statement  "            var requestTask = Task.Factory.FromAsync((cb' state) => request.BeginGetResponse(cb' state)' ar => request.EndGetResponse(ar)' null); " is 133.
Long Statement,Microsoft.AspNet.SignalR.Hosting.AspNet.Samples.Hubs.HubConnectionAPI,HubConnectionAPI,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\HubConnectionAPI\HubConnectionAPI.cs,DisplayMessageAllExcept,The length of the statement  "            Clients.AllExcept(excludeConnectionIds).displayMessage("Clients.AllExcept: " + message + " from " + Context.ConnectionId); " is 122.
Long Statement,Microsoft.AspNet.SignalR.Hosting.AspNet.Samples.Hubs.HubConnectionAPI,HubConnectionAPI,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\HubConnectionAPI\HubConnectionAPI.cs,DisplayMessageGroupExcept,The length of the statement  "            Clients.Group(groupName' excludeConnectionIds).displayMessage("Clients.Group: " + message + " from " + Context.ConnectionId); " is 125.
Magic Number,Microsoft.AspNet.SignalR.Samples,BackgroundThread,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\App_Start\BackgroundThread.cs,Start,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(_ =>              {                  var context = GlobalHost.ConnectionManager.GetConnectionContext<StreamingConnection>();                  var hubContext = GlobalHost.ConnectionManager.GetHubContext<DemoHub>();                    while (true)                  {                      try                      {                          context.Connection.Broadcast(DateTime.Now.ToString());                          hubContext.Clients.All.fromArbitraryCode(DateTime.Now.ToString());                      }                      catch (Exception ex)                      {                          System.Diagnostics.Trace.TraceError("SignalR error thrown in Streaming broadcast: {0}"' ex);                      }                      Thread.Sleep(2000);                  }              });
Magic Number,Microsoft.AspNet.SignalR.Samples,SendingConnection,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Raw\SendingConnection.cs,OnReceived,The following statement contains a magic number: i < 10
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,GetValue,The following statement contains a magic number: return Task.Factory.StartNew(() =>              {                  Thread.Sleep(5000);                  return 10;              });
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,GetValue,The following statement contains a magic number: return Task.Factory.StartNew(() =>              {                  Thread.Sleep(5000);                  return 10;              });
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,PlainTask,The following statement contains a magic number: await Task.Delay(500);
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,GenericTaskWithContinueWith,The following statement contains a magic number: return await Task.Run(() => 2 + 2).ContinueWith(task => task.Result);
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,GenericTaskWithContinueWith,The following statement contains a magic number: return await Task.Run(() => 2 + 2).ContinueWith(task => task.Result);
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,MultipleCalls,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,MultipleCalls,The following statement contains a magic number: i < 10
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,ReportProgress,The following statement contains a magic number: await Task.Delay(250);
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,ReportProgress,The following statement contains a magic number: i <= 100
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,ReturnLargePayload,The following statement contains a magic number: return new string('a'' 64 * 1024);
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.DemoHub,DemoHub,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\DemoHub\DemoHub.cs,ReturnLargePayload,The following statement contains a magic number: return new string('a'' 64 * 1024);
Magic Number,Microsoft.AspNet.SignalR,HighFrequencyTimer,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\RealtimeBroadcast\HighFrequencyTimer.cs,Stop,The following statement contains a magic number: Interlocked.CompareExchange(ref _state' 3' 2) != 2
Magic Number,Microsoft.AspNet.SignalR,HighFrequencyTimer,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\RealtimeBroadcast\HighFrequencyTimer.cs,Stop,The following statement contains a magic number: Interlocked.CompareExchange(ref _state' 3' 2) != 2
Magic Number,Microsoft.AspNet.SignalR,HighFrequencyTimer,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\RealtimeBroadcast\HighFrequencyTimer.cs,Stop,The following statement contains a magic number: Interlocked.CompareExchange(ref _state' 3' 2) != 2
Magic Number,Microsoft.AspNet.SignalR,HighFrequencyTimer,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\RealtimeBroadcast\HighFrequencyTimer.cs,IsRunning,The following statement contains a magic number: return Interlocked.Read(ref _state) == 2;
Magic Number,Microsoft.AspNet.SignalR,HighFrequencyTimer,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\RealtimeBroadcast\HighFrequencyTimer.cs,Run,The following statement contains a magic number: Interlocked.Exchange(ref _state' 2);
Magic Number,Microsoft.AspNet.SignalR,HighFrequencyTimer,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\RealtimeBroadcast\HighFrequencyTimer.cs,Run,The following statement contains a magic number: var frameMs = (int)Math.Round(1000.0 / FPS);
Magic Number,Microsoft.AspNet.SignalR,HighFrequencyTimer,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\RealtimeBroadcast\HighFrequencyTimer.cs,Run,The following statement contains a magic number: (lastFpsCheck + 1000 - sw.ElapsedMilliseconds) <= 0
Magic Number,Microsoft.AspNet.SignalR,HighFrequencyTimer,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\RealtimeBroadcast\HighFrequencyTimer.cs,Run,The following statement contains a magic number: Interlocked.Read(ref _state) == 2
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.ShapeShare,ShapeShare,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\ShapeShare\ShapeShare.cs,Join,The following statement contains a magic number: user.Name = "User" + _userNameGenerator.Next(1000);
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.ShapeShare,Shape,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\ShapeShare\ShapeShare.cs,Shape,The following statement contains a magic number: Location = new Point(20' 20);
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.ShapeShare,Shape,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\ShapeShare\ShapeShare.cs,Shape,The following statement contains a magic number: Location = new Point(20' 20);
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.ShapeShare,Rectangle,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\ShapeShare\ShapeShare.cs,Rectangle,The following statement contains a magic number: Width = 160;
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.ShapeShare,Rectangle,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\ShapeShare\ShapeShare.cs,Rectangle,The following statement contains a magic number: Height = 100;
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.ShapeShare,Square,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\ShapeShare\ShapeShare.cs,Square,The following statement contains a magic number: Width = 100;
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.ShapeShare,Circle,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\ShapeShare\ShapeShare.cs,Circle,The following statement contains a magic number: Width = 100;
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.ShapeShare,Picture,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\ShapeShare\ShapeShare.cs,Picture,The following statement contains a magic number: Width = 165;
Magic Number,Microsoft.AspNet.SignalR.Samples.Hubs.ShapeShare,Picture,D:\research\architectureSmells\repos1\SignalR_SignalR\samples\Microsoft.AspNet.SignalR.Samples\Hubs\ShapeShare\ShapeShare.cs,Picture,The following statement contains a magic number: Height = 64;
