Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,UseSqlNotificationsIfAvailable,The length of the statement  "            var operation = new ObservableDbOperation("test"' "test"' new TraceSource("test")' dbProviderFactory' dbBehavior.Object); " is 121.
Long Statement,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,DoesRetryLoopConfiguredNumberOfTimes,The length of the statement  "            var operation = new ObservableDbOperation("test"' "test"' new TraceSource("test")' dbProviderFactory' dbBehavior.Object); " is 121.
Long Statement,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,CallsOnErrorOnException,The length of the statement  "            var operation = new ObservableDbOperation("test"' "test"' new TraceSource("test")' dbProviderFactory' dbBehavior.Object); " is 121.
Long Statement,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,ExecuteReaderSetsNotificationStateCorrectlyUpToAwaitingNotification,The length of the statement  "            var operation = new ObservableDbOperation("test"' "test"' new TraceSource("test")' dbProviderFactory' dbBehavior.Object); " is 121.
Long Statement,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,ExecuteReaderSetsNotificationStateCorrectlyWhenRecordsReceivedWhileSettingUpSqlDependency,The length of the statement  "            dbBehavior.Setup(db => db.AddSqlDependency(It.IsAny<IDbCommand>()' It.IsAny<Action<SqlNotificationEventArgs>>())).Callback(() => sqlDependencyAddedCount++); " is 156.
Long Statement,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,ExecuteReaderSetsNotificationStateCorrectlyWhenRecordsReceivedWhileSettingUpSqlDependency,The length of the statement  "            var operation = new ObservableDbOperation("test"' "test"' new TraceSource("test")' dbProviderFactory' dbBehavior.Object); " is 121.
Long Statement,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,ExecuteReaderSetsNotificationStateCorrectlyWhenNotificationReceivedBeforeChangingStateToAwaitingNotification,The length of the statement  "            var operation = new ObservableDbOperation("test"' "test"' new TraceSource("test")' dbProviderFactory' dbBehavior.Object); " is 121.
Magic Number,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,UseSqlNotificationsIfAvailable,The following statement contains a magic number: Assert.True(mre.Wait(10000));
Magic Number,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,DoesRetryLoopConfiguredNumberOfTimes,The following statement contains a magic number: Assert.True(mre.Wait(10000));
Magic Number,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,CallsOnErrorOnException,The following statement contains a magic number: Assert.True(mre.Wait(10000));
Magic Number,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,ExecuteReaderSetsNotificationStateCorrectlyWhenRecordsReceivedWhileSettingUpSqlDependency,The following statement contains a magic number: dbProviderFactory.MockDataReader.Setup(r => r.Read()).Returns(() => ++readCount == 2 && sqlDependencyAddedCount == 1);
Magic Number,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,ExecuteReaderSetsNotificationStateCorrectlyWhenRecordsReceivedWhileSettingUpSqlDependency,The following statement contains a magic number: operation.Queried += () =>              {                  queriedCount++;                    if (queriedCount == 3)                  {                      // First query after the loop starts again' check the state is reset                      stateOnLoopRestart = operation.CurrentNotificationState;                      mre.Set();                  }              };
Magic Number,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,ExecuteReaderSetsNotificationStateCorrectlyWhenRecordsReceivedWhileSettingUpSqlDependency,The following statement contains a magic number: Assert.True(mre.Wait(5000));
Magic Number,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,ExecuteReaderSetsNotificationStateCorrectlyWhenNotificationReceivedBeforeChangingStateToAwaitingNotification,The following statement contains a magic number: operation.Queried += () =>              {                  queriedCount++;                    if (queriedCount == 3)                  {                      // First query after the loop starts again' capture the state                      stateOnLoopRestart = operation.CurrentNotificationState;                      mre.Set();                  }              };
Magic Number,Microsoft.AspNet.SignalR.Tests.SqlServer,ObservableSqlOperationFacts,D:\research\architectureSmells\repos1\SignalR_SignalR\test\Microsoft.AspNet.SignalR.SqlServer.Tests\ObservableSqlOperationFacts.cs,ExecuteReaderSetsNotificationStateCorrectlyWhenNotificationReceivedBeforeChangingStateToAwaitingNotification,The following statement contains a magic number: Assert.True(mre.Wait(5000));
