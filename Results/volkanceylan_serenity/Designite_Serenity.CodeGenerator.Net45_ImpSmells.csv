Implementation smell,Namespace,Class,File,Method,Description
Long Method,Serenity.CodeGenerator,RowGenerator,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Generator\RowGenerator.cs,GenerateModel,The method has 217 lines of code.
Complex Method,Serenity.CodeGenerator,EntityCodeGenerator,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Generator\EntityCodeGenerator.cs,Run,Cyclomatic complexity of the method is 10
Complex Method,Serenity.CodeGenerator,RowGenerator,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Generator\RowGenerator.cs,GenerateModel,Cyclomatic complexity of the method is 39
Complex Method,Serenity.CodeGenerator,ProjectFileHelper,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Helpers\ProjectFileHelper.cs,AddFileToProject,Cyclomatic complexity of the method is 14
Complex Method,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,MainWindow,Cyclomatic complexity of the method is 8
Long Parameter List,Serenity.CodeGenerator,RowGenerator,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Generator\RowGenerator.cs,GenerateModel,The method has 8 parameters. Parameters: connection' tableSchema' table' module' connectionKey' entityClass' permission' config
Long Statement,Serenity.CodeGenerator,RowGenerator,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Generator\RowGenerator.cs,GenerateModel,The length of the statement  "                    attrs.Add("ForeignKey(\"" + (string.IsNullOrEmpty(x.PKSchema) ? x.PKTable : ("[" + x.PKSchema + "].[" + x.PKTable + "]")) + "\"' \"" + x.PKColumn + "\")"); " is 155.
Long Statement,Serenity.CodeGenerator,GeneratorConfig,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\Generator\GeneratorConfig.cs,UpdateConnectionsFrom,The length of the statement  "                            var connection = Connections.FirstOrDefault(x => String.Compare(x.Key' name.Value' StringComparison.OrdinalIgnoreCase) == 0); " is 125.
Long Statement,Serenity.CodeGenerator,AddConnectionStringWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\AddConnectionStringWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Serenity.CodeGenerator;component/addconnectionstringwindow.xaml"' System.UriKind.Relative); " is 137.
Long Statement,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,AddConnection_Click,The length of the statement  "                var connection = config.Connections.FirstOrDefault(x => String.Compare(x.Key' cstr' StringComparison.OrdinalIgnoreCase) == 0); " is 126.
Long Statement,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,GenerateCodes_Click,The length of the statement  "            MessageBox.Show("Code files for the selected table is generated. Please REBUILD SOLUTION before running application' otherwise you may have script errors!"); " is 157.
Long Statement,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Serenity.CodeGenerator;component/mainwindow.xaml"' System.UriKind.Relative); " is 122.
Long Statement,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,Connect,The length of the statement  "            this.ConnectionsCombo.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ConnectionsCombo_SelectionChanged); " is 139.
Complex Conditional,Serenity.CodeGenerator,GeneratorConfig,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\Generator\GeneratorConfig.cs,UpdateConnectionsFrom,The conditional expression  "name != null &&                              !string.IsNullOrWhiteSpace(name.Value) &&                              conn != null &&                              !string.IsNullOrWhiteSpace(conn.Value) &&                              prov != null &&                              !string.IsNullOrWhiteSpace(prov.Value)"  is complex.
Magic Number,Serenity.CodeGenerator,RowGenerator,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Generator\RowGenerator.cs,GenerateModel,The following statement contains a magic number: foreach (var field in fields)              {                  var f = ToEntityField(field' prefix);                    if (f.Ident == model.IdField)                      f.ColAttributes = "EditLink' DisplayName(\"Db.Shared.RecordId\")' AlignRight";                    int i = 0;                  string ident = f.Ident;                  while (fieldByIdent.ContainsKey(ident))                      ident = f.Ident + ++i;                  f.Ident = ident;                  fieldByIdent[ident] = f;                    if (f.Name == className && f.FieldType == "String")                  {                      model.NameField = f.Name;                      f.ColAttributes = f.ColAttributes ?? "EditLink";                  }                    var foreign = foreigns.Find((k) => k.FKColumn.Equals(field.FieldName' StringComparison.OrdinalIgnoreCase));                  if (foreign != null)                  {                      if (f.Title.EndsWith(" Id") && f.Title.Length > 3)                          f.Title = f.Title.SafeSubstring(0' f.Title.Length - 3);                        f.PKSchema = foreign.PKSchema;                      f.PKTable = foreign.PKTable;                      f.PKColumn = foreign.PKColumn;                        var frgfld = schemaProvider.GetFieldInfos(connection' foreign.PKSchema' foreign.PKTable).ToList();                      int frgPrefix = RowGenerator.DeterminePrefixLength(frgfld' z => z.FieldName);                      var j = new EntityJoin();                      j.Fields = new List<EntityField>();                      j.Name = GenerateVariableName(f.Name.Substring(prefix));                      if (j.Name.EndsWith("Id") || j.Name.EndsWith("ID"))                          j.Name = j.Name.Substring(0' j.Name.Length - 2);                      f.ForeignJoinAlias = j.Name;                      j.SourceField = f.Ident;                        frgfld = frgfld.Where(y => !removeForeignFields.Contains(y.FieldName)).ToList();                        foreach (var frg in frgfld)                      {                          if (frg.FieldName.Equals(foreign.PKColumn' StringComparison.OrdinalIgnoreCase))                              continue;                            var k = ToEntityField(frg' frgPrefix);                          k.Flags = null;                          k.Title = Inflector.Inflector.Titleize(JU(j.Name' frg.FieldName.Substring(frgPrefix)));                          k.Ident = JI(j.Name' k.Ident);                          i = 0;                          ident = k.Ident;                          while (fieldByIdent.ContainsKey(ident))                              ident = k.Ident + ++i;                          k.Ident = ident;                          fieldByIdent[ident] = k;                            var atk = new List<string>();                          atk.Add("DisplayName(\"" + k.Title + "\")");                          k.Expression = "j" + j.Name + ".[" + k.Name + "]";                          atk.Add("Expression(\"" + k.Expression + "\")");                          k.Attributes = String.Join("' "' atk);                            if (f.TextualField == null && k.FieldType == "String")                              f.TextualField = k.Ident;                            j.Fields.Add(k);                      }                        model.Joins.Add(j);                  }                    model.Fields.Add(f);              }
Magic Number,Serenity.CodeGenerator,RowGenerator,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Generator\RowGenerator.cs,GenerateModel,The following statement contains a magic number: foreach (var field in fields)              {                  var f = ToEntityField(field' prefix);                    if (f.Ident == model.IdField)                      f.ColAttributes = "EditLink' DisplayName(\"Db.Shared.RecordId\")' AlignRight";                    int i = 0;                  string ident = f.Ident;                  while (fieldByIdent.ContainsKey(ident))                      ident = f.Ident + ++i;                  f.Ident = ident;                  fieldByIdent[ident] = f;                    if (f.Name == className && f.FieldType == "String")                  {                      model.NameField = f.Name;                      f.ColAttributes = f.ColAttributes ?? "EditLink";                  }                    var foreign = foreigns.Find((k) => k.FKColumn.Equals(field.FieldName' StringComparison.OrdinalIgnoreCase));                  if (foreign != null)                  {                      if (f.Title.EndsWith(" Id") && f.Title.Length > 3)                          f.Title = f.Title.SafeSubstring(0' f.Title.Length - 3);                        f.PKSchema = foreign.PKSchema;                      f.PKTable = foreign.PKTable;                      f.PKColumn = foreign.PKColumn;                        var frgfld = schemaProvider.GetFieldInfos(connection' foreign.PKSchema' foreign.PKTable).ToList();                      int frgPrefix = RowGenerator.DeterminePrefixLength(frgfld' z => z.FieldName);                      var j = new EntityJoin();                      j.Fields = new List<EntityField>();                      j.Name = GenerateVariableName(f.Name.Substring(prefix));                      if (j.Name.EndsWith("Id") || j.Name.EndsWith("ID"))                          j.Name = j.Name.Substring(0' j.Name.Length - 2);                      f.ForeignJoinAlias = j.Name;                      j.SourceField = f.Ident;                        frgfld = frgfld.Where(y => !removeForeignFields.Contains(y.FieldName)).ToList();                        foreach (var frg in frgfld)                      {                          if (frg.FieldName.Equals(foreign.PKColumn' StringComparison.OrdinalIgnoreCase))                              continue;                            var k = ToEntityField(frg' frgPrefix);                          k.Flags = null;                          k.Title = Inflector.Inflector.Titleize(JU(j.Name' frg.FieldName.Substring(frgPrefix)));                          k.Ident = JI(j.Name' k.Ident);                          i = 0;                          ident = k.Ident;                          while (fieldByIdent.ContainsKey(ident))                              ident = k.Ident + ++i;                          k.Ident = ident;                          fieldByIdent[ident] = k;                            var atk = new List<string>();                          atk.Add("DisplayName(\"" + k.Title + "\")");                          k.Expression = "j" + j.Name + ".[" + k.Name + "]";                          atk.Add("Expression(\"" + k.Expression + "\")");                          k.Attributes = String.Join("' "' atk);                            if (f.TextualField == null && k.FieldType == "String")                              f.TextualField = k.Ident;                            j.Fields.Add(k);                      }                        model.Joins.Add(j);                  }                    model.Fields.Add(f);              }
Magic Number,Serenity.CodeGenerator,RowGenerator,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Generator\RowGenerator.cs,GenerateModel,The following statement contains a magic number: foreach (var field in fields)              {                  var f = ToEntityField(field' prefix);                    if (f.Ident == model.IdField)                      f.ColAttributes = "EditLink' DisplayName(\"Db.Shared.RecordId\")' AlignRight";                    int i = 0;                  string ident = f.Ident;                  while (fieldByIdent.ContainsKey(ident))                      ident = f.Ident + ++i;                  f.Ident = ident;                  fieldByIdent[ident] = f;                    if (f.Name == className && f.FieldType == "String")                  {                      model.NameField = f.Name;                      f.ColAttributes = f.ColAttributes ?? "EditLink";                  }                    var foreign = foreigns.Find((k) => k.FKColumn.Equals(field.FieldName' StringComparison.OrdinalIgnoreCase));                  if (foreign != null)                  {                      if (f.Title.EndsWith(" Id") && f.Title.Length > 3)                          f.Title = f.Title.SafeSubstring(0' f.Title.Length - 3);                        f.PKSchema = foreign.PKSchema;                      f.PKTable = foreign.PKTable;                      f.PKColumn = foreign.PKColumn;                        var frgfld = schemaProvider.GetFieldInfos(connection' foreign.PKSchema' foreign.PKTable).ToList();                      int frgPrefix = RowGenerator.DeterminePrefixLength(frgfld' z => z.FieldName);                      var j = new EntityJoin();                      j.Fields = new List<EntityField>();                      j.Name = GenerateVariableName(f.Name.Substring(prefix));                      if (j.Name.EndsWith("Id") || j.Name.EndsWith("ID"))                          j.Name = j.Name.Substring(0' j.Name.Length - 2);                      f.ForeignJoinAlias = j.Name;                      j.SourceField = f.Ident;                        frgfld = frgfld.Where(y => !removeForeignFields.Contains(y.FieldName)).ToList();                        foreach (var frg in frgfld)                      {                          if (frg.FieldName.Equals(foreign.PKColumn' StringComparison.OrdinalIgnoreCase))                              continue;                            var k = ToEntityField(frg' frgPrefix);                          k.Flags = null;                          k.Title = Inflector.Inflector.Titleize(JU(j.Name' frg.FieldName.Substring(frgPrefix)));                          k.Ident = JI(j.Name' k.Ident);                          i = 0;                          ident = k.Ident;                          while (fieldByIdent.ContainsKey(ident))                              ident = k.Ident + ++i;                          k.Ident = ident;                          fieldByIdent[ident] = k;                            var atk = new List<string>();                          atk.Add("DisplayName(\"" + k.Title + "\")");                          k.Expression = "j" + j.Name + ".[" + k.Name + "]";                          atk.Add("Expression(\"" + k.Expression + "\")");                          k.Attributes = String.Join("' "' atk);                            if (f.TextualField == null && k.FieldType == "String")                              f.TextualField = k.Ident;                            j.Fields.Add(k);                      }                        model.Joins.Add(j);                  }                    model.Fields.Add(f);              }
Magic Number,Serenity.CodeGenerator,RowGenerator,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Generator\RowGenerator.cs,ClassNameFromTableName,The following statement contains a magic number: if (tableName.StartsWith("tb_"))                  tableName = tableName.Substring(3);              else if (tableName.StartsWith("aspnet_"))                  tableName = "AspNet" + tableName.Substring(7);
Magic Number,Serenity.CodeGenerator,RowGenerator,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Generator\RowGenerator.cs,ClassNameFromTableName,The following statement contains a magic number: if (tableName.StartsWith("tb_"))                  tableName = tableName.Substring(3);              else if (tableName.StartsWith("aspnet_"))                  tableName = "AspNet" + tableName.Substring(7);
Magic Number,Serenity.CodeGenerator,Templates,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Generator\Templates.cs,Render,The following statement contains a magic number: try              {                  var context = new TemplateContext();                  context.LoopLimit = 100000;                  context.RecursiveLimit = 1000;                  context.MemberRenamer = noRenamer;                  context.CurrentGlobal.Import(model'                      ScriptMemberImportFlags.Field | ScriptMemberImportFlags.Property'                      null' noRenamer);                  template.Render(context);                  return context.Output.ToString();              }              catch (InvalidOperationException ex)              {                  throw new Exception("Template Has Errors: " + Environment.NewLine +                      string.Join(Environment.NewLine' template.Messages.Select(x => x.ToString()))' ex);              }
Magic Number,Serenity.CodeGenerator,Templates,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Generator\Templates.cs,Render,The following statement contains a magic number: try              {                  var context = new TemplateContext();                  context.LoopLimit = 100000;                  context.RecursiveLimit = 1000;                  context.MemberRenamer = noRenamer;                  context.CurrentGlobal.Import(model'                      ScriptMemberImportFlags.Field | ScriptMemberImportFlags.Property'                      null' noRenamer);                  template.Render(context);                  return context.Output.ToString();              }              catch (InvalidOperationException ex)              {                  throw new Exception("Template Has Errors: " + Environment.NewLine +                      string.Join(Environment.NewLine' template.Messages.Select(x => x.ToString()))' ex);              }
Magic Number,Serenity.CodeGenerator,SchemaHelper,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Helpers\SchemaHelper.cs,SqlTypeNameToFieldType,The following statement contains a magic number: if (sqlTypeName == "varbinary")              {                  if (size == 0 || size > 256)                      return "Stream";                    dataType = "byte[]";                  return "ByteArray";              }              else if (sqlTypeName == "timestamp" || sqlTypeName == "rowversion")              {                  dataType = "byte[]";                  return "ByteArray";              }              else if (SqlTypeToFieldTypeMap.TryGetValue(sqlTypeName' out fieldType))                  return fieldType;              else                  return "Stream";
Magic Number,Serenity.CodeGenerator,CodeFileHelper,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\Helpers\CodeFileHelper.cs,StreamsContentsAreEqual,The following statement contains a magic number: const int bufferSize = 2048 * 2;
Magic Number,Serenity.CodeGenerator,CodeFileHelper,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\Helpers\CodeFileHelper.cs,StreamsContentsAreEqual,The following statement contains a magic number: const int bufferSize = 2048 * 2;
Magic Number,Serenity.CodeGenerator,CodeFileHelper,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\Helpers\CodeFileHelper.cs,ExecuteTFCommand,The following statement contains a magic number: Process.Start(TFPath' command + " \"" + file + "\"").WaitForExit(10000);
Magic Number,Serenity.CodeGenerator,CodeFileHelper,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\Helpers\CodeFileHelper.cs,SetupTFSIntegration,The following statement contains a magic number: if (!string.IsNullOrEmpty(tfPath) && File.Exists(tfPath))                  TFPath = tfPath;              else              {                  var pf86 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86);                  var pf64 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles);                    for (var i = 20; i > 10; i--)                  {                      var folder = @"Microsoft Visual Studio " + i + @".0\Common7\IDE\TF.exe";                      var f86 = Path.Combine(pf86' folder);                      if (File.Exists(f86))                      {                          TFPath = f86;                          return;                      }                      var f64 = Path.Combine(pf64' folder);                      if (File.Exists(f64))                      {                          TFPath = f64;                          return;                      }                  }                    // to give meaningfull error                  TFPath = tfPath.TrimToNull();              }
Magic Number,Serenity.CodeGenerator,CodeFileHelper,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\Helpers\CodeFileHelper.cs,SetupTFSIntegration,The following statement contains a magic number: if (!string.IsNullOrEmpty(tfPath) && File.Exists(tfPath))                  TFPath = tfPath;              else              {                  var pf86 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86);                  var pf64 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles);                    for (var i = 20; i > 10; i--)                  {                      var folder = @"Microsoft Visual Studio " + i + @".0\Common7\IDE\TF.exe";                      var f86 = Path.Combine(pf86' folder);                      if (File.Exists(f86))                      {                          TFPath = f86;                          return;                      }                      var f64 = Path.Combine(pf64' folder);                      if (File.Exists(f64))                      {                          TFPath = f64;                          return;                      }                  }                    // to give meaningfull error                  TFPath = tfPath.TrimToNull();              }
Magic Number,Serenity.CodeGenerator,CodeFileHelper,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\Helpers\CodeFileHelper.cs,ExecuteTSC,The following statement contains a magic number: Process.Start(psi).WaitForExit(10000);
Magic Number,Serenity.CodeGenerator,AddConnectionStringWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\AddConnectionStringWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Key = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ConnectionString = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.Provider = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 22 "..\..\..\AddConnectionStringWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Magic Number,Serenity.CodeGenerator,AddConnectionStringWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\AddConnectionStringWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Key = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ConnectionString = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.Provider = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 22 "..\..\..\AddConnectionStringWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Magic Number,Serenity.CodeGenerator,AddConnectionStringWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\AddConnectionStringWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Key = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ConnectionString = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.Provider = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 22 "..\..\..\AddConnectionStringWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: if (config.CustomSettings != null)              {                  foreach (var pair in config.CustomSettings.OrderBy(x => x.Key))                  {                      if (pair.Value is Boolean)                      {                          var binding = new Binding("CustomSettings[" + pair.Key + "]");                          binding.Source = this;                          var checkbox = new CheckBox();                          checkbox.SetBinding(CheckBox.IsCheckedProperty' binding);                          checkbox.Content = Inflector.Inflector.Titleize(pair.Key);                          checkbox.HorizontalAlignment = HorizontalAlignment.Left;                          checkbox.Margin = new Thickness(10' 0' 10' 0);                          checkbox.Click += (s' e) =>                          {                              CustomSettings[pair.Key] = checkbox.IsChecked;                              config.Save();                          };                          GenerationOptions.Children.Add(checkbox);                      }                      else                      {                          var dockPanel = new DockPanel();                          dockPanel.LastChildFill = true;                          dockPanel.Margin = new Thickness(5);                          var textBlock = new TextBlock();                          textBlock.Margin = new Thickness(0' 0' 4' 0);                          textBlock.Width = 200;                          textBlock.Text = Inflector.Inflector.Titleize(pair.Key);                          dockPanel.Children.Add(textBlock);                            var binding = new Binding("CustomSettings[" + pair.Key + "]");                          binding.Source = this;                          var textbox = new TextBox();                          textbox.SetBinding(TextBox.TextProperty' binding);                          textbox.TextChanged += (s' e) =>                          {                              CustomSettings[pair.Key] = textbox.Text;                              config.Save();                          };                          dockPanel.Children.Add(textbox);                          GenerationOptions.Children.Add(dockPanel);                          DockPanel.SetDock(dockPanel' Dock.Top);                          DockPanel.SetDock(textBlock' Dock.Left);                          dockPanel.HorizontalAlignment = HorizontalAlignment.Stretch;                      }                  }              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: if (config.CustomSettings != null)              {                  foreach (var pair in config.CustomSettings.OrderBy(x => x.Key))                  {                      if (pair.Value is Boolean)                      {                          var binding = new Binding("CustomSettings[" + pair.Key + "]");                          binding.Source = this;                          var checkbox = new CheckBox();                          checkbox.SetBinding(CheckBox.IsCheckedProperty' binding);                          checkbox.Content = Inflector.Inflector.Titleize(pair.Key);                          checkbox.HorizontalAlignment = HorizontalAlignment.Left;                          checkbox.Margin = new Thickness(10' 0' 10' 0);                          checkbox.Click += (s' e) =>                          {                              CustomSettings[pair.Key] = checkbox.IsChecked;                              config.Save();                          };                          GenerationOptions.Children.Add(checkbox);                      }                      else                      {                          var dockPanel = new DockPanel();                          dockPanel.LastChildFill = true;                          dockPanel.Margin = new Thickness(5);                          var textBlock = new TextBlock();                          textBlock.Margin = new Thickness(0' 0' 4' 0);                          textBlock.Width = 200;                          textBlock.Text = Inflector.Inflector.Titleize(pair.Key);                          dockPanel.Children.Add(textBlock);                            var binding = new Binding("CustomSettings[" + pair.Key + "]");                          binding.Source = this;                          var textbox = new TextBox();                          textbox.SetBinding(TextBox.TextProperty' binding);                          textbox.TextChanged += (s' e) =>                          {                              CustomSettings[pair.Key] = textbox.Text;                              config.Save();                          };                          dockPanel.Children.Add(textbox);                          GenerationOptions.Children.Add(dockPanel);                          DockPanel.SetDock(dockPanel' Dock.Top);                          DockPanel.SetDock(textBlock' Dock.Left);                          dockPanel.HorizontalAlignment = HorizontalAlignment.Stretch;                      }                  }              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: if (config.CustomSettings != null)              {                  foreach (var pair in config.CustomSettings.OrderBy(x => x.Key))                  {                      if (pair.Value is Boolean)                      {                          var binding = new Binding("CustomSettings[" + pair.Key + "]");                          binding.Source = this;                          var checkbox = new CheckBox();                          checkbox.SetBinding(CheckBox.IsCheckedProperty' binding);                          checkbox.Content = Inflector.Inflector.Titleize(pair.Key);                          checkbox.HorizontalAlignment = HorizontalAlignment.Left;                          checkbox.Margin = new Thickness(10' 0' 10' 0);                          checkbox.Click += (s' e) =>                          {                              CustomSettings[pair.Key] = checkbox.IsChecked;                              config.Save();                          };                          GenerationOptions.Children.Add(checkbox);                      }                      else                      {                          var dockPanel = new DockPanel();                          dockPanel.LastChildFill = true;                          dockPanel.Margin = new Thickness(5);                          var textBlock = new TextBlock();                          textBlock.Margin = new Thickness(0' 0' 4' 0);                          textBlock.Width = 200;                          textBlock.Text = Inflector.Inflector.Titleize(pair.Key);                          dockPanel.Children.Add(textBlock);                            var binding = new Binding("CustomSettings[" + pair.Key + "]");                          binding.Source = this;                          var textbox = new TextBox();                          textbox.SetBinding(TextBox.TextProperty' binding);                          textbox.TextChanged += (s' e) =>                          {                              CustomSettings[pair.Key] = textbox.Text;                              config.Save();                          };                          dockPanel.Children.Add(textbox);                          GenerationOptions.Children.Add(dockPanel);                          DockPanel.SetDock(dockPanel' Dock.Top);                          DockPanel.SetDock(textBlock' Dock.Left);                          dockPanel.HorizontalAlignment = HorizontalAlignment.Stretch;                      }                  }              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: if (config.CustomSettings != null)              {                  foreach (var pair in config.CustomSettings.OrderBy(x => x.Key))                  {                      if (pair.Value is Boolean)                      {                          var binding = new Binding("CustomSettings[" + pair.Key + "]");                          binding.Source = this;                          var checkbox = new CheckBox();                          checkbox.SetBinding(CheckBox.IsCheckedProperty' binding);                          checkbox.Content = Inflector.Inflector.Titleize(pair.Key);                          checkbox.HorizontalAlignment = HorizontalAlignment.Left;                          checkbox.Margin = new Thickness(10' 0' 10' 0);                          checkbox.Click += (s' e) =>                          {                              CustomSettings[pair.Key] = checkbox.IsChecked;                              config.Save();                          };                          GenerationOptions.Children.Add(checkbox);                      }                      else                      {                          var dockPanel = new DockPanel();                          dockPanel.LastChildFill = true;                          dockPanel.Margin = new Thickness(5);                          var textBlock = new TextBlock();                          textBlock.Margin = new Thickness(0' 0' 4' 0);                          textBlock.Width = 200;                          textBlock.Text = Inflector.Inflector.Titleize(pair.Key);                          dockPanel.Children.Add(textBlock);                            var binding = new Binding("CustomSettings[" + pair.Key + "]");                          binding.Source = this;                          var textbox = new TextBox();                          textbox.SetBinding(TextBox.TextProperty' binding);                          textbox.TextChanged += (s' e) =>                          {                              CustomSettings[pair.Key] = textbox.Text;                              config.Save();                          };                          dockPanel.Children.Add(textbox);                          GenerationOptions.Children.Add(dockPanel);                          DockPanel.SetDock(dockPanel' Dock.Top);                          DockPanel.SetDock(textBlock' Dock.Left);                          dockPanel.HorizontalAlignment = HorizontalAlignment.Stretch;                      }                  }              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: if (config.CustomSettings != null)              {                  foreach (var pair in config.CustomSettings.OrderBy(x => x.Key))                  {                      if (pair.Value is Boolean)                      {                          var binding = new Binding("CustomSettings[" + pair.Key + "]");                          binding.Source = this;                          var checkbox = new CheckBox();                          checkbox.SetBinding(CheckBox.IsCheckedProperty' binding);                          checkbox.Content = Inflector.Inflector.Titleize(pair.Key);                          checkbox.HorizontalAlignment = HorizontalAlignment.Left;                          checkbox.Margin = new Thickness(10' 0' 10' 0);                          checkbox.Click += (s' e) =>                          {                              CustomSettings[pair.Key] = checkbox.IsChecked;                              config.Save();                          };                          GenerationOptions.Children.Add(checkbox);                      }                      else                      {                          var dockPanel = new DockPanel();                          dockPanel.LastChildFill = true;                          dockPanel.Margin = new Thickness(5);                          var textBlock = new TextBlock();                          textBlock.Margin = new Thickness(0' 0' 4' 0);                          textBlock.Width = 200;                          textBlock.Text = Inflector.Inflector.Titleize(pair.Key);                          dockPanel.Children.Add(textBlock);                            var binding = new Binding("CustomSettings[" + pair.Key + "]");                          binding.Source = this;                          var textbox = new TextBox();                          textbox.SetBinding(TextBox.TextProperty' binding);                          textbox.TextChanged += (s' e) =>                          {                              CustomSettings[pair.Key] = textbox.Text;                              config.Save();                          };                          dockPanel.Children.Add(textbox);                          GenerationOptions.Children.Add(dockPanel);                          DockPanel.SetDock(dockPanel' Dock.Top);                          DockPanel.SetDock(textBlock' Dock.Left);                          dockPanel.HorizontalAlignment = HorizontalAlignment.Stretch;                      }                  }              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WebProjectFileBrowse);                            #line default              #line hidden              return;              case 2:              this.DeleteConnection = ((System.Windows.Controls.Button)(target));                            #line 22 "..\..\..\MainWindow.xaml"              this.DeleteConnection.Click += new System.Windows.RoutedEventHandler(this.DeleteConnection_Click);                            #line default              #line hidden              return;              case 3:              this.AddConnection = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\..\MainWindow.xaml"              this.AddConnection.Click += new System.Windows.RoutedEventHandler(this.AddConnection_Click);                            #line default              #line hidden              return;              case 4:              this.ConnectionsCombo = ((System.Windows.Controls.ComboBox)(target));                            #line 24 "..\..\..\MainWindow.xaml"              this.ConnectionsCombo.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ConnectionsCombo_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.TogglePopupButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 6:              this.GenerateCodeButton = ((System.Windows.Controls.Button)(target));                            #line 30 "..\..\..\MainWindow.xaml"              this.GenerateCodeButton.Click += new System.Windows.RoutedEventHandler(this.GenerateCodes_Click);                            #line default              #line hidden              return;              case 7:              this.TablesGrid = ((System.Windows.Controls.DataGrid)(target));                            #line 42 "..\..\..\MainWindow.xaml"              this.TablesGrid.KeyDown += new System.Windows.Input.KeyEventHandler(this.TablesGrid_KeyDown);                            #line default              #line hidden              return;              case 8:              this.ToggledPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 9:              this.GenerationOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 10:              this.btnTSCtPathBrowse = ((System.Windows.Controls.Button)(target));                            #line 126 "..\..\..\MainWindow.xaml"              this.btnTSCtPathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnTSCPathBrowse_Click);                            #line default              #line hidden              return;              case 11:              this.btnKDiff3PathBrowse = ((System.Windows.Controls.Button)(target));                            #line 132 "..\..\..\MainWindow.xaml"              this.btnKDiff3PathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnKDiff3PathBrowse_Click);                            #line default              #line hidden              return;              case 12:              this.CustomTemplatesBrowse = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\MainWindow.xaml"              this.CustomTemplatesBrowse.Click += new System.Windows.RoutedEventHandler(this.btnCustomTemplates_Click);                            #line default              #line hidden              return;              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WebProjectFileBrowse);                            #line default              #line hidden              return;              case 2:              this.DeleteConnection = ((System.Windows.Controls.Button)(target));                            #line 22 "..\..\..\MainWindow.xaml"              this.DeleteConnection.Click += new System.Windows.RoutedEventHandler(this.DeleteConnection_Click);                            #line default              #line hidden              return;              case 3:              this.AddConnection = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\..\MainWindow.xaml"              this.AddConnection.Click += new System.Windows.RoutedEventHandler(this.AddConnection_Click);                            #line default              #line hidden              return;              case 4:              this.ConnectionsCombo = ((System.Windows.Controls.ComboBox)(target));                            #line 24 "..\..\..\MainWindow.xaml"              this.ConnectionsCombo.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ConnectionsCombo_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.TogglePopupButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 6:              this.GenerateCodeButton = ((System.Windows.Controls.Button)(target));                            #line 30 "..\..\..\MainWindow.xaml"              this.GenerateCodeButton.Click += new System.Windows.RoutedEventHandler(this.GenerateCodes_Click);                            #line default              #line hidden              return;              case 7:              this.TablesGrid = ((System.Windows.Controls.DataGrid)(target));                            #line 42 "..\..\..\MainWindow.xaml"              this.TablesGrid.KeyDown += new System.Windows.Input.KeyEventHandler(this.TablesGrid_KeyDown);                            #line default              #line hidden              return;              case 8:              this.ToggledPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 9:              this.GenerationOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 10:              this.btnTSCtPathBrowse = ((System.Windows.Controls.Button)(target));                            #line 126 "..\..\..\MainWindow.xaml"              this.btnTSCtPathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnTSCPathBrowse_Click);                            #line default              #line hidden              return;              case 11:              this.btnKDiff3PathBrowse = ((System.Windows.Controls.Button)(target));                            #line 132 "..\..\..\MainWindow.xaml"              this.btnKDiff3PathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnKDiff3PathBrowse_Click);                            #line default              #line hidden              return;              case 12:              this.CustomTemplatesBrowse = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\MainWindow.xaml"              this.CustomTemplatesBrowse.Click += new System.Windows.RoutedEventHandler(this.btnCustomTemplates_Click);                            #line default              #line hidden              return;              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WebProjectFileBrowse);                            #line default              #line hidden              return;              case 2:              this.DeleteConnection = ((System.Windows.Controls.Button)(target));                            #line 22 "..\..\..\MainWindow.xaml"              this.DeleteConnection.Click += new System.Windows.RoutedEventHandler(this.DeleteConnection_Click);                            #line default              #line hidden              return;              case 3:              this.AddConnection = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\..\MainWindow.xaml"              this.AddConnection.Click += new System.Windows.RoutedEventHandler(this.AddConnection_Click);                            #line default              #line hidden              return;              case 4:              this.ConnectionsCombo = ((System.Windows.Controls.ComboBox)(target));                            #line 24 "..\..\..\MainWindow.xaml"              this.ConnectionsCombo.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ConnectionsCombo_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.TogglePopupButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 6:              this.GenerateCodeButton = ((System.Windows.Controls.Button)(target));                            #line 30 "..\..\..\MainWindow.xaml"              this.GenerateCodeButton.Click += new System.Windows.RoutedEventHandler(this.GenerateCodes_Click);                            #line default              #line hidden              return;              case 7:              this.TablesGrid = ((System.Windows.Controls.DataGrid)(target));                            #line 42 "..\..\..\MainWindow.xaml"              this.TablesGrid.KeyDown += new System.Windows.Input.KeyEventHandler(this.TablesGrid_KeyDown);                            #line default              #line hidden              return;              case 8:              this.ToggledPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 9:              this.GenerationOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 10:              this.btnTSCtPathBrowse = ((System.Windows.Controls.Button)(target));                            #line 126 "..\..\..\MainWindow.xaml"              this.btnTSCtPathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnTSCPathBrowse_Click);                            #line default              #line hidden              return;              case 11:              this.btnKDiff3PathBrowse = ((System.Windows.Controls.Button)(target));                            #line 132 "..\..\..\MainWindow.xaml"              this.btnKDiff3PathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnKDiff3PathBrowse_Click);                            #line default              #line hidden              return;              case 12:              this.CustomTemplatesBrowse = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\MainWindow.xaml"              this.CustomTemplatesBrowse.Click += new System.Windows.RoutedEventHandler(this.btnCustomTemplates_Click);                            #line default              #line hidden              return;              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WebProjectFileBrowse);                            #line default              #line hidden              return;              case 2:              this.DeleteConnection = ((System.Windows.Controls.Button)(target));                            #line 22 "..\..\..\MainWindow.xaml"              this.DeleteConnection.Click += new System.Windows.RoutedEventHandler(this.DeleteConnection_Click);                            #line default              #line hidden              return;              case 3:              this.AddConnection = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\..\MainWindow.xaml"              this.AddConnection.Click += new System.Windows.RoutedEventHandler(this.AddConnection_Click);                            #line default              #line hidden              return;              case 4:              this.ConnectionsCombo = ((System.Windows.Controls.ComboBox)(target));                            #line 24 "..\..\..\MainWindow.xaml"              this.ConnectionsCombo.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ConnectionsCombo_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.TogglePopupButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 6:              this.GenerateCodeButton = ((System.Windows.Controls.Button)(target));                            #line 30 "..\..\..\MainWindow.xaml"              this.GenerateCodeButton.Click += new System.Windows.RoutedEventHandler(this.GenerateCodes_Click);                            #line default              #line hidden              return;              case 7:              this.TablesGrid = ((System.Windows.Controls.DataGrid)(target));                            #line 42 "..\..\..\MainWindow.xaml"              this.TablesGrid.KeyDown += new System.Windows.Input.KeyEventHandler(this.TablesGrid_KeyDown);                            #line default              #line hidden              return;              case 8:              this.ToggledPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 9:              this.GenerationOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 10:              this.btnTSCtPathBrowse = ((System.Windows.Controls.Button)(target));                            #line 126 "..\..\..\MainWindow.xaml"              this.btnTSCtPathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnTSCPathBrowse_Click);                            #line default              #line hidden              return;              case 11:              this.btnKDiff3PathBrowse = ((System.Windows.Controls.Button)(target));                            #line 132 "..\..\..\MainWindow.xaml"              this.btnKDiff3PathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnKDiff3PathBrowse_Click);                            #line default              #line hidden              return;              case 12:              this.CustomTemplatesBrowse = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\MainWindow.xaml"              this.CustomTemplatesBrowse.Click += new System.Windows.RoutedEventHandler(this.btnCustomTemplates_Click);                            #line default              #line hidden              return;              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WebProjectFileBrowse);                            #line default              #line hidden              return;              case 2:              this.DeleteConnection = ((System.Windows.Controls.Button)(target));                            #line 22 "..\..\..\MainWindow.xaml"              this.DeleteConnection.Click += new System.Windows.RoutedEventHandler(this.DeleteConnection_Click);                            #line default              #line hidden              return;              case 3:              this.AddConnection = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\..\MainWindow.xaml"              this.AddConnection.Click += new System.Windows.RoutedEventHandler(this.AddConnection_Click);                            #line default              #line hidden              return;              case 4:              this.ConnectionsCombo = ((System.Windows.Controls.ComboBox)(target));                            #line 24 "..\..\..\MainWindow.xaml"              this.ConnectionsCombo.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ConnectionsCombo_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.TogglePopupButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 6:              this.GenerateCodeButton = ((System.Windows.Controls.Button)(target));                            #line 30 "..\..\..\MainWindow.xaml"              this.GenerateCodeButton.Click += new System.Windows.RoutedEventHandler(this.GenerateCodes_Click);                            #line default              #line hidden              return;              case 7:              this.TablesGrid = ((System.Windows.Controls.DataGrid)(target));                            #line 42 "..\..\..\MainWindow.xaml"              this.TablesGrid.KeyDown += new System.Windows.Input.KeyEventHandler(this.TablesGrid_KeyDown);                            #line default              #line hidden              return;              case 8:              this.ToggledPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 9:              this.GenerationOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 10:              this.btnTSCtPathBrowse = ((System.Windows.Controls.Button)(target));                            #line 126 "..\..\..\MainWindow.xaml"              this.btnTSCtPathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnTSCPathBrowse_Click);                            #line default              #line hidden              return;              case 11:              this.btnKDiff3PathBrowse = ((System.Windows.Controls.Button)(target));                            #line 132 "..\..\..\MainWindow.xaml"              this.btnKDiff3PathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnKDiff3PathBrowse_Click);                            #line default              #line hidden              return;              case 12:              this.CustomTemplatesBrowse = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\MainWindow.xaml"              this.CustomTemplatesBrowse.Click += new System.Windows.RoutedEventHandler(this.btnCustomTemplates_Click);                            #line default              #line hidden              return;              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WebProjectFileBrowse);                            #line default              #line hidden              return;              case 2:              this.DeleteConnection = ((System.Windows.Controls.Button)(target));                            #line 22 "..\..\..\MainWindow.xaml"              this.DeleteConnection.Click += new System.Windows.RoutedEventHandler(this.DeleteConnection_Click);                            #line default              #line hidden              return;              case 3:              this.AddConnection = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\..\MainWindow.xaml"              this.AddConnection.Click += new System.Windows.RoutedEventHandler(this.AddConnection_Click);                            #line default              #line hidden              return;              case 4:              this.ConnectionsCombo = ((System.Windows.Controls.ComboBox)(target));                            #line 24 "..\..\..\MainWindow.xaml"              this.ConnectionsCombo.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ConnectionsCombo_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.TogglePopupButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 6:              this.GenerateCodeButton = ((System.Windows.Controls.Button)(target));                            #line 30 "..\..\..\MainWindow.xaml"              this.GenerateCodeButton.Click += new System.Windows.RoutedEventHandler(this.GenerateCodes_Click);                            #line default              #line hidden              return;              case 7:              this.TablesGrid = ((System.Windows.Controls.DataGrid)(target));                            #line 42 "..\..\..\MainWindow.xaml"              this.TablesGrid.KeyDown += new System.Windows.Input.KeyEventHandler(this.TablesGrid_KeyDown);                            #line default              #line hidden              return;              case 8:              this.ToggledPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 9:              this.GenerationOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 10:              this.btnTSCtPathBrowse = ((System.Windows.Controls.Button)(target));                            #line 126 "..\..\..\MainWindow.xaml"              this.btnTSCtPathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnTSCPathBrowse_Click);                            #line default              #line hidden              return;              case 11:              this.btnKDiff3PathBrowse = ((System.Windows.Controls.Button)(target));                            #line 132 "..\..\..\MainWindow.xaml"              this.btnKDiff3PathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnKDiff3PathBrowse_Click);                            #line default              #line hidden              return;              case 12:              this.CustomTemplatesBrowse = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\MainWindow.xaml"              this.CustomTemplatesBrowse.Click += new System.Windows.RoutedEventHandler(this.btnCustomTemplates_Click);                            #line default              #line hidden              return;              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WebProjectFileBrowse);                            #line default              #line hidden              return;              case 2:              this.DeleteConnection = ((System.Windows.Controls.Button)(target));                            #line 22 "..\..\..\MainWindow.xaml"              this.DeleteConnection.Click += new System.Windows.RoutedEventHandler(this.DeleteConnection_Click);                            #line default              #line hidden              return;              case 3:              this.AddConnection = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\..\MainWindow.xaml"              this.AddConnection.Click += new System.Windows.RoutedEventHandler(this.AddConnection_Click);                            #line default              #line hidden              return;              case 4:              this.ConnectionsCombo = ((System.Windows.Controls.ComboBox)(target));                            #line 24 "..\..\..\MainWindow.xaml"              this.ConnectionsCombo.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ConnectionsCombo_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.TogglePopupButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 6:              this.GenerateCodeButton = ((System.Windows.Controls.Button)(target));                            #line 30 "..\..\..\MainWindow.xaml"              this.GenerateCodeButton.Click += new System.Windows.RoutedEventHandler(this.GenerateCodes_Click);                            #line default              #line hidden              return;              case 7:              this.TablesGrid = ((System.Windows.Controls.DataGrid)(target));                            #line 42 "..\..\..\MainWindow.xaml"              this.TablesGrid.KeyDown += new System.Windows.Input.KeyEventHandler(this.TablesGrid_KeyDown);                            #line default              #line hidden              return;              case 8:              this.ToggledPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 9:              this.GenerationOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 10:              this.btnTSCtPathBrowse = ((System.Windows.Controls.Button)(target));                            #line 126 "..\..\..\MainWindow.xaml"              this.btnTSCtPathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnTSCPathBrowse_Click);                            #line default              #line hidden              return;              case 11:              this.btnKDiff3PathBrowse = ((System.Windows.Controls.Button)(target));                            #line 132 "..\..\..\MainWindow.xaml"              this.btnKDiff3PathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnKDiff3PathBrowse_Click);                            #line default              #line hidden              return;              case 12:              this.CustomTemplatesBrowse = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\MainWindow.xaml"              this.CustomTemplatesBrowse.Click += new System.Windows.RoutedEventHandler(this.btnCustomTemplates_Click);                            #line default              #line hidden              return;              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WebProjectFileBrowse);                            #line default              #line hidden              return;              case 2:              this.DeleteConnection = ((System.Windows.Controls.Button)(target));                            #line 22 "..\..\..\MainWindow.xaml"              this.DeleteConnection.Click += new System.Windows.RoutedEventHandler(this.DeleteConnection_Click);                            #line default              #line hidden              return;              case 3:              this.AddConnection = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\..\MainWindow.xaml"              this.AddConnection.Click += new System.Windows.RoutedEventHandler(this.AddConnection_Click);                            #line default              #line hidden              return;              case 4:              this.ConnectionsCombo = ((System.Windows.Controls.ComboBox)(target));                            #line 24 "..\..\..\MainWindow.xaml"              this.ConnectionsCombo.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ConnectionsCombo_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.TogglePopupButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 6:              this.GenerateCodeButton = ((System.Windows.Controls.Button)(target));                            #line 30 "..\..\..\MainWindow.xaml"              this.GenerateCodeButton.Click += new System.Windows.RoutedEventHandler(this.GenerateCodes_Click);                            #line default              #line hidden              return;              case 7:              this.TablesGrid = ((System.Windows.Controls.DataGrid)(target));                            #line 42 "..\..\..\MainWindow.xaml"              this.TablesGrid.KeyDown += new System.Windows.Input.KeyEventHandler(this.TablesGrid_KeyDown);                            #line default              #line hidden              return;              case 8:              this.ToggledPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 9:              this.GenerationOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 10:              this.btnTSCtPathBrowse = ((System.Windows.Controls.Button)(target));                            #line 126 "..\..\..\MainWindow.xaml"              this.btnTSCtPathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnTSCPathBrowse_Click);                            #line default              #line hidden              return;              case 11:              this.btnKDiff3PathBrowse = ((System.Windows.Controls.Button)(target));                            #line 132 "..\..\..\MainWindow.xaml"              this.btnKDiff3PathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnKDiff3PathBrowse_Click);                            #line default              #line hidden              return;              case 12:              this.CustomTemplatesBrowse = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\MainWindow.xaml"              this.CustomTemplatesBrowse.Click += new System.Windows.RoutedEventHandler(this.btnCustomTemplates_Click);                            #line default              #line hidden              return;              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WebProjectFileBrowse);                            #line default              #line hidden              return;              case 2:              this.DeleteConnection = ((System.Windows.Controls.Button)(target));                            #line 22 "..\..\..\MainWindow.xaml"              this.DeleteConnection.Click += new System.Windows.RoutedEventHandler(this.DeleteConnection_Click);                            #line default              #line hidden              return;              case 3:              this.AddConnection = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\..\MainWindow.xaml"              this.AddConnection.Click += new System.Windows.RoutedEventHandler(this.AddConnection_Click);                            #line default              #line hidden              return;              case 4:              this.ConnectionsCombo = ((System.Windows.Controls.ComboBox)(target));                            #line 24 "..\..\..\MainWindow.xaml"              this.ConnectionsCombo.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ConnectionsCombo_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.TogglePopupButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 6:              this.GenerateCodeButton = ((System.Windows.Controls.Button)(target));                            #line 30 "..\..\..\MainWindow.xaml"              this.GenerateCodeButton.Click += new System.Windows.RoutedEventHandler(this.GenerateCodes_Click);                            #line default              #line hidden              return;              case 7:              this.TablesGrid = ((System.Windows.Controls.DataGrid)(target));                            #line 42 "..\..\..\MainWindow.xaml"              this.TablesGrid.KeyDown += new System.Windows.Input.KeyEventHandler(this.TablesGrid_KeyDown);                            #line default              #line hidden              return;              case 8:              this.ToggledPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 9:              this.GenerationOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 10:              this.btnTSCtPathBrowse = ((System.Windows.Controls.Button)(target));                            #line 126 "..\..\..\MainWindow.xaml"              this.btnTSCtPathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnTSCPathBrowse_Click);                            #line default              #line hidden              return;              case 11:              this.btnKDiff3PathBrowse = ((System.Windows.Controls.Button)(target));                            #line 132 "..\..\..\MainWindow.xaml"              this.btnKDiff3PathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnKDiff3PathBrowse_Click);                            #line default              #line hidden              return;              case 12:              this.CustomTemplatesBrowse = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\MainWindow.xaml"              this.CustomTemplatesBrowse.Click += new System.Windows.RoutedEventHandler(this.btnCustomTemplates_Click);                            #line default              #line hidden              return;              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WebProjectFileBrowse);                            #line default              #line hidden              return;              case 2:              this.DeleteConnection = ((System.Windows.Controls.Button)(target));                            #line 22 "..\..\..\MainWindow.xaml"              this.DeleteConnection.Click += new System.Windows.RoutedEventHandler(this.DeleteConnection_Click);                            #line default              #line hidden              return;              case 3:              this.AddConnection = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\..\MainWindow.xaml"              this.AddConnection.Click += new System.Windows.RoutedEventHandler(this.AddConnection_Click);                            #line default              #line hidden              return;              case 4:              this.ConnectionsCombo = ((System.Windows.Controls.ComboBox)(target));                            #line 24 "..\..\..\MainWindow.xaml"              this.ConnectionsCombo.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ConnectionsCombo_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.TogglePopupButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 6:              this.GenerateCodeButton = ((System.Windows.Controls.Button)(target));                            #line 30 "..\..\..\MainWindow.xaml"              this.GenerateCodeButton.Click += new System.Windows.RoutedEventHandler(this.GenerateCodes_Click);                            #line default              #line hidden              return;              case 7:              this.TablesGrid = ((System.Windows.Controls.DataGrid)(target));                            #line 42 "..\..\..\MainWindow.xaml"              this.TablesGrid.KeyDown += new System.Windows.Input.KeyEventHandler(this.TablesGrid_KeyDown);                            #line default              #line hidden              return;              case 8:              this.ToggledPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 9:              this.GenerationOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 10:              this.btnTSCtPathBrowse = ((System.Windows.Controls.Button)(target));                            #line 126 "..\..\..\MainWindow.xaml"              this.btnTSCtPathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnTSCPathBrowse_Click);                            #line default              #line hidden              return;              case 11:              this.btnKDiff3PathBrowse = ((System.Windows.Controls.Button)(target));                            #line 132 "..\..\..\MainWindow.xaml"              this.btnKDiff3PathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnKDiff3PathBrowse_Click);                            #line default              #line hidden              return;              case 12:              this.CustomTemplatesBrowse = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\MainWindow.xaml"              this.CustomTemplatesBrowse.Click += new System.Windows.RoutedEventHandler(this.btnCustomTemplates_Click);                            #line default              #line hidden              return;              }
Magic Number,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WebProjectFileBrowse);                            #line default              #line hidden              return;              case 2:              this.DeleteConnection = ((System.Windows.Controls.Button)(target));                            #line 22 "..\..\..\MainWindow.xaml"              this.DeleteConnection.Click += new System.Windows.RoutedEventHandler(this.DeleteConnection_Click);                            #line default              #line hidden              return;              case 3:              this.AddConnection = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\..\MainWindow.xaml"              this.AddConnection.Click += new System.Windows.RoutedEventHandler(this.AddConnection_Click);                            #line default              #line hidden              return;              case 4:              this.ConnectionsCombo = ((System.Windows.Controls.ComboBox)(target));                            #line 24 "..\..\..\MainWindow.xaml"              this.ConnectionsCombo.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ConnectionsCombo_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.TogglePopupButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 6:              this.GenerateCodeButton = ((System.Windows.Controls.Button)(target));                            #line 30 "..\..\..\MainWindow.xaml"              this.GenerateCodeButton.Click += new System.Windows.RoutedEventHandler(this.GenerateCodes_Click);                            #line default              #line hidden              return;              case 7:              this.TablesGrid = ((System.Windows.Controls.DataGrid)(target));                            #line 42 "..\..\..\MainWindow.xaml"              this.TablesGrid.KeyDown += new System.Windows.Input.KeyEventHandler(this.TablesGrid_KeyDown);                            #line default              #line hidden              return;              case 8:              this.ToggledPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 9:              this.GenerationOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 10:              this.btnTSCtPathBrowse = ((System.Windows.Controls.Button)(target));                            #line 126 "..\..\..\MainWindow.xaml"              this.btnTSCtPathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnTSCPathBrowse_Click);                            #line default              #line hidden              return;              case 11:              this.btnKDiff3PathBrowse = ((System.Windows.Controls.Button)(target));                            #line 132 "..\..\..\MainWindow.xaml"              this.btnKDiff3PathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnKDiff3PathBrowse_Click);                            #line default              #line hidden              return;              case 12:              this.CustomTemplatesBrowse = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\MainWindow.xaml"              this.CustomTemplatesBrowse.Click += new System.Windows.RoutedEventHandler(this.btnCustomTemplates_Click);                            #line default              #line hidden              return;              }
Magic Number,Inflector,Inflector,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Helpers\StringInflector.cs,Ordanize,The following statement contains a magic number: int nMod100 = number % 100;
Magic Number,Inflector,Inflector,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Helpers\StringInflector.cs,Ordanize,The following statement contains a magic number: if (nMod100 >= 11 && nMod100 <= 13)              {                  return numberString + "th";              }
Magic Number,Inflector,Inflector,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Helpers\StringInflector.cs,Ordanize,The following statement contains a magic number: if (nMod100 >= 11 && nMod100 <= 13)              {                  return numberString + "th";              }
Magic Number,Inflector,Inflector,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Helpers\StringInflector.cs,Ordanize,The following statement contains a magic number: switch (number % 10)              {                  case 1:                      return numberString + "st";                  case 2:                      return numberString + "nd";                  case 3:                      return numberString + "rd";                  default:                      return numberString + "th";              }
Magic Number,Inflector,Inflector,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Helpers\StringInflector.cs,Ordanize,The following statement contains a magic number: switch (number % 10)              {                  case 1:                      return numberString + "st";                  case 2:                      return numberString + "nd";                  case 3:                      return numberString + "rd";                  default:                      return numberString + "th";              }
Magic Number,Inflector,Inflector,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Helpers\StringInflector.cs,Ordanize,The following statement contains a magic number: switch (number % 10)              {                  case 1:                      return numberString + "st";                  case 2:                      return numberString + "nd";                  case 3:                      return numberString + "rd";                  default:                      return numberString + "th";              }
Missing Default,Serenity.CodeGenerator,RowGenerator,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator\Generator\RowGenerator.cs,FieldTypeToTS,The following switch statement is missing a default case: switch (ft)              {                  case "Boolean":                      return "boolean";                  case "String":                  case "DateTime":                  case "TimeSpan":                  case "Guid":                      return "string";                  case "Int32":                  case "Int16":                  case "Int64":                  case "Single":                  case "Double":                  case "Decimal":                      return "number";                  case "Stream":                  case "ByteArray":                      return "number[]";              }
Missing Default,Serenity.CodeGenerator,AddConnectionStringWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\AddConnectionStringWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Key = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ConnectionString = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.Provider = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 22 "..\..\..\AddConnectionStringWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Missing Default,Serenity.CodeGenerator,MainWindow,C:\repos\volkanceylan_serenity\Serenity.CodeGenerator.Net45\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WebProjectFileBrowse);                            #line default              #line hidden              return;              case 2:              this.DeleteConnection = ((System.Windows.Controls.Button)(target));                            #line 22 "..\..\..\MainWindow.xaml"              this.DeleteConnection.Click += new System.Windows.RoutedEventHandler(this.DeleteConnection_Click);                            #line default              #line hidden              return;              case 3:              this.AddConnection = ((System.Windows.Controls.Button)(target));                            #line 23 "..\..\..\MainWindow.xaml"              this.AddConnection.Click += new System.Windows.RoutedEventHandler(this.AddConnection_Click);                            #line default              #line hidden              return;              case 4:              this.ConnectionsCombo = ((System.Windows.Controls.ComboBox)(target));                            #line 24 "..\..\..\MainWindow.xaml"              this.ConnectionsCombo.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ConnectionsCombo_SelectionChanged);                            #line default              #line hidden              return;              case 5:              this.TogglePopupButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 6:              this.GenerateCodeButton = ((System.Windows.Controls.Button)(target));                            #line 30 "..\..\..\MainWindow.xaml"              this.GenerateCodeButton.Click += new System.Windows.RoutedEventHandler(this.GenerateCodes_Click);                            #line default              #line hidden              return;              case 7:              this.TablesGrid = ((System.Windows.Controls.DataGrid)(target));                            #line 42 "..\..\..\MainWindow.xaml"              this.TablesGrid.KeyDown += new System.Windows.Input.KeyEventHandler(this.TablesGrid_KeyDown);                            #line default              #line hidden              return;              case 8:              this.ToggledPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 9:              this.GenerationOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 10:              this.btnTSCtPathBrowse = ((System.Windows.Controls.Button)(target));                            #line 126 "..\..\..\MainWindow.xaml"              this.btnTSCtPathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnTSCPathBrowse_Click);                            #line default              #line hidden              return;              case 11:              this.btnKDiff3PathBrowse = ((System.Windows.Controls.Button)(target));                            #line 132 "..\..\..\MainWindow.xaml"              this.btnKDiff3PathBrowse.Click += new System.Windows.RoutedEventHandler(this.btnKDiff3PathBrowse_Click);                            #line default              #line hidden              return;              case 12:              this.CustomTemplatesBrowse = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\MainWindow.xaml"              this.CustomTemplatesBrowse.Click += new System.Windows.RoutedEventHandler(this.btnCustomTemplates_Click);                            #line default              #line hidden              return;              }
