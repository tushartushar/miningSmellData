Implementation smell,Namespace,Class,File,Method,Description
Long Method,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,RestoreSettings,The method has 169 lines of code.
Long Method,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The method has 114 lines of code.
Long Method,Serenity,PropertyItemHelper,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyGrid\PropertyItemHelper.cs,GetPropertyItemsFor,The method has 121 lines of code.
Complex Method,Serenity,DateYearEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateYearEditorOptions.cs,GetItems,Cyclomatic complexity of the method is 8
Complex Method,Serenity,UploadHelper,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\ImageUploadHelper.cs,CheckImageConstraints,Cyclomatic complexity of the method is 9
Complex Method,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,IsValidPhoneTurkey,Cyclomatic complexity of the method is 9
Complex Method,Serenity,FilteringTypeRegistry,C:\repos\volkanceylan_serenity\Serenity.Script.UI\FilterPanel\FilteringTypes\FilteringTypeRegistry.cs,Initialize,Cyclomatic complexity of the method is 9
Complex Method,Serenity,FilterPanel,C:\repos\volkanceylan_serenity\Serenity.Script.UI\FilterPanel\FilterPanel.OperatorSelect.cs,UpdateParens,Cyclomatic complexity of the method is 8
Complex Method,Serenity,FilterStore,C:\repos\volkanceylan_serenity\Serenity.Script.UI\FilterPanel\FilterStore.cs,GetCriteriaFor,Cyclomatic complexity of the method is 11
Complex Method,Serenity,ReflectionOptionsSetter,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\ReflectionOptionsSetter.cs,Set,Cyclomatic complexity of the method is 9
Complex Method,Serenity,FormatterTypeRegistry,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\FormatterTypeRegistry.cs,Initialize,Cyclomatic complexity of the method is 9
Complex Method,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,AddQuickFilter,Cyclomatic complexity of the method is 8
Complex Method,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,RestoreSettings,Cyclomatic complexity of the method is 28
Complex Method,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,GetCurrentSettings,Cyclomatic complexity of the method is 12
Complex Method,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,Cyclomatic complexity of the method is 12
Complex Method,Serenity,EntityDialog<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\EntityDialog\EntityDialog.cs,InitLocalizationGridCommon,Cyclomatic complexity of the method is 9
Complex Method,Serenity,EntityDialog<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\EntityDialog\EntityDialog.cs,UpdateInterface,Cyclomatic complexity of the method is 13
Complex Method,Serenity,EditorTypeRegistry,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyGrid\EditorTypeRegistry.cs,Initialize,Cyclomatic complexity of the method is 11
Complex Method,Serenity,EnumTypeRegistry,C:\repos\volkanceylan_serenity\Serenity.Script.UI\SlickGrid\Formatters\EnumTypeRegistry.cs,TryGet,Cyclomatic complexity of the method is 9
Complex Method,Serenity,EditorUtils,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Widget\EditorUtils.cs,LoadValue,Cyclomatic complexity of the method is 11
Complex Method,Serenity,PropertyItemHelper,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyGrid\PropertyItemHelper.cs,GetPropertyItemsFor,Cyclomatic complexity of the method is 26
Complex Method,Serenity,PropertyGrid,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyGrid\PropertyGrid.cs,CreateField,Cyclomatic complexity of the method is 16
Complex Method,Serenity,Toolbar,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Widget\Toolbar.cs,CreateButton,Cyclomatic complexity of the method is 9
Long Parameter List,Serenity,GridSelectAllButtonHelper,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\CheckTreeEditor.cs,Define,The method has 6 parameters. Parameters: getGrid' getId' getSelected' setSelected' text' onClick
Long Parameter List,Serenity,DateTimeEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateTimeEditor.cs,GetTimeOptions,The method has 5 parameters. Parameters: fromHour' fromMin' toHour' toMin' stepMins
Long Parameter List,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,Validate,The method has 6 parameters. Parameters: phone' isMultiple' isInternal' isMobile' allowInternational' allowExtension
Long Parameter List,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,ItemLink,The method has 5 parameters. Parameters: itemType' idField' text' cssClass' encode
Long Parameter List,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,AddEqualityFilter,The method has 6 parameters. Parameters: field' title' options' handler' element' init
Long Parameter List,Serenity,GridUtils,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\GridUtils.cs,AddToggleButton,The method has 5 parameters. Parameters: toolDiv' cssClass' callback' hint' initial
Long Parameter List,Serenity,GridUtils,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\GridUtils.cs,MakeOrderableWithUpdateRequest,The method has 5 parameters. Parameters: grid' getId' getDisplayOrder' service' getUpdateRequest
Long Parameter List,Serenity,SlickFormatting,C:\repos\volkanceylan_serenity\Serenity.Script.UI\SlickGrid\SlickFormatting.cs,ItemLinkText,The method has 5 parameters. Parameters: itemType' id' text' extraClass' encode
Long Parameter List,Serenity,SlickFormatting,C:\repos\volkanceylan_serenity\Serenity.Script.UI\SlickGrid\SlickFormatting.cs,ItemLink,The method has 5 parameters. Parameters: itemType' idField' getText' cssClass' encode
Long Parameter List,Serenity,SlickTreeHelper,C:\repos\volkanceylan_serenity\Serenity.Script.UI\SlickGrid\SlickTreeHelper.cs,ToggleClick,The method has 5 parameters. Parameters: e' row' cell' view' getId
Long Parameter List,Serenity,DialogExtensions,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Widget\DialogExtensions.cs,DialogResizable,The method has 5 parameters. Parameters: dialog' w' h' mw' mh
Long Statement,Serenity,CheckTreeEditor<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\CheckTreeEditor.cs,OnViewProcessData,The length of the statement  "            SlickTreeHelper.SetIndents(response.Entities' getId: x => x.Id' getParentId: x => x.ParentId' setCollapsed: GetInitialCollapse()); " is 130.
Long Statement,Serenity,ImageUploadEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\ImageUploadEditor.cs,Populate,The length of the statement  "                UploadHelper.PopulateFileSymbols(fileSymbols' new List<UploadedFile> { entity }' displayOriginalName' options.UrlPrefix); " is 121.
Long Statement,Serenity,HtmlContentEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\HtmlContentEditor.cs,GetConfig,The length of the statement  "                    new CKToolbarGroup { Name = "insert"' Groups = new string[] { "links"' "insert"' "blocks"' "bidi"' "list"' "indent" } }' " is 120.
Long Statement,Serenity,HtmlContentEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\HtmlContentEditor.cs,GetConfig,The length of the statement  "                    new CKToolbarGroup { Name = "forms"' Groups = new string[] { "forms"' "mode"' "document"' "doctools"' "others"' "about"' "tools" } }' " is 133.
Long Statement,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,Validate,The length of the statement  "            return Validate(value' options.Multiple' options.Internal' options.Mobile' options.AllowInternational' options.AllowExtension); " is 127.
Long Statement,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,FormatPhoneTurkey,The length of the statement  "            phone = "(" + phone.Substring(0' 3) + ") " + phone.Substring(3' 3) + " " + phone.Substring(6' 2) + " " + phone.Substring(8' 2); " is 127.
Long Statement,Serenity,BaseFiltering,C:\repos\volkanceylan_serenity\Serenity.Script.UI\FilterPanel\FilteringTypes\BaseFiltering.cs,CreateEditor,The length of the statement  "            throw new Exception(String.Format("Filtering '{0}' has no editor for '{1}' operator"' this.GetType().Name' Operator.Key)); " is 122.
Long Statement,Serenity,EmailEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\EmailEditor.cs,RegisterValidationMethods,The length of the statement  "                                @"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0'61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0'61}[a-zA-Z0-9])?)*$") " is 136.
Long Statement,Serenity,EmailEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\EmailEditor.cs,RegisterValidationMethods,The length of the statement  "                        return new Regex(@"^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$"' "i") " is 928.
Long Statement,Serenity,EmailEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\EmailEditor.cs,RegisterValidationMethods,The length of the statement  "                            new Regex(@"^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))$"' "i").Test(value); " is 491.
Long Statement,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The length of the statement  "                            val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator; " is 122.
Long Statement,Serenity,EntityGrid<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\EntityGrid.cs,GetEntityType,The length of the statement  "                // typeof(TEntity).Name'i kullanamayız' TEntity genelde Serializable ve Imported olduğundan dolayı tipi Object e karşılık geliyor! " is 130.
Long Statement,Serenity,EnumTypeRegistry,C:\repos\volkanceylan_serenity\Serenity.Script.UI\SlickGrid\Formatters\EnumTypeRegistry.cs,Get,The length of the statement  "                var message = String.Format("Can't find {0} enum type! If you have recently defined this enum type in server side code' " + " is 123.
Long Statement,Serenity,EnumTypeRegistry,C:\repos\volkanceylan_serenity\Serenity.Script.UI\SlickGrid\Formatters\EnumTypeRegistry.cs,Get,The length of the statement  "                    "make sure your project builds successfully and transform T4 templates. Also make sure that enum is under your project root namespace' " + " is 138.
Long Statement,Serenity,SlickFormatting,C:\repos\volkanceylan_serenity\Serenity.Script.UI\SlickGrid\SlickFormatting.cs,ItemLinkText,The length of the statement  "                " class=\"s-EditLink s-" + itemType.Replace("."' "-") + "Link" + (extraClass.IsEmptyOrNull() ? "" : (" " + extraClass)) + "\">" + " is 129.
Long Statement,Serenity,PropertyItemHelper,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyGrid\PropertyItemHelper.cs,GetPropertyItemsFor,The length of the statement  "                Type memberType = member.MemberType == MemberTypes.Property ? ((PropertyInfo)member).PropertyType : ((FieldInfo)member).FieldType; " is 130.
Long Statement,Serenity,Flexify,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Widget\Flexify.cs,StoreInitialSize,The length of the statement  "            element.As<dynamic>().bind("resize." + this.uniqueName' new Action<jQueryEvent' dynamic>(delegate(jQueryEvent e' dynamic ui) " is 124.
Long Statement,Serenity,Flexify,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Widget\Flexify.cs,StoreInitialSize,The length of the statement  "            element.As<dynamic>().bind("resizestop." + this.uniqueName' new Action<jQueryEvent' dynamic>(delegate(jQueryEvent e' dynamic ui) " is 128.
Long Statement,Serenity,WidgetExtensions,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Widget\WidgetExtensions.cs,GetWidget,The length of the statement  "                var message = String.Format("Element has no widget of type '{0}'! If you have recently changed editor type of a property in " +  " is 127.
Long Statement,Serenity,WidgetExtensions,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Widget\WidgetExtensions.cs,GetWidget,The length of the statement  "                    "a form class' or changed data type in row (which also changes editor type) your script side Form definition might be out of date. " +  " is 134.
Complex Conditional,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,PhoneEditor,The conditional expression  "val.Length > 0 && ((dynamic)input[0]).selectionEnd == val.Length &&                      ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                      val[val.Length - 1] >= '0' && val[val.Length - 1] <= '9' && !val.StartsWith("+") && val.IndexOf('/') < 0"  is complex.
Complex Conditional,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,RestoreSettings,The conditional expression  "settings.FilterItems != null &&                      flags.FilterItems != false &&                      filterBar != null &&                      filterBar.Store != null"  is complex.
Complex Conditional,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,RestoreSettings,The conditional expression  "settings.QuickFilters != null &&                      flags.QuickFilters != false &&                      this.quickFiltersDiv != null &&                      this.quickFiltersDiv.Length > 0"  is complex.
Complex Conditional,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The conditional expression  "IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator"  is complex.
Complex Conditional,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The conditional expression  "IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator"  is complex.
Complex Conditional,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The conditional expression  "val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1])"  is complex.
Complex Conditional,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The conditional expression  "val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3])"  is complex.
Complex Conditional,Serenity,LookupEditorBase<TOptions;TItem>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\LookupEditorBase.cs,LookupEditorBase,The conditional expression  "!options.AutoComplete && options.InplaceAdd && (                      options.InplaceAddPermission == null ||                       Q.Authorization.HasPermission(options.InplaceAddPermission))"  is complex.
Complex Conditional,Serenity,EntityDialog<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\EntityDialog\EntityDialog.cs,InitLocalizationGridCommon,The conditional expression  "langs == null || langs.Length == 0 || langs[0] == null || !Q.IsArray(langs[0])"  is complex.
Complex Conditional,Serenity,EntityDialog<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\EntityDialog\EntityDialog.cs,GetPendingLocalizations,The conditional expression  "langs == null || langs.Length == 0 || langs[0] == null || !Q.IsArray(langs[0])"  is complex.
Complex Conditional,Serenity,SlickHelper,C:\repos\volkanceylan_serenity\Serenity.Script.UI\SlickGrid\SlickColumnHelper.cs,SetDefaults,The conditional expression  "localTextPrefix != null &&                      col.Identifier != null &&                      (col.Title == null ||                       col.Title.StartsWith("~"))"  is complex.
Complex Conditional,Serenity,PropertyGrid,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyGrid\PropertyGrid.cs,UpdateInterface,The conditional expression  "item.Visible == false ||                      item.ReadPermission != null ||                      item.InsertPermission != null ||                      item.UpdatePermission != null ||                      item.HideOnInsert == true ||                      item.HideOnUpdate == true"  is complex.
Complex Conditional,Serenity,DialogExtensions,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Widget\DialogExtensions.cs,DialogCloseOnEnter,The conditional expression  "tagName == "button" ||                      tagName == "select" || // dropdown popup açık olabilir?                      tagName == "textarea" ||                      tagName == "input" && (string)e.Target.GetAttribute("type") == "button""  is complex.
Virtual Method Call from Constructor,Serenity,MultipleImageUploadEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\MultipleImageUploadEditor.cs,MultipleImageUploadEditor,The constructor "MultipleImageUploadEditor" calls a virtual method "GetToolButtons".
Virtual Method Call from Constructor,Serenity,MultipleImageUploadEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\MultipleImageUploadEditor.cs,MultipleImageUploadEditor,The constructor "MultipleImageUploadEditor" calls a virtual method "Populate".
Virtual Method Call from Constructor,Serenity,MultipleImageUploadEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\MultipleImageUploadEditor.cs,MultipleImageUploadEditor,The constructor "MultipleImageUploadEditor" calls a virtual method "UpdateInterface".
Virtual Method Call from Constructor,Serenity,MultipleImageUploadEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\MultipleImageUploadEditor.cs,MultipleImageUploadEditor,The constructor "MultipleImageUploadEditor" calls a virtual method "UpdateInterface".
Virtual Method Call from Constructor,Serenity,DateYearEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateYearEditorOptions.cs,DateYearEditor,The constructor "DateYearEditor" calls a virtual method "UpdateItems".
Virtual Method Call from Constructor,Serenity,ImageUploadEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\ImageUploadEditor.cs,ImageUploadEditor,The constructor "ImageUploadEditor" calls a virtual method "GetToolButtons".
Virtual Method Call from Constructor,Serenity,ImageUploadEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\ImageUploadEditor.cs,ImageUploadEditor,The constructor "ImageUploadEditor" calls a virtual method "Populate".
Virtual Method Call from Constructor,Serenity,ImageUploadEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\ImageUploadEditor.cs,ImageUploadEditor,The constructor "ImageUploadEditor" calls a virtual method "UpdateInterface".
Virtual Method Call from Constructor,Serenity,ImageUploadEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\ImageUploadEditor.cs,ImageUploadEditor,The constructor "ImageUploadEditor" calls a virtual method "UpdateInterface".
Virtual Method Call from Constructor,Serenity,HtmlContentEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\HtmlContentEditor.cs,HtmlContentEditor,The constructor "HtmlContentEditor" calls a virtual method "GetConfig".
Virtual Method Call from Constructor,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,DataGrid,The constructor "DataGrid" calls a virtual method "IsAsyncWidget".
Virtual Method Call from Constructor,Serenity,PropertyPanel<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyDialog\PropertyPanel.cs,PropertyPanel,The constructor "PropertyPanel" calls a virtual method "IsAsyncWidget".
Virtual Method Call from Constructor,Serenity,PropertyDialog<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyDialog\PropertyDialog.cs,PropertyDialog,The constructor "PropertyDialog" calls a virtual method "IsAsyncWidget".
Virtual Method Call from Constructor,Serenity,SelectEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\SelectEditor.cs,SelectEditor,The constructor "SelectEditor" calls a virtual method "UpdateItems".
Virtual Method Call from Constructor,Serenity,LookupEditorBase<TOptions;TItem>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\LookupEditorBase.cs,LookupEditorBase,The constructor "LookupEditorBase" calls a virtual method "IsAsyncWidget".
Virtual Method Call from Constructor,Serenity,EntityDialog<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\EntityDialog\EntityDialog.cs,EntityDialog,The constructor "EntityDialog" calls a virtual method "IsAsyncWidget".
Virtual Method Call from Constructor,Serenity,EnumEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\EnumEditor.cs,EnumEditor,The constructor "EnumEditor" calls a virtual method "UpdateItems".
Empty Catch Block,Serenity,FilterPanel,C:\repos\volkanceylan_serenity\Serenity.Script.UI\FilterPanel\FilterPanel.OperatorSelect.cs,OnRowOperatorChange,The method has an empty catch block.
Empty Catch Block,Serenity,GridUtils,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\GridUtils.cs,MakeOrderable,The method has an empty catch block.
Magic Number,Serenity,CheckTreeEditor<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\CheckTreeEditor.cs,GetColumns,The following statement contains a magic number: return new List<SlickColumn>              {                  new SlickColumn { Field = "text"' Title = "Kayıt"' Width = 80' Format =                       SlickFormatting.TreeToggle(() => self.view' x => x.Id' ctx =>                       {                          var cls = "check-box";                          var item = ((object)ctx.Item).As<TItem>();                            if (item.HideCheckBox)                              return GetItemText(ctx);                            bool threeState = IsThreeStateHierarchy();                          if (item.IsSelected)                          {                              if (threeState && !item.IsAllDescendantsSelected)                                  cls += " partial";                              else                                  cls += " checked";                          }                            return "<span class=\"" + cls + "\"></span>" +                               GetItemText(ctx);                      })                  }              };
Magic Number,Serenity,DateYearEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateYearEditorOptions.cs,GetItems,The following statement contains a magic number: if (opt.MinYear != null)              {                  opt.MinYear = opt.MinYear.ToString();                  if (opt.MinYear.StartsWith("-"))                      minYear -= int.Parse(opt.MinYear.Substr(1)' 10);                  else if (opt.MinYear.StartsWith("+"))                      minYear += int.Parse(opt.MinYear.Substr(1)' 10);                  else                      minYear = int.Parse(opt.MinYear' 10);              }
Magic Number,Serenity,DateYearEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateYearEditorOptions.cs,GetItems,The following statement contains a magic number: if (opt.MinYear != null)              {                  opt.MinYear = opt.MinYear.ToString();                  if (opt.MinYear.StartsWith("-"))                      minYear -= int.Parse(opt.MinYear.Substr(1)' 10);                  else if (opt.MinYear.StartsWith("+"))                      minYear += int.Parse(opt.MinYear.Substr(1)' 10);                  else                      minYear = int.Parse(opt.MinYear' 10);              }
Magic Number,Serenity,DateYearEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateYearEditorOptions.cs,GetItems,The following statement contains a magic number: if (opt.MinYear != null)              {                  opt.MinYear = opt.MinYear.ToString();                  if (opt.MinYear.StartsWith("-"))                      minYear -= int.Parse(opt.MinYear.Substr(1)' 10);                  else if (opt.MinYear.StartsWith("+"))                      minYear += int.Parse(opt.MinYear.Substr(1)' 10);                  else                      minYear = int.Parse(opt.MinYear' 10);              }
Magic Number,Serenity,DateYearEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateYearEditorOptions.cs,GetItems,The following statement contains a magic number: if (opt.MaxYear != null)              {                  opt.MaxYear = opt.MaxYear.ToString();                  if (opt.MaxYear.StartsWith("-"))                      maxYear -= int.Parse(opt.MaxYear.Substr(1)' 10);                  else if (opt.MaxYear.StartsWith("+"))                      maxYear += int.Parse(opt.MaxYear.Substr(1)' 10);                  else                      maxYear = int.Parse(opt.MaxYear' 10);              }
Magic Number,Serenity,DateYearEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateYearEditorOptions.cs,GetItems,The following statement contains a magic number: if (opt.MaxYear != null)              {                  opt.MaxYear = opt.MaxYear.ToString();                  if (opt.MaxYear.StartsWith("-"))                      maxYear -= int.Parse(opt.MaxYear.Substr(1)' 10);                  else if (opt.MaxYear.StartsWith("+"))                      maxYear += int.Parse(opt.MaxYear.Substr(1)' 10);                  else                      maxYear = int.Parse(opt.MaxYear' 10);              }
Magic Number,Serenity,DateYearEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateYearEditorOptions.cs,GetItems,The following statement contains a magic number: if (opt.MaxYear != null)              {                  opt.MaxYear = opt.MaxYear.ToString();                  if (opt.MaxYear.StartsWith("-"))                      maxYear -= int.Parse(opt.MaxYear.Substr(1)' 10);                  else if (opt.MaxYear.StartsWith("+"))                      maxYear += int.Parse(opt.MaxYear.Substr(1)' 10);                  else                      maxYear = int.Parse(opt.MaxYear' 10);              }
Magic Number,Serenity,UploadHelper,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\ImageUploadHelper.cs,AddUploadInput,The following statement contains a magic number: uploadInput.As<dynamic>().fileupload(new              {                  dataType = "json"'                  done = new Action<jQueryEvent' dynamic>((e' data) =>                  {                      var response = (UploadResponse)data.result;                      if (options.FileDone != null)                          options.FileDone(response' data.files[0].name' data);                  })'                  start = new Action(() =>                  {                      Q.BlockUI();                      if (options.Progress != null)                          options.Progress.Show();                  })'                  stop = new Action(() =>                  {                      Q.BlockUndo();                      if (options.Progress != null)                          options.Progress.Hide();                  })'                  progress = new Action<jQueryEvent' dynamic>((e' data) => {                      if (options.Progress != null)                      {                          double percent = (double)data.loaded / (double)data.total * 100;                          options.Progress.Children().CSS("width"' percent.ToString() + "%");                      }                  })              });
Magic Number,Serenity,UploadHelper,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\ImageUploadHelper.cs,FileSizeDisplay,The following statement contains a magic number: if (byteSize > 1000)              {                  byteSize = (Math.Round((Decimal)byteSize * 0.001m * 100m) * 0.01m);                  suffix = "MB";              }
Magic Number,Serenity,UploadHelper,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\ImageUploadHelper.cs,FileSizeDisplay,The following statement contains a magic number: if (sizeParts.Length > 1)              {                  value = sizeParts[0] + "." + sizeParts[1].Substring(0' 2);              }              else              {                  value = sizeParts[0];              }
Magic Number,Serenity,HtmlContentEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\HtmlContentEditor.cs,GetConfig,The following statement contains a magic number: return new CKEditorConfig              {                  CustomConfig = ""'                  Language = GetLanguage()'                  BodyClass = "s-HtmlContentBody"'                  On = new CKEditorEvents                  {                      InstanceReady = x => self.InstanceReady(x)'                      Change = x => {                          x.Editor.UpdateElement();                          self.Element.TriggerHandler("change");                      }                  }'                  ToolbarGroups = new CKToolbarGroup[]                   {                      new CKToolbarGroup { Name = "clipboard"' Groups = new string[] { "clipboard"' "undo" } }'                      new CKToolbarGroup { Name = "editing"' Groups = new string[] { "find"' "selection"' "spellchecker" } }'                      new CKToolbarGroup { Name = "insert"' Groups = new string[] { "links"' "insert"' "blocks"' "bidi"' "list"' "indent" } }'                      new CKToolbarGroup { Name = "forms"' Groups = new string[] { "forms"' "mode"' "document"' "doctools"' "others"' "about"' "tools" } }'                      new CKToolbarGroup { Name = "colors" }'                      new CKToolbarGroup { Name = "basicstyles"' Groups = new string[] { "basicstyles"' "cleanup" } }'                      new CKToolbarGroup { Name = "align" }'                      new CKToolbarGroup { Name = "styles" }                  }'                  RemoveButtons = "SpecialChar'Anchor'Subscript'Styles"'                  FormatTags = "p;h1;h2;h3;pre"'                  RemoveDialogTabs = "image:advanced;link:advanced"'                  ContentsCss = Q.ResolveUrl("~/Content/site/site.htmlcontent.css")'                  Entities = false'                  EntitiesLatin = false'                  EntitiesGreek = false'                  AutoUpdateElement = true'                  Height = (options.Rows == null || options.Rows == 0) ? null : ((options.Rows * 20) + "px")              };
Magic Number,Serenity,HtmlContentEditorOptions,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\HtmlContentEditor.cs,HtmlContentEditorOptions,The following statement contains a magic number: Cols = 80;
Magic Number,Serenity,HtmlContentEditorOptions,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\HtmlContentEditor.cs,HtmlContentEditorOptions,The following statement contains a magic number: Rows = 6;
Magic Number,Serenity,DateTimeEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateTimeEditor.cs,DateTimeEditor,The following statement contains a magic number: input.Bind("keyup." + this.uniqueName' e => {                  if (e.Which == 32 && !ReadOnly)                  {                      if (this.ValueAsDate != JsDate.Now)                      {                          this.ValueAsDate = JsDate.Now;                          this.element.Trigger("change");                      }                  }                  else                      DateEditor.DateInputKeyup(e);              });
Magic Number,Serenity,DateTimeEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateTimeEditor.cs,DateTimeEditor,The following statement contains a magic number: foreach (var t in GetTimeOptions(fromHour: options.StartHour ?? 0'                   toHour: options.EndHour ?? 23'                   stepMins: options.IntervalMinutes ?? 5))                  Q.AddOption(time' t' t);
Magic Number,Serenity,DateTimeEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateTimeEditor.cs,DateTimeEditor,The following statement contains a magic number: foreach (var t in GetTimeOptions(fromHour: options.StartHour ?? 0'                   toHour: options.EndHour ?? 23'                   stepMins: options.IntervalMinutes ?? 5))                  Q.AddOption(time' t' t);
Magic Number,Serenity,DateTimeEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateTimeEditor.cs,GetTimeOptions,The following statement contains a magic number: if (toHour >= 23)                  toHour = 23;
Magic Number,Serenity,DateTimeEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateTimeEditor.cs,GetTimeOptions,The following statement contains a magic number: if (toHour >= 23)                  toHour = 23;
Magic Number,Serenity,DateTimeEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateTimeEditor.cs,GetTimeOptions,The following statement contains a magic number: if (toMin >= 60)                  toMin = 59;
Magic Number,Serenity,DateTimeEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateTimeEditor.cs,GetTimeOptions,The following statement contains a magic number: if (toMin >= 60)                  toMin = 59;
Magic Number,Serenity,DateTimeEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateTimeEditor.cs,GetTimeOptions,The following statement contains a magic number: while (true)              {                  if (hour > toHour ||                      (hour == toHour && min > toMin))                      break;                    var t = (hour >= 10 ? "" : "0") + hour + ":" + (min >= 10 ? "" : "0") + min;                  list.Add(t);                    min += stepMins;                  if (min >= 60)                  {                      min -= 60;                      hour++;                  }              }
Magic Number,Serenity,DateTimeEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateTimeEditor.cs,GetTimeOptions,The following statement contains a magic number: while (true)              {                  if (hour > toHour ||                      (hour == toHour && min > toMin))                      break;                    var t = (hour >= 10 ? "" : "0") + hour + ":" + (min >= 10 ? "" : "0") + min;                  list.Add(t);                    min += stepMins;                  if (min >= 60)                  {                      min -= 60;                      hour++;                  }              }
Magic Number,Serenity,DateTimeEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateTimeEditor.cs,GetTimeOptions,The following statement contains a magic number: while (true)              {                  if (hour > toHour ||                      (hour == toHour && min > toMin))                      break;                    var t = (hour >= 10 ? "" : "0") + hour + ":" + (min >= 10 ? "" : "0") + min;                  list.Add(t);                    min += stepMins;                  if (min >= 60)                  {                      min -= 60;                      hour++;                  }              }
Magic Number,Serenity,DateTimeEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateTimeEditor.cs,GetTimeOptions,The following statement contains a magic number: while (true)              {                  if (hour > toHour ||                      (hour == toHour && min > toMin))                      break;                    var t = (hour >= 10 ? "" : "0") + hour + ":" + (min >= 10 ? "" : "0") + min;                  list.Add(t);                    min += stepMins;                  if (min >= 60)                  {                      min -= 60;                      hour++;                  }              }
Magic Number,Serenity,Select2AjaxEditor<TOptions;TItem>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\Select2AjaxEditor.cs,GetTypeDelay,The following statement contains a magic number: return 500;
Magic Number,Serenity,Select2AjaxEditor<TOptions;TItem>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\Select2AjaxEditor.cs,GetSelect2Options,The following statement contains a magic number: return new Select2Options              {                  MinimumResultsForSearch = 10'                  PlaceHolder = !emptyItemText.IsEmptyOrNull() ? emptyItemText : null'                  AllowClear = emptyItemText != null'                  Query = delegate(Select2QueryOptions query)                  {                      var request = new ListRequest                      {                          ContainsText = query.Term.TrimToNull()'                          Skip = (query.Page - 1) * pageSize'                          Take = pageSize + 1                      };                        if (queryTimeout != 0)                          Window.ClearTimeout(queryTimeout);                        queryTimeout = Window.SetTimeout(delegate                      {                          Query(request' response =>                          {                              query.Callback(new Select2Result                              {                                  Results = response.Entities.Slice(0' pageSize).As<List<TItem>>().Map(x => new Select2Item                                  {                                      Id = GetItemKey(x)'                                      Text = GetItemText(x)'                                      Source = x                                  })'                                  More = response.Entities.Count >= pageSize                              });                          });                      }' GetTypeDelay());                  }'                  InitSelection = delegate(jQueryObject element' Action<object> callback)                  {                      var val = element.GetValue();                      if (val.IsEmptyOrNull())                      {                          callback(null);                          return;                      }                        QueryByKey(val' result =>                      {                          callback(result == null ? null : new Select2Item                          {                              Id = GetItemKey(result)'                              Text = GetItemText(result)'                              Source = result                          });                      });                  }              };
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,PhoneEditor,The following statement contains a magic number: input.Bind("keyup"' delegate(jQueryEvent e)              {                  if (options.Internal)                      return;                    var val = (input.GetValue() ?? "");                  if (val.Length > 0 && ((dynamic)input[0]).selectionEnd == val.Length &&                      ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                      val[val.Length - 1] >= '0' && val[val.Length - 1] <= '9' && !val.StartsWith("+") && val.IndexOf('/') < 0)                  {                      if (Validate(val) == null)                          FormatValue();                      else                      {                          for (var i = 1; i <= 7; i++)                          {                              val += "9";                              if (Validate(val) == null)                              {                                  this.Value = val;                                  FormatValue();                                  val = this.Value;                                  for (var j = 1; j <= i; j++)                                  {                                      val = val.Trim();                                      val = val.Substr(0' val.Length - 1);                                  }                                  this.Value = val;                                  break;                              }                          }                      }                  }              });
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,PhoneEditor,The following statement contains a magic number: input.Bind("keyup"' delegate(jQueryEvent e)              {                  if (options.Internal)                      return;                    var val = (input.GetValue() ?? "");                  if (val.Length > 0 && ((dynamic)input[0]).selectionEnd == val.Length &&                      ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                      val[val.Length - 1] >= '0' && val[val.Length - 1] <= '9' && !val.StartsWith("+") && val.IndexOf('/') < 0)                  {                      if (Validate(val) == null)                          FormatValue();                      else                      {                          for (var i = 1; i <= 7; i++)                          {                              val += "9";                              if (Validate(val) == null)                              {                                  this.Value = val;                                  FormatValue();                                  val = this.Value;                                  for (var j = 1; j <= i; j++)                                  {                                      val = val.Trim();                                      val = val.Substr(0' val.Length - 1);                                  }                                  this.Value = val;                                  break;                              }                          }                      }                  }              });
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,PhoneEditor,The following statement contains a magic number: input.Bind("keyup"' delegate(jQueryEvent e)              {                  if (options.Internal)                      return;                    var val = (input.GetValue() ?? "");                  if (val.Length > 0 && ((dynamic)input[0]).selectionEnd == val.Length &&                      ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                      val[val.Length - 1] >= '0' && val[val.Length - 1] <= '9' && !val.StartsWith("+") && val.IndexOf('/') < 0)                  {                      if (Validate(val) == null)                          FormatValue();                      else                      {                          for (var i = 1; i <= 7; i++)                          {                              val += "9";                              if (Validate(val) == null)                              {                                  this.Value = val;                                  FormatValue();                                  val = this.Value;                                  for (var j = 1; j <= i; j++)                                  {                                      val = val.Trim();                                      val = val.Substr(0' val.Length - 1);                                  }                                  this.Value = val;                                  break;                              }                          }                      }                  }              });
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,PhoneEditor,The following statement contains a magic number: input.Bind("keyup"' delegate(jQueryEvent e)              {                  if (options.Internal)                      return;                    var val = (input.GetValue() ?? "");                  if (val.Length > 0 && ((dynamic)input[0]).selectionEnd == val.Length &&                      ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                      val[val.Length - 1] >= '0' && val[val.Length - 1] <= '9' && !val.StartsWith("+") && val.IndexOf('/') < 0)                  {                      if (Validate(val) == null)                          FormatValue();                      else                      {                          for (var i = 1; i <= 7; i++)                          {                              val += "9";                              if (Validate(val) == null)                              {                                  this.Value = val;                                  FormatValue();                                  val = this.Value;                                  for (var j = 1; j <= i; j++)                                  {                                      val = val.Trim();                                      val = val.Substr(0' val.Length - 1);                                  }                                  this.Value = val;                                  break;                              }                          }                      }                  }              });
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,PhoneEditor,The following statement contains a magic number: input.Bind("keyup"' delegate(jQueryEvent e)              {                  if (options.Internal)                      return;                    var val = (input.GetValue() ?? "");                  if (val.Length > 0 && ((dynamic)input[0]).selectionEnd == val.Length &&                      ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                      val[val.Length - 1] >= '0' && val[val.Length - 1] <= '9' && !val.StartsWith("+") && val.IndexOf('/') < 0)                  {                      if (Validate(val) == null)                          FormatValue();                      else                      {                          for (var i = 1; i <= 7; i++)                          {                              val += "9";                              if (Validate(val) == null)                              {                                  this.Value = val;                                  FormatValue();                                  val = this.Value;                                  for (var j = 1; j <= i; j++)                                  {                                      val = val.Trim();                                      val = val.Substr(0' val.Length - 1);                                  }                                  this.Value = val;                                  break;                              }                          }                      }                  }              });
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,GetFormattedValue,The following statement contains a magic number: Func<string' string> myFormatter = s =>              {                  if (string.IsNullOrEmpty(s) || options.Internal)                      return formatter(s);                    s = (s ?? "").Trim();                    if (s.StartsWith("+"))                      return s;                    if (s.IndexOf('/') > 0)                  {                      var p = s.Split(new char[] { '/' });                      if (p.Length != 2)                          return s;                        if (p[0].Length < 5)                          return s;                        int x;                      if (!int.TryParse(p[1]' out x))                          return s;                        return p[0] + " / " + x.ToString();                  }                    return formatter(s);              };
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,GetFormattedValue,The following statement contains a magic number: Func<string' string> myFormatter = s =>              {                  if (string.IsNullOrEmpty(s) || options.Internal)                      return formatter(s);                    s = (s ?? "").Trim();                    if (s.StartsWith("+"))                      return s;                    if (s.IndexOf('/') > 0)                  {                      var p = s.Split(new char[] { '/' });                      if (p.Length != 2)                          return s;                        if (p[0].Length < 5)                          return s;                        int x;                      if (!int.TryParse(p[1]' out x))                          return s;                        return p[0] + " / " + x.ToString();                  }                    return formatter(s);              };
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,FormatPhoneTurkey,The following statement contains a magic number: phone = "(" + phone.Substring(0' 3) + ") " + phone.Substring(3' 3) + " " + phone.Substring(6' 2) + " " + phone.Substring(8' 2);
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,FormatPhoneTurkey,The following statement contains a magic number: phone = "(" + phone.Substring(0' 3) + ") " + phone.Substring(3' 3) + " " + phone.Substring(6' 2) + " " + phone.Substring(8' 2);
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,FormatPhoneTurkey,The following statement contains a magic number: phone = "(" + phone.Substring(0' 3) + ") " + phone.Substring(3' 3) + " " + phone.Substring(6' 2) + " " + phone.Substring(8' 2);
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,FormatPhoneTurkey,The following statement contains a magic number: phone = "(" + phone.Substring(0' 3) + ") " + phone.Substring(3' 3) + " " + phone.Substring(6' 2) + " " + phone.Substring(8' 2);
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,FormatPhoneTurkey,The following statement contains a magic number: phone = "(" + phone.Substring(0' 3) + ") " + phone.Substring(3' 3) + " " + phone.Substring(6' 2) + " " + phone.Substring(8' 2);
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,FormatPhoneTurkey,The following statement contains a magic number: phone = "(" + phone.Substring(0' 3) + ") " + phone.Substring(3' 3) + " " + phone.Substring(6' 2) + " " + phone.Substring(8' 2);
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,FormatPhoneTurkey,The following statement contains a magic number: phone = "(" + phone.Substring(0' 3) + ") " + phone.Substring(3' 3) + " " + phone.Substring(6' 2) + " " + phone.Substring(8' 2);
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,Validate,The following statement contains a magic number: Func<string' bool> myValidateFunc = s =>              {                  if (!validateFunc(s))                  {                      if (isInternal)                          return false;                        s = (s ?? "").Trim();                        if (s.StartsWith("+"))                      {                          if (allowInternational &&                              s.Length > 7)                          {                              return true;                          }                            return false;                      }                        if (allowExtension &&                          s.IndexOf('/') > 0)                      {                          var p = s.Split(new char[] { '/' });                          if (p.Length != 2)                              return false;                            if (p[0].Length < 5 || !validateFunc(p[0]))                              return false;                            int x;                          if (!int.TryParse(p[1].Trim()' out x))                              return false;                            return true;                      }                        return false;                  }                    return true;              };
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,Validate,The following statement contains a magic number: Func<string' bool> myValidateFunc = s =>              {                  if (!validateFunc(s))                  {                      if (isInternal)                          return false;                        s = (s ?? "").Trim();                        if (s.StartsWith("+"))                      {                          if (allowInternational &&                              s.Length > 7)                          {                              return true;                          }                            return false;                      }                        if (allowExtension &&                          s.IndexOf('/') > 0)                      {                          var p = s.Split(new char[] { '/' });                          if (p.Length != 2)                              return false;                            if (p[0].Length < 5 || !validateFunc(p[0]))                              return false;                            int x;                          if (!int.TryParse(p[1].Trim()' out x))                              return false;                            return true;                      }                        return false;                  }                    return true;              };
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,Validate,The following statement contains a magic number: Func<string' bool> myValidateFunc = s =>              {                  if (!validateFunc(s))                  {                      if (isInternal)                          return false;                        s = (s ?? "").Trim();                        if (s.StartsWith("+"))                      {                          if (allowInternational &&                              s.Length > 7)                          {                              return true;                          }                            return false;                      }                        if (allowExtension &&                          s.IndexOf('/') > 0)                      {                          var p = s.Split(new char[] { '/' });                          if (p.Length != 2)                              return false;                            if (p[0].Length < 5 || !validateFunc(p[0]))                              return false;                            int x;                          if (!int.TryParse(p[1].Trim()' out x))                              return false;                            return true;                      }                        return false;                  }                    return true;              };
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,IsValidPhoneTurkey,The following statement contains a magic number: if (phone.Length < 10)                  return false;
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,IsValidPhoneTurkey,The following statement contains a magic number: if (phone.StartsWith("(") &&                  phone[4] == ')')              {                  phone = phone.Substring(1' 3) + phone.Substring(5);              }
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,IsValidPhoneTurkey,The following statement contains a magic number: if (phone.StartsWith("(") &&                  phone[4] == ')')              {                  phone = phone.Substring(1' 3) + phone.Substring(5);              }
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,IsValidPhoneTurkey,The following statement contains a magic number: if (phone.StartsWith("(") &&                  phone[4] == ')')              {                  phone = phone.Substring(1' 3) + phone.Substring(5);              }
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,IsValidPhoneTurkey,The following statement contains a magic number: if (phone.Length != 10)                  return false;
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,IsValidPhoneInternal,The following statement contains a magic number: if (phone.Length < 2 || phone.Length > 5)                  return false;
Magic Number,Serenity,PhoneEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\PhoneEditor.cs,IsValidPhoneInternal,The following statement contains a magic number: if (phone.Length < 2 || phone.Length > 5)                  return false;
Magic Number,Serenity,GridRowSelectionMixin,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\GridRowSelectionMixin.cs,CreateSelectColumn,The following statement contains a magic number: return new SlickColumn              {                  Title = "<span class=\"select-all-items check-box no-float " + ("") + "\"></span>"'                  ToolTip = " "'                  Field = "__select__"'                  Width = 26'                  MinWidth = 26'                  HeaderCssClass = "select-all-header"'                  Sortable = false'                  Format = ctx =>                  {                      var item = ctx.Item;                      var mixin = getMixin();                      if (mixin == null)                          return "";                      bool isChecked = mixin.include.ContainsKey(ctx.Item[mixin.idField].toString());                      return "<span class=\"select-item check-box no-float " + (isChecked ? " checked" : "") + "\"></span>";                  }              };
Magic Number,Serenity,GridRowSelectionMixin,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\GridRowSelectionMixin.cs,CreateSelectColumn,The following statement contains a magic number: return new SlickColumn              {                  Title = "<span class=\"select-all-items check-box no-float " + ("") + "\"></span>"'                  ToolTip = " "'                  Field = "__select__"'                  Width = 26'                  MinWidth = 26'                  HeaderCssClass = "select-all-header"'                  Sortable = false'                  Format = ctx =>                  {                      var item = ctx.Item;                      var mixin = getMixin();                      if (mixin == null)                          return "";                      bool isChecked = mixin.include.ContainsKey(ctx.Item[mixin.idField].toString());                      return "<span class=\"select-item check-box no-float " + (isChecked ? " checked" : "") + "\"></span>";                  }              };
Magic Number,Serenity,PropertyItemSlickConverter,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\PropertyItemSlickConverter.cs,ToSlickColumn,The following statement contains a magic number: result.Width = Script.IsValue(item.Width) ? item.Width : 80;
Magic Number,Serenity,PropertyItemSlickConverter,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\PropertyItemSlickConverter.cs,ToSlickColumn,The following statement contains a magic number: result.MinWidth = item.MinWidth ?? 30;
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,DataGrid,The following statement contains a magic number: DefaultRowHeight = 27;
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,DataGrid,The following statement contains a magic number: DefaultHeaderHeight = 30;
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,Layout,The following statement contains a magic number: if (this.element.HasClass("responsive-height"))              {                    if (this.slickGrid != null && this.slickGrid.GetOptions().AutoHeight)                  {                      this.slickContainer.Children(".slick-viewport").CSS("height"' "auto");                      this.slickGrid.SetOptions(new SlickGridOptions { AutoHeight = false });                  }                    if (this.slickGrid != null &&                      (this.slickContainer.GetHeight() < 200 ||                       (J(Window.Instance).GetWidth() < 768)))                  {                      this.element.CSS("height"' "auto");                      this.slickContainer.CSS("height"' "auto")                          .Children(".slick-viewport").CSS("height"' "auto");                      this.slickGrid.SetOptions(new SlickGridOptions { AutoHeight = true });                  }              }
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,Layout,The following statement contains a magic number: if (this.element.HasClass("responsive-height"))              {                    if (this.slickGrid != null && this.slickGrid.GetOptions().AutoHeight)                  {                      this.slickContainer.Children(".slick-viewport").CSS("height"' "auto");                      this.slickGrid.SetOptions(new SlickGridOptions { AutoHeight = false });                  }                    if (this.slickGrid != null &&                      (this.slickContainer.GetHeight() < 200 ||                       (J(Window.Instance).GetWidth() < 768)))                  {                      this.element.CSS("height"' "auto");                      this.slickContainer.CSS("height"' "auto")                          .Children(".slick-viewport").CSS("height"' "auto");                      this.slickGrid.SetOptions(new SlickGridOptions { AutoHeight = true });                  }              }
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,SetInitialSortOrder,The following statement contains a magic number: var mapped = sortBy.Map<SlickColumnSort>(s =>              {                  var x = new SlickColumnSort();                  if (s != null && s.ToLower().EndsWith(" desc"))                  {                      x.ColumnId = s.Substr(0' s.Length - 5).TrimEnd();                      x.SortAsc = false;                  }                  else                  {                      x.ColumnId = s;                      x.SortAsc = true;                  }                  return x;              });
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,CreatePager,The following statement contains a magic number: ((dynamic)pagerDiv).slickPager(new              {                  view = this.view.As<object>()'                  rowsPerPage = 20'                  rowsPerPageOptions = new int[] { 20' 100' 500' 2500 }              });
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,CreatePager,The following statement contains a magic number: ((dynamic)pagerDiv).slickPager(new              {                  view = this.view.As<object>()'                  rowsPerPage = 20'                  rowsPerPageOptions = new int[] { 20' 100' 500' 2500 }              });
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,CreatePager,The following statement contains a magic number: ((dynamic)pagerDiv).slickPager(new              {                  view = this.view.As<object>()'                  rowsPerPage = 20'                  rowsPerPageOptions = new int[] { 20' 100' 500' 2500 }              });
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,CreatePager,The following statement contains a magic number: ((dynamic)pagerDiv).slickPager(new              {                  view = this.view.As<object>()'                  rowsPerPage = 20'                  rowsPerPageOptions = new int[] { 20' 100' 500' 2500 }              });
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,CreatePager,The following statement contains a magic number: ((dynamic)pagerDiv).slickPager(new              {                  view = this.view.As<object>()'                  rowsPerPage = 20'                  rowsPerPageOptions = new int[] { 20' 100' 500' 2500 }              });
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,GetViewOptions,The following statement contains a magic number: if (!UsePager())                  opt.RowsPerPage = 0;              else if (element.HasClass("responsive-height"))                  opt.RowsPerPage = J(Window.Instance).GetWidth() < 768 ? 20 : 100;              else                  opt.RowsPerPage = 100;
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,GetViewOptions,The following statement contains a magic number: if (!UsePager())                  opt.RowsPerPage = 0;              else if (element.HasClass("responsive-height"))                  opt.RowsPerPage = J(Window.Instance).GetWidth() < 768 ? 20 : 100;              else                  opt.RowsPerPage = 100;
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,GetViewOptions,The following statement contains a magic number: if (!UsePager())                  opt.RowsPerPage = 0;              else if (element.HasClass("responsive-height"))                  opt.RowsPerPage = J(Window.Instance).GetWidth() < 768 ? 20 : 100;              else                  opt.RowsPerPage = 100;
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,GetViewOptions,The following statement contains a magic number: if (!UsePager())                  opt.RowsPerPage = 0;              else if (element.HasClass("responsive-height"))                  opt.RowsPerPage = J(Window.Instance).GetWidth() < 768 ? 20 : 100;              else                  opt.RowsPerPage = 100;
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,DateRangeQuickFilter,The following statement contains a magic number: return new QuickFilter<DateEditor' DateTimeEditorOptions>              {                  Field = field'                  Type = typeof(DateEditor)'                  Title = title'                  Element = e1 =>                  {                      end = Widget.Create<DateEditor>(element: e2 => e2.InsertAfter(e1));                      end.Element.Change(x => e1.TriggerHandler("change"));                      J("<span/>").AddClass("range-separator").Text("-").InsertAfter(e1);                  }'                  Handler = args =>                  {                      bool active1 = !Q.IsTrimmedEmpty(args.Widget.Value);                      bool active2 = !Q.IsTrimmedEmpty(end.Value);                        if (active1 && Q.IsFalse(Q.ParseDate(args.Widget.Element.GetValue())))                      {                          active1 = false;                          Q.NotifyWarning(Q.Text("Validation.DateInvalid"));                          args.Widget.Element.Value("");                      }                        if (active2 && Q.IsFalse(Q.ParseDate(end.Element.GetValue())))                      {                          active2 = false;                          Q.NotifyWarning(Q.Text("Validation.DateInvalid"));                          end.Element.Value("");                      }                        args.Active = active1 || active2;                        if (active1)                          args.Request.Criteria &= new Criteria(args.Field) >= args.Widget.Value;                        if (active2)                      {                          var next = new JsDate(end.ValueAsDate.ValueOf());                          next.SetDate(next.GetDate() + 1);                          args.Request.Criteria &= new Criteria(args.Field) < Q.FormatDate(next' "yyyy-MM-dd");                      }                  }'                  DisplayText = (w' l) =>                  {                      var v1 = EditorUtils.GetDisplayText(w);                      var v2 = EditorUtils.GetDisplayText(end);                        if (string.IsNullOrEmpty(v1) && string.IsNullOrEmpty(v2))                          return null;                        string text1 = l + " >= " + v1;                      string text2 = l + " <= " + v2;                        if (!string.IsNullOrEmpty(v1) && !string.IsNullOrEmpty(v2))                          return text1 + " " + (Q.TryGetText("Controls.FilterPanel.And") ?? "and") + " " + text2;                      else if (!string.IsNullOrEmpty(v1))                          return text1;                      else                          return text2;                  }'                  SaveState = w =>                  {                      return new object[] { EditorUtils.GetValue(w)' EditorUtils.GetValue(end) };                  }'                  LoadState = (w' state) =>                  {                      if (state == null || !Q.IsArray(state) || state.As<object[]>().Length != 2)                          state = new object[] { null' null };                        EditorUtils.SetValue(w' state.As<object[]>()[0]);                      EditorUtils.SetValue(end' state.As<object[]>()[1]);                  }              };
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,DateTimeRangeQuickFilter,The following statement contains a magic number: return new QuickFilter<DateTimeEditor' DateTimeEditorOptions>              {                  Field = field'                  Type = typeof(DateTimeEditor)'                  Title = title'                  Element = e1 =>                  {                      end = Widget.Create<DateTimeEditor>(element: e2 => e2.InsertAfter(e1));                      end.Element.Change(x => e1.TriggerHandler("change"));                      J("<span/>").AddClass("range-separator").Text("-").InsertAfter(e1);                  }'                  Init = i =>                  {                      i.Element.Parent().Find(".time").Change(x => i.Element.TriggerHandler("change"));                  }'                  Handler = args =>                  {                      bool active1 = !Q.IsTrimmedEmpty(args.Widget.Value);                      bool active2 = !Q.IsTrimmedEmpty(end.Value);                        if (active1 && Q.IsFalse(Q.ParseDate(args.Widget.Element.GetValue())))                      {                          active1 = false;                          Q.NotifyWarning(Q.Text("Validation.DateInvalid"));                          args.Widget.Element.Value("");                      }                        if (active2 && Q.IsFalse(Q.ParseDate(end.Element.GetValue())))                      {                          active2 = false;                          Q.NotifyWarning(Q.Text("Validation.DateInvalid"));                          end.Element.Value("");                      }                        args.Active = active1 || active2;                        if (active1)                          args.Request.Criteria &= new Criteria(args.Field) >= args.Widget.Value;                        if (active2)                          args.Request.Criteria &= new Criteria(args.Field) <= end.Value;                  }'                  DisplayText = (w' l) =>                  {                      var v1 = EditorUtils.GetDisplayText(w);                      var v2 = EditorUtils.GetDisplayText(end);                        if (string.IsNullOrEmpty(v1) && string.IsNullOrEmpty(v2))                          return null;                        string text1 = l + " >= " + v1;                      string text2 = l + " <= " + v2;                        if (!string.IsNullOrEmpty(v1) && !string.IsNullOrEmpty(v2))                          return text1 + " " + (Q.TryGetText("Controls.FilterPanel.And") ?? "and") + " " + text2;                      else if (!string.IsNullOrEmpty(v1))                          return text1;                      else                          return text2;                  }'                  SaveState = w =>                  {                      return new object[] { EditorUtils.GetValue(w)' EditorUtils.GetValue(end) };                  }'                  LoadState = (w' state) =>                  {                      if (state == null || !Q.IsArray(state) || state.As<object[]>().Length != 2)                          state = new object[] { null' null };                        EditorUtils.SetValue(w' state.As<object[]>()[0]);                      EditorUtils.SetValue(end' state.As<object[]>()[1]);                  }              };
Magic Number,Serenity,DataGrid<TItem;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\DataGrid.cs,GetPersistanceKey,The following statement contains a magic number: if (!string.IsNullOrEmpty(path))                  key += string.Join("/"' path.Substr(1).Split('/').Slice(0' 2)) + ":";
Magic Number,Serenity,GoogleMap,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Misc\GoogleMap.cs,GoogleMap,The following statement contains a magic number: map = new Map(container[0]' new MapOptions                        {                  Center = center'                  MapTypeId = options.MapTypeId ?? MapTypeId.roadmap'                  Zoom = options.Zoom ?? 15'                  ZoomControl = true              });
Magic Number,Serenity,PropertyPanel<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyDialog\PropertyPanel.cs,GetFormKey,The following statement contains a magic number: if (name.EndsWith("Panel"))                  name = name.Substr(0' name.Length - 6);              else if (name.EndsWith("Panel"))                  name = name.Substr(0' name.Length - 5);
Magic Number,Serenity,PropertyPanel<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyDialog\PropertyPanel.cs,GetFormKey,The following statement contains a magic number: if (name.EndsWith("Panel"))                  name = name.Substr(0' name.Length - 6);              else if (name.EndsWith("Panel"))                  name = name.Substr(0' name.Length - 5);
Magic Number,Serenity,PropertyDialog<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyDialog\PropertyDialog.cs,GetDialogOptions,The following statement contains a magic number: opt.Width = 400;
Magic Number,Serenity,PropertyDialog<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyDialog\PropertyDialog.cs,GetFormKey,The following statement contains a magic number: if (attributes.Length >= 1)                  return attributes[0].As<FormKeyAttribute>().Value;              else              {                  var name = this.GetType().FullName;                  var px = name.IndexOf(".");                  if (px >= 0)                      name = name.Substring(px + 1);                    if (name.EndsWith("Dialog"))                      name = name.Substr(0' name.Length - 6);                  else if (name.EndsWith("Panel"))                      name = name.Substr(0' name.Length - 5);                    return name;              }
Magic Number,Serenity,PropertyDialog<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyDialog\PropertyDialog.cs,GetFormKey,The following statement contains a magic number: if (attributes.Length >= 1)                  return attributes[0].As<FormKeyAttribute>().Value;              else              {                  var name = this.GetType().FullName;                  var px = name.IndexOf(".");                  if (px >= 0)                      name = name.Substring(px + 1);                    if (name.EndsWith("Dialog"))                      name = name.Substr(0' name.Length - 6);                  else if (name.EndsWith("Panel"))                      name = name.Substr(0' name.Length - 5);                    return name;              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateEditor,The following statement contains a magic number: input.Bind("keyup." + this.uniqueName' e => {                  if (e.Which == 32 && !ReadOnly)                  {                      if (this.ValueAsDate != JsDate.Today)                      {                          this.ValueAsDate = JsDate.Today;                          this.element.Trigger("change");                      }                  }                  else                      DateInputKeyup(e);              });
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputChange,The following statement contains a magic number: if (val.Length >= 6 && Int32.TryParse(val' out x))              {                  input.Value(val.Substr(0' 2) + Q.Culture.DateSeparator +                       val.Substr(2' 2) + Q.Culture.DateSeparator +                       val.Substr(4));              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputChange,The following statement contains a magic number: if (val.Length >= 6 && Int32.TryParse(val' out x))              {                  input.Value(val.Substr(0' 2) + Q.Culture.DateSeparator +                       val.Substr(2' 2) + Q.Culture.DateSeparator +                       val.Substr(4));              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputChange,The following statement contains a magic number: if (val.Length >= 6 && Int32.TryParse(val' out x))              {                  input.Value(val.Substr(0' 2) + Q.Culture.DateSeparator +                       val.Substr(2' 2) + Q.Culture.DateSeparator +                       val.Substr(4));              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputChange,The following statement contains a magic number: if (val.Length >= 6 && Int32.TryParse(val' out x))              {                  input.Value(val.Substr(0' 2) + Q.Culture.DateSeparator +                       val.Substr(2' 2) + Q.Culture.DateSeparator +                       val.Substr(4));              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputChange,The following statement contains a magic number: if (val.Length >= 6 && Int32.TryParse(val' out x))              {                  input.Value(val.Substr(0' 2) + Q.Culture.DateSeparator +                       val.Substr(2' 2) + Q.Culture.DateSeparator +                       val.Substr(4));              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputChange,The following statement contains a magic number: if (val.Length >= 5 && Q.ParseDate(val).As<dynamic>() != false)              {                  var d = Q.ParseDate(val);                  input.Value(Q.FormatDate(d));              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (e.Which == 47 || e.Which == 111) // slash key              {                  if (val.Length >= 2 &&                      val[val.Length - 1].ToString() == Q.Culture.DateSeparator &&                      val[val.Length - 2].ToString() == Q.Culture.DateSeparator)                  {                      input.Value(val.Substr(0' val.Length - 1));                      return;                  }                    if (val[val.Length - 1].ToString() != Q.Culture.DateSeparator)                      return;                    switch (val.Length)                  {                      case 2:                          if (IsNumeric(val[0]))                          {                              val = "0" + val;                              break;                          }                          else                              return;                      case 4:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              return;                      case 5:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val;                              break;                          }                          else if (IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator)                          {                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              break;                      default:                           return;                  }                    input.Value(val);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (e.Which == 47 || e.Which == 111) // slash key              {                  if (val.Length >= 2 &&                      val[val.Length - 1].ToString() == Q.Culture.DateSeparator &&                      val[val.Length - 2].ToString() == Q.Culture.DateSeparator)                  {                      input.Value(val.Substr(0' val.Length - 1));                      return;                  }                    if (val[val.Length - 1].ToString() != Q.Culture.DateSeparator)                      return;                    switch (val.Length)                  {                      case 2:                          if (IsNumeric(val[0]))                          {                              val = "0" + val;                              break;                          }                          else                              return;                      case 4:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              return;                      case 5:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val;                              break;                          }                          else if (IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator)                          {                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              break;                      default:                           return;                  }                    input.Value(val);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (e.Which == 47 || e.Which == 111) // slash key              {                  if (val.Length >= 2 &&                      val[val.Length - 1].ToString() == Q.Culture.DateSeparator &&                      val[val.Length - 2].ToString() == Q.Culture.DateSeparator)                  {                      input.Value(val.Substr(0' val.Length - 1));                      return;                  }                    if (val[val.Length - 1].ToString() != Q.Culture.DateSeparator)                      return;                    switch (val.Length)                  {                      case 2:                          if (IsNumeric(val[0]))                          {                              val = "0" + val;                              break;                          }                          else                              return;                      case 4:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              return;                      case 5:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val;                              break;                          }                          else if (IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator)                          {                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              break;                      default:                           return;                  }                    input.Value(val);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (e.Which == 47 || e.Which == 111) // slash key              {                  if (val.Length >= 2 &&                      val[val.Length - 1].ToString() == Q.Culture.DateSeparator &&                      val[val.Length - 2].ToString() == Q.Culture.DateSeparator)                  {                      input.Value(val.Substr(0' val.Length - 1));                      return;                  }                    if (val[val.Length - 1].ToString() != Q.Culture.DateSeparator)                      return;                    switch (val.Length)                  {                      case 2:                          if (IsNumeric(val[0]))                          {                              val = "0" + val;                              break;                          }                          else                              return;                      case 4:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              return;                      case 5:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val;                              break;                          }                          else if (IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator)                          {                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              break;                      default:                           return;                  }                    input.Value(val);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (e.Which == 47 || e.Which == 111) // slash key              {                  if (val.Length >= 2 &&                      val[val.Length - 1].ToString() == Q.Culture.DateSeparator &&                      val[val.Length - 2].ToString() == Q.Culture.DateSeparator)                  {                      input.Value(val.Substr(0' val.Length - 1));                      return;                  }                    if (val[val.Length - 1].ToString() != Q.Culture.DateSeparator)                      return;                    switch (val.Length)                  {                      case 2:                          if (IsNumeric(val[0]))                          {                              val = "0" + val;                              break;                          }                          else                              return;                      case 4:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              return;                      case 5:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val;                              break;                          }                          else if (IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator)                          {                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              break;                      default:                           return;                  }                    input.Value(val);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (e.Which == 47 || e.Which == 111) // slash key              {                  if (val.Length >= 2 &&                      val[val.Length - 1].ToString() == Q.Culture.DateSeparator &&                      val[val.Length - 2].ToString() == Q.Culture.DateSeparator)                  {                      input.Value(val.Substr(0' val.Length - 1));                      return;                  }                    if (val[val.Length - 1].ToString() != Q.Culture.DateSeparator)                      return;                    switch (val.Length)                  {                      case 2:                          if (IsNumeric(val[0]))                          {                              val = "0" + val;                              break;                          }                          else                              return;                      case 4:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              return;                      case 5:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val;                              break;                          }                          else if (IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator)                          {                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              break;                      default:                           return;                  }                    input.Value(val);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (e.Which == 47 || e.Which == 111) // slash key              {                  if (val.Length >= 2 &&                      val[val.Length - 1].ToString() == Q.Culture.DateSeparator &&                      val[val.Length - 2].ToString() == Q.Culture.DateSeparator)                  {                      input.Value(val.Substr(0' val.Length - 1));                      return;                  }                    if (val[val.Length - 1].ToString() != Q.Culture.DateSeparator)                      return;                    switch (val.Length)                  {                      case 2:                          if (IsNumeric(val[0]))                          {                              val = "0" + val;                              break;                          }                          else                              return;                      case 4:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              return;                      case 5:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val;                              break;                          }                          else if (IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator)                          {                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              break;                      default:                           return;                  }                    input.Value(val);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (e.Which == 47 || e.Which == 111) // slash key              {                  if (val.Length >= 2 &&                      val[val.Length - 1].ToString() == Q.Culture.DateSeparator &&                      val[val.Length - 2].ToString() == Q.Culture.DateSeparator)                  {                      input.Value(val.Substr(0' val.Length - 1));                      return;                  }                    if (val[val.Length - 1].ToString() != Q.Culture.DateSeparator)                      return;                    switch (val.Length)                  {                      case 2:                          if (IsNumeric(val[0]))                          {                              val = "0" + val;                              break;                          }                          else                              return;                      case 4:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              return;                      case 5:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val;                              break;                          }                          else if (IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator)                          {                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              break;                      default:                           return;                  }                    input.Value(val);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (e.Which == 47 || e.Which == 111) // slash key              {                  if (val.Length >= 2 &&                      val[val.Length - 1].ToString() == Q.Culture.DateSeparator &&                      val[val.Length - 2].ToString() == Q.Culture.DateSeparator)                  {                      input.Value(val.Substr(0' val.Length - 1));                      return;                  }                    if (val[val.Length - 1].ToString() != Q.Culture.DateSeparator)                      return;                    switch (val.Length)                  {                      case 2:                          if (IsNumeric(val[0]))                          {                              val = "0" + val;                              break;                          }                          else                              return;                      case 4:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              return;                      case 5:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val;                              break;                          }                          else if (IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator)                          {                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              break;                      default:                           return;                  }                    input.Value(val);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (e.Which == 47 || e.Which == 111) // slash key              {                  if (val.Length >= 2 &&                      val[val.Length - 1].ToString() == Q.Culture.DateSeparator &&                      val[val.Length - 2].ToString() == Q.Culture.DateSeparator)                  {                      input.Value(val.Substr(0' val.Length - 1));                      return;                  }                    if (val[val.Length - 1].ToString() != Q.Culture.DateSeparator)                      return;                    switch (val.Length)                  {                      case 2:                          if (IsNumeric(val[0]))                          {                              val = "0" + val;                              break;                          }                          else                              return;                      case 4:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              return;                      case 5:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val;                              break;                          }                          else if (IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator)                          {                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              break;                      default:                           return;                  }                    input.Value(val);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (e.Which == 47 || e.Which == 111) // slash key              {                  if (val.Length >= 2 &&                      val[val.Length - 1].ToString() == Q.Culture.DateSeparator &&                      val[val.Length - 2].ToString() == Q.Culture.DateSeparator)                  {                      input.Value(val.Substr(0' val.Length - 1));                      return;                  }                    if (val[val.Length - 1].ToString() != Q.Culture.DateSeparator)                      return;                    switch (val.Length)                  {                      case 2:                          if (IsNumeric(val[0]))                          {                              val = "0" + val;                              break;                          }                          else                              return;                      case 4:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              return;                      case 5:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val;                              break;                          }                          else if (IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator)                          {                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              break;                      default:                           return;                  }                    input.Value(val);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (e.Which == 47 || e.Which == 111) // slash key              {                  if (val.Length >= 2 &&                      val[val.Length - 1].ToString() == Q.Culture.DateSeparator &&                      val[val.Length - 2].ToString() == Q.Culture.DateSeparator)                  {                      input.Value(val.Substr(0' val.Length - 1));                      return;                  }                    if (val[val.Length - 1].ToString() != Q.Culture.DateSeparator)                      return;                    switch (val.Length)                  {                      case 2:                          if (IsNumeric(val[0]))                          {                              val = "0" + val;                              break;                          }                          else                              return;                      case 4:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              return;                      case 5:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val;                              break;                          }                          else if (IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator)                          {                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              break;                      default:                           return;                  }                    input.Value(val);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (e.Which == 47 || e.Which == 111) // slash key              {                  if (val.Length >= 2 &&                      val[val.Length - 1].ToString() == Q.Culture.DateSeparator &&                      val[val.Length - 2].ToString() == Q.Culture.DateSeparator)                  {                      input.Value(val.Substr(0' val.Length - 1));                      return;                  }                    if (val[val.Length - 1].ToString() != Q.Culture.DateSeparator)                      return;                    switch (val.Length)                  {                      case 2:                          if (IsNumeric(val[0]))                          {                              val = "0" + val;                              break;                          }                          else                              return;                      case 4:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              return;                      case 5:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val;                              break;                          }                          else if (IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator)                          {                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              break;                      default:                           return;                  }                    input.Value(val);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (e.Which == 47 || e.Which == 111) // slash key              {                  if (val.Length >= 2 &&                      val[val.Length - 1].ToString() == Q.Culture.DateSeparator &&                      val[val.Length - 2].ToString() == Q.Culture.DateSeparator)                  {                      input.Value(val.Substr(0' val.Length - 1));                      return;                  }                    if (val[val.Length - 1].ToString() != Q.Culture.DateSeparator)                      return;                    switch (val.Length)                  {                      case 2:                          if (IsNumeric(val[0]))                          {                              val = "0" + val;                              break;                          }                          else                              return;                      case 4:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              return;                      case 5:                          if (IsNumeric(val[0]) && IsNumeric(val[2]) && IsNumeric(val[3]) &&                              val[1].ToString() == Q.Culture.DateSeparator)                          {                              val = "0" + val;                              break;                          }                          else if (IsNumeric(val[0]) && IsNumeric(val[1]) && IsNumeric(val[3]) &&                              val[2].ToString() == Q.Culture.DateSeparator)                          {                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString() + Q.Culture.DateSeparator;                              break;                          }                          else                              break;                      default:                           return;                  }                    input.Value(val);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,DateEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\DateEditor.cs,DateInputKeyup,The following statement contains a magic number: if (val.Length < 6 && ((e.Which >= 48 && e.Which <= 57) || (e.Which >= 96 && e.Which <= 105)) &&                  IsNumeric(val[val.Length - 1]))              {                  switch (val.Length)                  {                      case 1:                          if (val[0] <= '3')                              return;                          val = "0" + val;                          break;                      case 2:                          if (!IsNumeric(val[0]))                              return;                          break;                      case 3:                          if (!IsNumeric(val[0]) ||                               val[1].ToString() != Q.Culture.DateSeparator ||                              val[2] <= '1')                              return;                            val = "0" + val[0].ToString() + Q.Culture.DateSeparator + "0" + val[2].ToString();                          break;                      case 4:                          if (val[1].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[2]))                                  return;                                val = "0" + val;                              break;                          }                          else if (val[2].ToString() == Q.Culture.DateSeparator)                          {                              if (!IsNumeric(val[0]) || !IsNumeric(val[1]) || val[3] <= '1')                                  return;                              val = val[0].ToString() + val[1].ToString() + Q.Culture.DateSeparator + "0" + val[3].ToString();                              break;                          }                          else                              return;                      case 5:                          if (val[2].ToString() != Q.Culture.DateSeparator ||                              !IsNumeric(val[0]) || !IsNumeric(val[1]) || !IsNumeric(val[3]))                              return;                          break;                      default:                          return;                  }                    input.Value(val + Q.Culture.DateSeparator);              }
Magic Number,Serenity,IntegerEditor,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\IntegerEditor.cs,IntegerEditor,The following statement contains a magic number: dynamic numericOptions = jQuery.ExtendObject(DecimalEditor.DefaultAutoNumericOptions()' new              {                  vMin = options.MinValue ?? 0'                  vMax = options.MaxValue ?? 2147483647'                  aSep = (string)null              });
Magic Number,Serenity,IntegerEditorOptions,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\IntegerEditor.cs,IntegerEditorOptions,The following statement contains a magic number: MaxValue = 2147483647;
Magic Number,Serenity,LookupEditorBase<TOptions;TItem>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Editor\LookupEditorBase.cs,GetLookupKey,The following statement contains a magic number: if (key.EndsWith("Editor"))                  key = key.Substring(0' key.Length - 6);
Magic Number,Serenity,EntityDialog<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\EntityDialog\EntityDialog.cs,GetEntityType,The following statement contains a magic number: if (entityType == null)              {                  var typeAttributes = this.GetType().GetCustomAttributes(typeof(EntityTypeAttribute)' true);                  if (typeAttributes.Length == 1)                  {                      entityType = typeAttributes[0].As<EntityTypeAttribute>().Value;                      return entityType;                  }                    // remove global namespace                  var name = this.GetType().FullName;                  var px = name.IndexOf(".");                  if (px >= 0)                      name = name.Substring(px + 1);                    // don't like this kind of convention' make it obsolete soon...                  if (name.EndsWith("Dialog") || name.EndsWith("Control"))                      name = name.Substr(0' name.Length - 6);                  else if (name.EndsWith("Panel"))                      name = name.Substr(0' name.Length - 5);                    entityType = name;              }
Magic Number,Serenity,EntityDialog<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\EntityDialog\EntityDialog.cs,GetEntityType,The following statement contains a magic number: if (entityType == null)              {                  var typeAttributes = this.GetType().GetCustomAttributes(typeof(EntityTypeAttribute)' true);                  if (typeAttributes.Length == 1)                  {                      entityType = typeAttributes[0].As<EntityTypeAttribute>().Value;                      return entityType;                  }                    // remove global namespace                  var name = this.GetType().FullName;                  var px = name.IndexOf(".");                  if (px >= 0)                      name = name.Substring(px + 1);                    // don't like this kind of convention' make it obsolete soon...                  if (name.EndsWith("Dialog") || name.EndsWith("Control"))                      name = name.Substr(0' name.Length - 6);                  else if (name.EndsWith("Panel"))                      name = name.Substr(0' name.Length - 5);                    entityType = name;              }
Magic Number,Serenity,QuickSearchInput,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\QuickSearchInput.cs,SearchNow,The following statement contains a magic number: Action<bool> done = delegate(bool results)              {                  this.element.RemoveClass(this.options.LoadingParentClass ?? "")                      .Parent().RemoveClass(this.options.LoadingParentClass ?? "");                    if (!results)                  {                      this.element.Closest(".s-QuickSearchBar").Find(".quick-search-icon i").As<dynamic>()                          .effect("shake"' new { distance = 2 });                  }              };
Magic Number,Serenity,QuickSearchInputOptions,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\QuickSearchInput.cs,QuickSearchInputOptions,The following statement contains a magic number: TypeDelay = 500;
Magic Number,Serenity,EntityGrid<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\EntityGrid.cs,EntityGrid,The following statement contains a magic number: this.element.AddClass("route-handler")                  .Bind2("handleroute." + this.UniqueName' (e' arg) =>              {                  if (arg.handled)                      return;                    if (arg.route == "new")                  {                      arg.handled = true;                      this.AddButtonClick();                      return;                  }                    var parts = arg.route.split("/");                  if (parts.length == 2 &&                      parts[0] == "edit")                  {                      arg.handled = true;                      this.EditItem(parts[1]);                      return;                  }                    if (parts.length == 2 &&                      parts[1] == "new")                  {                      arg.handled = true;                      this.EditItemOfType(parts[0]' null);                      return;                  }                    if (parts.length == 3 &&                      parts[1] == "edit")                  {                      arg.handled = true;                      this.EditItemOfType(parts[0]' parts[2]);                  }              });
Magic Number,Serenity,EntityGrid<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\EntityGrid.cs,EntityGrid,The following statement contains a magic number: this.element.AddClass("route-handler")                  .Bind2("handleroute." + this.UniqueName' (e' arg) =>              {                  if (arg.handled)                      return;                    if (arg.route == "new")                  {                      arg.handled = true;                      this.AddButtonClick();                      return;                  }                    var parts = arg.route.split("/");                  if (parts.length == 2 &&                      parts[0] == "edit")                  {                      arg.handled = true;                      this.EditItem(parts[1]);                      return;                  }                    if (parts.length == 2 &&                      parts[1] == "new")                  {                      arg.handled = true;                      this.EditItemOfType(parts[0]' null);                      return;                  }                    if (parts.length == 3 &&                      parts[1] == "edit")                  {                      arg.handled = true;                      this.EditItemOfType(parts[0]' parts[2]);                  }              });
Magic Number,Serenity,EntityGrid<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\EntityGrid.cs,EntityGrid,The following statement contains a magic number: this.element.AddClass("route-handler")                  .Bind2("handleroute." + this.UniqueName' (e' arg) =>              {                  if (arg.handled)                      return;                    if (arg.route == "new")                  {                      arg.handled = true;                      this.AddButtonClick();                      return;                  }                    var parts = arg.route.split("/");                  if (parts.length == 2 &&                      parts[0] == "edit")                  {                      arg.handled = true;                      this.EditItem(parts[1]);                      return;                  }                    if (parts.length == 2 &&                      parts[1] == "new")                  {                      arg.handled = true;                      this.EditItemOfType(parts[0]' null);                      return;                  }                    if (parts.length == 3 &&                      parts[1] == "edit")                  {                      arg.handled = true;                      this.EditItemOfType(parts[0]' parts[2]);                  }              });
Magic Number,Serenity,EntityGrid<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\EntityGrid.cs,EntityGrid,The following statement contains a magic number: this.element.AddClass("route-handler")                  .Bind2("handleroute." + this.UniqueName' (e' arg) =>              {                  if (arg.handled)                      return;                    if (arg.route == "new")                  {                      arg.handled = true;                      this.AddButtonClick();                      return;                  }                    var parts = arg.route.split("/");                  if (parts.length == 2 &&                      parts[0] == "edit")                  {                      arg.handled = true;                      this.EditItem(parts[1]);                      return;                  }                    if (parts.length == 2 &&                      parts[1] == "new")                  {                      arg.handled = true;                      this.EditItemOfType(parts[0]' null);                      return;                  }                    if (parts.length == 3 &&                      parts[1] == "edit")                  {                      arg.handled = true;                      this.EditItemOfType(parts[0]' parts[2]);                  }              });
Magic Number,Serenity,EntityGrid<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\EntityGrid.cs,GetEntityType,The following statement contains a magic number: if (entityType == null)              {                  var typeAttributes = this.GetType().GetCustomAttributes(typeof(EntityTypeAttribute)' true);                  if (typeAttributes.Length == 1)                  {                      entityType = typeAttributes[0].As<EntityTypeAttribute>().Value;                      return entityType;                  }                    // typeof(TEntity).Name'i kullanamayız' TEntity genelde Serializable ve Imported olduğundan dolayı tipi Object e karşılık geliyor!                    // remove global namespace                  var name = this.GetType().FullName;                  var px = name.IndexOf(".");                  if (px >= 0)                      name = name.Substring(px + 1);                    if (name.EndsWith("Grid"))                      name = name.Substr(0' name.Length - 4);                  else if (name.EndsWith("SubGrid"))                      name = name.Substr(0' name.Length - 7);                    entityType = name;              }
Magic Number,Serenity,EntityGrid<TEntity;TOptions>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Grid\EntityGrid.cs,GetEntityType,The following statement contains a magic number: if (entityType == null)              {                  var typeAttributes = this.GetType().GetCustomAttributes(typeof(EntityTypeAttribute)' true);                  if (typeAttributes.Length == 1)                  {                      entityType = typeAttributes[0].As<EntityTypeAttribute>().Value;                      return entityType;                  }                    // typeof(TEntity).Name'i kullanamayız' TEntity genelde Serializable ve Imported olduğundan dolayı tipi Object e karşılık geliyor!                    // remove global namespace                  var name = this.GetType().FullName;                  var px = name.IndexOf(".");                  if (px >= 0)                      name = name.Substring(px + 1);                    if (name.EndsWith("Grid"))                      name = name.Substr(0' name.Length - 4);                  else if (name.EndsWith("SubGrid"))                      name = name.Substr(0' name.Length - 7);                    entityType = name;              }
Magic Number,Serenity,MinuteFormatter,C:\repos\volkanceylan_serenity\Serenity.Script.UI\SlickGrid\Formatters\MinuteFormatter.cs,Format,The following statement contains a magic number: int hour = (int)Math.Floor(value.As<double>()/60);
Magic Number,Serenity,MinuteFormatter,C:\repos\volkanceylan_serenity\Serenity.Script.UI\SlickGrid\Formatters\MinuteFormatter.cs,Format,The following statement contains a magic number: int minute = value.As<Int32>() - (hour * 60);
Magic Number,Serenity,MinuteFormatter,C:\repos\volkanceylan_serenity\Serenity.Script.UI\SlickGrid\Formatters\MinuteFormatter.cs,Format,The following statement contains a magic number: if (hour < 10)                  hourStr = "0" + hour;              else                  hourStr = hour.ToString();
Magic Number,Serenity,MinuteFormatter,C:\repos\volkanceylan_serenity\Serenity.Script.UI\SlickGrid\Formatters\MinuteFormatter.cs,Format,The following statement contains a magic number: if (minute < 10)                  minuteStr = "0" + minute;              else                  minuteStr = minute.ToString();
Magic Number,Serenity,SlickFormatting,C:\repos\volkanceylan_serenity\Serenity.Script.UI\SlickGrid\SlickFormatting.cs,TreeToggle,The following statement contains a magic number: return delegate(SlickFormatterContext ctx)              {                  var text = formatter(ctx);                  var view = getView();                  var indent = (((object)ctx.Item._indent).As<Int32?>() ?? 0);                  var spacer = "<span class=\"s-TreeIndent\" style=\"width:" + (15 * (indent)) + "px\"></span>";                  var id = getId(((object)ctx.Item).As<TEntity>());                  var idx = view.GetIdxById(id);                  var next = view.GetItemByIdx(idx.Value + 1);                                    if (next != null)                  {                      var nextIndent = ((object)(((dynamic)next)._indent)).As<Int32?>() ?? 0;                      if (nextIndent > indent)                      {                          if (Q.IsTrue(ctx.Item._collapsed))                              return spacer + "<span class=\"s-TreeToggle s-TreeExpand\"></span>" + text;                          else                              return spacer + "<span class=\"s-TreeToggle s-TreeCollapse\"></span>" + text;                      }                  }                    return spacer + "<span class=\"s-TreeToggle\"></span>" + text;              };
Magic Number,Serenity,SlickTreeHelper,C:\repos\volkanceylan_serenity\Serenity.Script.UI\SlickGrid\SlickTreeHelper.cs,FilterCustom,The following statement contains a magic number: while (parent != null)              {                  if (((dynamic)parent)._collapsed)                      return false;                    parent = getParent(parent);                  if (loop++ > 1000)                      throw new InvalidOperationException("Possible infinite loop' check parents has no circular reference!");              }
Magic Number,Serenity,PropertyGrid,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyGrid\PropertyGrid.cs,CategoryLinkClick,The following statement contains a magic number: Action animate = delegate {                  title.FadeTo(100' 0.5' () => title.FadeTo(100' 1' () => { }));              };
Magic Number,Serenity,PropertyGrid,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyGrid\PropertyGrid.cs,CategoryLinkClick,The following statement contains a magic number: Action animate = delegate {                  title.FadeTo(100' 0.5' () => title.FadeTo(100' 1' () => { }));              };
Magic Number,Serenity,PropertyGrid,C:\repos\volkanceylan_serenity\Serenity.Script.UI\PropertyGrid\PropertyGrid.cs,CategoryLinkClick,The following statement contains a magic number: Action animate = delegate {                  title.FadeTo(100' 0.5' () => title.FadeTo(100' 1' () => { }));              };
Magic Number,Serenity.Reporting,ReportPage,C:\repos\volkanceylan_serenity\Serenity.Script.UI\Reporting\ReportPage.cs,UpdateMatchFlags,The following statement contains a magic number: if (visibles.Length <= 100)              {                  liList.Children("ul").Show();                  liList.AddClass("expanded");              }
Missing Default,Serenity,BaseEditorFiltering<TEditor>,C:\repos\volkanceylan_serenity\Serenity.Script.UI\FilterPanel\FilteringTypes\BaseEditorFiltering.cs,UseEditor,The following switch statement is missing a default case: switch (Operator.Key)              {                  case FilterOperators.EQ:                  case FilterOperators.NE:                  case FilterOperators.LT:                  case FilterOperators.LE:                  case FilterOperators.GT:                  case FilterOperators.GE:                      return true;              }
Missing Default,Serenity,DateTimeFiltering,C:\repos\volkanceylan_serenity\Serenity.Script.UI\FilterPanel\FilteringTypes\DateTimeFiltering.cs,GetCriteria,The following switch statement is missing a default case: switch (Operator.Key)              {                  case FilterOperators.EQ:                  case FilterOperators.NE:                  case FilterOperators.LT:                  case FilterOperators.LE:                  case FilterOperators.GT:                  case FilterOperators.GE:                      {                          var text = GetEditorText();                          displayText = DisplayText(Operator' text);                          var date = Q.ParseISODateTime((string)GetEditorValue());                          date = new JsDate(date.GetFullYear()' date.GetMonth()' date.GetDate());                          var next = new JsDate(date.GetFullYear()' date.GetMonth()' date.GetDate() + 1);                          var criteria = new Criteria(GetCriteriaField());                          var dateValue = new ValueCriteria(Q.FormatDate(date' "yyyy-MM-dd"));                          var nextValue = new ValueCriteria(Q.FormatDate(next' "yyyy-MM-dd"));                            switch (Operator.Key)                          {                              case FilterOperators.EQ:                                  return criteria >= dateValue & criteria < nextValue;                                case FilterOperators.NE:                                  return ~(criteria < dateValue | criteria > nextValue);                                case FilterOperators.LT:                                  return criteria < dateValue;                                case FilterOperators.LE:                                  return criteria < nextValue;                                case FilterOperators.GT:                                  return criteria >= nextValue;                                case FilterOperators.GE:                                  return criteria >= dateValue;                          }                      }                      break;              }
Missing Default,Serenity,DateTimeFiltering,C:\repos\volkanceylan_serenity\Serenity.Script.UI\FilterPanel\FilteringTypes\DateTimeFiltering.cs,GetCriteria,The following switch statement is missing a default case: switch (Operator.Key)                          {                              case FilterOperators.EQ:                                  return criteria >= dateValue & criteria < nextValue;                                case FilterOperators.NE:                                  return ~(criteria < dateValue | criteria > nextValue);                                case FilterOperators.LT:                                  return criteria < dateValue;                                case FilterOperators.LE:                                  return criteria < nextValue;                                case FilterOperators.GT:                                  return criteria >= nextValue;                                case FilterOperators.GE:                                  return criteria >= dateValue;                          }
Missing Default,Serenity,BaseFiltering,C:\repos\volkanceylan_serenity\Serenity.Script.UI\FilterPanel\FilteringTypes\BaseFiltering.cs,CreateEditor,The following switch statement is missing a default case: switch (Operator.Key)              {                  case FilterOperators.IsTrue:                  case FilterOperators.IsFalse:                  case FilterOperators.IsNull:                  case FilterOperators.IsNotNull:                      return;                    case FilterOperators.Contains:                  case FilterOperators.StartsWith:                  case FilterOperators.EQ:                  case FilterOperators.NE:                  case FilterOperators.LT:                  case FilterOperators.LE:                  case FilterOperators.GT:                  case FilterOperators.GE:                      Container.Html("<input type=\"text\"/>");                      return;              }
Missing Default,Serenity,BaseFiltering,C:\repos\volkanceylan_serenity\Serenity.Script.UI\FilterPanel\FilteringTypes\BaseFiltering.cs,GetCriteria,The following switch statement is missing a default case: switch (Operator.Key)              {                  case FilterOperators.IsTrue:                      displayText = DisplayText(Operator);                      return new Criteria(GetCriteriaField()) == new ValueCriteria(true);                    case FilterOperators.IsFalse:                      displayText = DisplayText(Operator);                      return new Criteria(GetCriteriaField()) == new ValueCriteria(false);                    case FilterOperators.IsNull:                      displayText = DisplayText(Operator);                      return new Criteria(GetCriteriaField()).IsNull();                    case FilterOperators.IsNotNull:                      displayText = DisplayText(Operator);                      return new Criteria(GetCriteriaField()).IsNotNull();                    case FilterOperators.Contains:                      text = GetEditorText();                      displayText = DisplayText(Operator' text);                      return new Criteria(GetCriteriaField()).Contains(text);                    case FilterOperators.StartsWith:                      text = GetEditorText();                      displayText = DisplayText(Operator' text);                      return new Criteria(GetCriteriaField()).StartsWith(text);                    case FilterOperators.EQ:                  case FilterOperators.NE:                  case FilterOperators.LT:                  case FilterOperators.LE:                  case FilterOperators.GT:                  case FilterOperators.GE:                      text = GetEditorText();                      displayText = DisplayText(Operator' text);                      return new BinaryCriteria(new Criteria(GetCriteriaField())' FilterOperators.ToCriteriaOperator[Operator.Key]'                           new ValueCriteria(GetEditorValue()));              }
Missing Default,Serenity,BaseFiltering,C:\repos\volkanceylan_serenity\Serenity.Script.UI\FilterPanel\FilteringTypes\BaseFiltering.cs,SaveState,The following switch statement is missing a default case: switch (Operator.Key)              {                  case FilterOperators.Contains:                  case FilterOperators.StartsWith:                  case FilterOperators.EQ:                  case FilterOperators.NE:                  case FilterOperators.LT:                  case FilterOperators.LE:                  case FilterOperators.GT:                  case FilterOperators.GE:                      var input = Container.Find(":input").First();                      return input.GetValue();              }
