Implementation smell,Namespace,Class,File,Method,Description
Long Method,Serenity.CodeGeneration.Test,ScribanTemplateTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\CodeGeneration\ScribanTemplate\ScribanTemplateTests.Row.cs,MyEntityModel,The method has 119 lines of code.
Long Method,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The method has 108 lines of code.
Long Statement,Serenity.CodeGeneration.Test,ScribanTemplateTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\CodeGeneration\ScribanTemplate\ScribanTemplateTests.Row.cs,MyEntityModel,The length of the statement  "                        Attributes = "DisplayName(\"My Foreign\")' Column(\"my_foreign_id\")' ForeignKey(\"my_foreign\"' \"foreign_id\")' LeftJoin(\"jMyForeign\")"' " is 140.
Long Statement,Serenity.CodeGeneration.Test,ScribanTemplateTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\CodeGeneration\ScribanTemplate\ScribanTemplateTests.Row.cs,MyEntityModel,The length of the statement  "                        Attributes = "DisplayName(\"My Another\")' Column(\"my_another_id\")' ForeignKey(\"my_another\"' \"another_id\")' LeftJoin(\"jMyAnother\")"' " is 140.
Long Statement,Serenity.CodeGeneration.Test,ScribanTemplateTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\CodeGeneration\ScribanTemplate\ScribanTemplateTests.Row.cs,Row_GeneratesExpectedCode,The length of the statement  "        [DisplayName(""My Foreign"")' Column(""my_foreign_id"")' ForeignKey(""my_foreign""' ""foreign_id"")' LeftJoin(""jMyForeign"")] " is 126.
Long Statement,Serenity.CodeGeneration.Test,ScribanTemplateTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\CodeGeneration\ScribanTemplate\ScribanTemplateTests.Row.cs,Row_GeneratesExpectedCode,The length of the statement  "        [DisplayName(""My Another"")' Column(""my_another_id"")' ForeignKey(""my_another""' ""another_id"")' LeftJoin(""jMyAnother"")] " is 126.
Long Statement,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_UsesRegisteredCacheProviders,The length of the statement  "                A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(5))) " is 120.
Long Statement,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_UsesRegisteredCacheProviders,The length of the statement  "                A.CallTo(() => distributedCache.Set("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(30))) " is 127.
Long Statement,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfLocalAndDistributedCachedItemDoesntExist,The length of the statement  "                A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(5))) " is 120.
Long Statement,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfLocalAndDistributedCachedItemDoesntExist,The length of the statement  "                A.CallTo(() => distributedCache.Set("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(30))) " is 127.
Long Statement,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetSingleExpirationOverload_WorksProperly,The length of the statement  "                A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(5))) " is 120.
Long Statement,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetSingleExpirationOverload_WorksProperly,The length of the statement  "                A.CallTo(() => distributedCache.Set("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(5))) " is 126.
Long Statement,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesRegisteredCacheProviders,The length of the statement  "                A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(5))) " is 120.
Long Statement,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesRegisteredCacheProviders,The length of the statement  "                A.CallTo(() => distributedCache.Set("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(30))) " is 127.
Long Statement,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesDeserializerProperly,The length of the statement  "                    "SomeGenerationKey"' () => "ValueIfNotFound"' x => "serialized:" + x' y => y == null ? null : y.Substring("serialized:".Length)); " is 129.
Long Statement,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_UsesRegisteredCacheProviders,The length of the statement  "                A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(5))) " is 120.
Long Statement,Serenity.Test.Data,JsonCriteriaConverterDeserializationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\JsonCriteriaConverterDeserializationTests.cs,JsonCriteriaConverter_DeserializesComplexCriteriaProperly,The length of the statement  "            var actual = JSON.Parse<BaseCriteria>("[[\"()\"'[[[\"a\"]'\">=\"'5]'\"and\"'[\"is not null\"'[\"c\"]]]]'\"or\"'[[[\"x\"]'\"in\"'[[4'5'6]]]'\"!=\"'7]]"); " is 152.
Long Statement,Serenity.Test.Data,JsonCriteriaConverterSerializationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\JsonCriteriaConverterSerializationTests.cs,JsonCriteriaConverter_SerializesComplexCriteriaProperly,The length of the statement  "            Assert.Equal("[[\"()\"'[[[\"a\"]'\">=\"'5]'\"and\"'[\"is not null\"'[\"c\"]]]]'\"or\"'[[[\"x\"]'\"in\"'[[4'5'6]]]'\"!=\"'7]]"' actual); " is 135.
Long Statement,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,SkipTakeWithOrderByUsesCorrectSyntaxForOracleDialect,The length of the statement  "                    "SELECT * FROM ( SELECT c' ROW_NUMBER() OVER (ORDER BY x) AS numberingofrow FROM t ORDER BY x) WHERE numberingofrow > 50 AND ROWNUM <= 20")' " is 140.
Long Statement,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,UnionClearsSkipTake,The length of the statement  "                    "(SELECT A' B FROM T ORDER BY C OFFSET 4 ROWS FETCH NEXT 3 ROWS ONLY) UNION SELECT U AS [A]' W AS [B] FROM X ORDER BY A")' " is 122.
Long Statement,Serenity.Testing,SeleniumTestBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Selenium\SeleniumTestBase.cs,SaveErrorScreenshot,The length of the statement  "            ss.SaveAsFile(errorFolder + @"\error_" + DateTime.Now.ToString("yyyyMMdd_HHmmss") + ".jpg"' ScreenshotImageFormat.Jpeg); " is 120.
Empty Catch Block,Serenity.Testing,IISProcessManager,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Selenium\SeleniumTestBase.cs,Dispose,The method has an empty catch block.
Magic Number,Serenity.CodeGeneration.Test,ScribanTemplateTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\CodeGeneration\ScribanTemplate\ScribanTemplateTests.Row.cs,MyEntityModel,The following statement contains a magic number: return new EntityModel              {                  RootNamespace = "MyApplication"'                  ConnectionKey = "MyConnection"'                  Module = "MyModule"'                  RowClassName = "MyRow"'                  RowBaseClass = "MyBaseRow"'                  FieldsBaseClass = "MyBaseRowFields"'                  Identity = "MyId"'                  ClassName = "MyTable"'                  NameField = "MyName"'                  Permission = "MyPermission"'                  Title = "My Table"'                  Tablename = "my_table"'                  AspNetCore = false'                  Fields = new List<EntityField>                  {                      new EntityField                      {                          Name = "my_id"'                          Ident = "MyId"'                          FieldType = "Int32"'                          IsValueType = true'                          DataType = "Int32"'                          Flags = "Identity"'                          Attributes = "DisplayName(\"My ID\")' Column(\"my_id\")' Identity"                      }'                      new EntityField                      {                          Name = "my_name"'                          Ident = "MyName"'                          FieldType = "String"'                          IsValueType = false'                          DataType = "String"'                          Size = 100'                          Flags = "Required"'                          Attributes = "DisplayName(\"My Name\")' Column(\"my_name\")"                      }'                      new EntityField                      {                          Name = "my_foreign_id"'                          Ident = "MyForeignId"'                          FieldType = "Int32"'                          IsValueType = true'                          DataType = "Int32"'                          ForeignJoinAlias = "jMyForeign"'                          Attributes = "DisplayName(\"My Foreign\")' Column(\"my_foreign_id\")' ForeignKey(\"my_foreign\"' \"foreign_id\")' LeftJoin(\"jMyForeign\")"'                      }'                      new EntityField                      {                          Name = "my_another_id"'                          Ident = "MyAnotherId"'                          FieldType = "Int32"'                          IsValueType = true'                          DataType = "Int32"'                          ForeignJoinAlias = "jMyAnother"'                          Attributes = "DisplayName(\"My Another\")' Column(\"my_another_id\")' ForeignKey(\"my_another\"' \"another_id\")' LeftJoin(\"jMyAnother\")"'                      }'                      new EntityField                      {                          Name = "my_notes"'                          Ident = "MyNotes"'                          FieldType = "String"'                          IsValueType = false'                          DataType = "String"'                          Size = 0'                          Flags = "Required"'                          Attributes = "DisplayName(\"My Notes\")' Column(\"my_notes\")"                      }                  }'                  Joins = new List<EntityJoin>                  {                      new EntityJoin                      {                          Name = "jMyForeign"'                          Fields = new List<EntityField>                          {                              new EntityField                              {                                  Name = "foreign_name"'                                  Ident = "MyForeignName"'                                  FieldType = "String"'                                  IsValueType = false'                                  DataType = "String"'                                  Attributes = "DisplayName(\"My Foreign Name\")' Expression(\"jMyForeign.foreign_name\")"                              }'                              new EntityField                              {                                  Name = "foreign_value1"'                                  Ident = "MyForeignValue1"'                                  FieldType = "Decimal"'                                  IsValueType = true'                                  DataType = "Decimal"'                                  Size = 13'                                  Scale = 4'                                  Attributes = "DisplayName(\"My Foreign Value 1\")' Expression(\"jMyForeign.foreign_value1\")"                              }                          }                      }'                      new EntityJoin                      {                          Name = "jMyAnother"'                          Fields = new List<EntityField>                          {                              new EntityField                              {                                  Name = "another_name"'                                  Ident = "MyAnotherName"'                                  FieldType = "String"'                                  IsValueType = false'                                  DataType = "String"'                                  Attributes = "DisplayName(\"My Another Name\")' Expression(\"jMyAnother.another_name\")"                              }                          }                      }                  }              };
Magic Number,Serenity.CodeGeneration.Test,ScribanTemplateTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\CodeGeneration\ScribanTemplate\ScribanTemplateTests.Row.cs,MyEntityModel,The following statement contains a magic number: return new EntityModel              {                  RootNamespace = "MyApplication"'                  ConnectionKey = "MyConnection"'                  Module = "MyModule"'                  RowClassName = "MyRow"'                  RowBaseClass = "MyBaseRow"'                  FieldsBaseClass = "MyBaseRowFields"'                  Identity = "MyId"'                  ClassName = "MyTable"'                  NameField = "MyName"'                  Permission = "MyPermission"'                  Title = "My Table"'                  Tablename = "my_table"'                  AspNetCore = false'                  Fields = new List<EntityField>                  {                      new EntityField                      {                          Name = "my_id"'                          Ident = "MyId"'                          FieldType = "Int32"'                          IsValueType = true'                          DataType = "Int32"'                          Flags = "Identity"'                          Attributes = "DisplayName(\"My ID\")' Column(\"my_id\")' Identity"                      }'                      new EntityField                      {                          Name = "my_name"'                          Ident = "MyName"'                          FieldType = "String"'                          IsValueType = false'                          DataType = "String"'                          Size = 100'                          Flags = "Required"'                          Attributes = "DisplayName(\"My Name\")' Column(\"my_name\")"                      }'                      new EntityField                      {                          Name = "my_foreign_id"'                          Ident = "MyForeignId"'                          FieldType = "Int32"'                          IsValueType = true'                          DataType = "Int32"'                          ForeignJoinAlias = "jMyForeign"'                          Attributes = "DisplayName(\"My Foreign\")' Column(\"my_foreign_id\")' ForeignKey(\"my_foreign\"' \"foreign_id\")' LeftJoin(\"jMyForeign\")"'                      }'                      new EntityField                      {                          Name = "my_another_id"'                          Ident = "MyAnotherId"'                          FieldType = "Int32"'                          IsValueType = true'                          DataType = "Int32"'                          ForeignJoinAlias = "jMyAnother"'                          Attributes = "DisplayName(\"My Another\")' Column(\"my_another_id\")' ForeignKey(\"my_another\"' \"another_id\")' LeftJoin(\"jMyAnother\")"'                      }'                      new EntityField                      {                          Name = "my_notes"'                          Ident = "MyNotes"'                          FieldType = "String"'                          IsValueType = false'                          DataType = "String"'                          Size = 0'                          Flags = "Required"'                          Attributes = "DisplayName(\"My Notes\")' Column(\"my_notes\")"                      }                  }'                  Joins = new List<EntityJoin>                  {                      new EntityJoin                      {                          Name = "jMyForeign"'                          Fields = new List<EntityField>                          {                              new EntityField                              {                                  Name = "foreign_name"'                                  Ident = "MyForeignName"'                                  FieldType = "String"'                                  IsValueType = false'                                  DataType = "String"'                                  Attributes = "DisplayName(\"My Foreign Name\")' Expression(\"jMyForeign.foreign_name\")"                              }'                              new EntityField                              {                                  Name = "foreign_value1"'                                  Ident = "MyForeignValue1"'                                  FieldType = "Decimal"'                                  IsValueType = true'                                  DataType = "Decimal"'                                  Size = 13'                                  Scale = 4'                                  Attributes = "DisplayName(\"My Foreign Value 1\")' Expression(\"jMyForeign.foreign_value1\")"                              }                          }                      }'                      new EntityJoin                      {                          Name = "jMyAnother"'                          Fields = new List<EntityField>                          {                              new EntityField                              {                                  Name = "another_name"'                                  Ident = "MyAnotherName"'                                  FieldType = "String"'                                  IsValueType = false'                                  DataType = "String"'                                  Attributes = "DisplayName(\"My Another Name\")' Expression(\"jMyAnother.another_name\")"                              }                          }                      }                  }              };
Magic Number,Serenity.CodeGeneration.Test,ScribanTemplateTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\CodeGeneration\ScribanTemplate\ScribanTemplateTests.Row.cs,MyEntityModel,The following statement contains a magic number: return new EntityModel              {                  RootNamespace = "MyApplication"'                  ConnectionKey = "MyConnection"'                  Module = "MyModule"'                  RowClassName = "MyRow"'                  RowBaseClass = "MyBaseRow"'                  FieldsBaseClass = "MyBaseRowFields"'                  Identity = "MyId"'                  ClassName = "MyTable"'                  NameField = "MyName"'                  Permission = "MyPermission"'                  Title = "My Table"'                  Tablename = "my_table"'                  AspNetCore = false'                  Fields = new List<EntityField>                  {                      new EntityField                      {                          Name = "my_id"'                          Ident = "MyId"'                          FieldType = "Int32"'                          IsValueType = true'                          DataType = "Int32"'                          Flags = "Identity"'                          Attributes = "DisplayName(\"My ID\")' Column(\"my_id\")' Identity"                      }'                      new EntityField                      {                          Name = "my_name"'                          Ident = "MyName"'                          FieldType = "String"'                          IsValueType = false'                          DataType = "String"'                          Size = 100'                          Flags = "Required"'                          Attributes = "DisplayName(\"My Name\")' Column(\"my_name\")"                      }'                      new EntityField                      {                          Name = "my_foreign_id"'                          Ident = "MyForeignId"'                          FieldType = "Int32"'                          IsValueType = true'                          DataType = "Int32"'                          ForeignJoinAlias = "jMyForeign"'                          Attributes = "DisplayName(\"My Foreign\")' Column(\"my_foreign_id\")' ForeignKey(\"my_foreign\"' \"foreign_id\")' LeftJoin(\"jMyForeign\")"'                      }'                      new EntityField                      {                          Name = "my_another_id"'                          Ident = "MyAnotherId"'                          FieldType = "Int32"'                          IsValueType = true'                          DataType = "Int32"'                          ForeignJoinAlias = "jMyAnother"'                          Attributes = "DisplayName(\"My Another\")' Column(\"my_another_id\")' ForeignKey(\"my_another\"' \"another_id\")' LeftJoin(\"jMyAnother\")"'                      }'                      new EntityField                      {                          Name = "my_notes"'                          Ident = "MyNotes"'                          FieldType = "String"'                          IsValueType = false'                          DataType = "String"'                          Size = 0'                          Flags = "Required"'                          Attributes = "DisplayName(\"My Notes\")' Column(\"my_notes\")"                      }                  }'                  Joins = new List<EntityJoin>                  {                      new EntityJoin                      {                          Name = "jMyForeign"'                          Fields = new List<EntityField>                          {                              new EntityField                              {                                  Name = "foreign_name"'                                  Ident = "MyForeignName"'                                  FieldType = "String"'                                  IsValueType = false'                                  DataType = "String"'                                  Attributes = "DisplayName(\"My Foreign Name\")' Expression(\"jMyForeign.foreign_name\")"                              }'                              new EntityField                              {                                  Name = "foreign_value1"'                                  Ident = "MyForeignValue1"'                                  FieldType = "Decimal"'                                  IsValueType = true'                                  DataType = "Decimal"'                                  Size = 13'                                  Scale = 4'                                  Attributes = "DisplayName(\"My Foreign Value 1\")' Expression(\"jMyForeign.foreign_value1\")"                              }                          }                      }'                      new EntityJoin                      {                          Name = "jMyAnother"'                          Fields = new List<EntityField>                          {                              new EntityField                              {                                  Name = "another_name"'                                  Ident = "MyAnotherName"'                                  FieldType = "String"'                                  IsValueType = false'                                  DataType = "String"'                                  Attributes = "DisplayName(\"My Another Name\")' Expression(\"jMyAnother.another_name\")"                              }                          }                      }                  }              };
Magic Number,Serenity.Test,FormWidthAttributeTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\ComponentModel\PropertyGrid\FormWidthAttributeTests.cs,CreateWithColMd6,The following statement contains a magic number: Assert.Equal(6' attr.Medium);
Magic Number,Serenity.Test,FormWidthAttributeTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\ComponentModel\PropertyGrid\FormWidthAttributeTests.cs,CreateWithColMd4Sm6,The following statement contains a magic number: Assert.Equal(6' attr.Small);
Magic Number,Serenity.Test,FormWidthAttributeTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\ComponentModel\PropertyGrid\FormWidthAttributeTests.cs,CreateWithColMd4Sm6,The following statement contains a magic number: Assert.Equal(4' attr.Medium);
Magic Number,Serenity.Test,FormWidthAttributeTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\ComponentModel\PropertyGrid\FormWidthAttributeTests.cs,CreateWithColMd4ReplaceWith6,The following statement contains a magic number: attr.Medium = 6;
Magic Number,Serenity.Test,FormWidthAttributeTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\ComponentModel\PropertyGrid\FormWidthAttributeTests.cs,CreateWithColMd4ReplaceWith6,The following statement contains a magic number: Assert.Equal(6' attr.Medium);
Magic Number,Serenity.Test,FormWidthAttributeTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\ComponentModel\PropertyGrid\FormWidthAttributeTests.cs,CreateWithColMd4Sm6ReplaceWith23,The following statement contains a magic number: attr.Medium = 2;
Magic Number,Serenity.Test,FormWidthAttributeTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\ComponentModel\PropertyGrid\FormWidthAttributeTests.cs,CreateWithColMd4Sm6ReplaceWith23,The following statement contains a magic number: attr.Small = 3;
Magic Number,Serenity.Test,FormWidthAttributeTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\ComponentModel\PropertyGrid\FormWidthAttributeTests.cs,CreateWithColMd4Sm6ReplaceWith23,The following statement contains a magic number: Assert.Equal(3' attr.Small);
Magic Number,Serenity.Test,FormWidthAttributeTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\ComponentModel\PropertyGrid\FormWidthAttributeTests.cs,CreateWithColMd4Sm6ReplaceWith23,The following statement contains a magic number: Assert.Equal(2' attr.Medium);
Magic Number,Serenity.Test,FormWidthAttributeTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\ComponentModel\PropertyGrid\FormWidthAttributeTests.cs,CreateWithColMd4Sm6AndRemoveMd4,The following statement contains a magic number: Assert.Equal(6' attr.Small);
Magic Number,Serenity.Test,FormWidthAttributeTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\ComponentModel\PropertyGrid\FormWidthAttributeTests.cs,CreateWithColMd4Sm6AndRemoveSm6,The following statement contains a magic number: Assert.Equal(4' attr.Medium);
Magic Number,Serenity.Test,FormWidthAttributeTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\ComponentModel\PropertyGrid\FormWidthAttributeTests.cs,CreateWithDummyValuesAndSetLg6,The following statement contains a magic number: attr.Large = 6;
Magic Number,Serenity.Test,FormWidthAttributeTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\ComponentModel\PropertyGrid\FormWidthAttributeTests.cs,CreateWithDummyValuesAndSetLg6,The following statement contains a magic number: Assert.Equal(4' attr.XSmall);
Magic Number,Serenity.Test,FormWidthAttributeTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\ComponentModel\PropertyGrid\FormWidthAttributeTests.cs,CreateWithDummyValuesAndSetLg6,The following statement contains a magic number: Assert.Equal(6' attr.Large);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Increment_SetsValueToOneIfKeyNotInCache,The following statement contains a magic number: var actual = cache.Increment("NotExistingValue"' 7);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Increment_SetsValueToOneIfKeyNotInCache,The following statement contains a magic number: Assert.Equal(7' actual);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Increment_SetsValueToOneIfKeyNotInCache,The following statement contains a magic number: Assert.Equal(7' inCache);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Increment_ProperlyIncrementsValueInCache,The following statement contains a magic number: cache.Set("ExistingValue"' 100);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Increment_ProperlyIncrementsValueInCache,The following statement contains a magic number: var actual = cache.Increment("ExistingValue"' 3);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Increment_ProperlyIncrementsValueInCache,The following statement contains a magic number: Assert.Equal(103' actual);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Increment_ProperlyIncrementsValueInCache,The following statement contains a magic number: Assert.Equal(103' inCache);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Increment_WorksMultiThreaded,The following statement contains a magic number: cache.Set("MultiThreadedValue"' 12345);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Increment_WorksMultiThreaded,The following statement contains a magic number: Parallel.ForEach(new int[100]' x =>              {                  var result = cache.Increment("MultiThreadedValue");                  lock (values)                      values.Add(result);              });
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Increment_WorksMultiThreaded,The following statement contains a magic number: Assert.Equal(100' values.Count);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Increment_WorksMultiThreaded,The following statement contains a magic number: var sorted = new long[100];
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Increment_WorksMultiThreaded,The following statement contains a magic number: Assert.Equal(i + 1 + 12345' sorted[i]);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Get_WorksMultiThreaded,The following statement contains a magic number: cache.Set("MultiThreadedValue"' 12345);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Get_WorksMultiThreaded,The following statement contains a magic number: Parallel.ForEach(new int[100]' x =>              {                  var result = cache.Get<int>("MultiThreadedValue");                  lock (values)                      values.Add(result);              });
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Get_WorksMultiThreaded,The following statement contains a magic number: Assert.Equal(12345' values.First());
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Set_WorksProperly,The following statement contains a magic number: cache.Set("SomeInt"' 13579);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Set_WorksProperly,The following statement contains a magic number: Assert.Equal(13579' actualInt);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Set_WorksMultiThreaded,The following statement contains a magic number: var threads = new int[100];
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Set_WorksMultiThreaded,The following statement contains a magic number: Parallel.ForEach(threads' x =>              {                  cache.Set("MultiThreadedValue" + x' x * 7);              });
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Set_WorksMultiThreaded,The following statement contains a magic number: Assert.Equal(threads[i] * 7' actual);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_SetWithExpiration_WorksProperly,The following statement contains a magic number: cache.Set("SomeInt"' 13579' TimeSpan.FromSeconds(5));
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_SetWithExpiration_WorksProperly,The following statement contains a magic number: cache.Set("SomeInt"' 13579' TimeSpan.FromSeconds(5));
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_SetWithExpiration_WorksProperly,The following statement contains a magic number: Assert.Equal(13579' actualInt);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_SetWithExpiration_WorksProperly,The following statement contains a magic number: Assert.Equal(13579' notExpiredInt);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_SetWithExpiration_WorksProperly,The following statement contains a magic number: now = now.AddSeconds(6);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_SetWithExpiration_WorksMultiThreaded,The following statement contains a magic number: var threads = new int[100];
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_SetWithExpiration_WorksMultiThreaded,The following statement contains a magic number: Parallel.ForEach(threads' x =>                  {                      cache.Set("MultiThreadedValue" + x' x * 7' TimeSpan.FromSeconds(5));                  });
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_SetWithExpiration_WorksMultiThreaded,The following statement contains a magic number: Parallel.ForEach(threads' x =>                  {                      cache.Set("MultiThreadedValue" + x' x * 7' TimeSpan.FromSeconds(5));                  });
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_SetWithExpiration_WorksMultiThreaded,The following statement contains a magic number: Assert.Equal(threads[i] * 7' actual);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_SetWithExpiration_WorksMultiThreaded,The following statement contains a magic number: now = now.AddSeconds(6);
Magic Number,Serenity.Test,DistributedCacheEmulatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheEmulatorTests.cs,DistributedCacheEmulator_Reset_ClearsCacheItems,The following statement contains a magic number: cache.Set("WithExpiration"' true' TimeSpan.FromHours(10));
Magic Number,Serenity.Test,DistributedCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheTests.cs,DistributedCache_Increment_UsesRegisteredDistributedCacheProvider,The following statement contains a magic number: A.CallTo(() => cache.Increment("SomeKey"' 3)).Returns(7);
Magic Number,Serenity.Test,DistributedCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheTests.cs,DistributedCache_Increment_UsesRegisteredDistributedCacheProvider,The following statement contains a magic number: A.CallTo(() => cache.Increment("SomeKey"' 3)).Returns(7);
Magic Number,Serenity.Test,DistributedCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheTests.cs,DistributedCache_Increment_UsesRegisteredDistributedCacheProvider,The following statement contains a magic number: var actual = DistributedCache.Increment("SomeKey"' 3);
Magic Number,Serenity.Test,DistributedCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheTests.cs,DistributedCache_Increment_UsesRegisteredDistributedCacheProvider,The following statement contains a magic number: Assert.Equal(7' actual);
Magic Number,Serenity.Test,DistributedCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheTests.cs,DistributedCache_Increment_UsesRegisteredDistributedCacheProvider,The following statement contains a magic number: A.CallTo(() => cache.Increment("SomeKey"' 3))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,DistributedCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheTests.cs,DistributedCache_Set_UsesRegisteredDistributedCacheProvider,The following statement contains a magic number: DistributedCache.Set("SomeKey"' 789);
Magic Number,Serenity.Test,DistributedCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheTests.cs,DistributedCache_Set_UsesRegisteredDistributedCacheProvider,The following statement contains a magic number: A.CallTo(() => cache.Set("SomeKey"' 789))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,DistributedCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheTests.cs,DistributedCache_SetWithExpiration_UsesRegisteredDistributedCacheProvider,The following statement contains a magic number: var expiration = TimeSpan.FromMinutes(5);
Magic Number,Serenity.Test,DistributedCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheTests.cs,DistributedCache_SetWithExpiration_UsesRegisteredDistributedCacheProvider,The following statement contains a magic number: DistributedCache.Set("SomeKey"' 789' expiration);
Magic Number,Serenity.Test,DistributedCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheTests.cs,DistributedCache_SetWithExpiration_UsesRegisteredDistributedCacheProvider,The following statement contains a magic number: A.CallTo(() => cache.Set("SomeKey"' 789' expiration))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,DistributedCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheTests.cs,DistributedCache_Get_UsesRegisteredDistributedCacheProvider,The following statement contains a magic number: A.CallTo(() => cache.Get<int>("SomeKey"))                      .Returns(13579);
Magic Number,Serenity.Test,DistributedCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\DistributedCacheTests.cs,DistributedCache_Get_UsesRegisteredDistributedCacheProvider,The following statement contains a magic number: Assert.Equal(13579' actual);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_UsesRegisteredCacheProviders,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "xyz");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_UsesRegisteredCacheProviders,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "xyz");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_UsesRegisteredCacheProviders,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey"' "xyz"' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_UsesRegisteredCacheProviders,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_UsesRegisteredCacheProviders,The following statement contains a magic number: A.CallTo(() => distributedCache.Set("SomeKey"' "xyz"' TimeSpan.FromMinutes(30)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_UsesRegisteredCacheProviders,The following statement contains a magic number: A.CallTo(() => distributedCache.Set("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(30)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_GetsGenerationFromDistributedCacheIfLocalCachedGenerationDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Get<object>("SomeKey" + TwoLevelCache.GenerationSuffix))                      .Returns(987UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_GetsGenerationFromDistributedCacheIfLocalCachedGenerationDoesntExist,The following statement contains a magic number: A.CallTo(() => distributedCache.Get<ulong?>("SomeGenerationKey"))                       .Returns(987UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_GetsGenerationFromDistributedCacheIfLocalCachedGenerationDoesntExist,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_GetsGenerationFromDistributedCacheIfLocalCachedGenerationDoesntExist,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_GetsGenerationFromDistributedCacheIfLocalCachedGenerationDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeGenerationKey"' 987UL' TwoLevelCache.GenerationCacheExpiration))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_ReturnsLocalCachedItemIfItExistsAndGenerationIsSame,The following statement contains a magic number: A.CallTo(() => localCache.Get<object>("SomeKey" + TwoLevelCache.GenerationSuffix))                      .Returns(789UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_ReturnsLocalCachedItemIfItExistsAndGenerationIsSame,The following statement contains a magic number: A.CallTo(() => localCache.Get<object>("SomeGenerationKey"))                      .Returns(789UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_ReturnsLocalCachedItemIfItExistsAndGenerationIsSame,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_ReturnsLocalCachedItemIfItExistsAndGenerationIsSame,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => distributedCache.Get<ulong?>("SomeGenerationKey"))                      .Returns(987UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => distributedCache.Get<ulong?>("SomeKey" + TwoLevelCache.GenerationSuffix))                      .Returns(987UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemDoesntExist,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemDoesntExist,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey"' "DistributedCacheValue"' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' 987UL' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' 987UL' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeGenerationKey"' 987UL' TwoLevelCache.GenerationCacheExpiration))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemExistsButGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Get<object>("SomeKey" + TwoLevelCache.GenerationSuffix))                      .Returns(789UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemExistsButGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Get<object>("SomeGenerationKey"))                      .Returns(135UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemExistsButGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => distributedCache.Get<ulong?>("SomeGenerationKey"))                      .Returns(987UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemExistsButGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => distributedCache.Get<ulong?>("SomeKey" + TwoLevelCache.GenerationSuffix))                      .Returns(987UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemExistsButGenerationIsDifferent,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemExistsButGenerationIsDifferent,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemExistsButGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey"' "DistributedCacheValue"' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemExistsButGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' 987UL' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemExistsButGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' 987UL' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_TriesDistributedCacheIfLocalCachedItemExistsButGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeGenerationKey"' 987UL' TwoLevelCache.GenerationCacheExpiration))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfDistributedItemCacheExistsButGenerationDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Get<object>("SomeKey" + TwoLevelCache.GenerationSuffix))                      .Returns(789UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfDistributedItemCacheExistsButGenerationDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Get<object>("SomeGenerationKey"))                      .Returns(135UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfDistributedItemCacheExistsButGenerationDifferent,The following statement contains a magic number: A.CallTo(() => distributedCache.Get<ulong?>("SomeGenerationKey"))                      .Returns(987UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfDistributedItemCacheExistsButGenerationDifferent,The following statement contains a magic number: A.CallTo(() => distributedCache.Get<ulong?>("SomeKey" + TwoLevelCache.GenerationSuffix))                      .Returns(886UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfDistributedItemCacheExistsButGenerationDifferent,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfDistributedItemCacheExistsButGenerationDifferent,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfDistributedItemCacheExistsButGenerationDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey"' "AnotherValue"' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfDistributedItemCacheExistsButGenerationDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' 987UL' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfDistributedItemCacheExistsButGenerationDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' 987UL' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfDistributedItemCacheExistsButGenerationDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeGenerationKey"' 987UL' TwoLevelCache.GenerationCacheExpiration))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfDistributedItemCacheExistsButGenerationDifferent,The following statement contains a magic number: A.CallTo(() => distributedCache.Set("SomeKey"' "AnotherValue"' TimeSpan.FromMinutes(30)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfDistributedItemCacheExistsButGenerationDifferent,The following statement contains a magic number: A.CallTo(() => distributedCache.Set("SomeKey" + TwoLevelCache.GenerationSuffix' 987UL' TimeSpan.FromMinutes(30)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfDistributedItemCacheExistsButGenerationDifferent,The following statement contains a magic number: A.CallTo(() => distributedCache.Set("SomeKey" + TwoLevelCache.GenerationSuffix' 987UL' TimeSpan.FromMinutes(30)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfLocalAndDistributedCachedItemDoesntExist,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfLocalAndDistributedCachedItemDoesntExist,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfLocalAndDistributedCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey"' "AnotherValue"' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfLocalAndDistributedCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfLocalAndDistributedCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => distributedCache.Set("SomeKey"' "AnotherValue"' TimeSpan.FromMinutes(30)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Get_CallsLoaderFunctionIfLocalAndDistributedCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => distributedCache.Set("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(30)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetSingleExpirationOverload_WorksProperly,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromMinutes(5)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetSingleExpirationOverload_WorksProperly,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey"' "AnotherValue"' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetSingleExpirationOverload_WorksProperly,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetSingleExpirationOverload_WorksProperly,The following statement contains a magic number: A.CallTo(() => distributedCache.Set("SomeKey"' "AnotherValue"' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetSingleExpirationOverload_WorksProperly,The following statement contains a magic number: A.CallTo(() => distributedCache.Set("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesRegisteredCacheProviders,The following statement contains a magic number: var value = TwoLevelCache.GetWithCustomSerializer("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "xyz"' x => "serialized:" + x' y => y == null ? null : y.Substring("serialized:".Length));
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesRegisteredCacheProviders,The following statement contains a magic number: var value = TwoLevelCache.GetWithCustomSerializer("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "xyz"' x => "serialized:" + x' y => y == null ? null : y.Substring("serialized:".Length));
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesRegisteredCacheProviders,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey"' "xyz"' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesRegisteredCacheProviders,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesRegisteredCacheProviders,The following statement contains a magic number: A.CallTo(() => distributedCache.Set("SomeKey"' "serialized:xyz"' TimeSpan.FromMinutes(30)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesRegisteredCacheProviders,The following statement contains a magic number: A.CallTo(() => distributedCache.Set("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(30)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesSerializerProperly,The following statement contains a magic number: var value = TwoLevelCache.GetWithCustomSerializer("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "xyz"' x => "serialized:" + x' y => y == null ? null : y.Substring("serialized:".Length));
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesSerializerProperly,The following statement contains a magic number: var value = TwoLevelCache.GetWithCustomSerializer("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "xyz"' x => "serialized:" + x' y => y == null ? null : y.Substring("serialized:".Length));
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesSerializerProperly,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey"' "xyz"' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesSerializerProperly,The following statement contains a magic number: A.CallTo(() => distributedCache.Set("SomeKey"' "serialized:xyz"' TimeSpan.FromMinutes(30)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesDeserializerProperly,The following statement contains a magic number: A.CallTo(() => distributedCache.Get<ulong?>("SomeGenerationKey"))                      .Returns(123UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesDeserializerProperly,The following statement contains a magic number: A.CallTo(() => distributedCache.Get<ulong?>("SomeKey" + TwoLevelCache.GenerationSuffix))                      .Returns(123UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesDeserializerProperly,The following statement contains a magic number: var value = TwoLevelCache.GetWithCustomSerializer("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "ValueIfNotFound"' x => "serialized:" + x' y => y == null ? null : y.Substring("serialized:".Length));
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetWithCustomSerializer_UsesDeserializerProperly,The following statement contains a magic number: var value = TwoLevelCache.GetWithCustomSerializer("SomeKey"' TimeSpan.FromMinutes(5)' TimeSpan.FromMinutes(30)'                      "SomeGenerationKey"' () => "ValueIfNotFound"' x => "serialized:" + x' y => y == null ? null : y.Substring("serialized:".Length));
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_UsesRegisteredCacheProviders,The following statement contains a magic number: var value = TwoLevelCache.GetLocalStoreOnly("SomeKey"' TimeSpan.FromMinutes(5)'                      "SomeGenerationKey"' () => "xyz");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_UsesRegisteredCacheProviders,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey"' "xyz"' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_UsesRegisteredCacheProviders,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' generationKey.Value' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_CallsLoaderFunctionIfLocalCachedItemGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Get<object>("SomeKey" + TwoLevelCache.GenerationSuffix))                      .Returns(123UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_CallsLoaderFunctionIfLocalCachedItemGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Get<object>("SomeGenerationKey"))                      .Returns(456UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_CallsLoaderFunctionIfLocalCachedItemGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => distributedCache.Get<ulong?>("SomeGenerationKey"))                       .Returns(987UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_CallsLoaderFunctionIfLocalCachedItemGenerationIsDifferent,The following statement contains a magic number: var value = TwoLevelCache.GetLocalStoreOnly("SomeKey"' TimeSpan.FromMinutes(5)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_CallsLoaderFunctionIfLocalCachedItemGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey"' "AnotherValue"' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_CallsLoaderFunctionIfLocalCachedItemGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' 987UL' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_CallsLoaderFunctionIfLocalCachedItemGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' 987UL' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_CallsLoaderFunctionIfLocalCachedItemGenerationIsDifferent,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeGenerationKey"' 987UL' TwoLevelCache.GenerationCacheExpiration))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_CallsLoaderFunctionIfLocalCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => distributedCache.Get<ulong?>("SomeGenerationKey"))                       .Returns(987UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_CallsLoaderFunctionIfLocalCachedItemDoesntExist,The following statement contains a magic number: var value = TwoLevelCache.GetLocalStoreOnly("SomeKey"' TimeSpan.FromMinutes(5)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_CallsLoaderFunctionIfLocalCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey"' "AnotherValue"' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_CallsLoaderFunctionIfLocalCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' 987UL' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_CallsLoaderFunctionIfLocalCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' 987UL' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_CallsLoaderFunctionIfLocalCachedItemDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeGenerationKey"' 987UL' TwoLevelCache.GenerationCacheExpiration))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_UsesLoaderFunctionIfLocalItemGenerationDoesntExist,The following statement contains a magic number: A.CallTo(() => distributedCache.Get<ulong?>("SomeGenerationKey"))                       .Returns(987UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_UsesLoaderFunctionIfLocalItemGenerationDoesntExist,The following statement contains a magic number: var value = TwoLevelCache.GetLocalStoreOnly("SomeKey"' TimeSpan.FromMinutes(5)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_UsesLoaderFunctionIfLocalItemGenerationDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey"' "AnotherValue"' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_UsesLoaderFunctionIfLocalItemGenerationDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' 987UL' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_UsesLoaderFunctionIfLocalItemGenerationDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeKey" + TwoLevelCache.GenerationSuffix' 987UL' TimeSpan.FromMinutes(5)))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_UsesLoaderFunctionIfLocalItemGenerationDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeGenerationKey"' 987UL' TwoLevelCache.GenerationCacheExpiration))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_GetsGenerationFromDistributedCacheIfLocalCachedGenerationDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Get<object>("SomeKey" + TwoLevelCache.GenerationSuffix))                      .Returns(987UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_GetsGenerationFromDistributedCacheIfLocalCachedGenerationDoesntExist,The following statement contains a magic number: A.CallTo(() => distributedCache.Get<ulong?>("SomeGenerationKey"))                       .Returns(987UL);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_GetsGenerationFromDistributedCacheIfLocalCachedGenerationDoesntExist,The following statement contains a magic number: var value = TwoLevelCache.GetLocalStoreOnly("SomeKey"' TimeSpan.FromMinutes(5)'                      "SomeGenerationKey"' () => "AnotherValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_GetLocalStoreOnly_GetsGenerationFromDistributedCacheIfLocalCachedGenerationDoesntExist,The following statement contains a magic number: A.CallTo(() => localCache.Add("SomeGenerationKey"' 987UL' TwoLevelCache.GenerationCacheExpiration))                      .MustHaveHappened(1' Times.Exactly);
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_ChangeGlobalGeneration_ExpiresItems,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromDays(5)' "GroupKey"' () => "FirstValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_ChangeGlobalGeneration_ExpiresItems,The following statement contains a magic number: value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromDays(5)' "GroupKey"' () => "SecondValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_ChangeGlobalGeneration_ExpiresItems,The following statement contains a magic number: value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromDays(5)' "GroupKey"' () => "ThirdValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_ExpireGroupItems_ExpiresItems,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromDays(5)' "GroupKey"' () => "FirstValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_ExpireGroupItems_ExpiresItems,The following statement contains a magic number: value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromDays(5)' "GroupKey"' () => "SecondValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_ExpireGroupItems_ExpiresItems,The following statement contains a magic number: value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromDays(5)' "GroupKey"' () => "ThirdValue");
Magic Number,Serenity.Test,TwoLevelCacheTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Caching\TwoLevelCacheTests.cs,TwoLevelCache_Remove_RemovesCachedItemsFromLocalAndDistributedCaches,The following statement contains a magic number: var value = TwoLevelCache.Get("SomeKey"' TimeSpan.FromDays(5)' "GroupKey"' () => "FirstValue");
Magic Number,Serenity.Test,JsonLocalTextRegistrationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\JsonLocalTextRegistrationTests.cs,JsonLocalTextRegistration_AddFromNestedDictionary_HandlesSimpleDictionary,The following statement contains a magic number: A.CallTo(() => registry.Add(A<string>._' A<string>._' A<string>._))                      .MustHaveHappened(2' Times.Exactly);
Magic Number,Serenity.Test,JsonLocalTextRegistrationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\JsonLocalTextRegistrationTests.cs,JsonLocalTextRegistration_AddFromNestedDictionary_HandlesHierarchicalDictionary,The following statement contains a magic number: A.CallTo(() => registry.Add(A<string>._' A<string>._' A<string>._))                      .MustHaveHappened(4' Times.Exactly);
Magic Number,Serenity.Test,JsonLocalTextRegistrationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\JsonLocalTextRegistrationTests.cs,JsonLocalTextRegistration_ProcessNestedDictionary_HandlesSimpleDictionary,The following statement contains a magic number: Assert.Equal(2' target.Count);
Magic Number,Serenity.Test,JsonLocalTextRegistrationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\JsonLocalTextRegistrationTests.cs,JsonLocalTextRegistration_ProcessNestedDictionary_HandlesHierarchicalDictionary,The following statement contains a magic number: Assert.Equal(4' target.Count);
Magic Number,Serenity.Test,JsonLocalTextRegistrationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\JsonLocalTextRegistrationTests.cs,JsonLocalTextRegistration_AddFromFilesInFolder_HandlesSimpleDictionary,The following statement contains a magic number: A.CallTo(() => registry.Add(A<string>._' A<string>._' A<string>._))                          .MustHaveHappened(2' Times.Exactly);
Magic Number,Serenity.Test,JsonLocalTextRegistrationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\JsonLocalTextRegistrationTests.cs,JsonLocalTextRegistration_AddFromFilesInFolder_HandlesHierarchicalDictionary,The following statement contains a magic number: A.CallTo(() => registry.Add(A<string>._' A<string>._' A<string>._))                          .MustHaveHappened(4' Times.Exactly);
Magic Number,Serenity.Test,JsonLocalTextRegistrationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\JsonLocalTextRegistrationTests.cs,JsonLocalTextRegistration_AddFromFilesInFolder_DeterminesLanguageIDsProperly,The following statement contains a magic number: A.CallTo(() => registry.Add(A<string>._' A<string>._' A<string>._))                          .MustHaveHappened(5' Times.Exactly);
Magic Number,Serenity.Test,JsonLocalTextRegistrationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\JsonLocalTextRegistrationTests.cs,JsonLocalTextRegistration_AddFromFilesInFolder_SortsFilesByFilename,The following statement contains a magic number: Assert.Equal(5' list.Count);
Magic Number,Serenity.Test,JsonLocalTextRegistrationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\JsonLocalTextRegistrationTests.cs,JsonLocalTextRegistration_AddFromFilesInFolder_SortsFilesByFilename,The following statement contains a magic number: Assert.Equal("4"' list[2]);
Magic Number,Serenity.Test,JsonLocalTextRegistrationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\JsonLocalTextRegistrationTests.cs,JsonLocalTextRegistration_AddFromFilesInFolder_SortsFilesByFilename,The following statement contains a magic number: Assert.Equal("3"' list[3]);
Magic Number,Serenity.Test,JsonLocalTextRegistrationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\JsonLocalTextRegistrationTests.cs,JsonLocalTextRegistration_AddFromFilesInFolder_SortsFilesByFilename,The following statement contains a magic number: Assert.Equal("1"' list[4]);
Magic Number,Serenity.Test,EnumLocalTextRegistrationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\EnumLocalTextRegistrationTests.cs,EnumLocalTexts_Initialize_UsesRegisteredLocalTextRegistry,The following statement contains a magic number: A.CallTo(() => registry.Add(A<string>._' A<string>._' A<string>._))                      .MustHaveHappened(2' Times.OrMore);
Magic Number,Serenity.Test,LocalTextTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\LocalTextTests.cs,LocalText_ImplicitConversionToString_UsesCurrentUICulture,The following statement contains a magic number: A.CallTo(() => registry.TryGet(A<string>._' A<string>._))                      .MustHaveHappened(2' Times.Exactly);
Magic Number,Serenity.Test,LocalTextTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\LocalTextTests.cs,LocalText_ImplicitConversionToString_ReturnsTranslationFromRegistry,The following statement contains a magic number: A.CallTo(() => registry.TryGet(A<string>._' A<string>._))                      .MustHaveHappened(2' Times.Exactly);
Magic Number,Serenity.Test,LocalTextTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\LocalTextTests.cs,LocalText_ToString_UsesCurrentUICulture,The following statement contains a magic number: A.CallTo(() => registry.TryGet(A<string>._' A<string>._))                      .MustHaveHappened(2' Times.Exactly);
Magic Number,Serenity.Test,LocalTextTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\LocalTextTests.cs,LocalText_ToString_ReturnsTranslationFromRegistry,The following statement contains a magic number: A.CallTo(() => registry.TryGet(A<string>._' A<string>._))                      .MustHaveHappened(2' Times.Exactly);
Magic Number,Serenity.Test,LocalTextTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\LocalTextTests.cs,LocalText_Get_UsesCurrentUICulture,The following statement contains a magic number: A.CallTo(() => registry.TryGet(A<string>._' A<string>._))                      .MustHaveHappened(2' Times.Exactly);
Magic Number,Serenity.Test,LocalTextTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\LocalTextTests.cs,LocalText_Get_ReturnsTranslationFromRegistry,The following statement contains a magic number: A.CallTo(() => registry.TryGet(A<string>._' A<string>._))                      .MustHaveHappened(2' Times.Exactly);
Magic Number,Serenity.Test,LocalTextTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\LocalTextTests.cs,LocalText_TryGet_UsesCurrentUICulture,The following statement contains a magic number: A.CallTo(() => registry.TryGet(A<string>._' A<string>._))                      .MustHaveHappened(2' Times.Exactly);
Magic Number,Serenity.Test,LocalTextTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Localization\LocalTextTests.cs,LocalText_TryGet_ReturnsTranslationFromRegistry,The following statement contains a magic number: A.CallTo(() => registry.TryGet(A<string>._' A<string>._))                      .MustHaveHappened(2' Times.Exactly);
Magic Number,Serenity.Test,ScriptTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Selenium\ScriptTests.cs,ScriptTestsPasses,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Serenity.Test,ScriptTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Selenium\ScriptTests.cs,ScriptTestsPasses,The following statement contains a magic number: tries++ < 3000
Magic Number,Serenity.Test,ScriptTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Selenium\ScriptTests.cs,ScriptTestsPasses,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Serenity.Test,ScriptTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Selenium\ScriptTests.cs,ScriptTestsPasses,The following statement contains a magic number: tries++ < 3000 && qunitResults == null
Magic Number,Serenity.Test.Logging,SqlLoggerTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Logging\SqlLoggerTests.cs,SqlLogger_WorksProperly,The following statement contains a magic number: var items = connection.List<SystemLogRow>(q => q.SelectTableFields().OrderBy(fld.ID' desc: true).Take(3));
Magic Number,Serenity.Test.Logging,SqlLoggerTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Logging\SqlLoggerTests.cs,SqlLogger_WorksProperly,The following statement contains a magic number: Assert.Equal(3' items.Count);
Magic Number,Serenity.Test.Logging,SqlLoggerTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Logging\SqlLoggerTests.cs,SqlLogger_WorksProperly,The following statement contains a magic number: var item = items[2];
Magic Number,Serenity.Test.Logging,SqlLoggerTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Logging\SqlLoggerTests.cs,SqlLogger_WorksProperly,The following statement contains a magic number: Assert.True(DateTime.Now.Subtract(item.EventDate.Value).TotalSeconds < 60);
Magic Number,Serenity.Test.Logging,SqlLoggerTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Logging\SqlLoggerTests.cs,SqlLogger_WorksProperly,The following statement contains a magic number: Assert.True(DateTime.Now.Subtract(item.EventDate.Value).TotalSeconds < 60);
Magic Number,Serenity.Test.Logging,SqlLoggerTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Core\Logging\SqlLoggerTests.cs,SqlLogger_WorksProperly,The following statement contains a magic number: Assert.True(DateTime.Now.Subtract(item.EventDate.Value).TotalSeconds < 60);
Magic Number,Serenity.Test.Data,DateTimeFieldKindTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DateTimeFieldKindTests.cs,Utc_Kind_DateTimeField_Deserializes_Utc_Time_From_Json_AsIs,The following statement contains a magic number: Assert.Equal(new DateTime(2017' 11' 23' 11' 40' 51' DateTimeKind.Utc)' row.Utc);
Magic Number,Serenity.Test.Data,DateTimeFieldKindTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DateTimeFieldKindTests.cs,Utc_Kind_DateTimeField_Deserializes_Utc_Time_From_Json_AsIs,The following statement contains a magic number: Assert.Equal(new DateTime(2017' 11' 23' 11' 40' 51' DateTimeKind.Utc)' row.Utc);
Magic Number,Serenity.Test.Data,DateTimeFieldKindTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DateTimeFieldKindTests.cs,Utc_Kind_DateTimeField_Deserializes_Utc_Time_From_Json_AsIs,The following statement contains a magic number: Assert.Equal(new DateTime(2017' 11' 23' 11' 40' 51' DateTimeKind.Utc)' row.Utc);
Magic Number,Serenity.Test.Data,DateTimeFieldKindTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DateTimeFieldKindTests.cs,Utc_Kind_DateTimeField_Deserializes_Utc_Time_From_Json_AsIs,The following statement contains a magic number: Assert.Equal(new DateTime(2017' 11' 23' 11' 40' 51' DateTimeKind.Utc)' row.Utc);
Magic Number,Serenity.Test.Data,DateTimeFieldKindTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DateTimeFieldKindTests.cs,Utc_Kind_DateTimeField_Deserializes_Utc_Time_From_Json_AsIs,The following statement contains a magic number: Assert.Equal(new DateTime(2017' 11' 23' 11' 40' 51' DateTimeKind.Utc)' row.Utc);
Magic Number,Serenity.Test.Data,DateTimeFieldKindTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DateTimeFieldKindTests.cs,Utc_Kind_DateTimeField_Deserializes_Utc_Time_From_Json_AsIs,The following statement contains a magic number: Assert.Equal(new DateTime(2017' 11' 23' 11' 40' 51' DateTimeKind.Utc)' row.Utc);
Magic Number,Serenity.Test.Data,DateTimeFieldKindTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DateTimeFieldKindTests.cs,Utc_Kind_DateTimeField_Converts_Unspecified_Time_From_Json_To_Utc_When_DateParseHandling_Is_DateTimeOffset,The following statement contains a magic number: now = new DateTime(now.Year' now.Month' now.Day' now.Hour' now.Minute' now.Second' 978' DateTimeKind.Local);
Magic Number,Serenity.Test.Data,DateTimeFieldKindTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DateTimeFieldKindTests.cs,Local_Kind_DateTimeField_Converts_Utc_Time_From_Json_To_Local_When_DateParseHandling_Is_DateTimeOffset,The following statement contains a magic number: now = new DateTime(now.Year' now.Month' now.Day' now.Hour' now.Minute' now.Second' 978' DateTimeKind.Local);
Magic Number,Serenity.Test.Data,DateTimeFieldKindTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DateTimeFieldKindTests.cs,Local_Kind_DateTimeField_Assumes_Unspecified_Time_From_Json_As_Local,The following statement contains a magic number: now = new DateTime(now.Year' now.Month' now.Day' now.Hour' now.Minute' now.Second' 978' DateTimeKind.Local);
Magic Number,Serenity.Test.Data,RowFields,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DateTimeFieldKindTests.cs,RowFields,The following statement contains a magic number: Overriden = new StringField(this' "ManualName"' "ManualCaption"' 999' FieldFlags.Default)                      {                          Expression = "T0.ManualExpression"                      };
Magic Number,Serenity.Test.Data,JsonCriteriaConverterDeserializationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\JsonCriteriaConverterDeserializationTests.cs,JsonCriteriaConverter_DeserializesValueCriteriaProperly,The following statement contains a magic number: Assert.Equal((long)5' right.Value);
Magic Number,Serenity.Test.Data,JsonCriteriaConverterDeserializationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\JsonCriteriaConverterDeserializationTests.cs,JsonCriteriaConverter_DeserializesComplexCriteriaProperly,The following statement contains a magic number: Assert.Equal(new object[] { 4L' 5L' 6L }' (IEnumerable)v.Value);
Magic Number,Serenity.Test.Data,JsonCriteriaConverterDeserializationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\JsonCriteriaConverterDeserializationTests.cs,JsonCriteriaConverter_DeserializesComplexCriteriaProperly,The following statement contains a magic number: Assert.Equal(new object[] { 4L' 5L' 6L }' (IEnumerable)v.Value);
Magic Number,Serenity.Test.Data,JsonCriteriaConverterDeserializationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\JsonCriteriaConverterDeserializationTests.cs,JsonCriteriaConverter_DeserializesComplexCriteriaProperly,The following statement contains a magic number: Assert.Equal(new object[] { 4L' 5L' 6L }' (IEnumerable)v.Value);
Magic Number,Serenity.Test.Data,JsonCriteriaConverterDeserializationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\JsonCriteriaConverterDeserializationTests.cs,JsonCriteriaConverter_DeserializesComplexCriteriaProperly,The following statement contains a magic number: Assert.Equal((long)7' rightRight.Value);
Magic Number,Serenity.Test.Data,JsonCriteriaConverterSerializationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\JsonCriteriaConverterSerializationTests.cs,JsonCriteriaConverter_SerializesValueCriteriaProperly,The following statement contains a magic number: var actual = (new Criteria("a") >= 5).ToJson();
Magic Number,Serenity.Test.Data,JsonCriteriaConverterSerializationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\JsonCriteriaConverterSerializationTests.cs,JsonCriteriaConverter_SerializesComplexCriteriaProperly,The following statement contains a magic number: var actual = (                  (~(new Criteria("a") >= 5 & new Criteria("c").IsNotNull())) |                     (new Criteria("x").In(4' 5' 6)) != 7).ToJson();
Magic Number,Serenity.Test.Data,JsonCriteriaConverterSerializationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\JsonCriteriaConverterSerializationTests.cs,JsonCriteriaConverter_SerializesComplexCriteriaProperly,The following statement contains a magic number: var actual = (                  (~(new Criteria("a") >= 5 & new Criteria("c").IsNotNull())) |                     (new Criteria("x").In(4' 5' 6)) != 7).ToJson();
Magic Number,Serenity.Test.Data,JsonCriteriaConverterSerializationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\JsonCriteriaConverterSerializationTests.cs,JsonCriteriaConverter_SerializesComplexCriteriaProperly,The following statement contains a magic number: var actual = (                  (~(new Criteria("a") >= 5 & new Criteria("c").IsNotNull())) |                     (new Criteria("x").In(4' 5' 6)) != 7).ToJson();
Magic Number,Serenity.Test.Data,JsonCriteriaConverterSerializationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\JsonCriteriaConverterSerializationTests.cs,JsonCriteriaConverter_SerializesComplexCriteriaProperly,The following statement contains a magic number: var actual = (                  (~(new Criteria("a") >= 5 & new Criteria("c").IsNotNull())) |                     (new Criteria("x").In(4' 5' 6)) != 7).ToJson();
Magic Number,Serenity.Test.Data,JsonCriteriaConverterSerializationTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\JsonCriteriaConverterSerializationTests.cs,JsonCriteriaConverter_SerializesComplexCriteriaProperly,The following statement contains a magic number: var actual = (                  (~(new Criteria("a") >= 5 & new Criteria("c").IsNotNull())) |                     (new Criteria("x").In(4' 5' 6)) != 7).ToJson();
Magic Number,Serenity.Test.Data,DisplayOrderTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DisplayOrderTests.cs,NextDisplayOrderValueReturnOneMoreThanMax,The following statement contains a magic number: new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .Execute(connection);
Magic Number,Serenity.Test.Data,DisplayOrderTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DisplayOrderTests.cs,NextDisplayOrderValueReturnOneMoreThanMax,The following statement contains a magic number: new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 2)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 15)                      .Execute(connection);
Magic Number,Serenity.Test.Data,DisplayOrderTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DisplayOrderTests.cs,NextDisplayOrderValueReturnOneMoreThanMax,The following statement contains a magic number: new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 2)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 15)                      .Execute(connection);
Magic Number,Serenity.Test.Data,DisplayOrderTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DisplayOrderTests.cs,NextDisplayOrderValueReturnOneMoreThanMax,The following statement contains a magic number: Assert.Equal(16' next);
Magic Number,Serenity.Test.Data,DisplayOrderTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DisplayOrderTests.cs,NextDisplayOrderValueReturnOneMoreThanMax,The following statement contains a magic number: Assert.Equal(6' next);
Magic Number,Serenity.Test.Data,DisplayOrderTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DisplayOrderTests.cs,NextDisplayOrderValueReturnOneMoreThanMax,The following statement contains a magic number: next = DisplayOrderHelper.GetNextValue(connection' DisplayOrderRow.Instance' new Criteria(fld.GroupID) == 2);
Magic Number,Serenity.Test.Data,DisplayOrderTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DisplayOrderTests.cs,NextDisplayOrderValueReturnOneMoreThanMax,The following statement contains a magic number: Assert.Equal(16' next);
Magic Number,Serenity.Test.Data,DisplayOrderTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DisplayOrderTests.cs,NextDisplayOrderValueReturnOneMoreThanMax,The following statement contains a magic number: next = DisplayOrderHelper.GetNextValue(connection' DisplayOrderRow.Instance' new Criteria(fld.GroupID) == -99);
Magic Number,Serenity.Test.Data,DisplayOrderTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Data\DisplayOrderTests.cs,NextDisplayOrderValueReturnOneMoreThanMax,The following statement contains a magic number: Assert.Equal(6' next);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,GetExpressionWithIndexWorks,The following statement contains a magic number: Assert.Equal("c"' ((ISqlQueryExtensible)query).Columns[2].Expression);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,GetExpressionsWithOutOfBoundsIndexThrowsArgumentOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => ((ISqlQueryExtensible)query).Columns[2].Expression);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,SkipThrowsExceptionIfNoOrderByForSql2000Dialect,The following statement contains a magic number: var query = new SqlQuery()                  .Dialect(SqlServer2000Dialect.Instance)                  .Select("c")                  .From("t")                  .Skip(10);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,SkipUsesWorkAroundWithOneOrderByForSql2000Dialect,The following statement contains a magic number: var query = new SqlQuery()                  .Dialect(SqlServer2000Dialect.Instance)                  .Select("c")                  .From("t")                  .OrderBy("x")                  .Skip(10);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,SkipUsesWorkAroundWithTwoOrderByForSql2000Dialect,The following statement contains a magic number: var query = new SqlQuery()                  .Dialect(SqlServer2000Dialect.Instance)                  .Select("c")                  .From("t")                  .Where("c > 2")                  .OrderBy("x")                  .OrderBy("y")                    .Skip(100)                  .Take(50);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,SkipUsesWorkAroundWithTwoOrderByForSql2000Dialect,The following statement contains a magic number: var query = new SqlQuery()                  .Dialect(SqlServer2000Dialect.Instance)                  .Select("c")                  .From("t")                  .Where("c > 2")                  .OrderBy("x")                  .OrderBy("y")                    .Skip(100)                  .Take(50);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,SkipUsesRowNumberForSql2005Dialect,The following statement contains a magic number: var query = new SqlQuery()                  .Dialect(SqlServer2005Dialect.Instance)                  .Select("c")                  .From("t")                  .OrderBy("x")                  .Skip(10)                  .Take(20);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,SkipUsesRowNumberForSql2005Dialect,The following statement contains a magic number: var query = new SqlQuery()                  .Dialect(SqlServer2005Dialect.Instance)                  .Select("c")                  .From("t")                  .OrderBy("x")                  .Skip(10)                  .Take(20);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,IntoRowCanBeChanged,The following statement contains a magic number: Assert.Equal(2' ((ISqlQueryExtensible)query).IntoRows.Count);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,TakeUsesCorrectSyntaxForSqliteDialect,The following statement contains a magic number: var query = new SqlQuery()                  .Dialect(SqliteDialect.Instance)                  .Select("c")                  .From("t")                  .Take(10);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,SkipTakeUsesCorrectSyntaxForOracleDialect,The following statement contains a magic number: var query = new SqlQuery()                  .Dialect(OracleDialect.Instance)                  .Select("c")                  .From("t")                  .Take(20)                  .Skip(50);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,SkipTakeUsesCorrectSyntaxForOracleDialect,The following statement contains a magic number: var query = new SqlQuery()                  .Dialect(OracleDialect.Instance)                  .Select("c")                  .From("t")                  .Take(20)                  .Skip(50);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,SkipTakeWithOrderByUsesCorrectSyntaxForOracleDialect,The following statement contains a magic number: var query = new SqlQuery()                  .Dialect(OracleDialect.Instance)                  .Select("c")                  .From("t")                  .OrderBy("x")                  .Take(20)                  .Skip(50);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,SkipTakeWithOrderByUsesCorrectSyntaxForOracleDialect,The following statement contains a magic number: var query = new SqlQuery()                  .Dialect(OracleDialect.Instance)                  .Select("c")                  .From("t")                  .OrderBy("x")                  .Take(20)                  .Skip(50);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,TakeUsesCorrectSyntaxForOracleDialect,The following statement contains a magic number: var query = new SqlQuery()                  .Dialect(OracleDialect.Instance)                  .Select("c")                  .From("t")                  .Take(10);
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,UnionClearsSkipTake,The following statement contains a magic number: var query = new SqlQuery()                  .Dialect(SqlServer2012Dialect.Instance)                  .From("T")                  .Skip(4)                  .Take(3)                  .Select("A")                  .Select("B")                  .OrderBy("C")                  .Union()                  .From("X")                  .Select("U"' "A")                  .Select("W"' "B")                  .OrderBy("A");
Magic Number,Serenity.Test.Data,SqlQueryTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlQueryTests.cs,UnionClearsSkipTake,The following statement contains a magic number: var query = new SqlQuery()                  .Dialect(SqlServer2012Dialect.Instance)                  .From("T")                  .Skip(4)                  .Take(3)                  .Select("A")                  .Select("B")                  .OrderBy("C")                  .Union()                  .From("X")                  .Select("U"' "A")                  .Select("W"' "B")                  .OrderBy("A");
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: connection.Insert(new GuidDetailRow                      {                          DetailID = detail11'                          MasterID = master1'                          ProductID = 1'                          Quantity = 5                      });
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: connection.Insert(new GuidDetailRow                      {                           DetailID = detail31'                          MasterID = master3'                          ProductID = 1'                          Quantity = 7                      });
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: connection.Insert(new GuidDetailRow                      {                          DetailID = detail32'                          MasterID = master3'                          ProductID = 3'                          Quantity = 10                      });
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: connection.Insert(new GuidDetailRow                      {                          DetailID = detail32'                          MasterID = master3'                          ProductID = 3'                          Quantity = 10                      });
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: var detail33 = guids[2];
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: connection.Insert(new GuidDetailRow                      {                          DetailID = detail33'                          MasterID = master3'                          ProductID = 3'                          Quantity = 12                      });
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: connection.Insert(new GuidDetailRow                      {                          DetailID = detail33'                          MasterID = master3'                          ProductID = 3'                          Quantity = 12                      });
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: Assert.Equal(5' result11.Quantity);
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: Assert.Equal(3' result3.Entity.DetailList.Count);
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: Assert.Equal(7' result31.Quantity);
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: Assert.Equal(3' result32.ProductID);
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: Assert.Equal(10' result32.Quantity);
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: var result33 = result3.Entity.DetailList[2];
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: Assert.Equal(3' result33.ProductID);
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,GuidLoadsDetailsOnRetrieve,The following statement contains a magic number: Assert.Equal(12' result33.Quantity);
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,LoadsDetailsOnRetrieve,The following statement contains a magic number: var detail11 = (int)connection.InsertAndGetID(new Int32DetailRow                      {                          MasterID = master1'                          ProductID = 1'                          Quantity = 5                      });
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,LoadsDetailsOnRetrieve,The following statement contains a magic number: var detail31 = (int)connection.InsertAndGetID(new Int32DetailRow                      {                          MasterID = master3'                          ProductID = 1'                          Quantity = 7                      });
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,LoadsDetailsOnRetrieve,The following statement contains a magic number: var detail32 = (int)connection.InsertAndGetID(new Int32DetailRow                      {                          MasterID = master3'                          ProductID = 3'                          Quantity = 10                      });
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,LoadsDetailsOnRetrieve,The following statement contains a magic number: var detail32 = (int)connection.InsertAndGetID(new Int32DetailRow                      {                          MasterID = master3'                          ProductID = 3'                          Quantity = 10                      });
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,LoadsDetailsOnRetrieve,The following statement contains a magic number: var detail33 = (int)connection.InsertAndGetID(new Int32DetailRow                      {                          MasterID = master3'                          ProductID = 3'                          Quantity = 12                      });
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,LoadsDetailsOnRetrieve,The following statement contains a magic number: var detail33 = (int)connection.InsertAndGetID(new Int32DetailRow                      {                          MasterID = master3'                          ProductID = 3'                          Quantity = 12                      });
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,LoadsDetailsOnRetrieve,The following statement contains a magic number: Assert.Equal(5' result11.Quantity);
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,LoadsDetailsOnRetrieve,The following statement contains a magic number: Assert.Equal(3' result3.Entity.DetailList.Count);
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,LoadsDetailsOnRetrieve,The following statement contains a magic number: Assert.Equal(7' result31.Quantity);
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,LoadsDetailsOnRetrieve,The following statement contains a magic number: Assert.Equal(3' result32.ProductID);
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,LoadsDetailsOnRetrieve,The following statement contains a magic number: Assert.Equal(10' result32.Quantity);
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,LoadsDetailsOnRetrieve,The following statement contains a magic number: var result33 = result3.Entity.DetailList[2];
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,LoadsDetailsOnRetrieve,The following statement contains a magic number: Assert.Equal(3' result33.ProductID);
Magic Number,Serenity.Test.Services,MasterDetailRelationBehaviorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\MasterDetailRelationBehavior\MasterDetailRelationBehaviorTests.GuidLoadsDetailsOnRetrieve.cs,LoadsDetailsOnRetrieve,The following statement contains a magic number: Assert.Equal(12' result33.Quantity);
Magic Number,Serenity.Test.PropertyGrid,GetPropertyItemsForTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\PropertyGrid\GetPropertyItemsForTests.cs,Returns_One_Element_List_For_ClassWithOneSimpleProperty,The following statement contains a magic number: var expected = new PropertyItem[]              {                  new PropertyItem { Name = "Property"' Title = "Property"' Width = 80 }              };
Magic Number,Serenity.Test.PropertyGrid,GetPropertyItemsForTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\PropertyGrid\GetPropertyItemsForTests.cs,PreservesDeclarationOrderingFor_ClassWithUnorderedProperties,The following statement contains a magic number: var expected = new PropertyItem[]              {                  new PropertyItem { Name = "Property3"' Title = "Property3"' Width = 80 }'                  new PropertyItem { Name = "Property1"' Title = "Property1"' Width = 80 }'                  new PropertyItem { Name = "Property2"' Title = "Property2"' Width = 80 }              };
Magic Number,Serenity.Test.PropertyGrid,GetPropertyItemsForTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\PropertyGrid\GetPropertyItemsForTests.cs,PreservesDeclarationOrderingFor_ClassWithUnorderedProperties,The following statement contains a magic number: var expected = new PropertyItem[]              {                  new PropertyItem { Name = "Property3"' Title = "Property3"' Width = 80 }'                  new PropertyItem { Name = "Property1"' Title = "Property1"' Width = 80 }'                  new PropertyItem { Name = "Property2"' Title = "Property2"' Width = 80 }              };
Magic Number,Serenity.Test.PropertyGrid,GetPropertyItemsForTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Services\PropertyGrid\GetPropertyItemsForTests.cs,PreservesDeclarationOrderingFor_ClassWithUnorderedProperties,The following statement contains a magic number: var expected = new PropertyItem[]              {                  new PropertyItem { Name = "Property3"' Title = "Property3"' Width = 80 }'                  new PropertyItem { Name = "Property1"' Title = "Property1"' Width = 80 }'                  new PropertyItem { Name = "Property2"' Title = "Property2"' Width = 80 }              };
Magic Number,Serenity.Testing,SeleniumTestBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Selenium\SeleniumTestBase.cs,GoToUrl,The following statement contains a magic number: Browser.Navigate().GoToUrl(UriHelper.Combine(ApplicationUrl' relativeUrl.Substring(2)));
Magic Number,Serenity.Testing,SeleniumDriverManager,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Selenium\SeleniumTestBase.cs,SeleniumDriverManager,The following statement contains a magic number: driver.Manage().Window.Size = new System.Drawing.Size(1366' 768);
Magic Number,Serenity.Testing,SeleniumDriverManager,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Selenium\SeleniumTestBase.cs,SeleniumDriverManager,The following statement contains a magic number: driver.Manage().Window.Size = new System.Drawing.Size(1366' 768);
Magic Number,Serenity.Testing,IISProcessManager,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Selenium\SeleniumTestBase.cs,IISProcessManager,The following statement contains a magic number: iisPort = TcpUtility.GetAvailableTCPPort(8000' 8100);
Magic Number,Serenity.Testing,IISProcessManager,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Selenium\SeleniumTestBase.cs,IISProcessManager,The following statement contains a magic number: iisPort = TcpUtility.GetAvailableTCPPort(8000' 8100);
Magic Number,Serenity.Testing,IISProcessManager,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Selenium\SeleniumTestBase.cs,Dispose,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Serenity.Data.Test,BracketLocatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\BracketLocatorTests.cs,ReplaceBracketContents_KeepsUnchangedContents,The following statement contains a magic number: Assert.Equal(3' calls);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdThrowsExceptionIfNotFound,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var error = Assert.Throws<InvalidOperationException>(() =>                  {                      connection.ById<FakeDisplayOrderRow>(777);                  });
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdWithEditQueryThrowsExceptionIfNotFound,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var error = Assert.Throws<InvalidOperationException>(() =>                  {                      connection.ById<FakeDisplayOrderRow>(777' q => q.Select(fld.ID));                  });
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdLoadsAllTableFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdLoadsAllTableFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdLoadsAllTableFields,The following statement contains a magic number: Assert.Equal(7' row.GroupID);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdLoadsAllTableFields,The following statement contains a magic number: Assert.Equal(5' row.DisplayOrder);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdWithEditQueryUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdWithEditQueryUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ByIdWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: Assert.Equal(7' row.GroupID);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdReturnsNullIfNotFound,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var error = Assert.Throws<InvalidOperationException>(() =>                  {                      connection.ById<FakeDisplayOrderRow>(777);                  });
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdWithEditQueryReturnsNullIfNotFound,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var error = Assert.Throws<InvalidOperationException>(() =>                  {                      connection.TryById<FakeDisplayOrderRow>(777' q => q.Select(fld.ID));                  });
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdLoadsAllTableFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdLoadsAllTableFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdLoadsAllTableFields,The following statement contains a magic number: Assert.Equal(7' row.GroupID);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdLoadsAllTableFields,The following statement contains a magic number: Assert.Equal(5' row.DisplayOrder);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdWithEditQueryUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdWithEditQueryUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryByIdWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: Assert.Equal(7' row.GroupID);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleThrowsExceptionIfNotFound,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var error = Assert.Throws<InvalidOperationException>(() =>                  {                      connection.Single<FakeDisplayOrderRow>(new Criteria(fld.GroupID) == 777);                  });
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleWithEditQueryThrowsExceptionIfNotFound,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var error = Assert.Throws<InvalidOperationException>(() =>                  {                      connection.Single<FakeDisplayOrderRow>(q =>                            q.Where(new Criteria(fld.GroupID) == 777).Select(fld.ID));                  });
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleLoadsAllTableFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleLoadsAllTableFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleLoadsAllTableFields,The following statement contains a magic number: Assert.Equal(7' row.GroupID);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleLoadsAllTableFields,The following statement contains a magic number: Assert.Equal(5' row.DisplayOrder);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleWithEditQueryUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleWithEditQueryUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,SingleWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: Assert.Equal(7' row.GroupID);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleReturnsNullIfNotFound,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var error = Assert.Throws<InvalidOperationException>(() =>                  {                      connection.Single<FakeDisplayOrderRow>(new Criteria(fld.GroupID) == 777);                  });
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleWithEditQueryReturnsNullIfNotFound,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleWithEditQueryThrowsExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var error = Assert.Throws<InvalidOperationException>(() =>                  {                      connection.TrySingle<FakeDisplayOrderRow>(q =>                           q.Where(new Criteria(fld.GroupID) == 777).Select(fld.ID));                  });
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleLoadsAllTableFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleLoadsAllTableFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleLoadsAllTableFields,The following statement contains a magic number: Assert.Equal(7' row.GroupID);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleLoadsAllTableFields,The following statement contains a magic number: Assert.Equal(5' row.DisplayOrder);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleWithEditQueryUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleWithEditQueryUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TrySingleWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: Assert.Equal(7' row.GroupID);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstThrowsExceptionIfNotFound,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var firstID = new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var firstID = new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var secondID = new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var secondID = new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var first = connection.First<FakeDisplayOrderRow>(new Criteria(fld.GroupID) == 777);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstWithEditQueryThrowsExceptionIfNotFound,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstWithEditQueryDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var firstID = (int)new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstWithEditQueryDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var firstID = (int)new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstWithEditQueryDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var secondID = (int)new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstWithEditQueryDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var secondID = (int)new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstWithEditQueryDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var first = connection.First<FakeDisplayOrderRow>(q =>                          q.Where(new Criteria(fld.GroupID) == 777).Select(fld.ID));
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstLoadsAllTableFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstLoadsAllTableFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstLoadsAllTableFields,The following statement contains a magic number: Assert.Equal(7' row.GroupID);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstLoadsAllTableFields,The following statement contains a magic number: Assert.Equal(5' row.DisplayOrder);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstWithEditQueryUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstWithEditQueryUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,FirstWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: Assert.Equal(7' row.GroupID);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstReturnsNullIfNotFound,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var firstID = new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var firstID = new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var secondID = new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var secondID = new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var first = connection.TryFirst<FakeDisplayOrderRow>(new Criteria(fld.GroupID) == 777);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstWithEditQueryReturnsNullIfNotFound,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstWithEditQueryDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var firstID = (int)new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstWithEditQueryDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var firstID = (int)new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstWithEditQueryDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var secondID = (int)new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstWithEditQueryDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var secondID = (int)new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstWithEditQueryDoesntThrowExceptionIfMoreThanOneResultReturns,The following statement contains a magic number: var first = connection.TryFirst<FakeDisplayOrderRow>(q =>                          q.Where(new Criteria(fld.GroupID) == 777).Select(fld.ID));
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstLoadsAllTableFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstLoadsAllTableFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstLoadsAllTableFields,The following statement contains a magic number: Assert.Equal(7' row.GroupID);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstLoadsAllTableFields,The following statement contains a magic number: Assert.Equal(5' row.DisplayOrder);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstWithEditQueryUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstWithEditQueryUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,TryFirstWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: Assert.Equal(7' row.GroupID);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListReturnsEmptyListIfNotFound,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListCanLoadMoreThanOneResult,The following statement contains a magic number: var firstID = new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListCanLoadMoreThanOneResult,The following statement contains a magic number: var firstID = new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListCanLoadMoreThanOneResult,The following statement contains a magic number: var secondID = new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListCanLoadMoreThanOneResult,The following statement contains a magic number: var secondID = new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListCanLoadMoreThanOneResult,The following statement contains a magic number: var list = connection.List<FakeDisplayOrderRow>(new Criteria(fld.GroupID) == 777);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListCanLoadMoreThanOneResult,The following statement contains a magic number: Assert.StrictEqual(2' list.Count);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListWithEditQueryReturnsEmptyListIfNotFound,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 1)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListWithEditQueryCanLoadMoreThanOneResult,The following statement contains a magic number: var firstID = (int)new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListWithEditQueryCanLoadMoreThanOneResult,The following statement contains a magic number: var firstID = (int)new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListWithEditQueryCanLoadMoreThanOneResult,The following statement contains a magic number: var secondID = (int)new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListWithEditQueryCanLoadMoreThanOneResult,The following statement contains a magic number: var secondID = (int)new SqlInsert(FakeDisplayOrderRow.TableName)                      .Set(fld.GroupID' 777)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 6)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListWithEditQueryCanLoadMoreThanOneResult,The following statement contains a magic number: var list = connection.List<FakeDisplayOrderRow>(q =>                          q.Where(new Criteria(fld.GroupID) == 777).Select(fld.ID));
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListWithEditQueryCanLoadMoreThanOneResult,The following statement contains a magic number: Assert.StrictEqual(2' list.Count);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListLoadsAllTableFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListLoadsAllTableFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListLoadsAllTableFields,The following statement contains a magic number: Assert.Equal(7' row.GroupID);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListLoadsAllTableFields,The following statement contains a magic number: Assert.Equal(5' row.DisplayOrder);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListWithEditQueryUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListWithEditQueryUsesTrackWithChecksMode,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: var id = (int)new SqlInsert(DisplayOrderRow.TableName)                      .Set(fld.GroupID' 7)                      .Set(fld.IsActive' 1)                      .Set(fld.DisplayOrder' 5)                      .ExecuteAndGetID(connection);
Magic Number,Serenity.Data.Test,SqlConnectionExtensionsTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\SqlConnectionExtensionsTests.cs,ListWithEditQueryLoadsNoImplicitFields,The following statement contains a magic number: Assert.Equal(7' row.GroupID);
Magic Number,Serenity.Data.Test,JoinAliasLocatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\JoinAliasLocatorTests.cs,LocateOptimizedReturnsHashSetIfExpressionContainsDoubleAliases,The following statement contains a magic number: Assert.Equal(2' aliases.Count);
Magic Number,Serenity.Data.Test,JoinAliasLocatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\JoinAliasLocatorTests.cs,LocateOptimizedReturnsHashSetIfExpressionContainsTripleAliases,The following statement contains a magic number: Assert.Equal(3' aliases.Count);
Magic Number,Serenity.Data.Test,JoinAliasLocatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\JoinAliasLocatorTests.cs,LocateOptimizedReturnsHashSetIfExpressionContainsQuadrupleAliases,The following statement contains a magic number: Assert.Equal(4' aliases.Count);
Magic Number,Serenity.Data.Test,JoinAliasLocatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\JoinAliasLocatorTests.cs,LocateOptimizedReturnsHashSetWithIgnoreCase,The following statement contains a magic number: Assert.Equal(2' aliases.Count);
Magic Number,Serenity.Data.Test,JoinAliasLocatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\JoinAliasLocatorTests.cs,EnumerateAliasesDoesntEnumerateBracedAliases,The following statement contains a magic number: Assert.Equal(2' aliases.Count);
Magic Number,Serenity.Data.Test,JoinAliasLocatorTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Sql\JoinAliasLocatorTests.cs,EnumerateAliasesDoesntEnumerateBracedAliases,The following statement contains a magic number: Assert.StrictEqual(2' aliases.Count);
Magic Number,Serenity.Navigation.Test,NavigationHelperTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Web\NavigationHelperTests.cs,ConvertToNavigationItems_AutoCreatesSecondLevelMenusWithMultiple,The following statement contains a magic number: Assert.StrictEqual(3' b.Children.Count);
Magic Number,Serenity.Navigation.Test,NavigationHelperTests,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Test\Web\NavigationHelperTests.cs,ConvertToNavigationItems_AutoCreatesSecondLevelMenusWithMultiple,The following statement contains a magic number: var e = b.Children[2];
