Implementation smell,Namespace,Class,File,Method,Description
Long Method,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,Initialize,The method has 249 lines of code.
Long Method,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetEditing,The method has 124 lines of code.
Long Method,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetFiltering,The method has 164 lines of code.
Complex Method,Serenity.Data,CustomFieldExtensions,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\CustomFields\CustomFieldExtensions.cs,ToFieldArray,Cyclomatic complexity of the method is 9
Complex Method,Serenity.Data,AliasedFields,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Extensions\AliasedFields.cs,As,Cyclomatic complexity of the method is 10
Complex Method,Serenity.Data,BooleanField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\BooleanField.cs,ValueFromJson,Cyclomatic complexity of the method is 8
Complex Method,Serenity.Data,DateTimeField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\DateTimeField.cs,ValueFromJson,Cyclomatic complexity of the method is 9
Complex Method,Serenity.Data,DateTimeOffsetField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\DateTimeOffsetField.cs,ValueFromJson,Cyclomatic complexity of the method is 9
Complex Method,Serenity.Data,Int16Field,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\Int16Field.cs,ValueFromJson,Cyclomatic complexity of the method is 9
Complex Method,Serenity.Data,Int32Field,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\Int32Field.cs,ValueFromJson,Cyclomatic complexity of the method is 9
Complex Method,Serenity.Data,Int64Field,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\Int64Field.cs,ValueFromJson,Cyclomatic complexity of the method is 9
Complex Method,Serenity.Data,TimeSpanField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\TimeSpanField.cs,ValueFromJson,Cyclomatic complexity of the method is 9
Complex Method,Serenity.Data,JsonRowConverter,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\JsonRowConverter.cs,ToJson,Cyclomatic complexity of the method is 11
Complex Method,Serenity.Data,OriginPropertyDictionary,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\OriginPropertyDictionary.cs,OriginPropertyDictionary,Cyclomatic complexity of the method is 8
Complex Method,Serenity.Data,OriginPropertyDictionary,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\OriginPropertyDictionary.cs,GetOriginProperty,Cyclomatic complexity of the method is 8
Complex Method,Serenity.Data,OriginPropertyDictionary,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\OriginPropertyDictionary.cs,OriginDisplayName,Cyclomatic complexity of the method is 8
Complex Method,Serenity.Data,Row,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\Row.cs,CloneInto,Cyclomatic complexity of the method is 10
Complex Method,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,Initialize,Cyclomatic complexity of the method is 49
Complex Method,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,InferTextualFields,Cyclomatic complexity of the method is 8
Complex Method,Serenity.Localization,EntityLocalTexts,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Extensions\EntityLocalTexts.cs,Initialize,Cyclomatic complexity of the method is 8
Complex Method,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetEditing,Cyclomatic complexity of the method is 23
Complex Method,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,AutoDetermineEditorType,Cyclomatic complexity of the method is 10
Complex Method,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetFiltering,Cyclomatic complexity of the method is 34
Complex Method,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetFormatting,Cyclomatic complexity of the method is 10
Complex Method,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetFormCssClass,Cyclomatic complexity of the method is 8
Complex Method,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,AutoWidth,Cyclomatic complexity of the method is 10
Complex Method,Serenity.PropertyGrid,PropertyInfoSource,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\PropertyInfoSource.cs,PropertyInfoSource,Cyclomatic complexity of the method is 8
Complex Method,Serenity.PropertyGrid,PropertyItemHelper,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\PropertyItemHelper.cs,GetPropertyItemsFor,Cyclomatic complexity of the method is 10
Complex Method,Serenity.PropertyGrid,PropertyItemHelper,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\PropertyItemHelper.cs,GetCustomFieldPropertyItem,Cyclomatic complexity of the method is 17
Long Parameter List,Serenity.Data,ReplacedJoin,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Extensions\AliasedFields.cs,ReplacedJoin,The method has 5 parameters. Parameters: joins' toTable' alias' onCriteria' keyword
Long Parameter List,Serenity.Data,BooleanField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\BooleanField.cs,BooleanField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,BooleanField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\BooleanField.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,ByteArrayField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\ByteArrayField.cs,ByteArrayField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,ByteArrayField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\ByteArrayField.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,CustomClassField<TValue>,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\CustomClassField.cs,CustomClassField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,DateTimeField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\DateTimeField.cs,DateTimeField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,DateTimeField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\DateTimeField.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,DateTimeOffsetField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\DateTimeOffsetField.cs,DateTimeOffsetField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,DateTimeOffsetField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\DateTimeOffsetField.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,DecimalField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\DecimalField.cs,DecimalField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,DecimalField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\DecimalField.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,DoubleField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\DoubleField.cs,DoubleField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,DoubleField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\DoubleField.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,EnumField<TEnum>,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\EnumField.cs,EnumField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,Field,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\Field.CriteriaOperators.cs,Field,The method has 6 parameters. Parameters: fields' type' name' caption' size' flags
Long Parameter List,Serenity.Data,GenericClassField<TValue>,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\GenericClassField.cs,GenericClassField,The method has 8 parameters. Parameters: collection' type' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,GenericField<TValue>,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\GenericField.cs,GenericField,The method has 8 parameters. Parameters: collection' type' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,GenericValueField<TValue>,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\GenericValueField.cs,GenericValueField,The method has 8 parameters. Parameters: collection' type' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,GuidField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\GuidField.cs,GuidField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,GuidField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\GuidField.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,Int16Field,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\Int16Field.cs,Int16Field,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,Int16Field,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\Int16Field.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,Int32Field,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\Int32Field.cs,Int32Field,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,Int32Field,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\Int32Field.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,Int64Field,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\Int64Field.cs,Int64Field,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,Int64Field,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\Int64Field.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,ListField<TItem>,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\ListField.cs,ListField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,RowField<TForeign>,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\RowField.cs,RowField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,RowListField<TForeign>,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\RowListField.cs,RowListField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,SingleField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\SingleField.cs,SingleField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,SingleField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\SingleField.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,StreamField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\StreamField.cs,StreamField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,StreamField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\StreamField.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,StringField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\StringField.cs,StringField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,StringField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\StringField.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,TimeSpanField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\TimeSpanField.cs,TimeSpanField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,TimeSpanField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\TimeSpanField.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,VariantField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\VariantField.cs,VariantField,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,VariantField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\VariantField.cs,Factory,The method has 7 parameters. Parameters: collection' name' caption' size' flags' getValue' setValue
Long Parameter List,Serenity.Data,OriginPropertyDictionary,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\OriginPropertyDictionary.cs,OriginExpression,The method has 5 parameters. Parameters: propertyName' origin' expressionSelector' aliasPrefix' extraJoins
Long Statement,Serenity.Data,CustomFieldCache,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\CustomFields\CustomFieldCache.cs,EnsureItems,The length of the statement  "            var newBySchemaTableAndGroup = new Dictionary<string' Dictionary<TableAndGroup' CacheItem>>(bySchemaTableAndGroup' StringComparer.OrdinalIgnoreCase); " is 149.
Long Statement,Serenity.Data,EntityConnectionExtensions,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Extensions\EntityConnectionExtensions.cs,ById,The length of the statement  "                throw new ValidationError("RecordNotFound"' String.Format("Can't locate '{0}' record with ID {1}!"' new TRow().Table' id)); " is 123.
Long Statement,Serenity.Data,EntityConnectionExtensions,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Extensions\EntityConnectionExtensions.cs,ById,The length of the statement  "                throw new ValidationError("RecordNotFound"' String.Format("Can't locate '{0}' record with ID {1}!"' new TRow().Table' id)); " is 123.
Long Statement,Serenity.Data,Field,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\Field.CriteriaOperators.cs,CheckUnassignedRead,The length of the statement  "                "{0} field on {1} is read before assigned a value! Make sure this field is selected in your SqlQuery. Extensions like connection.List only loads table fields by default' view / expression fields are not loaded unless explicitly selected."'  " is 239.
Long Statement,Serenity.Data,GenericValueField<TValue>,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\GenericValueField.cs,AsObject,The length of the statement  "                    throw new InvalidCastException($"Invalid cast exception while trying to set the value of {this.Name} field on {row.GetType().Name} as object."' ex); " is 148.
Long Statement,Serenity.Data,Int16Field,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\Int16Field.cs,ValueToJson,The length of the statement  "            else //if (EnumType == null) şimdilik enum tipi belirtilse de string e çevrilerek yazma işlemi iptal' flag ile daha sonra ekleyelim " is 131.
Long Statement,Serenity.Data,JsonRowConverter,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\JsonRowConverter.cs,ReadJson,The length of the statement  "                            throw new JsonSerializationException(String.Format("Could not find field '{0}' on row of type '{1}'"' fieldName' objectType.Name)); " is 131.
Long Statement,Serenity.Data,OriginPropertyDictionary,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\OriginPropertyDictionary.cs,OriginExpression,The length of the statement  "                        return originDictionary.OriginExpression(originProperty.Name' originOrigin' expressionSelector' aliasPrefix' extraJoins); " is 121.
Long Statement,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,Initialize,The length of the statement  "                            throw new InvalidProgramException(String.Format("Property {0} of row type {1} has a [LeftJoin] or [InnerJoin] attribute " + " is 123.
Long Statement,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,Initialize,The length of the statement  "                            throw new InvalidProgramException(String.Format("Property {0} of row type {1} has a [LeftJoin] or [InnerJoin] attribute " + " is 123.
Long Statement,Serenity.Data,RowRegistry,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowRegistry.cs,Initialize,The length of the statement  "                .ToDictionary(x => x.Key' x => x.ToLookup(z => z.Table' StringComparer.OrdinalIgnoreCase)' StringComparer.OrdinalIgnoreCase); " is 125.
Long Statement,Serenity.PropertyGrid,PropertyItemHelper,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\PropertyItemHelper.cs,GetCustomFieldPropertyItem,The length of the statement  "            pi.Insertable = ReferenceEquals(null' basedOnField) || ((basedOnField.Flags & FieldFlags.Insertable) == FieldFlags.Insertable); " is 127.
Long Statement,Serenity.PropertyGrid,PropertyItemHelper,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\PropertyItemHelper.cs,GetCustomFieldPropertyItem,The length of the statement  "            pi.Updatable = ReferenceEquals(null' basedOnField) || ((basedOnField.Flags & FieldFlags.Updatable) == FieldFlags.Updatable); " is 124.
Long Statement,Serenity.PropertyGrid,PropertyItemHelper,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\PropertyItemHelper.cs,GetCustomFieldPropertyItem,The length of the statement  "                var editorOptions = JsonConvert.DeserializeObject<Dictionary<string' object>>(editorOptionsJson' JsonSettings.Tolerant); " is 120.
Complex Conditional,Serenity.Data,AliasedFields,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Extensions\AliasedFields.cs,As,The conditional expression  "(alias == "t0" || alias == "T0") &&                  (fields.alias == "t0" || fields.alias == "T0")"  is complex.
Complex Conditional,Serenity.Data,EntitySqlQueryExtensions,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Extensions\EntitySqlQueryExtensions.cs,From,The conditional expression  "alias != null && (alias.Name == "t0" || alias.Name == "T0") && alias.Table == entity.Table"  is complex.
Complex Conditional,Serenity.Data,OriginPropertyDictionary,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\OriginPropertyDictionary.cs,GetOriginProperty,The conditional expression  "prefix != null &&                      prefix.Length > 0 &&                      property.Name.StartsWith(prefix) &&                      property.Name.Length > prefix.Length &&                      originDictionary.propertyByName.TryGetValue(                          property.Name.Substring(prefix.Length)' out originProperty)"  is complex.
Complex Conditional,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,InferTextualFields,The conditional expression  "String.Compare(field.ForeignTable' join.Table) == 0 &&                              (join is LeftJoin || join is InnerJoin) &&                              !Object.ReferenceEquals(null' join.OnCriteria) &&                              join.OnCriteria.ToStringIgnoreParams().IndexOf(field.Expression' StringComparison.OrdinalIgnoreCase) >= 0"  is complex.
Complex Conditional,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetEditing,The conditional expression  "item.EditorType == "Decimal" &&  					(source.BasedOnField is DoubleField ||  					 source.BasedOnField is SingleField ||  					 source.BasedOnField is DecimalField) &&  					source.BasedOnField.Size > 0 &&  					source.BasedOnField.Scale < source.BasedOnField.Size &&  					!item.EditorParams.ContainsKey("minValue") &&  					!item.EditorParams.ContainsKey("maxValue")"  is complex.
Complex Conditional,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetEditing,The conditional expression  "(item.EditorParams.ContainsKey("allowNegatives") &&  						 Convert.ToBoolean(item.EditorParams["allowNegatives"] ?? false) == true) ||  						(!item.EditorParams.ContainsKey("allowNegatives") &&  						DecimalEditorAttribute.AllowNegativesByDefault)"  is complex.
Complex Conditional,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetEditing,The conditional expression  "item.EditorType == "Integer" &&  					(source.BasedOnField is Int32Field ||  					 source.BasedOnField is Int16Field ||  					 source.BasedOnField is Int64Field) &&  					!item.EditorParams.ContainsKey("minValue") &&  					!item.EditorParams.ContainsKey("maxValue")"  is complex.
Complex Conditional,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetEditing,The conditional expression  "(item.EditorParams.ContainsKey("allowNegatives") &&  						 Convert.ToBoolean(item.EditorParams["allowNegatives"] ?? false) == true) ||  						(!item.EditorParams.ContainsKey("allowNegatives") &&  						DecimalEditorAttribute.AllowNegativesByDefault) &&  						item.EditorParams["maxValue"] != null"  is complex.
Complex Conditional,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetFormatting,The conditional expression  "valueType == typeof(Decimal) ||                      valueType == typeof(Double) ||                      valueType == typeof(Single) ||                      valueType == typeof(Int32)"  is complex.
Complex Conditional,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetSummaryType,The conditional expression  "source.GetAttribute<PrimaryKeyAttribute>() != null ||                      source.GetAttribute<IdentityAttribute>() != null ||                      source.GetAttribute<ForeignKeyAttribute>() != null ||                      source.GetAttribute<LeftJoinAttribute>() != null"  is complex.
Complex Conditional,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetSummaryType,The conditional expression  "valueType == typeof(Decimal) ||                      valueType == typeof(Double) ||                      valueType == typeof(Single) ||                      valueType == typeof(Int64) ||                      valueType == typeof(Int32) ||                      valueType == typeof(Int16)"  is complex.
Complex Conditional,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetSummaryType,The conditional expression  "valueType != typeof(String) &&                      valueType != typeof(bool) &&                      valueType != typeof(Stream) &&                      valueType != typeof(Guid) &&                      valueType != typeof(DateTime) &&                      valueType != typeof(TimeSpan)"  is complex.
Complex Conditional,Serenity.PropertyGrid,PropertyItemHelper,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\PropertyItemHelper.cs,GetPropertyItemsFor,The conditional expression  "(!source.BasedOnField.PropertyName.IsEmptyOrNull() &&                           source.BasedOnField.PropertyName != property.Name) ||                          (source.BasedOnField.PropertyName.IsEmptyOrNull() &&                           source.BasedOnField.Name != property.Name)"  is complex.
Magic Number,Serenity.Data,Field,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\Field.CriteriaOperators.cs,ForeignJoin,The following statement contains a magic number: foreignJoin = foreignJoin.Substring(0' foreignJoin.Length - 2);
Magic Number,Serenity.Data,StreamField,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\FieldTypes\StreamField.cs,CopyStream,The following statement contains a magic number: byte[] buffer = new byte[4096];
Magic Number,Serenity.Data,OriginPropertyDictionary,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\OriginPropertyDictionary.cs,OriginPropertyDictionary,The following statement contains a magic number: prefixByAlias = originByAlias.ToDictionary(x => x.Key' x =>              {                  Tuple<string' ForeignKeyAttribute' ISqlJoin> joinProperty;                  if (joinPropertyByAlias.TryGetValue(x.Key' out joinProperty))                  {                      if (joinProperty.Item3.PropertyPrefix != null)                          return joinProperty.Item3.PropertyPrefix;                        if (joinProperty.Item1.EndsWith("ID") ||                          joinProperty.Item1.EndsWith("Id"))                          return joinProperty.Item1.Substring(0' joinProperty.Item1.Length - 2);                  }                    ISqlJoin join;                  if (rowJoinByAlias.TryGetValue(x.Key' out join))                  {                      if (join.PropertyPrefix != null)                          return join.PropertyPrefix;                  }                    return DeterminePrefix(x.Select(z => z.Key));              });
Magic Number,Serenity.Data,OriginPropertyDictionary,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\OriginPropertyDictionary.cs,DeterminePrefix,The following statement contains a magic number: items.Count() < 2
Magic Number,Serenity.Data,OriginPropertyDictionary,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\OriginPropertyDictionary.cs,OriginExpression,The following statement contains a magic number: aliasPrefix.Length >= 1000
Magic Number,Serenity.Data,OriginPropertyDictionary,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\OriginPropertyDictionary.cs,OriginAttribute,The following statement contains a magic number: recursion++ > 1000
Magic Number,Serenity.Data,OriginPropertyDictionary,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\OriginPropertyDictionary.cs,OriginDisplayName,The following statement contains a magic number: recursion++ > 1000
Magic Number,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,DetermineTableName,The following statement contains a magic number: name = name.Substring(0' name.Length - 3);
Magic Number,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,Initialize,The following statement contains a magic number: object[] prm = new object[7];
Magic Number,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,Initialize,The following statement contains a magic number: prm[2] = display != null ? new LocalText(display.DisplayName) : null;
Magic Number,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,Initialize,The following statement contains a magic number: prm[3] = size != null ? size.Value : 0;
Magic Number,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,Initialize,The following statement contains a magic number: prm[4] = (defaultFlags ^ removeFlags) | addFlags;
Magic Number,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,Initialize,The following statement contains a magic number: prm[5] = null;
Magic Number,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,Initialize,The following statement contains a magic number: prm[6] = null;
Magic Number,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,Initialize,The following statement contains a magic number: prm[5] = CreateFieldGetMethod(storage);
Magic Number,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,Initialize,The following statement contains a magic number: prm[6] = CreateFieldSetMethod(storage);
Magic Number,Serenity.Data,RowFieldsBase,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\Row\RowFieldsBase.cs,CreateFieldSetMethod,The following statement contains a magic number: Type[] arguments = new Type[2];
Magic Number,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,SetWidth,The following statement contains a magic number: item.Width = widthAttr == null || widthAttr.Value == 0 ?                   (!ReferenceEquals(null' basedOnField) ? AutoWidth(basedOnField) : 80) : widthAttr.Value;
Magic Number,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,AutoWidth,The following statement contains a magic number: switch (field.Type)              {                  case FieldType.String:                      if (field.Size != 0 && field.Size <= 25)                          return Math.Max(field.Size * 6' 150);                      else if (field.Size == 0)                          return 250;                      else                          return 150;                  case FieldType.Boolean:                      return 40;                  case FieldType.DateTime:                      return 85;                  case FieldType.Time:                      return 70;                  case FieldType.Int16:                      return 55;                  case FieldType.Int32:                      return 65;                  case FieldType.Single:                  case FieldType.Double:                  case FieldType.Decimal:                      return 85;                  default:                      return 80;              }
Magic Number,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,AutoWidth,The following statement contains a magic number: switch (field.Type)              {                  case FieldType.String:                      if (field.Size != 0 && field.Size <= 25)                          return Math.Max(field.Size * 6' 150);                      else if (field.Size == 0)                          return 250;                      else                          return 150;                  case FieldType.Boolean:                      return 40;                  case FieldType.DateTime:                      return 85;                  case FieldType.Time:                      return 70;                  case FieldType.Int16:                      return 55;                  case FieldType.Int32:                      return 65;                  case FieldType.Single:                  case FieldType.Double:                  case FieldType.Decimal:                      return 85;                  default:                      return 80;              }
Magic Number,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,AutoWidth,The following statement contains a magic number: switch (field.Type)              {                  case FieldType.String:                      if (field.Size != 0 && field.Size <= 25)                          return Math.Max(field.Size * 6' 150);                      else if (field.Size == 0)                          return 250;                      else                          return 150;                  case FieldType.Boolean:                      return 40;                  case FieldType.DateTime:                      return 85;                  case FieldType.Time:                      return 70;                  case FieldType.Int16:                      return 55;                  case FieldType.Int32:                      return 65;                  case FieldType.Single:                  case FieldType.Double:                  case FieldType.Decimal:                      return 85;                  default:                      return 80;              }
Magic Number,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,AutoWidth,The following statement contains a magic number: switch (field.Type)              {                  case FieldType.String:                      if (field.Size != 0 && field.Size <= 25)                          return Math.Max(field.Size * 6' 150);                      else if (field.Size == 0)                          return 250;                      else                          return 150;                  case FieldType.Boolean:                      return 40;                  case FieldType.DateTime:                      return 85;                  case FieldType.Time:                      return 70;                  case FieldType.Int16:                      return 55;                  case FieldType.Int32:                      return 65;                  case FieldType.Single:                  case FieldType.Double:                  case FieldType.Decimal:                      return 85;                  default:                      return 80;              }
Magic Number,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,AutoWidth,The following statement contains a magic number: switch (field.Type)              {                  case FieldType.String:                      if (field.Size != 0 && field.Size <= 25)                          return Math.Max(field.Size * 6' 150);                      else if (field.Size == 0)                          return 250;                      else                          return 150;                  case FieldType.Boolean:                      return 40;                  case FieldType.DateTime:                      return 85;                  case FieldType.Time:                      return 70;                  case FieldType.Int16:                      return 55;                  case FieldType.Int32:                      return 65;                  case FieldType.Single:                  case FieldType.Double:                  case FieldType.Decimal:                      return 85;                  default:                      return 80;              }
Magic Number,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,AutoWidth,The following statement contains a magic number: switch (field.Type)              {                  case FieldType.String:                      if (field.Size != 0 && field.Size <= 25)                          return Math.Max(field.Size * 6' 150);                      else if (field.Size == 0)                          return 250;                      else                          return 150;                  case FieldType.Boolean:                      return 40;                  case FieldType.DateTime:                      return 85;                  case FieldType.Time:                      return 70;                  case FieldType.Int16:                      return 55;                  case FieldType.Int32:                      return 65;                  case FieldType.Single:                  case FieldType.Double:                  case FieldType.Decimal:                      return 85;                  default:                      return 80;              }
Magic Number,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,AutoWidth,The following statement contains a magic number: switch (field.Type)              {                  case FieldType.String:                      if (field.Size != 0 && field.Size <= 25)                          return Math.Max(field.Size * 6' 150);                      else if (field.Size == 0)                          return 250;                      else                          return 150;                  case FieldType.Boolean:                      return 40;                  case FieldType.DateTime:                      return 85;                  case FieldType.Time:                      return 70;                  case FieldType.Int16:                      return 55;                  case FieldType.Int32:                      return 65;                  case FieldType.Single:                  case FieldType.Double:                  case FieldType.Decimal:                      return 85;                  default:                      return 80;              }
Magic Number,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,AutoWidth,The following statement contains a magic number: switch (field.Type)              {                  case FieldType.String:                      if (field.Size != 0 && field.Size <= 25)                          return Math.Max(field.Size * 6' 150);                      else if (field.Size == 0)                          return 250;                      else                          return 150;                  case FieldType.Boolean:                      return 40;                  case FieldType.DateTime:                      return 85;                  case FieldType.Time:                      return 70;                  case FieldType.Int16:                      return 55;                  case FieldType.Int32:                      return 65;                  case FieldType.Single:                  case FieldType.Double:                  case FieldType.Decimal:                      return 85;                  default:                      return 80;              }
Magic Number,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,AutoWidth,The following statement contains a magic number: switch (field.Type)              {                  case FieldType.String:                      if (field.Size != 0 && field.Size <= 25)                          return Math.Max(field.Size * 6' 150);                      else if (field.Size == 0)                          return 250;                      else                          return 150;                  case FieldType.Boolean:                      return 40;                  case FieldType.DateTime:                      return 85;                  case FieldType.Time:                      return 70;                  case FieldType.Int16:                      return 55;                  case FieldType.Int32:                      return 65;                  case FieldType.Single:                  case FieldType.Double:                  case FieldType.Decimal:                      return 85;                  default:                      return 80;              }
Magic Number,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,AutoWidth,The following statement contains a magic number: switch (field.Type)              {                  case FieldType.String:                      if (field.Size != 0 && field.Size <= 25)                          return Math.Max(field.Size * 6' 150);                      else if (field.Size == 0)                          return 250;                      else                          return 150;                  case FieldType.Boolean:                      return 40;                  case FieldType.DateTime:                      return 85;                  case FieldType.Time:                      return 70;                  case FieldType.Int16:                      return 55;                  case FieldType.Int32:                      return 65;                  case FieldType.Single:                  case FieldType.Double:                  case FieldType.Decimal:                      return 85;                  default:                      return 80;              }
Magic Number,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,AutoWidth,The following statement contains a magic number: switch (field.Type)              {                  case FieldType.String:                      if (field.Size != 0 && field.Size <= 25)                          return Math.Max(field.Size * 6' 150);                      else if (field.Size == 0)                          return 250;                      else                          return 150;                  case FieldType.Boolean:                      return 40;                  case FieldType.DateTime:                      return 85;                  case FieldType.Time:                      return 70;                  case FieldType.Int16:                      return 55;                  case FieldType.Int32:                      return 65;                  case FieldType.Single:                  case FieldType.Double:                  case FieldType.Decimal:                      return 85;                  default:                      return 80;              }
Magic Number,Serenity.PropertyGrid,BasicPropertyProcessor,D:\research\architectureSmells\repos\volkanceylan_serenity\Serenity.Data.Entity\PropertyGrid\BasicPropertyProcessor\BasicPropertyProcessor.Alignment.cs,AutoWidth,The following statement contains a magic number: switch (field.Type)              {                  case FieldType.String:                      if (field.Size != 0 && field.Size <= 25)                          return Math.Max(field.Size * 6' 150);                      else if (field.Size == 0)                          return 250;                      else                          return 150;                  case FieldType.Boolean:                      return 40;                  case FieldType.DateTime:                      return 85;                  case FieldType.Time:                      return 70;                  case FieldType.Int16:                      return 55;                  case FieldType.Int32:                      return 65;                  case FieldType.Single:                  case FieldType.Double:                  case FieldType.Decimal:                      return 85;                  default:                      return 80;              }
