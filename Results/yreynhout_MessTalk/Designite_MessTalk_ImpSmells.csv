Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MessTalk,ComposeNamedModelVisitor,C:\repos\yreynhout_MessTalk\src\MessTalk\ComposeNamedModelVisitor.cs,Visit,Cyclomatic complexity of the method is 13
Long Statement,MessTalk,Program,C:\repos\yreynhout_MessTalk\src\MessTalk\Program.cs,Main,The length of the statement  "		Console.WriteLine ("MessTalk {0}.{1}. Copyright BitTacklr {2}."' typeof(Program).Assembly.GetName ().Version.Major' typeof(Program).Assembly.GetName ().Version.Minor' DateTimeOffset.UtcNow.Date.Year); " is 200.
Magic Number,MessTalk,ComposeNamedModelVisitor,C:\repos\yreynhout_MessTalk\src\MessTalk\ComposeNamedModelVisitor.cs,Visit,The following statement contains a magic number: switch (_mappingIndentation) {  case 1:  	Model.Name = scalar.Value;  	break;  case 2:  	{  		State parsed;  		_state = !Enum.TryParse (scalar.Value' out parsed) ? State.None : parsed;  	}  	break;  case 3:  	switch (_state) {  	case State.Commands:  		_model.Commands.Add (new Command {  			Name = scalar.Value  		});  		_current = _model.Commands [_model.Commands.Count - 1];  		break;  	case State.CommandDataTypes:  		_model.CommandDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.CommandDataTypes [_model.CommandDataTypes.Count - 1];  		break;  	case State.Events:  		_model.Events.Add (new Event {  			Name = scalar.Value  		});  		_current = _model.Events [_model.Events.Count - 1];  		break;  	case State.EventDataTypes:  		_model.EventDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.EventDataTypes [_model.EventDataTypes.Count - 1];  		break;  	case State.SharedDataTypes:  		_model.SharedDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.SharedDataTypes [_model.SharedDataTypes.Count - 1];  		break;  	}  	break;  case 4:  	switch ((_scalarCount % 2)) {  	case 0:  		_current.Properties.Add (new Property {  			Name = scalar.Value  		});  		break;  	case 1:  		_current.Properties [_current.Properties.Count - 1].DataType = scalar.Value;  		break;  	}  	_scalarCount++;  	break;  }  
Magic Number,MessTalk,ComposeNamedModelVisitor,C:\repos\yreynhout_MessTalk\src\MessTalk\ComposeNamedModelVisitor.cs,Visit,The following statement contains a magic number: switch (_mappingIndentation) {  case 1:  	Model.Name = scalar.Value;  	break;  case 2:  	{  		State parsed;  		_state = !Enum.TryParse (scalar.Value' out parsed) ? State.None : parsed;  	}  	break;  case 3:  	switch (_state) {  	case State.Commands:  		_model.Commands.Add (new Command {  			Name = scalar.Value  		});  		_current = _model.Commands [_model.Commands.Count - 1];  		break;  	case State.CommandDataTypes:  		_model.CommandDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.CommandDataTypes [_model.CommandDataTypes.Count - 1];  		break;  	case State.Events:  		_model.Events.Add (new Event {  			Name = scalar.Value  		});  		_current = _model.Events [_model.Events.Count - 1];  		break;  	case State.EventDataTypes:  		_model.EventDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.EventDataTypes [_model.EventDataTypes.Count - 1];  		break;  	case State.SharedDataTypes:  		_model.SharedDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.SharedDataTypes [_model.SharedDataTypes.Count - 1];  		break;  	}  	break;  case 4:  	switch ((_scalarCount % 2)) {  	case 0:  		_current.Properties.Add (new Property {  			Name = scalar.Value  		});  		break;  	case 1:  		_current.Properties [_current.Properties.Count - 1].DataType = scalar.Value;  		break;  	}  	_scalarCount++;  	break;  }  
Magic Number,MessTalk,ComposeNamedModelVisitor,C:\repos\yreynhout_MessTalk\src\MessTalk\ComposeNamedModelVisitor.cs,Visit,The following statement contains a magic number: switch (_mappingIndentation) {  case 1:  	Model.Name = scalar.Value;  	break;  case 2:  	{  		State parsed;  		_state = !Enum.TryParse (scalar.Value' out parsed) ? State.None : parsed;  	}  	break;  case 3:  	switch (_state) {  	case State.Commands:  		_model.Commands.Add (new Command {  			Name = scalar.Value  		});  		_current = _model.Commands [_model.Commands.Count - 1];  		break;  	case State.CommandDataTypes:  		_model.CommandDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.CommandDataTypes [_model.CommandDataTypes.Count - 1];  		break;  	case State.Events:  		_model.Events.Add (new Event {  			Name = scalar.Value  		});  		_current = _model.Events [_model.Events.Count - 1];  		break;  	case State.EventDataTypes:  		_model.EventDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.EventDataTypes [_model.EventDataTypes.Count - 1];  		break;  	case State.SharedDataTypes:  		_model.SharedDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.SharedDataTypes [_model.SharedDataTypes.Count - 1];  		break;  	}  	break;  case 4:  	switch ((_scalarCount % 2)) {  	case 0:  		_current.Properties.Add (new Property {  			Name = scalar.Value  		});  		break;  	case 1:  		_current.Properties [_current.Properties.Count - 1].DataType = scalar.Value;  		break;  	}  	_scalarCount++;  	break;  }  
Magic Number,MessTalk,ComposeNamedModelVisitor,C:\repos\yreynhout_MessTalk\src\MessTalk\ComposeNamedModelVisitor.cs,Visit,The following statement contains a magic number: switch (_mappingIndentation) {  case 1:  	Model.Name = scalar.Value;  	break;  case 2:  	{  		State parsed;  		_state = !Enum.TryParse (scalar.Value' out parsed) ? State.None : parsed;  	}  	break;  case 3:  	switch (_state) {  	case State.Commands:  		_model.Commands.Add (new Command {  			Name = scalar.Value  		});  		_current = _model.Commands [_model.Commands.Count - 1];  		break;  	case State.CommandDataTypes:  		_model.CommandDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.CommandDataTypes [_model.CommandDataTypes.Count - 1];  		break;  	case State.Events:  		_model.Events.Add (new Event {  			Name = scalar.Value  		});  		_current = _model.Events [_model.Events.Count - 1];  		break;  	case State.EventDataTypes:  		_model.EventDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.EventDataTypes [_model.EventDataTypes.Count - 1];  		break;  	case State.SharedDataTypes:  		_model.SharedDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.SharedDataTypes [_model.SharedDataTypes.Count - 1];  		break;  	}  	break;  case 4:  	switch ((_scalarCount % 2)) {  	case 0:  		_current.Properties.Add (new Property {  			Name = scalar.Value  		});  		break;  	case 1:  		_current.Properties [_current.Properties.Count - 1].DataType = scalar.Value;  		break;  	}  	_scalarCount++;  	break;  }  
Magic Number,MessTalk,ComposeNamedModelVisitor,C:\repos\yreynhout_MessTalk\src\MessTalk\ComposeNamedModelVisitor.cs,Visit,The following statement contains a magic number: switch ((_scalarCount % 2)) {  case 0:  	_current.Properties.Add (new Property {  		Name = scalar.Value  	});  	break;  case 1:  	_current.Properties [_current.Properties.Count - 1].DataType = scalar.Value;  	break;  }  
Missing Default,MessTalk,ComposeNamedModelVisitor,C:\repos\yreynhout_MessTalk\src\MessTalk\ComposeNamedModelVisitor.cs,Visit,The following switch statement is missing a default case: switch (_mappingIndentation) {  case 1:  	Model.Name = scalar.Value;  	break;  case 2:  	{  		State parsed;  		_state = !Enum.TryParse (scalar.Value' out parsed) ? State.None : parsed;  	}  	break;  case 3:  	switch (_state) {  	case State.Commands:  		_model.Commands.Add (new Command {  			Name = scalar.Value  		});  		_current = _model.Commands [_model.Commands.Count - 1];  		break;  	case State.CommandDataTypes:  		_model.CommandDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.CommandDataTypes [_model.CommandDataTypes.Count - 1];  		break;  	case State.Events:  		_model.Events.Add (new Event {  			Name = scalar.Value  		});  		_current = _model.Events [_model.Events.Count - 1];  		break;  	case State.EventDataTypes:  		_model.EventDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.EventDataTypes [_model.EventDataTypes.Count - 1];  		break;  	case State.SharedDataTypes:  		_model.SharedDataTypes.Add (new DataType {  			Name = scalar.Value  		});  		_current = _model.SharedDataTypes [_model.SharedDataTypes.Count - 1];  		break;  	}  	break;  case 4:  	switch ((_scalarCount % 2)) {  	case 0:  		_current.Properties.Add (new Property {  			Name = scalar.Value  		});  		break;  	case 1:  		_current.Properties [_current.Properties.Count - 1].DataType = scalar.Value;  		break;  	}  	_scalarCount++;  	break;  }  
Missing Default,MessTalk,ComposeNamedModelVisitor,C:\repos\yreynhout_MessTalk\src\MessTalk\ComposeNamedModelVisitor.cs,Visit,The following switch statement is missing a default case: switch (_state) {  case State.Commands:  	_model.Commands.Add (new Command {  		Name = scalar.Value  	});  	_current = _model.Commands [_model.Commands.Count - 1];  	break;  case State.CommandDataTypes:  	_model.CommandDataTypes.Add (new DataType {  		Name = scalar.Value  	});  	_current = _model.CommandDataTypes [_model.CommandDataTypes.Count - 1];  	break;  case State.Events:  	_model.Events.Add (new Event {  		Name = scalar.Value  	});  	_current = _model.Events [_model.Events.Count - 1];  	break;  case State.EventDataTypes:  	_model.EventDataTypes.Add (new DataType {  		Name = scalar.Value  	});  	_current = _model.EventDataTypes [_model.EventDataTypes.Count - 1];  	break;  case State.SharedDataTypes:  	_model.SharedDataTypes.Add (new DataType {  		Name = scalar.Value  	});  	_current = _model.SharedDataTypes [_model.SharedDataTypes.Count - 1];  	break;  }  
Missing Default,MessTalk,ComposeNamedModelVisitor,C:\repos\yreynhout_MessTalk\src\MessTalk\ComposeNamedModelVisitor.cs,Visit,The following switch statement is missing a default case: switch ((_scalarCount % 2)) {  case 0:  	_current.Properties.Add (new Property {  		Name = scalar.Value  	});  	break;  case 1:  	_current.Properties [_current.Properties.Count - 1].DataType = scalar.Value;  	break;  }  
