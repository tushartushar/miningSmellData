Implementation smell,Namespace,Class,File,Method,Description
Long Method,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\TaskbarIcon.cs,OnMouseEvent,The method has 105 lines of code.
Complex Method,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\TaskbarIcon.cs,OnMouseEvent,Cyclomatic complexity of the method is 17
Complex Method,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\TaskbarIcon.cs,OnToolTipChange,Cyclomatic complexity of the method is 8
Complex Method,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\TaskbarIcon.cs,ShowTrayPopup,Cyclomatic complexity of the method is 8
Complex Method,Hardcodet.Wpf.TaskbarNotification,Util,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\Util.cs,IsMatch,Cyclomatic complexity of the method is 9
Complex Method,Hardcodet.Wpf.TaskbarNotification.Interop,WindowMessageSink,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\Interop\WindowMessageSink.cs,ProcessWindowMessage,Cyclomatic complexity of the method is 18
Long Parameter List,Hardcodet.Wpf.TaskbarNotification.Interop,WinApi,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\Interop\WinApi.cs,CreateWindowEx,The method has 12 parameters. Parameters: dwExStyle' lpClassName' lpWindowName' dwStyle' x' y' nWidth' nHeight' hWndParent' hMenu' hInstance' lpParam
Long Identifier,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\TaskbarIcon.cs,,The length of the parameter TrayToolTipResolvedPropertyKey is 30.
Long Identifier,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\TaskbarIcon.cs,,The length of the parameter DoubleClickCommandParameterProperty is 35.
Long Identifier,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\TaskbarIcon.cs,,The length of the parameter DoubleClickCommandTargetProperty is 32.
Long Identifier,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\TaskbarIcon.cs,,The length of the parameter LeftClickCommandParameterProperty is 33.
Long Identifier,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\TaskbarIcon.cs,,The length of the parameter LeftClickCommandTargetProperty is 30.
Long Identifier,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\TaskbarIcon.cs,,The length of the parameter PreviewTrayContextMenuOpenEvent is 31.
Long Statement,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\TaskbarIcon.cs,ShowCustomBalloon,The length of the statement  "                    "Cannot display control [{0}] in a new balloon popup - that control already has a parent. You may consider creating new balloons every time you want to show one."; " is 163.
Magic Number,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\TaskbarIcon.cs,ShowCustomBalloon,The following statement contains a magic number: timeout.HasValue && timeout < 500
Magic Number,Hardcodet.Wpf.TaskbarNotification.Interop,TrayInfo,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\Interop\TrayInfo.cs,GetTrayLocation,The following statement contains a magic number: x = rcWorkArea.Left + 2;
Magic Number,Hardcodet.Wpf.TaskbarNotification.Interop,NotifyIconData,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\Interop\NotifyIconData.cs,CreateDefault,The following statement contains a magic number: Environment.OSVersion.Version.Major >= 6
Magic Number,Hardcodet.Wpf.TaskbarNotification.Interop,WindowMessageSink,D:\research\architectureSmells\repos\hexafluoride_byteflood\NotifyIconWpf\Interop\WindowMessageSink.cs,ProcessWindowMessage,The following statement contains a magic number: switch (lParam.ToInt32())              {                  case 0x200:                      MouseEventReceived(MouseEvent.MouseMove);                      break;                    case 0x201:                      MouseEventReceived(MouseEvent.IconLeftMouseDown);                      break;                    case 0x202:                      if (!isDoubleClick)                      {                          MouseEventReceived(MouseEvent.IconLeftMouseUp);                      }                      isDoubleClick = false;                      break;                    case 0x203:                      isDoubleClick = true;                      MouseEventReceived(MouseEvent.IconDoubleClick);                      break;                    case 0x204:                      MouseEventReceived(MouseEvent.IconRightMouseDown);                      break;                    case 0x205:                      MouseEventReceived(MouseEvent.IconRightMouseUp);                      break;                    case 0x206:                      //double click with right mouse button - do not trigger event                      break;                    case 0x207:                      MouseEventReceived(MouseEvent.IconMiddleMouseDown);                      break;                    case 520:                      MouseEventReceived(MouseEvent.IconMiddleMouseUp);                      break;                    case 0x209:                      //double click with middle mouse button - do not trigger event                      break;                    case 0x402:                      BalloonToolTipChanged(true);                      break;                    case 0x403:                  case 0x404:                      BalloonToolTipChanged(false);                      break;                    case 0x405:                      MouseEventReceived(MouseEvent.BalloonToolTipClicked);                      break;                    case 0x406:                      ChangeToolTipStateRequest(true);                      break;                    case 0x407:                      ChangeToolTipStateRequest(false);                      break;                    default:                      Debug.WriteLine("Unhandled NotifyIcon message ID: " + lParam);                      break;              }
